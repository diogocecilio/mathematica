(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3624325,      68219]
NotebookOptionsPosition[   3618667,      68058]
NotebookOutlinePosition[   3619014,      68073]
CellTagsIndexPosition[   3618971,      68070]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "NumericalDifferentialEquationAnalysis`"}]], "Input",
 CellChangeTimes->{3.692906590042447*^9, 3.692963009107127*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Forcing", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "0"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "os", " ", "pontos", " ", "e", " ", "os", " ", "pesos", 
    " ", "da", " ", "regra", " ", "de", " ", "integra\[CCedilla]\[ATilde]o"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntegrationRule", "[", "order_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vecPtosPesos", ",", "pts", ",", "w", ",", "matpsts", ",", "xi", ",", 
       "eta"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vecPtosPesos", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"GaussianQuadratureWeights", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "order"}], "+", "1"}], ",", 
          StyleBox[
           RowBox[{"-", "1"}], "TI"], ",", 
          StyleBox["1", "TI"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{"vecPtosPesos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"vecPtosPesos", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matpsts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pts", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"pts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", "j", "]"}], "]"}], " ", 
            RowBox[{"w", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "pts", "]"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "pts", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "matpsts"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6921751076778727`*^9, 3.6921751504306355`*^9}, 
   3.6926893425580797`*^9, {3.6927894363658743`*^9, 3.692789437973966*^9}, {
   3.692789477149207*^9, 3.692789477325217*^9}, {3.693210452932535*^9, 
   3.6932104534115624`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Dada", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ",
      "o", " ", "vetor", " ", "de", " ", "carga", " ", "globais"}], ",", " ", 
    RowBox[{
    "aplica", " ", "condi\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", 
     " ", "definida", " ", "em", " ", "n\[OAcute]s"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{
    "Kglob_", ",", "Fglob_", ",", "node_", ",", "type_", ",", "ek_", ",", 
     "ef_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"position", ",", "i", ",", "j", ",", 
       RowBox[{"kglob", "=", "Kglob"}], ",", 
       RowBox[{"fglob", "=", "Fglob"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"type", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"type", "\[NotEqual]", "1"}], " ", "&&", " ", 
         RowBox[{"type", "\[NotEqual]", "2"}]}], ",", 
        RowBox[{
        "Print", "[", 
         "\"\<Unknown type. Specify 0 for Dirichlet, 1 for Newman or 2 for \
Mixed.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"position", "=", 
       RowBox[{
        RowBox[{"node", " ", "2"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Dirichlet", " ", "-", " ", 
          RowBox[{"Specified", " ", "Solution"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "2"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "2"}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"position", "+", "i", "-", "1"}], ",", 
                   RowBox[{"position", "+", "j", "-", "1"}]}], "]"}], "]"}], "*=", 
                RowBox[{"ek", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fglob", "[", 
              RowBox[{"[", 
               RowBox[{"position", "+", "i", "-", "1"}], "]"}], "]"}], "=", 
             RowBox[{"ef", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "2"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"fglob", "[", 
              RowBox[{"[", 
               RowBox[{"position", "+", "i", "-", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"ef", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kglob", ",", "fglob"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6926539510483675`*^9, 3.6926539638715906`*^9}, {
  3.6926561474810925`*^9, 3.692656192199375*^9}, {3.6926597058172927`*^9, 
  3.692659720855719*^9}, {3.6926598048150663`*^9, 3.69265982969711*^9}, {
  3.6926598708811827`*^9, 3.692659908820449*^9}, {3.6931444262400007`*^9, 
  3.6931444269670424`*^9}, {3.693248051164854*^9, 3.693248051995902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Calcula", " ", "as", " ", "fun\[CCedilla]\[OTilde]es", " ", "psi", " ", 
     "as", " ", "coordenas", " ", "x", " ", "e", " ", "y"}], ",", " ", 
    RowBox[{
    "o", " ", "gradiente", " ", "de", " ", "psi", " ", "e", " ", "o", " ", 
     "jacobiano"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeData", "[", 
    RowBox[{"xis_", ",", "etas_", ",", "Coords_", ",", "order_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "psis", ",", "GradPhi", ",", "x", ",", "y", ",", "Jac", ",", "xi", ",", 
       "eta", ",", "co", ",", "dx", ",", "dy"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"psis", "=", 
        RowBox[{"GeneratePsis", "[", "order", "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"psis", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "-", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "+", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "-", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "eta"}], ")"}]}]}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"psis", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{
             RowBox[{"-", "eta"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "xi"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "eta"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "xi"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "-", "1"}], ")"}]}]}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"psis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{
           RowBox[{"Coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "psis", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"psis", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{
           RowBox[{"Coords", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "psis", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"GradPhi", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"psis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "xi"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"psis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "eta"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "psis", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Jac", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"x", ",", "xi"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"y", ",", "xi"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"x", ",", "eta"}], "]"}], ",", 
           RowBox[{"D", "[", 
            RowBox[{"y", ",", "eta"}], "]"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"psis", ",", "GradPhi", ",", "Jac", ",", "x", ",", "y"}], 
         "}"}], "/.", 
        RowBox[{"xi", "\[Rule]", "xis"}]}], "/.", 
       RowBox[{"eta", "\[Rule]", "etas"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6926888356909685`*^9, 3.6926888372977715`*^9}, {
  3.692689656086034*^9, 3.692689666028653*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "da", " ",
     "equa\[CCedilla]\[ATilde]o", " ", "diferencial", " ", "do", " ", 
    "problema", " ", "de", " ", "elasticidade", " ", 
    RowBox[{"(", 
     RowBox[{"ek", " ", "e", " ", "ef"}], ")"}], " ", "em", " ", "cada", " ", 
    "ponto", " ", "de", " ", "integra\[CCedilla]\[ATilde]o"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContributeElastic", "[", 
    RowBox[{"data_", ",", "weight_", ",", "order_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "C", ",", "k", ",", "B", ",", "fu", ",", "InvJac", ",", "GradPsi", ",", 
       "nnodes", ",", "Jac", ",", "GradPhi", ",", "DetJ", ",", "wpLocal", ",",
        "psi", ",", "ek", ",", "ef", ",", "x", ",", "y", ",", "i", ",", "j"}],
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"psi", ",", "GradPsi", ",", "Jac", ",", "x", ",", "y"}], 
        "}"}], "=", "data"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nnodes", "=", 
       RowBox[{"Length", "[", "psi", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"InvJac", "=", 
       RowBox[{"Inverse", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"DetJ", "=", 
       RowBox[{"Det", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"GradPhi", "=", 
       RowBox[{"InvJac", ".", 
        RowBox[{"Transpose", "[", "GradPsi", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"nu", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"nu", " ", 
        RowBox[{"young", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"nu", "^", "2"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wpLocal", "=", 
       RowBox[{"weight", "  ", "DetJ"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fu", "=", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", " ", "nnodes"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], "+", "fu"}], "]"}], "]"}], " ", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Forcing", "[", 
              RowBox[{"x", ",", "y"}], "]"}], " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", "wpLocal"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "i"}], "+", "1", "+", "fu"}], ")"}], "]"}], 
           "]"}], "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Forcing", "[", 
              RowBox[{"x", ",", "y"}], "]"}], " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", "wpLocal"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", " ", "nnodes"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], "  ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692545357034218*^9, 3.6925453634278316`*^9}, {
   3.692546403587562*^9, 3.692546408918974*^9}, {3.6925465754563227`*^9, 
   3.69254657933013*^9}, {3.6926904948937445`*^9, 3.692690510306571*^9}, 
   3.692690686961885*^9, {3.692690820005928*^9, 3.6926908721650395`*^9}, {
   3.692691654853261*^9, 3.6926916566638646`*^9}, 3.6926973580710154`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", 
    " ", "o", " ", "vetor", " ", "de", " ", "carga", " ", "elementar"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CalcStiffElastic", "[", 
    RowBox[{"order_", ",", "elcoords_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Dphi", ",", "vecPtosPesos", ",", "Dpsi", ",", "nnodes", ",", "Dx", ",",
        "DetJac", ",", "psi", ",", "InverseJac", ",", "InverseDx", ",", 
       "gradphixy", ",", "wlocal", ",", "x", ",", "i", ",", "ef", ",", "ek", 
       ",", "j", ",", "psis", ",", "GradPhi", ",", "J", ",", "DetJ", ",", 
       "InvJ", ",", "wpLocal", ",", "laplacianContribute", ",", 
       "L2Contribute", ",", "Ex", ",", "F", ",", "y", ",", "f", ",", "xi", 
       ",", "eta", ",", "w", ",", "intrule", ",", "intpts", ",", "l", ",", 
       "h", ",", "Jac", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"intrule", "=", 
       RowBox[{"IntegrationRule", "[", "order", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intpts", "=", 
       RowBox[{"Length", "[", "intrule", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nnodes", "=", "4"}], "  ", ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nnodes", "=", "9"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<intrule =\>\"", ",", "intrule"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<intpts =\>\"", ",", "intpts"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"l", "=", "1"}], ",", 
        RowBox[{"l", "\[LessEqual]", "intpts"}], ",", 
        RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"h", "=", "1"}], ",", 
           RowBox[{"h", "\[LessEqual]", " ", "intpts"}], ",", 
           RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"xi", "=", 
             RowBox[{"intrule", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "h", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"eta", "=", 
             RowBox[{"intrule", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "h", ",", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"w", "=", 
             RowBox[{"intrule", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "h", ",", "3"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<xi = \>\"", ",", "xi"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<eta = \>\"", ",", "eta"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<elcoords = \>\"", ",", "elcoords"}], "]"}], ";"}],
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"data", "=", 
             RowBox[{"ComputeData", "[", 
              RowBox[{"xi", ",", "eta", ",", "elcoords", ",", "order"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ek", ",", "ef"}], "}"}], "+=", 
             RowBox[{"ContributeElastic", "[", 
              RowBox[{"data", ",", "w", ",", "order"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6925454826660705`*^9, 3.6925454850372744`*^9}, {
  3.69268888756706*^9, 3.692688907551695*^9}, {3.6926889485605807`*^9, 
  3.692688948841381*^9}, {3.692690481851121*^9, 3.6926904874993315`*^9}, {
  3.6926906611106396`*^9, 3.6926906910762963`*^9}, {3.6926908908312764`*^9, 
  3.692690894250683*^9}, {3.692691055266967*^9, 3.6926910578877716`*^9}, {
  3.6926928051765194`*^9, 3.69269280542612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", 
    " ", "o", " ", "vetor", " ", "de", " ", "carga", " ", "globais"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Assemble", "[", 
    RowBox[{"allcoords_", ",", "topol_", ",", "order_", ",", "forcing_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fu", ",", "nels", ",", "p", ",", "i", ",", "j", ",", "sz", ",", 
       "Kglob", ",", "k", ",", "rows", ",", "cols", ",", "el", ",", "colglob",
        ",", "rowglob", ",", "Fglob", ",", "Ke", ",", "Fe", ",", "ik", ",", 
       "co"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "order"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nels", "=", 
       RowBox[{"Length", "[", "allcoords", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"nnodes", "=", 
         RowBox[{
          RowBox[{"Length", "[", "allcoords", "]"}], " ", "order"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sz", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "nnodes", "]"}], "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rows", "=", "4"}], "  ", ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rows", "=", "9"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"cols", "=", "rows"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Kglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", " ", "sz", "}"}], ",", 
         RowBox[{"{", " ", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", "nels"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"co", "=", 
          RowBox[{
           RowBox[{"allcoords", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "//", "N"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Ke", ",", "Fe"}], "}"}], "=", 
          RowBox[{"CalcStiffElastic", "[", 
           RowBox[{"order", ",", "co"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Ke = \>\"", ",", 
             RowBox[{"Ke", "//", "MatrixForm"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"fu", "=", 
          RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "rows"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rowglob", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "cols"}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"colglob", "=", 
                RowBox[{"topol", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "colglob"}], "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "j"}], "+", "fu"}]}], "]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Fglob", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", "rowglob"}], "+", "fu"}], "]"}], "]"}], "+=", 
             RowBox[{"Fe", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Kglob", ",", "Fglob"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692545451909808*^9, 3.692545469675446*^9}, {
  3.692545510452922*^9, 3.692545511201723*^9}, {3.692545793679907*^9, 
  3.6925457954467106`*^9}, {3.6925458429824076`*^9, 3.692545865700255*^9}, {
  3.6925460595858526`*^9, 3.6925462628694825`*^9}, {3.6925467223450174`*^9, 
  3.69254672393622*^9}, {3.6925491039205427`*^9, 3.6925491061367464`*^9}, {
  3.692549271027661*^9, 3.692549301931526*^9}, {3.692549411690539*^9, 
  3.692549438478394*^9}, {3.6925494705746593`*^9, 3.692549478778674*^9}, {
  3.6925496637512426`*^9, 3.6925496657988462`*^9}, {3.6926603940859056`*^9, 
  3.6926604409134073`*^9}, {3.6926605244671545`*^9, 3.692660528968566*^9}, {
  3.692685652614095*^9, 3.6926856587605057`*^9}, {3.6926889273943396`*^9, 
  3.692688944736574*^9}, {3.6926928345261717`*^9, 3.6926928347133713`*^9}, {
  3.6926973680238333`*^9, 3.692697375387046*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dado", " ", "dois", " ", "ids", " ", "extremos"}], ",", " ", 
    RowBox[{
    "retorna", " ", "uma", " ", "topologia", " ", "e", " ", "as", " ", 
     "coordenas", " ", "completas", " ", "intermedi\[AAcute]rias", " ", "aos",
      " ", "n\[OAcute]s", " ", "de", " ", "um", " ", "elemento", " ", 
     "linear"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DefineLineNodes", "[", 
     RowBox[{"id1_", ",", "id2_", ",", "nnodes_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "A", ",", "B", ",", "tol", ",", "linenodes", ",", "i", ",", "ids", ",",
         "elss"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A", "=", 
        RowBox[{"nnodes", "[", 
         RowBox[{"[", "id1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"nnodes", "[", 
         RowBox[{"[", "id2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"linenodes", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ids", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"x", "=", 
           RowBox[{"x", " ", "Linha", " ", "vertical"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"B", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "tol"}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"A", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "tol"}]}], ",",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"B", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"linenodes", ",", 
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"ids", ",", "i"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"y", "=", 
            RowBox[{"y", " ", "Linha", " ", "horizontal"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"B", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", "tol"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"A", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", "tol"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"B", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"linenodes", ",", 
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"ids", ",", "i"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"elss", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"Length", "[", "ids", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"elss", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nnodes", "[", 
               RowBox[{"[", " ", 
                RowBox[{"ids", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"nnodes", "[", 
               RowBox[{"[", " ", 
                RowBox[{"ids", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "}"}]}], " ", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"elss", ",", "ids"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "dado", " ", "a", " ", "ordem", " ", "polinomial", " ", "gera", " ", "as",
      " ", "fun\[CCedilla]\[OTilde]es", " ", "de", " ", "forma", " ", 
     "definidas", " ", "no", " ", "elemento", " ", "mestre"}], " ", "-", "  ",
     "lineares"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeShape", "[", 
    RowBox[{"order_", ",", "var_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "npoints", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"npoints", "=", 
       RowBox[{"order", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab3", "[", 
        RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[Equal]", "i"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"poli3", "[", 
        RowBox[{"j_", ",", "n_"}], "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"n", "-", "1"}], ")"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"tab3", "[", 
             RowBox[{"j", ",", "n"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPoli", "[", "n_", "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"InterpolatingPolynomial", "[", 
          RowBox[{
           RowBox[{"poli3", "[", 
            RowBox[{"i", ",", "n"}], "]"}], ",", "var"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"ListPoli", "[", "npoints", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "list", "]"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListPoli", "[", "npoints", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.693259194985586*^9, 3.693259206842264*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "linear"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineDirichlet", "[", 
     RowBox[{
     "EK_", ",", "EF_", ",", "nodes_", ",", "id1_", ",", "id2_", ",", "ek_", 
      ",", "ef_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "y1", ",", "y2", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", 
        RowBox[{"Ek", "=", "EK"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"els", ",", "ids"}], "}"}], "=", 
        RowBox[{"DefineLineNodes", "[", 
         RowBox[{"id1", ",", "id2", ",", "nodes"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2"}], "}"}], "=", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "id1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y1", ",", "y2"}], "}"}], "=", 
          RowBox[{"nodes", "[", 
           RowBox[{"[", "id2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"x2", "-", "x1"}], "]"}], "<", 
            RowBox[{"10", "^", 
             RowBox[{"-", "3"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            StyleBox[
             RowBox[{"dir", "=", "2"}],
             FontWeight->"Bold"], 
            StyleBox[";",
             FontWeight->"Bold"], 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Bold"], 
            RowBox[{
             StyleBox["coord",
              FontWeight->"Bold"], 
             StyleBox["=",
              FontWeight->"Bold"], 
             RowBox[{"nodes", "[", 
              RowBox[{"[", 
               RowBox[{"id1", ",", "2"}], "]"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            StyleBox[
             RowBox[{"dir", "=", "1"}],
             FontWeight->"Bold"], 
            StyleBox[";",
             FontWeight->"Bold"], 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Bold"], 
            RowBox[{
             StyleBox["coord",
              FontWeight->"Bold"], 
             StyleBox["=",
              FontWeight->"Bold"], 
             RowBox[{"nodes", "[", 
              RowBox[{"[", 
               RowBox[{"id1", ",", "1"}], "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         StyleBox[
          RowBox[{"tol", "=", 
           RowBox[{"10", "^", 
            RowBox[{"-", "4"}]}]}],
          FontWeight->"Bold"], 
         StyleBox[";",
          FontWeight->"Bold"], "\[IndentingNewLine]", 
         StyleBox[
          RowBox[{"radius", "=", "0."}],
          FontWeight->"Bold"], 
         StyleBox[";",
          FontWeight->"Bold"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         StyleBox[
          RowBox[{
           RowBox[{"{", 
            RowBox[{"els", ",", "ids"}], "}"}], "=", 
           RowBox[{"ComputeBoundaryTopol", "[", 
            RowBox[{
            "dir", ",", "coord", ",", "radius", ",", "nnodes", ",", "tol", 
             ",", "order"}], "]"}]}],
          FontWeight->"Bold"], 
         StyleBox[";",
          FontWeight->"Bold"]}], 
        StyleBox[
         StyleBox[
          RowBox[{"*", ")"}]],
         FontWeight->"Bold"]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<els = \>\"", ",", "els"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<ids = \>\"", ",", "ids"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"el", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "2"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "1"}], ",", 
               RowBox[{"k", "\[LessEqual]", "2"}], ",", 
               RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ek", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"ids", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", "j", "-", 
                    "2"}], ",", 
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"ids", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", "k", "-", "2"}]}], 
                   " ", "]"}], "]"}], "*=", 
                 RowBox[{"ek", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "k"}], "]"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"ids", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", "j", "-", 
                 "2"}], "]"}], "]"}], "=", 
              RowBox[{"ef", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Ek", ",", "Ef"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.693258245090255*^9, 3.6932582667854958`*^9}, {
  3.693258669647538*^9, 3.6932588365990877`*^9}, {3.693258886623949*^9, 
  3.6932589001907244`*^9}, {3.6932590895655565`*^9, 3.6932590944628363`*^9}, {
  3.693259224133253*^9, 3.6932592277734613`*^9}, {3.693265166339963*^9, 
  3.6932651727713313`*^9}, {3.693265276709276*^9, 3.6932652785883837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "solu\[CCedilla]\[ATilde]o", " ", "e", " ", "a", 
    " ", "derivada", " ", "definida", " ", "por", " ", "elementos"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeSol", "[", 
    RowBox[{"topol_", ",", "coords_", ",", "order_", ",", "coefs_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "X", ",", "InvJ", ",", "GradPhi", ",", "GradPsi", ",", "nels", ",", 
       "dsol", ",", "xa", ",", "xb", ",", 
       RowBox[{"k", "=", "0"}], ",", "i", ",", "phi", ",", "sol", ",", 
       "phisz", ",", "j", ",", "xx", ",", "J", ",", "co", ",", "h", ",", 
       RowBox[{"x", "=", "0"}], ",", "psis", ",", "id", ",", 
       RowBox[{"y", "=", "0"}], ",", "xi", ",", "eta", ",", "Jac", ",", 
       "DetJac", ",", "kk"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"psis", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "-", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "+", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "eta"}], ")"}]}], ",", 
            RowBox[{"0.25", 
             RowBox[{"(", 
              RowBox[{"1", "-", "xi"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "+", "eta"}], ")"}]}]}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"psis", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{"xi", " ", "eta", 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
            RowBox[{
             RowBox[{"-", "eta"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "xi"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "eta"}], 
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "+", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"-", "xi"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"xi", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xi", "-", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"eta", "-", "1"}], ")"}]}]}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nels", "=", 
       RowBox[{"Length", "[", "topol", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dsol", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nels"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", "0."}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", "0."}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"kk", "=", "4"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"kk", "=", "9"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "kk"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"id", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x", "+=", 
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", 
                RowBox[{"id", ",", "1"}], "]"}], "]"}], " ", 
              RowBox[{"psis", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"y", "+=", 
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", 
                RowBox[{"id", ",", "2"}], "]"}], "]"}], " ", 
              RowBox[{"psis", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Jac", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"x", ",", "xi"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"y", ",", "xi"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"x", ",", "eta"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"y", ",", "eta"}], "]"}]}], "}"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"GradPsi", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"psis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "xi"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"psis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "eta"}], "]"}]}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "psis", "]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"DetJac", "=", 
          RowBox[{"Det", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"InvJ", "=", 
          RowBox[{"Inverse", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"GradPhi", "=", 
          RowBox[{"InvJ", ".", 
           RowBox[{"Transpose", "[", "GradPsi", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "kk"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"id", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"psis", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", " ", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"psis", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", "duxdx", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j"}], "]"}], "]"}], 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", " ", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", "duxdy", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j"}], "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", "duydx", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j"}], "]"}], "]"}], 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", "duydy", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j"}], "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", "x"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", "y"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"sol", ",", "dsol", ",", "X"}], "}"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692655567218246*^9, 3.692655589323485*^9}, {
   3.692655653345997*^9, 3.6926557012084894`*^9}, {3.692689128654703*^9, 
   3.692689175712386*^9}, 3.6927168072628193`*^9, {3.6927168826039553`*^9, 
   3.692716889436767*^9}, {3.692791928845436*^9, 3.692792061317013*^9}, {
   3.692792522361383*^9, 3.692792562921703*^9}, {3.6927930290853662`*^9, 
   3.6927931047416935`*^9}, {3.6927931890395145`*^9, 3.6927931967969584`*^9}, 
   3.6927932692921047`*^9, {3.6927978102998357`*^9, 3.6927978369723616`*^9}, {
   3.692797874116486*^9, 3.6927978933395853`*^9}, {3.6929036265779467`*^9, 
   3.6929036333933363`*^9}, {3.6931443637604275`*^9, 3.693144364226454*^9}, {
   3.693245730119098*^9, 3.6932457343023376`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6927417645891333`*^9, 3.692741780533046*^9}, 
   3.6928845635479293`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "as", " ", "tens\[OTilde]es", " ", "nos", " ", 
    "elementos"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeStress", "[", 
     RowBox[{"dsol_", ",", "young_", ",", "nu_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"strain", ",", "gradu", ",", 
        RowBox[{"lambda", "=", 
         RowBox[{"young", " ", 
          RowBox[{"nu", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "nu"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "nu"}]}], ")"}]}], ")"}]}]}]}], ",", 
        RowBox[{"mu", "=", 
         RowBox[{"young", "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ",", "dudx", ",", 
        "dudy", ",", "dvdx", ",", "dvdy", ",", "i", ",", "eps", ",", "stress",
         ",", "ex", ",", "ey", ",", "exy", ",", "C"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"strain", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "dsol", "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "dsol", "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "dsol", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dudx", ",", "dudy", ",", "dvdx", ",", "dvdy"}], "}"}], 
           "=", 
           RowBox[{"dsol", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ex", "=", "dudx"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ey", "=", "dvdy"}], ";", "\[IndentingNewLine]", 
          RowBox[{"exy", "=", 
           RowBox[{"(", 
            RowBox[{"dudy", "+", "dvdx"}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"strain", "=", 
           RowBox[{"{", 
            RowBox[{"ex", ",", "ey", ",", "exy"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "1"}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<{dudx,dudy,dvdx,dvdy} = \>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"dudx", ",", "dudy", ",", "dvdx", ",", "dvdy"}], 
                 "}"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"C", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", "3", "}"}], ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"young", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"nu", "^", "2"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"nu", " ", 
            RowBox[{"young", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"nu", "^", "2"}]}], ")"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "3"}], "]"}], "]"}], "=", 
           RowBox[{"young", "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"stress", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"C", ".", "strain"}]}], ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"gradu", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dudx", ",", "dudy"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dvdx", ",", "dvdy"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"eps", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"gradu", "+", 
              RowBox[{"Transpose", "[", "gradu", "]"}]}], ")"}], "/", "2"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"stress", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"lambda", " ", 
             RowBox[{"Tr", "[", 
              RowBox[{"eps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", "mu", " ", 
             RowBox[{"eps", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"stress", ",", "strain"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.692884568145192*^9, 3.692884624944441*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "linear", " ", "curvo"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{
     "EF_", ",", "fx_", ",", "order_", ",", "vecnodes_", ",", "vecids_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Jac", ",", "DetJ", ",", "yy", ",", 
        RowBox[{"vertOrHor", "=", "0"}], ",", "h", ",", "F1", ",", "F2", ",", 
        "F3", ",", "x0", ",", "xf", ",", "y0", ",", "yf", ",", "k", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "node", ",", "iel", ",", 
        RowBox[{"id", "=", 
         RowBox[{"{", "}"}]}], ",", "idy", ",", "cos", ",", "sin", ",", 
        "cos1", ",", "cos2", ",", "cos3", ",", "sin1", ",", "sin2", ",", 
        "sin3", ",", "x1", ",", "x2", ",", "x3", ",", "y1", ",", "y2", ",", 
        "y3", ",", "h1", ",", "h2", ",", "co1", ",", "co2", ",", "co3", ",", 
        "coord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "vecids", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "el"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"shapes", "=", 
           RowBox[{"ComputeShape", "[", 
            RowBox[{"order", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"co", "=", 
           RowBox[{"vecnodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"x0", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"xf", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "co", "]"}], ",", "1"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"y0", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"yf", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "co", "]"}], ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"h", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xf", "-", "x0"}], ")"}], "^", "2"}], " ", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yf", "-", "y0"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"cos", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sin", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               RowBox[{"yf", "-", "y0"}], ")"}], "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"vertOrHor", "=", "1"}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"cos", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";"}], "*)"}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               RowBox[{"xf", "-", "x0"}], ")"}], "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"vertOrHor", "=", "2"}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"cos", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";"}], "*)"}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vertOrHor", "\[Equal]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<(*inclinado*)\>\"", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"xx", "=", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"shapes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"co", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "vertOrHor", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"J", "=", 
           RowBox[{"D", "[", 
            RowBox[{"xx", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vecPtosPesos", "=", 
           RowBox[{"GaussianQuadratureWeights", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"4", " ", "order"}], "+", "1"}], ",", 
             StyleBox[
              RowBox[{"-", "1"}], "TI"], ",", 
             StyleBox["1", "TI"]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xix", ",", "w"}], "}"}], "=", 
           RowBox[{"Transpose", "[", "vecPtosPesos", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"integralxi1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"fx", "[", "xx", "]"}], 
                    RowBox[{"shapes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "J"}], ")"}], "/.", 
                  RowBox[{"xi", "\[Rule]", 
                   RowBox[{"xix", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "xix", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "shapes", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "x", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "y", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "cos"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "sin"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F3", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", " ", 
               RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "cos"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F3", " ", "cos"}]}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Ef"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6932330599021997`*^9, 3.6932330895718966`*^9}, {
  3.6932331676493626`*^9, 3.6932331937148533`*^9}, {3.6932332498780656`*^9, 
  3.693233270267232*^9}, {3.6932333451575155`*^9, 3.693233360052367*^9}, {
  3.6932334003086696`*^9, 3.693233402155775*^9}, {3.6932334371567774`*^9, 
  3.693233490096805*^9}, {3.693233522163639*^9, 3.6932335969729185`*^9}, {
  3.6932336271516447`*^9, 3.6932336376822467`*^9}, {3.693235252728622*^9, 
  3.693235254291712*^9}, {3.6932353156632214`*^9, 3.693235320045472*^9}, {
  3.6932383263544235`*^9, 3.693238329704615*^9}, {3.69324574973522*^9, 
  3.69324575025825*^9}, {3.6932488934810324`*^9, 3.6932488984503164`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "linear", " ", "curvo"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineNewmanCurverd", "[", 
     RowBox[{
     "EF_", ",", "fx_", ",", "order_", ",", "vecnodes_", ",", "vecids_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Jac", ",", "DetJ", ",", "yy", ",", 
        RowBox[{"vertOrHor", "=", "0"}], ",", "h", ",", "F1", ",", "F2", ",", 
        "F3", ",", "x0", ",", "xf", ",", "y0", ",", "yf", ",", "k", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "node", ",", "iel", ",", 
        RowBox[{"id", "=", 
         RowBox[{"{", "}"}]}], ",", "idy", ",", "cos", ",", "sin", ",", 
        "cos1", ",", "cos2", ",", "cos3", ",", "sin1", ",", "sin2", ",", 
        "sin3", ",", "x1", ",", "x2", ",", "x3", ",", "y1", ",", "y2", ",", 
        "y3", ",", "h1", ",", "h2", ",", "co1", ",", "co2", ",", "co3", ",", 
        "coord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "vecids", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "el"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"shapes", "=", 
           RowBox[{"ComputeShape", "[", 
            RowBox[{"order", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"co", "=", 
           RowBox[{"vecnodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "==", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"co1", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h1", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co2", "=", "h1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"co", "=", 
              RowBox[{"{", 
               RowBox[{"co1", ",", "co2"}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"co1", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h1", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co2", "=", "h1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h2", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co3", "=", 
              RowBox[{"h1", "+", "h2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co", "=", 
              RowBox[{"{", 
               RowBox[{"co1", ",", "co2", ",", "co3"}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"xx", "=", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"shapes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"co", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"J", "=", 
           RowBox[{"D", "[", 
            RowBox[{"xx", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vecPtosPesos", "=", 
           RowBox[{"GaussianQuadratureWeights", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"4", " ", "order"}], "+", "1"}], ",", 
             StyleBox[
              RowBox[{"-", "1"}], "TI"], ",", 
             StyleBox["1", "TI"]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xix", ",", "w"}], "}"}], "=", 
           RowBox[{"Transpose", "[", "vecPtosPesos", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"integralxi1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"fx", "[", "xx", "]"}], 
                    RowBox[{"shapes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "J"}], ")"}], "/.", 
                  RowBox[{"xi", "\[Rule]", 
                   RowBox[{"xix", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "xix", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "shapes", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos1", "=", 
              RowBox[{"x1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin1", "=", 
              RowBox[{"y1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos2", "=", 
              RowBox[{"x2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin2", "=", 
              RowBox[{"y2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "x", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "sin1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "sin2"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "y", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "cos1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "cos2"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos1", "=", 
              RowBox[{"x1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin1", "=", 
              RowBox[{"y1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos2", "=", 
              RowBox[{"x2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin2", "=", 
              RowBox[{"y2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"x3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos3", "=", 
              RowBox[{"x3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin3", "=", 
              RowBox[{"y3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "cos1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "cos2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F3", " ", "cos3"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", " ", 
               RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "sin1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "sin2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F3", " ", "sin3"}]}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "Ef"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6931422329475517`*^9, 3.693142320242545*^9}, {
  3.6931438207133665`*^9, 3.693143821016384*^9}, {3.6931442520610385`*^9, 
  3.693144328930435*^9}, {3.6931447289103127`*^9, 3.6931447298383656`*^9}, {
  3.6931466624529047`*^9, 3.693146711773726*^9}, {3.69314700312239*^9, 
  3.6931470154020925`*^9}, {3.693210821012588*^9, 3.6932108222786603`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Encontra", " ", "os", " ", "nos", " ", "e", " ", "a", " ", "topologia", 
    " ", "de", " ", "uma", " ", "linha", " ", "vertical", " ", "ou", " ", 
    "horizontal"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "XYorR_", ",", "linecoord_", ",", "radius_", ",", "nnodes_", ",", "tol_", 
     ",", "order_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "nodes", ",", "tabnodes", ",", "rangesearch", ",", "i0", ",", 
       "j", ",", "elids", ",", "elnodes", ",", "xc", ",", "yc", ",", "i", ",",
        "a", ",", "newnodes", ",", "new", ",", "ids", ",", "vecids", ",", 
       "h"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"elids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"elnodes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xc", "=", 
          RowBox[{"nnodes", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"yc", "=", 
          RowBox[{"nnodes", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"xc", "-", "linecoord"}], ")"}], "]"}], "<", "tol"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"yc", "-", "linecoord"}], ")"}], "]"}], "<", "tol"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"h", "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", "xc", ")"}], "^", "2"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", "yc", ")"}], "^", "2."}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"h", "-", "radius"}], ")"}], "]"}], "<", "tol"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "elnodes", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Smaller"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newnodes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"new", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vecids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"XYorR", "\[Equal]", "1"}], "||", 
         RowBox[{"XYorR", "\[Equal]", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "elnodes", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"new", ",", 
              RowBox[{"elnodes", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ids", ",", 
              RowBox[{"elids", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "new", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"newnodes", ",", "new"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"vecids", ",", "ids"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"new", "=", 
                RowBox[{"{", 
                 RowBox[{"new", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ids", "=", 
                RowBox[{"{", 
                 RowBox[{"ids", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nodes", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newnodes", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"new", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ids", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "a", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", 
               RowBox[{"Length", "[", "elnodes", "]"}]}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"elnodes", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"nodes", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"elnodes", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "nodes", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"newnodes", ",", "nodes"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"nodes", "=", 
                RowBox[{"{", 
                 RowBox[{"nodes", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"i0", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", 
          "\"\<Possivel BUG!, Modificar rangesearch para o tamanho de \
elemento em uso! \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"rangesearch", "=", 
          RowBox[{"h", "/", "30"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<rangesearch = \>\"", ",", "rangesearch"}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"tabnodes", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"radius", " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{"radius", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], " ", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"rangesearch", " ", "10"}], ")"}]}]}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ids", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "tabnodes", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<Abs[(tabnodes[[i]]-nnodes[[j]])] = \>\"", ",", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tabnodes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"nnodes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "]"}]}], "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Norm", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tabnodes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                    RowBox[{"nnodes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "]"}], 
                   "\[LessEqual]", "rangesearch"}], " ", "&&", " ", 
                  RowBox[{"i", "\[NotEqual]", "i0"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"ids", ",", "i"}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"i0", "=", "i"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "ids", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"vecids", ",", "ids"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ids", "=", 
                RowBox[{"{", 
                 RowBox[{"ids", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"newnodes", ",", "vecids"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6932336978466883`*^9, 3.693233762799403*^9}, {
   3.6932338042947764`*^9, 3.6932339130859985`*^9}, {3.693234114669529*^9, 
   3.693234115298565*^9}, {3.6932343687470613`*^9, 3.6932343690670795`*^9}, {
   3.6932346048965683`*^9, 3.693234666674102*^9}, {3.693234706665389*^9, 
   3.6932347450335836`*^9}, {3.693234786616962*^9, 3.69323480720914*^9}, {
   3.693234855745916*^9, 3.693234900001447*^9}, 3.6932356466441526`*^9, {
   3.6932357067315893`*^9, 3.6932357068185945`*^9}, {3.693235748330969*^9, 
   3.693235748482978*^9}, {3.693235844802487*^9, 3.69323587056196*^9}, {
   3.6932359200977936`*^9, 3.6932360113920155`*^9}, {3.6932360432018347`*^9, 
   3.693236127719669*^9}, {3.693249023497469*^9, 3.6932490271596785`*^9}, {
   3.6932490919753857`*^9, 3.693249095399581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"topol", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\elschapacomfuroleft.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], 
      "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodesAll", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
noschapacomfuroleft.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodes", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"N", "[", 
     RowBox[{"nnodesAll", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allcoords", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"nnodes", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"topol", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"edges", " ", "are", " ", "straight"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"Assemble", "[", 
     RowBox[{"allcoords", ",", "topol", ",", "order", ",", "forcing"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"MatrixPlot", "[", "KE", "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "870", ",", "644", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "871", ",", "645", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tol", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radius", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiusdir", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coordy", "=", "0"}], ";"}], 
  RowBox[{"(*", "naoprecisa", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "radiusdir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",",
      "order"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "KE", "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"ContributeLineNewmanCurverd", "[", 
    RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"KE", ",", "FE", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deformed", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
     RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabdeformed", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"deformed", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"deformed", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVisDef", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", 
         RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"tabdeformed", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVisDef", ",", "meshVis1", ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6932101365214376`*^9, 3.6932101409416904`*^9}, {
   3.6932102381732516`*^9, 3.6932102485018425`*^9}, {3.6932103093493223`*^9, 
   3.693210314068592*^9}, {3.6932110057601547`*^9, 3.6932110216020613`*^9}, {
   3.6932110760071726`*^9, 3.693211117007518*^9}, 3.693211170270564*^9, 
   3.693211200854314*^9, {3.693243577729961*^9, 3.6932436570254965`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}, {{InsetBox["1", {1000., 1000.}, {-1, 1}], 
     InsetBox["2", {1000., 964.285714}, {-1, 1}], 
     InsetBox["3", {964.285714, 1000.}, {-1, 1}], 
     InsetBox["4", {964.389265, 964.385104}, {-1, 1}], 
     InsetBox["5", {1000., 928.571429}, {-1, 1}], 
     InsetBox["6", {928.571429, 1000.}, {-1, 1}], 
     InsetBox["7", {928.778531, 964.484493}, {-1, 1}], 
     InsetBox["8", {964.492817, 928.770207}, {-1, 1}], 
     InsetBox["9", {928.985633, 928.968986}, {-1, 1}], 
     InsetBox["10", {892.857143, 1000.}, {-1, 1}], 
     InsetBox["11", {1000., 892.857143}, {-1, 1}], 
     InsetBox["12", {893.107426, 964.60074}, {-1, 1}], 
     InsetBox["13", {964.49407, 893.095243}, {-1, 1}], 
     InsetBox["14", {893.357708, 929.201481}, {-1, 1}], 
     InsetBox["15", {928.98814, 893.333344}, {-1, 1}], 
     InsetBox["16", {1000., 857.142857}, {-1, 1}], 
     InsetBox["17", {857.142857, 1000.}, {-1, 1}], 
     InsetBox["18", {857.43632, 964.716988}, {-1, 1}], 
     InsetBox["19", {964.495324, 857.420279}, {-1, 1}], 
     InsetBox["20", {893.255839, 893.478431}, {-1, 1}], 
     InsetBox["21", {857.729783, 929.433976}, {-1, 1}], 
     InsetBox["22", {928.990648, 857.697701}, {-1, 1}], 
     InsetBox["23", {857.523537, 893.623518}, {-1, 1}], 
     InsetBox["24", {893.153969, 857.755381}, {-1, 1}], 
     InsetBox["25", {1000., 821.428571}, {-1, 1}], 
     InsetBox["26", {821.428571, 1000.}, {-1, 1}], 
     InsetBox["27", {821.7778, 964.920847}, {-1, 1}], 
     InsetBox["28", {964.465681, 821.600023}, {-1, 1}], 
     InsetBox["29", {822.127029, 929.841693}, {-1, 1}], 
     InsetBox["30", {928.931363, 821.771474}, {-1, 1}], 
     InsetBox["31", {857.317291, 857.81306}, {-1, 1}], 
     InsetBox["32", {821.769206, 894.178404}, {-1, 1}], 
     InsetBox["33", {892.983541, 821.96986}, {-1, 1}], 
     InsetBox["34", {785.714286, 1000.}, {-1, 1}], 
     InsetBox["35", {1000., 785.714286}, {-1, 1}], 
     InsetBox["36", {786.11928, 965.124705}, {-1, 1}], 
     InsetBox["37", {964.436039, 785.779766}, {-1, 1}], 
     InsetBox["38", {786.524274, 930.24941}, {-1, 1}], 
     InsetBox["39", {928.872078, 785.845246}, {-1, 1}], 
     InsetBox["40", {821.411383, 858.515116}, {-1, 1}], 
     InsetBox["41", {857.035719, 822.168246}, {-1, 1}], 
     InsetBox["42", {786.014875, 894.733291}, {-1, 1}], 
     InsetBox["43", {892.813113, 786.184339}, {-1, 1}], 
     InsetBox["44", {750., 1000.}, {-1, 1}], 
     InsetBox["45", {1000., 750.}, {-1, 1}], 
     InsetBox["46", {821.02586, 822.882366}, {-1, 1}], 
     InsetBox["47", {750.35263, 965.252683}, {-1, 1}], 
     InsetBox["48", {964.339622, 749.879481}, {-1, 1}], 
     InsetBox["49", {785.505476, 859.217171}, {-1, 1}], 
     InsetBox["50", {856.754148, 786.523431}, {-1, 1}], 
     InsetBox["51", {750.705261, 930.505365}, {-1, 1}], 
     InsetBox["52", {928.679243, 749.758963}, {-1, 1}], 
     InsetBox["53", {750.142453, 895.264579}, {-1, 1}], 
     InsetBox["54", {892.603333, 750.125244}, {-1, 1}], 
     InsetBox["55", {785.016, 823.596486}, {-1, 1}], 
     InsetBox["56", {820.640336, 787.249616}, {-1, 1}], 
     InsetBox["57", {714.285714, 1000.}, {-1, 1}], 
     InsetBox["58", {1000., 714.285714}, {-1, 1}], 
     InsetBox["59", {749.579645, 860.023792}, {-1, 1}], 
     InsetBox["60", {714.585981, 965.38066}, {-1, 1}], 
     InsetBox["61", {856.527423, 750.491525}, {-1, 1}], 
     InsetBox["62", {964.243204, 713.979197}, {-1, 1}], 
     InsetBox["63", {714.886248, 930.76132}, {-1, 1}], 
     InsetBox["64", {928.486408, 713.67268}, {-1, 1}], 
     InsetBox["65", {784.526524, 787.9758}, {-1, 1}], 
     InsetBox["66", {714.270031, 895.795866}, {-1, 1}], 
     InsetBox["67", {892.393554, 714.066149}, {-1, 1}], 
     InsetBox["68", {748.769384, 824.528952}, {-1, 1}], 
     InsetBox["69", {820.014553, 751.123076}, {-1, 1}], 
     InsetBox["70", {713.653815, 860.830413}, {-1, 1}], 
     InsetBox["71", {856.300699, 714.459618}, {-1, 1}], 
     InsetBox["72", {678.571429, 1000.}, {-1, 1}], 
     InsetBox["73", {1000., 678.571429}, {-1, 1}], 
     InsetBox["74", {678.80914, 965.638736}, {-1, 1}], 
     InsetBox["75", {964.330574, 678.17178}, {-1, 1}], 
     InsetBox["76", {679.046852, 931.277472}, {-1, 1}], 
     InsetBox["77", {747.959122, 789.034112}, {-1, 1}], 
     InsetBox["78", {783.501684, 751.754628}, {-1, 1}], 
     InsetBox["79", {928.661147, 677.77213}, {-1, 1}], 
     InsetBox["80", {712.522768, 825.461418}, {-1, 1}], 
     InsetBox["81", {819.388771, 714.996537}, {-1, 1}], 
     InsetBox["82", {678.380137, 896.6215}, {-1, 1}], 
     InsetBox["83", {892.547316, 677.93154}, {-1, 1}], 
     InsetBox["84", {677.713422, 861.965528}, {-1, 1}], 
     InsetBox["85", {856.433485, 678.090949}, {-1, 1}], 
     InsetBox["86", {746.190242, 752.849015}, {-1, 1}], 
     InsetBox["87", {711.39172, 790.092423}, {-1, 1}], 
     InsetBox["88", {642.857143, 1000.}, {-1, 1}], 
     InsetBox["89", {1000., 642.857143}, {-1, 1}], 
     InsetBox["90", {782.476843, 715.533456}, {-1, 1}], 
     InsetBox["91", {643.0323, 965.896812}, {-1, 1}], 
     InsetBox["92", {964.417943, 642.364362}, {-1, 1}], 
     InsetBox["93", {643.207457, 931.793625}, {-1, 1}], 
     InsetBox["94", {928.835886, 641.871581}, {-1, 1}], 
     InsetBox["95", {676.025778, 826.961333}, {-1, 1}], 
     InsetBox["96", {819.127907, 678.410278}, {-1, 1}], 
     InsetBox["97", {642.490244, 897.447134}, {-1, 1}], 
     InsetBox["98", {892.701078, 641.79693}, {-1, 1}], 
     InsetBox["99", {708.878799, 753.943403}, {-1, 1}], 
     InsetBox["100", {744.421361, 716.663919}, {-1, 1}], 
     InsetBox["101", {641.77303, 863.100643}, {-1, 1}], 
     InsetBox["102", {856.56627, 641.72228}, {-1, 1}], 
     InsetBox["103", {674.338133, 791.957139}, {-1, 1}], 
     InsetBox["104", {781.822329, 678.729607}, {-1, 1}], 
     InsetBox["105", {607.142857, 1000.}, {-1, 1}], 
     InsetBox["106", {1000., 607.142857}, {-1, 1}], 
     InsetBox["107", {607.387519, 966.192483}, {-1, 1}], 
     InsetBox["108", {964.47297, 606.523239}, {-1, 1}], 
     InsetBox["109", {607.63218, 932.384967}, {-1, 1}], 
     InsetBox["110", {639.528788, 828.461249}, {-1, 1}], 
     InsetBox["111", {928.94594, 605.90362}, {-1, 1}], 
     InsetBox["112", {818.867043, 641.824019}, {-1, 1}], 
     InsetBox["113", {606.935116, 898.501214}, {-1, 1}], 
     InsetBox["114", {706.365878, 717.794383}, {-1, 1}], 
     InsetBox["115", {892.6772, 605.615929}, {-1, 1}], 
     InsetBox["116", {670.678317, 756.162496}, {-1, 1}], 
     InsetBox["117", {742.750068, 679.613858}, {-1, 1}], 
     InsetBox["118", {606.238051, 864.617461}, {-1, 1}], 
     InsetBox["119", {637.284545, 793.821854}, {-1, 1}], 
     InsetBox["120", {781.167815, 641.925758}, {-1, 1}], 
     InsetBox["121", {856.408459, 605.328237}, {-1, 1}], 
     InsetBox["122", {571.428571, 1000.}, {-1, 1}], 
     InsetBox["123", {1000., 571.428571}, {-1, 1}], 
     InsetBox["124", {571.742738, 966.488154}, {-1, 1}], 
     InsetBox["125", {964.527997, 570.682115}, {-1, 1}], 
     InsetBox["126", {603.788077, 830.720063}, {-1, 1}], 
     InsetBox["127", {572.056904, 932.976308}, {-1, 1}], 
     InsetBox["128", {818.922264, 605.1048}, {-1, 1}], 
     InsetBox["129", {667.018502, 720.367853}, {-1, 1}], 
     InsetBox["130", {703.677808, 680.49811}, {-1, 1}], 
     InsetBox["131", {929.055994, 569.935659}, {-1, 1}], 
     InsetBox["132", {632.477836, 758.381589}, {-1, 1}], 
     InsetBox["133", {571.379988, 899.555294}, {-1, 1}], 
     InsetBox["134", {741.078776, 642.563797}, {-1, 1}], 
     InsetBox["135", {892.653321, 569.434927}, {-1, 1}], 
     InsetBox["136", {601.338104, 796.822664}, {-1, 1}], 
     InsetBox["137", {570.703072, 866.134279}, {-1, 1}], 
     InsetBox["138", {781.436069, 604.881362}, {-1, 1}], 
     InsetBox["139", {856.250648, 568.934195}, {-1, 1}], 
     InsetBox["140", {568.047367, 832.978877}, {-1, 1}], 
     InsetBox["141", {662.131749, 682.81054}, {-1, 1}], 
     InsetBox["142", {627.671126, 722.941323}, {-1, 1}], 
     InsetBox["143", {535.714286, 1000.}, {-1, 1}], 
     InsetBox["144", {1000., 535.714286}, {-1, 1}], 
     InsetBox["145", {536.362476, 966.701236}, {-1, 1}], 
     InsetBox["146", {700.989737, 643.201837}, {-1, 1}], 
     InsetBox["147", {964.577128, 534.881918}, {-1, 1}], 
     InsetBox["148", {537.010667, 933.402471}, {-1, 1}], 
     InsetBox["149", {818.977485, 568.385581}, {-1, 1}], 
     InsetBox["150", {595.34114, 762.578667}, {-1, 1}], 
     InsetBox["151", {929.154256, 534.049551}, {-1, 1}], 
     InsetBox["152", {741.575874, 604.883566}, {-1, 1}], 
     InsetBox["153", {536.608117, 900.22881}, {-1, 1}], 
     InsetBox["154", {565.391662, 799.823474}, {-1, 1}], 
     InsetBox["155", {893.058791, 533.318793}, {-1, 1}], 
     InsetBox["156", {536.205566, 867.055149}, {-1, 1}], 
     InsetBox["157", {781.704322, 567.836967}, {-1, 1}], 
     InsetBox["158", {856.963327, 532.588035}, {-1, 1}], 
     InsetBox["159", {589.344177, 728.334671}, {-1, 1}], 
     InsetBox["160", {620.58569, 685.122971}, {-1, 1}], 
     InsetBox["161", {657.244995, 645.253228}, {-1, 1}], 
     InsetBox["162", {534.879407, 834.840018}, {-1, 1}], 
     InsetBox["163", {701.715679, 604.88577}, {-1, 1}], 
     InsetBox["164", {558.204445, 766.775746}, {-1, 1}], 
     InsetBox["165", {500., 1000.}, {-1, 1}], 
     InsetBox["166", {1000., 500.}, {-1, 1}], 
     InsetBox["167", {500.982215, 966.914317}, {-1, 1}], 
     InsetBox["168", {819.917839, 531.797743}, {-1, 1}], 
     InsetBox["169", {964.626259, 499.081722}, {-1, 1}], 
     InsetBox["170", {501.964431, 933.828634}, {-1, 1}], 
     InsetBox["171", {742.072971, 567.203335}, {-1, 1}], 
     InsetBox["172", {533.553247, 802.624886}, {-1, 1}], 
     InsetBox["173", {929.252517, 498.163443}, {-1, 1}], 
     InsetBox["174", {501.836245, 900.902327}, {-1, 1}], 
     InsetBox["175", {893.464261, 497.202659}, {-1, 1}], 
     InsetBox["176", {501.70806, 867.976019}, {-1, 1}], 
     InsetBox["177", {782.872351, 531.007451}, {-1, 1}], 
     InsetBox["178", {530.21838, 773.80428}, {-1, 1}], 
     InsetBox["179", {658.473835, 605.662364}, {-1, 1}], 
     InsetBox["180", {551.017228, 733.728018}, {-1, 1}], 
     InsetBox["181", {613.500253, 647.304618}, {-1, 1}], 
     InsetBox["182", {857.676006, 496.241876}, {-1, 1}], 
     InsetBox["183", {501.711446, 836.701159}, {-1, 1}], 
     InsetBox["184", {575.141257, 690.368994}, {-1, 1}], 
     InsetBox["185", {702.44162, 566.569703}, {-1, 1}], 
     InsetBox["186", {501.714832, 805.426298}, {-1, 1}], 
     InsetBox["187", {743.622247, 530.00046}, {-1, 1}], 
     InsetBox["188", {465.435073, 966.590873}, {-1, 1}], 
     InsetBox["189", {820.858192, 495.209906}, {-1, 1}], 
     InsetBox["190", {464.285714, 1000.}, {-1, 1}], 
     InsetBox["191", {1000., 464.285714}, {-1, 1}], 
     InsetBox["192", {526.883512, 744.983675}, {-1, 1}], 
     InsetBox["193", {466.584432, 933.181746}, {-1, 1}], 
     InsetBox["194", {964.882647, 463.302777}, {-1, 1}], 
     InsetBox["195", {467.207152, 899.867682}, {-1, 1}], 
     InsetBox["196", {929.765293, 462.31984}, {-1, 1}], 
     InsetBox["197", {502.232315, 780.832814}, {-1, 1}], 
     InsetBox["198", {467.829873, 866.553618}, {-1, 1}], 
     InsetBox["199", {894.120536, 461.307159}, {-1, 1}], 
     InsetBox["200", {784.040379, 494.177936}, {-1, 1}], 
     InsetBox["201", {615.231992, 606.438958}, {-1, 1}], 
     InsetBox["202", {659.702676, 566.0715}, {-1, 1}], 
     InsetBox["203", {502.749797, 756.239331}, {-1, 1}], 
     InsetBox["204", {704.372143, 528.993468}, {-1, 1}], 
     InsetBox["205", {469.040772, 834.052943}, {-1, 1}], 
     InsetBox["206", {858.475779, 460.294479}, {-1, 1}], 
     InsetBox["207", {560.938336, 652.403317}, {-1, 1}], 
     InsetBox["208", {529.696824, 695.615017}, {-1, 1}], 
     InsetBox["209", {470.251672, 801.552268}, {-1, 1}], 
     InsetBox["210", {745.171522, 492.797585}, {-1, 1}], 
     InsetBox["211", {504.525583, 719.465791}, {-1, 1}], 
     InsetBox["212", {821.757252, 459.146758}, {-1, 1}], 
     InsetBox["213", {429.887931, 966.267429}, {-1, 1}], 
     InsetBox["214", {428.571429, 1000.}, {-1, 1}], 
     InsetBox["215", {1000., 428.571429}, {-1, 1}], 
     InsetBox["216", {474.803007, 772.434416}, {-1, 1}], 
     InsetBox["217", {431.204433, 932.534857}, {-1, 1}], 
     InsetBox["218", {965.139034, 427.523833}, {-1, 1}], 
     InsetBox["219", {432.578059, 898.833037}, {-1, 1}], 
     InsetBox["220", {930.278069, 426.476238}, {-1, 1}], 
     InsetBox["221", {616.963731, 565.573297}, {-1, 1}], 
     InsetBox["222", {662.451912, 527.836651}, {-1, 1}], 
     InsetBox["223", {479.354343, 743.316564}, {-1, 1}], 
     InsetBox["224", {433.951686, 865.131217}, {-1, 1}], 
     InsetBox["225", {785.038725, 457.999038}, {-1, 1}], 
     InsetBox["226", {894.776811, 425.41166}, {-1, 1}], 
     InsetBox["227", {566.542611, 607.949886}, {-1, 1}], 
     InsetBox["228", {706.302665, 491.417234}, {-1, 1}], 
     InsetBox["229", {436.370099, 831.404728}, {-1, 1}], 
     InsetBox["230", {859.275552, 424.347082}, {-1, 1}], 
     InsetBox["231", {438.788512, 797.678238}, {-1, 1}], 
     InsetBox["232", {508.376419, 657.502016}, {-1, 1}], 
     InsetBox["233", {746.817532, 456.42302}, {-1, 1}], 
     InsetBox["234", {447.3737, 764.036018}, {-1, 1}], 
     InsetBox["235", {482.167654, 693.947907}, {-1, 1}], 
     InsetBox["236", {822.656311, 423.083611}, {-1, 1}], 
     InsetBox["237", {394.312226, 965.928609}, {-1, 1}], 
     InsetBox["238", {620.531681, 526.679834}, {-1, 1}], 
     InsetBox["239", {392.857143, 1000.}, {-1, 1}], 
     InsetBox["240", {1000., 392.857143}, {-1, 1}], 
     InsetBox["241", {455.958889, 730.393797}, {-1, 1}], 
     InsetBox["242", {395.767309, 931.857217}, {-1, 1}], 
     InsetBox["243", {965.239211, 391.930728}, {-1, 1}], 
     InsetBox["244", {665.201148, 489.601802}, {-1, 1}], 
     InsetBox["245", {572.146885, 563.496454}, {-1, 1}], 
     InsetBox["246", {397.14111, 897.495539}, {-1, 1}], 
     InsetBox["247", {930.478421, 391.004313}, {-1, 1}], 
     InsetBox["248", {786.03707, 421.82014}, {-1, 1}], 
     InsetBox["249", {398.51491, 863.133861}, {-1, 1}], 
     InsetBox["250", {708.596339, 454.847001}, {-1, 1}], 
     InsetBox["251", {895.128491, 389.923818}, {-1, 1}], 
     InsetBox["252", {517.853229, 609.460813}, {-1, 1}], 
     InsetBox["253", {400.79494, 828.24243}, {-1, 1}], 
     InsetBox["254", {859.778561, 388.843324}, {-1, 1}], 
     InsetBox["255", {403.07497, 793.350998}, {-1, 1}], 
     InsetBox["256", {748.463542, 420.048455}, {-1, 1}], 
     InsetBox["257", {624.099631, 487.78637}, {-1, 1}], 
     InsetBox["258", {576.812802, 524.399743}, {-1, 1}], 
     InsetBox["259", {823.403795, 387.576963}, {-1, 1}], 
     InsetBox["260", {409.780515, 757.037705}, {-1, 1}], 
     InsetBox["261", {667.572292, 452.689016}, {-1, 1}], 
     InsetBox["262", {358.736521, 965.589789}, {-1, 1}], 
     InsetBox["263", {357.142857, 1000.}, {-1, 1}], 
     InsetBox["264", {1000., 357.142857}, {-1, 1}], 
     InsetBox["265", {360.330185, 931.179578}, {-1, 1}], 
     InsetBox["266", {965.339387, 356.337622}, {-1, 1}], 
     InsetBox["267", {527.330039, 561.41961}, {-1, 1}], 
     InsetBox["268", {361.70416, 896.158042}, {-1, 1}], 
     InsetBox["269", {416.486061, 720.724412}, {-1, 1}], 
     InsetBox["270", {930.678774, 355.532387}, {-1, 1}], 
     InsetBox["271", {787.029028, 386.310603}, {-1, 1}], 
     InsetBox["272", {710.890014, 418.276769}, {-1, 1}], 
     InsetBox["273", {433.735212, 678.600498}, {-1, 1}], 
     InsetBox["274", {363.078134, 861.136505}, {-1, 1}], 
     InsetBox["275", {895.480172, 354.435977}, {-1, 1}], 
     InsetBox["276", {365.219781, 825.080132}, {-1, 1}], 
     InsetBox["277", {450.984363, 636.476584}, {-1, 1}], 
     InsetBox["278", {860.281571, 353.339566}, {-1, 1}], 
     InsetBox["279", {581.47872, 485.303032}, {-1, 1}], 
     InsetBox["280", {750.080448, 384.518647}, {-1, 1}], 
     InsetBox["281", {626.548245, 450.531032}, {-1, 1}], 
     InsetBox["282", {367.361427, 789.023759}, {-1, 1}], 
     InsetBox["283", {533.093924, 522.119652}, {-1, 1}], 
     InsetBox["284", {468.518709, 594.272065}, {-1, 1}], 
     InsetBox["285", {669.943436, 415.776231}, {-1, 1}], 
     InsetBox["286", {824.151278, 352.070315}, {-1, 1}], 
     InsetBox["287", {372.18733, 750.039393}, {-1, 1}], 
     InsetBox["288", {322.727845, 965.252799}, {-1, 1}], 
     InsetBox["289", {321.428571, 1000.}, {-1, 1}], 
     InsetBox["290", {1000., 321.428571}, {-1, 1}], 
     InsetBox["291", {324.027119, 930.505598}, {-1, 1}], 
     InsetBox["292", {965.214821, 320.780246}, {-1, 1}], 
     InsetBox["293", {713.131867, 382.726691}, {-1, 1}], 
     InsetBox["294", {486.053055, 552.067546}, {-1, 1}], 
     InsetBox["295", {325.254932, 895.241819}, {-1, 1}], 
     InsetBox["296", {788.020985, 350.801065}, {-1, 1}], 
     InsetBox["297", {930.429642, 320.131921}, {-1, 1}], 
     InsetBox["298", {377.013233, 711.055028}, {-1, 1}], 
     InsetBox["299", {326.482745, 859.97804}, {-1, 1}], 
     InsetBox["300", {895.166837, 319.174547}, {-1, 1}], 
     InsetBox["301", {582.561395, 447.092804}, {-1, 1}], 
     InsetBox["302", {538.857808, 482.819693}, {-1, 1}], 
     InsetBox["303", {628.996859, 413.275693}, {-1, 1}], 
     InsetBox["304", {328.003798, 823.679306}, {-1, 1}], 
     InsetBox["305", {859.904031, 318.217172}, {-1, 1}], 
     InsetBox["306", {751.697353, 348.988839}, {-1, 1}], 
     InsetBox["307", {493.410273, 516.829277}, {-1, 1}], 
     InsetBox["308", {673.698491, 380.313416}, {-1, 1}], 
     InsetBox["309", {385.30277, 663.253089}, {-1, 1}], 
     InsetBox["310", {329.524851, 787.380572}, {-1, 1}], 
     InsetBox["311", {824.083949, 317.115531}, {-1, 1}], 
     InsetBox["312", {715.373721, 347.176613}, {-1, 1}], 
     InsetBox["313", {332.274119, 748.763813}, {-1, 1}], 
     InsetBox["314", {286.719169, 964.915809}, {-1, 1}], 
     InsetBox["315", {285.714286, 1000.}, {-1, 1}], 
     InsetBox["316", {1000., 285.714286}, {-1, 1}], 
     InsetBox["317", {965.090255, 285.222871}, {-1, 1}], 
     InsetBox["318", {287.724052, 929.831619}, {-1, 1}], 
     InsetBox["319", {788.263868, 316.01389}, {-1, 1}], 
     InsetBox["320", {419.184189, 579.083316}, {-1, 1}], 
     InsetBox["321", {393.592306, 615.451151}, {-1, 1}], 
     InsetBox["322", {930.18051, 284.731455}, {-1, 1}], 
     InsetBox["323", {288.805704, 894.325597}, {-1, 1}], 
     InsetBox["324", {444.776071, 542.715481}, {-1, 1}], 
     InsetBox["325", {500.76749, 481.591008}, {-1, 1}], 
     InsetBox["326", {634.265114, 377.90014}, {-1, 1}], 
     InsetBox["327", {538.574545, 443.654577}, {-1, 1}], 
     InsetBox["328", {583.644071, 408.882577}, {-1, 1}], 
     InsetBox["329", {894.853501, 283.913117}, {-1, 1}], 
     InsetBox["330", {289.887357, 858.819575}, {-1, 1}], 
     InsetBox["331", {335.023388, 710.147054}, {-1, 1}], 
     InsetBox["332", {752.044699, 314.16031}, {-1, 1}], 
     InsetBox["333", {677.453546, 344.8506}, {-1, 1}], 
     InsetBox["334", {859.526491, 283.094778}, {-1, 1}], 
     InsetBox["335", {290.787816, 822.27848}, {-1, 1}], 
     InsetBox["336", {453.726622, 511.538902}, {-1, 1}], 
     InsetBox["337", {824.016621, 282.160746}, {-1, 1}], 
     InsetBox["338", {291.688275, 785.737385}, {-1, 1}], 
     InsetBox["339", {339.045455, 666.028375}, {-1, 1}], 
     InsetBox["340", {715.825529, 312.30673}, {-1, 1}], 
     InsetBox["341", {501.155443, 447.532771}, {-1, 1}], 
     InsetBox["342", {421.617521, 531.075497}, {-1, 1}], 
     InsetBox["343", {592.323617, 373.812165}, {-1, 1}], 
     InsetBox["344", {462.677172, 480.362322}, {-1, 1}], 
     InsetBox["345", {397.378493, 554.971452}, {-1, 1}], 
     InsetBox["346", {788.506751, 281.226714}, {-1, 1}], 
     InsetBox["347", {639.53337, 342.524588}, {-1, 1}], 
     InsetBox["348", {250., 1000.}, {-1, 1}], 
     InsetBox["349", {1000., 250.}, {-1, 1}], 
     InsetBox["350", {250.672108, 964.789735}, {-1, 1}], 
     InsetBox["351", {964.974422, 249.694804}, {-1, 1}], 
     InsetBox["352", {292.360908, 747.488232}, {-1, 1}], 
     InsetBox["353", {251.344215, 929.579471}, {-1, 1}], 
     InsetBox["354", {538.291283, 404.489461}, {-1, 1}], 
     InsetBox["355", {929.948843, 249.389609}, {-1, 1}], 
     InsetBox["356", {373.139466, 578.867407}, {-1, 1}], 
     InsetBox["357", {252.052774, 893.887155}, {-1, 1}], 
     InsetBox["358", {426.898543, 504.823471}, {-1, 1}], 
     InsetBox["359", {343.067523, 621.909697}, {-1, 1}], 
     InsetBox["360", {894.558868, 248.54384}, {-1, 1}], 
     InsetBox["361", {252.761333, 858.19484}, {-1, 1}], 
     InsetBox["362", {678.762364, 310.170539}, {-1, 1}], 
     InsetBox["363", {752.392044, 279.331781}, {-1, 1}], 
     InsetBox["364", {293.033542, 709.23908}, {-1, 1}], 
     InsetBox["365", {859.168892, 247.698071}, {-1, 1}], 
     InsetBox["366", {463.73634, 451.410966}, {-1, 1}], 
     InsetBox["367", {253.124245, 821.714335}, {-1, 1}], 
     InsetBox["368", {501.543395, 413.474535}, {-1, 1}], 
     InsetBox["369", {398.45897, 519.435513}, {-1, 1}], 
     InsetBox["370", {432.179565, 478.571445}, {-1, 1}], 
     InsetBox["371", {601.003163, 338.741754}, {-1, 1}], 
     InsetBox["372", {823.731505, 246.808654}, {-1, 1}], 
     InsetBox["373", {550.382119, 369.72419}, {-1, 1}], 
     InsetBox["374", {716.277338, 277.436847}, {-1, 1}], 
     InsetBox["375", {253.487157, 785.23383}, {-1, 1}], 
     InsetBox["376", {641.699198, 308.034348}, {-1, 1}], 
     InsetBox["377", {517.312283, 386.711427}, {-1, 1}], 
     InsetBox["378", {292.788141, 668.803661}, {-1, 1}], 
     InsetBox["379", {375.572798, 530.859588}, {-1, 1}], 
     InsetBox["380", {400.070464, 498.108041}, {-1, 1}], 
     InsetBox["381", {788.294118, 245.919238}, {-1, 1}], 
     InsetBox["382", {214.285714, 1000.}, {-1, 1}], 
     InsetBox["383", {1000., 214.285714}, {-1, 1}], 
     InsetBox["384", {214.625047, 964.663661}, {-1, 1}], 
     InsetBox["385", {964.858588, 214.166738}, {-1, 1}], 
     InsetBox["386", {464.795507, 422.459609}, {-1, 1}], 
     InsetBox["387", {253.461985, 747.494708}, {-1, 1}], 
     InsetBox["388", {433.571578, 451.933139}, {-1, 1}], 
     InsetBox["389", {214.964379, 929.327323}, {-1, 1}], 
     InsetBox["390", {329.305209, 585.03462}, {-1, 1}], 
     InsetBox["391", {929.717176, 214.047762}, {-1, 1}], 
     InsetBox["392", {215.299844, 893.448714}, {-1, 1}], 
     InsetBox["393", {680.071182, 275.490477}, {-1, 1}], 
     InsetBox["394", {352.686625, 542.283663}, {-1, 1}], 
     InsetBox["395", {894.264235, 213.174563}, {-1, 1}], 
     InsetBox["396", {487.291219, 393.432914}, {-1, 1}], 
     InsetBox["397", {401.681958, 476.780569}, {-1, 1}], 
     InsetBox["398", {752.205748, 244.338731}, {-1, 1}], 
     InsetBox["399", {562.472956, 334.95892}, {-1, 1}], 
     InsetBox["400", {215.635309, 857.570105}, {-1, 1}], 
     InsetBox["401", {373.280903, 504.678078}, {-1, 1}], 
     InsetBox["402", {292.54274, 628.368243}, {-1, 1}], 
     InsetBox["403", {604.24369, 304.846931}, {-1, 1}], 
     InsetBox["404", {522.901027, 357.873742}, {-1, 1}], 
     InsetBox["405", {858.811293, 212.301364}, {-1, 1}], 
     InsetBox["406", {253.436814, 709.755585}, {-1, 1}], 
     InsetBox["407", {215.460674, 821.15019}, {-1, 1}], 
     InsetBox["408", {434.963591, 425.294833}, {-1, 1}], 
     InsetBox["409", {496.333283, 368.933392}, {-1, 1}], 
     InsetBox["410", {823.446389, 211.456563}, {-1, 1}], 
     InsetBox["411", {716.117377, 242.758225}, {-1, 1}], 
     InsetBox["412", {457.270156, 400.154401}, {-1, 1}], 
     InsetBox["413", {643.865027, 273.544108}, {-1, 1}], 
     InsetBox["414", {403.406816, 452.455313}, {-1, 1}], 
     InsetBox["415", {215.286039, 784.730276}, {-1, 1}], 
     InsetBox["416", {346.491342, 511.248114}, {-1, 1}], 
     InsetBox["417", {252.15269, 670.954158}, {-1, 1}], 
     InsetBox["418", {370.989008, 478.496567}, {-1, 1}], 
     InsetBox["419", {788.081486, 210.611762}, {-1, 1}], 
     InsetBox["420", {473.039044, 373.391293}, {-1, 1}], 
     InsetBox["421", {528.489772, 329.036058}, {-1, 1}], 
     InsetBox["422", {315.542896, 548.159544}, {-1, 1}], 
     InsetBox["423", {1000., 178.571429}, {-1, 1}], 
     InsetBox["424", {178.571429, 1000.}, {-1, 1}], 
     InsetBox["425", {566.788182, 301.659514}, {-1, 1}], 
     InsetBox["426", {964.660686, 178.595299}, {-1, 1}], 
     InsetBox["427", {178.588556, 964.534795}, {-1, 1}], 
     InsetBox["428", {432.115955, 405.186989}, {-1, 1}], 
     InsetBox["429", {285.470953, 591.201834}, {-1, 1}], 
     InsetBox["430", {680.058978, 241.072015}, {-1, 1}], 
     InsetBox["431", {929.321371, 178.619169}, {-1, 1}], 
     InsetBox["432", {178.605682, 929.069591}, {-1, 1}], 
     InsetBox["433", {214.563062, 747.501183}, {-1, 1}], 
     InsetBox["434", {405.131674, 428.130058}, {-1, 1}], 
     InsetBox["435", {495.419936, 346.023294}, {-1, 1}], 
     InsetBox["436", {607.484218, 270.952108}, {-1, 1}], 
     InsetBox["437", {178.679178, 893.10359}, {-1, 1}], 
     InsetBox["438", {752.019451, 209.345682}, {-1, 1}], 
     InsetBox["439", {893.843514, 177.747715}, {-1, 1}], 
     InsetBox["440", {449.744805, 377.849193}, {-1, 1}], 
     InsetBox["441", {373.091772, 451.523537}, {-1, 1}], 
     InsetBox["442", {178.752674, 857.13759}, {-1, 1}], 
     InsetBox["443", {250.868565, 632.152731}, {-1, 1}], 
     InsetBox["444", {858.365656, 176.87626}, {-1, 1}], 
     InsetBox["445", {406.961754, 410.219576}, {-1, 1}], 
     InsetBox["446", {213.840085, 710.272091}, {-1, 1}], 
     InsetBox["447", {429.268319, 385.079144}, {-1, 1}], 
     InsetBox["448", {644.000578, 239.385805}, {-1, 1}], 
     InsetBox["449", {340.296059, 480.212565}, {-1, 1}], 
     InsetBox["450", {178.516307, 820.689192}, {-1, 1}], 
     InsetBox["451", {715.957417, 208.079603}, {-1, 1}], 
     InsetBox["452", {464.917286, 349.068311}, {-1, 1}], 
     InsetBox["453", {822.783053, 176.112402}, {-1, 1}], 
     InsetBox["454", {309.901601, 515.011042}, {-1, 1}], 
     InsetBox["455", {532.054651, 297.153808}, {-1, 1}], 
     InsetBox["456", {494.506589, 323.113196}, {-1, 1}], 
     InsetBox["457", {408.791834, 392.309095}, {-1, 1}], 
     InsetBox["458", {571.103409, 268.360108}, {-1, 1}], 
     InsetBox["459", {278.399166, 554.035424}, {-1, 1}], 
     InsetBox["460", {375.194536, 424.550508}, {-1, 1}], 
     InsetBox["461", {178.27994, 784.240795}, {-1, 1}], 
     InsetBox["462", {787.20045, 175.348544}, {-1, 1}], 
     InsetBox["463", {211.517238, 673.104655}, {-1, 1}], 
     InsetBox["464", {680.046773, 206.653552}, {-1, 1}], 
     InsetBox["465", {245.652811, 595.362993}, {-1, 1}], 
     InsetBox["466", {342.776729, 450.591762}, {-1, 1}], 
     InsetBox["467", {1000., 142.857143}, {-1, 1}], 
     InsetBox["468", {142.857143, 1000.}, {-1, 1}], 
     InsetBox["469", {964.462783, 143.02386}, {-1, 1}], 
     InsetBox["470", {607.969065, 237.077574}, {-1, 1}], 
     InsetBox["471", {142.552064, 964.40593}, {-1, 1}], 
     InsetBox["472", {382.628993, 403.344082}, {-1, 1}], 
     InsetBox["473", {928.925566, 143.190577}, {-1, 1}], 
     InsetBox["474", {434.414636, 352.113328}, {-1, 1}], 
     InsetBox["475", {177.314789, 747.398222}, {-1, 1}], 
     InsetBox["476", {142.246986, 928.811859}, {-1, 1}], 
     InsetBox["477", {751.145421, 174.37598}, {-1, 1}], 
     InsetBox["478", {412.239043, 367.125492}, {-1, 1}], 
     InsetBox["479", {893.422793, 142.320866}, {-1, 1}], 
     InsetBox["480", {142.058512, 892.758467}, {-1, 1}], 
     InsetBox["481", {456.795528, 324.745329}, {-1, 1}], 
     InsetBox["482", {304.260307, 481.862539}, {-1, 1}], 
     InsetBox["483", {497.321119, 292.648102}, {-1, 1}], 
     InsetBox["484", {390.063449, 382.137655}, {-1, 1}], 
     InsetBox["485", {535.619529, 265.271559}, {-1, 1}], 
     InsetBox["486", {141.870038, 856.705074}, {-1, 1}], 
     InsetBox["487", {857.920019, 141.451155}, {-1, 1}], 
     InsetBox["488", {209.194391, 635.937219}, {-1, 1}], 
     InsetBox["489", {644.13613, 205.227502}, {-1, 1}], 
     InsetBox["490", {273.31186, 518.773969}, {-1, 1}], 
     InsetBox["491", {176.349637, 710.555648}, {-1, 1}], 
     InsetBox["492", {345.257398, 420.970958}, {-1, 1}], 
     InsetBox["493", {715.090391, 173.403416}, {-1, 1}], 
     InsetBox["494", {571.937552, 234.769342}, {-1, 1}], 
     InsetBox["495", {141.57194, 820.228195}, {-1, 1}], 
     InsetBox["496", {822.119716, 140.768241}, {-1, 1}], 
     InsetBox["497", {240.437056, 558.573255}, {-1, 1}], 
     InsetBox["498", {358.296232, 396.468587}, {-1, 1}], 
     InsetBox["499", {141.273841, 783.751315}, {-1, 1}], 
     InsetBox["500", {786.319414, 140.085327}, {-1, 1}], 
     InsetBox["501", {679.3769, 172.240261}, {-1, 1}], 
     InsetBox["502", {174.302716, 673.920438}, {-1, 1}], 
     InsetBox["503", {608.453912, 203.203039}, {-1, 1}], 
     InsetBox["504", {304.470213, 447.322303}, {-1, 1}], 
     InsetBox["505", {395.209766, 349.17184}, {-1, 1}], 
     InsetBox["506", {371.335065, 371.966216}, {-1, 1}], 
     InsetBox["507", {205.834669, 599.524152}, {-1, 1}], 
     InsetBox["508", {419.084468, 326.377463}, {-1, 1}], 
     InsetBox["509", {460.536982, 292.461945}, {-1, 1}], 
     InsetBox["510", {500.135649, 262.183009}, {-1, 1}], 
     InsetBox["511", {107.142857, 1000.}, {-1, 1}], 
     InsetBox["512", {1000., 107.142857}, {-1, 1}], 
     InsetBox["513", {964.121719, 107.324775}, {-1, 1}], 
     InsetBox["514", {106.857346, 964.213569}, {-1, 1}], 
     InsetBox["515", {928.243438, 107.506692}, {-1, 1}], 
     InsetBox["516", {268.224555, 483.512513}, {-1, 1}], 
     InsetBox["517", {750.27139, 139.406278}, {-1, 1}], 
     InsetBox["518", {106.571834, 928.427138}, {-1, 1}], 
     InsetBox["519", {140.066515, 747.29526}, {-1, 1}], 
     InsetBox["520", {535.94444, 231.855982}, {-1, 1}], 
     InsetBox["521", {892.541336, 106.809677}, {-1, 1}], 
     InsetBox["522", {106.368853, 892.194866}, {-1, 1}], 
     InsetBox["523", {235.7138, 523.63082}, {-1, 1}], 
     InsetBox["524", {643.663409, 171.077106}, {-1, 1}], 
     InsetBox["525", {172.255795, 637.285229}, {-1, 1}], 
     InsetBox["526", {856.839234, 106.112661}, {-1, 1}], 
     InsetBox["527", {106.165872, 855.962593}, {-1, 1}], 
     InsetBox["528", {572.771695, 201.178576}, {-1, 1}], 
     InsetBox["529", {714.223366, 138.727229}, {-1, 1}], 
     InsetBox["530", {138.859189, 710.839206}, {-1, 1}], 
     InsetBox["531", {202.474947, 563.111085}, {-1, 1}], 
     InsetBox["532", {304.680119, 412.782067}, {-1, 1}], 
     InsetBox["533", {820.862684, 105.576559}, {-1, 1}], 
     InsetBox["534", {105.671421, 819.601801}, {-1, 1}], 
     InsetBox["535", {423.752845, 292.275788}, {-1, 1}], 
     InsetBox["536", {464.278435, 260.178561}, {-1, 1}], 
     InsetBox["537", {322.676683, 386.238865}, {-1, 1}], 
     InsetBox["538", {608.179487, 169.291411}, {-1, 1}], 
     InsetBox["539", {499.951328, 228.942621}, {-1, 1}], 
     InsetBox["540", {340.673248, 359.695664}, {-1, 1}], 
     InsetBox["541", {678.707027, 137.82697}, {-1, 1}], 
     InsetBox["542", {784.886134, 105.040456}, {-1, 1}], 
     InsetBox["543", {362.140397, 336.307662}, {-1, 1}], 
     InsetBox["544", {266.163697, 444.052845}, {-1, 1}], 
     InsetBox["545", {105.176971, 783.241009}, {-1, 1}], 
     InsetBox["546", {169.539612, 601.410618}, {-1, 1}], 
     InsetBox["547", {137.088194, 674.736222}, {-1, 1}], 
     InsetBox["548", {383.607546, 312.919659}, {-1, 1}], 
     InsetBox["549", {230.990543, 488.688386}, {-1, 1}], 
     InsetBox["550", {536.269351, 198.440405}, {-1, 1}], 
     InsetBox["551", {71.4285714, 1000.}, {-1, 1}], 
     InsetBox["552", {1000., 71.4285714}, {-1, 1}], 
     InsetBox["553", {963.780655, 71.6256898}, {-1, 1}], 
     InsetBox["554", {71.1626271, 964.021208}, {-1, 1}], 
     InsetBox["555", {748.906453, 104.482747}, {-1, 1}], 
     InsetBox["556", {198.115739, 528.487672}, {-1, 1}], 
     InsetBox["557", {104.483436, 746.724657}, {-1, 1}], 
     InsetBox["558", {927.56131, 71.8228081}, {-1, 1}], 
     InsetBox["559", {70.8966827, 928.042417}, {-1, 1}], 
     InsetBox["560", {643.190688, 136.926711}, {-1, 1}], 
     InsetBox["561", {891.659879, 71.2984874}, {-1, 1}], 
     InsetBox["562", {70.679194, 891.631264}, {-1, 1}], 
     InsetBox["563", {572.695565, 167.505716}, {-1, 1}], 
     InsetBox["564", {428.421221, 258.174113}, {-1, 1}], 
     InsetBox["565", {135.317198, 638.633238}, {-1, 1}], 
     InsetBox["566", {166.823429, 565.536007}, {-1, 1}], 
     InsetBox["567", {855.758448, 70.7741666}, {-1, 1}], 
     InsetBox["568", {390.929806, 283.467115}, {-1, 1}], 
     InsetBox["569", {70.4617052, 855.220112}, {-1, 1}], 
     InsetBox["570", {712.926771, 103.925038}, {-1, 1}], 
     InsetBox["571", {103.789901, 710.208305}, {-1, 1}], 
     InsetBox["572", {462.599402, 226.351725}, {-1, 1}], 
     InsetBox["573", {264.10284, 404.593176}, {-1, 1}], 
     InsetBox["574", {819.605651, 70.3848759}, {-1, 1}], 
     InsetBox["575", {499.767007, 195.702233}, {-1, 1}], 
     InsetBox["576", {227.270003, 451.973288}, {-1, 1}], 
     InsetBox["577", {287.057135, 376.009144}, {-1, 1}], 
     InsetBox["578", {69.7709024, 818.975408}, {-1, 1}], 
     InsetBox["579", {607.905061, 135.379784}, {-1, 1}], 
     InsetBox["580", {310.01143, 347.425111}, {-1, 1}], 
     InsetBox["581", {193.756532, 493.864259}, {-1, 1}], 
     InsetBox["582", {329.071027, 323.443484}, {-1, 1}], 
     InsetBox["583", {677.37107, 103.247445}, {-1, 1}], 
     InsetBox["584", {133.244555, 603.297083}, {-1, 1}], 
     InsetBox["585", {537.235117, 164.945357}, {-1, 1}], 
     InsetBox["586", {102.460039, 674.246263}, {-1, 1}], 
     InsetBox["587", {783.452855, 69.9955851}, {-1, 1}], 
     InsetBox["588", {69.0800996, 782.730704}, {-1, 1}], 
     InsetBox["589", {348.130624, 299.461856}, {-1, 1}], 
     InsetBox["590", {398.252066, 254.01457}, {-1, 1}], 
     InsetBox["591", {163.257495, 531.400307}, {-1, 1}], 
     InsetBox["592", {747.541515, 69.559216}, {-1, 1}], 
     InsetBox["593", {1000., 35.7142857}, {-1, 1}], 
     InsetBox["594", {35.7142857, 1000.}, {-1, 1}], 
     InsetBox["595", {963.565609, 35.8128449}, {-1, 1}], 
     InsetBox["596", {68.9003557, 746.154055}, {-1, 1}], 
     InsetBox["597", {35.5813135, 963.685886}, {-1, 1}], 
     InsetBox["598", {425.247475, 223.76083}, {-1, 1}], 
     InsetBox["599", {572.619435, 133.832856}, {-1, 1}], 
     InsetBox["600", {641.815369, 102.569853}, {-1, 1}], 
     InsetBox["601", {927.131218, 35.9114041}, {-1, 1}], 
     InsetBox["602", {35.4483414, 927.371772}, {-1, 1}], 
     InsetBox["603", {358.106767, 274.658442}, {-1, 1}], 
     InsetBox["604", {101.130178, 638.284221}, {-1, 1}], 
     InsetBox["605", {131.171911, 567.960929}, {-1, 1}], 
     InsetBox["606", {890.855785, 35.6492437}, {-1, 1}], 
     InsetBox["607", {35.339597, 890.841477}, {-1, 1}], 
     InsetBox["608", {460.920368, 192.52489}, {-1, 1}], 
     InsetBox["609", {223.549462, 415.25819}, {-1, 1}], 
     InsetBox["610", {711.630176, 69.1228468}, {-1, 1}], 
     InsetBox["611", {501.774669, 162.384998}, {-1, 1}], 
     InsetBox["612", {188.376308, 459.893731}, {-1, 1}], 
     InsetBox["613", {854.580351, 35.3870833}, {-1, 1}], 
     InsetBox["614", {68.7206118, 709.577405}, {-1, 1}], 
     InsetBox["615", {35.2308526, 854.311183}, {-1, 1}], 
     InsetBox["616", {398.803082, 227.171021}, {-1, 1}], 
     InsetBox["617", {159.691562, 497.264607}, {-1, 1}], 
     InsetBox["618", {368.08291, 249.855028}, {-1, 1}], 
     InsetBox["619", {606.782307, 101.289143}, {-1, 1}], 
     InsetBox["620", {283.863647, 328.694257}, {-1, 1}], 
     InsetBox["621", {818.179234, 35.1924379}, {-1, 1}], 
     InsetBox["622", {34.8854512, 817.864112}, {-1, 1}], 
     InsetBox["623", {261.70863, 351.897073}, {-1, 1}], 
     InsetBox["624", {302.230531, 306.932608}, {-1, 1}], 
     InsetBox["625", {538.200883, 131.45031}, {-1, 1}], 
     InsetBox["626", {99.6174224, 603.191117}, {-1, 1}], 
     InsetBox["627", {239.553613, 375.099889}, {-1, 1}], 
     InsetBox["628", {676.035113, 68.6679211}, {-1, 1}], 
     InsetBox["629", {320.597414, 285.170959}, {-1, 1}], 
     InsetBox["630", {67.8318849, 673.756305}, {-1, 1}], 
     InsetBox["631", {128.399252, 534.312942}, {-1, 1}], 
     InsetBox["632", {781.778117, 34.9977926}, {-1, 1}], 
     InsetBox["633", {34.5400498, 781.417042}, {-1, 1}], 
     InsetBox["634", {372.358688, 230.581213}, {-1, 1}], 
     InsetBox["635", {332.105767, 262.668423}, {-1, 1}], 
     InsetBox["636", {422.073729, 189.347547}, {-1, 1}], 
     InsetBox["637", {465.905111, 158.761826}, {-1, 1}], 
     InsetBox["638", {571.749245, 100.008434}, {-1, 1}], 
     InsetBox["639", {745.497729, 34.779608}, {-1, 1}], 
     InsetBox["640", {182.996084, 425.923203}, {-1, 1}], 
     InsetBox["641", {34.4501779, 744.803999}, {-1, 1}], 
     InsetBox["642", {640.440049, 68.2129953}, {-1, 1}], 
     InsetBox["643", {98.1046668, 568.098012}, {-1, 1}], 
     InsetBox["644", {1000., 0.}, {-1, 1}], 
     InsetBox["645", {0., 1000.}, {-1, 1}], 
     InsetBox["646", {399.354098, 200.327472}, {-1, 1}], 
     InsetBox["647", {155.2437, 464.503867}, {-1, 1}], 
     InsetBox["648", {963.350563, 0.}, {-1, 1}], 
     InsetBox["649", {0., 963.350563}, {-1, 1}], 
     InsetBox["650", {66.943158, 637.935205}, {-1, 1}], 
     InsetBox["651", {503.782331, 129.067764}, {-1, 1}], 
     InsetBox["652", {0., 926.701127}, {-1, 1}], 
     InsetBox["653", {926.701127, 0.}, {-1, 1}], 
     InsetBox["654", {205.622507, 386.107023}, {-1, 1}], 
     InsetBox["655", {343.61412, 240.165887}, {-1, 1}], 
     InsetBox["656", {376.634466, 211.307398}, {-1, 1}], 
     InsetBox["657", {890.05169, 0.}, {-1, 1}], 
     InsetBox["658", {0., 890.05169}, {-1, 1}], 
     InsetBox["659", {125.626592, 500.664955}, {-1, 1}], 
     InsetBox["660", {709.217342, 34.5614234}, {-1, 1}], 
     InsetBox["661", {34.3603059, 708.190956}, {-1, 1}], 
     InsetBox["662", {0., 853.402253}, {-1, 1}], 
     InsetBox["663", {853.402253, 0.}, {-1, 1}], 
     InsetBox["664", {605.659552, 67.1985031}, {-1, 1}], 
     InsetBox["665", {538.130513, 98.1475531}, {-1, 1}], 
     InsetBox["666", {257.715864, 309.963403}, {-1, 1}], 
     InsetBox["667", {350.866658, 221.144484}, {-1, 1}], 
     InsetBox["668", {275.390034, 290.421732}, {-1, 1}], 
     InsetBox["669", {65.9902901, 603.08515}, {-1, 1}], 
     InsetBox["670", {293.064205, 270.880061}, {-1, 1}], 
     InsetBox["671", {95.962231, 535.089756}, {-1, 1}], 
     InsetBox["672", {0., 816.752817}, {-1, 1}], 
     InsetBox["673", {816.752817, 0.}, {-1, 1}], 
     InsetBox["674", {236.360125, 327.785002}, {-1, 1}], 
     InsetBox["675", {430.035554, 155.138653}, {-1, 1}], 
     InsetBox["676", {673.095091, 34.3339605}, {-1, 1}], 
     InsetBox["677", {33.9159424, 671.955688}, {-1, 1}], 
     InsetBox["678", {306.104768, 250.678404}, {-1, 1}], 
     InsetBox["679", {150.795838, 431.743126}, {-1, 1}], 
     InsetBox["680", {215.004387, 345.606601}, {-1, 1}], 
     InsetBox["681", {470.889854, 124.998761}, {-1, 1}], 
     InsetBox["682", {0., 780.10338}, {-1, 1}], 
     InsetBox["683", {780.10338, 0.}, {-1, 1}], 
     InsetBox["684", {358.119196, 202.123082}, {-1, 1}], 
     InsetBox["685", {171.691401, 397.114157}, {-1, 1}], 
     InsetBox["686", {375.923062, 187.369442}, {-1, 1}], 
     InsetBox["687", {393.726928, 172.615802}, {-1, 1}], 
     InsetBox["688", {122.111092, 469.114003}, {-1, 1}], 
     InsetBox["689", {319.14533, 230.476746}, {-1, 1}], 
     InsetBox["690", {570.879056, 66.1840109}, {-1, 1}], 
     InsetBox["691", {65.0374221, 568.235096}, {-1, 1}], 
     InsetBox["692", {504.511781, 96.2866725}, {-1, 1}], 
     InsetBox["693", {636.972841, 34.1064977}, {-1, 1}], 
     InsetBox["694", {0., 743.453943}, {-1, 1}], 
     InsetBox["695", {743.453943, 0.}, {-1, 1}], 
     InsetBox["696", {33.471579, 635.720419}, {-1, 1}], 
     InsetBox["697", {93.8197952, 502.0815}, {-1, 1}], 
     InsetBox["698", {329.374628, 211.707756}, {-1, 1}], 
     InsetBox["699", {187.695552, 356.955856}, {-1, 1}], 
     InsetBox["700", {254.078483, 273.343296}, {-1, 1}], 
     InsetBox["701", {236.983111, 291.047155}, {-1, 1}], 
     InsetBox["702", {271.173854, 255.639437}, {-1, 1}], 
     InsetBox["703", {0., 706.804507}, {-1, 1}], 
     InsetBox["704", {706.804507, 0.}, {-1, 1}], 
     InsetBox["705", {339.603925, 192.938765}, {-1, 1}], 
     InsetBox["706", {538.060144, 64.8447961}, {-1, 1}], 
     InsetBox["707", {437.997378, 120.929758}, {-1, 1}], 
     InsetBox["708", {142.095782, 403.424751}, {-1, 1}], 
     InsetBox["709", {602.493113, 33.5992516}, {-1, 1}], 
     InsetBox["710", {63.5252103, 535.866571}, {-1, 1}], 
     InsetBox["711", {401.709488, 142.759586}, {-1, 1}], 
     InsetBox["712", {118.595592, 437.56305}, {-1, 1}], 
     InsetBox["713", {216.954225, 306.641876}, {-1, 1}], 
     InsetBox["714", {32.995145, 601.205912}, {-1, 1}], 
     InsetBox["715", {284.295122, 237.051974}, {-1, 1}], 
     InsetBox["716", {472.820267, 93.0684134}, {-1, 1}], 
     InsetBox["717", {352.492026, 174.411411}, {-1, 1}], 
     InsetBox["718", {160.386717, 368.305112}, {-1, 1}], 
     InsetBox["719", {196.925339, 322.236597}, {-1, 1}], 
     InsetBox["720", {297.416389, 218.464512}, {-1, 1}], 
     InsetBox["721", {91.2655204, 471.441567}, {-1, 1}], 
     InsetBox["722", {0., 670.15507}, {-1, 1}], 
     InsetBox["723", {670.15507, 0.}, {-1, 1}], 
     InsetBox["724", {365.380127, 155.884057}, {-1, 1}], 
     InsetBox["725", {308.165548, 200.252135}, {-1, 1}], 
     InsetBox["726", {568.013385, 33.0920055}, {-1, 1}], 
     InsetBox["727", {505.241231, 63.5055812}, {-1, 1}], 
     InsetBox["728", {32.5187111, 566.691405}, {-1, 1}], 
     InsetBox["729", {62.0129985, 503.498045}, {-1, 1}], 
     InsetBox["730", {172.662736, 332.990128}, {-1, 1}], 
     InsetBox["731", {318.914706, 182.039757}, {-1, 1}], 
     InsetBox["732", {0., 633.505633}, {-1, 1}], 
     InsetBox["733", {633.505633, 0.}, {-1, 1}], 
     InsetBox["734", {409.692048, 112.90337}, {-1, 1}], 
     InsetBox["735", {112.500163, 409.735345}, {-1, 1}], 
     InsetBox["736", {249.283503, 240.398812}, {-1, 1}], 
     InsetBox["737", {441.128754, 89.8501543}, {-1, 1}], 
     InsetBox["738", {133.395725, 375.106376}, {-1, 1}], 
     InsetBox["739", {232.766931, 256.264859}, {-1, 1}], 
     InsetBox["740", {88.7112455, 440.801634}, {-1, 1}], 
     InsetBox["741", {216.250359, 272.130907}, {-1, 1}], 
     InsetBox["742", {262.485476, 223.425545}, {-1, 1}], 
     InsetBox["743", {330.399581, 163.273449}, {-1, 1}], 
     InsetBox["744", {373.383422, 130.380519}, {-1, 1}], 
     InsetBox["745", {535.827853, 32.422398}, {-1, 1}], 
     InsetBox["746", {31.7626052, 534.731066}, {-1, 1}], 
     InsetBox["747", {275.687448, 206.452278}, {-1, 1}], 
     InsetBox["748", {197.548325, 285.49875}, {-1, 1}], 
     InsetBox["749", {148.400133, 343.743659}, {-1, 1}], 
     InsetBox["750", {474.75068, 61.1380657}, {-1, 1}], 
     InsetBox["751", {60.4199485, 473.769132}, {-1, 1}], 
     InsetBox["752", {599.326674, 0.}, {-1, 1}], 
     InsetBox["753", {0., 599.326674}, {-1, 1}], 
     InsetBox["754", {341.884456, 144.507141}, {-1, 1}], 
     InsetBox["755", {178.846291, 298.866593}, {-1, 1}], 
     InsetBox["756", {286.956467, 188.796513}, {-1, 1}], 
     InsetBox["757", {298.225486, 171.140749}, {-1, 1}], 
     InsetBox["758", {106.404733, 381.90764}, {-1, 1}], 
     InsetBox["759", {84.1955982, 413.248595}, {-1, 1}], 
     InsetBox["760", {413.273324, 84.1706283}, {-1, 1}], 
     InsetBox["761", {503.64232, 31.7527906}, {-1, 1}], 
     InsetBox["762", {381.386717, 104.876982}, {-1, 1}], 
     InsetBox["763", {31.0064992, 502.770727}, {-1, 1}], 
     InsetBox["764", {157.629919, 309.024399}, {-1, 1}], 
     InsetBox["765", {0., 565.147714}, {-1, 1}], 
     InsetBox["766", {565.147714, 0.}, {-1, 1}], 
     InsetBox["767", {123.705293, 350.447061}, {-1, 1}], 
     InsetBox["768", {230.707751, 226.265406}, {-1, 1}], 
     InsetBox["769", {215.073565, 240.666921}, {-1, 1}], 
     InsetBox["770", {444.260129, 58.7705502}, {-1, 1}], 
     InsetBox["771", {58.8268986, 444.040219}, {-1, 1}], 
     InsetBox["772", {243.777229, 210.402872}, {-1, 1}], 
     InsetBox["773", {199.439378, 255.068436}, {-1, 1}], 
     InsetBox["774", {349.393915, 120.943359}, {-1, 1}], 
     InsetBox["775", {308.307136, 152.135487}, {-1, 1}], 
     InsetBox["776", {256.846707, 194.540338}, {-1, 1}], 
     InsetBox["777", {181.931256, 267.202763}, {-1, 1}], 
     InsetBox["778", {136.413548, 319.182205}, {-1, 1}], 
     InsetBox["779", {267.931622, 177.55535}, {-1, 1}], 
     InsetBox["780", {318.388786, 133.130225}, {-1, 1}], 
     InsetBox["781", {473.92151, 30.5690329}, {-1, 1}], 
     InsetBox["782", {0., 533.595562}, {-1, 1}], 
     InsetBox["783", {533.595562, 0.}, {-1, 1}], 
     InsetBox["784", {164.423133, 279.337089}, {-1, 1}], 
     InsetBox["785", {30.2099743, 473.430735}, {-1, 1}], 
     InsetBox["786", {79.6799509, 385.695555}, {-1, 1}], 
     InsetBox["787", {279.016536, 160.570362}, {-1, 1}], 
     InsetBox["788", {99.010453, 357.150464}, {-1, 1}], 
     InsetBox["789", {385.417894, 78.4911022}, {-1, 1}], 
     InsetBox["790", {356.903373, 97.3795761}, {-1, 1}], 
     InsetBox["791", {55.8910339, 416.761845}, {-1, 1}], 
     InsetBox["792", {416.8546, 55.4378866}, {-1, 1}], 
     InsetBox["793", {145.016206, 288.755053}, {-1, 1}], 
     InsetBox["794", {114.014861, 325.787747}, {-1, 1}], 
     InsetBox["795", {212.132, 212.132}, {-1, 1}], 
     InsetBox["796", {288.396422, 142.26899}, {-1, 1}], 
     InsetBox["797", {197.803712, 225.551907}, {-1, 1}], 
     InsetBox["798", {225.551907, 197.803712}, {-1, 1}], 
     InsetBox["799", {325.404408, 111.506198}, {-1, 1}], 
     InsetBox["800", {502.043409, 0.}, {-1, 1}], 
     InsetBox["801", {0., 502.043409}, {-1, 1}], 
     InsetBox["802", {182.628398, 238.005966}, {-1, 1}], 
     InsetBox["803", {238.005966, 182.628398}, {-1, 1}], 
     InsetBox["804", {444.200699, 29.3852751}, {-1, 1}], 
     InsetBox["805", {29.4134493, 444.090743}, {-1, 1}], 
     InsetBox["806", {125.60928, 298.173017}, {-1, 1}], 
     InsetBox["807", {166.671042, 249.440848}, {-1, 1}], 
     InsetBox["808", {249.440848, 166.671042}, {-1, 1}], 
     InsetBox["809", {297.776307, 123.967618}, {-1, 1}], 
     InsetBox["810", {74.3912802, 361.115721}, {-1, 1}], 
     InsetBox["811", {360.929106, 73.1134787}, {-1, 1}], 
     InsetBox["812", {52.9551692, 389.483471}, {-1, 1}], 
     InsetBox["813", {149.999975, 259.807586}, {-1, 1}], 
     InsetBox["814", {259.807586, 149.999975}, {-1, 1}], 
     InsetBox["815", {91.6161734, 332.393289}, {-1, 1}], 
     InsetBox["816", {389.449071, 52.1052229}, {-1, 1}], 
     InsetBox["817", {332.420029, 89.8821706}, {-1, 1}], 
     InsetBox["818", {0., 473.092339}, {-1, 1}], 
     InsetBox["819", {473.092339, 0.}, {-1, 1}], 
     InsetBox["820", {105.120109, 304.629262}, {-1, 1}], 
     InsetBox["821", {27.9455169, 417.243125}, {-1, 1}], 
     InsetBox["822", {417.289503, 27.7189433}, {-1, 1}], 
     InsetBox["823", {132.686585, 269.061789}, {-1, 1}], 
     InsetBox["824", {269.061789, 132.686585}, {-1, 1}], 
     InsetBox["825", {304.437592, 103.865777}, {-1, 1}], 
     InsetBox["826", {49.7721073, 365.080977}, {-1, 1}], 
     InsetBox["827", {114.805011, 277.163828}, {-1, 1}], 
     InsetBox["828", {277.163828, 114.805011}, {-1, 1}], 
     InsetBox["829", {69.1026094, 336.535886}, {-1, 1}], 
     InsetBox["830", {364.954838, 48.8473813}, {-1, 1}], 
     InsetBox["831", {0., 444.141268}, {-1, 1}], 
     InsetBox["832", {444.141268, 0.}, {-1, 1}], 
     InsetBox["833", {336.440317, 67.7358552}, {-1, 1}], 
     InsetBox["834", {84.6309378, 311.085506}, {-1, 1}], 
     InsetBox["835", {311.098876, 83.7639364}, {-1, 1}], 
     InsetBox["836", {26.4775846, 390.395506}, {-1, 1}], 
     InsetBox["837", {390.378307, 26.0526115}, {-1, 1}], 
     InsetBox["838", {96.4318248, 284.079011}, {-1, 1}], 
     InsetBox["839", {284.079011, 96.4318248}, {-1, 1}], 
     InsetBox["840", {417.724405, 0.}, {-1, 1}], 
     InsetBox["841", {0., 417.724405}, {-1, 1}], 
     InsetBox["842", {46.5890455, 340.678483}, {-1, 1}], 
     InsetBox["843", {63.7521934, 315.070735}, {-1, 1}], 
     InsetBox["844", {340.460605, 45.5895397}, {-1, 1}], 
     InsetBox["845", {315.022951, 63.0688162}, {-1, 1}], 
     InsetBox["846", {24.8860537, 366.203158}, {-1, 1}], 
     InsetBox["847", {366.140089, 24.4236907}, {-1, 1}], 
     InsetBox["848", {77.6457021, 289.777724}, {-1, 1}], 
     InsetBox["849", {289.777724, 77.6457021}, {-1, 1}], 
     InsetBox["850", {391.307542, 0.}, {-1, 1}], 
     InsetBox["851", {0., 391.307542}, {-1, 1}], 
     InsetBox["852", {42.873449, 319.055964}, {-1, 1}], 
     InsetBox["853", {318.947025, 42.3736961}, {-1, 1}], 
     InsetBox["854", {58.5270885, 294.235565}, {-1, 1}], 
     InsetBox["855", {294.235565, 58.5270884}, {-1, 1}], 
     InsetBox["856", {23.2945227, 342.01081}, {-1, 1}], 
     InsetBox["857", {341.901871, 22.7947698}, {-1, 1}], 
     InsetBox["858", {0., 367.32534}, {-1, 1}], 
     InsetBox["859", {367.32534, 0.}, {-1, 1}], 
     InsetBox["860", {39.1578526, 297.433445}, {-1, 1}], 
     InsetBox["861", {297.433445, 39.1578526}, {-1, 1}], 
     InsetBox["862", {21.4367245, 320.363766}, {-1, 1}], 
     InsetBox["863", {320.309297, 21.1868481}, {-1, 1}], 
     InsetBox["864", {0., 343.343137}, {-1, 1}], 
     InsetBox["865", {343.343137, 0.}, {-1, 1}], 
     InsetBox["866", {19.6209364, 299.35767}, {-1, 1}], 
     InsetBox["867", {299.35767, 19.6209364}, {-1, 1}], 
     InsetBox["868", {321.671569, 0.}, {-1, 1}], 
     InsetBox["869", {0., 321.671569}, {-1, 1}], 
     InsetBox["870", {300., 0.}, {-1, 1}], 
     InsetBox["871", {0., 300.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1: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
      "]]}}},
  ImageSize->1000]], "Output",
 CellChangeTimes->{
  3.693210138086527*^9, {3.6932102458686914`*^9, 3.693210255681253*^9}, 
   3.693210317187771*^9, 3.693210404610771*^9, 3.6932107642873435`*^9, {
   3.6932110105794306`*^9, 3.6932110225141134`*^9}, {3.6932110830245743`*^9, 
   3.693211117993574*^9}, 3.6932111711456146`*^9, 3.6932112317920833`*^9, 
   3.6932117467965403`*^9, 3.693211841570961*^9, 3.693211928935958*^9, 
   3.693229281615094*^9, 3.693230251237553*^9, 3.69323431942124*^9, 
   3.6932351284665146`*^9, 3.693235200317624*^9, 3.6932355003907876`*^9, 
   3.6932355625903454`*^9, 3.693235609495028*^9, {3.6932436387914534`*^9, 
   3.6932436646119304`*^9}, 3.69324377440921*^9, 3.693250641325003*^9, 
   3.6932580445517845`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Possivel BUG!, Modificar rangesearch para o tamanho de \
elemento em uso! \"\>"], "Print",
 CellChangeTimes->{{3.6932436598956604`*^9, 3.693243685659134*^9}, 
   3.693243795249402*^9, 3.6932506616671667`*^9, 3.6932580648789473`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"rangesearch = \"\>", "\[InvisibleSpace]", "10.`"}],
  SequenceForm["rangesearch = ", 10.],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6932436598956604`*^9, 3.693243685659134*^9}, 
   3.693243795249402*^9, 3.6932506616671667`*^9, 3.6932580648799477`*^9}]
}, Open  ]],

Cell[BoxData["5998.929082504428`"], "Output",
 CellChangeTimes->{
  3.693210138086527*^9, {3.6932102458686914`*^9, 3.693210255681253*^9}, 
   3.693210317187771*^9, 3.693210404610771*^9, 3.6932107642873435`*^9, {
   3.6932110105794306`*^9, 3.6932110225141134`*^9}, {3.6932110830245743`*^9, 
   3.693211117993574*^9}, 3.6932111711456146`*^9, 3.6932112317920833`*^9, 
   3.6932117467965403`*^9, 3.693211841570961*^9, 3.693211928935958*^9, 
   3.693229281615094*^9, 3.693230251237553*^9, 3.69323431942124*^9, 
   3.6932351284665146`*^9, 3.693235200317624*^9, 3.6932355003907876`*^9, 
   3.6932355625903454`*^9, 3.693235609495028*^9, {3.6932436387914534`*^9, 
   3.6932436646119304`*^9}, 3.69324377440921*^9, 3.693250641325003*^9, 
   3.6932580654349794`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1: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
GRt7kVTm7scedfEisTgwK+8j9P8BCdwPAw==
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}},
  ImageSize->1000]], "Output",
 CellChangeTimes->{
  3.693210138086527*^9, {3.6932102458686914`*^9, 3.693210255681253*^9}, 
   3.693210317187771*^9, 3.693210404610771*^9, 3.6932107642873435`*^9, {
   3.6932110105794306`*^9, 3.6932110225141134`*^9}, {3.6932110830245743`*^9, 
   3.693211117993574*^9}, 3.6932111711456146`*^9, 3.6932112317920833`*^9, 
   3.6932117467965403`*^9, 3.693211841570961*^9, 3.693211928935958*^9, 
   3.693229281615094*^9, 3.693230251237553*^9, 3.69323431942124*^9, 
   3.6932351284665146`*^9, 3.693235200317624*^9, 3.6932355003907876`*^9, 
   3.6932355625903454`*^9, 3.693235609495028*^9, {3.6932436387914534`*^9, 
   3.6932436646119304`*^9}, 3.69324377440921*^9, 3.693250641325003*^9, 
   3.693258065671993*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ComputeSol", "[", 
       RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
       "Simplify"}], "//", "Chop"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"stress", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ComputeStress", "[", 
        RowBox[{
         RowBox[{"(", "dsols", ")"}], ",", "210000.", ",", "0.30"}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.693230238317814*^9, {3.693235462810638*^9, 3.6932354642807217`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"sollists", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"v", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xi", ",", "eta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"eta", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], ";",
     "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"sols", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Sol", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sollist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"sollists", "=", 
      RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"sols", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Sol", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sollist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"refine", "=", "0.5"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"sx", "=", "3"}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], " ", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "12"}], ",", "2"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"lp", ",", "lpd"}], "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6931440499884806`*^9, 3.6931440691165743`*^9}, {
   3.693144984835951*^9, 3.693144985092965*^9}, {3.693145048861613*^9, 
   3.6931450689137597`*^9}, {3.6931451020276537`*^9, 3.69314512749411*^9}, {
   3.693145160407993*^9, 3.693145163173151*^9}, {3.6931452083827367`*^9, 
   3.6931452093477917`*^9}, {3.693211726356371*^9, 3.6932117296435585`*^9}, {
   3.6932118758029184`*^9, 3.6932118930689063`*^9}, {3.6932302415459986`*^9, 
   3.6932302444241633`*^9}, 3.693235166167671*^9, {3.69323545497719*^9, 
   3.693235459291437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tol", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radius", "=", "0"}], ";"}], 
  RowBox[{"(*", "naoprecisa", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xdir", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordy", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "xdir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
     "order"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "KE", "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"ContributeLineNewman", "[", 
    RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"LinearSolve", "[", 
     RowBox[{"KE", ",", "FE", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deformed", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
      RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tabdeformed", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"deformed", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
        RowBox[{"deformed", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meshVisDef", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FaceForm", "[", 
        RowBox[{"{", 
         RowBox[{"LightRed", ",", 
          RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"tabdeformed", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"topol", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVisDef", ",", "meshVis1", ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", "1000", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6932349702124634`*^9, 3.6932350018282714`*^9}, 
   3.693235097035717*^9, {3.693243718216996*^9, 3.693243743057417*^9}}],

Cell[BoxData["10000.000000000002`"], "Output",
 CellChangeTimes->{3.693243744820518*^9, 3.69324379626046*^9, 
  3.6932506627902308`*^9, 3.6932580660460143`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1: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
NG3cdPoWKhuK/wHyAU7U
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.693243744820518*^9, 3.69324379626046*^9, 
  3.6932506627902308`*^9, 3.6932580662750273`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ComputeSol", "[", 
       RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
       "Simplify"}], "//", "Chop"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"stress", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ComputeStress", "[", 
        RowBox[{
         RowBox[{"(", "dsols", ")"}], ",", "210000.", ",", "0.30"}], "]"}], 
       "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.693235428018648*^9, 3.693235434088995*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"sollists", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"refine", "=", "1."}], ";", "\[IndentingNewLine]", 
   RowBox[{"v", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xi", ",", "eta"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"eta", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"sollists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "10"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lpd", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
    RowBox[{"sollists", "=", 
     RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"sollists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "10"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lpd", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "15"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "40"}], "}"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lpd", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "15"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "18"}], ",", "12"}], "}"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lpd", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "3"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "15"}], " ", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "13"}], ",", "10"}], "}"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lpd", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], ";",
    "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.693147768298156*^9, 3.6931477886013165`*^9}, {
  3.6931478309917417`*^9, 3.6931478405672894`*^9}, {3.693147914065493*^9, 
  3.693147930688444*^9}, {3.693148177536563*^9, 3.693148187558136*^9}, {
  3.693148304158805*^9, 3.693148327461138*^9}, {3.6931484619338293`*^9, 
  3.693148476868684*^9}, {3.6932117347968535`*^9, 3.6932117391471024`*^9}, {
  3.6932300380513597`*^9, 3.6932300605376453`*^9}, {3.6932301488906994`*^9, 
  3.6932301499847617`*^9}, {3.69323080034696*^9, 3.6932308101225195`*^9}, {
  3.693235372429468*^9, 3.693235372732486*^9}, {3.693235436024106*^9, 
  3.6932354401393414`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"topol", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\beamels.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], "]"}]}]}]}], 
   ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodesAll", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
beamco.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodes", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"N", "[", 
      RowBox[{"nnodesAll", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"allcoords", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"nnodes", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"topol", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"edges", " ", "are", " ", "straight"}], "*)"}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"meshVis1", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FaceForm", "[", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"nnodes", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"topol", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nodeVis", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
         "nnodes"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVis1", ",", "nodeVis", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"order", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"forcing", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"young", " ", "=", " ", 
    RowBox[{"28", " ", 
     RowBox[{"10", "^", "6"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"KN", "/", "m2"}], "*)"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nu", "=", "0.2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mu", "=", 
    RowBox[{"young", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lambda", "=", 
    RowBox[{"young", " ", 
     RowBox[{"nu", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "nu"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"Assemble", "[", 
     RowBox[{"allcoords", ",", "topol", ",", "order", ",", "forcing"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"ApplyNodeBC", "[", 
     RowBox[{"KE", ",", "FE", ",", "737", ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"10", "^", "16"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"ApplyNodeBC", "[", 
     RowBox[{"KE", ",", "FE", ",", "58", ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"10", "^", "16"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"tol", "=", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"radius", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ydir", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"coordy", "=", "0.2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
    RowBox[{"ComputeBoundaryTopol", "[", 
     RowBox[{
     "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
      "order"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"-", "x"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"diry", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Length", "[", "FE", "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FE", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", "1474", "}"}]}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FE", "=", 
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"FE", "[", 
     RowBox[{"[", "i", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"KE", ",", "FE", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"scale", "=", "4000"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"deformed", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
       RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"tabdeformed", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"deformed", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"deformed", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"meshVisDef", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"{", 
          RowBox[{"LightRed", ",", 
           RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
        RowBox[{"GraphicsComplex", "[", 
         RowBox[{"tabdeformed", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"topol", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVisDef", ",", "meshVis1", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.6932319205480323`*^9, 3.693231936913968*^9}, {
  3.693243227740943*^9, 3.693243258310691*^9}, {3.693243350564968*^9, 
  3.693243424964223*^9}, {3.6932510496253567`*^9, 3.6932510528545413`*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}, {{InsetBox["1", {2., 0.2}, {-1, 1}], 
     InsetBox["2", {1.975, 0.2}, {-1, 1}], 
     InsetBox["3", {2., 0.175}, {-1, 1}], 
     InsetBox["4", {1.97484227, 0.17487172}, {-1, 1}], 
     InsetBox["5", {2., 0.15}, {-1, 1}], InsetBox["6", {1.95, 0.2}, {-1, 1}], 
     InsetBox["7", {1.97468455, 0.14974344}, {-1, 1}], 
     InsetBox["8", {1.94968455, 0.17474344}, {-1, 1}], 
     InsetBox["9", {1.9493691, 0.149486881}, {-1, 1}], 
     InsetBox["10", {1.925, 0.2}, {-1, 1}], 
     InsetBox["11", {2., 0.125}, {-1, 1}], 
     InsetBox["12", {1.97472856, 0.124740731}, {-1, 1}], 
     InsetBox["13", {1.92462713, 0.174742598}, {-1, 1}], 
     InsetBox["14", {1.94945713, 0.124481462}, {-1, 1}], 
     InsetBox["15", {1.92425426, 0.149485196}, {-1, 1}], 
     InsetBox["16", {1.9, 0.2}, {-1, 1}], InsetBox["17", {2., 0.1}, {-1, 1}], 
     InsetBox["18", {1.97477258, 0.0997380217}, {-1, 1}], 
     InsetBox["19", {1.89956971, 0.174741756}, {-1, 1}], 
     InsetBox["20", {1.92425368, 0.124352655}, {-1, 1}], 
     InsetBox["21", {1.94954516, 0.0994760435}, {-1, 1}], 
     InsetBox["22", {1.89913942, 0.149483512}, {-1, 1}], 
     InsetBox["23", {1.875, 0.2}, {-1, 1}], 
     InsetBox["24", {2., 0.075}, {-1, 1}], 
     InsetBox["25", {1.9242531, 0.0992201142}, {-1, 1}], 
     InsetBox["26", {1.89905023, 0.124223848}, {-1, 1}], 
     InsetBox["27", {1.97484891, 0.0747322879}, {-1, 1}], 
     InsetBox["28", {1.87453939, 0.174748789}, {-1, 1}], 
     InsetBox["29", {1.94969782, 0.0744645758}, {-1, 1}], 
     InsetBox["30", {1.87407878, 0.149497578}, {-1, 1}], 
     InsetBox["31", {1.89896105, 0.0989641849}, {-1, 1}], 
     InsetBox["32", {1.92446961, 0.0743251254}, {-1, 1}], 
     InsetBox["33", {1.87394325, 0.124255207}, {-1, 1}], 
     InsetBox["34", {1.85, 0.2}, {-1, 1}], 
     InsetBox["35", {2., 0.05}, {-1, 1}], 
     InsetBox["36", {1.97492524, 0.049726554}, {-1, 1}], 
     InsetBox["37", {1.84950907, 0.174755822}, {-1, 1}], 
     InsetBox["38", {1.94985048, 0.0494531081}, {-1, 1}], 
     InsetBox["39", {1.84901814, 0.149511644}, {-1, 1}], 
     InsetBox["40", {1.8992414, 0.0741856751}, {-1, 1}], 
     InsetBox["41", {1.87380773, 0.0990128352}, {-1, 1}], 
     InsetBox["42", {1.92468612, 0.0494301367}, {-1, 1}], 
     InsetBox["43", {1.84883627, 0.124286565}, {-1, 1}], 
     InsetBox["44", {1.825, 0.2}, {-1, 1}], 
     InsetBox["45", {2., 0.025}, {-1, 1}], 
     InsetBox["46", {1.97496262, 0.024863277}, {-1, 1}], 
     InsetBox["47", {1.82449661, 0.174760464}, {-1, 1}], 
     InsetBox["48", {1.87410317, 0.074161051}, {-1, 1}], 
     InsetBox["49", {1.89952175, 0.0494071654}, {-1, 1}], 
     InsetBox["50", {1.8486544, 0.0990614854}, {-1, 1}], 
     InsetBox["51", {1.94992524, 0.024726554}, {-1, 1}], 
     InsetBox["52", {1.82399321, 0.149520928}, {-1, 1}], 
     InsetBox["53", {1.92484306, 0.0247150684}, {-1, 1}], 
     InsetBox["54", {1.82389445, 0.124353446}, {-1, 1}], 
     InsetBox["55", {1.87439861, 0.0493092669}, {-1, 1}], 
     InsetBox["56", {1.84896494, 0.0741364269}, {-1, 1}], 
     InsetBox["57", {1.8, 0.2}, {-1, 1}], InsetBox["58", {2., 0.}, {-1, 1}], 
     InsetBox["59", {1.975, 0.}, {-1, 1}], 
     InsetBox["60", {1.89976088, 0.0247035827}, {-1, 1}], 
     InsetBox["61", {1.79948414, 0.174765105}, {-1, 1}], 
     InsetBox["62", {1.82379568, 0.0991859635}, {-1, 1}], 
     InsetBox["63", {1.95, 0.}, {-1, 1}], 
     InsetBox["64", {1.79896829, 0.149530211}, {-1, 1}], 
     InsetBox["65", {1.84927547, 0.0492113684}, {-1, 1}], 
     InsetBox["66", {1.925, 0.}, {-1, 1}], 
     InsetBox["67", {1.79895262, 0.124420326}, {-1, 1}], 
     InsetBox["68", {1.87469931, 0.0246546334}, {-1, 1}], 
     InsetBox["69", {1.82403855, 0.0742011381}, {-1, 1}], 
     InsetBox["70", {1.9, 0.}, {-1, 1}], 
     InsetBox["71", {1.79893695, 0.0993104416}, {-1, 1}], 
     InsetBox["72", {1.775, 0.2}, {-1, 1}], 
     InsetBox["73", {1.77449774, 0.174785991}, {-1, 1}], 
     InsetBox["74", {1.84963774, 0.0246056842}, {-1, 1}], 
     InsetBox["75", {1.82428141, 0.0492163128}, {-1, 1}], 
     InsetBox["76", {1.77399549, 0.149571983}, {-1, 1}], 
     InsetBox["77", {1.875, 0.}, {-1, 1}], 
     InsetBox["78", {1.79911215, 0.0742658494}, {-1, 1}], 
     InsetBox["79", {1.77394143, 0.124470805}, {-1, 1}], 
     InsetBox["80", {1.77388736, 0.0993696272}, {-1, 1}], 
     InsetBox["81", {1.82464071, 0.0246081564}, {-1, 1}], 
     InsetBox["82", {1.85, 0.}, {-1, 1}], 
     InsetBox["83", {1.75, 0.2}, {-1, 1}], 
     InsetBox["84", {1.79928735, 0.0492212571}, {-1, 1}], 
     InsetBox["85", {1.74951134, 0.174806877}, {-1, 1}], 
     InsetBox["86", {1.74902269, 0.149613754}, {-1, 1}], 
     InsetBox["87", {1.77407516, 0.0744309587}, {-1, 1}], 
     InsetBox["88", {1.74893023, 0.124521284}, {-1, 1}], 
     InsetBox["89", {1.825, 0.}, {-1, 1}], 
     InsetBox["90", {1.79964368, 0.0246106286}, {-1, 1}], 
     InsetBox["91", {1.74883777, 0.0994288129}, {-1, 1}], 
     InsetBox["92", {1.77426296, 0.0494922901}, {-1, 1}], 
     InsetBox["93", {1.725, 0.2}, {-1, 1}], 
     InsetBox["94", {1.72451607, 0.174800859}, {-1, 1}], 
     InsetBox["95", {1.72403215, 0.149601719}, {-1, 1}], 
     InsetBox["96", {1.74903817, 0.074596068}, {-1, 1}], 
     InsetBox["97", {1.8, 0.}, {-1, 1}], 
     InsetBox["98", {1.77463148, 0.0247461451}, {-1, 1}], 
     InsetBox["99", {1.72399421, 0.124534707}, {-1, 1}], 
     InsetBox["100", {1.74923857, 0.0497633231}, {-1, 1}], 
     InsetBox["101", {1.72395627, 0.0994676949}, {-1, 1}], 
     InsetBox["102", {1.7, 0.2}, {-1, 1}], 
     InsetBox["103", {1.775, 0.}, {-1, 1}], 
     InsetBox["104", {1.69952081, 0.174794842}, {-1, 1}], 
     InsetBox["105", {1.72411323, 0.0745186942}, {-1, 1}], 
     InsetBox["106", {1.69904161, 0.149589683}, {-1, 1}], 
     InsetBox["107", {1.74961928, 0.0248816615}, {-1, 1}], 
     InsetBox["108", {1.69905819, 0.12454813}, {-1, 1}], 
     InsetBox["109", {1.72427019, 0.0495696935}, {-1, 1}], 
     InsetBox["110", {1.69907477, 0.0995065769}, {-1, 1}], 
     InsetBox["111", {1.75, 0.}, {-1, 1}], 
     InsetBox["112", {1.675, 0.2}, {-1, 1}], 
     InsetBox["113", {1.69918829, 0.0744413204}, {-1, 1}], 
     InsetBox["114", {1.7246351, 0.0247848468}, {-1, 1}], 
     InsetBox["115", {1.67453431, 0.174854566}, {-1, 1}], 
     InsetBox["116", {1.67406862, 0.149709132}, {-1, 1}], 
     InsetBox["117", {1.67408247, 0.124639147}, {-1, 1}], 
     InsetBox["118", {1.69930182, 0.0493760639}, {-1, 1}], 
     InsetBox["119", {1.725, 0.}, {-1, 1}], 
     InsetBox["120", {1.67409633, 0.0995691623}, {-1, 1}], 
     InsetBox["121", {1.69965091, 0.024688032}, {-1, 1}], 
     InsetBox["122", {1.67422044, 0.0745189199}, {-1, 1}], 
     InsetBox["123", {1.65, 0.2}, {-1, 1}], 
     InsetBox["124", {1.64954781, 0.174914291}, {-1, 1}], 
     InsetBox["125", {1.64909562, 0.149828581}, {-1, 1}], 
     InsetBox["126", {1.67434454, 0.0494686775}, {-1, 1}], 
     InsetBox["127", {1.64910675, 0.124730165}, {-1, 1}], 
     InsetBox["128", {1.7, 0.}, {-1, 1}], 
     InsetBox["129", {1.64911788, 0.0996317478}, {-1, 1}], 
     InsetBox["130", {1.67467227, 0.0247343387}, {-1, 1}], 
     InsetBox["131", {1.64925258, 0.0745965194}, {-1, 1}], 
     InsetBox["132", {1.625, 0.2}, {-1, 1}], 
     InsetBox["133", {1.62463238, 0.174978857}, {-1, 1}], 
     InsetBox["134", {1.62426475, 0.149957715}, {-1, 1}], 
     InsetBox["135", {1.64938727, 0.049561291}, {-1, 1}], 
     InsetBox["136", {1.675, 0.}, {-1, 1}], 
     InsetBox["137", {1.6242458, 0.124888683}, {-1, 1}], 
     InsetBox["138", {1.62422685, 0.0998196518}, {-1, 1}], 
     InsetBox["139", {1.64969363, 0.0247806455}, {-1, 1}], 
     InsetBox["140", {1.62436776, 0.0746988269}, {-1, 1}], 
     InsetBox["141", {1.6, 0.2}, {-1, 1}], 
     InsetBox["142", {1.59971694, 0.175043424}, {-1, 1}], 
     InsetBox["143", {1.65, 0.}, {-1, 1}], 
     InsetBox["144", {1.59943389, 0.150086848}, {-1, 1}], 
     InsetBox["145", {1.62450867, 0.0495780019}, {-1, 1}], 
     InsetBox["146", {1.59938485, 0.125047202}, {-1, 1}], 
     InsetBox["147", {1.59933581, 0.100007556}, {-1, 1}], 
     InsetBox["148", {1.62475433, 0.0247890009}, {-1, 1}], 
     InsetBox["149", {1.59948294, 0.0748011343}, {-1, 1}], 
     InsetBox["150", {1.575, 0.2}, {-1, 1}], 
     InsetBox["151", {1.625, 0.}, {-1, 1}], 
     InsetBox["152", {1.57474775, 0.174979753}, {-1, 1}], 
     InsetBox["153", {1.59963006, 0.0495947128}, {-1, 1}], 
     InsetBox["154", {1.57449551, 0.149959506}, {-1, 1}], 
     InsetBox["155", {1.57450343, 0.124890496}, {-1, 1}], 
     InsetBox["156", {1.59981503, 0.0247973564}, {-1, 1}], 
     InsetBox["157", {1.57451135, 0.0998214873}, {-1, 1}], 
     InsetBox["158", {1.57462739, 0.0747230176}, {-1, 1}], 
     InsetBox["159", {1.6, 0.}, {-1, 1}], 
     InsetBox["160", {1.55, 0.2}, {-1, 1}], 
     InsetBox["161", {1.54977856, 0.174916081}, {-1, 1}], 
     InsetBox["162", {1.57474342, 0.0496245479}, {-1, 1}], 
     InsetBox["163", {1.54955712, 0.149832163}, {-1, 1}], 
     InsetBox["164", {1.54962201, 0.124733791}, {-1, 1}], 
     InsetBox["165", {1.57487171, 0.024812274}, {-1, 1}], 
     InsetBox["166", {1.54968689, 0.0996354188}, {-1, 1}], 
     InsetBox["167", {1.54977184, 0.0746449009}, {-1, 1}], 
     InsetBox["168", {1.575, 0.}, {-1, 1}], 
     InsetBox["169", {1.54985678, 0.0496543831}, {-1, 1}], 
     InsetBox["170", {1.525, 0.2}, {-1, 1}], 
     InsetBox["171", {1.5248107, 0.174864441}, {-1, 1}], 
     InsetBox["172", {1.52462141, 0.149728882}, {-1, 1}], 
     InsetBox["173", {1.52466154, 0.124567689}, {-1, 1}], 
     InsetBox["174", {1.54992839, 0.0248271915}, {-1, 1}], 
     InsetBox["175", {1.52470168, 0.099406496}, {-1, 1}], 
     InsetBox["176", {1.52484258, 0.074463694}, {-1, 1}], 
     InsetBox["177", {1.55, 0.}, {-1, 1}], 
     InsetBox["178", {1.52498348, 0.0495208919}, {-1, 1}], 
     InsetBox["179", {1.5, 0.2}, {-1, 1}], 
     InsetBox["180", {1.49984284, 0.1748128}, {-1, 1}], 
     InsetBox["181", {1.49968569, 0.1496256}, {-1, 1}], 
     InsetBox["182", {1.49970108, 0.124401587}, {-1, 1}], 
     InsetBox["183", {1.52499174, 0.024760446}, {-1, 1}], 
     InsetBox["184", {1.49971648, 0.0991775732}, {-1, 1}], 
     InsetBox["185", {1.525, 0.}, {-1, 1}], 
     InsetBox["186", {1.49991332, 0.074282487}, {-1, 1}], 
     InsetBox["187", {1.50011017, 0.0493874008}, {-1, 1}], 
     InsetBox["188", {1.475, 0.2}, {-1, 1}], 
     InsetBox["189", {1.47478871, 0.174779566}, {-1, 1}], 
     InsetBox["190", {1.47457742, 0.149559133}, {-1, 1}], 
     InsetBox["191", {1.50005509, 0.0246937004}, {-1, 1}], 
     InsetBox["192", {1.47456172, 0.124293216}, {-1, 1}], 
     InsetBox["193", {1.47454603, 0.099027299}, {-1, 1}], 
     InsetBox["194", {1.5, 0.}, {-1, 1}], 
     InsetBox["195", {1.4747943, 0.0741516032}, {-1, 1}], 
     InsetBox["196", {1.47504256, 0.0492759073}, {-1, 1}], 
     InsetBox["197", {1.45, 0.2}, {-1, 1}], 
     InsetBox["198", {1.44973457, 0.174746333}, {-1, 1}], 
     InsetBox["199", {1.44946915, 0.149492665}, {-1, 1}], 
     InsetBox["200", {1.47502128, 0.0246379537}, {-1, 1}], 
     InsetBox["201", {1.44942236, 0.124184845}, {-1, 1}], 
     InsetBox["202", {1.44937558, 0.0988770247}, {-1, 1}], 
     InsetBox["203", {1.475, 0.}, {-1, 1}], 
     InsetBox["204", {1.44967527, 0.0740207193}, {-1, 1}], 
     InsetBox["205", {1.44997495, 0.0491644139}, {-1, 1}], 
     InsetBox["206", {1.425, 0.2}, {-1, 1}], 
     InsetBox["207", {1.42471561, 0.17474498}, {-1, 1}], 
     InsetBox["208", {1.44998748, 0.024582207}, {-1, 1}], 
     InsetBox["209", {1.42443122, 0.14948996}, {-1, 1}], 
     InsetBox["210", {1.42438384, 0.124212579}, {-1, 1}], 
     InsetBox["211", {1.42433646, 0.0989351979}, {-1, 1}], 
     InsetBox["212", {1.45, 0.}, {-1, 1}], 
     InsetBox["213", {1.4246191, 0.0740559937}, {-1, 1}], 
     InsetBox["214", {1.42490174, 0.0491767896}, {-1, 1}], 
     InsetBox["215", {1.4, 0.2}, {-1, 1}], 
     InsetBox["216", {1.39969665, 0.174743627}, {-1, 1}], 
     InsetBox["217", {1.42495087, 0.0245883948}, {-1, 1}], 
     InsetBox["218", {1.3993933, 0.149487254}, {-1, 1}], 
     InsetBox["219", {1.39934532, 0.124240312}, {-1, 1}], 
     InsetBox["220", {1.425, 0.}, {-1, 1}], 
     InsetBox["221", {1.39929734, 0.098993371}, {-1, 1}], 
     InsetBox["222", {1.39956293, 0.0740912681}, {-1, 1}], 
     InsetBox["223", {1.39982852, 0.0491891652}, {-1, 1}], 
     InsetBox["224", {1.375, 0.2}, {-1, 1}], 
     InsetBox["225", {1.39991426, 0.0245945826}, {-1, 1}], 
     InsetBox["226", {1.37471119, 0.174781841}, {-1, 1}], 
     InsetBox["227", {1.37442238, 0.149563683}, {-1, 1}], 
     InsetBox["228", {1.37441914, 0.1244691}, {-1, 1}], 
     InsetBox["229", {1.4, 0.}, {-1, 1}], 
     InsetBox["230", {1.37441591, 0.0993745164}, {-1, 1}], 
     InsetBox["231", {1.37466371, 0.0743293844}, {-1, 1}], 
     InsetBox["232", {1.37491152, 0.0492842524}, {-1, 1}], 
     InsetBox["233", {1.37495576, 0.0246421262}, {-1, 1}], 
     InsetBox["234", {1.35, 0.2}, {-1, 1}], 
     InsetBox["235", {1.34972573, 0.174820056}, {-1, 1}], 
     InsetBox["236", {1.34945146, 0.149640112}, {-1, 1}], 
     InsetBox["237", {1.34949297, 0.124697887}, {-1, 1}], 
     InsetBox["238", {1.375, 0.}, {-1, 1}], 
     InsetBox["239", {1.34953448, 0.0997556617}, {-1, 1}], 
     InsetBox["240", {1.3497645, 0.0745675006}, {-1, 1}], 
     InsetBox["241", {1.34999452, 0.0493793395}, {-1, 1}], 
     InsetBox["242", {1.34999726, 0.0246896698}, {-1, 1}], 
     InsetBox["243", {1.325, 0.2}, {-1, 1}], 
     InsetBox["244", {1.32470635, 0.174769274}, {-1, 1}], 
     InsetBox["245", {1.3244127, 0.149538548}, {-1, 1}], 
     InsetBox["246", {1.32453468, 0.124608234}, {-1, 1}], 
     InsetBox["247", {1.35, 0.}, {-1, 1}], 
     InsetBox["248", {1.32465666, 0.0996779199}, {-1, 1}], 
     InsetBox["249", {1.32490025, 0.0745294787}, {-1, 1}], 
     InsetBox["250", {1.32514385, 0.0493810374}, {-1, 1}], 
     InsetBox["251", {1.32507192, 0.0246905187}, {-1, 1}], 
     InsetBox["252", {1.3, 0.2}, {-1, 1}], 
     InsetBox["253", {1.29968698, 0.174718492}, {-1, 1}], 
     InsetBox["254", {1.29937395, 0.149436984}, {-1, 1}], 
     InsetBox["255", {1.325, 0.}, {-1, 1}], 
     InsetBox["256", {1.2995764, 0.124518581}, {-1, 1}], 
     InsetBox["257", {1.29977884, 0.0996001781}, {-1, 1}], 
     InsetBox["258", {1.30003601, 0.0744914567}, {-1, 1}], 
     InsetBox["259", {1.30029318, 0.0493827353}, {-1, 1}], 
     InsetBox["260", {1.30014659, 0.0246913677}, {-1, 1}], 
     InsetBox["261", {1.275, 0.2}, {-1, 1}], 
     InsetBox["262", {1.27480679, 0.174701194}, {-1, 1}], 
     InsetBox["263", {1.27461358, 0.149402389}, {-1, 1}], 
     InsetBox["264", {1.3, 0.}, {-1, 1}], 
     InsetBox["265", {1.27481117, 0.124380258}, {-1, 1}], 
     InsetBox["266", {1.27500877, 0.0993581266}, {-1, 1}], 
     InsetBox["267", {1.27513468, 0.0743888734}, {-1, 1}], 
     InsetBox["268", {1.2752606, 0.0494196202}, {-1, 1}], 
     InsetBox["269", {1.2751303, 0.0247098101}, {-1, 1}], 
     InsetBox["270", {1.25, 0.2}, {-1, 1}], 
     InsetBox["271", {1.2499266, 0.174683897}, {-1, 1}], 
     InsetBox["272", {1.24985321, 0.149367793}, {-1, 1}], 
     InsetBox["273", {1.275, 0.}, {-1, 1}], 
     InsetBox["274", {1.25004595, 0.124241934}, {-1, 1}], 
     InsetBox["275", {1.25023869, 0.099116075}, {-1, 1}], 
     InsetBox["276", {1.25023335, 0.0742862901}, {-1, 1}], 
     InsetBox["277", {1.25022802, 0.0494565051}, {-1, 1}], 
     InsetBox["278", {1.25011401, 0.0247282526}, {-1, 1}], 
     InsetBox["279", {1.225, 0.2}, {-1, 1}], 
     InsetBox["280", {1.2250033, 0.174692958}, {-1, 1}], 
     InsetBox["281", {1.25, 0.}, {-1, 1}], 
     InsetBox["282", {1.2250066, 0.149385917}, {-1, 1}], 
     InsetBox["283", {1.22517116, 0.124178345}, {-1, 1}], 
     InsetBox["284", {1.22533572, 0.0989707737}, {-1, 1}], 
     InsetBox["285", {1.22531991, 0.0741813157}, {-1, 1}], 
     InsetBox["286", {1.22530411, 0.0493918577}, {-1, 1}], 
     InsetBox["287", {1.22515205, 0.0246959288}, {-1, 1}], 
     InsetBox["288", {1.2, 0.2}, {-1, 1}], 
     InsetBox["289", {1.20007999, 0.17470202}, {-1, 1}], 
     InsetBox["290", {1.225, 0.}, {-1, 1}], 
     InsetBox["291", {1.20015999, 0.149404041}, {-1, 1}], 
     InsetBox["292", {1.20029637, 0.124114757}, {-1, 1}], 
     InsetBox["293", {1.20043275, 0.0988254725}, {-1, 1}], 
     InsetBox["294", {1.20040647, 0.0740763413}, {-1, 1}], 
     InsetBox["295", {1.2003802, 0.0493272102}, {-1, 1}], 
     InsetBox["296", {1.2001901, 0.0246636051}, {-1, 1}], 
     InsetBox["297", {1.2, 0.}, {-1, 1}], 
     InsetBox["298", {1.175, 0.2}, {-1, 1}], 
     InsetBox["299", {1.1751285, 0.174706735}, {-1, 1}], 
     InsetBox["300", {1.175257, 0.149413469}, {-1, 1}], 
     InsetBox["301", {1.17547828, 0.124266455}, {-1, 1}], 
     InsetBox["302", {1.17569957, 0.09911944}, {-1, 1}], 
     InsetBox["303", {1.17558517, 0.0742588709}, {-1, 1}], 
     InsetBox["304", {1.17547077, 0.0493983018}, {-1, 1}], 
     InsetBox["305", {1.17523539, 0.0246991509}, {-1, 1}], 
     InsetBox["306", {1.175, 0.}, {-1, 1}], 
     InsetBox["307", {1.15, 0.2}, {-1, 1}], 
     InsetBox["308", {1.150177, 0.174711449}, {-1, 1}], 
     InsetBox["309", {1.150354, 0.149422898}, {-1, 1}], 
     InsetBox["310", {1.1506602, 0.124418153}, {-1, 1}], 
     InsetBox["311", {1.15096639, 0.0994134075}, {-1, 1}], 
     InsetBox["312", {1.15076387, 0.0744414004}, {-1, 1}], 
     InsetBox["313", {1.15056135, 0.0494693934}, {-1, 1}], 
     InsetBox["314", {1.15028067, 0.0247346967}, {-1, 1}], 
     InsetBox["315", {1.15, 0.}, {-1, 1}], 
     InsetBox["316", {1.125, 0.2}, {-1, 1}], 
     InsetBox["317", {1.12517108, 0.174820491}, {-1, 1}], 
     InsetBox["318", {1.12534217, 0.149640981}, {-1, 1}], 
     InsetBox["319", {1.1256311, 0.124640516}, {-1, 1}], 
     InsetBox["320", {1.12592003, 0.0996400505}, {-1, 1}], 
     InsetBox["321", {1.12574572, 0.0746183897}, {-1, 1}], 
     InsetBox["322", {1.12557141, 0.0495967289}, {-1, 1}], 
     InsetBox["323", {1.12528571, 0.0247983644}, {-1, 1}], 
     InsetBox["324", {1.125, 0.}, {-1, 1}], 
     InsetBox["325", {1.1, 0.2}, {-1, 1}], 
     InsetBox["326", {1.10016516, 0.174929532}, {-1, 1}], 
     InsetBox["327", {1.10033033, 0.149859064}, {-1, 1}], 
     InsetBox["328", {1.100602, 0.124862879}, {-1, 1}], 
     InsetBox["329", {1.10087367, 0.0998666935}, {-1, 1}], 
     InsetBox["330", {1.10072757, 0.074795379}, {-1, 1}], 
     InsetBox["331", {1.10058148, 0.0497240644}, {-1, 1}], 
     InsetBox["332", {1.10029074, 0.0248620322}, {-1, 1}], 
     InsetBox["333", {1.1, 0.}, {-1, 1}], 
     InsetBox["334", {1.075, 0.2}, {-1, 1}], 
     InsetBox["335", {1.07510599, 0.175001433}, {-1, 1}], 
     InsetBox["336", {1.07521199, 0.150002865}, {-1, 1}], 
     InsetBox["337", {1.07539728, 0.124953546}, {-1, 1}], 
     InsetBox["338", {1.07558258, 0.0999042275}, {-1, 1}], 
     InsetBox["339", {1.0755031, 0.0748530477}, {-1, 1}], 
     InsetBox["340", {1.07542361, 0.049801868}, {-1, 1}], 
     InsetBox["341", {1.07521181, 0.024900934}, {-1, 1}], 
     InsetBox["342", {1.075, 0.}, {-1, 1}], 
     InsetBox["343", {1.05, 0.2}, {-1, 1}], 
     InsetBox["344", {1.05004682, 0.175073333}, {-1, 1}], 
     InsetBox["345", {1.05009365, 0.150146666}, {-1, 1}], 
     InsetBox["346", {1.05019257, 0.125044214}, {-1, 1}], 
     InsetBox["347", {1.05029149, 0.0999417614}, {-1, 1}], 
     InsetBox["348", {1.05027862, 0.0749107165}, {-1, 1}], 
     InsetBox["349", {1.05026575, 0.0498796716}, {-1, 1}], 
     InsetBox["350", {1.05013287, 0.0249398358}, {-1, 1}], 
     InsetBox["351", {1.05, 0.}, {-1, 1}], 
     InsetBox["352", {1.025, 0.2}, {-1, 1}], 
     InsetBox["353", {1.02489107, 0.174994826}, {-1, 1}], 
     InsetBox["354", {1.02478214, 0.149989653}, {-1, 1}], 
     InsetBox["355", {1.02472634, 0.124892841}, {-1, 1}], 
     InsetBox["356", {1.02467055, 0.0997960287}, {-1, 1}], 
     InsetBox["357", {1.02477671, 0.0748066124}, {-1, 1}], 
     InsetBox["358", {1.02488287, 0.0498171961}, {-1, 1}], 
     InsetBox["359", {1.02494143, 0.024908598}, {-1, 1}], 
     InsetBox["360", {1.025, 0.}, {-1, 1}], 
     InsetBox["361", {1., 0.2}, {-1, 1}], 
     InsetBox["362", {0.999735316, 0.17491632}, {-1, 1}], 
     InsetBox["363", {0.999470631, 0.149832639}, {-1, 1}], 
     InsetBox["364", {0.999260119, 0.124741468}, {-1, 1}], 
     InsetBox["365", {0.999049606, 0.0996502959}, {-1, 1}], 
     InsetBox["366", {0.999274796, 0.0747025083}, {-1, 1}], 
     InsetBox["367", {0.999499986, 0.0497547206}, {-1, 1}], 
     InsetBox["368", {0.999749993, 0.0248773603}, {-1, 1}], 
     InsetBox["369", {1., 0.}, {-1, 1}], 
     InsetBox["370", {0.975, 0.2}, {-1, 1}], 
     InsetBox["371", {0.974552476, 0.174841559}, {-1, 1}], 
     InsetBox["372", {0.974104953, 0.149683117}, {-1, 1}], 
     InsetBox["373", {0.973897244, 0.12455823}, {-1, 1}], 
     InsetBox["374", {0.973689535, 0.0994333435}, {-1, 1}], 
     InsetBox["375", {0.973926403, 0.0745371715}, {-1, 1}], 
     InsetBox["376", {0.974163272, 0.0496409995}, {-1, 1}], 
     InsetBox["377", {0.974581636, 0.0248204998}, {-1, 1}], 
     InsetBox["378", {0.975, 0.}, {-1, 1}], 
     InsetBox["379", {0.95, 0.2}, {-1, 1}], 
     InsetBox["380", {0.949369637, 0.174766798}, {-1, 1}], 
     InsetBox["381", {0.948739274, 0.149533595}, {-1, 1}], 
     InsetBox["382", {0.948534369, 0.124374993}, {-1, 1}], 
     InsetBox["383", {0.948329464, 0.0992163911}, {-1, 1}], 
     InsetBox["384", {0.948578011, 0.0743718348}, {-1, 1}], 
     InsetBox["385", {0.948826557, 0.0495272785}, {-1, 1}], 
     InsetBox["386", {0.949413279, 0.0247636392}, {-1, 1}], 
     InsetBox["387", {0.95, 0.}, {-1, 1}], 
     InsetBox["388", {0.925, 0.2}, {-1, 1}], 
     InsetBox["389", {0.924292358, 0.174679026}, {-1, 1}], 
     InsetBox["390", {0.923584716, 0.149358051}, {-1, 1}], 
     InsetBox["391", {0.923253657, 0.124280629}, {-1, 1}], 
     InsetBox["392", {0.922922597, 0.0992032065}, {-1, 1}], 
     InsetBox["393", {0.923037133, 0.0742679234}, {-1, 1}], 
     InsetBox["394", {0.923151668, 0.0493326403}, {-1, 1}], 
     InsetBox["395", {0.924075834, 0.0246663202}, {-1, 1}], 
     InsetBox["396", {0.925, 0.}, {-1, 1}], 
     InsetBox["397", {0.9, 0.2}, {-1, 1}], 
     InsetBox["398", {0.899215079, 0.174591254}, {-1, 1}], 
     InsetBox["399", {0.898430158, 0.149182507}, {-1, 1}], 
     InsetBox["400", {0.897972944, 0.124186265}, {-1, 1}], 
     InsetBox["401", {0.89751573, 0.0991900219}, {-1, 1}], 
     InsetBox["402", {0.897496254, 0.074164012}, {-1, 1}], 
     InsetBox["403", {0.897476779, 0.0491380022}, {-1, 1}], 
     InsetBox["404", {0.89873839, 0.0245690011}, {-1, 1}], 
     InsetBox["405", {0.9, 0.}, {-1, 1}], 
     InsetBox["406", {0.875, 0.2}, {-1, 1}], 
     InsetBox["407", {0.874104153, 0.174729898}, {-1, 1}], 
     InsetBox["408", {0.873208306, 0.149459796}, {-1, 1}], 
     InsetBox["409", {0.872439715, 0.1243332}, {-1, 1}], 
     InsetBox["410", {0.871671124, 0.0992066045}, {-1, 1}], 
     InsetBox["411", {0.871299292, 0.0741053866}, {-1, 1}], 
     InsetBox["412", {0.870927459, 0.0490041688}, {-1, 1}], 
     InsetBox["413", {0.87296373, 0.0245020844}, {-1, 1}], 
     InsetBox["414", {0.875, 0.}, {-1, 1}], 
     InsetBox["415", {0.85, 0.2}, {-1, 1}], 
     InsetBox["416", {0.848993227, 0.174868543}, {-1, 1}], 
     InsetBox["417", {0.847986455, 0.149737086}, {-1, 1}], 
     InsetBox["418", {0.846906487, 0.124480136}, {-1, 1}], 
     InsetBox["419", {0.845826518, 0.0992231871}, {-1, 1}], 
     InsetBox["420", {0.845102329, 0.0740467612}, {-1, 1}], 
     InsetBox["421", {0.84437814, 0.0488703354}, {-1, 1}], 
     InsetBox["422", {0.84718907, 0.0244351677}, {-1, 1}], 
     InsetBox["423", {0.85, 0.}, {-1, 1}], 
     InsetBox["424", {0.825, 0.2}, {-1, 1}], 
     InsetBox["425", {0.823918899, 0.175069933}, {-1, 1}], 
     InsetBox["426", {0.822837799, 0.150139867}, {-1, 1}], 
     InsetBox["427", {0.821427889, 0.125482958}, {-1, 1}], 
     InsetBox["428", {0.82001798, 0.10082605}, {-1, 1}], 
     InsetBox["429", {0.817288458, 0.075578603}, {-1, 1}], 
     InsetBox["430", {0.825, 0.}, {-1, 1}], 
     InsetBox["431", {0.819779468, 0.0251655781}, {-1, 1}], 
     InsetBox["432", {0.814558936, 0.0503311562}, {-1, 1}], 
     InsetBox["433", {0.8, 0.2}, {-1, 1}], 
     InsetBox["434", {0.798844571, 0.175271324}, {-1, 1}], 
     InsetBox["435", {0.797689143, 0.150542648}, {-1, 1}], 
     InsetBox["436", {0.795949292, 0.12648578}, {-1, 1}], 
     InsetBox["437", {0.794209441, 0.102428912}, {-1, 1}], 
     InsetBox["438", {0.8, 0.}, {-1, 1}], 
     InsetBox["439", {0.789474586, 0.0771104447}, {-1, 1}], 
     InsetBox["440", {0.792369866, 0.0258959885}, {-1, 1}], 
     InsetBox["441", {0.784739732, 0.051791977}, {-1, 1}], 
     InsetBox["442", {0.775, 0.2}, {-1, 1}], 
     InsetBox["443", {0.774180336, 0.175759464}, {-1, 1}], 
     InsetBox["444", {0.773360672, 0.151518928}, {-1, 1}], 
     InsetBox["445", {0.772378288, 0.128406152}, {-1, 1}], 
     InsetBox["446", {0.771395905, 0.105293375}, {-1, 1}], 
     InsetBox["447", {0.769115618, 0.0844439179}, {-1, 1}], 
     InsetBox["448", {0.766835331, 0.0635944605}, {-1, 1}], 
     InsetBox["449", {0.775, 0.}, {-1, 1}], 
     InsetBox["450", {0.767884883, 0.021821852}, {-1, 1}], 
     InsetBox["451", {0.760769766, 0.043643704}, {-1, 1}], 
     InsetBox["452", {0.75, 0.2}, {-1, 1}], 
     InsetBox["453", {0.7495161, 0.176247604}, {-1, 1}], 
     InsetBox["454", {0.7490322, 0.152495208}, {-1, 1}], 
     InsetBox["455", {0.748807285, 0.130326523}, {-1, 1}], 
     InsetBox["456", {0.74858237, 0.108157838}, {-1, 1}], 
     InsetBox["457", {0.74875665, 0.0917773911}, {-1, 1}], 
     InsetBox["458", {0.74893093, 0.0753969441}, {-1, 1}], 
     InsetBox["459", {0.745985287, 0.0572313423}, {-1, 1}], 
     InsetBox["460", {0.75, 0.}, {-1, 1}], 
     InsetBox["461", {0.7433999, 0.0177477155}, {-1, 1}], 
     InsetBox["462", {0.736799801, 0.035495431}, {-1, 1}], 
     InsetBox["463", {0.725, 0.2}, {-1, 1}], 
     InsetBox["464", {0.724967499, 0.176241324}, {-1, 1}], 
     InsetBox["465", {0.731200808, 0.0708189806}, {-1, 1}], 
     InsetBox["466", {0.724934999, 0.152482647}, {-1, 1}], 
     InsetBox["467", {0.728768952, 0.0891562692}, {-1, 1}], 
     InsetBox["468", {0.725636048, 0.129988103}, {-1, 1}], 
     InsetBox["469", {0.726337096, 0.107493558}, {-1, 1}], 
     InsetBox["470", {0.725135244, 0.0508682241}, {-1, 1}], 
     InsetBox["471", {0.725, 0.}, {-1, 1}], 
     InsetBox["472", {0.721754747, 0.0158624502}, {-1, 1}], 
     InsetBox["473", {0.718509494, 0.0317249005}, {-1, 1}], 
     InsetBox["474", {0.713470687, 0.0662410171}, {-1, 1}], 
     InsetBox["475", {0.708781255, 0.0865351472}, {-1, 1}], 
     InsetBox["476", {0.704091823, 0.106829277}, {-1, 1}], 
     InsetBox["477", {0.70246481, 0.129649682}, {-1, 1}], 
     InsetBox["478", {0.700418899, 0.176235043}, {-1, 1}], 
     InsetBox["479", {0.7, 0.2}, {-1, 1}], 
     InsetBox["480", {0.700837798, 0.152470087}, {-1, 1}], 
     InsetBox["481", {0.703726665, 0.0446405097}, {-1, 1}], 
     InsetBox["482", {0.700219188, 0.0279543699}, {-1, 1}], 
     InsetBox["483", {0.700109594, 0.013977185}, {-1, 1}], 
     InsetBox["484", {0.7, 0.}, {-1, 1}], 
     InsetBox["485", {0.688943835, 0.057556119}, {-1, 1}], 
     InsetBox["486", {0.684244104, 0.0809567288}, {-1, 1}], 
     InsetBox["487", {0.679544373, 0.104357339}, {-1, 1}], 
     InsetBox["488", {0.677864701, 0.128113684}, {-1, 1}], 
     InsetBox["489", {0.675592515, 0.175935014}, {-1, 1}], 
     InsetBox["490", {0.67618503, 0.151870028}, {-1, 1}], 
     InsetBox["491", {0.675, 0.2}, {-1, 1}], 
     InsetBox["492", {0.682318085, 0.0384127954}, {-1, 1}], 
     InsetBox["493", {0.678659043, 0.0192063977}, {-1, 1}], 
     InsetBox["494", {0.675, 0.}, {-1, 1}], 
     InsetBox["495", {0.664416982, 0.0488712208}, {-1, 1}], 
     InsetBox["496", {0.659706952, 0.0753783103}, {-1, 1}], 
     InsetBox["497", {0.654996922, 0.1018854}, {-1, 1}], 
     InsetBox["498", {0.653264593, 0.126577685}, {-1, 1}], 
     InsetBox["499", {0.651532263, 0.15126997}, {-1, 1}], 
     InsetBox["500", {0.650766131, 0.175634985}, {-1, 1}], 
     InsetBox["501", {0.65, 0.2}, {-1, 1}], 
     InsetBox["502", {0.657208491, 0.0244356104}, {-1, 1}], 
     InsetBox["503", {0.65, 0.}, {-1, 1}], 
     InsetBox["504", {0.634143429, 0.0493327672}, {-1, 1}], 
     InsetBox["505", {0.631368401, 0.0752972154}, {-1, 1}], 
     InsetBox["506", {0.627398873, 0.12607923}, {-1, 1}], 
     InsetBox["507", {0.625602186, 0.175448398}, {-1, 1}], 
     InsetBox["508", {0.626204373, 0.150896797}, {-1, 1}], 
     InsetBox["509", {0.628593373, 0.101261664}, {-1, 1}], 
     InsetBox["510", {0.625, 0.2}, {-1, 1}], 
     InsetBox["511", {0.629571714, 0.0246663836}, {-1, 1}], 
     InsetBox["512", {0.625, 0.}, {-1, 1}], 
     InsetBox["513", {0.600438241, 0.175261812}, {-1, 1}], 
     InsetBox["514", {0.600876482, 0.150523624}, {-1, 1}], 
     InsetBox["515", {0.6, 0.2}, {-1, 1}], 
     InsetBox["516", {0.601533152, 0.125580776}, {-1, 1}], 
     InsetBox["517", {0.602189823, 0.100637928}, {-1, 1}], 
     InsetBox["518", {0.603029849, 0.0752161205}, {-1, 1}], 
     InsetBox["519", {0.603869876, 0.0497943136}, {-1, 1}], 
     InsetBox["520", {0.601934938, 0.0248971568}, {-1, 1}], 
     InsetBox["521", {0.6, 0.}, {-1, 1}], 
     InsetBox["522", {0.575, 0.2}, {-1, 1}], 
     InsetBox["523", {0.575165082, 0.175177556}, {-1, 1}], 
     InsetBox["524", {0.575330163, 0.150355111}, {-1, 1}], 
     InsetBox["525", {0.575815022, 0.125348897}, {-1, 1}], 
     InsetBox["526", {0.57629988, 0.100342683}, {-1, 1}], 
     InsetBox["527", {0.576867994, 0.0750864475}, {-1, 1}], 
     InsetBox["528", {0.577436109, 0.0498302121}, {-1, 1}], 
     InsetBox["529", {0.576218054, 0.0249151061}, {-1, 1}], 
     InsetBox["530", {0.575, 0.}, {-1, 1}], 
     InsetBox["531", {0.55, 0.2}, {-1, 1}], 
     InsetBox["532", {0.549891922, 0.175093299}, {-1, 1}], 
     InsetBox["533", {0.549783844, 0.150186598}, {-1, 1}], 
     InsetBox["534", {0.550096891, 0.125117018}, {-1, 1}], 
     InsetBox["535", {0.550409937, 0.100047438}, {-1, 1}], 
     InsetBox["536", {0.550706139, 0.0749567745}, {-1, 1}], 
     InsetBox["537", {0.551002342, 0.0498661107}, {-1, 1}], 
     InsetBox["538", {0.550501171, 0.0249330553}, {-1, 1}], 
     InsetBox["539", {0.55, 0.}, {-1, 1}], 
     InsetBox["540", {0.525, 0.2}, {-1, 1}], 
     InsetBox["541", {0.524756682, 0.175015249}, {-1, 1}], 
     InsetBox["542", {0.524513365, 0.150030497}, {-1, 1}], 
     InsetBox["543", {0.524663488, 0.124900863}, {-1, 1}], 
     InsetBox["544", {0.524813611, 0.0997712287}, {-1, 1}], 
     InsetBox["545", {0.52508978, 0.0747578147}, {-1, 1}], 
     InsetBox["546", {0.525365948, 0.0497444007}, {-1, 1}], 
     InsetBox["547", {0.525182974, 0.0248722004}, {-1, 1}], 
     InsetBox["548", {0.525, 0.}, {-1, 1}], 
     InsetBox["549", {0.5, 0.2}, {-1, 1}], 
     InsetBox["550", {0.499621443, 0.174937198}, {-1, 1}], 
     InsetBox["551", {0.499242885, 0.149874396}, {-1, 1}], 
     InsetBox["552", {0.499230086, 0.124684708}, {-1, 1}], 
     InsetBox["553", {0.499217286, 0.099495019}, {-1, 1}], 
     InsetBox["554", {0.49947342, 0.0745588549}, {-1, 1}], 
     InsetBox["555", {0.499729554, 0.0496226908}, {-1, 1}], 
     InsetBox["556", {0.499864777, 0.0248113454}, {-1, 1}], 
     InsetBox["557", {0.5, 0.}, {-1, 1}], 
     InsetBox["558", {0.475, 0.2}, {-1, 1}], 
     InsetBox["559", {0.474642955, 0.17484807}, {-1, 1}], 
     InsetBox["560", {0.474285911, 0.149696139}, {-1, 1}], 
     InsetBox["561", {0.474259731, 0.12452289}, {-1, 1}], 
     InsetBox["562", {0.474233551, 0.0993496416}, {-1, 1}], 
     InsetBox["563", {0.474450788, 0.0744693743}, {-1, 1}], 
     InsetBox["564", {0.474668025, 0.049589107}, {-1, 1}], 
     InsetBox["565", {0.474834013, 0.0247945535}, {-1, 1}], 
     InsetBox["566", {0.475, 0.}, {-1, 1}], 
     InsetBox["567", {0.45, 0.2}, {-1, 1}], 
     InsetBox["568", {0.449664468, 0.174758941}, {-1, 1}], 
     InsetBox["569", {0.449328936, 0.149517882}, {-1, 1}], 
     InsetBox["570", {0.449289376, 0.124361073}, {-1, 1}], 
     InsetBox["571", {0.449249815, 0.0992042643}, {-1, 1}], 
     InsetBox["572", {0.449428156, 0.0743798938}, {-1, 1}], 
     InsetBox["573", {0.449606497, 0.0495555233}, {-1, 1}], 
     InsetBox["574", {0.449803248, 0.0247777616}, {-1, 1}], 
     InsetBox["575", {0.45, 0.}, {-1, 1}], 
     InsetBox["576", {0.425, 0.2}, {-1, 1}], 
     InsetBox["577", {0.424745989, 0.174652684}, {-1, 1}], 
     InsetBox["578", {0.424491978, 0.149305369}, {-1, 1}], 
     InsetBox["579", {0.424423615, 0.124262239}, {-1, 1}], 
     InsetBox["580", {0.424355253, 0.09921911}, {-1, 1}], 
     InsetBox["581", {0.424440905, 0.0743472203}, {-1, 1}], 
     InsetBox["582", {0.424526557, 0.0494753306}, {-1, 1}], 
     InsetBox["583", {0.424763278, 0.0247376653}, {-1, 1}], 
     InsetBox["584", {0.425, 0.}, {-1, 1}], 
     InsetBox["585", {0.4, 0.2}, {-1, 1}], 
     InsetBox["586", {0.39982751, 0.174546427}, {-1, 1}], 
     InsetBox["587", {0.399655019, 0.149092855}, {-1, 1}], 
     InsetBox["588", {0.399557855, 0.124163405}, {-1, 1}], 
     InsetBox["589", {0.399460691, 0.0992339557}, {-1, 1}], 
     InsetBox["590", {0.399453654, 0.0743145468}, {-1, 1}], 
     InsetBox["591", {0.399446617, 0.0493951379}, {-1, 1}], 
     InsetBox["592", {0.399723308, 0.024697569}, {-1, 1}], 
     InsetBox["593", {0.4, 0.}, {-1, 1}], 
     InsetBox["594", {0.375, 0.2}, {-1, 1}], 
     InsetBox["595", {0.374963589, 0.174663385}, {-1, 1}], 
     InsetBox["596", {0.374927179, 0.14932677}, {-1, 1}], 
     InsetBox["597", {0.37470159, 0.124282765}, {-1, 1}], 
     InsetBox["598", {0.374476002, 0.0992387608}, {-1, 1}], 
     InsetBox["599", {0.374433012, 0.0744122638}, {-1, 1}], 
     InsetBox["600", {0.374390022, 0.0495857668}, {-1, 1}], 
     InsetBox["601", {0.374695011, 0.0247928834}, {-1, 1}], 
     InsetBox["602", {0.375, 0.}, {-1, 1}], 
     InsetBox["603", {0.35, 0.2}, {-1, 1}], 
     InsetBox["604", {0.350099669, 0.174780342}, {-1, 1}], 
     InsetBox["605", {0.350199338, 0.149560685}, {-1, 1}], 
     InsetBox["606", {0.349845326, 0.124402125}, {-1, 1}], 
     InsetBox["607", {0.349491313, 0.0992435659}, {-1, 1}], 
     InsetBox["608", {0.34941237, 0.0745099808}, {-1, 1}], 
     InsetBox["609", {0.349333428, 0.0497763957}, {-1, 1}], 
     InsetBox["610", {0.349666714, 0.0248881979}, {-1, 1}], 
     InsetBox["611", {0.35, 0.}, {-1, 1}], 
     InsetBox["612", {0.325, 0.2}, {-1, 1}], 
     InsetBox["613", {0.325037499, 0.174761603}, {-1, 1}], 
     InsetBox["614", {0.325074998, 0.149523206}, {-1, 1}], 
     InsetBox["615", {0.324718222, 0.124312135}, {-1, 1}], 
     InsetBox["616", {0.324361447, 0.0991010645}, {-1, 1}], 
     InsetBox["617", {0.324389835, 0.0743499919}, {-1, 1}], 
     InsetBox["618", {0.324418223, 0.0495989194}, {-1, 1}], 
     InsetBox["619", {0.324709112, 0.0247994597}, {-1, 1}], 
     InsetBox["620", {0.325, 0.}, {-1, 1}], 
     InsetBox["621", {0.3, 0.2}, {-1, 1}], 
     InsetBox["622", {0.299975329, 0.174742864}, {-1, 1}], 
     InsetBox["623", {0.299950658, 0.149485728}, {-1, 1}], 
     InsetBox["624", {0.299591119, 0.124222145}, {-1, 1}], 
     InsetBox["625", {0.299231581, 0.098958563}, {-1, 1}], 
     InsetBox["626", {0.2993673, 0.074190003}, {-1, 1}], 
     InsetBox["627", {0.299503018, 0.0494214431}, {-1, 1}], 
     InsetBox["628", {0.299751509, 0.0247107215}, {-1, 1}], 
     InsetBox["629", {0.3, 0.}, {-1, 1}], 
     InsetBox["630", {0.275, 0.2}, {-1, 1}], 
     InsetBox["631", {0.274877832, 0.17465961}, {-1, 1}], 
     InsetBox["632", {0.274755665, 0.14931922}, {-1, 1}], 
     InsetBox["633", {0.274524012, 0.124111069}, {-1, 1}], 
     InsetBox["634", {0.274292359, 0.0989029173}, {-1, 1}], 
     InsetBox["635", {0.2743837, 0.0740445228}, {-1, 1}], 
     InsetBox["636", {0.274475041, 0.0491861284}, {-1, 1}], 
     InsetBox["637", {0.274737521, 0.0245930642}, {-1, 1}], 
     InsetBox["638", {0.275, 0.}, {-1, 1}], 
     InsetBox["639", {0.25, 0.2}, {-1, 1}], 
     InsetBox["640", {0.249780336, 0.174576356}, {-1, 1}], 
     InsetBox["641", {0.249560672, 0.149152713}, {-1, 1}], 
     InsetBox["642", {0.249456904, 0.123999992}, {-1, 1}], 
     InsetBox["643", {0.249353136, 0.0988472716}, {-1, 1}], 
     InsetBox["644", {0.2494001, 0.0738990426}, {-1, 1}], 
     InsetBox["645", {0.249447064, 0.0489508137}, {-1, 1}], 
     InsetBox["646", {0.249723532, 0.0244754068}, {-1, 1}], 
     InsetBox["647", {0.25, 0.}, {-1, 1}], 
     InsetBox["648", {0.225, 0.2}, {-1, 1}], 
     InsetBox["649", {0.224752085, 0.174551159}, {-1, 1}], 
     InsetBox["650", {0.224504171, 0.149102317}, {-1, 1}], 
     InsetBox["651", {0.224431272, 0.123993741}, {-1, 1}], 
     InsetBox["652", {0.224358373, 0.0988851647}, {-1, 1}], 
     InsetBox["653", {0.224409129, 0.073939559}, {-1, 1}], 
     InsetBox["654", {0.224459885, 0.0489939532}, {-1, 1}], 
     InsetBox["655", {0.224729942, 0.0244969766}, {-1, 1}], 
     InsetBox["656", {0.225, 0.}, {-1, 1}], 
     InsetBox["657", {0.2, 0.2}, {-1, 1}], 
     InsetBox["658", {0.199723835, 0.174525961}, {-1, 1}], 
     InsetBox["659", {0.19944767, 0.149051922}, {-1, 1}], 
     InsetBox["660", {0.19940564, 0.12398749}, {-1, 1}], 
     InsetBox["661", {0.199363611, 0.0989230579}, {-1, 1}], 
     InsetBox["662", {0.199418158, 0.0739800753}, {-1, 1}], 
     InsetBox["663", {0.199472705, 0.0490370926}, {-1, 1}], 
     InsetBox["664", {0.199736353, 0.0245185463}, {-1, 1}], 
     InsetBox["665", {0.2, 0.}, {-1, 1}], 
     InsetBox["666", {0.175, 0.2}, {-1, 1}], 
     InsetBox["667", {0.174743454, 0.174578012}, {-1, 1}], 
     InsetBox["668", {0.174486909, 0.149156023}, {-1, 1}], 
     InsetBox["669", {0.17437959, 0.123997763}, {-1, 1}], 
     InsetBox["670", {0.174272271, 0.098839502}, {-1, 1}], 
     InsetBox["671", {0.174395226, 0.0740122758}, {-1, 1}], 
     InsetBox["672", {0.17451818, 0.0491850496}, {-1, 1}], 
     InsetBox["673", {0.17475909, 0.0245925248}, {-1, 1}], 
     InsetBox["674", {0.175, 0.}, {-1, 1}], 
     InsetBox["675", {0.15, 0.2}, {-1, 1}], 
     InsetBox["676", {0.149763074, 0.174630062}, {-1, 1}], 
     InsetBox["677", {0.149526148, 0.149260125}, {-1, 1}], 
     InsetBox["678", {0.14935354, 0.124008035}, {-1, 1}], 
     InsetBox["679", {0.149180932, 0.098755946}, {-1, 1}], 
     InsetBox["680", {0.149372294, 0.0740444763}, {-1, 1}], 
     InsetBox["681", {0.149563656, 0.0493330067}, {-1, 1}], 
     InsetBox["682", {0.149781828, 0.0246665033}, {-1, 1}], 
     InsetBox["683", {0.15, 0.}, {-1, 1}], 
     InsetBox["684", {0.125, 0.2}, {-1, 1}], 
     InsetBox["685", {0.124750534, 0.174623189}, {-1, 1}], 
     InsetBox["686", {0.124501068, 0.149246378}, {-1, 1}], 
     InsetBox["687", {0.124351565, 0.124086738}, {-1, 1}], 
     InsetBox["688", {0.124202061, 0.0989270982}, {-1, 1}], 
     InsetBox["689", {0.12439219, 0.0741815478}, {-1, 1}], 
     InsetBox["690", {0.12458232, 0.0494359974}, {-1, 1}], 
     InsetBox["691", {0.12479116, 0.0247179987}, {-1, 1}], 
     InsetBox["692", {0.125, 0.}, {-1, 1}], 
     InsetBox["693", {0.1, 0.2}, {-1, 1}], 
     InsetBox["694", {0.0997379946, 0.174616316}, {-1, 1}], 
     InsetBox["695", {0.0994759893, 0.149232632}, {-1, 1}], 
     InsetBox["696", {0.0993495894, 0.124165441}, {-1, 1}], 
     InsetBox["697", {0.0992231896, 0.0990982503}, {-1, 1}], 
     InsetBox["698", {0.0994120873, 0.0743186192}, {-1, 1}], 
     InsetBox["699", {0.099600985, 0.0495389881}, {-1, 1}], 
     InsetBox["700", {0.0998004925, 0.024769494}, {-1, 1}], 
     InsetBox["701", {0.1, 0.}, {-1, 1}], 
     InsetBox["702", {0.075, 0.2}, {-1, 1}], 
     InsetBox["703", {0.074804826, 0.174765441}, {-1, 1}], 
     InsetBox["704", {0.0746096519, 0.149530882}, {-1, 1}], 
     InsetBox["705", {0.0744849407, 0.124560977}, {-1, 1}], 
     InsetBox["706", {0.0743602294, 0.0995910716}, {-1, 1}], 
     InsetBox["707", {0.074557916, 0.0747270683}, {-1, 1}], 
     InsetBox["708", {0.0747556026, 0.0498630651}, {-1, 1}], 
     InsetBox["709", {0.0748778013, 0.0249315326}, {-1, 1}], 
     InsetBox["710", {0.075, 0.}, {-1, 1}], 
     InsetBox["711", {0.05, 0.2}, {-1, 1}], 
     InsetBox["712", {0.0498716573, 0.174914566}, {-1, 1}], 
     InsetBox["713", {0.0497433146, 0.149829131}, {-1, 1}], 
     InsetBox["714", {0.0496202919, 0.124956512}, {-1, 1}], 
     InsetBox["715", {0.0494972691, 0.100083893}, {-1, 1}], 
     InsetBox["716", {0.0497037447, 0.0751355175}, {-1, 1}], 
     InsetBox["717", {0.0499102202, 0.0501871422}, {-1, 1}], 
     InsetBox["718", {0.0499551101, 0.0250935711}, {-1, 1}], 
     InsetBox["719", {0.05, 0.}, {-1, 1}], 
     InsetBox["720", {0.025, 0.2}, {-1, 1}], 
     InsetBox["721", {0.0249358287, 0.174957283}, {-1, 1}], 
     InsetBox["722", {0.0248716573, 0.149914566}, {-1, 1}], 
     InsetBox["723", {0.0248101459, 0.124978256}, {-1, 1}], 
     InsetBox["724", {0.0247486346, 0.100041946}, {-1, 1}], 
     InsetBox["725", {0.0248518723, 0.0750677587}, {-1, 1}], 
     InsetBox["726", {0.0249551101, 0.0500935711}, {-1, 1}], 
     InsetBox["727", {0.024977555, 0.0250467855}, {-1, 1}], 
     InsetBox["728", {0.025, 0.}, {-1, 1}], 
     InsetBox["729", {0., 0.2}, {-1, 1}], 
     InsetBox["730", {0., 0.175}, {-1, 1}], 
     InsetBox["731", {0., 0.15}, {-1, 1}], 
     InsetBox["732", {0., 0.125}, {-1, 1}], 
     InsetBox["733", {0., 0.1}, {-1, 1}], 
     InsetBox["734", {0., 0.075}, {-1, 1}], 
     InsetBox["735", {0., 0.05}, {-1, 1}], 
     InsetBox["736", {0., 0.025}, {-1, 1}], 
     InsetBox["737", {0., 0.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1: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
      "]]}}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{{3.693243334041023*^9, 3.6932434306965513`*^9}, 
   3.6932437969825015`*^9, 3.6932506633952656`*^9, 3.6932510544276314`*^9, 
   3.693258066706052*^9}],

Cell[BoxData["1474"], "Output",
 CellChangeTimes->{{3.693243334041023*^9, 3.6932434306965513`*^9}, 
   3.6932437969825015`*^9, 3.6932506633952656`*^9, 3.6932510544276314`*^9, 
   3.693258083337003*^9}],

Cell[BoxData[
 RowBox[{"-", "3.9999999999999982`"}]], "Output",
 CellChangeTimes->{{3.693243334041023*^9, 3.6932434306965513`*^9}, 
   3.6932437969825015`*^9, 3.6932506633952656`*^9, 3.6932510544276314`*^9, 
   3.6932580833720055`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1: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
3it/PpHteu81m/Uf/tC0Cg==
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{{3.693243334041023*^9, 3.6932434306965513`*^9}, 
   3.6932437969825015`*^9, 3.6932506633952656`*^9, 3.6932510544276314`*^9, 
   3.693258083491012*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Min", "[", "sol", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "sol", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e", " ", "=", " ", 
   RowBox[{"28", " ", 
    RowBox[{"10", "^", "6"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"KN", "/", "m2"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i", "=", 
   RowBox[{"1", " ", "0.2", " ", "0.2", " ", 
    RowBox[{"0.2", "/", "12"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "=", "2."}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Sol", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"DSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"e", " ", "i", " ", 
            RowBox[{
             RowBox[{"u", "''"}], "[", "x", "]"}]}], "\[Equal]", 
           RowBox[{
            RowBox[{"q", " ", "L", " ", 
             RowBox[{"x", "/", "2"}]}], " ", "-", 
            RowBox[{"q", " ", "x", " ", 
             RowBox[{"x", "/", "2"}]}]}]}], ",", 
          RowBox[{
           RowBox[{"u", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"u", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
        RowBox[{"u", "[", "x", "]"}], ",", "x"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "\[Rule]", "2"}], ",", 
       RowBox[{"x", "\[Rule]", "1"}]}], "}"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"e", " ", "i", " ", 
          RowBox[{
           RowBox[{"u", "''"}], "[", "x", "]"}]}], "\[Equal]", " ", 
         RowBox[{
          RowBox[{"0.667", "x"}], "-", 
          RowBox[{
           RowBox[{"1", "/", "2"}], "x", " ", "x", " ", 
           RowBox[{"x", "/", "3"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"u", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"u", "[", "L", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
      RowBox[{"u", "[", "x", "]"}], ",", "x"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"L", "\[Rule]", "2"}], ",", 
     RowBox[{"x", "\[Rule]", "1"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.693236283850599*^9, 3.693236286178732*^9}, {
   3.6932363355075536`*^9, 3.6932363517714834`*^9}, 3.693236395466983*^9, {
   3.693237417060415*^9, 3.6932374190355277`*^9}, {3.6932375331060524`*^9, 
   3.693237536666256*^9}, {3.693242559372714*^9, 3.693242590977522*^9}, {
   3.693242675193339*^9, 3.693242683328804*^9}, {3.693242894198865*^9, 
   3.6932429078246446`*^9}, {3.6932432815180187`*^9, 3.69324328381315*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.00002319058486906168`"}]], "Output",
 CellChangeTimes->{
  3.69323628666776*^9, {3.6932363363506017`*^9, 3.6932363523445168`*^9}, {
   3.693236385555416*^9, 3.6932364027934017`*^9}, 3.6932374225377283`*^9, 
   3.693237558561508*^9, 3.693237627267438*^9, 3.693237835626355*^9, 
   3.6932382224124784`*^9, 3.6932383732871075`*^9, 3.693238593874725*^9, {
   3.6932425947637386`*^9, 3.69324260352524*^9}, {3.693242675501356*^9, 
   3.6932426840188437`*^9}, 3.6932429087416973`*^9, 3.6932438136294537`*^9, 
   3.693250680497244*^9, 3.693258083549015*^9}],

Cell[BoxData["7.560999472758896`*^-6"], "Output",
 CellChangeTimes->{
  3.69323628666776*^9, {3.6932363363506017`*^9, 3.6932363523445168`*^9}, {
   3.693236385555416*^9, 3.6932364027934017`*^9}, 3.6932374225377283`*^9, 
   3.693237558561508*^9, 3.693237627267438*^9, 3.693237835626355*^9, 
   3.6932382224124784`*^9, 3.6932383732871075`*^9, 3.693238593874725*^9, {
   3.6932425947637386`*^9, 3.69324260352524*^9}, {3.693242675501356*^9, 
   3.6932426840188437`*^9}, 3.6932429087416973`*^9, 3.6932438136294537`*^9, 
   3.693250680497244*^9, 3.6932580835530157`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.000011169642857142857`"}]], "Output",
 CellChangeTimes->{
  3.69323628666776*^9, {3.6932363363506017`*^9, 3.6932363523445168`*^9}, {
   3.693236385555416*^9, 3.6932364027934017`*^9}, 3.6932374225377283`*^9, 
   3.693237558561508*^9, 3.693237627267438*^9, 3.693237835626355*^9, 
   3.6932382224124784`*^9, 3.6932383732871075`*^9, 3.693238593874725*^9, {
   3.6932425947637386`*^9, 3.69324260352524*^9}, {3.693242675501356*^9, 
   3.6932426840188437`*^9}, 3.6932429087416973`*^9, 3.6932438136294537`*^9, 
   3.693250680497244*^9, 3.693258083606019*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.693235428018648*^9, 3.693235434088995*^9}, {
   3.693236455268403*^9, 3.6932364571055083`*^9}, {3.693236876198479*^9, 
   3.693236924255228*^9}, 3.693237040093854*^9, {3.6932437635145874`*^9, 
   3.6932437665367603`*^9}, {3.693250101950153*^9, 3.6932501033802347`*^9}, 
   3.693258097033787*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ComputeSol", "[", 
       RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
       "Simplify"}], "//", "Chop"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"stress", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ComputeStress", "[", 
        RowBox[{
         RowBox[{"(", "dsols", ")"}], ",", "e", ",", "0.2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "Sol"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"sollists", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"refine", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"v", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xi", ",", "eta"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"eta", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sollists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "151"}], ",", "151"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "7"}], ",", "7"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "3"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "15"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "30"}], ",", "30"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", "1000", "}"}]}]}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.693147768298156*^9, 3.6931477886013165`*^9}, {
   3.6931478309917417`*^9, 3.6931478405672894`*^9}, {3.693147914065493*^9, 
   3.693147930688444*^9}, {3.693148177536563*^9, 3.693148187558136*^9}, {
   3.693148304158805*^9, 3.693148327461138*^9}, {3.6931484619338293`*^9, 
   3.693148476868684*^9}, {3.6932117347968535`*^9, 3.6932117391471024`*^9}, {
   3.6932300380513597`*^9, 3.6932300605376453`*^9}, {3.6932301488906994`*^9, 
   3.6932301499847617`*^9}, {3.69323080034696*^9, 3.6932308101225195`*^9}, {
   3.693235372429468*^9, 3.693235372732486*^9}, {3.693235436024106*^9, 
   3.6932354401393414`*^9}, {3.6932364508441505`*^9, 
   3.6932365936713195`*^9}, {3.693236626653206*^9, 3.6932366623992505`*^9}, {
   3.693236702379537*^9, 3.6932367597068167`*^9}, {3.6932367966909313`*^9, 
   3.6932368329780073`*^9}, {3.693237004646826*^9, 3.6932370307123165`*^9}, {
   3.693237100761324*^9, 3.6932371033364706`*^9}, {3.6932384674004908`*^9, 
   3.693238470380661*^9}, {3.6932385098439183`*^9, 3.693238569548333*^9}, {
   3.69324376863988*^9, 3.693243772370094*^9}, {3.693250104791315*^9, 
   3.693250134623021*^9}, 3.693250174791319*^9, 3.6932506355716743`*^9, 
   3.6932508275446544`*^9, {3.6932508714421654`*^9, 3.6932508908102727`*^9}, {
   3.6932509255222583`*^9, 3.6932509549359407`*^9}, {3.6932511010312967`*^9, 
   3.693251122855545*^9}, {3.6932511765676174`*^9, 3.6932511963407483`*^9}, {
   3.693258104178195*^9, 3.693258112497671*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"topol", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\beamels.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], "]"}]}]}]}], 
   ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodesAll", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
beamco.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodes", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"N", "[", 
      RowBox[{"nnodesAll", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"allcoords", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"nnodes", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"topol", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"edges", " ", "are", " ", "straight"}], "*)"}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"meshVis1", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FaceForm", "[", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"nnodes", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"topol", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nodeVis", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
         "nnodes"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVis1", ",", "nodeVis", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"order", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"forcing", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"young", " ", "=", " ", 
    RowBox[{"28", " ", 
     RowBox[{"10", "^", "6"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"KN", "/", "m2"}], "*)"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nu", "=", "0.2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mu", "=", 
    RowBox[{"young", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lambda", "=", 
    RowBox[{"young", " ", 
     RowBox[{"nu", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "nu"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"Assemble", "[", 
     RowBox[{"allcoords", ",", "topol", ",", "order", ",", "forcing"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "737", ",", "729", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"tol", "=", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"radius", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ydir", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"coordy", "=", "0.2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
    RowBox[{"ComputeBoundaryTopol", "[", 
     RowBox[{
     "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
      "order"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"-", "x"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"-", "2"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"diry", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FE", "=", 
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"FE", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"KE", ",", "FE", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"scale", "=", "1000"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"deformed", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
       RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"tabdeformed", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"deformed", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"deformed", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"meshVisDef", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"{", 
          RowBox[{"LightRed", ",", 
           RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
        RowBox[{"GraphicsComplex", "[", 
         RowBox[{"tabdeformed", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"topol", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVisDef", ",", "meshVis1", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.693251305152972*^9, 3.693251345142259*^9}, 
   3.693251375351987*^9, 3.6932514868843665`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}, {{InsetBox["1", {2., 0.2}, {-1, 1}], 
     InsetBox["2", {1.975, 0.2}, {-1, 1}], 
     InsetBox["3", {2., 0.175}, {-1, 1}], 
     InsetBox["4", {1.97484227, 0.17487172}, {-1, 1}], 
     InsetBox["5", {2., 0.15}, {-1, 1}], InsetBox["6", {1.95, 0.2}, {-1, 1}], 
     InsetBox["7", {1.97468455, 0.14974344}, {-1, 1}], 
     InsetBox["8", {1.94968455, 0.17474344}, {-1, 1}], 
     InsetBox["9", {1.9493691, 0.149486881}, {-1, 1}], 
     InsetBox["10", {1.925, 0.2}, {-1, 1}], 
     InsetBox["11", {2., 0.125}, {-1, 1}], 
     InsetBox["12", {1.97472856, 0.124740731}, {-1, 1}], 
     InsetBox["13", {1.92462713, 0.174742598}, {-1, 1}], 
     InsetBox["14", {1.94945713, 0.124481462}, {-1, 1}], 
     InsetBox["15", {1.92425426, 0.149485196}, {-1, 1}], 
     InsetBox["16", {1.9, 0.2}, {-1, 1}], InsetBox["17", {2., 0.1}, {-1, 1}], 
     InsetBox["18", {1.97477258, 0.0997380217}, {-1, 1}], 
     InsetBox["19", {1.89956971, 0.174741756}, {-1, 1}], 
     InsetBox["20", {1.92425368, 0.124352655}, {-1, 1}], 
     InsetBox["21", {1.94954516, 0.0994760435}, {-1, 1}], 
     InsetBox["22", {1.89913942, 0.149483512}, {-1, 1}], 
     InsetBox["23", {1.875, 0.2}, {-1, 1}], 
     InsetBox["24", {2., 0.075}, {-1, 1}], 
     InsetBox["25", {1.9242531, 0.0992201142}, {-1, 1}], 
     InsetBox["26", {1.89905023, 0.124223848}, {-1, 1}], 
     InsetBox["27", {1.97484891, 0.0747322879}, {-1, 1}], 
     InsetBox["28", {1.87453939, 0.174748789}, {-1, 1}], 
     InsetBox["29", {1.94969782, 0.0744645758}, {-1, 1}], 
     InsetBox["30", {1.87407878, 0.149497578}, {-1, 1}], 
     InsetBox["31", {1.89896105, 0.0989641849}, {-1, 1}], 
     InsetBox["32", {1.92446961, 0.0743251254}, {-1, 1}], 
     InsetBox["33", {1.87394325, 0.124255207}, {-1, 1}], 
     InsetBox["34", {1.85, 0.2}, {-1, 1}], 
     InsetBox["35", {2., 0.05}, {-1, 1}], 
     InsetBox["36", {1.97492524, 0.049726554}, {-1, 1}], 
     InsetBox["37", {1.84950907, 0.174755822}, {-1, 1}], 
     InsetBox["38", {1.94985048, 0.0494531081}, {-1, 1}], 
     InsetBox["39", {1.84901814, 0.149511644}, {-1, 1}], 
     InsetBox["40", {1.8992414, 0.0741856751}, {-1, 1}], 
     InsetBox["41", {1.87380773, 0.0990128352}, {-1, 1}], 
     InsetBox["42", {1.92468612, 0.0494301367}, {-1, 1}], 
     InsetBox["43", {1.84883627, 0.124286565}, {-1, 1}], 
     InsetBox["44", {1.825, 0.2}, {-1, 1}], 
     InsetBox["45", {2., 0.025}, {-1, 1}], 
     InsetBox["46", {1.97496262, 0.024863277}, {-1, 1}], 
     InsetBox["47", {1.82449661, 0.174760464}, {-1, 1}], 
     InsetBox["48", {1.87410317, 0.074161051}, {-1, 1}], 
     InsetBox["49", {1.89952175, 0.0494071654}, {-1, 1}], 
     InsetBox["50", {1.8486544, 0.0990614854}, {-1, 1}], 
     InsetBox["51", {1.94992524, 0.024726554}, {-1, 1}], 
     InsetBox["52", {1.82399321, 0.149520928}, {-1, 1}], 
     InsetBox["53", {1.92484306, 0.0247150684}, {-1, 1}], 
     InsetBox["54", {1.82389445, 0.124353446}, {-1, 1}], 
     InsetBox["55", {1.87439861, 0.0493092669}, {-1, 1}], 
     InsetBox["56", {1.84896494, 0.0741364269}, {-1, 1}], 
     InsetBox["57", {1.8, 0.2}, {-1, 1}], InsetBox["58", {2., 0.}, {-1, 1}], 
     InsetBox["59", {1.975, 0.}, {-1, 1}], 
     InsetBox["60", {1.89976088, 0.0247035827}, {-1, 1}], 
     InsetBox["61", {1.79948414, 0.174765105}, {-1, 1}], 
     InsetBox["62", {1.82379568, 0.0991859635}, {-1, 1}], 
     InsetBox["63", {1.95, 0.}, {-1, 1}], 
     InsetBox["64", {1.79896829, 0.149530211}, {-1, 1}], 
     InsetBox["65", {1.84927547, 0.0492113684}, {-1, 1}], 
     InsetBox["66", {1.925, 0.}, {-1, 1}], 
     InsetBox["67", {1.79895262, 0.124420326}, {-1, 1}], 
     InsetBox["68", {1.87469931, 0.0246546334}, {-1, 1}], 
     InsetBox["69", {1.82403855, 0.0742011381}, {-1, 1}], 
     InsetBox["70", {1.9, 0.}, {-1, 1}], 
     InsetBox["71", {1.79893695, 0.0993104416}, {-1, 1}], 
     InsetBox["72", {1.775, 0.2}, {-1, 1}], 
     InsetBox["73", {1.77449774, 0.174785991}, {-1, 1}], 
     InsetBox["74", {1.84963774, 0.0246056842}, {-1, 1}], 
     InsetBox["75", {1.82428141, 0.0492163128}, {-1, 1}], 
     InsetBox["76", {1.77399549, 0.149571983}, {-1, 1}], 
     InsetBox["77", {1.875, 0.}, {-1, 1}], 
     InsetBox["78", {1.79911215, 0.0742658494}, {-1, 1}], 
     InsetBox["79", {1.77394143, 0.124470805}, {-1, 1}], 
     InsetBox["80", {1.77388736, 0.0993696272}, {-1, 1}], 
     InsetBox["81", {1.82464071, 0.0246081564}, {-1, 1}], 
     InsetBox["82", {1.85, 0.}, {-1, 1}], 
     InsetBox["83", {1.75, 0.2}, {-1, 1}], 
     InsetBox["84", {1.79928735, 0.0492212571}, {-1, 1}], 
     InsetBox["85", {1.74951134, 0.174806877}, {-1, 1}], 
     InsetBox["86", {1.74902269, 0.149613754}, {-1, 1}], 
     InsetBox["87", {1.77407516, 0.0744309587}, {-1, 1}], 
     InsetBox["88", {1.74893023, 0.124521284}, {-1, 1}], 
     InsetBox["89", {1.825, 0.}, {-1, 1}], 
     InsetBox["90", {1.79964368, 0.0246106286}, {-1, 1}], 
     InsetBox["91", {1.74883777, 0.0994288129}, {-1, 1}], 
     InsetBox["92", {1.77426296, 0.0494922901}, {-1, 1}], 
     InsetBox["93", {1.725, 0.2}, {-1, 1}], 
     InsetBox["94", {1.72451607, 0.174800859}, {-1, 1}], 
     InsetBox["95", {1.72403215, 0.149601719}, {-1, 1}], 
     InsetBox["96", {1.74903817, 0.074596068}, {-1, 1}], 
     InsetBox["97", {1.8, 0.}, {-1, 1}], 
     InsetBox["98", {1.77463148, 0.0247461451}, {-1, 1}], 
     InsetBox["99", {1.72399421, 0.124534707}, {-1, 1}], 
     InsetBox["100", {1.74923857, 0.0497633231}, {-1, 1}], 
     InsetBox["101", {1.72395627, 0.0994676949}, {-1, 1}], 
     InsetBox["102", {1.7, 0.2}, {-1, 1}], 
     InsetBox["103", {1.775, 0.}, {-1, 1}], 
     InsetBox["104", {1.69952081, 0.174794842}, {-1, 1}], 
     InsetBox["105", {1.72411323, 0.0745186942}, {-1, 1}], 
     InsetBox["106", {1.69904161, 0.149589683}, {-1, 1}], 
     InsetBox["107", {1.74961928, 0.0248816615}, {-1, 1}], 
     InsetBox["108", {1.69905819, 0.12454813}, {-1, 1}], 
     InsetBox["109", {1.72427019, 0.0495696935}, {-1, 1}], 
     InsetBox["110", {1.69907477, 0.0995065769}, {-1, 1}], 
     InsetBox["111", {1.75, 0.}, {-1, 1}], 
     InsetBox["112", {1.675, 0.2}, {-1, 1}], 
     InsetBox["113", {1.69918829, 0.0744413204}, {-1, 1}], 
     InsetBox["114", {1.7246351, 0.0247848468}, {-1, 1}], 
     InsetBox["115", {1.67453431, 0.174854566}, {-1, 1}], 
     InsetBox["116", {1.67406862, 0.149709132}, {-1, 1}], 
     InsetBox["117", {1.67408247, 0.124639147}, {-1, 1}], 
     InsetBox["118", {1.69930182, 0.0493760639}, {-1, 1}], 
     InsetBox["119", {1.725, 0.}, {-1, 1}], 
     InsetBox["120", {1.67409633, 0.0995691623}, {-1, 1}], 
     InsetBox["121", {1.69965091, 0.024688032}, {-1, 1}], 
     InsetBox["122", {1.67422044, 0.0745189199}, {-1, 1}], 
     InsetBox["123", {1.65, 0.2}, {-1, 1}], 
     InsetBox["124", {1.64954781, 0.174914291}, {-1, 1}], 
     InsetBox["125", {1.64909562, 0.149828581}, {-1, 1}], 
     InsetBox["126", {1.67434454, 0.0494686775}, {-1, 1}], 
     InsetBox["127", {1.64910675, 0.124730165}, {-1, 1}], 
     InsetBox["128", {1.7, 0.}, {-1, 1}], 
     InsetBox["129", {1.64911788, 0.0996317478}, {-1, 1}], 
     InsetBox["130", {1.67467227, 0.0247343387}, {-1, 1}], 
     InsetBox["131", {1.64925258, 0.0745965194}, {-1, 1}], 
     InsetBox["132", {1.625, 0.2}, {-1, 1}], 
     InsetBox["133", {1.62463238, 0.174978857}, {-1, 1}], 
     InsetBox["134", {1.62426475, 0.149957715}, {-1, 1}], 
     InsetBox["135", {1.64938727, 0.049561291}, {-1, 1}], 
     InsetBox["136", {1.675, 0.}, {-1, 1}], 
     InsetBox["137", {1.6242458, 0.124888683}, {-1, 1}], 
     InsetBox["138", {1.62422685, 0.0998196518}, {-1, 1}], 
     InsetBox["139", {1.64969363, 0.0247806455}, {-1, 1}], 
     InsetBox["140", {1.62436776, 0.0746988269}, {-1, 1}], 
     InsetBox["141", {1.6, 0.2}, {-1, 1}], 
     InsetBox["142", {1.59971694, 0.175043424}, {-1, 1}], 
     InsetBox["143", {1.65, 0.}, {-1, 1}], 
     InsetBox["144", {1.59943389, 0.150086848}, {-1, 1}], 
     InsetBox["145", {1.62450867, 0.0495780019}, {-1, 1}], 
     InsetBox["146", {1.59938485, 0.125047202}, {-1, 1}], 
     InsetBox["147", {1.59933581, 0.100007556}, {-1, 1}], 
     InsetBox["148", {1.62475433, 0.0247890009}, {-1, 1}], 
     InsetBox["149", {1.59948294, 0.0748011343}, {-1, 1}], 
     InsetBox["150", {1.575, 0.2}, {-1, 1}], 
     InsetBox["151", {1.625, 0.}, {-1, 1}], 
     InsetBox["152", {1.57474775, 0.174979753}, {-1, 1}], 
     InsetBox["153", {1.59963006, 0.0495947128}, {-1, 1}], 
     InsetBox["154", {1.57449551, 0.149959506}, {-1, 1}], 
     InsetBox["155", {1.57450343, 0.124890496}, {-1, 1}], 
     InsetBox["156", {1.59981503, 0.0247973564}, {-1, 1}], 
     InsetBox["157", {1.57451135, 0.0998214873}, {-1, 1}], 
     InsetBox["158", {1.57462739, 0.0747230176}, {-1, 1}], 
     InsetBox["159", {1.6, 0.}, {-1, 1}], 
     InsetBox["160", {1.55, 0.2}, {-1, 1}], 
     InsetBox["161", {1.54977856, 0.174916081}, {-1, 1}], 
     InsetBox["162", {1.57474342, 0.0496245479}, {-1, 1}], 
     InsetBox["163", {1.54955712, 0.149832163}, {-1, 1}], 
     InsetBox["164", {1.54962201, 0.124733791}, {-1, 1}], 
     InsetBox["165", {1.57487171, 0.024812274}, {-1, 1}], 
     InsetBox["166", {1.54968689, 0.0996354188}, {-1, 1}], 
     InsetBox["167", {1.54977184, 0.0746449009}, {-1, 1}], 
     InsetBox["168", {1.575, 0.}, {-1, 1}], 
     InsetBox["169", {1.54985678, 0.0496543831}, {-1, 1}], 
     InsetBox["170", {1.525, 0.2}, {-1, 1}], 
     InsetBox["171", {1.5248107, 0.174864441}, {-1, 1}], 
     InsetBox["172", {1.52462141, 0.149728882}, {-1, 1}], 
     InsetBox["173", {1.52466154, 0.124567689}, {-1, 1}], 
     InsetBox["174", {1.54992839, 0.0248271915}, {-1, 1}], 
     InsetBox["175", {1.52470168, 0.099406496}, {-1, 1}], 
     InsetBox["176", {1.52484258, 0.074463694}, {-1, 1}], 
     InsetBox["177", {1.55, 0.}, {-1, 1}], 
     InsetBox["178", {1.52498348, 0.0495208919}, {-1, 1}], 
     InsetBox["179", {1.5, 0.2}, {-1, 1}], 
     InsetBox["180", {1.49984284, 0.1748128}, {-1, 1}], 
     InsetBox["181", {1.49968569, 0.1496256}, {-1, 1}], 
     InsetBox["182", {1.49970108, 0.124401587}, {-1, 1}], 
     InsetBox["183", {1.52499174, 0.024760446}, {-1, 1}], 
     InsetBox["184", {1.49971648, 0.0991775732}, {-1, 1}], 
     InsetBox["185", {1.525, 0.}, {-1, 1}], 
     InsetBox["186", {1.49991332, 0.074282487}, {-1, 1}], 
     InsetBox["187", {1.50011017, 0.0493874008}, {-1, 1}], 
     InsetBox["188", {1.475, 0.2}, {-1, 1}], 
     InsetBox["189", {1.47478871, 0.174779566}, {-1, 1}], 
     InsetBox["190", {1.47457742, 0.149559133}, {-1, 1}], 
     InsetBox["191", {1.50005509, 0.0246937004}, {-1, 1}], 
     InsetBox["192", {1.47456172, 0.124293216}, {-1, 1}], 
     InsetBox["193", {1.47454603, 0.099027299}, {-1, 1}], 
     InsetBox["194", {1.5, 0.}, {-1, 1}], 
     InsetBox["195", {1.4747943, 0.0741516032}, {-1, 1}], 
     InsetBox["196", {1.47504256, 0.0492759073}, {-1, 1}], 
     InsetBox["197", {1.45, 0.2}, {-1, 1}], 
     InsetBox["198", {1.44973457, 0.174746333}, {-1, 1}], 
     InsetBox["199", {1.44946915, 0.149492665}, {-1, 1}], 
     InsetBox["200", {1.47502128, 0.0246379537}, {-1, 1}], 
     InsetBox["201", {1.44942236, 0.124184845}, {-1, 1}], 
     InsetBox["202", {1.44937558, 0.0988770247}, {-1, 1}], 
     InsetBox["203", {1.475, 0.}, {-1, 1}], 
     InsetBox["204", {1.44967527, 0.0740207193}, {-1, 1}], 
     InsetBox["205", {1.44997495, 0.0491644139}, {-1, 1}], 
     InsetBox["206", {1.425, 0.2}, {-1, 1}], 
     InsetBox["207", {1.42471561, 0.17474498}, {-1, 1}], 
     InsetBox["208", {1.44998748, 0.024582207}, {-1, 1}], 
     InsetBox["209", {1.42443122, 0.14948996}, {-1, 1}], 
     InsetBox["210", {1.42438384, 0.124212579}, {-1, 1}], 
     InsetBox["211", {1.42433646, 0.0989351979}, {-1, 1}], 
     InsetBox["212", {1.45, 0.}, {-1, 1}], 
     InsetBox["213", {1.4246191, 0.0740559937}, {-1, 1}], 
     InsetBox["214", {1.42490174, 0.0491767896}, {-1, 1}], 
     InsetBox["215", {1.4, 0.2}, {-1, 1}], 
     InsetBox["216", {1.39969665, 0.174743627}, {-1, 1}], 
     InsetBox["217", {1.42495087, 0.0245883948}, {-1, 1}], 
     InsetBox["218", {1.3993933, 0.149487254}, {-1, 1}], 
     InsetBox["219", {1.39934532, 0.124240312}, {-1, 1}], 
     InsetBox["220", {1.425, 0.}, {-1, 1}], 
     InsetBox["221", {1.39929734, 0.098993371}, {-1, 1}], 
     InsetBox["222", {1.39956293, 0.0740912681}, {-1, 1}], 
     InsetBox["223", {1.39982852, 0.0491891652}, {-1, 1}], 
     InsetBox["224", {1.375, 0.2}, {-1, 1}], 
     InsetBox["225", {1.39991426, 0.0245945826}, {-1, 1}], 
     InsetBox["226", {1.37471119, 0.174781841}, {-1, 1}], 
     InsetBox["227", {1.37442238, 0.149563683}, {-1, 1}], 
     InsetBox["228", {1.37441914, 0.1244691}, {-1, 1}], 
     InsetBox["229", {1.4, 0.}, {-1, 1}], 
     InsetBox["230", {1.37441591, 0.0993745164}, {-1, 1}], 
     InsetBox["231", {1.37466371, 0.0743293844}, {-1, 1}], 
     InsetBox["232", {1.37491152, 0.0492842524}, {-1, 1}], 
     InsetBox["233", {1.37495576, 0.0246421262}, {-1, 1}], 
     InsetBox["234", {1.35, 0.2}, {-1, 1}], 
     InsetBox["235", {1.34972573, 0.174820056}, {-1, 1}], 
     InsetBox["236", {1.34945146, 0.149640112}, {-1, 1}], 
     InsetBox["237", {1.34949297, 0.124697887}, {-1, 1}], 
     InsetBox["238", {1.375, 0.}, {-1, 1}], 
     InsetBox["239", {1.34953448, 0.0997556617}, {-1, 1}], 
     InsetBox["240", {1.3497645, 0.0745675006}, {-1, 1}], 
     InsetBox["241", {1.34999452, 0.0493793395}, {-1, 1}], 
     InsetBox["242", {1.34999726, 0.0246896698}, {-1, 1}], 
     InsetBox["243", {1.325, 0.2}, {-1, 1}], 
     InsetBox["244", {1.32470635, 0.174769274}, {-1, 1}], 
     InsetBox["245", {1.3244127, 0.149538548}, {-1, 1}], 
     InsetBox["246", {1.32453468, 0.124608234}, {-1, 1}], 
     InsetBox["247", {1.35, 0.}, {-1, 1}], 
     InsetBox["248", {1.32465666, 0.0996779199}, {-1, 1}], 
     InsetBox["249", {1.32490025, 0.0745294787}, {-1, 1}], 
     InsetBox["250", {1.32514385, 0.0493810374}, {-1, 1}], 
     InsetBox["251", {1.32507192, 0.0246905187}, {-1, 1}], 
     InsetBox["252", {1.3, 0.2}, {-1, 1}], 
     InsetBox["253", {1.29968698, 0.174718492}, {-1, 1}], 
     InsetBox["254", {1.29937395, 0.149436984}, {-1, 1}], 
     InsetBox["255", {1.325, 0.}, {-1, 1}], 
     InsetBox["256", {1.2995764, 0.124518581}, {-1, 1}], 
     InsetBox["257", {1.29977884, 0.0996001781}, {-1, 1}], 
     InsetBox["258", {1.30003601, 0.0744914567}, {-1, 1}], 
     InsetBox["259", {1.30029318, 0.0493827353}, {-1, 1}], 
     InsetBox["260", {1.30014659, 0.0246913677}, {-1, 1}], 
     InsetBox["261", {1.275, 0.2}, {-1, 1}], 
     InsetBox["262", {1.27480679, 0.174701194}, {-1, 1}], 
     InsetBox["263", {1.27461358, 0.149402389}, {-1, 1}], 
     InsetBox["264", {1.3, 0.}, {-1, 1}], 
     InsetBox["265", {1.27481117, 0.124380258}, {-1, 1}], 
     InsetBox["266", {1.27500877, 0.0993581266}, {-1, 1}], 
     InsetBox["267", {1.27513468, 0.0743888734}, {-1, 1}], 
     InsetBox["268", {1.2752606, 0.0494196202}, {-1, 1}], 
     InsetBox["269", {1.2751303, 0.0247098101}, {-1, 1}], 
     InsetBox["270", {1.25, 0.2}, {-1, 1}], 
     InsetBox["271", {1.2499266, 0.174683897}, {-1, 1}], 
     InsetBox["272", {1.24985321, 0.149367793}, {-1, 1}], 
     InsetBox["273", {1.275, 0.}, {-1, 1}], 
     InsetBox["274", {1.25004595, 0.124241934}, {-1, 1}], 
     InsetBox["275", {1.25023869, 0.099116075}, {-1, 1}], 
     InsetBox["276", {1.25023335, 0.0742862901}, {-1, 1}], 
     InsetBox["277", {1.25022802, 0.0494565051}, {-1, 1}], 
     InsetBox["278", {1.25011401, 0.0247282526}, {-1, 1}], 
     InsetBox["279", {1.225, 0.2}, {-1, 1}], 
     InsetBox["280", {1.2250033, 0.174692958}, {-1, 1}], 
     InsetBox["281", {1.25, 0.}, {-1, 1}], 
     InsetBox["282", {1.2250066, 0.149385917}, {-1, 1}], 
     InsetBox["283", {1.22517116, 0.124178345}, {-1, 1}], 
     InsetBox["284", {1.22533572, 0.0989707737}, {-1, 1}], 
     InsetBox["285", {1.22531991, 0.0741813157}, {-1, 1}], 
     InsetBox["286", {1.22530411, 0.0493918577}, {-1, 1}], 
     InsetBox["287", {1.22515205, 0.0246959288}, {-1, 1}], 
     InsetBox["288", {1.2, 0.2}, {-1, 1}], 
     InsetBox["289", {1.20007999, 0.17470202}, {-1, 1}], 
     InsetBox["290", {1.225, 0.}, {-1, 1}], 
     InsetBox["291", {1.20015999, 0.149404041}, {-1, 1}], 
     InsetBox["292", {1.20029637, 0.124114757}, {-1, 1}], 
     InsetBox["293", {1.20043275, 0.0988254725}, {-1, 1}], 
     InsetBox["294", {1.20040647, 0.0740763413}, {-1, 1}], 
     InsetBox["295", {1.2003802, 0.0493272102}, {-1, 1}], 
     InsetBox["296", {1.2001901, 0.0246636051}, {-1, 1}], 
     InsetBox["297", {1.2, 0.}, {-1, 1}], 
     InsetBox["298", {1.175, 0.2}, {-1, 1}], 
     InsetBox["299", {1.1751285, 0.174706735}, {-1, 1}], 
     InsetBox["300", {1.175257, 0.149413469}, {-1, 1}], 
     InsetBox["301", {1.17547828, 0.124266455}, {-1, 1}], 
     InsetBox["302", {1.17569957, 0.09911944}, {-1, 1}], 
     InsetBox["303", {1.17558517, 0.0742588709}, {-1, 1}], 
     InsetBox["304", {1.17547077, 0.0493983018}, {-1, 1}], 
     InsetBox["305", {1.17523539, 0.0246991509}, {-1, 1}], 
     InsetBox["306", {1.175, 0.}, {-1, 1}], 
     InsetBox["307", {1.15, 0.2}, {-1, 1}], 
     InsetBox["308", {1.150177, 0.174711449}, {-1, 1}], 
     InsetBox["309", {1.150354, 0.149422898}, {-1, 1}], 
     InsetBox["310", {1.1506602, 0.124418153}, {-1, 1}], 
     InsetBox["311", {1.15096639, 0.0994134075}, {-1, 1}], 
     InsetBox["312", {1.15076387, 0.0744414004}, {-1, 1}], 
     InsetBox["313", {1.15056135, 0.0494693934}, {-1, 1}], 
     InsetBox["314", {1.15028067, 0.0247346967}, {-1, 1}], 
     InsetBox["315", {1.15, 0.}, {-1, 1}], 
     InsetBox["316", {1.125, 0.2}, {-1, 1}], 
     InsetBox["317", {1.12517108, 0.174820491}, {-1, 1}], 
     InsetBox["318", {1.12534217, 0.149640981}, {-1, 1}], 
     InsetBox["319", {1.1256311, 0.124640516}, {-1, 1}], 
     InsetBox["320", {1.12592003, 0.0996400505}, {-1, 1}], 
     InsetBox["321", {1.12574572, 0.0746183897}, {-1, 1}], 
     InsetBox["322", {1.12557141, 0.0495967289}, {-1, 1}], 
     InsetBox["323", {1.12528571, 0.0247983644}, {-1, 1}], 
     InsetBox["324", {1.125, 0.}, {-1, 1}], 
     InsetBox["325", {1.1, 0.2}, {-1, 1}], 
     InsetBox["326", {1.10016516, 0.174929532}, {-1, 1}], 
     InsetBox["327", {1.10033033, 0.149859064}, {-1, 1}], 
     InsetBox["328", {1.100602, 0.124862879}, {-1, 1}], 
     InsetBox["329", {1.10087367, 0.0998666935}, {-1, 1}], 
     InsetBox["330", {1.10072757, 0.074795379}, {-1, 1}], 
     InsetBox["331", {1.10058148, 0.0497240644}, {-1, 1}], 
     InsetBox["332", {1.10029074, 0.0248620322}, {-1, 1}], 
     InsetBox["333", {1.1, 0.}, {-1, 1}], 
     InsetBox["334", {1.075, 0.2}, {-1, 1}], 
     InsetBox["335", {1.07510599, 0.175001433}, {-1, 1}], 
     InsetBox["336", {1.07521199, 0.150002865}, {-1, 1}], 
     InsetBox["337", {1.07539728, 0.124953546}, {-1, 1}], 
     InsetBox["338", {1.07558258, 0.0999042275}, {-1, 1}], 
     InsetBox["339", {1.0755031, 0.0748530477}, {-1, 1}], 
     InsetBox["340", {1.07542361, 0.049801868}, {-1, 1}], 
     InsetBox["341", {1.07521181, 0.024900934}, {-1, 1}], 
     InsetBox["342", {1.075, 0.}, {-1, 1}], 
     InsetBox["343", {1.05, 0.2}, {-1, 1}], 
     InsetBox["344", {1.05004682, 0.175073333}, {-1, 1}], 
     InsetBox["345", {1.05009365, 0.150146666}, {-1, 1}], 
     InsetBox["346", {1.05019257, 0.125044214}, {-1, 1}], 
     InsetBox["347", {1.05029149, 0.0999417614}, {-1, 1}], 
     InsetBox["348", {1.05027862, 0.0749107165}, {-1, 1}], 
     InsetBox["349", {1.05026575, 0.0498796716}, {-1, 1}], 
     InsetBox["350", {1.05013287, 0.0249398358}, {-1, 1}], 
     InsetBox["351", {1.05, 0.}, {-1, 1}], 
     InsetBox["352", {1.025, 0.2}, {-1, 1}], 
     InsetBox["353", {1.02489107, 0.174994826}, {-1, 1}], 
     InsetBox["354", {1.02478214, 0.149989653}, {-1, 1}], 
     InsetBox["355", {1.02472634, 0.124892841}, {-1, 1}], 
     InsetBox["356", {1.02467055, 0.0997960287}, {-1, 1}], 
     InsetBox["357", {1.02477671, 0.0748066124}, {-1, 1}], 
     InsetBox["358", {1.02488287, 0.0498171961}, {-1, 1}], 
     InsetBox["359", {1.02494143, 0.024908598}, {-1, 1}], 
     InsetBox["360", {1.025, 0.}, {-1, 1}], 
     InsetBox["361", {1., 0.2}, {-1, 1}], 
     InsetBox["362", {0.999735316, 0.17491632}, {-1, 1}], 
     InsetBox["363", {0.999470631, 0.149832639}, {-1, 1}], 
     InsetBox["364", {0.999260119, 0.124741468}, {-1, 1}], 
     InsetBox["365", {0.999049606, 0.0996502959}, {-1, 1}], 
     InsetBox["366", {0.999274796, 0.0747025083}, {-1, 1}], 
     InsetBox["367", {0.999499986, 0.0497547206}, {-1, 1}], 
     InsetBox["368", {0.999749993, 0.0248773603}, {-1, 1}], 
     InsetBox["369", {1., 0.}, {-1, 1}], 
     InsetBox["370", {0.975, 0.2}, {-1, 1}], 
     InsetBox["371", {0.974552476, 0.174841559}, {-1, 1}], 
     InsetBox["372", {0.974104953, 0.149683117}, {-1, 1}], 
     InsetBox["373", {0.973897244, 0.12455823}, {-1, 1}], 
     InsetBox["374", {0.973689535, 0.0994333435}, {-1, 1}], 
     InsetBox["375", {0.973926403, 0.0745371715}, {-1, 1}], 
     InsetBox["376", {0.974163272, 0.0496409995}, {-1, 1}], 
     InsetBox["377", {0.974581636, 0.0248204998}, {-1, 1}], 
     InsetBox["378", {0.975, 0.}, {-1, 1}], 
     InsetBox["379", {0.95, 0.2}, {-1, 1}], 
     InsetBox["380", {0.949369637, 0.174766798}, {-1, 1}], 
     InsetBox["381", {0.948739274, 0.149533595}, {-1, 1}], 
     InsetBox["382", {0.948534369, 0.124374993}, {-1, 1}], 
     InsetBox["383", {0.948329464, 0.0992163911}, {-1, 1}], 
     InsetBox["384", {0.948578011, 0.0743718348}, {-1, 1}], 
     InsetBox["385", {0.948826557, 0.0495272785}, {-1, 1}], 
     InsetBox["386", {0.949413279, 0.0247636392}, {-1, 1}], 
     InsetBox["387", {0.95, 0.}, {-1, 1}], 
     InsetBox["388", {0.925, 0.2}, {-1, 1}], 
     InsetBox["389", {0.924292358, 0.174679026}, {-1, 1}], 
     InsetBox["390", {0.923584716, 0.149358051}, {-1, 1}], 
     InsetBox["391", {0.923253657, 0.124280629}, {-1, 1}], 
     InsetBox["392", {0.922922597, 0.0992032065}, {-1, 1}], 
     InsetBox["393", {0.923037133, 0.0742679234}, {-1, 1}], 
     InsetBox["394", {0.923151668, 0.0493326403}, {-1, 1}], 
     InsetBox["395", {0.924075834, 0.0246663202}, {-1, 1}], 
     InsetBox["396", {0.925, 0.}, {-1, 1}], 
     InsetBox["397", {0.9, 0.2}, {-1, 1}], 
     InsetBox["398", {0.899215079, 0.174591254}, {-1, 1}], 
     InsetBox["399", {0.898430158, 0.149182507}, {-1, 1}], 
     InsetBox["400", {0.897972944, 0.124186265}, {-1, 1}], 
     InsetBox["401", {0.89751573, 0.0991900219}, {-1, 1}], 
     InsetBox["402", {0.897496254, 0.074164012}, {-1, 1}], 
     InsetBox["403", {0.897476779, 0.0491380022}, {-1, 1}], 
     InsetBox["404", {0.89873839, 0.0245690011}, {-1, 1}], 
     InsetBox["405", {0.9, 0.}, {-1, 1}], 
     InsetBox["406", {0.875, 0.2}, {-1, 1}], 
     InsetBox["407", {0.874104153, 0.174729898}, {-1, 1}], 
     InsetBox["408", {0.873208306, 0.149459796}, {-1, 1}], 
     InsetBox["409", {0.872439715, 0.1243332}, {-1, 1}], 
     InsetBox["410", {0.871671124, 0.0992066045}, {-1, 1}], 
     InsetBox["411", {0.871299292, 0.0741053866}, {-1, 1}], 
     InsetBox["412", {0.870927459, 0.0490041688}, {-1, 1}], 
     InsetBox["413", {0.87296373, 0.0245020844}, {-1, 1}], 
     InsetBox["414", {0.875, 0.}, {-1, 1}], 
     InsetBox["415", {0.85, 0.2}, {-1, 1}], 
     InsetBox["416", {0.848993227, 0.174868543}, {-1, 1}], 
     InsetBox["417", {0.847986455, 0.149737086}, {-1, 1}], 
     InsetBox["418", {0.846906487, 0.124480136}, {-1, 1}], 
     InsetBox["419", {0.845826518, 0.0992231871}, {-1, 1}], 
     InsetBox["420", {0.845102329, 0.0740467612}, {-1, 1}], 
     InsetBox["421", {0.84437814, 0.0488703354}, {-1, 1}], 
     InsetBox["422", {0.84718907, 0.0244351677}, {-1, 1}], 
     InsetBox["423", {0.85, 0.}, {-1, 1}], 
     InsetBox["424", {0.825, 0.2}, {-1, 1}], 
     InsetBox["425", {0.823918899, 0.175069933}, {-1, 1}], 
     InsetBox["426", {0.822837799, 0.150139867}, {-1, 1}], 
     InsetBox["427", {0.821427889, 0.125482958}, {-1, 1}], 
     InsetBox["428", {0.82001798, 0.10082605}, {-1, 1}], 
     InsetBox["429", {0.817288458, 0.075578603}, {-1, 1}], 
     InsetBox["430", {0.825, 0.}, {-1, 1}], 
     InsetBox["431", {0.819779468, 0.0251655781}, {-1, 1}], 
     InsetBox["432", {0.814558936, 0.0503311562}, {-1, 1}], 
     InsetBox["433", {0.8, 0.2}, {-1, 1}], 
     InsetBox["434", {0.798844571, 0.175271324}, {-1, 1}], 
     InsetBox["435", {0.797689143, 0.150542648}, {-1, 1}], 
     InsetBox["436", {0.795949292, 0.12648578}, {-1, 1}], 
     InsetBox["437", {0.794209441, 0.102428912}, {-1, 1}], 
     InsetBox["438", {0.8, 0.}, {-1, 1}], 
     InsetBox["439", {0.789474586, 0.0771104447}, {-1, 1}], 
     InsetBox["440", {0.792369866, 0.0258959885}, {-1, 1}], 
     InsetBox["441", {0.784739732, 0.051791977}, {-1, 1}], 
     InsetBox["442", {0.775, 0.2}, {-1, 1}], 
     InsetBox["443", {0.774180336, 0.175759464}, {-1, 1}], 
     InsetBox["444", {0.773360672, 0.151518928}, {-1, 1}], 
     InsetBox["445", {0.772378288, 0.128406152}, {-1, 1}], 
     InsetBox["446", {0.771395905, 0.105293375}, {-1, 1}], 
     InsetBox["447", {0.769115618, 0.0844439179}, {-1, 1}], 
     InsetBox["448", {0.766835331, 0.0635944605}, {-1, 1}], 
     InsetBox["449", {0.775, 0.}, {-1, 1}], 
     InsetBox["450", {0.767884883, 0.021821852}, {-1, 1}], 
     InsetBox["451", {0.760769766, 0.043643704}, {-1, 1}], 
     InsetBox["452", {0.75, 0.2}, {-1, 1}], 
     InsetBox["453", {0.7495161, 0.176247604}, {-1, 1}], 
     InsetBox["454", {0.7490322, 0.152495208}, {-1, 1}], 
     InsetBox["455", {0.748807285, 0.130326523}, {-1, 1}], 
     InsetBox["456", {0.74858237, 0.108157838}, {-1, 1}], 
     InsetBox["457", {0.74875665, 0.0917773911}, {-1, 1}], 
     InsetBox["458", {0.74893093, 0.0753969441}, {-1, 1}], 
     InsetBox["459", {0.745985287, 0.0572313423}, {-1, 1}], 
     InsetBox["460", {0.75, 0.}, {-1, 1}], 
     InsetBox["461", {0.7433999, 0.0177477155}, {-1, 1}], 
     InsetBox["462", {0.736799801, 0.035495431}, {-1, 1}], 
     InsetBox["463", {0.725, 0.2}, {-1, 1}], 
     InsetBox["464", {0.724967499, 0.176241324}, {-1, 1}], 
     InsetBox["465", {0.731200808, 0.0708189806}, {-1, 1}], 
     InsetBox["466", {0.724934999, 0.152482647}, {-1, 1}], 
     InsetBox["467", {0.728768952, 0.0891562692}, {-1, 1}], 
     InsetBox["468", {0.725636048, 0.129988103}, {-1, 1}], 
     InsetBox["469", {0.726337096, 0.107493558}, {-1, 1}], 
     InsetBox["470", {0.725135244, 0.0508682241}, {-1, 1}], 
     InsetBox["471", {0.725, 0.}, {-1, 1}], 
     InsetBox["472", {0.721754747, 0.0158624502}, {-1, 1}], 
     InsetBox["473", {0.718509494, 0.0317249005}, {-1, 1}], 
     InsetBox["474", {0.713470687, 0.0662410171}, {-1, 1}], 
     InsetBox["475", {0.708781255, 0.0865351472}, {-1, 1}], 
     InsetBox["476", {0.704091823, 0.106829277}, {-1, 1}], 
     InsetBox["477", {0.70246481, 0.129649682}, {-1, 1}], 
     InsetBox["478", {0.700418899, 0.176235043}, {-1, 1}], 
     InsetBox["479", {0.7, 0.2}, {-1, 1}], 
     InsetBox["480", {0.700837798, 0.152470087}, {-1, 1}], 
     InsetBox["481", {0.703726665, 0.0446405097}, {-1, 1}], 
     InsetBox["482", {0.700219188, 0.0279543699}, {-1, 1}], 
     InsetBox["483", {0.700109594, 0.013977185}, {-1, 1}], 
     InsetBox["484", {0.7, 0.}, {-1, 1}], 
     InsetBox["485", {0.688943835, 0.057556119}, {-1, 1}], 
     InsetBox["486", {0.684244104, 0.0809567288}, {-1, 1}], 
     InsetBox["487", {0.679544373, 0.104357339}, {-1, 1}], 
     InsetBox["488", {0.677864701, 0.128113684}, {-1, 1}], 
     InsetBox["489", {0.675592515, 0.175935014}, {-1, 1}], 
     InsetBox["490", {0.67618503, 0.151870028}, {-1, 1}], 
     InsetBox["491", {0.675, 0.2}, {-1, 1}], 
     InsetBox["492", {0.682318085, 0.0384127954}, {-1, 1}], 
     InsetBox["493", {0.678659043, 0.0192063977}, {-1, 1}], 
     InsetBox["494", {0.675, 0.}, {-1, 1}], 
     InsetBox["495", {0.664416982, 0.0488712208}, {-1, 1}], 
     InsetBox["496", {0.659706952, 0.0753783103}, {-1, 1}], 
     InsetBox["497", {0.654996922, 0.1018854}, {-1, 1}], 
     InsetBox["498", {0.653264593, 0.126577685}, {-1, 1}], 
     InsetBox["499", {0.651532263, 0.15126997}, {-1, 1}], 
     InsetBox["500", {0.650766131, 0.175634985}, {-1, 1}], 
     InsetBox["501", {0.65, 0.2}, {-1, 1}], 
     InsetBox["502", {0.657208491, 0.0244356104}, {-1, 1}], 
     InsetBox["503", {0.65, 0.}, {-1, 1}], 
     InsetBox["504", {0.634143429, 0.0493327672}, {-1, 1}], 
     InsetBox["505", {0.631368401, 0.0752972154}, {-1, 1}], 
     InsetBox["506", {0.627398873, 0.12607923}, {-1, 1}], 
     InsetBox["507", {0.625602186, 0.175448398}, {-1, 1}], 
     InsetBox["508", {0.626204373, 0.150896797}, {-1, 1}], 
     InsetBox["509", {0.628593373, 0.101261664}, {-1, 1}], 
     InsetBox["510", {0.625, 0.2}, {-1, 1}], 
     InsetBox["511", {0.629571714, 0.0246663836}, {-1, 1}], 
     InsetBox["512", {0.625, 0.}, {-1, 1}], 
     InsetBox["513", {0.600438241, 0.175261812}, {-1, 1}], 
     InsetBox["514", {0.600876482, 0.150523624}, {-1, 1}], 
     InsetBox["515", {0.6, 0.2}, {-1, 1}], 
     InsetBox["516", {0.601533152, 0.125580776}, {-1, 1}], 
     InsetBox["517", {0.602189823, 0.100637928}, {-1, 1}], 
     InsetBox["518", {0.603029849, 0.0752161205}, {-1, 1}], 
     InsetBox["519", {0.603869876, 0.0497943136}, {-1, 1}], 
     InsetBox["520", {0.601934938, 0.0248971568}, {-1, 1}], 
     InsetBox["521", {0.6, 0.}, {-1, 1}], 
     InsetBox["522", {0.575, 0.2}, {-1, 1}], 
     InsetBox["523", {0.575165082, 0.175177556}, {-1, 1}], 
     InsetBox["524", {0.575330163, 0.150355111}, {-1, 1}], 
     InsetBox["525", {0.575815022, 0.125348897}, {-1, 1}], 
     InsetBox["526", {0.57629988, 0.100342683}, {-1, 1}], 
     InsetBox["527", {0.576867994, 0.0750864475}, {-1, 1}], 
     InsetBox["528", {0.577436109, 0.0498302121}, {-1, 1}], 
     InsetBox["529", {0.576218054, 0.0249151061}, {-1, 1}], 
     InsetBox["530", {0.575, 0.}, {-1, 1}], 
     InsetBox["531", {0.55, 0.2}, {-1, 1}], 
     InsetBox["532", {0.549891922, 0.175093299}, {-1, 1}], 
     InsetBox["533", {0.549783844, 0.150186598}, {-1, 1}], 
     InsetBox["534", {0.550096891, 0.125117018}, {-1, 1}], 
     InsetBox["535", {0.550409937, 0.100047438}, {-1, 1}], 
     InsetBox["536", {0.550706139, 0.0749567745}, {-1, 1}], 
     InsetBox["537", {0.551002342, 0.0498661107}, {-1, 1}], 
     InsetBox["538", {0.550501171, 0.0249330553}, {-1, 1}], 
     InsetBox["539", {0.55, 0.}, {-1, 1}], 
     InsetBox["540", {0.525, 0.2}, {-1, 1}], 
     InsetBox["541", {0.524756682, 0.175015249}, {-1, 1}], 
     InsetBox["542", {0.524513365, 0.150030497}, {-1, 1}], 
     InsetBox["543", {0.524663488, 0.124900863}, {-1, 1}], 
     InsetBox["544", {0.524813611, 0.0997712287}, {-1, 1}], 
     InsetBox["545", {0.52508978, 0.0747578147}, {-1, 1}], 
     InsetBox["546", {0.525365948, 0.0497444007}, {-1, 1}], 
     InsetBox["547", {0.525182974, 0.0248722004}, {-1, 1}], 
     InsetBox["548", {0.525, 0.}, {-1, 1}], 
     InsetBox["549", {0.5, 0.2}, {-1, 1}], 
     InsetBox["550", {0.499621443, 0.174937198}, {-1, 1}], 
     InsetBox["551", {0.499242885, 0.149874396}, {-1, 1}], 
     InsetBox["552", {0.499230086, 0.124684708}, {-1, 1}], 
     InsetBox["553", {0.499217286, 0.099495019}, {-1, 1}], 
     InsetBox["554", {0.49947342, 0.0745588549}, {-1, 1}], 
     InsetBox["555", {0.499729554, 0.0496226908}, {-1, 1}], 
     InsetBox["556", {0.499864777, 0.0248113454}, {-1, 1}], 
     InsetBox["557", {0.5, 0.}, {-1, 1}], 
     InsetBox["558", {0.475, 0.2}, {-1, 1}], 
     InsetBox["559", {0.474642955, 0.17484807}, {-1, 1}], 
     InsetBox["560", {0.474285911, 0.149696139}, {-1, 1}], 
     InsetBox["561", {0.474259731, 0.12452289}, {-1, 1}], 
     InsetBox["562", {0.474233551, 0.0993496416}, {-1, 1}], 
     InsetBox["563", {0.474450788, 0.0744693743}, {-1, 1}], 
     InsetBox["564", {0.474668025, 0.049589107}, {-1, 1}], 
     InsetBox["565", {0.474834013, 0.0247945535}, {-1, 1}], 
     InsetBox["566", {0.475, 0.}, {-1, 1}], 
     InsetBox["567", {0.45, 0.2}, {-1, 1}], 
     InsetBox["568", {0.449664468, 0.174758941}, {-1, 1}], 
     InsetBox["569", {0.449328936, 0.149517882}, {-1, 1}], 
     InsetBox["570", {0.449289376, 0.124361073}, {-1, 1}], 
     InsetBox["571", {0.449249815, 0.0992042643}, {-1, 1}], 
     InsetBox["572", {0.449428156, 0.0743798938}, {-1, 1}], 
     InsetBox["573", {0.449606497, 0.0495555233}, {-1, 1}], 
     InsetBox["574", {0.449803248, 0.0247777616}, {-1, 1}], 
     InsetBox["575", {0.45, 0.}, {-1, 1}], 
     InsetBox["576", {0.425, 0.2}, {-1, 1}], 
     InsetBox["577", {0.424745989, 0.174652684}, {-1, 1}], 
     InsetBox["578", {0.424491978, 0.149305369}, {-1, 1}], 
     InsetBox["579", {0.424423615, 0.124262239}, {-1, 1}], 
     InsetBox["580", {0.424355253, 0.09921911}, {-1, 1}], 
     InsetBox["581", {0.424440905, 0.0743472203}, {-1, 1}], 
     InsetBox["582", {0.424526557, 0.0494753306}, {-1, 1}], 
     InsetBox["583", {0.424763278, 0.0247376653}, {-1, 1}], 
     InsetBox["584", {0.425, 0.}, {-1, 1}], 
     InsetBox["585", {0.4, 0.2}, {-1, 1}], 
     InsetBox["586", {0.39982751, 0.174546427}, {-1, 1}], 
     InsetBox["587", {0.399655019, 0.149092855}, {-1, 1}], 
     InsetBox["588", {0.399557855, 0.124163405}, {-1, 1}], 
     InsetBox["589", {0.399460691, 0.0992339557}, {-1, 1}], 
     InsetBox["590", {0.399453654, 0.0743145468}, {-1, 1}], 
     InsetBox["591", {0.399446617, 0.0493951379}, {-1, 1}], 
     InsetBox["592", {0.399723308, 0.024697569}, {-1, 1}], 
     InsetBox["593", {0.4, 0.}, {-1, 1}], 
     InsetBox["594", {0.375, 0.2}, {-1, 1}], 
     InsetBox["595", {0.374963589, 0.174663385}, {-1, 1}], 
     InsetBox["596", {0.374927179, 0.14932677}, {-1, 1}], 
     InsetBox["597", {0.37470159, 0.124282765}, {-1, 1}], 
     InsetBox["598", {0.374476002, 0.0992387608}, {-1, 1}], 
     InsetBox["599", {0.374433012, 0.0744122638}, {-1, 1}], 
     InsetBox["600", {0.374390022, 0.0495857668}, {-1, 1}], 
     InsetBox["601", {0.374695011, 0.0247928834}, {-1, 1}], 
     InsetBox["602", {0.375, 0.}, {-1, 1}], 
     InsetBox["603", {0.35, 0.2}, {-1, 1}], 
     InsetBox["604", {0.350099669, 0.174780342}, {-1, 1}], 
     InsetBox["605", {0.350199338, 0.149560685}, {-1, 1}], 
     InsetBox["606", {0.349845326, 0.124402125}, {-1, 1}], 
     InsetBox["607", {0.349491313, 0.0992435659}, {-1, 1}], 
     InsetBox["608", {0.34941237, 0.0745099808}, {-1, 1}], 
     InsetBox["609", {0.349333428, 0.0497763957}, {-1, 1}], 
     InsetBox["610", {0.349666714, 0.0248881979}, {-1, 1}], 
     InsetBox["611", {0.35, 0.}, {-1, 1}], 
     InsetBox["612", {0.325, 0.2}, {-1, 1}], 
     InsetBox["613", {0.325037499, 0.174761603}, {-1, 1}], 
     InsetBox["614", {0.325074998, 0.149523206}, {-1, 1}], 
     InsetBox["615", {0.324718222, 0.124312135}, {-1, 1}], 
     InsetBox["616", {0.324361447, 0.0991010645}, {-1, 1}], 
     InsetBox["617", {0.324389835, 0.0743499919}, {-1, 1}], 
     InsetBox["618", {0.324418223, 0.0495989194}, {-1, 1}], 
     InsetBox["619", {0.324709112, 0.0247994597}, {-1, 1}], 
     InsetBox["620", {0.325, 0.}, {-1, 1}], 
     InsetBox["621", {0.3, 0.2}, {-1, 1}], 
     InsetBox["622", {0.299975329, 0.174742864}, {-1, 1}], 
     InsetBox["623", {0.299950658, 0.149485728}, {-1, 1}], 
     InsetBox["624", {0.299591119, 0.124222145}, {-1, 1}], 
     InsetBox["625", {0.299231581, 0.098958563}, {-1, 1}], 
     InsetBox["626", {0.2993673, 0.074190003}, {-1, 1}], 
     InsetBox["627", {0.299503018, 0.0494214431}, {-1, 1}], 
     InsetBox["628", {0.299751509, 0.0247107215}, {-1, 1}], 
     InsetBox["629", {0.3, 0.}, {-1, 1}], 
     InsetBox["630", {0.275, 0.2}, {-1, 1}], 
     InsetBox["631", {0.274877832, 0.17465961}, {-1, 1}], 
     InsetBox["632", {0.274755665, 0.14931922}, {-1, 1}], 
     InsetBox["633", {0.274524012, 0.124111069}, {-1, 1}], 
     InsetBox["634", {0.274292359, 0.0989029173}, {-1, 1}], 
     InsetBox["635", {0.2743837, 0.0740445228}, {-1, 1}], 
     InsetBox["636", {0.274475041, 0.0491861284}, {-1, 1}], 
     InsetBox["637", {0.274737521, 0.0245930642}, {-1, 1}], 
     InsetBox["638", {0.275, 0.}, {-1, 1}], 
     InsetBox["639", {0.25, 0.2}, {-1, 1}], 
     InsetBox["640", {0.249780336, 0.174576356}, {-1, 1}], 
     InsetBox["641", {0.249560672, 0.149152713}, {-1, 1}], 
     InsetBox["642", {0.249456904, 0.123999992}, {-1, 1}], 
     InsetBox["643", {0.249353136, 0.0988472716}, {-1, 1}], 
     InsetBox["644", {0.2494001, 0.0738990426}, {-1, 1}], 
     InsetBox["645", {0.249447064, 0.0489508137}, {-1, 1}], 
     InsetBox["646", {0.249723532, 0.0244754068}, {-1, 1}], 
     InsetBox["647", {0.25, 0.}, {-1, 1}], 
     InsetBox["648", {0.225, 0.2}, {-1, 1}], 
     InsetBox["649", {0.224752085, 0.174551159}, {-1, 1}], 
     InsetBox["650", {0.224504171, 0.149102317}, {-1, 1}], 
     InsetBox["651", {0.224431272, 0.123993741}, {-1, 1}], 
     InsetBox["652", {0.224358373, 0.0988851647}, {-1, 1}], 
     InsetBox["653", {0.224409129, 0.073939559}, {-1, 1}], 
     InsetBox["654", {0.224459885, 0.0489939532}, {-1, 1}], 
     InsetBox["655", {0.224729942, 0.0244969766}, {-1, 1}], 
     InsetBox["656", {0.225, 0.}, {-1, 1}], 
     InsetBox["657", {0.2, 0.2}, {-1, 1}], 
     InsetBox["658", {0.199723835, 0.174525961}, {-1, 1}], 
     InsetBox["659", {0.19944767, 0.149051922}, {-1, 1}], 
     InsetBox["660", {0.19940564, 0.12398749}, {-1, 1}], 
     InsetBox["661", {0.199363611, 0.0989230579}, {-1, 1}], 
     InsetBox["662", {0.199418158, 0.0739800753}, {-1, 1}], 
     InsetBox["663", {0.199472705, 0.0490370926}, {-1, 1}], 
     InsetBox["664", {0.199736353, 0.0245185463}, {-1, 1}], 
     InsetBox["665", {0.2, 0.}, {-1, 1}], 
     InsetBox["666", {0.175, 0.2}, {-1, 1}], 
     InsetBox["667", {0.174743454, 0.174578012}, {-1, 1}], 
     InsetBox["668", {0.174486909, 0.149156023}, {-1, 1}], 
     InsetBox["669", {0.17437959, 0.123997763}, {-1, 1}], 
     InsetBox["670", {0.174272271, 0.098839502}, {-1, 1}], 
     InsetBox["671", {0.174395226, 0.0740122758}, {-1, 1}], 
     InsetBox["672", {0.17451818, 0.0491850496}, {-1, 1}], 
     InsetBox["673", {0.17475909, 0.0245925248}, {-1, 1}], 
     InsetBox["674", {0.175, 0.}, {-1, 1}], 
     InsetBox["675", {0.15, 0.2}, {-1, 1}], 
     InsetBox["676", {0.149763074, 0.174630062}, {-1, 1}], 
     InsetBox["677", {0.149526148, 0.149260125}, {-1, 1}], 
     InsetBox["678", {0.14935354, 0.124008035}, {-1, 1}], 
     InsetBox["679", {0.149180932, 0.098755946}, {-1, 1}], 
     InsetBox["680", {0.149372294, 0.0740444763}, {-1, 1}], 
     InsetBox["681", {0.149563656, 0.0493330067}, {-1, 1}], 
     InsetBox["682", {0.149781828, 0.0246665033}, {-1, 1}], 
     InsetBox["683", {0.15, 0.}, {-1, 1}], 
     InsetBox["684", {0.125, 0.2}, {-1, 1}], 
     InsetBox["685", {0.124750534, 0.174623189}, {-1, 1}], 
     InsetBox["686", {0.124501068, 0.149246378}, {-1, 1}], 
     InsetBox["687", {0.124351565, 0.124086738}, {-1, 1}], 
     InsetBox["688", {0.124202061, 0.0989270982}, {-1, 1}], 
     InsetBox["689", {0.12439219, 0.0741815478}, {-1, 1}], 
     InsetBox["690", {0.12458232, 0.0494359974}, {-1, 1}], 
     InsetBox["691", {0.12479116, 0.0247179987}, {-1, 1}], 
     InsetBox["692", {0.125, 0.}, {-1, 1}], 
     InsetBox["693", {0.1, 0.2}, {-1, 1}], 
     InsetBox["694", {0.0997379946, 0.174616316}, {-1, 1}], 
     InsetBox["695", {0.0994759893, 0.149232632}, {-1, 1}], 
     InsetBox["696", {0.0993495894, 0.124165441}, {-1, 1}], 
     InsetBox["697", {0.0992231896, 0.0990982503}, {-1, 1}], 
     InsetBox["698", {0.0994120873, 0.0743186192}, {-1, 1}], 
     InsetBox["699", {0.099600985, 0.0495389881}, {-1, 1}], 
     InsetBox["700", {0.0998004925, 0.024769494}, {-1, 1}], 
     InsetBox["701", {0.1, 0.}, {-1, 1}], 
     InsetBox["702", {0.075, 0.2}, {-1, 1}], 
     InsetBox["703", {0.074804826, 0.174765441}, {-1, 1}], 
     InsetBox["704", {0.0746096519, 0.149530882}, {-1, 1}], 
     InsetBox["705", {0.0744849407, 0.124560977}, {-1, 1}], 
     InsetBox["706", {0.0743602294, 0.0995910716}, {-1, 1}], 
     InsetBox["707", {0.074557916, 0.0747270683}, {-1, 1}], 
     InsetBox["708", {0.0747556026, 0.0498630651}, {-1, 1}], 
     InsetBox["709", {0.0748778013, 0.0249315326}, {-1, 1}], 
     InsetBox["710", {0.075, 0.}, {-1, 1}], 
     InsetBox["711", {0.05, 0.2}, {-1, 1}], 
     InsetBox["712", {0.0498716573, 0.174914566}, {-1, 1}], 
     InsetBox["713", {0.0497433146, 0.149829131}, {-1, 1}], 
     InsetBox["714", {0.0496202919, 0.124956512}, {-1, 1}], 
     InsetBox["715", {0.0494972691, 0.100083893}, {-1, 1}], 
     InsetBox["716", {0.0497037447, 0.0751355175}, {-1, 1}], 
     InsetBox["717", {0.0499102202, 0.0501871422}, {-1, 1}], 
     InsetBox["718", {0.0499551101, 0.0250935711}, {-1, 1}], 
     InsetBox["719", {0.05, 0.}, {-1, 1}], 
     InsetBox["720", {0.025, 0.2}, {-1, 1}], 
     InsetBox["721", {0.0249358287, 0.174957283}, {-1, 1}], 
     InsetBox["722", {0.0248716573, 0.149914566}, {-1, 1}], 
     InsetBox["723", {0.0248101459, 0.124978256}, {-1, 1}], 
     InsetBox["724", {0.0247486346, 0.100041946}, {-1, 1}], 
     InsetBox["725", {0.0248518723, 0.0750677587}, {-1, 1}], 
     InsetBox["726", {0.0249551101, 0.0500935711}, {-1, 1}], 
     InsetBox["727", {0.024977555, 0.0250467855}, {-1, 1}], 
     InsetBox["728", {0.025, 0.}, {-1, 1}], 
     InsetBox["729", {0., 0.2}, {-1, 1}], 
     InsetBox["730", {0., 0.175}, {-1, 1}], 
     InsetBox["731", {0., 0.15}, {-1, 1}], 
     InsetBox["732", {0., 0.125}, {-1, 1}], 
     InsetBox["733", {0., 0.1}, {-1, 1}], 
     InsetBox["734", {0., 0.075}, {-1, 1}], 
     InsetBox["735", {0., 0.05}, {-1, 1}], 
     InsetBox["736", {0., 0.025}, {-1, 1}], 
     InsetBox["737", {0., 0.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1: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
      "]]}}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.6932513463733296`*^9, 3.693251453467455*^9, 
  3.6932515098836823`*^9, 3.69325810093701*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1:eJwld3c8l9/7vyJKFKKSlLRImlRUnsqIopCQ9I6QiChRURlJKZWdmZFd9p6H
ly2bjJC99978Xt/P7/rjvh/XfY3zPOc8z32ua999YyXd9TQ0NB3Ux/+9O8+8
PnCNm0b8HNNZDjcfJ3Lp0c/Px+vWoGnGumOhx4F86i9ZWeCgEWf3OBVwe1cI
OX+35Wtd/hp0jjekDN38QbprLs2Fb6ERP1Eio2s2FUv0g4IKi42o8Y6mqeFu
tqThi9bEy6Q1BFE48o7tiCXbg07SJd1dA1OklcTTz4FEwbC4PlB+DSdKHnZm
m0WTc3KuOVoMaxBnO8Z6zd6czO3v4FZjoBGP9WhjptxOIXmf5tnow9YQXRsz
y/4mmUismDxnnVtF1euPu46b+JMY59Otd7AGo8iJXI2gJPLnjxIzpXcVmkVb
ow38fxFXjkzxxYBVWEt84Qz7dI9M8glqMdDQiL8QdbzJkZNFqvPdnrl4rmFs
79FPND2Z5BOF552R0yqcrul/0irwIYU10XeYGlch8/k9S3x2IknpTT+8/eQa
2jW19Ns2ZRLx2PH5DqtVFGcPZ2wqiSQl+RzMLqLU8cakin6uv4Pa2KOyRhNr
WD1y/Mm5bRQyJkm3olKyirSpmfhEwQxSO2eWkGmyigO12dk0zQlEx9HvsvjH
NWgoNbGIhOaSN7ynQnr5V9Fe99+GF5yepPW6ovy2/Wv4d1GBT0gkl4SeP5F6
gXMVymfjONwmwknSTuPGb1qrEBeLuvBWMZ28m6irDc9YRamxi6V3UQ75rnVw
/eCmVbwoe++UMBJP/k2prvHVrSAnPJoiqWOGgJCXHr8713A/8P0HfekCcip8
oHrEcg07f5a/n27KJ8eDZrju5a1gJ2eTlKORG/lSdFGAhWMNYkFKUpZG+cT5
IA39t/gVMG1watm9K4w0DzC8E1NeRY2T5quVWzmEVUi8/NviCnR7f5sE308j
nV8Sby5GrWIxkvvN3fk8Yi5qvGPHjxUU3Dn6Spcmnoh09bVmG63ghENWeRWt
LWLY5R34qXztNmCO9H1ZTA6ss7R8T+XfE/oX/zVuLCYc+7oOD2is4OHN9WcW
KE6EpezsrMTICrZsv8K1hUKISmRXQbf0KrYdP2t94W0eud2xOfeb6wrSTDp+
5pumEkfHl1976Ncwz3jiDKtnEVl34I89h9wK7K4EKc9JhJBjtdyJh6l8MsvL
PjrLW0SCRd89mr2wAt+pdcZKbHGkZdHfe6xtBecuyOkSljxCxO8Gy9qvwET9
wQ2exmzCmKbpcJNhBeNZkhvFbjlA68+eC+8L1lDj/ex41a/fxK2itZTn3hrW
/xsXyzr7m2Rrx4oZiKwiase93Y1RhcT54UXJp7PL0BT/kL355EeS1Ny71CC4
gl/slHPxtilkU+QO3fT5VQzzdImGU0qJVVaHkWvPMjQqOeQ6jH4Qi4rK7sUX
K9iz+VzXpe8UEqSgLqbsQuWHcgODk3wp8crme/ynfhmjy1/bpA/EkvndhxWy
alYQfejC9s2iheRPrdvO8zwrGLmfG6IymEW6XCycRwVW0dX7ZflZYwlhLb18
emfxMkq1ww6GOSeTw91t+b0BVLw/DdbvvemEEg/CudNpGdYDgl0rf2zJC9UU
JlbDFdR8ki+6WFhAbtBdfOnHtgLVYZ7xdfwUYlFteVDOahktG54P+roFEn42
G0+HghXsPu6iqqZdQhRGKpuOpi+jomWrodtyJrFRTet9aELFH6vvqG8UTY5s
TX9rr7WMfIXvtw79SCJn+E2nYzesILlceg+LYgGxuvP85cF7K1hiefjh/Ggx
ies2MnshuowPeuIPFJdcIbZNIUr81zIWN6dUFyTkkj+WzdmZ/MvgcXy3Yduc
OdFpzN5Gx7kM8cMqQ8vm/kSFjmZD+k2qv9PkuUsMmaQ9bHh2aRNVr++YMnD5
RSR0JB9T5pehTpkM5KHyl/e9Vqmi/zKmtzrq9zbnk3v3FOqmF5eo/Ba7lZqY
SPIcy32GpZYhsI3WI0E4l3z/O357Y90SYv8Zf9/14xuWwhaJUt4SrF+YVF/P
0iSee45aBMQvgS/E7KtHjQ+p7W1xvjKyhEef5upp2DJI6tSyu6bLMqL8b5Vv
oism/dF74+fOLaNeT31G+X4+ibir3t3wYwllXU99OrMiycRmHjmvtiVsK+eu
ikzJISUZmXdZ3JeQtZOy8VpJApn+kXLHw2gJ4kKea3ev+mDCjPYYzdFliGm6
lS18KSLs4QkKfRpUfIfcx8k/NUQfty879H4J3/wMjUsF04kab9PweTkqXq0E
w8RjnoTXyrPoe80S3Ip/by/vzyPlejmqCReXoCk/l+wzEE78loK4L7yk2m+V
/hWQzSGHmyz6BI5T45/xSKy2xpOQ1gWFwIIlbIy2sZniLCJ97v7CvAxLoNlS
pb84/h26w48c6PctIUR9NClRNo1U5+4tvWS4BDnSEcPyPI9oSj9U+Dy7iJwb
hwZZtprBsnRFdblnEbH6l7+G6buRdZJmwiYNi8g8EhOTyRhGvDfdnW5jW0JP
n/tviyRCKq/+hOS9JZyO7tNYDC4kDYe+3ewpXkRc1KqMzngc+eJbKNG7YQkp
tE6dOhvyyAXRs1NV6YuwYbb6c+5OKqmt5vvzM2ARPJ/Hyx9cC8Tz/M3uJ50W
IZ7meip8wgYGJqYeGVaL8KQ9w3U/xImkunBezPi1CJkNM+l7CrPJma5wy6NP
FiF569mq+NEQsp+3iWVgfhHp9y1HWU8UEqVtX9O/31+E+WvLrqX1ceRvwa/3
Yf6LCFH9Ebj/K4Vc2L91wEeZ6p9U+W7UMIWceV86fkp0EW5/sx81cv+AlN9B
mb1HFmFyolSPT9UB+jJpO1h2LYJl5shx7xIH8vi4b+g36UUMfqXVnK7PIo7p
TxidXBax6pl0TyyjgBDTbHuDzYvQ8Fnxsr/ygwgaiz8qXF7Axaz4lIdbYslm
ERobA5FFSPR91lzaSSFs++tOUUYX0GXYWUFPvf8/rD9nkVK7gJaH1/dljwUj
2kx9kTF/AQrdm7hx1wnnbW6KiRxdhMF90YW31PvrmqaehHbiAli+n1t0v2pL
4mXfmmS2L8DjeqJK+kgmOfZzXXNYyAKczDne3tIOJE9G/qMf9VjAskjOeyGh
aMJsndCuRB1vnfDK/v+Cc0lPpCHXwAeqLphTqf01idAx6OwXMVpAou+7pHW5
oQi5fGa2u2ABvx/nOvdV55P+G7xcEXcXUKX2OpF51BUDrgLvOi0WIM10dW8B
XSbxHhDm2XN9ATlvA6aXPM1J/St5oQAswPGNh4C2oj+pcGUSvUjNz6F70afr
eC5JruIc3n9yAaV3fpg8f/OLbFTO9WLfv4B64VsDfFGJ5EC7qLjrvQU471M/
+PhuPqFpjOxMoV8ATUaHtqNzOKROqdJLzc1DRu2fouHrb/CW3uBAy7GATJdb
605wZRDbf/5ODX3zoJkRmmOQ0iID2/t6vjXNg6ljvMu+1Yfodco/PsSwgPWc
36/cysghiryRQ7d/z2P1bICwMbX++bi5okM8ax7m5W4JMr8TiFOSqoHkwjzE
dfZf5h7II8YPVegOxcxjffm5sZmT6YQugOHB6YB5vEroPCulFYnL96rLOpzm
EdvvICa1xQfS4iz/3G3mYe3qrXve6xYCxoe9RU3n4Zhoo15h4EkcGaz/sQbO
YzAwrHZaOofYEsbDHTrzGM0Zi63fEUHWHpfbsKrO49/Pis6OsXiidv6/N/Mu
81hQoXVffJZHNjWiH7LzsEupZJi7mUbkNjqG/RSZh6Rhmx/biV8w4PblenVk
Hp7KPqayft9xNkrDXYmLOh+KIW+jnimaeqN9W5jmoVH86mn/ghvhb5z9sig6
j/txClmLkYToMxs6PVydgzfH9erDemGkJl2qIuboPBhM/LWZ1uWRi7K1O7vG
5zA0an5vjD2ePFbY//5O1xwuhAttNjRPJVfidyjy1M5Bc7aZNK5EgeH24HJG
3hyU3x0y4+UMhJ29/cLdxDkE5N4+FFFljc+rrL976uZwz2gx1Lo4m0iy2SWV
hsxhOrsx8LqZMwl9qW4h8m0O/8kImORFhJB43sZ7BoVzmMg9Sn/7M4XUH7AQ
nnWYw2VTP5qnwnEkse9hROyrOYg1Cl445JFCgsTuaDkbzkHGP1LasjQGUT8q
dy1ozEGD4XKTZWcQfruXuOvJz6HqertIdf97qBtQHI0fz8H+49vmwe4sYla9
cTlFbA7FSb7Laz2fyLaVJEfGE3M4UvPp0ruRH8RbL9aBT3MOb0pNbfo4KUSn
9Z4m4/45THELc7xXiSUJJx/lMGyn5i8Pe/g0OZmU1wS9Xt0whwdnL1aMlMbC
xmj3nMbsLOxkXuftig6GI9Pew8sMc+juCpvrXZdF+K/LmVF6Z5GzL4RfcOdX
FE3ls/M2zuKFw/uf1qF2RD8xc/JtySwkP5R0BnEGEWtFHbnBhVmcu5n8N5ta
j1t2sP15mTmLwom+883N0eTu+3QBo5hZjOrS9pyuTCL7J5LC9fxnkazScXkk
Jg533uF31ldqvl2WTGovQlGVvqXROXAWPFYXWR9zZZII15+3uaxnEbuBrpBm
nyvYFmeOfHoyC6dLfexbmyxI+fMC2ljXWaT0uhT1ns4lKi3PVFbuz2JeoXJw
35UAcsCu4PrgrVkMbxdhYmSKIumO2/zrZGYxqVXxLrQ/keiTjXZl52ZxtTRJ
ScAtHupRv74dOT8Lw+BGjlBh6nl3qDSQ5KeuV2VpQIhUOM5cK5vJ45xFv9D8
9pMFHjC6PCpqv3kWNGGOH13v6hHXybifLwVn4XVahVEvN4copOzuuboygw/f
U1Tv+vkS5Qp5Cvf4DI4WFkutO/ST2D8SbBvpnIGJvYtO82oCGRrLld/zZwYn
5ETi/K+nkz18t7cL1szg4cbwVY/nCUjryUwqoswgccdJ/huskQh2MrppkDCD
Z31Pu3c98KbuZ9WiVcgMrGdYG1+aXsMeJdHgK0Uz4L7usk7mRg6RZxlj9vw2
g4BeU4XkGE/Sfthxm9LHGXgLnQv2vBRB/jS6nN30egYb7Qxj2zkSiLSwsBSH
8QySbWPiDB6mEebzYssfHs3AZiKYb496IublHrHv0JiBreytwwerfsJB1et5
lNwMtT/on5Vq8EM+vU8VH2YQOzTSJC/0BAGOL3s4tajzo6u4fSCDkMOKr76E
npzBuGB9Po2YO7mWkMNnd2AGFS67vhe9DSPzOacL/tsxA0+/1V/WQvFE/auR
k8CmGTRs1Rc1s08lT+J9L7XTzcDV3OtO9PkknLqpMnt/Zhq2XeXFTJ+j8Glj
h95ozzQyhSPyZYMC0BYWUjO+OI3R2yyiftR+47+zHb5VjdNgefbQuHbwDYiW
rkDS72kcOBD+fFeVM6GwO1ilZE+jzJbZqbUohJx75heVHDeN0L2hg9uU44jl
fVYjqR/TKLQpbHwWkkJan9+0OvV9GoOPLY4L7U6GmoSwzOWv0/gSZrQnXzYG
+heqe9StpxEe68QZrB6E3GhzzTK3aRgaKswwzWWREUW+eVHTaah9T0pl2meP
v7SWr7kfTCNWt+bvqyOfyQsFUZZMtWk8oHN0LOMIJvIV8V6q16j5X2QJZ5nE
kg+CS1fpL04jJ3iXm11eMileqM+zOjsNBiXbXJ+lZKw/M9PIzT+Nbjo1I17b
WCDBezl/1zS+/1wOLWcJxtajsbO/jk2jTzj79PvtWYQICioFM0/DaVJz72ie
I1or1k7Y01DxTVaIv8uyJztCH2+jTE6B8cSE04RuEKlj/71xqXsKI6Ti7Cbu
GLLM+WiptH4K/JrKL+I7k8j7wMngoqopCNnd3V/VlIJaznvzvylTkL3itXJd
Mw7XhmrsXIqnoLbq8X3vWWp/kKdr1JQ4BWWaqUtbykNw1pXjRHDYFDJzUrtO
FDqDQ+6YzxPvKXiK9qUUcluTjHVKzpmOU3hVRB/wJTWAjGYNv6ezotoVTpSL
GkSR2sTH4gUmU1iKrffspE8iJQ2WwowGUzhOb3Q6MzkVcv0UWnONKQwXpzkJ
X4xH+RPe56/vT8G0esPlIbUMMvm27NTQ9Sm4nV5+UWQfBtc66+agS1PQ6HW2
VT/oDlHLlpt3habQ3qEZqs5iStTGVwJTD1HxKDirPOL6TmhPqTazcE4h552q
7lzaTzJRWxSdxziFqL0/ft0+mkiucyinGS1PIr3/4ZE1y3QSxnyV/grtFKY9
v9jKuqQh+pRu6MrMJHIUDTyTdyZg62xEdlb/JPJ7nRXDLkYgtjyLstA8ifEW
0+2fkzwhc4jv1blKqj9n+DDtTkVyK+pws1juJMQzxS1XbL2JlESV0OWESQj5
/NrWthhBDpPnhg3Bk1B5JPSp9HoCOXlUKFPbYxLvLqY3PQlII2bNP4698Z0E
e8s9Dy3DdHxbpZ+w/joJx7AX5/MnE6DDW2jy2ZaKv2y3TPBEJJitn61dN6f6
21NYN4j7YknIjHebwSR4ZDdsFG7WQd4qThfemYTvI/s+2XEPMql84qa5/CRO
3uNpjhALJ1cfbnk6JjaJIo2XxdFP44nXrtwH905MIvb1BOV2YSrZfMP/fIzw
JETeR1oPS2Yg+MjfgTq+SZxKP/3VrSYRvday5nS7J/HxQi5rEfmFoo5PMRVb
JzEf9UH9zD9/9J0/4etDS82nJiBJGXkBL66GFKuZCbx6eNRY6T9XIrBaWaDZ
N4EjtNtjcl+FktqSNxE9jRM4F2jhP+weR87XpghqlU5A++dARcVICtFp6JD5
WzGBzuLBdzVcmdR7QYfxAGUCDmJ1jDmxSfgnWDz/PGkCi+u4sgM+RmOPMrOm
XMQEWM5Ffx1MD0R26H6//X4TqBLjni2PeIuT2ZoGol8nUJxpdKQ+5CtZX8W9
8brNBAIVrjzjyQ4mPQ823G1/OgHnrJTIivRYsnWJc/qhzgQuSZlV9W9PIeHj
aa2rehPwNtslvDieCcY1mwMn70xg6p5nz6lPyeiT52w2uj4Bqaw7BZsOxuKG
M6V15dIEMk1qNRae/YBF3th6Z+EJtMd8X5N79RE9vtJ7t/BNUPurMMmX5R9I
E8fpqve7JkB/QNfdh/4HYR5UcLJjmoDKkk9NVH4M8XvXcer56jg6PR7szb2U
TB6eKODiXkfNvyBjcDU/C/nRMkdEpsdBCWq4Uqadgpfbk/Zp9lH1jVr/+tbH
YT78jnXU33F4PJ4avCYQgvU5e5RWy8exc4hRv8PfCYYWVqpdOeNwkhGJYKWz
JU2nBeLzE8axjzM/pFIpkLwq3eIuGDqO+3u2X3m6I5qMaocVf/IcR96x8AmT
x0nEa7+CnZD3OGY0+HTD3bNxorfxNsVxHAEWGa4PTqbiyBpf5h2rcSRYqn5M
LYuD/uq9AL6n4yg1v62uRAmF9Bt50wWdcRge2/w9qM4VP/kYT9qqjWP8VsxO
V87nxPvl9xZ6uXGIJwlQjmr7kzKvQ/EaGEeLnkX6U7NfxCRz7VTYqXHo1QzS
b/NLJHevVItJnR7HNi+N/xZ0CLo1XN9LHxyHemBE8MhyKmgKA6WVd4xj9YWX
lzG1XjEM5X8YtGkc9VotX3beCkfNsNDSwNwYAm4pjRTTfEPwpl0XpdvHwFP/
/oiotw4JuZb5yKt4DBSxNwNH+X2J98Puy7xxY9ilwlDk2xBJwoJUPFy8xmDS
I0xPKU8gJQozTn6eY9i4boKwcOagv+ki/03LMYyMyxdkFqZBhFn65v7/xlBv
Wn29TT0BZir9j+klxtDbZGzwvjUCEslbgyYPj6Fx5hL5tdEbrQYiTNksY7CW
KQtlFhHHF0M9VuuFUTBeH9GmZ/Ai4pa99qRrFCJf0pd7qPVI5nE6/p7yUVyl
+TPgRZNAJo7c9QwqHUWD01cB2zc52HTII2vLr1GsnDm7XexLOlQHnH9++zyK
/vUKdvN7EvG4KOptwdNRNAbwashq/YRUs1r0suoo5M4ofTzD4Ae3A3cCRS+N
IudQagetoSHoPxwve3xkFIvjimtCo+5Ea90Cz8PtVDxVNt9KYsMIrWpNkdT6
UbSqDK8lC8eTgoSud57LI/CM7TGjdOYgykc7zbt1BHe/Hf4UpJiBy1doRtKz
R5B990iuSGsi7N51MUn9GIE0X6b+88Ff2MZl9Kzp/QjWn35+yYAzAEx/Lnw/
ZzICHvtoTi8PCyjuPmn3RY0ar32i+seAC2GuHNwed2UEz7+Y1+49HEq6Oh/b
JJ0ZwbdksTdnjOII3bWqRKtjI5g2tPhIkcrFxcNu3VxbRxD7os7Uli0T19op
fxrGhlF/y3fnpGcSAuh0THNrh8GkUd/+7nE0utMHnianDMNXfXJwc2Qg6rQE
/zvvP4wAKfr5iAdvsem/f84p9sN42EcXKdf2lUgvtOnRvxzGKPvbAe+gYOIT
Xj99+tEwQsryr50JiyXJR3ZvV9UcBv8ZM0nTsFy8DjLZ+VZ8GNGphc/r2jJR
9ylnrpJnGPP3g8qOmyTj0v28J9rrhxGho3P63sZYvO3fv0bXPYTQu+obJvAD
d9pehIwXD+GZwkaVD78cUJo21Ponagj97qEbdX46kEtRYhFtoUMoGZrYkLTz
B8m603qR4j+EjLM2shFFMeQ376vNe12GUPHSdySfgYKC+oA7rU+GIHZwQlUr
Mgvbc02FshWHEFe0vC9QMgVPuJVUaE4O4Zi/da5vfSyuSpz3uMkyhC4ms3+T
lcFY78reGTk5iI2m8oeP//2KrVGekqt1g6BjOxuv6fSWjEnq7C6k6k7DS5fC
3QKJgnLUyD2qXuPCv3hfOppsKYl4WZ83CF/BgPCwBxQM5F4Jsv8xCOmi1Het
Ztmw1vnEo/52EH8Uzo1Wcqfir3OraL3mIJiCou1smuLw9aP/6QdigxBtfmLH
xx8GAVr2yUiWQbxgz3jRUuyGl+dtsGXTIM7VPmKrL/1Fpjk9RA7PDkDY5tZ1
FgF/wvmKQW25cwCxPkvqj5hNCfNybcXrmQHwSEyvMeZT0C3R17DvzwASG1ju
3hIj2Ort7z6YOID4QZGP01OpIDejKP5OA2Dz5PKRaoqH68e+7EeGA5gXyDAe
tYyAZoFRaNnFAWzdLyErf+snuT7wxjvo2AB4d2/WD3L3wnRb1JjTjgFIO//F
rfM+xO2Q9p358X7Q7NKI+snOB90iuYFthwewJ/6/V//25iFQW+OeEuMAjK8J
J6ZsyoFHsate/Eg/pBvIJtveNFR3cAQ3VvUjlI/Rk4YuEYsZriVbE/uxaqCk
Wn3pF2w/0wykfunHY8Pyj4zJgUj/lrjusX4/nJKOSS0FO+Kij+6Sz9N+6Hb2
KK/2RJAg7U83rOX6wTlrO23n60sML5ab7zrUj5zfulcWiRlp8nku7KXWD5aW
qJ2sFnl4+Fp271P045hlqGT00xy89+Nv1Kf631iiGM/9ScerwMamFZZ+aBQ/
4qkRSEK8dk2p71If2KpXSy+sj0HHpzvWfqN9UH+qb13uG4qk5/qGPh19SF71
2Ghn5IujoYWlDml9iA1/U7T9qh3oc54pvQrrg29Mq8fp1+FEamdHkp9NH2Qv
Hua0YfxOWNo2O9nf6QPTeW2lNBF7oizYac30sQ9tQTuuOtfk4Rjbtw/0Zn04
xHR9Sq8kB+/keMdi5Prg9ty+0TfRC117bYa5NPtwtNqGqcEqA86NXEUpMn3g
l91j3aIZiisvtnreV6Lin1fc3ZKWBP4gwR1Rkn3IOCgj7tQbg4/cT8IbN/XB
qVJK6G3Kc6w/Sxv9uKUXhxabw09yhZGhCs3MgcpemEX/bXX28CM94ycnJPN6
ccCCJ/vguANxb/hY05XSi8ivyaddpj3gsPOjYW9QL2x/x+bo84SCLdbGK/dz
LwaT7C6H34+FZJWqZ4FrLwxs1ab+SSaj1OxGyefIXliYn/xrtCcXvP6e8o8z
erHiZqknz5+PJMWiewVevSiTj71gfCgTCrsKp4Zv9SJHZNe5svm7MDmuP8sr
0It/GvZnDyZ/JmoXFqtu7OnF6y0FtCqCfqSv+I/1U9ZeXDTasVUiJ4Rs8bmu
cbW/B/2MKrwP4pww0JfRavmnh8ovRd5H7sGQtduTaknpwdETypmXH8biSKaA
/6PiHhhzWipNvk8G7dDNc29ae3C4bNprnX4ujqb8PqhS0QNbkSfZvaGZYDZI
1Mka7kHy+gMHT7/Jh/SOQG+RoB7kFAYrv67QIgekLu+9+6wH1IYz+ukHd7Kx
5/TqB+kejFU5z4QZBpNnKTkJGzl7MFyt8CM72w604bMFsht7cGMrGzc77Q/8
9RMelZvrxuJm9zNCBrEwD11nx7XSjQcsn1jUipIxtOpi2LW+B7tibVIj92fB
PZPNV5ulB6Ic9sKJcbk4YOWouMjdA9ND76+dqM5H1j/jMzKl3Qgar3S0av1E
xnzer8VZduPL8zTHOJ4fhHXOVyaYtxstSveTHvZ+gkWbSGsQTzdibkXHCzwK
hsCtvprLfN2w4PW4seFGCkyz+pM/iXfDgE7tg9hKLj7IDnAynerGJeG0gsKY
LMRenqh6vqcbq6HBuQYjsajnomvcf6MbNy++LD7JW4DEkyE/cwa6kLn3doQk
5R1pzWTnGY3tAn/gyaDYlkDCZexCF2ZCtfdqHE+UpiBoIvr3Ma0u8NBz74k6
m40zHmMOotZdEPRq6TrwpABCIVYXDG52IVX/11OFmhQw7uawjJDqghUdeySb
YRwSzTfsohXpwpY75i/KikOQWvNaQOZoF/5ZqtpcNnZGpd5bXplNXYjd5pfb
6WdFKON6yxd6O8Euv/15V0AA2eL0lfNiXCf+3dtfNZNVgIgRhjOd/p2wnrkh
EONMQbL/vumQL53Y/D7jzmhJNt7Ul/MtWXVio4TpxHetVHSeX5259aQTfL08
D3Tn42C9mlHIr92JD+V2OsmLoYiROvZvSLkTEkpDaZ82uMF5QUzrxrlOzI+w
yu0PNiMwrGIK4OrEx4WXu8Wbv5OGZqGDRzs7UM06MeO0sRC7d7HNbKnswMeS
Sjz8S8GcKU0ge2YHPshLmLmqEsx9knni8KsDasWnhS8Pp2ITm07rBr8ONFsM
ZqxYxSPEWsFS9XMH/KPSzi/yhsOAJkPM+3UH1rE96z3wwQMB3/YrPNDrAM8U
/3P+QT2ya3dEyHbFDrxhs4rStfclrMeTlOm3deAcphg7FQrBvO0+rdJaO2yc
Qw578+TBagixlKF2/HdB8VxMG0HUR4/yx83tsG9iGzF/kgaaqqS3B363Q3pI
ZPjS+gQccrviM53Rju0mbs9GTkZg87OiiqRf7aj/NfC7IN0TQZUH0zO82tGe
1+L4QVmGGBa+5g6yb0fWOSa3Vglv8vD2K/kyiXZcVD5qVedRiAfP7kvbH2+H
mI7DyAOdPByq6Dv0kKsdr/kSKl+ezMHjeLF3ioztGDnJ/jF/Ig2tpY+0Pk+2
wfcLHc9XqwQErto8Pf2nDdEmaSpjZyKRK2/yISOlDfJtPNmvmrwRbsdTKOHZ
BpbwQNNOGRXsbqtxefuiDWyrEZqy7J7E9G+R/kL/PzT0bv1w828hWE2Cdw/l
/oO3XIn2ZHAezN7YaAj6/ENdc88TJuMcpHFufcxq8Y9aNzhXcz5Ox+YOVm/m
2/+wGHFvC9NKAjLWV2fqXPiH9kLW7iSRn+BuM9X5vvcfJNviD9mP+sLiZffe
oXX/MC6grTrX/wjVDvTso12t0GMek1ecdyfSRwd1TlxtBcOX8EJZriLcHBjv
+nmgFUp/hk/Mduahh9F47uVaC97tb7HeGZmDYoljTi/bWiB6puiLZk86BNdv
GnEmLTibN8T00iwR8w+3qv340YL4mspq5VO/IJ/cmvLtfQtEtLIrTox9R5DC
pmsJj1qwkdt5r/kGc1xQjdK1vdECXyOrte/jrkRmXrBK9GczHKX4cgJvF0FH
543blQ/N4IsUZg7nzgd9muJKiG4ztl7dbb2ng9pvtG+rDJVuhsZH2XbGOxmQ
dOU5l3u4Gevpu0wzJhOxvYUr221zM2xh6et0OApc5/87Jj/2FzSBIZ7P9QLg
y8h93vjPX2QGO6nERL6Gj6y8rETGX+gQ6Yi2FWfyrOUp3S6mv2BYu6Ir5V6E
HN6kqwVDTRjUOnI28lY+HsWesqP8bkJsqPnNlxy5YFByECiLasJfT55Pd35n
4L/ULtPxr00o9OibDDBIgl6Xjp6LaRPWpVlwrrJGg5fTQ5pLtQmuzBLRpnKB
yM6tLZFHEywuiPA7vrKF8oCE2vHDTXCwEthD4XEi2oxq0r8NG3Fon67Znooi
WL+7FnFVoRGfn7HuZHfJh2JFy9gOoUbsPm/rbXIrF4tVm2vlORohJh66qiuZ
CQcJidag2QZcPRfslNGSBLdPGXNCzQ1oF7jiG0mtdw4cukIbQxpgKRpc5CAb
BPUtm9JCIhpwWFlpV/RFe/C6fHsi69qA+1r9cxMJjqRb+c/YjfJ6PBM3ebad
rhgftG8URSbWQ+MU/d/g3/lYJsveCr71uFPAmO3hkosjfHtXcl7VQ3Il6gJJ
yYTAVTrLW3frcXLJOIFDNhnuNBaq7Zfr0dLo9bq8LwavVAq3KvPVg53ZMoX5
/A+MM7xT42anjmffuSeoygHcQeY7nNb+4HUo/alnyg5k73fagyGCf6BV6bBj
+9li6v/TW8eC4w8uSUtWiq7mw3JgB7PfSh22NLTuzM7PRTDjZP7rtjocSpQb
+7YzCzVfy/Xf5tYhTlvXwig0GVGJm43kI+sQRCQNA27EIl+97POySx18u53y
To79wJGWa9t+WdXhw8L+K3TVjtDkMOOjN6zDELTPvDxgTyLY9Y3LPtciOs5W
jF6vGEtfBA8dNq9FybKWc5ZgAcjfD1K1/9Ui/FqGRcUUdX0uLzWevFyLfu0f
dJdNs/DkaPi15IO1GApkzndfScYeq4Ko36y1aK+caTsbEgsTrg5aykoN+LZW
twt8CwZP3PyM5lAN2ks4rngEfAXb1Bh/ZGMNLo/KHzU/+JZkaL3+QxmphvJz
++2VrsVoCs4sY6qvxsX1zHs2qRWA5T631q/saoRItuZ4cFFwrr9d6U9INR6M
+w7PFmRh3RTO8Xym2msrMx/cTIHJMY5T6yyqcebept7rM7G48Pbl77wH1XDq
t1ktFwjB12Y1GzmVakSekr3CvdMZx+RebrWSqkZClvLhfjVrMtbhM+EgX4U3
P/M81LKKsSGKL6ZKuAo+6F/dYlUA/yNms0/3UPXNqZNs4hT8jC0nJpuqYMXy
88kBtmwYj13ewjlQiT4LWdrcoBTwHb0n55RfiQlPO/4BsTgIvfXdUOZfiVcV
+5QNEkIwOrLnVq5tJRqy6t4MS7kggFHxFb1uJfg2Naf5WFuSnb3f3l1UL0dJ
/h7Vj13FcOD2C5EWLIdHt/kL2+ACbKOj0WBcV44o9j9hFB0KlpwHFj82lyF3
B22E6n/ZGGG6sE46uQynXtAdJBMpcLOx8JN2L4Ohudfsli9xOHhyTwLjszLQ
H/tyckIxFFrePOk71MvA/75o9fprVxwv8PU0RRnW/3R4di/dnBzamzy4gbMU
6dJDdtfoS/B6OZThx2gJ7iikabwtLMBUdKnWuoISWO1LHF55R0H/xpnk3cEl
uCFeZhz6IxsKs8duPnlbgh2GuuqtIqmoK7p9gP1BCXal7jx6qz4Osn/b117I
lKBBZdQtrTMUoq+tOVJPlkA57bjSCS83MJ/9u3RpVwmUpAxOCN9/SvJHi0/r
NRTCLP54i+3BEvjZXnTTjitEmd0WCZO+Anx7traBx7EQh5P49/uGU3BWa+be
N8NCSDKMKUx3ZiNrdWPCdflCxAqXBx8zTUWevh7bsHAhJhmuV7LuiIfjy4x0
qT2FuObmF734NAwhC5OaIoyF4GE4EfQg1B2nbm36/XymAEoWD2c+zRqSqye0
X+i65yE1tlt5x6USKH440VJrmocHd87LZNAVwqsqdJX2Zh6csi45eBdRsOeM
UdScUB5YXrMuz+8iWD+m9/X0jjxkhej1C4akQr/uAlvrhjycKooNfKcQj2v7
BXrPT1Ngey8kIXs6DIkDv1+v76JAwsTs5VcPDyTRPO1jqaagJTLC5BnrA7L2
ylhhWSkH3tGXIkbVSuCz4JldJ5QDFY+9abq7C5GwOi73ZEcOZqQ9V9jaKDhI
4+F+ZJngqLfswuQNgl6dqz30pQQSFcn8B9tTMSQRy14UTTCQOWAu5xCP07+H
7w+6EGwRp/9SrhWOTY8lzok/J3jSfaVvq/Y3BDvS7jygTsB8/1Ea4dIk5vev
6+nypMOFffHrjCGVP0VtvFuH0lBsonRF9EQhtNTjfK+npMGcdWY0eZICroW8
on1f0mBrky0m9ppgyE6M/YtuGrpVxbebbkvD1r1OiguKafBo3vlULz0eWw03
B5OLabgR5MnuTsLR9T0siZU/DbyKVfF9LJ6wO8P+q58tDRcMPvtUCakQxiRJ
8Z3eCfDjfxqx7XUJHiloaks8SUCaTWDVOalCGKvz79h9NQENU7fN7JnyIDvt
7CDAnwD5ia1xIikES4YOnzo3JqDmv3H17JtpyNsQY1q+Eg9OZZa9MjPx0P/M
pkU3GQ+/XgYajSMRsNmbXr2uPR56fb3mepme8KTzUtEvi4fGm8IjG27IEaZf
+Wf3HooEt4DR0lOHEpgt7OF0GIlArH0Ik6xKIYoCBQeep0agW0+gzpg3D5Vr
WaO/3kfge6Pcxw0DBE0fW/aXq0ZAvzx0IP9TGo73qs8tKkWgqe9Uwtxhav1q
T8OyTz4CL3j8VOzeRYDvm3hE97EIXG7rPH9fxguq/54OXmOOgMWfzBnGMZD5
tOgdfYLeyNi+LmefC/Uc71TvnB7ywsmYsp8PNAtR4zAy+i/FCx9vVzvxC+bh
1S9zI6b3XlisOPLHdIHg/PnvjumqXhB0qWsK/ZaGhy9G8q1vesG4lZfr06kE
6ISrD8TKe+GpH605rVcEdR8mZIxOeKE8NorR3cYLQ4kpsakbvMDoNzTjf1eQ
mJiM9u6Pzrng4fV/UoLnTnFnaLanXNB98H9SiOXyyeBw54gLp/8neVig5Xlh
KuJ3geZ/koOYF6duVSwwZHr/Lz4NQvKs20vV/TL/v38CJtsF76iGRGT+z0zF
M6t62kRsd0qm2///AG8XHwT55GQG0nyaVFTwzfx/v67Edg==
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNlUtIVVEUhs8+PZ2EESrRwErsItHAQuQmYQ5KRCKyKEREehCU6EUkJyF2
kXAUKhcJR2ZyE2kU0kMuTaKsLGsSRKZYUZMIRCKaRLR+1ifdwc9ae5/zfYru
vc6uc6mmzjiKotuW9ZZay0FLmWWPZYMlWDZaCizP7eUPlo+Wl5Zly2fLW8u8
5SgOsZWWrTjEFuHdSq937sfulOuhZQmnXK/4OUv0eqcp8p8hdx2/V6GlmJ8x
EbtTriy/12NLDufZyB1iT8HutiRwDMfuEJuBvWuZwpGK3CH2AmzSchhHX+wO
sWnYUctNHNcid4jtgT1pOY2jI3aH2BTsgOU6jsHIHWIHYC9aLuNoid0hthX2
iqUbx1jkDrGjsFctvTgaYneIbYQ9r78bjnuRO8ROwd6wDOGojt0hNgl7wnIc
x5PIHWJzsLf0f8NRHrtDbAK21nIIx7vIHWLnYad1jnBsi90htgh2n2Uvjm+R
O8Quwz7TucaxLnaH2Bh2h2U7jt+RO8Suwr63LOD4Fdwh9mdwtsCyCcfm4A6x
64Kz3y0/cCwHd4j9FJz9bXUl4AjuEFsUnP1j+YvjaXCH2Nng7FfLFxwVwR1i
E8HZLVYLgzvuBXeInYZ9bXmDowaH2GRwdqelDMdYcIfYcdgHlhkcx3CIbYQ9
YKnCcQOH2EHYSUsWRxsOsa2wRyz1OK7iENsLO2LJ4OjCITYFe8bSjOMSDrHt
rNt5fgZXvyWNsx9nir2XzKoZZtAr5k6OvUrmnuZfKbWA2VPKXKqk308tZrbs
Z+7U0ddTE8yOeubKKfoW6uG12cDcuEDfST3N3e9kLvTQp6mXudtp7v0AfYba
y93NcK9H6e9Qh7ibd7i3U/SPqBPcvUdU3aM51jnqXN6dnWe9RH3O3VniXi3T
r1AXuBsr3LlV+hC8/uD+BO6F3lG/japnhawTvKO+nFrI2S3nXCfoq6llnM1q
zm2SvoFaxdlr4Fw20rdQ6zl/LZyzVvoOajNntIMzmKLvo7ZznrXOci51Fiep
Ob5Nk1R9Z0ZYZ6kjed+0DOt+6k2+Lf1UfSe6WKepXXyTuvkOtOXtdbFu5Znm
/LG8vTbWa9+URtY11OPM9hqq5nQF6yS1gm/CXuZwSd5eBesinmnObsjbK2Ed
80xzdDX831PVem1m/+T5YvB3NTc1+xbYX6HX81kY9S94T3Nujnfm2F9kPQ2j
vfvB5+Q0/UTwuTdOP8z/fZC+j/PRxzpDhnk/SybwzVBf8Hto/Q+bbDi3
      "]]]}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.6932513463733296`*^9, 3.693251453467455*^9, 
  3.6932515098836823`*^9, 3.693258117847977*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"ComputeSol", "[", 
       RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
       "Simplify"}], "//", "Chop"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"stress", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ComputeStress", "[", 
        RowBox[{
         RowBox[{"(", "dsols", ")"}], ",", "e", ",", "0.2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.693235428018648*^9, 3.693235434088995*^9}, {
   3.693236455268403*^9, 3.6932364571055083`*^9}, {3.693236876198479*^9, 
   3.693236924255228*^9}, 3.693237040093854*^9, {3.6932437635145874`*^9, 
   3.6932437665367603`*^9}, {3.693250101950153*^9, 3.6932501033802347`*^9}, {
   3.6932581207461433`*^9, 3.693258124105335*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "Sol"}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"sollists", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   RowBox[{"refine", "=", "0.5"}], ";", "\[IndentingNewLine]", 
   RowBox[{"v", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xi", ",", "eta"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xi", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"eta", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sollists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sol", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"sols", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Sol", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sollist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "1"}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "655"}], ",", "655"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "2"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "15"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "109"}], ",", "109"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", "1000", "}"}]}]}], "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslists", "=", 
      RowBox[{"{", "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sx", "=", "3"}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "[", "stress", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yy", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Stress", "[", 
        RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"stress", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xi", "\[Rule]", "xii"}], ",", 
          RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Stress", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stresslist", "=", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"lp", "=", 
    RowBox[{"ListContourPlot", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", "15"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "83"}], ",", "13"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", "1000", "}"}]}]}], "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.693147768298156*^9, 3.6931477886013165`*^9}, {
   3.6931478309917417`*^9, 3.6931478405672894`*^9}, {3.693147914065493*^9, 
   3.693147930688444*^9}, {3.693148177536563*^9, 3.693148187558136*^9}, {
   3.693148304158805*^9, 3.693148327461138*^9}, {3.6931484619338293`*^9, 
   3.693148476868684*^9}, {3.6932117347968535`*^9, 3.6932117391471024`*^9}, {
   3.6932300380513597`*^9, 3.6932300605376453`*^9}, {3.6932301488906994`*^9, 
   3.6932301499847617`*^9}, {3.69323080034696*^9, 3.6932308101225195`*^9}, {
   3.693235372429468*^9, 3.693235372732486*^9}, {3.693235436024106*^9, 
   3.6932354401393414`*^9}, {3.6932364508441505`*^9, 
   3.6932365936713195`*^9}, {3.693236626653206*^9, 3.6932366623992505`*^9}, {
   3.693236702379537*^9, 3.6932367597068167`*^9}, {3.6932367966909313`*^9, 
   3.6932368329780073`*^9}, {3.693237004646826*^9, 3.6932370307123165`*^9}, {
   3.693237100761324*^9, 3.6932371033364706`*^9}, {3.6932384674004908`*^9, 
   3.693238470380661*^9}, {3.6932385098439183`*^9, 3.693238569548333*^9}, {
   3.69324376863988*^9, 3.693243772370094*^9}, {3.693250104791315*^9, 
   3.693250134623021*^9}, 3.693250174791319*^9, 3.6932506355716743`*^9, 
   3.6932508275446544`*^9, {3.6932508714421654`*^9, 3.6932508908102727`*^9}, {
   3.6932509255222583`*^9, 3.6932509549359407`*^9}, {3.6932511010312967`*^9, 
   3.693251122855545*^9}, {3.6932511765676174`*^9, 3.6932511963407483`*^9}, {
   3.6932515183391657`*^9, 3.693251540170414*^9}, {3.6932516547809696`*^9, 
   3.6932516923391175`*^9}, {3.6932581290916204`*^9, 3.6932581350099587`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"tol", "=", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"radius", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ydir", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"coordy", "=", "8"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
     "order"}], "]"}]}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.693258553830914*^9, 3.693258586662792*^9}, {
  3.6932696855794487`*^9, 3.693269692994873*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3125`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.625`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.625`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.9375`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.25`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.25`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5625`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.875`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.875`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.1875`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.5`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.8125`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.125`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.125`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.4375`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.75`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.75`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.0625`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.375`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.375`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.6875`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "8.`"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "12", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "28", ",", "38"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "51", ",", "66"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "81", ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"100", ",", "119", ",", "142"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"142", ",", "165", ",", "187"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"187", ",", "206", ",", "227"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"227", ",", "250", ",", "279"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"279", ",", "317", ",", "391"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"391", ",", "633", ",", "702"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"702", ",", "729", ",", "754"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"754", ",", "776", ",", "801"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.693258589495954*^9, 3.6932696949569855`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "sol", "]"}]], "Input",
 CellChangeTimes->{{3.6932516155357246`*^9, 3.6932516206570177`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.00021621848468290585`"}]], "Output",
 CellChangeTimes->{3.6932516211950483`*^9, 3.693258131281746*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"tol", "=", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"radius", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"ydir", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"coordy", "=", "8"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
     "order"}], "]"}]}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{3.6932669429025764`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.147058824`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.294117647`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.294117647`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.441176471`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.588235294`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.588235294`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.735294118`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.882352941`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.882352941`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.02941176`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.17647059`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.17647059`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.32352941`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.47058824`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.47058824`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.61764706`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.76470588`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.76470588`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.91176471`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05882353`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.05882353`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.20588235`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.35294118`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.35294118`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.64705882`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.64705882`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.79411765`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.94117647`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.94117647`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.08823529`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.23529412`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.23529412`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.38235294`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.52941176`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.52941176`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.67647059`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.82352941`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.82352941`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.97058824`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.11764706`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.11764706`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.26470588`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.41176471`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.41176471`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.55882353`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.70588235`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.70588235`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.85294118`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.15`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.45`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.75`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.05`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.35`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.65`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.95`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.25`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.55`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.85`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "8.`"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "11", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "27", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "48", ",", "62"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"62", ",", "77", ",", "94"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"94", ",", "114", ",", "133"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"133", ",", "154", ",", "178"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"178", ",", "203", ",", "231"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"231", ",", "257", ",", "287"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"287", ",", "318", ",", "352"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"352", ",", "386", ",", "420"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"420", ",", "458", ",", "497"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"497", ",", "540", ",", "581"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"581", ",", "628", ",", "668"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"668", ",", "705", ",", "737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"737", ",", "765", ",", "794"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"794", ",", "824", ",", "858"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"858", ",", "891", ",", "926"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"926", ",", "960", ",", "1001"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1001", ",", "1049", ",", "1106"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1106", ",", "1174", ",", "1269"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1269", ",", "1450", ",", "1856"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1856", ",", "1988", ",", "2075"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2075", ",", "2140", ",", "2196"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2196", ",", "2246", ",", "2297"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2297", ",", "2339", ",", "2394"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2394", ",", "2445", ",", "2500"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6932669436606197`*^9, 3.693270577173445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6932667714507704`*^9, 3.6932667887517595`*^9}}],

Cell[BoxData[
 RowBox[{"-", "600.`"}]], "Output",
 CellChangeTimes->{3.6932667892187867`*^9, 3.69326703544287*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"700", "/", "200."}]], "Input",
 CellChangeTimes->{{3.693266927856716*^9, 3.693266929589815*^9}}],

Cell[BoxData["3.5`"], "Output",
 CellChangeTimes->{3.693266929953836*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6932667921659555`*^9, 3.69326679347903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "vecids", "]"}]], "Input",
 CellChangeTimes->{{3.693267148078312*^9, 3.693267160020995*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.6932671543266697`*^9, 3.6932671608820443`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"topol", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\lshapeels.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], 
       "]"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodesAll", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
lshapenodes.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodes", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"N", "[", 
      RowBox[{"nnodesAll", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"allcoords", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"nnodes", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"topol", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"edges", " ", "are", " ", "straight"}], "*)"}]}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"meshVis1", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FaceForm", "[", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"nnodes", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"topol", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nodeVis", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
         "nnodes"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVis1", ",", "nodeVis", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{"1", "000"}]], "}"}]}]}], "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"order", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"forcing", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"young", " ", "=", 
    RowBox[{"3", " ", 
     RowBox[{"10", "^", "7"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"KN", "/", "m2"}], "*)"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nu", "=", "0.3"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mu", "=", 
    RowBox[{"young", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lambda", "=", 
    RowBox[{"young", " ", 
     RowBox[{"nu", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "nu"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"Assemble", "[", 
     RowBox[{"allcoords", ",", "topol", ",", "order", ",", "forcing"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "159", ",", "547", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "893", ",", "547", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"ContributeLineDirichlet", "[", 
     RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "893", ",", "943", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    StyleBox[
     RowBox[{"tol", "=", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"radius", "=", "0."}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"ydir", "=", "2"}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"coordy", "=", "8"}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
      RowBox[{"ComputeBoundaryTopol", "[", 
       RowBox[{
       "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
        "order"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"]}], 
   StyleBox[
    StyleBox[
     RowBox[{"*", ")"}]],
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecids", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"227", ",", "250", ",", "279"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"279", ",", "317", ",", "391"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"391", ",", "633", ",", "702"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"702", ",", "729", ",", "754"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"754", ",", "776", ",", "801"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["newnodes",
    FontWeight->"Bold"], 
   StyleBox["=",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["{",
     FontWeight->"Bold"], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "8.`"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"po", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"po", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "c"}], ")"}]}]}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FE", "=", 
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"FE", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"KE", ",", "FE", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"scale", "=", "7500"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"deformed", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
       RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"tabdeformed", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"deformed", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"deformed", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], 
      "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"meshVisDef", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"{", 
          RowBox[{"LightRed", ",", 
           RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
        RowBox[{"GraphicsComplex", "[", 
         RowBox[{"tabdeformed", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"topol", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVisDef", ",", "meshVis1", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.693256934816312*^9, 3.693256978973837*^9}, {
   3.693257094673455*^9, 3.693257131757576*^9}, {3.693257432241763*^9, 
   3.6932575150254974`*^9}, {3.693257589244743*^9, 3.693257591344863*^9}, {
   3.69325762188861*^9, 3.6932576765847387`*^9}, {3.6932580232925687`*^9, 
   3.6932580292049074`*^9}, {3.6932581567031994`*^9, 3.693258197204516*^9}, {
   3.693265230556636*^9, 3.69326523989117*^9}, {3.6932652913641143`*^9, 
   3.6932653145184383`*^9}, {3.6932653445571566`*^9, 3.6932653464202633`*^9}, 
   3.6932653814782686`*^9, {3.693265875432521*^9, 3.693265880329801*^9}, 
   3.6932664583248606`*^9, 3.6932669079385767`*^9, {3.693267010658452*^9, 
   3.693267013296603*^9}, 3.693267118785637*^9, 3.69326718352934*^9, {
   3.6932674177667375`*^9, 3.6932674255111804`*^9}, 3.6932675242938304`*^9, {
   3.6932688548069315`*^9, 3.6932688580671177`*^9}, {3.6932688918930526`*^9, 
   3.6932689805961266`*^9}, {3.6932690492610536`*^9, 3.693269067765112*^9}, 
   3.6932691817316303`*^9, {3.693269557009095*^9, 3.693269557856144*^9}, 
   3.6932696384087505`*^9, {3.6932697185073323`*^9, 3.6932697958367553`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1:eJxde3k8Fe37v33nzDlnzjk4h8pWlChKEXMVIWtUskQiLUKyJUukkkSWQpRE
EdpIdkplLSGpLEXIFlEoCvW7n+9T/D7P/HPMa2bu+1re1/t6X68ZSxwOmztx
sLGx3eNkY/vn93+PxfD3r/H6mALXDsk/5y3E3+v+O2qWfm59RcTxs39NbZOc
v996X6NrR4HEn/OP8/d/zz5v2p77ikjrutOjnSfx5/leIofCWvHmrSTEq3Oj
673EkGXEztv3JObXM1LZI7MllgXHNT0TtI+9IiJ5Cg49jGT9uT46v36y9P5D
jx9+JrqP27bpofX+vb+XaGgTyFM5ywJ1vYY3IYGfiSdzJfej7i6s/6D+akeB
KxN4m3Z23YZXxNiPg9/WHWD+uT45v/55DzaHT7KfCXb7m5LhoSy4ahXfatA8
QVCGr4YWv5GEfdCNnu8l5JeuIZU6MMH+RODduBsThMwbTWHPOwv7ZSQqx8ps
EQeViP7H2HAzsTbgzH0pHXE4qZg1YtYwQhScJ86dsmNC4yvdeP2DE8St+2Ph
H06yoIVpi+7vIartOpsXE+J/1vsxb9+apyX3mqunicG9w2Sz15LgHOq9Oz1y
mrCeU5BOy5YALTns+IziBFHy5BuviTUTXFLOkY47jRDbVDsPM9TF5+0TUXHb
EisjBqn7Ha57xTUTk8+2ugstFoOCd74zV2CakIl/8zY1iPXneg/R5qCSEMoU
g21Wl+5+GxsnnDVXC4ms+bver3n76ld0hVqXzhH6lIgrg68koXPv8qSLE1PE
2MqQiNTtTEiweiic7zNH8Hx9uv7lTQmwILutzp4dJo4Jv9yWTRObt+/fQxSO
MawdvzLmiKvHymUc/VkQUv/KZpVnM5FwzubYmRkGWJ6jWWTcmyKuyLjSwhXF
oXuD7a5Vnj3ESkbhuMgUA3QeNnaP5Y4T4kVuWANJDAKv6xYoFs8StxscsG8m
TJh7fmND1g52OL8+TlGk+Q++g9nhrz8kYfuXftXDxKK8d/sbvzBgUDnVz3w5
OzA9FWxYNyTgZe5vctGhKeJRP2eKB8+C/f/WEx3673SwHk6xQWxD95sH3iwI
Ptf70+LwLPFCMFOSR04cllAsaaNbm4lcUcpJjrd0aJDzke6JGCcwU473UZ8Y
f673ED8T+k0SmunQp0B/JF/JBnwKiebGekw4cKn2sGH0MFFpOeg/+ZwOu9OV
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
/K++/P+u/zn+H0e50+E=
     "], PolygonBox[CompressedData["
1:eJxNlX9oVWUYx885N8dMgtjmMszdxsql2O0KjRFettFoxhoNLKbTiXe1wuBy
r5l3ODTCce0yZ/3lfpThcOwOoTYZ/rUNogkbNkRcilTkH1owQwU1SMYyer68
n/D+8eV+z+d5zjnved/neW75e6ltycDzvF9MT5h80wrTSlOBKW0aMp02HSb2
tGk1Oe+So1grsXLTC+RUk6NYjFg1XjnxkOd9auo1HTA1hByTbzO9CJOvNXkw
+TLTYuCYfGBaCByTv2W/PwSOyV82jcHkJ03fwORHTT0w+QHTAZh8t+lDmHzK
tA0m326qg8k3maIw+ZjpWVOFaY1pFT5KLGJ6khzF/rLDuO87Jn/d9CtMfs40
C5MfN43B5AdNAzD5I6bPYPJ7Te/D5JtNb8Pkq0yvwuTLTM/D5AtMK2Hyd+0o
HniOyf9sug6TnzH9CJMfo67OmjLU0CQ5ip0gNolXznd2rmdN35pOm8pND2x/
HprWU0dfm7LUUC7k7lFuP7EcPsu935tmeIZ81tZ/zHdM/hlTKUz+d1vHDc8x
rWPE1Mc7NobcOvSs5cDFvjIdJaeKHMVWEDtm+picGnIUKyZ20LSbnCZyFKsg
9pHpTXJayVGsmlgrXjlF9LV6t9Rz3zJtmuKb1nsuR7ENxL40HSfndXIUqyfW
YfqAnA5y6mEV1PVL1HyEWq+BxeiNd2BN9E4HrJ3e2g9L0Xufw7rpzT7YAL17
BjZKb0/DJun9a7DLzIZ/YLeYHWtDjgXMli2wMmZPC6yW2bQP1kbdZWEPqa05
6qGfOlEtZMjrx+/j3JfJ/4l7VXcjvmOt9Il6Ie6556huEnnPyHCt9WTonU/I
P0FvZWFj9OIobIZenYXJq5d/g8mr1/+GFTALimBlzIpNsCpmyVZYM7OmDbaX
WZSGHWFW9cIGmWVDsHFm3RRsjlm4AJPXrLwNk9cs/Re2ijoshMX4b9LeNPCf
FMNH6RP9j4XpidXkRGFH6cvteXue4HoLMfVlXR7bzvVaYurLyjxWx7XqbwPv
1bs2e64WNHeeoybk1bd3PMdu0KfnYVP0ZR/sOH2ZgNXTy3p2I7F6vHKKqUnV
4s3AzRUx+aXArV2z5SnWXM3sUUyskP1Wr4epadWx1r7ku32OU4s72NcGfC3f
HcVvJk91miRHe1TJ+2/Tw2Ly8/T4Nfw4M2AaP8iMOIPPMEP68Pv5Bn3LJZ65
xD4cgo1wFq/wPTf5RnnlNLJurX8nvztY/07OTOe07Lln3OGcrsDOc07DsARn
o3u7iCXww+yN+vaLvHckue4ipj6egM3Sx1dhXfAJnjeMv8r7las+vw+TV58X
+44V0ecR2Cb6vBG2lT7fA2ujz1OwNH3eDeulz0/Chujzc7Ap+vwibIE+/xMm
rz5XHYrV8L/yluk16rIGHyam/5lmcjqogxZYC9eqj13kiL/MMzLUUpz4//eU
khMmT76EORTG+6yxEL/IN4jJz/ONF/ET7ME5/Cn26CS+kz1NwTvZ8z34dt+t
Vb2QZs0RchR7gzOM4Ct9l6teGuKeefriEkw1UEzuI2pE7BH1s0SvNPmPe0i/
Sd/dr5jqfl1ejn51nSR2heetg8tXEi9hb7Xf93y3jyV47WEp56Gz+YN16tt6
uD/NdyRhu9iXnO/y7/EM+QucwyL8Aucwjz/Fr3JzXMfZtx5YD+9v5zqH7yT/
PwLkpbA=
      "]]]}, {{InsetBox["1", {0., 8.}, {-1, 1}], 
     InsetBox["2", {0., 7.71428571}, {-1, 1}], 
     InsetBox["3", {0.3125, 8.}, {-1, 1}], 
     InsetBox["4", {0.310115136, 7.71253182}, {-1, 1}], 
     InsetBox["5", {0., 7.42857143}, {-1, 1}], 
     InsetBox["6", {0.625, 8.}, {-1, 1}], 
     InsetBox["7", {0.307730272, 7.42506365}, {-1, 1}], 
     InsetBox["8", {0.620230272, 7.71077794}, {-1, 1}], 
     InsetBox["9", {0.615460543, 7.42155587}, {-1, 1}], 
     InsetBox["10", {0., 7.14285714}, {-1, 1}], 
     InsetBox["11", {0.304276369, 7.13842171}, {-1, 1}], 
     InsetBox["12", {0.9375, 8.}, {-1, 1}], 
     InsetBox["13", {0.929535589, 7.71023502}, {-1, 1}], 
     InsetBox["14", {0.608552738, 7.13398628}, {-1, 1}], 
     InsetBox["15", {0.921571178, 7.42047004}, {-1, 1}], 
     InsetBox["16", {0., 6.85714286}, {-1, 1}], 
     InsetBox["17", {0.300822466, 6.85177978}, {-1, 1}], 
     InsetBox["18", {1.25, 8.}, {-1, 1}], 
     InsetBox["19", {0.910878364, 7.13138626}, {-1, 1}], 
     InsetBox["20", {1.23884091, 7.7096921}, {-1, 1}], 
     InsetBox["21", {0.601644933, 6.8464167}, {-1, 1}], 
     InsetBox["22", {1.22768181, 7.4193842}, {-1, 1}], 
     InsetBox["23", {0., 6.57142857}, {-1, 1}], 
     InsetBox["24", {0.295597257, 6.56653861}, {-1, 1}], 
     InsetBox["25", {0.900185549, 6.84230249}, {-1, 1}], 
     InsetBox["26", {1.21320399, 7.12878625}, {-1, 1}], 
     InsetBox["27", {0.591194513, 6.56164865}, {-1, 1}], 
     InsetBox["28", {1.5625, 8.}, {-1, 1}], 
     InsetBox["29", {1.54854077, 7.70831707}, {-1, 1}], 
     InsetBox["30", {1.53458154, 7.41663413}, {-1, 1}], 
     InsetBox["31", {1.19872617, 6.83818829}, {-1, 1}], 
     InsetBox["32", {0.887389212, 6.55673003}, {-1, 1}], 
     InsetBox["33", {0., 6.28571429}, {-1, 1}], 
     InsetBox["34", {0.290372047, 6.28129745}, {-1, 1}], 
     InsetBox["35", {1.51577471, 7.12464082}, {-1, 1}], 
     InsetBox["36", {0.580744094, 6.27688061}, {-1, 1}], 
     InsetBox["37", {1.18358391, 6.5518114}, {-1, 1}], 
     InsetBox["38", {1.875, 8.}, {-1, 1}], 
     InsetBox["39", {1.85824063, 7.70694203}, {-1, 1}], 
     InsetBox["40", {1.49696789, 6.83264751}, {-1, 1}], 
     InsetBox["41", {1.84148126, 7.41388407}, {-1, 1}], 
     InsetBox["42", {0.874592875, 6.27115756}, {-1, 1}], 
     InsetBox["43", {0., 6.}, {-1, 1}], 
     InsetBox["44", {1.81834544, 7.12049539}, {-1, 1}], 
     InsetBox["45", {0.288280811, 5.99563398}, {-1, 1}], 
     InsetBox["46", {1.48038324, 6.54447206}, {-1, 1}], 
     InsetBox["47", {0.576561623, 5.99126796}, {-1, 1}], 
     InsetBox["48", {1.16844166, 6.26543451}, {-1, 1}], 
     InsetBox["49", {1.79520961, 6.82710672}, {-1, 1}], 
     InsetBox["50", {2.1668267, 7.70513221}, {-1, 1}], 
     InsetBox["51", {2.1875, 8.}, {-1, 1}], 
     InsetBox["52", {0.867978486, 5.98516619}, {-1, 1}], 
     InsetBox["53", {2.14615341, 7.41026442}, {-1, 1}], 
     InsetBox["54", {1.46379859, 6.25629662}, {-1, 1}], 
     InsetBox["55", {0., 5.71428571}, {-1, 1}], 
     InsetBox["56", {2.12096808, 7.11494766}, {-1, 1}], 
     InsetBox["57", {1.77718256, 6.53713272}, {-1, 1}], 
     InsetBox["58", {0.286189576, 5.70997052}, {-1, 1}], 
     InsetBox["59", {1.15939535, 5.97906442}, {-1, 1}], 
     InsetBox["60", {0.572379152, 5.70565532}, {-1, 1}], 
     InsetBox["61", {2.09578275, 6.8196309}, {-1, 1}], 
     InsetBox["62", {0.861364096, 5.69917482}, {-1, 1}], 
     InsetBox["63", {1.75915552, 6.24715873}, {-1, 1}], 
     InsetBox["64", {2.47541278, 7.70332239}, {-1, 1}], 
     InsetBox["65", {1.45110798, 5.97011051}, {-1, 1}], 
     InsetBox["66", {2.5, 8.}, {-1, 1}], 
     InsetBox["67", {2.45082556, 7.40664478}, {-1, 1}], 
     InsetBox["68", {2.07430152, 6.52683993}, {-1, 1}], 
     InsetBox["69", {0., 5.42857143}, {-1, 1}], 
     InsetBox["70", {1.15034904, 5.69269432}, {-1, 1}], 
     InsetBox["71", {2.42359072, 7.10939993}, {-1, 1}], 
     InsetBox["72", {0.285583102, 5.42543457}, {-1, 1}], 
     InsetBox["73", {0.571166204, 5.42229771}, {-1, 1}], 
     InsetBox["74", {2.39635589, 6.81215509}, {-1, 1}], 
     InsetBox["75", {1.74282061, 5.96115661}, {-1, 1}], 
     InsetBox["76", {2.0528203, 6.23404895}, {-1, 1}], 
     InsetBox["77", {0.858842753, 5.41627015}, {-1, 1}], 
     InsetBox["78", {1.43841738, 5.68392441}, {-1, 1}], 
     InsetBox["79", {2.37142048, 6.51654713}, {-1, 1}], 
     InsetBox["80", {2.78561708, 7.70003531}, {-1, 1}], 
     InsetBox["81", {2.8125, 8.}, {-1, 1}], 
     InsetBox["82", {2.75873417, 7.40007063}, {-1, 1}], 
     InsetBox["83", {1.1465193, 5.41024259}, {-1, 1}], 
     InsetBox["84", {0., 5.14285714}, {-1, 1}], 
     InsetBox["85", {0.284976628, 5.14089861}, {-1, 1}], 
     InsetBox["86", {2.73028926, 7.09860301}, {-1, 1}], 
     InsetBox["87", {2.03308436, 5.94790026}, {-1, 1}], 
     InsetBox["88", {1.72648571, 5.67515449}, {-1, 1}], 
     InsetBox["89", {0.569953257, 5.13894009}, {-1, 1}], 
     InsetBox["90", {2.34648508, 6.22093918}, {-1, 1}], 
     InsetBox["91", {2.70184435, 6.79713539}, {-1, 1}], 
     InsetBox["92", {1.43384872, 5.40201262}, {-1, 1}], 
     InsetBox["93", {0.856321409, 5.13336548}, {-1, 1}], 
     InsetBox["94", {2.67381805, 6.49662017}, {-1, 1}], 
     InsetBox["95", {2.01334842, 5.66175158}, {-1, 1}], 
     InsetBox["96", {1.14268956, 5.12779087}, {-1, 1}], 
     InsetBox["97", {2.32334811, 5.93464392}, {-1, 1}], 
     InsetBox["98", {3.09582139, 7.69674824}, {-1, 1}], 
     InsetBox["99", {1.72117813, 5.39378265}, {-1, 1}], 
     InsetBox["100", {3.125, 8.}, {-1, 1}], 
     InsetBox["101", {3.06664277, 7.39349647}, {-1, 1}], 
     InsetBox["102", {0., 4.85714286}, {-1, 1}], 
     InsetBox["103", {0.285072263, 4.85562099}, {-1, 1}], 
     InsetBox["104", {3.03698779, 7.08780608}, {-1, 1}], 
     InsetBox["105", {0.570144525, 4.85409913}, {-1, 1}], 
     InsetBox["106", {2.64579175, 6.19610496}, {-1, 1}], 
     InsetBox["107", {1.42928006, 5.12010083}, {-1, 1}], 
     InsetBox["108", {3.00733281, 6.78211569}, {-1, 1}], 
     InsetBox["109", {0.857228976, 4.85093343}, {-1, 1}], 
     InsetBox["110", {2.30021114, 5.64834866}, {-1, 1}], 
     InsetBox["111", {2.00455902, 5.38138061}, {-1, 1}], 
     InsetBox["112", {2.97621562, 6.47669322}, {-1, 1}], 
     InsetBox["113", {2.61597478, 5.9079046}, {-1, 1}], 
     InsetBox["114", {1.14431343, 4.84776774}, {-1, 1}], 
     InsetBox["115", {1.71587055, 5.1124108}, {-1, 1}], 
     InsetBox["116", {3.40823841, 7.69257188}, {-1, 1}], 
     InsetBox["117", {0., 4.57142857}, {-1, 1}], 
     InsetBox["118", {3.37897683, 7.38514377}, {-1, 1}], 
     InsetBox["119", {3.4375, 8.}, {-1, 1}], 
     InsetBox["120", {0.285167897, 4.57034337}, {-1, 1}], 
     InsetBox["121", {2.94509843, 6.17127074}, {-1, 1}], 
     InsetBox["122", {1.43078391, 4.84125891}, {-1, 1}], 
     InsetBox["123", {3.3502779, 7.07138646}, {-1, 1}], 
     InsetBox["124", {0.570335794, 4.56925818}, {-1, 1}], 
     InsetBox["125", {2.28793991, 5.36897857}, {-1, 1}], 
     InsetBox["126", {2.58615781, 5.61970424}, {-1, 1}], 
     InsetBox["127", {1.99576962, 5.10100963}, {-1, 1}], 
     InsetBox["128", {0.858136542, 4.56850139}, {-1, 1}], 
     InsetBox["129", {3.32157898, 6.75762915}, {-1, 1}], 
     InsetBox["130", {2.90860146, 5.88116528}, {-1, 1}], 
     InsetBox["131", {1.7172544, 4.83475008}, {-1, 1}], 
     InsetBox["132", {1.14593729, 4.56774461}, {-1, 1}], 
     InsetBox["133", {3.28709866, 6.44309463}, {-1, 1}], 
     InsetBox["134", {2.56770452, 5.34387792}, {-1, 1}], 
     InsetBox["135", {2.27566868, 5.08960847}, {-1, 1}], 
     InsetBox["136", {0., 4.28571429}, {-1, 1}], 
     InsetBox["137", {1.43228777, 4.56241698}, {-1, 1}], 
     InsetBox["138", {0.287803143, 4.28517169}, {-1, 1}], 
     InsetBox["139", {3.72065544, 7.68839553}, {-1, 1}], 
     InsetBox["140", {3.69131088, 7.37679106}, {-1, 1}], 
     InsetBox["141", {2.87210448, 5.59105982}, {-1, 1}], 
     InsetBox["142", {3.75, 8.}, {-1, 1}], 
     InsetBox["143", {1.99810883, 4.82582874}, {-1, 1}], 
     InsetBox["144", {3.25261835, 6.1285601}, {-1, 1}], 
     InsetBox["145", {0.575606286, 4.28462909}, {-1, 1}], 
     InsetBox["146", {3.66356801, 7.05496684}, {-1, 1}], 
     InsetBox["147", {0.864725854, 4.2842507}, {-1, 1}], 
     InsetBox["148", {1.71863825, 4.55708936}, {-1, 1}], 
     InsetBox["149", {3.63582515, 6.73314262}, {-1, 1}], 
     InsetBox["150", {3.19940394, 5.83657629}, {-1, 1}], 
     InsetBox["151", {2.54925124, 5.06805161}, {-1, 1}], 
     InsetBox["152", {1.15384542, 4.2838723}, {-1, 1}], 
     InsetBox["153", {2.84746914, 5.31877728}, {-1, 1}], 
     InsetBox["154", {2.27896327, 4.81690741}, {-1, 1}], 
     InsetBox["155", {3.59798171, 6.40949604}, {-1, 1}], 
     InsetBox["156", {2.00044805, 4.55064786}, {-1, 1}], 
     InsetBox["157", {1.44223986, 4.28120849}, {-1, 1}], 
     InsetBox["158", {3.14618953, 5.54459247}, {-1, 1}], 
     InsetBox["159", {0., 4.}, {-1, 1}], 
     InsetBox["160", {0.290438389, 4.}, {-1, 1}], 
     InsetBox["161", {0.580876777, 4.}, {-1, 1}], 
     InsetBox["162", {3.56013827, 6.08584947}, {-1, 1}], 
     InsetBox["163", {4.03492421, 7.68539568}, {-1, 1}], 
     InsetBox["164", {4.00734842, 7.37079136}, {-1, 1}], 
     InsetBox["165", {4.0625, 8.}, {-1, 1}], 
     InsetBox["166", {2.82283379, 5.04649475}, {-1, 1}], 
     InsetBox["167", {2.55135332, 4.80094108}, {-1, 1}], 
     InsetBox["168", {0.871315166, 4.}, {-1, 1}], 
     InsetBox["169", {3.98376016, 7.0406349}, {-1, 1}], 
     InsetBox["170", {1.73063429, 4.27854468}, {-1, 1}], 
     InsetBox["171", {3.49020642, 5.7919873}, {-1, 1}], 
     InsetBox["172", {3.10994721, 5.27810421}, {-1, 1}], 
     InsetBox["173", {2.28225786, 4.54420635}, {-1, 1}], 
     InsetBox["174", {3.96017189, 6.71047843}, {-1, 1}], 
     InsetBox["175", {1.16175355, 4.}, {-1, 1}], 
     InsetBox["176", {2.01675839, 4.27532393}, {-1, 1}], 
     InsetBox["177", {3.42027458, 5.49812512}, {-1, 1}], 
     InsetBox["178", {1.45219194, 4.}, {-1, 1}], 
     InsetBox["179", {3.93583995, 6.35514599}, {-1, 1}], 
     InsetBox["180", {2.82374336, 4.78497474}, {-1, 1}], 
     InsetBox["181", {3.07370489, 5.01161594}, {-1, 1}], 
     InsetBox["182", {2.5534554, 4.53383054}, {-1, 1}], 
     InsetBox["183", {3.37242529, 5.23743113}, {-1, 1}], 
     InsetBox["184", {4.34919298, 7.68239583}, {-1, 1}], 
     InsetBox["185", {1.74263033, 4.}, {-1, 1}], 
     InsetBox["186", {4.32338596, 7.36479167}, {-1, 1}], 
     InsetBox["187", {4.375, 8.}, {-1, 1}], 
     InsetBox["188", {2.30288248, 4.27210317}, {-1, 1}], 
     InsetBox["189", {3.91150801, 5.99981355}, {-1, 1}], 
     InsetBox["190", {4.3039523, 7.02630296}, {-1, 1}], 
     InsetBox["191", {3.79330927, 5.70787187}, {-1, 1}], 
     InsetBox["192", {3.06897741, 4.75817568}, {-1, 1}], 
     InsetBox["193", {2.82465293, 4.52345474}, {-1, 1}], 
     InsetBox["194", {4.28451864, 6.68781425}, {-1, 1}], 
     InsetBox["195", {2.03306872, 4.}, {-1, 1}], 
     InsetBox["196", {3.67511053, 5.41593019}, {-1, 1}], 
     InsetBox["197", {3.324576, 4.97673714}, {-1, 1}], 
     InsetBox["198", {2.58216111, 4.26691527}, {-1, 1}], 
     InsetBox["199", {3.6101636, 5.16815156}, {-1, 1}], 
     InsetBox["200", {4.2736982, 6.30079594}, {-1, 1}], 
     InsetBox["201", {2.32350711, 4.}, {-1, 1}], 
     InsetBox["202", {3.06424993, 4.50473542}, {-1, 1}], 
     InsetBox["203", {3.31421146, 4.73137662}, {-1, 1}], 
     InsetBox["204", {4.66304583, 7.68306196}, {-1, 1}], 
     InsetBox["205", {4.63859167, 7.36612392}, {-1, 1}], 
     InsetBox["206", {4.6875, 8.}, {-1, 1}], 
     InsetBox["207", {3.54521667, 4.92037293}, {-1, 1}], 
     InsetBox["208", {2.86143975, 4.26172737}, {-1, 1}], 
     InsetBox["209", {4.62270507, 7.03586094}, {-1, 1}], 
     InsetBox["210", {4.09641212, 5.62375644}, {-1, 1}], 
     InsetBox["211", {4.26287776, 5.91377764}, {-1, 1}], 
     InsetBox["212", {3.92994648, 5.33373525}, {-1, 1}], 
     InsetBox["213", {2.61086683, 4.}, {-1, 1}], 
     InsetBox["214", {4.60681847, 6.70559795}, {-1, 1}], 
     InsetBox["215", {3.84790192, 5.09887198}, {-1, 1}], 
     InsetBox["216", {3.30384692, 4.4860161}, {-1, 1}], 
     InsetBox["217", {3.5264815, 4.68931133}, {-1, 1}], 
     InsetBox["218", {3.09877512, 4.25236771}, {-1, 1}], 
     InsetBox["219", {4.60659211, 6.35105296}, {-1, 1}], 
     InsetBox["220", {3.76585735, 4.86400872}, {-1, 1}], 
     InsetBox["221", {2.89822656, 4.}, {-1, 1}], 
     InsetBox["222", {4.11166879, 5.18772375}, {-1, 1}], 
     InsetBox["223", {3.50774632, 4.45824972}, {-1, 1}], 
     InsetBox["224", {4.97689869, 7.68372809}, {-1, 1}], 
     InsetBox["225", {4.95379737, 7.36745617}, {-1, 1}], 
     InsetBox["226", {4.27642785, 5.41082389}, {-1, 1}], 
     InsetBox["227", {5., 8.}, {-1, 1}], 
     InsetBox["228", {3.73875153, 4.64724603}, {-1, 1}], 
     InsetBox["229", {4.60636575, 5.99650797}, {-1, 1}], 
     InsetBox["230", {3.3361105, 4.24300805}, {-1, 1}], 
     InsetBox["231", {4.02599421, 4.98516781}, {-1, 1}], 
     InsetBox["232", {4.44118692, 5.63392404}, {-1, 1}], 
     InsetBox["233", {4.94145784, 7.04541892}, {-1, 1}], 
     InsetBox["234", {3.13330032, 4.}, {-1, 1}], 
     InsetBox["235", {3.94031962, 4.78261187}, {-1, 1}], 
     InsetBox["236", {4.9291183, 6.72338166}, {-1, 1}], 
     InsetBox["237", {3.71164572, 4.43048335}, {-1, 1}], 
     InsetBox["238", {3.53243826, 4.22912486}, {-1, 1}], 
     InsetBox["239", {3.90812416, 4.58766373}, {-1, 1}], 
     InsetBox["240", {4.93948602, 6.40130998}, {-1, 1}], 
     InsetBox["241", {4.2933911, 5.04171224}, {-1, 1}], 
     InsetBox["242", {3.36837407, 4.}, {-1, 1}], 
     InsetBox["243", {4.2040865, 4.87146363}, {-1, 1}], 
     InsetBox["244", {4.73467096, 5.71776132}, {-1, 1}], 
     InsetBox["245", {4.45644359, 5.19789134}, {-1, 1}], 
     InsetBox["246", {4.1147819, 4.70121503}, {-1, 1}], 
     InsetBox["247", {5.27912065, 7.68727689}, {-1, 1}], 
     InsetBox["248", {3.8759287, 4.39271559}, {-1, 1}], 
     InsetBox["249", {5.2582413, 7.37455377}, {-1, 1}], 
     InsetBox["250", {5.3, 8.}, {-1, 1}], 
     InsetBox["251", {4.94985374, 6.07923831}, {-1, 1}], 
     InsetBox["252", {3.72876602, 4.21524167}, {-1, 1}], 
     InsetBox["253", {4.61949607, 5.35407044}, {-1, 1}], 
     InsetBox["254", {5.24441581, 7.05603402}, {-1, 1}], 
     InsetBox["255", {3.5571302, 4.}, {-1, 1}], 
     InsetBox["256", {4.07749679, 4.52808143}, {-1, 1}], 
     InsetBox["257", {5.23059031, 6.73751426}, {-1, 1}], 
     InsetBox["258", {4.41760361, 4.90313196}, {-1, 1}], 
     InsetBox["259", {4.32945182, 4.7614553}, {-1, 1}], 
     InsetBox["260", {4.24130004, 4.61977865}, {-1, 1}], 
     InsetBox["261", {3.88556077, 4.19635779}, {-1, 1}], 
     InsetBox["262", {4.04021168, 4.35494783}, {-1, 1}], 
     InsetBox["263", {4.57578416, 5.02186279}, {-1, 1}], 
     InsetBox["264", {5.23198743, 6.42641332}, {-1, 1}], 
     InsetBox["265", {3.74588633, 4.}, {-1, 1}], 
     InsetBox["266", {5.028155, 5.8015986}, {-1, 1}], 
     InsetBox["267", {4.20321634, 4.467789}, {-1, 1}], 
     InsetBox["268", {4.86297617, 5.43901466}, {-1, 1}], 
     InsetBox["269", {4.73396472, 5.14059362}, {-1, 1}], 
     InsetBox["270", {4.16513264, 4.31579936}, {-1, 1}], 
     InsetBox["271", {5.23338454, 6.11531237}, {-1, 1}], 
     InsetBox["272", {4.04235552, 4.17747391}, {-1, 1}], 
     InsetBox["273", {4.45481715, 4.65144697}, {-1, 1}], 
     InsetBox["274", {4.36781818, 4.53834226}, {-1, 1}], 
     InsetBox["275", {4.54181612, 4.76455168}, {-1, 1}], 
     InsetBox["276", {3.89519285, 4.}, {-1, 1}], 
     InsetBox["277", {5.58134261, 7.69082568}, {-1, 1}], 
     InsetBox["278", {5.56268523, 7.38165137}, {-1, 1}], 
     InsetBox["279", {5.6, 8.}, {-1, 1}], 
     InsetBox["280", {5.54737378, 7.06664912}, {-1, 1}], 
     InsetBox["281", {4.32893589, 4.40749658}, {-1, 1}], 
     InsetBox["282", {4.69512474, 4.84583424}, {-1, 1}], 
     InsetBox["283", {4.16316678, 4.15789968}, {-1, 1}], 
     InsetBox["284", {5.53206233, 6.75164686}, {-1, 1}], 
     InsetBox["285", {5.10645627, 5.52395889}, {-1, 1}], 
     InsetBox["286", {4.2900536, 4.2766509}, {-1, 1}], 
     InsetBox["287", {4.45535447, 4.46926288}, {-1, 1}], 
     InsetBox["288", {4.04449936, 4.}, {-1, 1}], 
     InsetBox["289", {4.53296042, 4.56147233}, {-1, 1}], 
     InsetBox["290", {5.27319539, 5.85887156}, {-1, 1}], 
     InsetBox["291", {4.61056637, 4.65368177}, {-1, 1}], 
     InsetBox["292", {4.97782619, 5.19669257}, {-1, 1}], 
     InsetBox["293", {4.41915111, 4.35589876}, {-1, 1}], 
     InsetBox["294", {5.52448884, 6.45151665}, {-1, 1}], 
     InsetBox["295", {4.84843336, 4.92711679}, {-1, 1}], 
     InsetBox["296", {4.28397803, 4.13832545}, {-1, 1}], 
     InsetBox["297", {4.74126707, 4.71067531}, {-1, 1}], 
     InsetBox["298", {4.16120092, 4.}, {-1, 1}], 
     InsetBox["299", {4.38294774, 4.24253463}, {-1, 1}], 
     InsetBox["300", {4.54289076, 4.4001835}, {-1, 1}], 
     InsetBox["301", {4.61110369, 4.47149768}, {-1, 1}], 
     InsetBox["302", {4.67931662, 4.54281186}, {-1, 1}], 
     InsetBox["303", {5.51691535, 6.15138643}, {-1, 1}], 
     InsetBox["304", {5.31300623, 5.60243075}, {-1, 1}], 
     InsetBox["305", {4.50936632, 4.30430093}, {-1, 1}], 
     InsetBox["306", {4.87196777, 4.76766884}, {-1, 1}], 
     InsetBox["307", {4.37560845, 4.12126731}, {-1, 1}], 
     InsetBox["308", {4.27790247, 4.}, {-1, 1}], 
     InsetBox["309", {4.47584189, 4.20841836}, {-1, 1}], 
     InsetBox["310", {4.60420934, 4.34541092}, {-1, 1}], 
     InsetBox["311", {4.7874094, 4.57551637}, {-1, 1}], 
     InsetBox["312", {4.66178499, 4.40463709}, {-1, 1}], 
     InsetBox["313", {5.88376049, 7.69100094}, {-1, 1}], 
     InsetBox["314", {4.71936064, 4.46386327}, {-1, 1}], 
     InsetBox["315", {5.51823577, 5.91614453}, {-1, 1}], 
     InsetBox["316", {5.86752099, 7.38200188}, {-1, 1}], 
     InsetBox["317", {5.9, 8.}, {-1, 1}], 
     InsetBox["318", {5.22168767, 5.25279152}, {-1, 1}], 
     InsetBox["319", {4.57401198, 4.26401981}, {-1, 1}], 
     InsetBox["320", {4.36826915, 4.}, {-1, 1}], 
     InsetBox["321", {5.85018092, 7.06499097}, {-1, 1}], 
     InsetBox["322", {4.46723886, 4.10420918}, {-1, 1}], 
     InsetBox["323", {5.09267622, 4.95437048}, {-1, 1}], 
     InsetBox["324", {4.54381462, 4.1826287}, {-1, 1}], 
     InsetBox["325", {4.89550217, 4.60822089}, {-1, 1}], 
     InsetBox["326", {4.80879584, 4.48347849}, {-1, 1}], 
     InsetBox["327", {4.66552792, 4.29063833}, {-1, 1}], 
     InsetBox["328", {5.83284086, 6.74798006}, {-1, 1}], 
     InsetBox["329", {4.7124663, 4.33777651}, {-1, 1}], 
     InsetBox["330", {4.75940467, 4.38491468}, {-1, 1}], 
     InsetBox["331", {4.63865764, 4.22373868}, {-1, 1}], 
     InsetBox["332", {5.51955619, 5.68090262}, {-1, 1}], 
     InsetBox["333", {4.53595872, 4.09131435}, {-1, 1}], 
     InsetBox["334", {4.45863584, 4.}, {-1, 1}], 
     InsetBox["335", {4.61178735, 4.15683903}, {-1, 1}], 
     InsetBox["336", {5.06109813, 4.76984476}, {-1, 1}], 
     InsetBox["337", {4.70677842, 4.25562721}, {-1, 1}], 
     InsetBox["338", {4.89823104, 4.50309371}, {-1, 1}], 
     InsetBox["339", {4.74530217, 4.29469954}, {-1, 1}], 
     InsetBox["340", {5.81506497, 6.43444675}, {-1, 1}], 
     InsetBox["341", {4.78382592, 4.33377187}, {-1, 1}], 
     InsetBox["342", {4.83018229, 4.39144061}, {-1, 1}], 
     InsetBox["343", {4.68452799, 4.19636602}, {-1, 1}], 
     InsetBox["344", {4.52810282, 4.}, {-1, 1}], 
     InsetBox["345", {4.60467857, 4.07841952}, {-1, 1}], 
     InsetBox["346", {4.66227757, 4.13710483}, {-1, 1}], 
     InsetBox["347", {5.4781422, 5.39096382}, {-1, 1}], 
     InsetBox["348", {4.74802891, 4.2206161}, {-1, 1}], 
     InsetBox["349", {4.84013706, 4.33616622}, {-1, 1}], 
     InsetBox["350", {4.77813804, 4.25162257}, {-1, 1}], 
     InsetBox["351", {4.80824716, 4.28262905}, {-1, 1}], 
     InsetBox["352", {5.02952005, 4.58531903}, {-1, 1}], 
     InsetBox["353", {4.90095991, 4.39796653}, {-1, 1}], 
     InsetBox["354", {4.73039835, 4.16899337}, {-1, 1}], 
     InsetBox["355", {4.5975698, 4.}, {-1, 1}], 
     InsetBox["356", {4.65647453, 4.06855242}, {-1, 1}], 
     InsetBox["357", {5.79728908, 6.12091344}, {-1, 1}], 
     InsetBox["358", {4.82012788, 4.25184526}, {-1, 1}], 
     InsetBox["359", {4.79884992, 4.22444066}, {-1, 1}], 
     InsetBox["360", {4.71276779, 4.11737064}, {-1, 1}], 
     InsetBox["361", {4.77757196, 4.19703605}, {-1, 1}], 
     InsetBox["362", {4.85009183, 4.28089182}, {-1, 1}], 
     InsetBox["363", {4.8964482, 4.33856056}, {-1, 1}], 
     InsetBox["364", {4.76384836, 4.15086754}, {-1, 1}], 
     InsetBox["365", {5.00662761, 4.47028409}, {-1, 1}], 
     InsetBox["366", {5.33691907, 4.98162416}, {-1, 1}], 
     InsetBox["367", {4.8320086, 4.22106148}, {-1, 1}], 
     InsetBox["368", {4.65067148, 4.}, {-1, 1}], 
     InsetBox["369", {4.85321397, 4.24748613}, {-1, 1}], 
     InsetBox["370", {4.8195618, 4.19725874}, {-1, 1}], 
     InsetBox["371", {4.70827048, 4.05868532}, {-1, 1}], 
     InsetBox["372", {4.75012476, 4.10469903}, {-1, 1}], 
     InsetBox["373", {4.80711501, 4.17345599}, {-1, 1}], 
     InsetBox["374", {4.8919365, 4.2791546}, {-1, 1}], 
     InsetBox["375", {4.85633611, 4.21408044}, {-1, 1}], 
     InsetBox["376", {4.79729837, 4.13274171}, {-1, 1}], 
     InsetBox["377", {5.7659429, 5.82502477}, {-1, 1}], 
     InsetBox["378", {5.2502285, 4.77202067}, {-1, 1}], 
     InsetBox["379", {4.88630006, 4.24312699}, {-1, 1}], 
     InsetBox["380", {4.84508214, 4.18603849}, {-1, 1}], 
     InsetBox["381", {4.74715754, 4.05234951}, {-1, 1}], 
     InsetBox["382", {4.98373518, 4.35524914}, {-1, 1}], 
     InsetBox["383", {4.70377317, 4.}, {-1, 1}], 
     InsetBox["384", {4.83382818, 4.15799655}, {-1, 1}], 
     InsetBox["385", {4.78748174, 4.09202742}, {-1, 1}], 
     InsetBox["386", {4.88066362, 4.20709939}, {-1, 1}], 
     InsetBox["387", {4.95975254, 4.30090668}, {-1, 1}], 
     InsetBox["388", {4.82538646, 4.12059753}, {-1, 1}], 
     InsetBox["389", {4.87060249, 4.17481825}, {-1, 1}], 
     InsetBox["390", {6.18617837, 7.69117619}, {-1, 1}], 
     InsetBox["391", {6.2, 8.}, {-1, 1}], 
     InsetBox["392", {4.9357699, 4.24656421}, {-1, 1}], 
     InsetBox["393", {5.16353792, 4.56241718}, {-1, 1}], 
     InsetBox["394", {6.17235675, 7.38235239}, {-1, 1}], 
     InsetBox["395", {4.86054135, 4.1425371}, {-1, 1}], 
     InsetBox["396", {4.74419031, 4.}, {-1, 1}], 
     InsetBox["397", {4.92153917, 4.21721203}, {-1, 1}], 
     InsetBox["398", {4.7860446, 4.04601371}, {-1, 1}], 
     InsetBox["399", {4.81694474, 4.08319851}, {-1, 1}], 
     InsetBox["400", {4.90730845, 4.18785984}, {-1, 1}], 
     InsetBox["401", {4.85347454, 4.10845335}, {-1, 1}], 
     InsetBox["402", {4.89578432, 4.15837005}, {-1, 1}], 
     InsetBox["403", {6.15298807, 7.06333282}, {-1, 1}], 
     InsetBox["404", {4.8842602, 4.12888026}, {-1, 1}], 
     InsetBox["405", {5.11502418, 4.43747446}, {-1, 1}], 
     InsetBox["406", {4.81610681, 4.04159925}, {-1, 1}], 
     InsetBox["407", {4.78460746, 4.}, {-1, 1}], 
     InsetBox["408", {4.84640774, 4.07436959}, {-1, 1}], 
     InsetBox["409", {5.73459672, 5.52913611}, {-1, 1}], 
     InsetBox["410", {4.8771987, 4.09762732}, {-1, 1}], 
     InsetBox["411", {4.93395328, 4.16862029}, {-1, 1}], 
     InsetBox["412", {4.95677829, 4.19129706}, {-1, 1}], 
     InsetBox["413", {4.92096616, 4.14192185}, {-1, 1}], 
     InsetBox["414", {4.9796033, 4.21397383}, {-1, 1}], 
     InsetBox["415", {4.90797905, 4.11522342}, {-1, 1}], 
     InsetBox["416", {4.81526889, 4.}, {-1, 1}], 
     InsetBox["417", {4.84616903, 4.0371848}, {-1, 1}], 
     InsetBox["418", {4.8701372, 4.06637438}, {-1, 1}], 
     InsetBox["419", {5.02305687, 4.26325279}, {-1, 1}], 
     InsetBox["420", {6.1336194, 6.74431325}, {-1, 1}], 
     InsetBox["421", {5.06651045, 4.31253175}, {-1, 1}], 
     InsetBox["422", {4.94689295, 4.14793235}, {-1, 1}], 
     InsetBox["423", {4.90092286, 4.0868013}, {-1, 1}], 
     InsetBox["424", {4.9638555, 4.16662445}, {-1, 1}], 
     InsetBox["425", {4.98081805, 4.18531656}, {-1, 1}], 
     InsetBox["426", {4.93564615, 4.12471609}, {-1, 1}], 
     InsetBox["427", {4.92439935, 4.10149984}, {-1, 1}], 
     InsetBox["428", {4.86963489, 4.03318719}, {-1, 1}], 
     InsetBox["429", {4.84593032, 4.}, {-1, 1}], 
     InsetBox["430", {4.89386667, 4.05837917}, {-1, 1}], 
     InsetBox["431", {4.91785261, 4.07632564}, {-1, 1}], 
     InsetBox["432", {5.0015934, 4.18343854}, {-1, 1}], 
     InsetBox["433", {4.9820328, 4.15665928}, {-1, 1}], 
     InsetBox["434", {4.97093271, 4.14195184}, {-1, 1}], 
     InsetBox["435", {4.95983262, 4.1272444}, {-1, 1}], 
     InsetBox["436", {4.95032614, 4.10751033}, {-1, 1}], 
     InsetBox["437", {4.99686762, 4.16173695}, {-1, 1}], 
     InsetBox["438", {5.03633828, 4.21303285}, {-1, 1}], 
     InsetBox["439", {4.86913258, 4.}, {-1, 1}], 
     InsetBox["440", {4.89310075, 4.02918959}, {-1, 1}], 
     InsetBox["441", {4.91130588, 4.05115143}, {-1, 1}], 
     InsetBox["442", {4.94081966, 4.08777627}, {-1, 1}], 
     InsetBox["443", {6.1056411, 6.41737685}, {-1, 1}], 
     InsetBox["444", {5.64327816, 5.17949688}, {-1, 1}], 
     InsetBox["445", {4.99214185, 4.14003535}, {-1, 1}], 
     InsetBox["446", {4.98166027, 4.12580922}, {-1, 1}], 
     InsetBox["447", {4.93478237, 4.06584997}, {-1, 1}], 
     InsetBox["448", {4.97117869, 4.11158309}, {-1, 1}], 
     InsetBox["449", {5.07108316, 4.24262717}, {-1, 1}], 
     InsetBox["450", {4.96214055, 4.09434427}, {-1, 1}], 
     InsetBox["451", {4.91058252, 4.02557571}, {-1, 1}], 
     InsetBox["452", {4.9531024, 4.07710544}, {-1, 1}], 
     InsetBox["453", {4.89233483, 4.}, {-1, 1}], 
     InsetBox["454", {4.92874508, 4.04392368}, {-1, 1}], 
     InsetBox["455", {4.9475328, 4.05788414}, {-1, 1}], 
     InsetBox["456", {5.0235835, 4.15290325}, {-1, 1}], 
     InsetBox["457", {5.01291719, 4.13815734}, {-1, 1}], 
     InsetBox["458", {5.00225089, 4.12341142}, {-1, 1}], 
     InsetBox["459", {4.99238782, 4.1096666}, {-1, 1}], 
     InsetBox["460", {4.98252476, 4.09592178}, {-1, 1}], 
     InsetBox["461", {4.97395495, 4.0811782}, {-1, 1}], 
     InsetBox["462", {4.90985916, 4.}, {-1, 1}], 
     InsetBox["463", {4.92806429, 4.02196184}, {-1, 1}], 
     InsetBox["464", {4.94196319, 4.03866285}, {-1, 1}], 
     InsetBox["465", {4.96538514, 4.06643462}, {-1, 1}], 
     InsetBox["466", {4.96028322, 4.04991831}, {-1, 1}], 
     InsetBox["467", {5.04961968, 4.16281292}, {-1, 1}], 
     InsetBox["468", {5.00757005, 4.10562912}, {-1, 1}], 
     InsetBox["469", {4.99878649, 4.09381866}, {-1, 1}], 
     InsetBox["470", {4.99000293, 4.08200819}, {-1, 1}], 
     InsetBox["471", {4.94128175, 4.01933142}, {-1, 1}], 
     InsetBox["472", {5.01779061, 4.11592328}, {-1, 1}], 
     InsetBox["473", {4.98210147, 4.06977236}, {-1, 1}], 
     InsetBox["474", {4.92738349, 4.}, {-1, 1}], 
     InsetBox["475", {4.9742, 4.05753653}, {-1, 1}], 
     InsetBox["476", {5.02801118, 4.12621745}, {-1, 1}], 
     InsetBox["477", {4.9551813, 4.03340201}, {-1, 1}], 
     InsetBox["478", {5.26203265, 4.45033857}, {-1, 1}], 
     InsetBox["479", {5.19955963, 4.3529688}, {-1, 1}], 
     InsetBox["480", {4.9698144, 4.04352313}, {-1, 1}], 
     InsetBox["481", {5.3724028, 4.60365476}, {-1, 1}], 
     InsetBox["482", {4.9406003, 4.}, {-1, 1}], 
     InsetBox["483", {5.13708662, 4.25559903}, {-1, 1}], 
     InsetBox["484", {5.07565587, 4.17272259}, {-1, 1}], 
     InsetBox["485", {4.95449921, 4.016701}, {-1, 1}], 
     InsetBox["486", {4.96542879, 4.02950974}, {-1, 1}], 
     InsetBox["487", {5.0128892, 4.08784681}, {-1, 1}], 
     InsetBox["488", {5.00518515, 4.07797071}, {-1, 1}], 
     InsetBox["489", {4.99748111, 4.06809461}, {-1, 1}], 
     InsetBox["490", {4.99024798, 4.05836652}, {-1, 1}], 
     InsetBox["491", {4.98301486, 4.04863844}, {-1, 1}], 
     InsetBox["492", {5.04842482, 4.13038838}, {-1, 1}], 
     InsetBox["493", {5.02266403, 4.09368923}, {-1, 1}], 
     InsetBox["494", {4.97934558, 4.03712796}, {-1, 1}], 
     InsetBox["495", {4.96460158, 4.01475487}, {-1, 1}], 
     InsetBox["496", {5.03243886, 4.09953164}, {-1, 1}], 
     InsetBox["497", {4.95381712, 4.}, {-1, 1}], 
     InsetBox["498", {4.98856804, 4.04301653}, {-1, 1}], 
     InsetBox["499", {4.97567629, 4.02561747}, {-1, 1}], 
     InsetBox["500", {5.01543123, 4.07554997}, {-1, 1}], 
     InsetBox["501", {4.99561618, 4.04958585}, {-1, 1}], 
     InsetBox["502", {5.00904778, 4.06585257}, {-1, 1}], 
     InsetBox["503", {5.48277295, 4.75697094}, {-1, 1}], 
     InsetBox["504", {5.00266432, 4.05615517}, {-1, 1}], 
     InsetBox["505", {6.07766281, 6.09044044}, {-1, 1}], 
     InsetBox["506", {4.98589743, 4.03301999}, {-1, 1}], 
     InsetBox["507", {5.02364075, 4.07790302}, {-1, 1}], 
     InsetBox["508", {5.06883846, 4.13455931}, {-1, 1}], 
     InsetBox["509", {4.96377437, 4.}, {-1, 1}], 
     InsetBox["510", {4.99412121, 4.03739463}, {-1, 1}], 
     InsetBox["511", {4.97470395, 4.01280874}, {-1, 1}], 
     InsetBox["512", {4.98322683, 4.02302345}, {-1, 1}], 
     InsetBox["513", {5.01797327, 4.06325314}, {-1, 1}], 
     InsetBox["514", {5.12151182, 4.19841301}, {-1, 1}], 
     InsetBox["515", {5.03185027, 4.08025606}, {-1, 1}], 
     InsetBox["516", {5.00098437, 4.04080518}, {-1, 1}], 
     InsetBox["517", {4.99244929, 4.02891203}, {-1, 1}], 
     InsetBox["518", {5.04722995, 4.09796383}, {-1, 1}], 
     InsetBox["519", {5.0129104, 4.05373443}, {-1, 1}], 
     InsetBox["520", {5.00784753, 4.04421573}, {-1, 1}], 
     InsetBox["521", {4.98222693, 4.01151173}, {-1, 1}], 
     InsetBox["522", {4.97373161, 4.}, {-1, 1}], 
     InsetBox["523", {4.99077738, 4.02042944}, {-1, 1}], 
     InsetBox["524", {4.99928123, 4.03044312}, {-1, 1}], 
     InsetBox["525", {5.02461748, 4.06211681}, {-1, 1}], 
     InsetBox["526", {5.02023458, 4.05093875}, {-1, 1}], 
     InsetBox["527", {5.00611316, 4.03197421}, {-1, 1}], 
     InsetBox["528", {4.98122703, 4.}, {-1, 1}], 
     InsetBox["529", {4.99757809, 4.02008107}, {-1, 1}], 
     InsetBox["530", {4.98974991, 4.01021472}, {-1, 1}], 
     InsetBox["531", {5.04341508, 4.07708633}, {-1, 1}], 
     InsetBox["532", {5.03126169, 4.06098048}, {-1, 1}], 
     InsetBox["533", {5.01585167, 4.03976069}, {-1, 1}], 
     InsetBox["534", {5.06202105, 4.09639602}, {-1, 1}], 
     InsetBox["535", {4.99596966, 4.01004053}, {-1, 1}], 
     InsetBox["536", {5.0043788, 4.0197327}, {-1, 1}], 
     InsetBox["537", {4.98872245, 4.}, {-1, 1}], 
     InsetBox["538", {5.02755875, 4.04814307}, {-1, 1}], 
     InsetBox["539", {5.01325806, 4.02873348}, {-1, 1}], 
     InsetBox["540", {5.0021894, 4.00986635}, {-1, 1}], 
     InsetBox["541", {4.99436123, 4.}, {-1, 1}], 
     InsetBox["542", {5.0396002, 4.05620882}, {-1, 1}], 
     InsetBox["543", {5.02385582, 4.03530565}, {-1, 1}], 
     InsetBox["544", {5.10593703, 4.14122698}, {-1, 1}], 
     InsetBox["545", {5.01066444, 4.01770626}, {-1, 1}], 
     InsetBox["546", {5.05497988, 4.07391659}, {-1, 1}], 
     InsetBox["547", {5., 4.}, {-1, 1}], 
     InsetBox["548", {5.02040295, 4.02549274}, {-1, 1}], 
     InsetBox["549", {5.0080246, 4.00970199}, {-1, 1}], 
     InsetBox["550", {5.03494091, 4.04314253}, {-1, 1}], 
     InsetBox["551", {5.00538477, 4.00169772}, {-1, 1}], 
     InsetBox["552", {5.01695008, 4.01567983}, {-1, 1}], 
     InsetBox["553", {5., 3.99415583}, {-1, 1}], 
     InsetBox["554", {5.09082018, 4.10872146}, {-1, 1}], 
     InsetBox["555", {5.01385981, 4.00953764}, {-1, 1}], 
     InsetBox["556", {5.03028162, 4.03007624}, {-1, 1}], 
     InsetBox["557", {5.04793871, 4.05143716}, {-1, 1}], 
     InsetBox["558", {5.01076953, 4.00339545}, {-1, 1}], 
     InsetBox["559", {5.00653201, 3.9965534}, {-1, 1}], 
     InsetBox["560", {5., 3.98831166}, {-1, 1}], 
     InsetBox["561", {5.02625148, 4.02071075}, {-1, 1}], 
     InsetBox["562", {5.04232307, 4.03814199}, {-1, 1}], 
     InsetBox["563", {5.02222133, 4.01134526}, {-1, 1}], 
     InsetBox["564", {5.01764268, 4.00514812}, {-1, 1}], 
     InsetBox["565", {5.01306402, 3.99895098}, {-1, 1}], 
     InsetBox["566", {5.00767926, 3.99140909}, {-1, 1}], 
     InsetBox["567", {5.07570334, 4.07621593}, {-1, 1}], 
     InsetBox["568", {5., 3.97996075}, {-1, 1}], 
     InsetBox["569", {5.03670742, 4.02484683}, {-1, 1}], 
     InsetBox["570", {5.06486748, 4.05774627}, {-1, 1}], 
     InsetBox["571", {5.0321, 4.01592877}, {-1, 1}], 
     InsetBox["572", {5.01535851, 3.99450651}, {-1, 1}], 
     InsetBox["573", {5.02142555, 4.00075861}, {-1, 1}], 
     InsetBox["574", {5.02749258, 4.0070107}, {-1, 1}], 
     InsetBox["575", {5.00916932, 3.98384085}, {-1, 1}], 
     InsetBox["576", {5., 3.97160985}, {-1, 1}], 
     InsetBox["577", {5.05403161, 4.03927661}, {-1, 1}], 
     InsetBox["578", {5.04766266, 4.02924905}, {-1, 1}], 
     InsetBox["579", {5.0412937, 4.0192215}, {-1, 1}], 
     InsetBox["580", {5.01833865, 3.98772095}, {-1, 1}], 
     InsetBox["581", {5.03718481, 4.01032814}, {-1, 1}], 
     InsetBox["582", {5.01065939, 3.97627262}, {-1, 1}], 
     InsetBox["583", {6.01365003, 5.73390502}, {-1, 1}], 
     InsetBox["584", {5.02570729, 3.99457787}, {-1, 1}], 
     InsetBox["585", {5.03307592, 4.00143478}, {-1, 1}], 
     InsetBox["586", {5., 3.95969039}, {-1, 1}], 
     InsetBox["587", {5.04587997, 4.01359616}, {-1, 1}], 
     InsetBox["588", {5.02131879, 3.98093539}, {-1, 1}], 
     InsetBox["589", {5.05300225, 4.02035611}, {-1, 1}], 
     InsetBox["590", {5.04226962, 4.00472751}, {-1, 1}], 
     InsetBox["591", {5.06012452, 4.02711606}, {-1, 1}], 
     InsetBox["592", {5.02998903, 3.98839713}, {-1, 1}], 
     InsetBox["593", {5.01314404, 3.96552062}, {-1, 1}], 
     InsetBox["594", {5., 3.94777093}, {-1, 1}], 
     InsetBox["595", {5.03865926, 3.99585886}, {-1, 1}], 
     InsetBox["596", {5.07475507, 4.04157595}, {-1, 1}], 
     InsetBox["597", {5.05012155, 4.00667183}, {-1, 1}], 
     InsetBox["598", {5.08938563, 4.05603583}, {-1, 1}], 
     InsetBox["599", {5.11280191, 4.08288361}, {-1, 1}], 
     InsetBox["600", {5.02628808, 3.97135086}, {-1, 1}], 
     InsetBox["601", {5.03676447, 3.9821692}, {-1, 1}], 
     InsetBox["602", {5.05797348, 4.00861614}, {-1, 1}], 
     InsetBox["603", {5.13621818, 4.10973138}, {-1, 1}], 
     InsetBox["604", {5.01562869, 3.95476863}, {-1, 1}], 
     InsetBox["605", {5.04724085, 3.99298754}, {-1, 1}], 
     InsetBox["606", {5.17194049, 4.15419885}, {-1, 1}], 
     InsetBox["607", {5., 3.93078527}, {-1, 1}], 
     InsetBox["608", {5.20766279, 4.19866632}, {-1, 1}], 
     InsetBox["609", {5.03125738, 3.96176632}, {-1, 1}], 
     InsetBox["610", {5.04353991, 3.97594127}, {-1, 1}], 
     InsetBox["611", {5.07418146, 4.01418005}, {-1, 1}], 
     InsetBox["612", {5.05582244, 3.99011623}, {-1, 1}], 
     InsetBox["613", {5.01918447, 3.9396811}, {-1, 1}], 
     InsetBox["614", {5., 3.9137996}, {-1, 1}], 
     InsetBox["615", {5.09038943, 4.01974396}, {-1, 1}], 
     InsetBox["616", {5.03836894, 3.94857694}, {-1, 1}], 
     InsetBox["617", {5.05598839, 3.96768055}, {-1, 1}], 
     InsetBox["618", {5.02274025, 3.92459358}, {-1, 1}], 
     InsetBox["619", {5.28409509, 4.26846314}, {-1, 1}], 
     InsetBox["620", {5.07360784, 3.98678415}, {-1, 1}], 
     InsetBox["621", {5.11912124, 4.03982504}, {-1, 1}], 
     InsetBox["622", {5., 3.88964947}, {-1, 1}], 
     InsetBox["623", {5.04548049, 3.93538756}, {-1, 1}], 
     InsetBox["624", {5.06843686, 3.95941982}, {-1, 1}], 
     InsetBox["625", {5.14785305, 4.05990612}, {-1, 1}], 
     InsetBox["626", {5.09139323, 3.98345208}, {-1, 1}], 
     InsetBox["627", {5.02582277, 3.90115242}, {-1, 1}], 
     InsetBox["628", {5., 3.86549934}, {-1, 1}], 
     InsetBox["629", {5.36052738, 4.33825997}, {-1, 1}], 
     InsetBox["630", {6.4891772, 7.69079943}, {-1, 1}], 
     InsetBox["631", {5.18974269, 4.09005154}, {-1, 1}], 
     InsetBox["632", {5.05164554, 3.91265538}, {-1, 1}], 
     InsetBox["633", {6.5, 8.}, {-1, 1}], 
     InsetBox["634", {5.07334861, 3.93413232}, {-1, 1}], 
     InsetBox["635", {5.94963725, 5.3773696}, {-1, 1}], 
     InsetBox["636", {5.02890529, 3.87771127}, {-1, 1}], 
     InsetBox["637", {5.12544058, 3.99676647}, {-1, 1}], 
     InsetBox["638", {5.09505168, 3.95560926}, {-1, 1}], 
     InsetBox["639", {6.4783544, 7.38159885}, {-1, 1}], 
     InsetBox["640", {5., 3.83127307}, {-1, 1}], 
     InsetBox["641", {5.23163233, 4.12019696}, {-1, 1}], 
     InsetBox["642", {5.05781058, 3.88992321}, {-1, 1}], 
     InsetBox["643", {5.07826035, 3.90884483}, {-1, 1}], 
     InsetBox["644", {5.15948792, 4.01008086}, {-1, 1}], 
     InsetBox["645", {5.12315362, 3.95905073}, {-1, 1}], 
     InsetBox["646", {5.09871012, 3.92776645}, {-1, 1}], 
     InsetBox["647", {5.03554613, 3.84808843}, {-1, 1}], 
     InsetBox["648", {6.46228276, 7.06323082}, {-1, 1}], 
     InsetBox["649", {5., 3.79704681}, {-1, 1}], 
     InsetBox["650", {5.75787864, 4.89765956}, {-1, 1}], 
     InsetBox["651", {5.07109226, 3.86490379}, {-1, 1}], 
     InsetBox["652", {5.09597946, 3.89311939}, {-1, 1}], 
     InsetBox["653", {5.15125556, 3.96249219}, {-1, 1}], 
     InsetBox["654", {5.12086666, 3.92133499}, {-1, 1}], 
     InsetBox["655", {5.4945771, 4.43528884}, {-1, 1}], 
     InsetBox["656", {5.04218697, 3.81846559}, {-1, 1}], 
     InsetBox["657", {5.20754489, 4.02590423}, {-1, 1}], 
     InsetBox["658", {5.31238199, 4.16373368}, {-1, 1}], 
     InsetBox["659", {5., 3.74875927}, {-1, 1}], 
     InsetBox["660", {6.44621112, 6.74486279}, {-1, 1}], 
     InsetBox["661", {5.14302319, 3.91490352}, {-1, 1}], 
     InsetBox["662", {5.11369856, 3.87739394}, {-1, 1}], 
     InsetBox["663", {5.08437394, 3.83988436}, {-1, 1}], 
     InsetBox["664", {5.25560186, 4.04172761}, {-1, 1}], 
     InsetBox["665", {5.19690844, 3.9621486}, {-1, 1}], 
     InsetBox["666", {5.05359397, 3.77681771}, {-1, 1}], 
     InsetBox["667", {5.39313166, 4.2072704}, {-1, 1}], 
     InsetBox["668", {5., 3.70047172}, {-1, 1}], 
     InsetBox["669", {5.10718794, 3.80487616}, {-1, 1}], 
     InsetBox["670", {5.14672996, 3.85163457}, {-1, 1}], 
     InsetBox["671", {5.62862682, 4.53231772}, {-1, 1}], 
     InsetBox["672", {5.18627199, 3.89839297}, {-1, 1}], 
     InsetBox["673", {6.4253283, 6.41935951}, {-1, 1}], 
     InsetBox["674", {5.24256132, 3.96180502}, {-1, 1}], 
     InsetBox["675", {5.06500097, 3.73516984}, {-1, 1}], 
     InsetBox["676", {5.3406689, 4.05900422}, {-1, 1}], 
     InsetBox["677", {5., 3.63277574}, {-1, 1}], 
     InsetBox["678", {5.13000194, 3.76986795}, {-1, 1}], 
     InsetBox["679", {5.17976136, 3.82587519}, {-1, 1}], 
     InsetBox["680", {5.22952078, 3.88188243}, {-1, 1}], 
     InsetBox["681", {5.52890488, 4.26422964}, {-1, 1}], 
     InsetBox["682", {5.08402875, 3.67316318}, {-1, 1}], 
     InsetBox["683", {5.31992421, 3.95777306}, {-1, 1}], 
     InsetBox["684", {6.40444548, 6.09385623}, {-1, 1}], 
     InsetBox["685", {5., 3.56507975}, {-1, 1}], 
     InsetBox["686", {5.42573595, 4.07628083}, {-1, 1}], 
     InsetBox["687", {5.1680575, 3.71355063}, {-1, 1}], 
     InsetBox["688", {5.23361851, 3.78504626}, {-1, 1}], 
     InsetBox["689", {6.03298434, 5.03834817}, {-1, 1}], 
     InsetBox["690", {5.29917951, 3.85654189}, {-1, 1}], 
     InsetBox["691", {5.10305653, 3.61115653}, {-1, 1}], 
     InsetBox["692", {5.39728709, 3.9537411}, {-1, 1}], 
     InsetBox["693", {5., 3.47100533}, {-1, 1}], 
     InsetBox["694", {6.36406125, 5.74990902}, {-1, 1}], 
     InsetBox["695", {5.66467811, 4.32118887}, {-1, 1}], 
     InsetBox["696", {5.87247912, 4.61582223}, {-1, 1}], 
     InsetBox["697", {5.20611306, 3.6572333}, {-1, 1}], 
     InsetBox["698", {5.28747565, 3.74421733}, {-1, 1}], 
     InsetBox["699", {5.36883824, 3.83120136}, {-1, 1}], 
     InsetBox["700", {5.56323267, 4.09317043}, {-1, 1}], 
     InsetBox["701", {6.79217603, 7.69042266}, {-1, 1}], 
     InsetBox["702", {6.8, 8.}, {-1, 1}], 
     InsetBox["703", {5.13047778, 3.5234009}, {-1, 1}], 
     InsetBox["704", {5., 3.37693092}, {-1, 1}], 
     InsetBox["705", {6.78435205, 7.38084532}, {-1, 1}], 
     InsetBox["706", {6.32367701, 5.4059618}, {-1, 1}], 
     InsetBox["707", {6.77157745, 7.06312882}, {-1, 1}], 
     InsetBox["708", {5.52275468, 3.93725026}, {-1, 1}], 
     InsetBox["709", {5.26095555, 3.57579647}, {-1, 1}], 
     InsetBox["710", {6.75880285, 6.74541232}, {-1, 1}], 
     InsetBox["711", {5.15789903, 3.43564527}, {-1, 1}], 
     InsetBox["712", {5.37161612, 3.67856328}, {-1, 1}], 
     InsetBox["713", {5., 3.2477737}, {-1, 1}], 
     InsetBox["714", {5.7007294, 4.11006002}, {-1, 1}], 
     InsetBox["715", {5.48227669, 3.78133009}, {-1, 1}], 
     InsetBox["716", {5.89630341, 4.36498896}, {-1, 1}], 
     InsetBox["717", {6.7450155, 6.42134217}, {-1, 1}], 
     InsetBox["718", {6.11633142, 4.69932674}, {-1, 1}], 
     InsetBox["719", {5.64822227, 3.92075942}, {-1, 1}], 
     InsetBox["720", {5.31579805, 3.49435963}, {-1, 1}], 
     InsetBox["721", {5., 3.11861649}, {-1, 1}], 
     InsetBox["722", {6.73122815, 6.09727201}, {-1, 1}], 
     InsetBox["723", {5.19326765, 3.30517346}, {-1, 1}], 
     InsetBox["724", {5.4557566, 3.61290922}, {-1, 1}], 
     InsetBox["725", {6.37332239, 5.07605391}, {-1, 1}], 
     InsetBox["726", {5.59571515, 3.73145882}, {-1, 1}], 
     InsetBox["727", {6.71447246, 5.76591301}, {-1, 1}], 
     InsetBox["728", {5.9201277, 4.11415568}, {-1, 1}], 
     InsetBox["729", {7.1, 8.}, {-1, 1}], 
     InsetBox["730", {7.09423575, 7.69050379}, {-1, 1}], 
     InsetBox["731", {6.12792872, 4.40878904}, {-1, 1}], 
     InsetBox["732", {5.38653529, 3.36257321}, {-1, 1}], 
     InsetBox["733", {5., 2.94419299}, {-1, 1}], 
     InsetBox["734", {5.22863627, 3.17470164}, {-1, 1}], 
     InsetBox["735", {7.08847151, 7.38100759}, {-1, 1}], 
     InsetBox["736", {7.07900144, 7.0656567}, {-1, 1}], 
     InsetBox["737", {5.85720108, 3.86761666}, {-1, 1}], 
     InsetBox["738", {6.69771677, 5.43455401}, {-1, 1}], 
     InsetBox["739", {7.06953138, 6.75030582}, {-1, 1}], 
     InsetBox["740", {5.59040488, 3.49182543}, {-1, 1}], 
     InsetBox["741", {6.42296777, 4.74614601}, {-1, 1}], 
     InsetBox["742", {7.05998418, 6.43071699}, {-1, 1}], 
     InsetBox["743", {5., 2.7697695}, {-1, 1}], 
     InsetBox["744", {5.45727254, 3.2307868}, {-1, 1}], 
     InsetBox["745", {5.24443272, 2.97966185}, {-1, 1}], 
     InsetBox["746", {5.79427446, 3.62107765}, {-1, 1}], 
     InsetBox["747", {6.13952601, 4.11825133}, {-1, 1}], 
     InsetBox["748", {7.05043699, 6.11112816}, {-1, 1}], 
     InsetBox["749", {6.71366045, 5.11375965}, {-1, 1}], 
     InsetBox["750", {6.43029218, 4.44743822}, {-1, 1}], 
     InsetBox["751", {5.72505316, 3.37074164}, {-1, 1}], 
     InsetBox["752", {6.06617989, 3.81447391}, {-1, 1}], 
     InsetBox["753", {7.03998354, 5.78660268}, {-1, 1}], 
     InsetBox["754", {7.4, 8.}, {-1, 1}], 
     InsetBox["755", {7.39629548, 7.69058493}, {-1, 1}], 
     InsetBox["756", {5., 2.53935703}, {-1, 1}], 
     InsetBox["757", {5.26022916, 2.78462205}, {-1, 1}], 
     InsetBox["758", {5.48886543, 3.0151307}, {-1, 1}], 
     InsetBox["759", {7.39259096, 7.38116985}, {-1, 1}], 
     InsetBox["760", {7.38642543, 7.06818458}, {-1, 1}], 
     InsetBox["761", {6.72960412, 4.79296528}, {-1, 1}], 
     InsetBox["762", {7.02953008, 5.4620772}, {-1, 1}], 
     InsetBox["763", {7.38025991, 6.75519931}, {-1, 1}], 
     InsetBox["764", {5.99283377, 3.51069649}, {-1, 1}], 
     InsetBox["765", {6.43761659, 4.14873043}, {-1, 1}], 
     InsetBox["766", {7.37495287, 6.44009181}, {-1, 1}], 
     InsetBox["767", {5.76479413, 3.11209234}, {-1, 1}], 
     InsetBox["768", {5., 2.30894456}, {-1, 1}], 
     InsetBox["769", {5.26739576, 2.54390652}, {-1, 1}], 
     InsetBox["770", {5.52045833, 2.7994746}, {-1, 1}], 
     InsetBox["771", {6.73265564, 4.4860874}, {-1, 1}], 
     InsetBox["772", {7.03806434, 5.14500024}, {-1, 1}], 
     InsetBox["773", {7.36964583, 6.12498431}, {-1, 1}], 
     InsetBox["774", {6.39107152, 3.84530954}, {-1, 1}], 
     InsetBox["775", {7.36549461, 5.80729235}, {-1, 1}], 
     InsetBox["776", {7.7, 8.}, {-1, 1}], 
     InsetBox["777", {7.69814774, 7.69144631}, {-1, 1}], 
     InsetBox["778", {6.04072283, 3.20905398}, {-1, 1}], 
     InsetBox["779", {7.69629548, 7.38289262}, {-1, 1}], 
     InsetBox["780", {7.04659859, 4.82792328}, {-1, 1}], 
     InsetBox["781", {6.73570717, 4.17920953}, {-1, 1}], 
     InsetBox["782", {7.69321272, 7.07255383}, {-1, 1}], 
     InsetBox["783", {6.34452645, 3.54188866}, {-1, 1}], 
     InsetBox["784", {5.80453511, 2.85344304}, {-1, 1}], 
     InsetBox["785", {5.27456236, 2.30319099}, {-1, 1}], 
     InsetBox["786", {5.53479152, 2.54845601}, {-1, 1}], 
     InsetBox["787", {7.36134339, 5.48960039}, {-1, 1}], 
     InsetBox["788", {7.69012995, 6.76221504}, {-1, 1}], 
     InsetBox["789", {5., 2.02032649}, {-1, 1}], 
     InsetBox["790", {7.68747644, 6.45081514}, {-1, 1}], 
     InsetBox["791", {7.04808227, 4.52023465}, {-1, 1}], 
     InsetBox["792", {6.71596315, 3.87614518}, {-1, 1}], 
     InsetBox["793", {7.36246823, 5.17624083}, {-1, 1}], 
     InsetBox["794", {7.68482292, 6.13941523}, {-1, 1}], 
     InsetBox["795", {6.08861188, 2.90741148}, {-1, 1}], 
     InsetBox["796", {5.82294148, 2.58605489}, {-1, 1}], 
     InsetBox["797", {6.37459146, 3.24141558}, {-1, 1}], 
     InsetBox["798", {5.54912472, 2.29743742}, {-1, 1}], 
     InsetBox["799", {5.27978332, 2.0197535}, {-1, 1}], 
     InsetBox["800", {7.68274731, 5.8267231}, {-1, 1}], 
     InsetBox["801", {8., 8.}, {-1, 1}], 
     InsetBox["802", {7.04956595, 4.21254602}, {-1, 1}], 
     InsetBox["803", {7.36359306, 4.86288127}, {-1, 1}], 
     InsetBox["804", {8., 7.69230769}, {-1, 1}], 
     InsetBox["805", {5., 1.73170842}, {-1, 1}], 
     InsetBox["806", {8., 7.38461538}, {-1, 1}], 
     InsetBox["807", {6.69621912, 3.57308083}, {-1, 1}], 
     InsetBox["808", {8., 7.07692308}, {-1, 1}], 
     InsetBox["809", {7.6806717, 5.51403096}, {-1, 1}], 
     InsetBox["810", {8., 6.76923077}, {-1, 1}], 
     InsetBox["811", {7.3635089, 4.55438189}, {-1, 1}], 
     InsetBox["812", {7.03617042, 3.90900756}, {-1, 1}], 
     InsetBox["813", {6.11109143, 2.62365377}, {-1, 1}], 
     InsetBox["814", {8., 6.46153846}, {-1, 1}], 
     InsetBox["815", {5.84134785, 2.31866674}, {-1, 1}], 
     InsetBox["816", {6.40465648, 2.9409425}, {-1, 1}], 
     InsetBox["817", {5.55956663, 2.01918051}, {-1, 1}], 
     InsetBox["818", {7.68123411, 5.20350503}, {-1, 1}], 
     InsetBox["819", {5.28500427, 1.73631601}, {-1, 1}], 
     InsetBox["820", {6.7084601, 3.27377717}, {-1, 1}], 
     InsetBox["821", {8., 6.15384615}, {-1, 1}], 
     InsetBox["822", {5., 1.44309035}, {-1, 1}], 
     InsetBox["823", {7.36342473, 4.24588251}, {-1, 1}], 
     InsetBox["824", {7.02277489, 3.6054691}, {-1, 1}], 
     InsetBox["825", {8., 5.84615385}, {-1, 1}], 
     InsetBox["826", {7.68179653, 4.8929791}, {-1, 1}], 
     InsetBox["827", {6.13357098, 2.33989606}, {-1, 1}], 
     InsetBox["828", {6.42106422, 2.65211388}, {-1, 1}], 
     InsetBox["829", {5.85364572, 2.03559858}, {-1, 1}], 
     InsetBox["830", {8., 5.53846154}, {-1, 1}], 
     InsetBox["831", {5.57000854, 1.74092361}, {-1, 1}], 
     InsetBox["832", {6.72070107, 2.97447352}, {-1, 1}], 
     InsetBox["833", {7.35637769, 3.94186994}, {-1, 1}], 
     InsetBox["834", {7.68175445, 4.58488325}, {-1, 1}], 
     InsetBox["835", {5.2899404, 1.44725727}, {-1, 1}], 
     InsetBox["836", {7.03071279, 3.30403476}, {-1, 1}], 
     InsetBox["837", {8., 5.23076923}, {-1, 1}], 
     InsetBox["838", {5., 1.15447228}, {-1, 1}], 
     InsetBox["839", {7.68171237, 4.27678741}, {-1, 1}], 
     InsetBox["840", {7.34933065, 3.63785737}, {-1, 1}], 
     InsetBox["841", {6.14772481, 2.05201665}, {-1, 1}], 
     InsetBox["842", {6.43747196, 2.36328527}, {-1, 1}], 
     InsetBox["843", {5.86594359, 1.75253042}, {-1, 1}], 
     InsetBox["844", {8., 4.92307692}, {-1, 1}], 
     InsetBox["845", {6.73103701, 2.680574}, {-1, 1}], 
     InsetBox["846", {5.57988079, 1.45142419}, {-1, 1}], 
     InsetBox["847", {7.0386507, 3.00260042}, {-1, 1}], 
     InsetBox["848", {5.29487652, 1.15819852}, {-1, 1}], 
     InsetBox["849", {7.67818885, 3.97093497}, {-1, 1}], 
     InsetBox["850", {8., 4.61538462}, {-1, 1}], 
     InsetBox["851", {7.35296549, 3.33429235}, {-1, 1}], 
     InsetBox["852", {5., 0.865854211}, {-1, 1}], 
     InsetBox["853", {6.44935933, 2.07191468}, {-1, 1}], 
     InsetBox["854", {6.16187864, 1.76413723}, {-1, 1}], 
     InsetBox["855", {6.74137294, 2.38667448}, {-1, 1}], 
     InsetBox["856", {5.87624013, 1.46144098}, {-1, 1}], 
     InsetBox["857", {8., 4.30769231}, {-1, 1}], 
     InsetBox["858", {7.04559899, 2.70553686}, {-1, 1}], 
     InsetBox["859", {7.67466532, 3.66508253}, {-1, 1}], 
     InsetBox["860", {5.58975304, 1.16192477}, {-1, 1}], 
     InsetBox["861", {7.35660033, 3.03072732}, {-1, 1}], 
     InsetBox["862", {5.29694052, 0.870089609}, {-1, 1}], 
     InsetBox["863", {8., 4.}, {-1, 1}], 
     InsetBox["864", {5., 0.577236141}, {-1, 1}], 
     InsetBox["865", {6.4612467, 1.78054409}, {-1, 1}], 
     InsetBox["866", {7.67648275, 3.35945387}, {-1, 1}], 
     InsetBox["867", {6.75099385, 2.09181272}, {-1, 1}], 
     InsetBox["868", {6.17259947, 1.47145777}, {-1, 1}], 
     InsetBox["869", {7.05254727, 2.4084733}, {-1, 1}], 
     InsetBox["870", {5.88653667, 1.17035154}, {-1, 1}], 
     InsetBox["871", {7.36016097, 2.73049972}, {-1, 1}], 
     InsetBox["872", {5.59388105, 0.874325006}, {-1, 1}], 
     InsetBox["873", {8., 3.69230769}, {-1, 1}], 
     InsetBox["874", {5.29900453, 0.581980693}, {-1, 1}], 
     InsetBox["875", {7.67830017, 3.0538252}, {-1, 1}], 
     InsetBox["876", {6.76061476, 1.79695096}, {-1, 1}], 
     InsetBox["877", {6.47211575, 1.48435778}, {-1, 1}], 
     InsetBox["878", {5., 0.28861807}, {-1, 1}], 
     InsetBox["879", {7.06039496, 2.11021605}, {-1, 1}], 
     InsetBox["880", {6.1833203, 1.17877831}, {-1, 1}], 
     InsetBox["881", {7.3637216, 2.43027213}, {-1, 1}], 
     InsetBox["882", {8., 3.38461538}, {-1, 1}], 
     InsetBox["883", {5.89049634, 0.879094148}, {-1, 1}], 
     InsetBox["884", {5.59800906, 0.586725245}, {-1, 1}], 
     InsetBox["885", {7.68008048, 2.74986525}, {-1, 1}], 
     InsetBox["886", {5.29950226, 0.290990346}, {-1, 1}], 
     InsetBox["887", {6.77163202, 1.4972578}, {-1, 1}], 
     InsetBox["888", {8., 3.07692308}, {-1, 1}], 
     InsetBox["889", {7.06824265, 1.81195881}, {-1, 1}], 
     InsetBox["890", {6.48298479, 1.18817148}, {-1, 1}], 
     InsetBox["891", {7.36979607, 2.12861939}, {-1, 1}], 
     InsetBox["892", {6.18711163, 0.883863289}, {-1, 1}], 
     InsetBox["893", {5., 0.}, {-1, 1}], 
     InsetBox["894", {5.89445601, 0.587836757}, {-1, 1}], 
     InsetBox["895", {7.6818608, 2.4459053}, {-1, 1}], 
     InsetBox["896", {5.59900453, 0.293362623}, {-1, 1}], 
     InsetBox["897", {8., 2.76923077}, {-1, 1}], 
     InsetBox["898", {5.3, 0.}, {-1, 1}], 
     InsetBox["899", {7.0774517, 1.50914214}, {-1, 1}], 
     InsetBox["900", {6.78264929, 1.19756464}, {-1, 1}], 
     InsetBox["901", {7.37587055, 1.82696666}, {-1, 1}], 
     InsetBox["902", {6.4875656, 0.890505824}, {-1, 1}], 
     InsetBox["903", {6.19090296, 0.58894827}, {-1, 1}], 
     InsetBox["904", {7.68489804, 2.14123277}, {-1, 1}], 
     InsetBox["905", {5.897228, 0.293918379}, {-1, 1}], 
     InsetBox["906", {8., 2.46153846}, {-1, 1}], 
     InsetBox["907", {5.6, 0.}, {-1, 1}], 
     InsetBox["908", {7.08666074, 1.20632548}, {-1, 1}], 
     InsetBox["909", {7.38327137, 1.52102649}, {-1, 1}], 
     InsetBox["910", {6.78801957, 0.897148359}, {-1, 1}], 
     InsetBox["911", {6.49214641, 0.592840172}, {-1, 1}], 
     InsetBox["912", {7.68793528, 1.83656025}, {-1, 1}], 
     InsetBox["913", {6.19545148, 0.294474135}, {-1, 1}], 
     InsetBox["914", {8., 2.15384615}, {-1, 1}], 
     InsetBox["915", {5.9, 0.}, {-1, 1}], 
     InsetBox["916", {7.09068171, 0.904045947}, {-1, 1}], 
     InsetBox["917", {7.39067218, 1.21508632}, {-1, 1}], 
     InsetBox["918", {6.79338986, 0.596732074}, {-1, 1}], 
     InsetBox["919", {7.69163568, 1.52974401}, {-1, 1}], 
     InsetBox["920", {6.4960732, 0.296420086}, {-1, 1}], 
     InsetBox["921", {8., 1.84615385}, {-1, 1}], 
     InsetBox["922", {6.2, 0.}, {-1, 1}], 
     InsetBox["923", {7.39334385, 0.910943536}, {-1, 1}], 
     InsetBox["924", {7.09470268, 0.601766413}, {-1, 1}], 
     InsetBox["925", {7.69533609, 1.22292778}, {-1, 1}], 
     InsetBox["926", {6.79669493, 0.298366037}, {-1, 1}], 
     InsetBox["927", {8., 1.53846154}, {-1, 1}], 
     InsetBox["928", {6.5, 0.}, {-1, 1}], 
     InsetBox["929", {7.39601551, 0.606800752}, {-1, 1}], 
     InsetBox["930", {7.69667192, 0.91701023}, {-1, 1}], 
     InsetBox["931", {7.09735134, 0.300883207}, {-1, 1}], 
     InsetBox["932", {8., 1.23076923}, {-1, 1}], 
     InsetBox["933", {6.8, 0.}, {-1, 1}], 
     InsetBox["934", {7.69800776, 0.611092684}, {-1, 1}], 
     InsetBox["935", {7.39800776, 0.303400376}, {-1, 1}], 
     InsetBox["936", {8., 0.923076923}, {-1, 1}], 
     InsetBox["937", {7.1, 0.}, {-1, 1}], 
     InsetBox["938", {7.69900388, 0.305546342}, {-1, 1}], 
     InsetBox["939", {8., 0.615384615}, {-1, 1}], 
     InsetBox["940", {7.4, 0.}, {-1, 1}], 
     InsetBox["941", {8., 0.307692308}, {-1, 1}], 
     InsetBox["942", {7.7, 0.}, {-1, 1}], InsetBox["943", {8., 0.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJxde3k8Fe37v33nzDlnzjk4h8pWlChKEXMVIWtUskQiLUKyJUukkkSWQpRE
EdpIdkplLSGpLEXIFlEoCvW7n+9T/D7P/HPMa2bu+1re1/t6X68ZSxwOmztx
sLGx3eNkY/vn93+PxfD3r/H6mALXDsk/5y3E3+v+O2qWfm59RcTxs39NbZOc
v996X6NrR4HEn/OP8/d/zz5v2p77ikjrutOjnSfx5/leIofCWvHmrSTEq3Oj
673EkGXEztv3JObXM1LZI7MllgXHNT0TtI+9IiJ5Cg49jGT9uT46v36y9P5D
jx9+JrqP27bpofX+vb+XaGgTyFM5ywJ1vYY3IYGfiSdzJfej7i6s/6D+akeB
KxN4m3Z23YZXxNiPg9/WHWD+uT45v/55DzaHT7KfCXb7m5LhoSy4ahXfatA8
QVCGr4YWv5GEfdCNnu8l5JeuIZU6MMH+RODduBsThMwbTWHPOwv7ZSQqx8ps
EQeViP7H2HAzsTbgzH0pHXE4qZg1YtYwQhScJ86dsmNC4yvdeP2DE8St+2Ph
H06yoIVpi+7vIartOpsXE+J/1vsxb9+apyX3mqunicG9w2Sz15LgHOq9Oz1y
mrCeU5BOy5YALTns+IziBFHy5BuviTUTXFLOkY47jRDbVDsPM9TF5+0TUXHb
EisjBqn7Ha57xTUTk8+2ugstFoOCd74zV2CakIl/8zY1iPXneg/R5qCSEMoU
g21Wl+5+GxsnnDVXC4ms+bver3n76ld0hVqXzhH6lIgrg68koXPv8qSLE1PE
2MqQiNTtTEiweiic7zNH8Hx9uv7lTQmwILutzp4dJo4Jv9yWTRObt+/fQxSO
MawdvzLmiKvHymUc/VkQUv/KZpVnM5FwzubYmRkGWJ6jWWTcmyKuyLjSwhXF
oXuD7a5Vnj3ESkbhuMgUA3QeNnaP5Y4T4kVuWANJDAKv6xYoFs8StxscsG8m
TJh7fmND1g52OL8+TlGk+Q++g9nhrz8kYfuXftXDxKK8d/sbvzBgUDnVz3w5
OzA9FWxYNyTgZe5vctGhKeJRP2eKB8+C/f/WEx3673SwHk6xQWxD95sH3iwI
Ptf70+LwLPFCMFOSR04cllAsaaNbm4lcUcpJjrd0aJDzke6JGCcwU473UZ8Y
f673ED8T+k0SmunQp0B/JF/JBnwKiebGekw4cKn2sGH0MFFpOeg/+ZwOu9OV
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
/K++/P+u/zn+H0e50+E=
      "]]}}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.693269104687224*^9, 3.693269183174713*^9, 
  3.6932695245362377`*^9, 3.6932695591172156`*^9, 3.6932696395768175`*^9, 
  3.6932697976478586`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
b2waodLqsGQvvLBpWBwU4q74lQaAb3HkrJCa8qA1T8Sxr3Spels1GLCsEh11
RHREGp6Cy+Yt6VqMLIaKIhDjj1ACL7sxyxBZMV3nVw5E4CQjhgMa0mjniWT8
E/17GiMyOVoMLlS/KiA1WaiTSbxuQ0SaicPIRs1zby9GW3mQNA2XVIPe4tVr
eI2094k9DQ9w6SpJe1WDJusF4qm8KrcG/L8A7srX3Fa9iWqwgpNh0GhhiTfN
U8ertjMFw8xwPsM2THvkdrqsgI7UbQarPTeR/asY3hQCQQ/mArO1u6rPEQRm
fIZZMqTqbhIAstjKrgDIplE9G4DQUgCtnUWP9eIPx6/WAN021RyPpoiBg0SN
yVyPFXOVBTUNrlKNdWbxvfbPrJjjT+VDROO2MI5g+ZUTJ3yqTOQmFwy6/ywQ
ElsrKcBVx3z4w5um15KXi4O3IoCmHURZ9SrhTy0ELLqEU3ikyPtorz7DLYFp
otZVSzAQVLO6dkmvQSPLvUSAX2wJ/GLFMxg9OApARnZTd1jqqEUnBWO/uLKS
/NzPPPxw9Lt8TGwk72cTKFS4DniX1vlt4fiYz+pU/GksKNZaDmKS1xBPNBuA
IArH+Axpn/uT6enod/nYP33rW7NmqHbsSHmPnELMDoCw4NHhc+F3w8/9/t69
WaL43QMHsj5Hr/3P/97fywF1abUm+LeNWkp9b73rQx+ymLK618n9HD26DrQb
+DEf/OQnt77c7YoxZfk2hb7l3l4b0wpOO1AQfIlv/+R737v1R7OzL9Xt1x97
bAtq1C/f/uXbv3z7l/j2mi24Jrcf+rf33EO/1R7k5Zv+3bup8Ohfq5uKBfXy
TZubid9YXnYRMrvV1/D2GnxtB2+fREtVgEdanfRks2cHUYJId+LZe3GAUhzn
oxVFY1vXGHCsE71Gphy4Lm/v7RVkTKz8G2PRcLnYfqJQgf922ZH4y/dUbJv7
uugkrLaiabX31HxEKKDUabVL5czNdZeJ4rpMlDlLS+JrYzM7NucqYgN+I/AE
jCFAKT2I5G+1JljmeKrAqrj6jEWxeDWMDNV5D8kdamF92qWodLi4r/jKzduC
VIV4r8hTpGraVSRFB7TB3LpPaqUHO1UoJ6Lrh8pYgWqSUujVW/+eM9u1QRou
grTFFwOHRVY2TOZHUERacV9TiFKlx2NQvCS6T9Pp3eklEiYha5aGsP8knAw4
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
WDnc88OR/IAW5SpHRsHsWBfz4ye9Ae0Wz/HCC3EaZZ8ulMtFo87CuRFnGu1M
B9OBZT81C0UoMD5XGJTuMXNwDmUM5mztvFVSa64OlktlzkUOVqVPr5xtDW+9
8MpXFnHWOz9qv1JaOsxtMnMDPNcT+9z0HT93zEvHrCKO4bg5vOAN17w57zeO
YU275x1KWDvp8/mxI4+/du3iUOePQRh/2e/7aAJT3SKg1E7ofHBHBH6w3IaR
N754utjJDZU7OVB8wDfDGileo4OaalqXzPpa6QNA+Ay2Q1v9xUtiE2ErFvbU
mAhxrjZO/SfVmKwiVTDh5C6d3XAe8JhiTlCqotg9sFTDsGnuRtnNjirL0hrO
fCyhzq6tLnm9mz8Iamhm5lfg1ACfNPGBVvHGqyteoi6gWjaX152ZeN75GDoC
3M1hmgDRcwNUoqJSwGcec5W38f5aEeL/2JWh1tY/+c7v9C7NBa0y46FlQbYr
4BLLOvS3wve5+HPSbT/MlQuL9z5jZvYbi604OF7a9VMs/iSDB9IOx8iXwrbG
fXecZHN1Yf+fuZ1wK9hzRB1nlZ7rqac2bC9Qy3V8oeNzRYNRepi1DXdAVkfI
i6w/Wf4AxkCWSUup36W4WpyS5kRDvKKwf/rTFxYWPipDDBTB5hML3rUsrdvh
qQPHUarFRw8Uv2nN2vzDelmdMstL7K2eZ46rWAuTJ8QmFuqi7z3hJr6IRs3N
tyfQbSLIHPfRy3MvuGxSq6VklDEtf+4JF5g79v+uMNKV0kwAp9yqlg3h71o/
lJ2RplRZcxUXChl3SL2GUMnWrR8rw5U5O1Tm7trPKSF0yb0Abtfu0PGNT40b
+RmP4KSnGDfLb9GYt91y4KGS2ppVaRB3DqgLMFJQV9zrBL2COsU3nicqvIC7
qv098proCOq1DUROC6jvQDM1pvreIvS7aE7+lm+4e36lCB5XnodNNdou7zx2
Fc6jjOHWXZ2ucLSXlsrVM/8O//y2QvNsmdsA2rj26KZLPdmxmQosrQbqAuP+
aZeWPgtmhtBvlIITJBpox4QvkHuCbqzKrqWA99BYpYCutTTJ3Mys4oIGmscR
tUZ2y62jwsv7PrGVd5jzC+MGd9neUZmh7zK9/pSz1mN2PuENjq8smmPz5cLc
u/wLLGkOkyBZFIq1evwpi/UDw85rh9HGIg99gUgeGCt85x8EdsW4dhqQm8gx
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
4sw9+DUcfwzvbUfSs2BpuW0IP6+vI5CJFw0+wKTwzLsbxyNFI7YixtmcMiUx
KdT4IJ2/buOGyzqUmLyqvsYmlcgipHo8x4rMs4aeICdLbvxcS8CS2du/tBFO
fLohs1fMELEOo5vNogjT4nBUs7Y6mbYg/y1lPNpXBEQxO2ZsfS9i1mSvW4o1
KK/5MoyTxF/1xuTQk6fRA8MxDPmbVPpz/GBeLBwZ+BuSbtMvrmJK1ZxYnkkB
0yKESTJRSl/1IC4908TCy17raIbsGobcqCXOhtxYg5geZNYgpt64ToPoTGkZ
RL9nyGl+5knEnoj99icuhCeeJY3V6ZhtMwlrJV0oMbXboG/pXVdbKYKTIMQ2
FKVnx3Df87QNERt0tHVpmrJTIHSlj1W1zp45G7746uLq6Nz89C/LRNUzYe0f
vNoJ3zn30VdeB/jaM9c+98ev3rwvhe1WNrfR1H7pwxGlCLtKj65/Gz8jZey3
Jsl7/tgSd5PyUEVheAyF8Z8cQ2f891K/c0l0oFdjQbvYBcdG5gMCAXE/nQmx
zjl0NqdF6spWFOdxhypiJs2d3fDnWF1P10yvctIOPMPGYO4x12sMWonDYamo
dXJQb/A1+HWO/xhVZqLxFj1Pyv/L6gq1+lxm+QTqIjxVSEoVMyFGTUiYLmsn
KOrgjHtSIqbOzi1ocWXndjlIl9llvcxsy7AAVGZv0VlIoUXDS2qRO9JTvfz5
+2TVn7anx+1MWyjuTd+9V+3SrMw85PBQdg1p8ZAjq6+11zAKxTLdRKH2OfKb
ZbrBt2KZbjK+zONO59dcqUYlvsti+FZ45rP4TJBu8M7AUbybECuCy2iR0W6u
hMzKujS1+CNVii2y2UXDxwAbglfzMr/wha0znbEwPnLr6NxHbz6XThYKDo/R
/03ztfWzG7ERngTwAE9zIzVthnDLz8U1vCzaeJrARGzCJ/oLO3b8yCShvvrV
LcyvvLBJeAZMHbAVoLJgnvur99/8nXPh/tfdAjiGTf/DAwdwh5HVBkyIWfWz
8FgZgqPSb2qIa07ddriU3M6RjSh46XItrVoJb+Obcpst7IkIb7Tf4fMkpfui
mOCvdKvC/mWjCEh8OwxGyZOdOHzl0ism0xDfsWUIvqtFsO1k8sywNXsNJdSa
87lMBPzusWOtPvcXu3bFz5nTzMQHtgscckQFrxnG08QAQoLuPR7/tR7/Ne9s
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
x104eMF6B1HRScqhC8pBVAkQCeO/G3weXrzk4b/00z89CrfQNVPXdZSPEGvs
TrepBy9inHiTknUPzfgjsOJYemp7XCpoxeVmq5UikeFsmP4Wlz07o0dCINN5
NFnWhZuojVm5P1EkPU+zk2p7gNuc3GI/oXYer7zRIboz6Hn4GpjUcF46fbiy
Yiz1tqk4VhLesAKglIinfUStqllVT1WFYaWRkBTG+GwSu72lCkP53buZRgvJ
AEV4xRJlIv3pouLQt4ojo5R0W5xgCQXa50nr5SVoetPDgtMTdjsb1nOfGpmX
tMOU8sFKrTb1SJu0+p3uqmu8c8+D2BXlH8yPsqK+vrIs0Syd52w5k1oOpLpw
kpQoGigrPSsYtDVXWdxFCvzu3kQVLKIfy+jIjRhIiET+ws965iJrFTgjmUcA
6mK3Iw/eRdcMIMVRFi9YJLWiLA+vG822CzhlHumUOgamRnYOMsfDJR7Qpmly
UwfKUjklbBfRqZnpFwnGI7gRobnCm8dBVJE9xupQFYSXlI3raJ918UD5oynD
dQ1OE2NYFweRMna6wCnBYRZgHc3iKBowhNvBe6WhdrDC4VaM4TNltswCezqD
Y7ymxYg6s3o0VnXGuNpXL0zSSsh7wYLl4udal2uhUPCiJdJe5N2nbJC3X4tD
v9xt4Ur7ssjGW5d3ohnghs5ipijuPbe/EH6hTeAYsmeRTx60YMmPxiUQr5bc
xd4IpwykPI1+KvcYtfSugV3vgZwTy1EGbnNPehfkuJj6wOoUCuzK3G34Cx/h
T0s5HvwF34EFgSn/2F8W68Y6X8qOvWrmtQh8VGZISIk356xRQHS72RZ1sKrY
rTHP2JDspepcyYyenJNYDh/+8KaUxSK9rq+3KOaFf3MzoGwAI117tiqTN+5/
t/vDc7ct4yzcWU85iMFi3Xf1IG0qKV7ELRwOt8OnT7RL0FC+rSfJkBge73Y3
KnGp8hHEvWIVYEwCTwV4lb/kSixg51632w7DrnTdhnb0vhbD3h6e0u6rqmX0
y3iyVQdJmir+iiomAroVRJaJPrX5aoV/Fms0iqcevPD5vD6fC77pXYU1sopa
+gjzsWqJ14aNAMa8pgX95koXpF2vtp+WwhpTqr7Z2u6elk9C00b2Zh0G4UiN
TFOnWA79VyosSPITWYAAj4MBKSDU0bNGQ4/6rCRZSl6CrztYJ5gAOF8zZZ2W
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
/V97E3Wv\
\>"]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.290438389`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.290438389`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.580876777`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.580876777`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.871315166`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.871315166`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.16175355`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.16175355`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.45219194`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.45219194`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.74263033`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.74263033`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.03306872`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.03306872`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.32350711`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.32350711`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.61086683`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.61086683`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.89822656`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.89822656`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.13330032`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.13330032`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.36837407`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.36837407`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.5571302`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.5571302`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.74588633`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.74588633`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.89519285`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.89519285`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.04449936`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.04449936`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.16120092`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.16120092`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.27790247`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.27790247`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.36826915`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.36826915`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.45863584`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.45863584`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.52810282`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.52810282`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.5975698`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.5975698`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.65067148`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.65067148`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.70377317`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.70377317`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.74419031`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.74419031`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.78460746`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.78460746`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.81526889`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.81526889`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.84593032`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.84593032`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.86913258`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.86913258`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.89233483`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.89233483`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.90985916`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.90985916`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.92738349`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.92738349`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.9406003`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9406003`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.95381712`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.95381712`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.96377437`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.96377437`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.97373161`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.97373161`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.98122703`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.98122703`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.98872245`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.98872245`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.99436123`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.99436123`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "4.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJxTTMoPSmVmYGDQAGImKEYFAg53Gyc87Zp2yR4Xv1aQHch/hJOfE3Q+/MLD
1zj5+w2+PO6a9gknP41z7lxdm+84+TyPXIHm/cbJj4ot79jpzOCAi7/2pDfQ
vUw4+UG1HGp8j1lw8p+elMmYqM+Oky8xSfzQfwFOnPzYg7uk8j5x4eRHvlyy
lqGUByc/VLDfYfJ3Xpz8uudF96I0+XHyYybV207UFcDJP/hh7i3Bpbj565sE
yifJCOLk72nw7ZGuxM139DZbtOQqbr6+b/CfYzJCOPmy/gVhL5Nx8x9o3Jnv
OQs3X+r855crL+DmPz/jy8b7CzdfZ3qwcoGyME6+4h/+m1edcPPFE8/0WSfh
5l/8LP3kbyVuvuiu/RYHJuLms6xaILdpMW7+l5mNLEu24uYn5M3ZqXMYN9+F
Pzl/6wXc/K+18quf38LN11MweCb5FDe/0MT/+LE3uPmbPfJWFH/BzZ/K1XvF
8hduPoQWgfMBBOoq/A==
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932698198981314`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "159", ",", "160", ",", "161", ",", "168", ",", "175", ",", "178", ",", 
     "185", ",", "195", ",", "201", ",", "213", ",", "221", ",", "234", ",", 
     "242", ",", "255", ",", "265", ",", "276", ",", "288", ",", "298", ",", 
     "308", ",", "320", ",", "334", ",", "344", ",", "355", ",", "368", ",", 
     "383", ",", "396", ",", "407", ",", "416", ",", "429", ",", "439", ",", 
     "453", ",", "462", ",", "474", ",", "482", ",", "497", ",", "509", ",", 
     "522", ",", "528", ",", "537", ",", "541", ",", "547"}], "}"}]}],
  SequenceForm[
  "ids = ", {159, 160, 161, 168, 175, 178, 185, 195, 201, 213, 221, 234, 242, 
   255, 265, 276, 288, 298, 308, 320, 334, 344, 355, 368, 383, 396, 407, 416, 
   429, 439, 453, 462, 474, 482, 497, 509, 522, 528, 537, 541, 547}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932698199001317`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99415583`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99415583`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98831166`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98831166`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97996075`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97996075`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97160985`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97160985`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.95969039`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.95969039`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.94777093`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.94777093`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.93078527`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.93078527`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9137996`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9137996`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.88964947`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.88964947`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.86549934`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.86549934`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.83127307`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.83127307`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.79704681`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.79704681`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.74875927`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.74875927`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.70047172`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.70047172`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.63277574`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.63277574`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.56507975`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.56507975`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.47100533`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.47100533`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.37693092`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.37693092`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.2477737`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.2477737`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.11861649`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.11861649`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.94419299`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.94419299`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.7697695`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.7697695`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.53935703`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.53935703`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.30894456`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.30894456`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.02032649`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.02032649`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.73170842`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.73170842`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.44309035`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.44309035`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.15447228`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.15447228`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.865854211`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.865854211`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.577236141`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.577236141`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.28861807`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.28861807`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJxTTMoPSmVmYGBQAGImKIYAEQcILeAA46dfOv6D/Qs/Tv65Jf0f+V/g5u94
kbLy6zXc/AlHJybdPoqbL7x+l3rRWtz8aTMev+GYipv/949hj30Rbn7ZCQ2t
Mn/cfJ68KV0Mcrj5C4UZXne94cPJz5lwtq5oGW6+6rJPwlEJuPl9FzgbSv/y
4uRzJp18NWEWbn4ji8auN/y4+dx8+h0erTw4+cd3uxTOO8KNk1/ItCn6CzNu
/soKoeMFvzlx8s+1nzJ++4kDJ3+rz0verb3sOPndq+Jf1miw4eRf3auaPSuA
BSdf/uLrN9srmHDyf4f5vV+gyYCTv25n4mPhrb/tcfHTj6q9eCr2HScfYt8n
nHw+rddA817j5Nc5lr7dXvEIJx9i3iWcfAYoAABX6v09
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.693269819914132*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "547", ",", "553", ",", "560", ",", "568", ",", "576", ",", "586", ",", 
     "594", ",", "607", ",", "614", ",", "622", ",", "628", ",", "640", ",", 
     "649", ",", "659", ",", "668", ",", "677", ",", "685", ",", "693", ",", 
     "704", ",", "713", ",", "721", ",", "733", ",", "743", ",", "756", ",", 
     "768", ",", "789", ",", "805", ",", "822", ",", "838", ",", "852", ",", 
     "864", ",", "878", ",", "893"}], "}"}]}],
  SequenceForm[
  "ids = ", {547, 553, 560, 568, 576, 586, 594, 607, 614, 622, 628, 640, 649, 
   659, 668, 677, 685, 693, 704, 713, 721, 733, 743, 756, 768, 789, 805, 822, 
   838, 852, 864, 878, 893}],
  Editable->False]], "Print",
 CellChangeTimes->{3.693269819921133*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "0.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJxTTMoPSmVmYGDgAmImKIYAEQcYyxgMRHHy08BADCd/1kwQEMfJP3sGBCRw
8iFACicf4h5pnHyIe2Rw8iHukcXJh7hHDicfAhTgfACMPjiT
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932698199251328`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "893", ",", "898", ",", "907", ",", "915", ",", "922", ",", "928", ",", 
     "933", ",", "937", ",", "940", ",", "942", ",", "943"}], "}"}]}],
  SequenceForm[
  "ids = ", {893, 898, 907, 915, 922, 928, 933, 937, 940, 942, 943}],
  Editable->False]], "Print",
 CellChangeTimes->{3.693269819928133*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1: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

     "], PolygonBox[CompressedData["
1:eJxNlX9oVWUYx885N8dMgtjmMszdxsql2O0KjRFettFoxhoNLKbTiXe1wuBy
r5l3ODTCce0yZ/3lfpThcOwOoTYZ/rUNogkbNkRcilTkH1owQwU1SMYyer68
n/D+8eV+z+d5zjnved/neW75e6ltycDzvF9MT5h80wrTSlOBKW0aMp02HSb2
tGk1Oe+So1grsXLTC+RUk6NYjFg1XjnxkOd9auo1HTA1hByTbzO9CJOvNXkw
+TLTYuCYfGBaCByTv2W/PwSOyV82jcHkJ03fwORHTT0w+QHTAZh8t+lDmHzK
tA0m326qg8k3maIw+ZjpWVOFaY1pFT5KLGJ6khzF/rLDuO87Jn/d9CtMfs40
C5MfN43B5AdNAzD5I6bPYPJ7Te/D5JtNb8Pkq0yvwuTLTM/D5AtMK2Hyd+0o
HniOyf9sug6TnzH9CJMfo67OmjLU0CQ5ip0gNolXznd2rmdN35pOm8pND2x/
HprWU0dfm7LUUC7k7lFuP7EcPsu935tmeIZ81tZ/zHdM/hlTKUz+d1vHDc8x
rWPE1Mc7NobcOvSs5cDFvjIdJaeKHMVWEDtm+picGnIUKyZ20LSbnCZyFKsg
9pHpTXJayVGsmlgrXjlF9LV6t9Rz3zJtmuKb1nsuR7ENxL40HSfndXIUqyfW
YfqAnA5y6mEV1PVL1HyEWq+BxeiNd2BN9E4HrJ3e2g9L0Xufw7rpzT7YAL17
BjZKb0/DJun9a7DLzIZ/YLeYHWtDjgXMli2wMmZPC6yW2bQP1kbdZWEPqa05
6qGfOlEtZMjrx+/j3JfJ/4l7VXcjvmOt9Il6Ie6556huEnnPyHCt9WTonU/I
P0FvZWFj9OIobIZenYXJq5d/g8mr1/+GFTALimBlzIpNsCpmyVZYM7OmDbaX
WZSGHWFW9cIGmWVDsHFm3RRsjlm4AJPXrLwNk9cs/Re2ijoshMX4b9LeNPCf
FMNH6RP9j4XpidXkRGFH6cvteXue4HoLMfVlXR7bzvVaYurLyjxWx7XqbwPv
1bs2e64WNHeeoybk1bd3PMdu0KfnYVP0ZR/sOH2ZgNXTy3p2I7F6vHKKqUnV
4s3AzRUx+aXArV2z5SnWXM3sUUyskP1Wr4epadWx1r7ku32OU4s72NcGfC3f
HcVvJk91miRHe1TJ+2/Tw2Ly8/T4Nfw4M2AaP8iMOIPPMEP68Pv5Bn3LJZ65
xD4cgo1wFq/wPTf5RnnlNLJurX8nvztY/07OTOe07Lln3OGcrsDOc07DsARn
o3u7iCXww+yN+vaLvHckue4ipj6egM3Sx1dhXfAJnjeMv8r7las+vw+TV58X
+44V0ecR2Cb6vBG2lT7fA2ujz1OwNH3eDeulz0/Chujzc7Ap+vwibIE+/xMm
rz5XHYrV8L/yluk16rIGHyam/5lmcjqogxZYC9eqj13kiL/MMzLUUpz4//eU
khMmT76EORTG+6yxEL/IN4jJz/ONF/ET7ME5/Cn26CS+kz1NwTvZ8z34dt+t
Vb2QZs0RchR7gzOM4Ct9l6teGuKeefriEkw1UEzuI2pE7BH1s0SvNPmPe0i/
Sd/dr5jqfl1ejn51nSR2heetg8tXEi9hb7Xf93y3jyV47WEp56Gz+YN16tt6
uD/NdyRhu9iXnO/y7/EM+QucwyL8Aucwjz/Fr3JzXMfZtx5YD+9v5zqH7yT/
PwLkpbA=
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1:eJxde3k8Fe37v33nzDlnzjk4h8pWlChKEXMVIWtUskQiLUKyJUukkkSWQpRE
EdpIdkplLSGpLEXIFlEoCvW7n+9T/D7P/HPMa2bu+1re1/t6X68ZSxwOmztx
sLGx3eNkY/vn93+PxfD3r/H6mALXDsk/5y3E3+v+O2qWfm59RcTxs39NbZOc
v996X6NrR4HEn/OP8/d/zz5v2p77ikjrutOjnSfx5/leIofCWvHmrSTEq3Oj
673EkGXEztv3JObXM1LZI7MllgXHNT0TtI+9IiJ5Cg49jGT9uT46v36y9P5D
jx9+JrqP27bpofX+vb+XaGgTyFM5ywJ1vYY3IYGfiSdzJfej7i6s/6D+akeB
KxN4m3Z23YZXxNiPg9/WHWD+uT45v/55DzaHT7KfCXb7m5LhoSy4ahXfatA8
QVCGr4YWv5GEfdCNnu8l5JeuIZU6MMH+RODduBsThMwbTWHPOwv7ZSQqx8ps
EQeViP7H2HAzsTbgzH0pHXE4qZg1YtYwQhScJ86dsmNC4yvdeP2DE8St+2Ph
H06yoIVpi+7vIartOpsXE+J/1vsxb9+apyX3mqunicG9w2Sz15LgHOq9Oz1y
mrCeU5BOy5YALTns+IziBFHy5BuviTUTXFLOkY47jRDbVDsPM9TF5+0TUXHb
EisjBqn7Ha57xTUTk8+2ugstFoOCd74zV2CakIl/8zY1iPXneg/R5qCSEMoU
g21Wl+5+GxsnnDVXC4ms+bver3n76ld0hVqXzhH6lIgrg68koXPv8qSLE1PE
2MqQiNTtTEiweiic7zNH8Hx9uv7lTQmwILutzp4dJo4Jv9yWTRObt+/fQxSO
MawdvzLmiKvHymUc/VkQUv/KZpVnM5FwzubYmRkGWJ6jWWTcmyKuyLjSwhXF
oXuD7a5Vnj3ESkbhuMgUA3QeNnaP5Y4T4kVuWANJDAKv6xYoFs8StxscsG8m
TJh7fmND1g52OL8+TlGk+Q++g9nhrz8kYfuXftXDxKK8d/sbvzBgUDnVz3w5
OzA9FWxYNyTgZe5vctGhKeJRP2eKB8+C/f/WEx3673SwHk6xQWxD95sH3iwI
Ptf70+LwLPFCMFOSR04cllAsaaNbm4lcUcpJjrd0aJDzke6JGCcwU473UZ8Y
f673ED8T+k0SmunQp0B/JF/JBnwKiebGekw4cKn2sGH0MFFpOeg/+ZwOu9OV
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
/K++/P+u/zn+H0e50+E=
     "], PolygonBox[CompressedData["
1:eJxNlX9oVWUYx885N8dMgtjmMszdxsql2O0KjRFettFoxhoNLKbTiXe1wuBy
r5l3ODTCce0yZ/3lfpThcOwOoTYZ/rUNogkbNkRcilTkH1owQwU1SMYyer68
n/D+8eV+z+d5zjnved/neW75e6ltycDzvF9MT5h80wrTSlOBKW0aMp02HSb2
tGk1Oe+So1grsXLTC+RUk6NYjFg1XjnxkOd9auo1HTA1hByTbzO9CJOvNXkw
+TLTYuCYfGBaCByTv2W/PwSOyV82jcHkJ03fwORHTT0w+QHTAZh8t+lDmHzK
tA0m326qg8k3maIw+ZjpWVOFaY1pFT5KLGJ6khzF/rLDuO87Jn/d9CtMfs40
C5MfN43B5AdNAzD5I6bPYPJ7Te/D5JtNb8Pkq0yvwuTLTM/D5AtMK2Hyd+0o
HniOyf9sug6TnzH9CJMfo67OmjLU0CQ5ip0gNolXznd2rmdN35pOm8pND2x/
HprWU0dfm7LUUC7k7lFuP7EcPsu935tmeIZ81tZ/zHdM/hlTKUz+d1vHDc8x
rWPE1Mc7NobcOvSs5cDFvjIdJaeKHMVWEDtm+picGnIUKyZ20LSbnCZyFKsg
9pHpTXJayVGsmlgrXjlF9LV6t9Rz3zJtmuKb1nsuR7ENxL40HSfndXIUqyfW
YfqAnA5y6mEV1PVL1HyEWq+BxeiNd2BN9E4HrJ3e2g9L0Xufw7rpzT7YAL17
BjZKb0/DJun9a7DLzIZ/YLeYHWtDjgXMli2wMmZPC6yW2bQP1kbdZWEPqa05
6qGfOlEtZMjrx+/j3JfJ/4l7VXcjvmOt9Il6Ie6556huEnnPyHCt9WTonU/I
P0FvZWFj9OIobIZenYXJq5d/g8mr1/+GFTALimBlzIpNsCpmyVZYM7OmDbaX
WZSGHWFW9cIGmWVDsHFm3RRsjlm4AJPXrLwNk9cs/Re2ijoshMX4b9LeNPCf
FMNH6RP9j4XpidXkRGFH6cvteXue4HoLMfVlXR7bzvVaYurLyjxWx7XqbwPv
1bs2e64WNHeeoybk1bd3PMdu0KfnYVP0ZR/sOH2ZgNXTy3p2I7F6vHKKqUnV
4s3AzRUx+aXArV2z5SnWXM3sUUyskP1Wr4epadWx1r7ku32OU4s72NcGfC3f
HcVvJk91miRHe1TJ+2/Tw2Ly8/T4Nfw4M2AaP8iMOIPPMEP68Pv5Bn3LJZ65
xD4cgo1wFq/wPTf5RnnlNLJurX8nvztY/07OTOe07Lln3OGcrsDOc07DsARn
o3u7iCXww+yN+vaLvHckue4ipj6egM3Sx1dhXfAJnjeMv8r7las+vw+TV58X
+44V0ecR2Cb6vBG2lT7fA2ujz1OwNH3eDeulz0/Chujzc7Ap+vwibIE+/xMm
rz5XHYrV8L/yluk16rIGHyam/5lmcjqogxZYC9eqj13kiL/MMzLUUpz4//eU
khMmT76EORTG+6yxEL/IN4jJz/ONF/ET7ME5/Cn26CS+kz1NwTvZ8z34dt+t
Vb2QZs0RchR7gzOM4Ct9l6teGuKeefriEkw1UEzuI2pE7BH1s0SvNPmPe0i/
Sd/dr5jqfl1ejn51nSR2heetg8tXEi9hb7Xf93y3jyV47WEp56Gz+YN16tt6
uD/NdyRhu9iXnO/y7/EM+QucwyL8Aucwjz/Fr3JzXMfZtx5YD+9v5zqH7yT/
PwLkpbA=
      "]]]}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.693269104687224*^9, 3.693269183174713*^9, 
  3.6932695245362377`*^9, 3.6932695591172156`*^9, 3.6932696395768175`*^9, 
  3.69326982023015*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ComputeSol", "[", 
      RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
      "Simplify"}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stress", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ComputeStress", "[", 
       RowBox[{
        RowBox[{"(", "dsols", ")"}], ",", "young", ",", "nu"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.693235428018648*^9, 3.693235434088995*^9}, {
   3.693236455268403*^9, 3.6932364571055083`*^9}, {3.693236876198479*^9, 
   3.693236924255228*^9}, 3.693237040093854*^9, {3.6932437635145874`*^9, 
   3.6932437665367603`*^9}, {3.693250101950153*^9, 3.6932501033802347`*^9}, {
   3.6932581207461433`*^9, 3.693258124105335*^9}, {3.693265457865638*^9, 
   3.693265459112709*^9}, {3.6932655161849732`*^9, 3.693265518560109*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "Sol"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sollists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refine", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi", ",", "eta"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"eta", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sol", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"sols", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sollist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"sollists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sollists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sol", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"sols", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sollist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"sollists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"lp", ",", "lpd"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}]}], "Input",
 CellChangeTimes->{{3.693147768298156*^9, 3.6931477886013165`*^9}, {
   3.6931478309917417`*^9, 3.6931478405672894`*^9}, {3.693147914065493*^9, 
   3.693147930688444*^9}, {3.693148177536563*^9, 3.693148187558136*^9}, {
   3.693148304158805*^9, 3.693148327461138*^9}, {3.6931484619338293`*^9, 
   3.693148476868684*^9}, {3.6932117347968535`*^9, 3.6932117391471024`*^9}, {
   3.6932300380513597`*^9, 3.6932300605376453`*^9}, {3.6932301488906994`*^9, 
   3.6932301499847617`*^9}, {3.69323080034696*^9, 3.6932308101225195`*^9}, {
   3.693235372429468*^9, 3.693235372732486*^9}, {3.693235436024106*^9, 
   3.6932354401393414`*^9}, {3.6932364508441505`*^9, 
   3.6932365936713195`*^9}, {3.693236626653206*^9, 3.6932366623992505`*^9}, {
   3.693236702379537*^9, 3.6932367597068167`*^9}, {3.6932367966909313`*^9, 
   3.6932368329780073`*^9}, {3.693237004646826*^9, 3.6932370307123165`*^9}, {
   3.693237100761324*^9, 3.6932371033364706`*^9}, {3.6932384674004908`*^9, 
   3.693238470380661*^9}, {3.6932385098439183`*^9, 3.693238569548333*^9}, {
   3.69324376863988*^9, 3.693243772370094*^9}, {3.693250104791315*^9, 
   3.693250134623021*^9}, 3.693250174791319*^9, 3.6932506355716743`*^9, 
   3.6932508275446544`*^9, {3.6932508714421654`*^9, 3.6932508908102727`*^9}, {
   3.6932509255222583`*^9, 3.6932509549359407`*^9}, {3.6932511010312967`*^9, 
   3.693251122855545*^9}, {3.6932511765676174`*^9, 3.6932511963407483`*^9}, {
   3.6932515183391657`*^9, 3.693251540170414*^9}, {3.6932516547809696`*^9, 
   3.6932516923391175`*^9}, {3.6932581290916204`*^9, 
   3.6932581350099587`*^9}, {3.6932654529713573`*^9, 3.693265457082593*^9}, 
   3.6932655407383776`*^9, {3.693265674306017*^9, 3.693265705562805*^9}, {
   3.693265748121239*^9, 3.6932657535125475`*^9}, {3.6932658101227856`*^9, 
   3.693265814177017*^9}, 3.693267377567438*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
AGWpJH4=
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Rb5bsauntTN8yWmOnew4dd7S6PbxAQMsafd3DvS6uQd4vQMZE88UGR/eHjAl
YHvI6lX3fbB76uEc5PFvAX+vS7wt4r6ijE6Vt1Nc94Qi6Te4LnIbYD/87Sk9
6HMWDeKsVRbIYUFj+s15UT7RmH7u8cZ8axFH8V5nH/1dC1+8ppS++VR5OVm+
vmcb2qzBG/4dziag1XbHSs4n7uP8hnOWAWc5l/KMgCEBbc7dUsr2YMeJ228o
pz8ZrD6c5Ti6cKbn0c+zW+368PRPbCF42KWUMkJWfZRnX9sD3Ct14uiDjLPP
ci34PNpYlTj3Xe2EOJt36nHGoP9RTpu4Wj+G3yEGQqa8Iy/AhsopO3jl7fSs
urg9+j8o5/sXPSOP00me+srzhcpviHQ+D/ionLS4F+m7Icp7A8aXMu4YZOxx
BbF1KfNL3LETAyYFbA7Ypsx5m7Af3i34+xkx785K5mywiyudDx3ySORxGKP/
EuU7tpS5qVGOX+rem7VhcE8Wj7mXi3u5+OdYgkcegHwKb5yb5HmCPIDPns5W
fzirSZ7fdcqWd/QGz/9xdeAl+5/2PIYWmQtjjevde40P9gHvvGlOV6asf4Oy
w7fcrM5vVoaT7AOvWTkhr+5h290COtXlXia0o3ejNJEHcuGsee+M1teNVsfP
k49hyvQXpfS7s0tpW4PVjf7a8J0C9RmlxJ8ZcJ+20aq9/UIajDXrBzg3/Dr+
Hd92hvoH/RnSZOwyzxZZ9g0ZdzX/cpc054g3XTrDpTNUuzpTf3JPjM0Vf4h6
zp6Qzf3K525xZriHe+3n3MZ59le006nm4GNkJXOXE4u8G4nJ5rjne6R9j/Qu
cF14w3eRl+xVyfPEx62RhznycYPz75Pefe1ozZQ/8lE3OveuqM/kTVaf/vYq
ZU2+47pK5gnIYZHLwgftHrBHKfMYu+kTLrSf+26vUt5z3PvcfZ3F38uSdmMp
Y+Eu9nVyPm1iSuJR4hb6vlZKOnu0m/c11+jhvB6u3VKf9xtvIHC+XsoYtLPr
36otkevAr0ytZGyKPyE+JZbEx3R3HvMXNmYsvaIxedhdWuRBiLkPFpe5+7vG
XvJzpHrQW5z95ZtcKbEOcU4n14Hfhfpv4hxiYGKevxYZy5ELZXxu8PpIwIOV
pDNbWvgZ6O8jrd2VK/HEM0XGzNgxfgq/CH3ipo+LzPfUctsNyhmZkesgz4Gv
+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
b+0=
            "]], 
           PolygonBox[CompressedData["
1:eJwlkcsug1EURjet/vu4jA0kLmPxFkZU0IaQaImkSRPSqgmJgXdxqzRoiUvE
xMDEhAcw8gi8AGvnG6z8K2efvc93zj+13Sw1+s1sEvJwnZkN8R2GHv4HrZzZ
Iby42SZM0zAGFXw/ma2w56tgVsXfM/XW+szOqFeSat9Qwi9Yq1M7gEv8PmYy
uwa7eJv+QVOGLn7imhU95/iDa28dHvF1V5ZRWMPnkrIewSy+BB+c/QmL+Ai8
Dpi9wQJ+RU+Zvatwg9/CRk6Z7vCuqxZrPfwZGjm9SbzNkytLrM3gy0lnFalt
4W3XXXfg1EV4nNlxZYyskWkeLyZli8yRvZz0dhOsJfwnZuT1D6r4Xtwx0z9o
4c2ks2Mtar/s6eTVc+yaEbPGIcM9yWNPAf8Hg18/TQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.3514529110379436, 0.4788325798293054, 0.9436152466070991], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVFlLlFEYPs3id05kl4mhozM3uYwUWdRNRQtE2piZpGFaJFlDy5g/oAj8
B9kGStJmRaWJSyVUQl1U/ofAC6OwIm8L6nl4XvHi/Z7vnPPuW/pUoeVizDl3
GxQHNeJTB9oE2h6c6086twN4M+HcLdAAqA3npSLnWoPOGSgoBn3D3XfQAqg6
cs6DSkDt4PuKuzywDXqvQud8QvzkncE5At864+8Ez8m4bC+YTspfh8xj86ED
umrxXgq8AxwE9cVlMwlKRPKZvPTtM+TnimSzyuyRh358AbVC9l8kHa+8cxuS
sseYd8PGEM77gRPg2Yw8jQN34nwN97uA9U735aA9xk+5OfOfdm+Yn3wrxGWL
5+deeXkKbALm4vJnxuJ/CbzsFc8v4F/QB/y7IB8HzE/yLhl/wFsGeAQ4ndQd
89TmlY9WYCPeXuNuH3DY3smXcoqHsZRantdYnukz9dE3ys6C3ifUM+yddFK5
y1iOveV53KumL4CrgnIeB2at336A3uFtEfjWq0YZ08WYhs03yjF25ol+Up4y
G+P6TzvZLTHb1EFd9KEqUi1Yk6zJ0Hbe+vMc8EIQ32ng2iD7q4EtQTo6gQ+8
5uMu8I1X/H+8YqA+npkL+khfzwT19tGw8sb7ees71r7W8kVfm6z+jLXOq1em
gVe8+n8JOBWpRp8izRp9ZlycLerjDCWDbGwJmlHKVsTke53FH1mfsF+6gman
D3geNnrwPgEsCqqrD+oV1r0hqBfZkz+96jNk/c3emLb+WLS6MDc1sL0eVA3a
az13wHbJgs14Cm/p2MpOydi5y8v338AnXjNyD9jupfMYsDlozg8G5Zo57wHm
45o9zir/CzZ3nV4+nQAe97LT4cWbNx7e0afymGaN/cBccDYqnXowZ7Vu4Oxa
37EmKYs1G1PNG4yv0fYrzyl7p/4as1Vh/9V2nvLyZ9Lqz5xw5rcG1Xsb8JGX
vode9nO2BzOmj3pYT+ZgebdSln1SZf5yZvLGQ95Dls9m23P9JnspSH8vcDRS
HkYi1YO5GAGW4a7Cdsik7UzuzpO2Ew8DzwbZ7A7qGe4S7skyk6NMLui+GHjf
q2c/QmbW5q3ba+aztg+Wd9PyHmP/1Vut0lavGa89xn0/aHuPvVhpdul3r8VY
AI5Fkn0GHPPK2SjwP/ynyyA=
            "]], 
           PolygonBox[CompressedData["
1:eJwlk8tvTVEUh1fde3r2KjWspKnUMfGKkCI1qEcYiHKJklxUq9EoTas3/AFE
4j8Qj4lEBPVsq7QNEjRh4PE/SEwaglBDBr6V3+DL+c7e6+y99trrFCdqXSML
zKwDypDcrMjMlkOOH4BP9WYfYT9+0DVXzs268BJ85sMvkOGjjC9jnVYYwx9D
YRobx/uJWcKzCU7hH3huYO57yexNMnsIh/AKPMC3EXOZ/a7Cdvw3Y60kfJ/9
LuB/4EpZOdczfxxy1lzDezf+nPlzrFWDtXgBM5nGXuJPiW1h/zaYwp8xNsBc
H0ziT5K8Bybw10m5/oBZfDxprgpj+HxSbpFT5LaFHC5lOsNWfBfcwG/CTvwn
MdeIbeRMVfwudLLWeriD9yft9ZaYV1GbpNgCjuHdSb4UjuK7XWvPc19VfDLX
2aLG0/hoUm1jj3uxnit2Dg7j7XAxU86b8Zmk2g3CNH4EmtlrNfTE2V29kEEv
vhBW8u0KWIw3uPw6+f+Ku3DFVuAsvtHVO7HnJtcdx11HjXbg74lbV1IPTeC3
kmoTY7fxRa67jj1j733wlbPM8l7B/ybV7h38wx8l3VX0WPRaoyv2BezBR2BV
rp7vw0/GeXL17Gm80xUbPRS9NODq5ei56L2ppFpFDw3jQ67afoNhVw2iFnHn
53Fz5Rb/UB2+1/WvxRniLDVXrSKnyC3WiLUipzPR70l3Ef9EL/4f2NpxVg==

            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.461846793672195, 0.5739870589208643, 0.9507774178798758], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtlE1L1FEUxq+O09ybM45Bi8CFI+4EJ6NXx8mk6A1dmWKoIGZW9LoIWrYQ
2qjQRugTGLQpKnoFK4U2QX6GoFVGEVRuxpx+h/MsHp5z7//ec5/z3HP/HRdu
Dd9sDCHMggwo5EKo7whhGwzHEGoNIQzCxeRz4/BCUwitjf6tBS6CTrHN5xXn
Nf+WnFVyr+R8rgSawR3yDmVD6CDnD+L75P0O/0VID+u/wYf49pA1p+CDYI74
ANwNponLcD9YIj4KL0qzad/NuIbmNvgruQdZ8wXehY4W0ArWWLfJOR+ja+qU
7hXGvazfw97P7FkFa6DCeJn5k8lrMp2mdzS6F+fgMb49Yc1ZeApsoeFScm+K
8s3O3Mh43q3ouWvwAvvuZf2M9uSaS8l9stjq2M94nrgXHgAPiI/BR5LvPQxn
VXNG/lk+W/eCmveh+Tm8rprMk3/Rx3W4R952q/ZN6ZyM7s1I9HxLyrmuHKav
mT1dcD75fZqHi02uyzTb/b3i7AoaXsPHpX9Ad7is+i2H7a2Aseje/ZQ/81rz
K3runfLD6p3T9yGNb2tPH2vGo/feBHyC8WPmT8N/1HvWg1eS98dsco1l0Bfc
s70aW+8U1D9XWdcOj8I3QIn4Onwe/ObeR+DV6Hf93npE/phPj6L7u61e65JX
VWk7A3+I/g4+Ka/lv6aest62t1qWNtP5Muc9+Uxc1Te7T+tJ03Q5eQ0zetN1
5bKc5rfFEzpjSn5YrSXBYqv5Tc7PfApfTD4/nfy8qvQU9NbsjIbkfRLgu7o7
u8N30ftrRu/A+sl8Mc+s9+x9TUqr/Yc2NGe+2L/I7s5y/Qfnr5XP
            "]], 
           PolygonBox[CompressedData["
1:eJwtk81vjFEUxm87M+Y9UqMSi5bFtFsLKko7/SBI0dRKtEW70fqoChaSLi0k
NtrERuIv0KQbokGQtGjYSPgDrCRWPsLCx2aq9XvyvIsn87vvPfeec895pn3i
2omrjSmlGiqiC5HS6oaU1tEIfDJLqYmAZjQKf0ezBNYbUpqDjxLzoJTSPDoI
Pyun1MM9veg53M634+zdRnvCMYq9hw7BZ1EzcZvQBNyEdrDXg1rhSXK8Jt/X
Ar9wLXzXLLrOuo31UMk5Zli/zBz7Bb2Ct4XvqqEl1o/Krq0PvYCHMr9lM+8b
gRf51sHeLvQY7uT8Tc5+poYSvBHNFV1jRfWhCnFb0BT8ruzcuuMpfIlvVX5/
0c9T4RzKVUHDcCF89yfUAJ8Ox+rMNHws7+9D9JH4dfSh6DdXNZ88XvujcEv4
rXeI+Z25p+rtGjHj8LfMe5qhZpnCuVfQKut+1nc5fwt1hz0gL+iNF+G3xPzl
fe+JX4B/5n5QT27Ab9CfgmNW4N7wrO5rpnA9cy7NdBn+kdlbukN3jWmmjfbc
OHwg7BXVtB8ezvspz5yDl8qepXIq91rm2tSjf/CZ8NvraCs8EK5FHtwHH8n9
qB73hT0nv+g/MAbvlEdL7rFmoxmo1/rWEfaIvLIbPYEHw/u67zDcFe6lPLQX
Ph/2Shu6Al8OczX3yvZwrapB3v0PHaZ0Dw==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.603573428437244, 0.6890471257352675, 0.9619346577303498], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1VEtLVVEY3Ue9nL2HhVGdW5SElV41rQh6gNLtBUFBoFRI5EUMxRcEob+h
Bw36AQ17Dppp5KTsobdxQn8gIkcVRIHmWq3V4GN953u/9mmpTV2abAgh1ECN
oOYUQk8phKvAhzGEMoQPgNuh2w8qQBfwvZaF0Ac82xRCA+gTqGiU/T3wY4gx
CpoFreD7JPAUsBfYB5oGnUiyO5P0PVWSnva0ZezVqHjfgNWS4lBfg08/+CHg
O+gyyN4D79iefmPQXYPNFeBjfP9AbW+Bd6NqvR9F5G9H9cYe24JqZ20joKc5
+oLsGbDT+g5QParOJWA3ctyA7Wfwy55HBM1ANg6acN2U10GvYDcH/BVlxxmy
h9f4/o56Ft1T7jhEytkD+fag76Eo3w/AI0nzPp0ki85HW/qwh63QHYbNliR5
p+P0erbczf98zPXTdW6D/Xyuvudy+ZZ9D298Bx+j6ma8hVw6zoq2FfOcb9V5
mO9Y0myOJ82l6jndjLqJo0k1ttt/yTP/Crzlm9gNmyJqZweSdsBdnEvaPW+g
CzgMugy+P8l2xvd50ffMu+5I2nkF+DuT/A+oxz6FY4/4PuqeMXe+AN0834Fj
0O6673rCdzBtnrJHud7Vk1w+9C3zrqNyDkTtIfPuVvwmmG+P98h97vLs/sJ+
Z1Keg8A13+J6VM5Z9/zSd/wCeChpFy28maS6moCb/R/YlFQL57Ce6TZ4F4w7
4DrPA9uSem0G/zwqzxfgoN8p32vhfwPjVPyG/t2E97IPuBx1izvA77VvK3AD
EDaChw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk1tLVGEUhr8ZZ7O/7yqSCXKm0kEsa2YyDwQdQMnMoCAZEUIinIhEyQME
or+hw1U/oNvJuuiqjObGUGOm/xEi3VRQCTP1vKx98cKzDqxvHfYuPFipLKed
cyMog44G5wYj57Yw/njn8sFYviy8hy+FnUZV+B9qwg3UgifI2SB3CV2Gb6DF
yHwX4SvBYqvoCfnHsT9k7I069j66Dl8jforYETQCz6B78A7xnx3O/UDbcNvb
2/LV4Nexc13MkUM1+Ltm6LA3fsED1Fig1iNUgn97iynnFfwU5eB2yrkpuBgs
dw6dDdaTehtFDeIF7DF4HK1hf0Prkb0xSOwA+0VSX7188ba7SfQZrgab7S56
CL+j5zK9l9AWfBPffGQ7vKrcYLn35YNfJvOp5+fwmSSumqfhaXx/meUQzcA9
wXrVzbq1+9jeKqL3cMXb7Or5mbcdyG6hO/Bs8n3oJrrNuWC96M1++FKw22on
w/CJYLtaQWm4HtvtNOPH2G6kW+XRJvzV2270DTS9fYP6NnSjT/CYt1400234
WPJ9qKdO+HzSj+5VhofQ48hu8tabTzHt9ALcl+xfNXrhW952pZm1i6y3fNXU
rJlgs6jmSfhNbL3rn9gl9z9B3GBQ
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.7390835536751674, 0.7960969564648759, 0.9746285995679953], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVMlqVFEQvXm+zrt3F41pszABcY4Bu20/QPOw3QgOKLoRtDEroSMkJBg6
S3sjIqJLFyIqOK3cCGaloEH9AyM4oCYf4Iio53BOcFGcuvXqVp0a7tvQmjjS
zkIIpyCrIOMxhF7gnSKE83kIHcgsZAz2pZ4Q9gNvQJ7A9j3qO/1OIMg8zvPQ
fwCngTOQKUjX+gXLsUx3XsGvCXwdde76+yLOLeAb4GSuWIzz1vZF+zMO8077
HnOUkGamuJfhN4SirgAPQZbB/yLwEmQY9mvA3fD9C72eSU+o/Q/OfVBqlRC+
wucA5Dfu7gGusX0gKRfrL3FvMOguXMJT9K4B20KhmNTZ0+dRfg8K3SFPxngP
+zjwXVTv2MPVSbHWBd3pdXzGo+/JinqxBcbj0Lcmc4HM5bK17Fdzrn2QM1Hn
FnDMNnKpmWd9hZe/DbofzN1wj+jDebRzzaf0HBivCscGcpaI33aOWeDDqPns
Stqnjnl+hP0s8EPUnDivGucbNd8ZYD0p3xfoI1G8zkXF6Xr/hpL0HLgtqe6R
JKG+Nv6vjbWejqrrRdROc7f32sZ9YJ23C/Wdb+JuoVncK8SJ3OaA171LV4H9
+F54B5orvQSnx97jT8DtSfPbARxO6sEy7JugHwXPfuCzKA4LwMN+a9+AtxAc
LuFmoRzUmTM38nzfPMk3c6/XJ/GqmttoUs93Ag/6XfB9VL1v9HkZxY0cJzxH
zvOza2FNS37nj4C/vLc/o3hE7+tG17U5qZcV2zv+Z5TuUd3v8B+z93j3
            "]], 
           PolygonBox[CompressedData["
1:eJwtkktLlkEYhqfXt76ZXVZqSAZlRwvS9Ad4oBZBRWLYpkVSq+AzUDoILXUj
kWDLFpEmUrlymasCNfMfSJAdtX1FEeV1c8/ihmue08zzPHNgYLC3WoQQOlCJ
zsUQNreFsIG64fF8bqoJYQKeR7cJHEJf4d9oAX6FLsEzlRB2UKedoq/hSWz7
a5z/EP6Ghom9g+bgt6gHPovewcvoP7H/0DW4TCGM4RtBBfyUmtuD73gGbxJz
v3QN1XqJbS++BvQCvoXtDG/pRoPw84p99WgW3pdcWzVW8P+K7kU9LcAXomeh
GVyEO9HfPB/5BlBr4Tta4KPU6+eBV9Ex+HRyr+qhCV6ueDbKuU78l+hZVtFn
uCvfpzvOw3uia93Af5z8U+hmjm/Etxo9O83sDdyAv534PtScHKNYzbyN83fO
o6V3uKHZocuFbfIdTs5VD0fgnuh6rWgn57pklk13/czz0o4faxbRu9a89Jd2
53qKr4dPJPeiHk4m/ynFK/8BvBS9e+1wEV7TjEu/5yDxdzlfKfzme/BI9G5l
k+9DdH3lvIc/Rt8l2zo8VfE/1x+ahh/l/6kensA/ovvT/v9E76Sa3/sp+g39
eb6H4NrkWOXsgrcAuoVk1A==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.8540339857453727, 0.8864475343711189, 0.9859397180371747], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFkssrxVEQx49L7tgpZU9K3Y3H0u4ioRSXSFlw72/hkkeiPLK0sWBhoSQL
r3/AztLKSh4RibwJS49Y+UwzZfHtM79zZs6Z+f5OSXokNRwLIdSgXJTiow8N
5YVQKyG854TQDCNUzfp+PIRl4nySq2BhQQjt5NaJ5Wl+JcySO4AiVEpODzmX
rK+hcmpXxPY1rwNlPI48jryPjLMXvXjNKxz0/H50L9bvA2xDCc7/gQcef9Pz
IXErOQtwi2+deR2m/Q49f4q9Ljjp1L46UbvHeue1esE5F2J9pbz2Vntj/c5n
H/SatPeod2xyH/aEDXgi5tuu2Dw61yxcdX++YDG+dZNTBI+peaO4Qcx39X8e
jqB6akfhr8/4CZ/EPNwRmyEZs5my3ov2NCPW+xhc9DOX5H/+aXjl897AI52Z
+INeWoif6ScJz31d9xOoQucW+x/6Xx7hnL+NJjE/O90f3Vff1Me9uL3B7bjN
qfM2wnGx/Ql4JubJKSzzd6Xv6w9ta1eA
            "]], 
           PolygonBox[CompressedData["
1:eJwtkksrxGEUh19D5tgpZa/U1GyU8gHGJewYSmoWZhqbKTMSye0r2FgoyULM
F7CRpZWVRG65k0uxdImV59d5F796zvU9/3P+LYVKtpwIIaRQHTpIhtCOoxbe
h68shByBPLqGP5PO8p1jz6As+SXsO/iHeJriFNrA3sRW/xq0BVeT3rsD5zjx
poYQRmO/VrgX3zvJH6gT7jdn+Y6pXTPvXY9W4Qx6jXHV7qEheg2gI/gSFeP8
F/ASKvH2MJo1n1mzK+cWnkcjxDKoDC+iAjyGFuApc9Y3T5v3UC/VzMHPaELv
Ye+a91CvblSBJ825DaXV25y18yLcFefXTprZx32cXzM+wDuyE/4Nb/Cpea5q
Tszf1NvKeYGXzXehmxya3zAfv/cG/opx1Tfy3q95rnx/5jfSrXTDbfb/Hfev
nEH4Me5P3/xk/k/k4vxn8Ir5rVSzDvfF++pmPfA/Rd5QSg==
            "]], 
           
           PolygonBox[{{2186, 774, 2191, 2193, 2194}, {2194, 2193, 2096, 492, 
            2181}}]}]}, {
         EdgeForm[], 
         RGBColor[0.937831288504567, 0.9531552572754041, 0.9901195917516777], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkDFLglEUhk8afPdv5BA0NTcILoIN+uk3BQ2CUykoRk46CJV8ODQIYiQl
/o2G/kEpWmlL7c6Cq8/hnuHlOffcc9577jmqNKJ6QkRSKImunEiaxDXsoSTJ
OzhCx8TP8BOFhyKP8AtdEE/hLSrRewMn6IT6IfxBl9Ss4If1vsAitQWUR0/m
H5tHaHdn2n8gcgprNpvOqHfar7VZzhtqcvDV3t0F3iNjPrH538MH+9cAvgfe
X9/5d76nBbtoRT4N26hMvgPnKGL+N7h23v/X/lK2ef7MR/1mVj+Gi8B7nhMv
bW/fsOr8DprO70h3tQ38fDpnH+4BjdQ1Vw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkL9KAlAUxo9/wPMKji6BU08gOIToUJKT4BC0hESKopNLIK1tQRQpvoZD
b1CmleXSAzQLrf0+zh0++N1zvvvdc27pvN/qZc2siPKo4mZfGbMtei6YXXA+
wVBFV/AU5XLhuYaH6JTeGZrAf9wp028S9sq5iyr0Opw3cB39pvwafOjBqh3B
n6idD/8WvvPIO0D3HhnqyfMBN9K8munGI1N5qm2YZecxexP9wEvUSvff4QE6
zsaO2vXWY3Z53uDH5FftBR57ZGnnEfyU/Jpx7vFHek87X8IPHrOrP4PX6T/k
+Yb3hdhHNfUWaX+9uYL/AfwQNUM=
            "]], 
           
           PolygonBox[{{2098, 2097, 2186, 771, 2182}, {2180, 806, 2199, 2097, 
            2098}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9741871568064777, 0.9802694043276983, 0.9285785898456163], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2098, 773, 2180}, {2155, 575, 2157}, {574, 575, 
            572}, {2260, 459, 2258}, {2176, 770, 2179}, {2157, 575, 2151}, {
            2091, 456, 2088}, {2087, 450, 2079}, {2207, 447, 2205}, {2255, 
            456, 2209}, {1998, 469, 2100}, {2150, 571, 2144}, {2182, 773, 
            2098}, {2116, 469, 2095}, {2258, 459, 2153}, {2107, 474, 2110}, {
            2069, 447, 2071}, {1982, 474, 2109}, {2075, 447, 2069}, {2110, 
            474, 2031}, {2183, 773, 2178}, {2177, 770, 1979}, {571, 574, 
            572}, {2151, 575, 2161}, {2253, 450, 2203}}], 
           
           PolygonBox[{{1988, 572, 459, 2092}, {2198, 2197, 2200, 2201}, {
            2109, 474, 770, 2176}, {1979, 770, 474, 2107}, {2152, 572, 575, 
            2155}, {2088, 456, 450, 2087}, {2144, 571, 572, 1988}, {2161, 575,
             574, 2154}, {2178, 773, 770, 2177}, {2092, 459, 456, 2091}, {
            2079, 450, 447, 2075}, {2205, 447, 450, 2253}, {2201, 2200, 2184, 
            2185}, {2203, 450, 456, 2255}, {2153, 459, 572, 2152}, {2179, 770,
             773, 2182}, {2209, 456, 459, 2260}}], 
           
           PolygonBox[{{2106, 2105, 2095, 469, 1998}, {2071, 447, 2207, 2197, 
            2198}, {2031, 474, 1982, 2105, 2106}, {2185, 2184, 2180, 773, 
            2183}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9902182897418602, 0.9902230256768414, 0.8117717834394506], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2106, 473, 2031}, {2091, 458, 2092}, {2201, 441, 
            2198}, {2177, 432, 2178}, {2103, 473, 2102}, {1998, 473, 2106}, {
            2060, 438, 2053}, {1995, 473, 2103}, {2183, 438, 2185}, {2087, 
            455, 2088}, {455, 457, 458}, {2048, 432, 2041}, {2065, 441, 
            2062}, {2041, 432, 2040}, {2198, 441, 2071}, {2092, 458, 1988}, {
            1988, 458, 2144}, {2086, 455, 1983}}], 
           
           PolygonBox[{{2062, 441, 438, 2060}, {2178, 432, 438, 2183}, {2053, 
            438, 432, 2048}, {2108, 2107, 2110, 2111}, {2080, 2079, 2075, 
            2076}, {2185, 438, 441, 2201}, {2089, 457, 455, 2086}, {2088, 455,
             458, 2091}, {2144, 458, 457, 2150}, {2076, 2075, 2069, 2070}, {
            1980, 1979, 2107, 2108}}], 
           
           PolygonBox[{{2070, 2069, 2071, 441, 2065}, {1983, 455, 2087, 2079, 
            2080}, {2102, 473, 1998, 2100, 2101}, {2111, 2110, 2031, 473, 
            1995}, {2040, 432, 2177, 1979, 1980}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9944674409958711, 0.9905747406547168, 0.639193279276037], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2080, 449, 1983}, {2037, 429, 2029}, {2017, 396, 
            2020}, {2072, 446, 2066}, {1980, 429, 2040}, {2024, 396, 2017}, {
            2101, 472, 2102}, {2094, 472, 2099}, {2086, 454, 2089}, {2076, 
            449, 2080}, {1995, 396, 2111}, {2065, 446, 2070}, {2108, 429, 
            1980}, {2066, 446, 1985}, {2084, 449, 2077}}], 
           
           PolygonBox[{{2082, 454, 449, 2084}, {2029, 429, 396, 2024}, {2063, 
            2062, 2060, 2061}, {1983, 449, 454, 2086}, {2054, 2053, 2048, 
            2049}, {2070, 446, 449, 2076}, {2061, 2060, 2053, 2054}, {2077, 
            449, 446, 2072}, {2049, 2048, 2041, 2042}, {2111, 396, 429, 
            2108}}], 
           
           PolygonBox[{{2020, 396, 1995, 2103, 2104}, {1985, 446, 2065, 2062, 
            2063}, {2104, 2103, 2102, 472, 2094}, {2042, 2041, 2040, 429, 
            2037}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9909381375876073, 0.981094351635832, 0.4192968050273247], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2094, 393, 2104}, {2050, 437, 1991}, {2063, 440, 
            1985}, {2104, 393, 2020}, {2049, 437, 2054}, {2006, 390, 1999}, {
            2013, 393, 2011}, {2061, 440, 2063}, {2064, 440, 2058}, {2056, 
            437, 2050}}], 
           
           PolygonBox[{{2030, 2029, 2024, 2025}, {2058, 440, 437, 2056}, {
            2025, 2024, 2017, 2018}, {2073, 2072, 2066, 2067}, {2083, 2082, 
            2084, 2085}, {2011, 393, 390, 2006}, {2078, 2077, 2072, 2073}, {
            2043, 2042, 2037, 2038}, {2054, 437, 440, 2061}, {2085, 2084, 
            2077, 2078}, {2099, 390, 393, 2094}, {2038, 2037, 2029, 2030}}], 
           
           PolygonBox[{{1991, 437, 2049, 2042, 2043}, {2018, 2017, 2020, 393, 
            2013}, {2067, 2066, 1985, 440, 2064}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9635435975972618, 0.8886861357045236, 0.31287419018962526`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2038, 431, 2043}, {2025, 428, 2030}, {2026, 428, 
            1987}, {2073, 448, 2078}, {2064, 445, 2067}, {2045, 431, 2034}, {
            2043, 431, 1991}, {2085, 451, 2083}, {2032, 428, 2026}}], 
           
           PolygonBox[{{2019, 2018, 2013, 2014}, {2012, 2011, 2006, 2007}, {
            2007, 2006, 1999, 2000}, {2067, 445, 448, 2073}, {2034, 431, 428, 
            2032}, {2059, 2058, 2056, 2057}, {2014, 2013, 2011, 2012}, {2030, 
            428, 431, 2038}, {2078, 448, 451, 2085}, {2057, 2056, 2050, 
            2051}}], 
           
           PolygonBox[{{1987, 428, 2025, 2018, 2019}, {2051, 2050, 1991, 431, 
            2045}, {2055, 445, 2064, 2058, 2059}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9279089736275707, 0.7518901338834231, 0.26085207186810944`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2007, 392, 2012}, {2057, 439, 2059}, {2059, 439, 
            2055}, {2014, 395, 2019}, {2019, 395, 1987}, {2004, 392, 2008}, {
            2022, 395, 2015}, {2008, 392, 1984}}], 
           
           PolygonBox[{{2015, 395, 392, 2004}, {2046, 2045, 2034, 2035}, {
            2052, 2051, 2045, 2046}, {2012, 392, 395, 2014}, {2033, 2032, 
            2026, 2027}, {2035, 2034, 2032, 2033}}], 
           
           PolygonBox[{{2027, 2026, 1987, 395, 2022}, {2044, 439, 2057, 2051, 
            2052}, {1984, 392, 2007, 2000, 2001}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8908484778387114, 0.5972502554988253, 0.23063363317103425`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2052, 436, 2044}, {2033, 430, 2035}, {2046, 436, 
            2052}, {2001, 389, 1984}, {1989, 389, 1996}}], 
           
           PolygonBox[{{2005, 2004, 2008, 2009}, {2035, 430, 436, 2046}, {
            2023, 2022, 2015, 2016}, {2028, 2027, 2022, 2023}, {2016, 2015, 
            2004, 2005}}], 
           
           PolygonBox[{{2021, 430, 2033, 2027, 2028}, {2009, 2008, 1984, 389, 
            1989}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8566924959701998, 0.4367689436029046, 0.20192210420706663`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2005, 394, 2016}, {2023, 427, 2028}, {2028, 427, 
            2021}}], 
           
           PolygonBox[{{1990, 1989, 1996, 1997}, {2016, 394, 427, 2023}, {
            2010, 2009, 1989, 1990}}], 
           PolygonBox[{{2003, 394, 2005, 2009, 2010}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[{{1990, 391, 2010}, {2010, 391, 2003}}], 
           PolygonBox[{{1997, 388, 391, 1990}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2003, 2010, 1990, 1997}]}, "0.0000138`"], 
         Annotation[#, 0.0000138, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{1996, 1989, 2009, 2005, 2016, 2023, 2028, 2021}]}, 
          "0.00001288`"], Annotation[#, 0.00001288, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2044, 2052, 2046, 2035, 2033, 2027, 2022, 2015, 2004, 
            2008, 1984, 2001}]}, "0.000011959999999999999`"], 
         Annotation[#, 0.000011959999999999999`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2055, 2059, 2057, 2051, 2045, 2034, 2032, 2026, 1987, 
            2019, 2014, 2012, 2007, 2000}]}, "0.00001104`"], 
         Annotation[#, 0.00001104, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1999, 2006, 2011, 2013, 2018, 2025, 2030, 2038, 2043, 
            1991, 2050, 2056, 2058, 2064, 2067, 2073, 2078, 2085, 2083}]}, 
          "0.00001012`"], Annotation[#, 0.00001012, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2099, 2094, 2104, 2020, 2017, 2024, 2029, 2037, 2042, 
            2049, 2054, 2061, 2063, 1985, 2066, 2072, 2077, 2084, 2082}]}, 
          "9.2`*^-6"], Annotation[#, 9.2*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2089, 2086, 1983, 2080, 2076, 2070, 2065, 2062, 2060, 
            2053, 2048, 2041, 2040, 1980, 2108, 2111, 1995, 2103, 2102, 
            2101}]}, "8.28`*^-6"], Annotation[#, 8.28*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2100, 1998, 2106, 2031, 2110, 2107, 1979, 2177, 2178, 
            2183, 2185, 2201, 2198, 2071, 2069, 2075, 2079, 2087, 2088, 2091, 
            2092, 1988, 2144, 2150}]}, "7.36`*^-6"], 
         Annotation[#, 7.36*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2116, 2095, 2105, 1982, 2109, 2176, 2179, 2182, 2098, 
            2180, 2184, 2200, 2197, 2207, 2205, 2253, 2203, 2255, 2209, 2260, 
            2258, 2153, 2152, 2155, 2157, 2151, 2161, 2154}]}, "6.44`*^-6"], 
         Annotation[#, 6.44*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2117, 2120, 2118, 2002, 2121, 2181, 2194, 2186, 2097, 
            2199, 2202, 2206, 2039, 2254, 2190, 2256, 2234, 2259, 2261, 2262, 
            2263, 2036, 2257, 2264, 2265, 2270, 2271, 2165, 2164, 2162, 2171, 
            2172}]}, "5.52`*^-6"], Annotation[#, 5.52*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1955, 1956, 1954, 1957, 2149, 1958, 1986, 1992, 2148, 
            2146, 2090, 2160, 2159, 2158, 2170, 2168, 2169, 2167, 2173, 2282, 
            2280, 2227, 2278, 2232, 2277, 2276, 2275, 2274, 2273, 2272, 2269, 
            2268, 2267, 2338, 2340, 2323, 2326, 2115, 2320, 2293, 2298, 2297, 
            2129, 2294, 2204, 2195, 2191, 2193, 2096, 2122, 2114, 2119, 2113, 
            2125}]}, "4.6`*^-6"], Annotation[#, 4.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1960, 1962, 1961, 1963, 1964, 2246, 2247, 2145, 2248, 
            2243, 2252, 2251, 2249, 2281, 2334, 2250, 2332, 2306, 2308, 2333, 
            2354, 2221, 2279, 2353, 2074, 2351, 2348, 2347, 2345, 2068, 2346, 
            2344, 2343, 2342, 2341, 2339, 2327, 2325, 2322, 2321, 2296, 2236, 
            2295, 2208, 2196, 2189, 2192, 2187, 2128, 2127, 2126, 2112, 
            2124}]}, "3.68`*^-6"], Annotation[#, 3.68*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1975, 1976, 1977, 1969, 1978, 1981, 2244, 2242, 2245, 
            2217, 2302, 2301, 2303, 2335, 2336, 2166, 2337, 2355, 2361, 2163, 
            2363, 2362, 2373, 2358, 2374, 2364, 2376, 2266, 2352, 2349, 2350, 
            2393, 2410, 2389, 2404, 2401, 2402, 2396, 2319, 2394, 2324, 2331, 
            2330, 2237, 2328, 2292, 2285, 2283, 2284, 2188, 2130, 2123, 2134, 
            2133, 2131}]}, "2.76`*^-6"], 
         Annotation[#, 2.76*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1971, 1973, 1972, 1970, 1974, 1994, 2240, 2239, 2241, 
            2147, 2238, 2299, 2300, 2304, 2305, 2307, 2309, 2356, 2357, 2359, 
            2360, 2365, 2366, 2367, 2368, 2370, 2369, 2375, 2371, 2377, 2391, 
            2388, 2392, 2409, 2411, 2412, 2413, 2405, 2408, 2403, 2407, 2390, 
            2406, 2399, 2395, 2329, 2316, 2315, 2318, 2314, 2288, 2174, 2287, 
            2286, 2135, 2132, 2140, 2139, 2138}]}, "1.84`*^-6"], 
         Annotation[#, 1.84*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1966, 1959, 1967, 1965, 1968, 1993, 2212, 2210, 2213, 
            2214, 2216, 2215, 2211, 2218, 2219, 2220, 2222, 2223, 2224, 2225, 
            2226, 2228, 2156, 2229, 2230, 2231, 2093, 2233, 2047, 2235, 2081, 
            2378, 2372, 2379, 2317, 2381, 2382, 2380, 2384, 2383, 2385, 2400, 
            2414, 2415, 2416, 2417, 2418, 2398, 2397, 2386, 2387, 2313, 2311, 
            2312, 2310, 2291, 2290, 2175, 2289, 2142, 2143, 2141, 2137, 
            2136}]}, "9.2`*^-7"], 
         Annotation[#, 9.2*^-7, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
GfQlXp2WFqrE/4rwsTU=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -98.23986034753791}, {
                    Rational[
                    15, 2], -98.23986034753791}}, {{-7.5, \
-98.23986034753791}, {7.5, -98.23986034753791}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -83.97972069507583}, {
                    Rational[
                    15, 2], -83.97972069507583}}, {{-7.5, \
-83.97972069507583}, {7.5, -83.97972069507583}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -69.71958104261375}, {
                    Rational[
                    15, 2], -69.71958104261375}}, {{-7.5, \
-69.71958104261375}, {7.5, -69.71958104261375}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -55.45944139015167}, {
                    Rational[
                    15, 2], -55.45944139015167}}, {{-7.5, \
-55.45944139015167}, {7.5, -55.45944139015167}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -41.19930173768958}, {
                    Rational[
                    15, 2], -41.19930173768958}}, {{-7.5, \
-41.19930173768958}, {7.5, -41.19930173768958}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -26.939162085227494`}, {
                    Rational[
                    15, 2], -26.939162085227494`}}, {{-7.5, \
-26.939162085227494`}, {7.5, -26.939162085227494`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.679022432765407`}, {
                    Rational[
                    15, 2], -12.679022432765407`}}, {{-7.5, \
-12.679022432765407`}, {7.5, -12.679022432765407`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 1.5811172196966652`}, {
                    Rational[15, 2], 1.5811172196966652`}}, {{-7.5, 
                  1.5811172196966652`}, {7.5, 1.5811172196966652`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 15.841256872158766`}, {
                    Rational[15, 2], 15.841256872158766`}}, {{-7.5, 
                  15.841256872158766`}, {7.5, 15.841256872158766`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.10139652462084}, {
                    Rational[15, 2], 30.10139652462084}}, {{-7.5, 
                  30.10139652462084}, {7.5, 30.10139652462084}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 44.36153617708291}, {
                    Rational[15, 2], 44.36153617708291}}, {{-7.5, 
                  44.36153617708291}, {7.5, 44.36153617708291}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 58.62167582954501}, {
                    Rational[15, 2], 58.62167582954501}}, {{-7.5, 
                  58.62167582954501}, {7.5, 58.62167582954501}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 72.88181548200708}, {
                    Rational[15, 2], 72.88181548200708}}, {{-7.5, 
                  72.88181548200708}, {7.5, 72.88181548200708}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.14195513446919}, {
                    Rational[15, 2], 87.14195513446919}}, {{-7.5, 
                  87.14195513446919}, {7.5, 87.14195513446919}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 101.40209478693126`}, {
                    Rational[15, 2], 101.40209478693126`}}, {{-7.5, 
                  101.40209478693126`}, {7.5, 101.40209478693126`}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.50000000000001`}, 
                    Offset[{4., 0}, {7.5, -112.50000000000001`}]}, {{
                    7.5, -73.7496205096139}, 
                    Offset[{4., 0}, {7.5, -73.7496205096139}]}, {{
                    7.5, -34.999241019227796`}, 
                    Offset[{4., 0}, {7.5, -34.999241019227796`}]}, {{7.5, 
                    3.7511384711582916`}, 
                    Offset[{4., 0}, {7.5, 3.7511384711582916`}]}, {{7.5, 
                    42.501517961544415`}, 
                    Offset[{4., 0}, {7.5, 42.501517961544415`}]}, {{7.5, 
                    81.25189745193052}, 
                    Offset[{4., 0}, {7.5, 81.25189745193052}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -104.74992410192279`}, 
                    Offset[{2.5, 0.}, {7.5, -104.74992410192279`}]}, {{
                    7.5, -96.99984820384557}, 
                    Offset[{2.5, 0.}, {7.5, -96.99984820384557}]}, {{
                    7.5, -89.24977230576835}, 
                    Offset[{2.5, 0.}, {7.5, -89.24977230576835}]}, {{
                    7.5, -81.49969640769113}, 
                    Offset[{2.5, 0.}, {7.5, -81.49969640769113}]}, {{
                    7.5, -65.99954461153669}, 
                    Offset[{2.5, 0.}, {7.5, -65.99954461153669}]}, {{
                    7.5, -58.24946871345947}, 
                    Offset[{2.5, 0.}, {7.5, -58.24946871345947}]}, {{
                    7.5, -50.49939281538225}, 
                    Offset[{2.5, 0.}, {7.5, -50.49939281538225}]}, {{
                    7.5, -42.74931691730503}, 
                    Offset[{2.5, 0.}, {7.5, -42.74931691730503}]}, {{
                    7.5, -27.249165121150597`}, 
                    Offset[{2.5, 0.}, {7.5, -27.249165121150597`}]}, {{
                    7.5, -19.499089223073362`}, 
                    Offset[{2.5, 0.}, {7.5, -19.499089223073362`}]}, {{
                    7.5, -11.74901332499616}, 
                    Offset[{2.5, 0.}, {7.5, -11.74901332499616}]}, {{
                    7.5, -3.9989374269189266`}, 
                    Offset[{2.5, 0.}, {7.5, -3.9989374269189266`}]}, {{7.5, 
                    11.501214369235509`}, 
                    Offset[{2.5, 0.}, {7.5, 11.501214369235509`}]}, {{7.5, 
                    19.25129026731273}, 
                    Offset[{2.5, 0.}, {7.5, 19.25129026731273}]}, {{7.5, 
                    27.001366165389946`}, 
                    Offset[{2.5, 0.}, {7.5, 27.001366165389946`}]}, {{7.5, 
                    34.75144206346718}, 
                    Offset[{2.5, 0.}, {7.5, 34.75144206346718}]}, {{7.5, 
                    50.251593859621615`}, 
                    Offset[{2.5, 0.}, {7.5, 50.251593859621615`}]}, {{7.5, 
                    58.00166975769882}, 
                    Offset[{2.5, 0.}, {7.5, 58.00166975769882}]}, {{7.5, 
                    65.75174565577605}, 
                    Offset[{2.5, 0.}, {7.5, 65.75174565577605}]}, {{7.5, 
                    73.50182155385329}, 
                    Offset[{2.5, 0.}, {7.5, 73.50182155385329}]}, {{7.5, 
                    89.00197335000769}, 
                    Offset[{2.5, 0.}, {7.5, 89.00197335000769}]}, {{7.5, 
                    96.75204924808493}, 
                    Offset[{2.5, 0.}, {7.5, 96.75204924808493}]}, {{7.5, 
                    104.50212514616216`}, 
                    Offset[{2.5, 0.}, {7.5, 104.50212514616216`}]}, {{7.5, 
                    112.25220104423938`}, 
                    Offset[{2.5, 0.}, {7.5, 112.25220104423938`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.50000000000001`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -73.7496205096139}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -34.999241019227796`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 3.7511384711582916`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0000100\"", 0.00001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 7}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 42.501517961544415`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0000125\"", 0.0000125, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 7}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 81.25189745193052}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.0963363921016094`*^-7"}], ",", 
                   "0.000014515986872839666`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"9.2`*^-7", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.84`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.76`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.68`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4.6`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.52`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"6.44`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"7.36`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"8.28`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"9.2`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001012`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001104`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000011959999999999999`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001288`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0000138`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693265476128682*^9, 3.693265557108314*^9, 
  3.693265712735215*^9, 3.693265760000919*^9, 3.693265820667389*^9, 
  3.693265922901236*^9, 3.693266501030303*^9, 3.6932670688847823`*^9, 
  3.693267380064581*^9, 3.693267463833372*^9, 3.693267562890038*^9, 
  3.6932698464916525`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
sz9tp2HpAw2/QCkmZomWSuVX0/B/bEivHw==
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           PolygonBox[{{2037, 388, 1978}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.31529878848277626`, 0.4475176960310553, 0.9413115378877192], 
         GraphicsGroupBox[{
           PolygonBox[{{2042, 391, 2039}, {2038, 389, 1988}}], 
           PolygonBox[{{1988, 389, 391, 2042}, {1978, 391, 389, 2037}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.42326469127937766`, 0.5410323345094137, 0.9481910297434194], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2043, 392, 1994}, {2042, 392, 1988}, {2105, 390, 
            2045}, {1994, 392, 2041}}], 
           PolygonBox[{{2045, 390, 392, 2043}, {1988, 392, 390, 2038}}], 
           PolygonBox[{{2041, 392, 2042, 2039, 2040}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5551957819821068, 0.6497719729548506, 0.9581261921882434], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2106, 472, 2107}, {2043, 393, 2045}, {2040, 394, 
            2041}, {2051, 393, 2049}, {2050, 394, 2046}, {2108, 393, 2051}}], 
           PolygonBox[{{2045, 393, 472, 2105}, {2107, 472, 393, 2108}}], 
           
           PolygonBox[{{2049, 393, 2043, 1994, 1995}, {1995, 1994, 2041, 394, 
            2050}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6931092594346905, 0.7601814883866376, 0.970046311572311], 
         GraphicsGroupBox[{
           
           PolygonBox[{{1995, 395, 2049}, {2050, 395, 1995}, {2108, 473, 
            2107}, {2112, 396, 2058}, {2055, 427, 2052}, {2120, 469, 2102}, {
            2058, 396, 2054}, {2109, 473, 2057}}], 
           
           PolygonBox[{{2057, 473, 396, 2112}, {2051, 396, 473, 2108}, {2054, 
            396, 395, 2005}, {2102, 469, 473, 2109}, {2049, 395, 396, 2051}, {
            2046, 427, 395, 2050}, {2107, 473, 469, 2106}, {2005, 395, 427, 
            2055}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8237461859538457, 0.8622968649577794, 0.9830508406548208], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2056, 428, 2047}, {2112, 474, 2057}, {2005, 428, 
            2054}, {2055, 428, 2005}, {2101, 474, 2110}, {2121, 490, 2124}, {
            2047, 428, 2062}, {2122, 470, 2103}, {2111, 474, 2101}, {2109, 
            470, 2102}}], 
           
           PolygonBox[{{2124, 490, 470, 2122}, {2102, 470, 490, 2120}, {2103, 
            470, 474, 2111}, {2057, 474, 470, 2109}}], 
           
           PolygonBox[{{2110, 474, 2112, 2058, 2059}, {2059, 2058, 2054, 428, 
            2056}, {2062, 428, 2055, 2052, 2053}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9101617743257899, 0.9312023094369095, 0.9912932366178433], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2179, 770, 2126}, {2126, 770, 2177}, {2123, 491, 
            1977}, {2122, 491, 2124}, {2053, 430, 2062}, {2133, 487, 2118}, {
            2111, 471, 2103}, {2056, 429, 2059}, {2066, 429, 2064}, {2063, 
            430, 2060}, {2125, 471, 2036}, {2059, 429, 2110}}], 
           
           PolygonBox[{{2124, 491, 487, 2121}, {2177, 770, 429, 2066}, {2036, 
            471, 770, 2179}, {2118, 487, 491, 2123}, {1977, 491, 471, 2125}, {
            2103, 471, 491, 2122}, {2110, 429, 770, 2101}, {2101, 770, 471, 
            2111}}], 
           
           PolygonBox[{{2064, 429, 2056, 2047, 2048}, {2048, 2047, 2062, 430, 
            2063}}]}]}, {
         EdgeForm[], 
         RGBColor[0.961211461152843, 0.9705921517549692, 0.9505430579837858], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2013, 431, 2069}, {2063, 431, 2048}, {2183, 771, 
            2181}, {2066, 432, 2177}, {2179, 771, 2036}, {488, 492, 489}, {
            2123, 488, 2118}, {509, 505, 508}, {2178, 432, 2072}, {2125, 492, 
            1977}, {2134, 509, 2132}, {2142, 505, 2130}, {2185, 489, 2119}, {
            2190, 771, 2183}, {2135, 489, 2185}, {2048, 431, 2064}, {2072, 
            432, 2070}, {509, 508, 488}, {489, 509, 488}}], 
           
           PolygonBox[{{2119, 489, 492, 2104}, {2132, 509, 489, 2135}, {2104, 
            492, 771, 2190}, {2130, 505, 509, 2134}, {2070, 432, 431, 2013}, {
            2036, 771, 492, 2125}, {2118, 488, 508, 2133}, {1977, 492, 488, 
            2123}, {2064, 431, 432, 2066}}], 
           
           PolygonBox[{{2127, 2126, 2177, 432, 2178}, {2069, 431, 2063, 2060, 
            2061}, {2181, 771, 2179, 2126, 2127}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9872184923939225, 0.9889825323821937, 0.8614861887214601], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2189, 794, 2187}, {2145, 526, 1964}, {2127, 773, 
            2181}, {2180, 773, 2182}, {2191, 774, 2184}, {2013, 437, 2070}, {
            2104, 797, 2119}, {2137, 510, 2244}, {2184, 774, 2193}, {2190, 
            797, 2104}, {2245, 794, 2189}, {2001, 437, 2075}, {2178, 773, 
            2127}, {2135, 510, 2132}, {2134, 506, 2130}, {2071, 437, 2001}, {
            2061, 436, 2069}, {2146, 506, 2131}}], 
           
           PolygonBox[{{2193, 774, 773, 2180}, {2187, 794, 797, 1975}, {2181, 
            773, 774, 2183}, {2183, 774, 797, 2190}, {2119, 797, 794, 2185}, {
            1975, 797, 774, 2191}, {2132, 510, 506, 2134}, {2131, 506, 510, 
            2137}, {2185, 794, 510, 2135}, {2244, 510, 794, 2245}, {2130, 506,
             526, 2142}, {2069, 436, 437, 2013}, {1964, 526, 506, 2146}, {
            2075, 437, 436, 2067}}], 
           
           PolygonBox[{{2182, 773, 2178, 2072, 2073}, {2073, 2072, 2070, 437, 
            2071}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9952272548061335, 0.9921999055659075, 0.7218943234957977], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtj80KQWEQhj+HMkUdOyGiU9wPKzuxEcVNyOaU37gKa9bkJy7Azdh4ppnF
0zvzznwz87WG8+4sCiFUIQt9CeGXCaGHLqCNuUXH0KRxghYjiwsQQykyr+S5
vk9zlmscez2BB+9X1O7oETrM36Mb37VDv+5rvQFnZtTRS54cPxXbnfjcodiO
E/W1WI/2jsRueKMvqOEf0I/YfTd06v8ZiOXqX/1GjfX+st9QEUPjJfr0mTr7
D0C+I3Q=
            "]], 
           PolygonBox[CompressedData["
1:eJwtjzsKwlAQRUcN5BWCQuwiQRHMfrSy09gp6CZEhOAfd2FtL35AOwXdjI1n
mFccOJlJbu40s2lnUhSRCALoO5EygyoM8S20SyIpLPB3KPKCGK9DDgm7GJZ+
prsIanCBVWD7O753lqWZG/zjv9fZF5/DqWD7Gd6FH88V+mT4CBpF6zjGD86y
NUOzjqG924KBs86p36/xh7Pbcjo98Z2/T/+ZOLtB87TzDb/6/tqhh5+dfasz
ve0PGvQisQ==
            "]], 
           PolygonBox[{{2077, 438, 2071, 2001, 2002}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9931519065791479, 0.9877609455582782, 0.49600547655304494`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkD1qQlEQhUcTyG0sApbxwXtWQlZjZRkiBDT+bERQzBPTxdQuIIpVEMSf
JonoHlKkcAf5hnuKwzdnmJk7c9PHfr1XNLMMXaHNjdmiYJYGsz80uDZ7gxe0
ID7CNRoSf4boPT+DOcwYVkIH/Cv+XTM8nqJv1W1hJ8T6LzhCNRZ4CbHOa3zO
Xn4HE/w9qqAy/oM97+CT95LrwR+0or4RYr/PT6VEvc8h+rbX694KcVM9D3Cu
fXJ4q9hzG92+1j6p3vjVnf5nCVoycwzP2ucEu+ppwapqMuVqum2qv8rV470T
+A94STSx
            "]], 
           PolygonBox[CompressedData["
1:eJwtjzsOQWEQRscjMY1SI67kUtmOFQiNt41IiBA6rAJRUVyvBrtQsgJnMn9x
kjP3n8d34+aoPkyLSAGyEKnIPiVygDIeh3oHRXwOtYy/V/EFHBncwwV/QoWF
c+qX+jd7m0CCb0JtM298aPvoL8MAL6nfspvvnMiWekXvGD54A/L0xtDDZ+pZ
LNMUv6rftpkHflafXcId/6lnsQxfvKu+K4I2fgrvNmOzN/VZu9nC12Gf9diu
jnp2++e+/XvIY/kT8v8BdwowuA==
            "]], 
           
           PolygonBox[{{2136, 1211, 2262, 2198, 2199}, {2199, 2198, 2195, 809,
             2065}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9737472685095399, 0.9231055136275006, 0.35251352488225773`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1kblKg0EUha9LyKRQsEpIBImKStLZmZcQUlkIgiAiaHwRS4OlkdgoFraC
SyeCiguChdbuKC6lhd/lHovDmZl//rPcKc8u1xudZjYOukCVTQUMgLFkdtRh
NgK/gtGM2RP8Dva7zW7hFTDJehf+AhPcWYcrmVjXwDT7Anoz8GIK7YUUXi3+
7YdLIA+K4FM6rtfm+zbYBGuuS8gpuKnzLbCUInMDPs6aHZJ5kPWp7p3AZym8
zuFr5W8pi3t4lnImNJvq47124Bf1eYN/wB7nN/CHdHweRXCAb1k+bWV+1tw2
1MX9PPN3itn05mIuPp/fbHj7fc/Sp77e+zHF2YO6ljSr+xQ+d/Ktqk9bs/E+
Nb2F555PMe85cUFaQ3rrVfhCmq59lULn0s8122Hlzetf9/x/Q+/jfj252Ff0
/Q9v6Esz
            "]], 
           PolygonBox[CompressedData["
1:eJwtkbsuRFEUhtccR2YpFCoiYnIQZN6Al5hkKoVKXCJhvIiSGonG7QEkjE4k
yLglCrU7ERmlYr4/axdf8u3LWf9a+xRza/VGZmbDkMO1m20ju9DCt2Cq26wK
3/gINEtmZzCKF3Bair3zstmXx91paOOPcEKtapfZEd7QOYGDsKisdH4M9/gh
1PKoP4mPpTxlVPBn2Oe8oP4rvgMT+CZ7l/gyVLLIWPXoWf3ozju+4VFbGQf4
PPRzdwBm8QePXtTTD74AQ1m8yZXHN7U0T59Hz7qvN/rFnzzeTj2q1xePXpX/
iY+nfM3U4r1mPGop787jjbRWxjr+lubTDB/4DezlMeMKfuExu/Zu8f9yzKKe
l1j39sS/UI9/rDswCUPy
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9425069881382315, 0.809766396918229, 0.27259797700282784`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFUksvpFEQvZrv6/qEmPEKG0LSickkhnSLXtlZSjx2EyshdjN7v8GfkDAe
8QjiD1h7bCQiFs1C6xkSYjwWOs056iQWJ+dW3bpVp+pW19Tv8V+pEMIIUA2U
akJYAP4CQ8AAkAdWze1lc19O/kXYGfCSuU3/IFCb8nNGyCnXc1UIEe5iIUl9
xpLbgTPkKsIugHuBfbz5Zl6bGtbMdealtSSttL8mIdSkQ2gEbyJuHL5tcBp5
X6q85h7sCfh35WddanxIe8yY/LHuqJGaTT7GsI9Jc980eAeoxCF8Qd0y+BV4
i10H9TSBv0fIi3MP+NE8pj5xm37GVfSOd//N39yCh83rUuOB+YxnwJ247wYu
Y2fm4JnvqIN5mas/8tyxevmYe+KxCfgZuXKIeQLPmv9DOe1x7ZrDT81lDnxn
nvPEvG6Pav/RfqyAWxPvpQXcnLiWhsR3q6h/20JcFm/vla8vch0bsEdxfwq+
UY0i+BrowPkK/M+8bklzKGpvj8334tDcZjzv89rNBe0Qd+ZIs+T+sc+KZkUN
P7R73MEr1T1XrQ7NvU49std5aab2gnb4wrxn9t7Gv1bOde0g++WbrHqf0DkX
fd5xh+l/B4r0Z44=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkk0rhGEUhs/o/TivEKHMxqAxlAVCdnb2jJ2UUrJj7zf4EwpRYpA/YI2x
UPKxYDPGRyiMBeE6nVlcdZ/znud5zrnP2zm3lF+sEZEcBNCWiMSxyE8kkkaX
VKQrFGmHe/QnDKOHYBd9CmMcLMMVupEzv5HXVIi7IQsZ6IAC5KmdgBX0m/pd
U8SHaOV8hviOO2rR2+SOUn7Gzs7DKDpN0wvoVmr+In9zn3gTRgLvaQu9bj0E
nttAz0LCWYUZdBl6Q5/xCX2h3tsA8Qt6Er54P6Z+Wj1n3wbhFX0DD9SvQlHd
M/POeqpD18N35LkG9Il6rc1wjL5W99busLuaqQli30ELuodcDorEZ7aX2Ge3
GWwWy9m3bNXrZ+gLfaZH9Tftbcu9Ex+oe21+7qDP1WexHj/Mm8S9tx6a0HvV
fdkO+s0bqKTck3H0LZQC35ntblndK/N8Tf2fsH/Dai7R/xUST/8=
            "]], 
           PolygonBox[{{2089, 450, 2088, 2086, 2087}}]}]}, {
         EdgeForm[], 
         RGBColor[0.90391143825078, 0.6565661077981115, 0.24153368754132462`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVMlvjXEU/do33c+U99JSr1K01JA2MS4k2BiWEl6IqTb+ADZFiGltZYmF
hSlsiCmGTZ9YsEE3aCvSiS4pVR42zsk50sXN+b7f7977O3dsPXi4cqg+SZLz
kAzkSzZJ/kL+QGakSTKnkCRl4FhdkkxCiji/E0myM4d/4Gid7tZnZFez7Vnc
jcDxmZDPr/ZLHzVIA74v4m4D7C4Bj0JeQL/b+t9sQ3yF88/A93mdDQDXQG8d
bM/FlN53yEjo/Y/Aclb+S8DpiGEPOP8O3VGnz3HsxXcXZDe+d+V0tgV3b/Hu
8dB7fXm9f8ZxnQZ2wmYJZGNWZ83AQeAiYGNWMb7D/5t6+er1N8968soHfVKX
tuS5An5fIj93Q1zJuQZsBv9lqEWL4yBP8j1unvtD/+Te5Zz1Om/Dobp8CnFq
y4rjQOj+NTADvxX4XwS8FtI5EXqH7xUL4lg2z+X4D0iT+4N9MjfV/yxIyTiz
INshxPkhr1xecW2uhjiRWzZVbsiZ3P/b0zZS2Q9BN4/vKr4Xp+JW9BtNqb7n
pcptzf3GulVdu3PumQuhXDaZ5zDy/QnyGbLNcTG+XQXZkzfvx60z5D5kv91m
jYD3Q3nhHHBG6IO+cpDGVP8NqXzl7HuZ3yGPD+4x5meOY+f5V/cIY6lap2L7
nN8YMB/y4nmlMBV3j2Nvd31Z502e283A/nr1MXv4h+Mb94xyVnm2lj0PnCio
V4vu7UnPPm2GjdRbmCquBanyMea90ZHVe5yRJ6E+fQyc5vqyzpynTvdnL3w8
g+3S0HxzL3BHLPE9e7TFczHfO2rUHPo9Z5yNSXNjLM/r5LNKniFsBz4M7YFx
4EruIpx3Ak+F+J5074x613V7Xx0BPnIPPACu9vyuCvUHeXPGmNMJczgW6vUD
juvF/573vqJ/4rrMVP5GHENbqpq3Ap86h8zlvlDNdoTy3OgcjYZ6IJeqZtRp
c+0aXMt+7wHugxuh/F73fuuwn5J7N02V243ebT+9I4qp9gP3YNk1pF6HfQx6
P1YLyi1zzLqyFsvNudm8L3uX/QJuDeVtO/BW6N2bIb2S+d8L7YDZ4PAP32Dn
7g==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk8lvjVEYxs/V3vu9x1Q11RS0VVEVYliIsDAtLTSaarHpH8DKEFP8GVhY
mFkQU4mNKxa1QTdEI1FtYyuiSmPl9+T5Fk/u733P+d7x3NaBE93HZ6SUdqBG
9ChSeltJ6TDGA3hzaQ+hepHS4pzSXP2i2XAH53XOXqNhfK34DvDbiVbDC1DA
VTQffhqOrZhb4BtoKfY4RVyC96IJzrY3pLQV/op+cP5Pd+CCGD2Fc7TBF8Pf
jqIL8Pkwj6Bz8KrsWtahZfAZfO84G0Kn4PfoO7GHse/DP1Ef9qFqSg/hznBv
6n8jfBXtbHDN1+HL4VrluwKfRW2cTXO/P9yzev9SS6kZ/ouvl9hHufMSflLO
Qzmfwd8k7v7CHoWb+Kal8AwXwifDtWsmms0k/vGKZ7YHO2fnUoyZ8ItwLsUf
hNvxdReeoWY5rfxV13QtnFO5NZMRuFF34FfEm8DeEJ6FZtIF30W7OF+LbsMr
s2fdjFZkz0z3te9N8Bp89Zpr6IA/h3erHGPwcnzzCtc0K3sn2s0ndAc+gj7C
H9BpuJpdm2LW4Knw7nrQH/hY+K52rt13lft8g9bDu9FYxTPcpt7J/RueRPux
l2S/de1Auxgs34d29hxehG9OUf4nsmtUrZrJPfhWeDZ6EzfDb1JvUz3sC89I
s1LPLeo9u3bFfMz5wfBbUk2q7T9nWHgs
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8696917166038093, 0.5011823440182618, 0.21297991299695884`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
LOCSUo6d5VgfcYDr6tCJAVFeWc3x7s65zThzcDnH+zn/3z07PIA/ZwR0l0en
K+tx2ji2Tjwgtl3uWa42rz1XuezwfNea6wL4x1HeT652DH7isyYVc68z3Q+9
PVM5rZP3yKBz0HdgwAHl1Jduyg59WaXOgK9JGZEXzDE3qA9+PR3l0mLmibvu
rMXMH+53LryBlrsE6lPFwfhDAn79kSjrAuf3AwqljOfo6eboH1HN2Hl+Ndt/
Le4eR5//VswSOyUvI4clN2pxLnGZ+dyTsRful7cqP3SJ/vsC7rU+2/Yj0kZs
mu25a+dn3jzHOP9C19/lGbm/ck/edW+OdkMp845J8hTbnSANv1F2t2kPzHlc
u26y/VvxT3Xv6/RXNb/1cjFzizWW8Ot55fNcMeuU5CyLiikv5AefyJOeUxac
+WHxEZ9GKVvOeIe+Dj+HnwYX8et6dRFbvVEegYPzgnuCc5923xbrLdK31Do0
nFxNmY2qJi2PFnfnao+oYzV5I+v3bVM/Rx+JvTR6Z+Ve+5Hj+GN0hHkfSi+8
xw5Gue+NvpG0yoNF7lnT70XSAq03e64m+dfiOvjBWnR1iPrZ5F2duzx+At90
sUAdf0PcamvO3NZ7zwzz6AbHOgR8Xsw4RJ1yrr65RyH9DfnrUnNp5nb0Lk8s
X6L8TnYufqmX7Z9qQ8QSYtSn8g5e9XQO/v9z9+5ozG2Uvo7SB93c9TYErLGk
vd6SO/B67/wrzF3JYVutc3ffzP29Pmk6WTq5n/OGQL6ybznnvAeP6jOvIqci
DyDnXux+vDO8GuVrtqlvC9ivnDjecB/6e3k+9msr78mrqnuc72BzOO48+G/e
pfDdPeUna4+upg99qpoyOVPfz32L+zY53WnGBfp5Uxlrbj9RPSFf2/XOIW20
6Sf36eJ81vFGMcL88LM4z7aAH1dynxHi/K6U707FGButDx1TzfPC31O0GWIN
uQ25LHrF3RMdoA+Zk1MiX/SN+97kmj4XMldAZ2rvAuTCO1wLjp3iP7Ow+42A
Pbgbk1vA92nmwFX1+h5z653i+Zl2u0Oc6NYKdQqdQDdWKu9Nyvz3vrvPD/gy
+PBNwFcBz9bn2wlvK/CGNvUW6/QtVpd4K6+98YH7Ov3cYYHz/vrUBXQQnkyV
L5tKOba5lOPozAznoae8Cd/vfMbfi3lbSjn/bvsYq70zckby3Mfr8671jPS1
6OPe18d9o6w+U15VbXKYOQy5zGLXYyttShl3ief0LbQf3sAHzt7iXjUeMcZ7
1GPOh6aHpIs6Y9g2tvxaKc8BP8jNBujz4EF7+dAsX2Zpr+v1ERcEf/+7nPRh
59g/uTv5CrxHBuQxWx0rNESM5DwN2U9eRL7fqJ1hb99UM+f7v2qu26YPaRv4
quX0Q+/at7nmi9StWpv6TN+Tv63mN5FVAS+Vcs5b4iDmtwv4Xin5By/h4TzP
PEu+zZV3lB28S8+zzfh6dXmDes0e+C74N7d+ty7NEC/nJo/m7O1jXoeAjuW0
l5XaDLLeWUqbQKbICv/L3RK5cqcnj+Pu3Ww+QZ5KLnVq4OpVznNdE3tcEXB1
wBPRfryU7zhX2395wAvVbP+hmu2hAZcFnBF+qjXwnFXJO023urzX9K7kGP3n
xXjfKE+u5BrWDhIvbWLnsmrS8XyUU2LePQETKznnCtec3ybvJv2klTHiMLn6
sebBjeXM+/YxD0Xv0D++da0JWFvK+lrlvSFgo2MfB3wasL2Uuj5VmRRi/bRy
+p2rgqYjAwYG3BJ97QL2ds+u5czvBkf5RJu8C3WRNmiEr5d6V7ko1vcL6E9p
P7zfUUr7wyYbYs34gN8FHBXzjggYEvV/Cds4IOr7WxIriBm19o+iPFo6WfPT
gO4Bl8ScG6IcFDBSuVyobP6jmu95P42yyXnTy7mWdYPKKb/u4nu4kjFnTpRr
YuyVcsob3cQG0cNRUf5X9J1QSXn3DxiozAdZR5bcxWr9Z5lLdVfOyPsy5zJ2
vHcyeM085I8eNEobNO7bkDT9uCHPD++OFgaU8zzQdW05+fmThtTXSkPu01+6
4N9V0t9TP3aeOtZVmXfxHYOYvlY9Qp+wrZMDepSTlg8DPijnnsMDrgl4M+Yt
iPIvpcTP/FNd06h9IvuJAfX2d9tjbB/9Ev7/D+X0taeKp5f+FR9CrMMWTtXe
u3inR1fRbXzId/qRncbXbfqn94yjyJPcgzt+p4A+5fS3yHuNssYeRpbTz+2r
z4LXA9QfcBe0o6JnYt+h5bSVw7Wl9vo65hO3vnMdJWt6l1MPflFO+20yXq/U
pvHl20rpd7Fp4he8/ouwUbvfZP9r2vyscuYaUwP+J+Cecsbyt517uDztpMw2
uPYY7Zs3BPadV797b/C+X0p6e+sL9lE/Gj1HV+V6gLjZY7K5A/jv8Gy8sVNf
ow9rKWWOuMxzrytn/HrRMfq7yafj9Y/HSsdLjsMrZDlU2XaVrm574FpmHtRs
LtSqva8TN3P7q5/9bSPzc2wfpd1hf5fqT7BV3n95C+Q9eHy0x1XSL6LH6DO+
6aCwyTuj78CGzDd7mKcz/pxzkNUD5ZQfgA+nb5E+GF/cT/9Kfj3be+192gXx
nfcK5A4dNVzN6sPWcn7bWCKPVxk/FpbTfvkvpK+044cYWy5/FvkeBh0V/Uxn
/HRD+stODZnXvm3ueJ1xn/hPm/3nu8eT1pttz7fvKemYUc3vLofzntyQcWG/
hpzDOLr+lbyBR5wLv0TseLmcsRrZEuuwN/wO/IJv/3CvN7UH3iLIN5da0uab
QV95zN6XG2uIJU3im1ROP/ihfP2jtgR9i3xTQBaPek9HNvdIE/FokHiJv1O1
0eniBN9S5+NjWIPst5lzcjZ4ju7SXqRuYI/oQ4M6Mtvzcg7Og+7wzoB9kq+u
1YcgY87OufHB7/juwD8aTypTZLS6nDEAGjnb0/KMOiU5Cny5XF6t1r7WqNfN
6uPblXwL/99Kxt1TAsXcKB+s5P1tUyW/UYz3+90D6vNM84zx6ih2NlhdhXcj
5SX3XeItedZIx25wTV/zlbPMy9DjE7nz1eX3t3JD2mOpIfeaaA53p+sYu7OW
77jfOGmCL/gZ/M0z1dx/cTVjNHFlTDlL4vCttomhjGOD7DPFPcCNT5girej1
A9V8R7qvmnuO9Pz9pREasKGZe+Sd/aV9ijgWah9THN9kjCPWDTSHIT9p1V/u
+hYvfeBG95ZrZ6+oE+vUV87+gbLGNuHNRmPVH7WRl12/xXjye20Yvdgu79aJ
t1Xcy9U5xlaLZ0F5N89menZs8QBzyEu12YH66oHmkegmOjqhnDIgL6LepE2j
J7yH8K3h3LqUQ19lMdD1V5mf9VX3BrnHYHFd5bxG+7or7xNcO1VdHSdNtXgy
zjUXiXOwMibfwb+Tt/HuyDsv73/k7OTW5Kl8MyD3vriUtn6h9X62qUMbedh4
zz/J9juF/C7K97ah3lO4l1JeY/057zXcb3bleJXMn9mTvbkLkAtf4l6Xujf1
qaW8n/INe0Ul/3l6J8pllXzbPypw/r2S/N5SyW/kI3yrxSaxTb6f8e/KSb4z
nWidsY3qF3oypC7f585QfsjxyrqUHznvBerqM+YWvHU0e8ft4z78H9NkjsI7
12nuw35D5cclyuMC8RbDXzwYff+sZh5CbkJOAa+QX20uPrKN9C7UHpq1GfQY
XsGnmaV8m4NOvrnW8hLyT8bula8Xynf4fI57MneYvmV0OXl/pfynHG6dnKvF
fWa7J/2PW59t/QnlCf4+7lHn+8Z31Tz34+oA5YOuX2psXiLeZnEuc++b3Zf+
JcpkiW3i1jZjF98ieykX/i8ZW8h3br6V8/2eb/cH+S2bty3+O+Pfo4O9w5+o
b+d+w79vPQKO9ZstfR9WUm8+MBYM9P4/rpD/t/JvB7kd/5Cy177iru1JeaB7
HrTHWCf7j3CsszrEP3iNQlf7OCPfWnv55lL17YM335vq8rs9d7RjPAPf53jr
Pdb1J4r3OOcxp5sl/dg3/3p9pE2h5+d7zu6ub7R+jDy6XPxHeobO8uwQ2+Tv
2An3h3HGa+gcZwnd2yr5rvt+lGOifbP9N1ln7lxzgHmV/DeLsRstR1vn/xzu
ptjjGMdG6RNOVzfmieehSn4/5Jsq30Y/qaQP2F7JMeZsjXJsNd8q51Tz307e
0Dt5tiM9K3I7XFme6n497T/CMXLJTeaTx+2hX/N9s+Lt6t1q5vptwm4+Vd/Q
uw+sf1zJXIGcYUmU70kztM+qpp1/bS7BWwCx5EH9ALZ2i/EM3873Oe5y3OP4
nkS+R97HfRqfjQ9pqeb7wFfVvE8xj7tfi29xvMkRw78yD8Uet2qT+AB8wVDj
R71xqJ2xiPv0yfqqHuLm29bB7tFZ2rhjc0/mjkwuwJ2Tu+YOS96P4Cl3tS22
6edOyj2E/Xmjutc3K94D8OXvuYacmPcJ8uZBvr3ht3kruda1C31//NJ8ZLs5
yQD96CDnXuP8Ydbxrb+WDwOsU3JHHKbf5bsOd91W86hfOz7E+YPl4RDr9F2v
T8YXEn+avCfDk4XSuZ9nYh/66UNOx8oD7sicF51Bxp/uwdeR0jbGs4CH83BX
597Mne0843tP6WIcXqJXd6lb/EfRr5Df5w5WvnwzJpfhXkw+g96hW7wF8BZS
+/6GvhTVGXKQieoR7ywbfF/u4BrafcRBTJ3mfPI17jmPercCd3t1j7Hpzn3f
GI9ucU9hLvcxcBTU3fHqLjY0Sju6RVtBj+FDd/MxztXONQ3qAfqBXd6iPo+0
f4y8XmquQX7c0b6RQu1OgA5g1+CZ7HsJfnVvz9Re/RiqzlXdHz5u8Yyctbe8
OlD+8E7GvbDF9y/entqJs2Z7HdTV0bb3U6/QKXSnozh4Z8AX0F97+2r1nXSC
PIF3c3yX4H0Cusittsn770vTEea++DH239d9/x8bx8bi
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtsjUEYhue0PZ05SCQ2Ql1aauOSuDQSK1JCJF3QRCxEkx4bR8KpKiJB
bWk3EnGPRUmbEPei9LR1p5QFDcetnLZoFCEWded583Xx5H9n/plvvvkuUxBP
lq7Lcs6VQw70Br5R5wYYZNAroYMFSf5tRk+H9ohz9+Cqd+671rC+DH6gW5gb
zr88OIPeyNxN9t+GKvQ/2MfaesiKObeVcZp/XbAN/YU98zgrwf6v6Bvg0SPg
OvodLOT/fHiPPsie4mzn5sABdB42xzOfDyPR05hbzb8EHEY3Mr/Hmb0G9FPY
wngy4zT6LSxHJ6EX3Q2LImbjEPuj2GzJdS4FPYw/efO1BBtd6H5Y7MzGR3SK
NRuIZTn3q0B/9mZ7GWteouugAr0W7niLkWKlmG9Cn2SujH9L2fNavjJX6Sxm
C9C/YQ2xTMBPdBJW8S8Olehfwf5V4UMLekWwXMqGbG0PFvsMVAfzUb7Kxvpg
MVesFLMU+jTUoGvhLLpJc+h+OOEN6QFo9WZTtvtgR7A76+6l0OOtRlQrsinb
3+Ax40dQxPo+b7lWTag2FGPFWjFWrHWGzqqHU+gZwWrzPsxEX2DumDMf5eu4
mNXGB/I3Fl0AJYyXwATVDnTk2lw+uhkbe6NWs47xK8atWVbT3ei/wWpLa7RW
PsiXBriIboYx+DIK2tHpYL0lG7KlNVorH+Xr0WCxUk3XBesp9ZZqeijn/wnW
O8q5cn+O+Z3O8qPafgiFnFXNuM1bTau2p8AzxStYLagm29DHB/OpHHSgM+qv
iNX8XfRU1WPEel69/0AxjFiPq9ebVFOqb7gc7I66q3yQL4qxYq2YjkY3BsuN
9lxC7w/Wu8NgV7CaKB18j+qVe+Y6I1YTxcHO0FlxuIJ+4W2tekS98sZbr+gO
ustAsLV6o44E6zH1WrFsensDVN+6k+5WiI813no8N2YxUWyUQ+WyE4rQc+G5
N6TVw+plxVixng1P0NnYqPVmcxI6J2Zvh95YvbW3mI+xdghc89ZjyuVuOO/N
hmzpjdJbpTn90x7tVQ+qF1UDqoWJMavl2sGzVQOqBeVYuVaMFWvFdFawM3W2
3li9tYqJYqM76q7/ASb43Jo=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtkM8uQ1EQh+eWmzl2dGvlAbyKRbsRNg3aqKimEcVzsFMrKrxD0aV3sCDi
f7RiW6G+X8biy/3mnsmZOb+5lWZpq2BmszAJp25W5DsDJ/g5rGZmFeji77CB
78AX/gy1LHrUO4BNvAFv+HHifMKsCh18PoWXOT/Cr6DN4F3o42Po5maHkE2Z
/VDv5/GvQN2kXmfhOmyn2FG7TsOFxx26a4/+S/wXDvLYQbs8eMwuwQ1+Cwv4
Epzh9x5n+nfnMUOz1qCVIgNlUfzP6hOWqRfh0ePNersyUlZDj7vVo95Xj+yU
2Qv+nWJXvXGE91LMUibXKTJQFnqD4U8es5TxB/4HUOs/Ig==
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1961, 1955, 1956, 1957, 1960, 2022, 2023, 2024, 2032, 
            2033, 2026, 2025, 2029, 2014, 2027, 2028, 2021, 2020, 2031, 2030, 
            2012, 2019, 1958, 2011, 1965, 2015, 2016, 2017, 1992, 2018, 2203, 
            2093, 2204, 2205, 2302, 2235, 2304, 2305, 2303, 2306, 2301, 2300, 
            2298, 2299, 2237, 2240, 2238, 2239, 2236, 2160, 2161, 2163, 2159, 
            2162}], 
           LineBox[{1963, 1976, 1973, 1974, 1966, 1982, 1963}], 
           LineBox[{1983, 1998, 1993, 1979, 1996, 1962, 1983}], 
           LineBox[{1981, 1968, 1967, 1969, 1970, 1972, 1959, 1997, 1981}], 
           LineBox[{1954, 1991, 2003, 2004, 2010, 1954}], 
           LineBox[{1980, 1986, 1987, 1985, 1989, 1971, 1980}], 
           LineBox[{2007, 2006, 2009, 2008, 2007}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2090, 2091, 2092, 2096, 1984, 2097, 2098, 2228, 2231, 
            2230, 2232, 2233, 2234, 2295, 2206, 2296, 2297, 2315, 2331, 2327, 
            2332, 2334, 2333, 2330, 2335, 2336, 2337, 2338, 2311, 2339, 2307, 
            2341, 2340, 2310, 2309, 2275, 2308, 2276, 2273, 2264, 2269, 2274, 
            2270, 2165, 2164, 2166, 2168, 2141, 2167, 2139, 2169, 2116, 2171, 
            2172, 2173, 2174, 2175, 2176, 2211, 2210, 2202, 2201, 2200, 2186, 
            2099, 2115, 2114, 2035, 2100, 2113}]}, 
          RowBox[{"-", "1.6`*^-6"}]], Annotation[#, -1.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2128, 2117, 2034, 2129, 2138, 2170, 2212, 2213, 2214, 
            2216, 2217, 2215, 2218, 2254, 2266, 2265, 2271, 2272, 2312, 2314, 
            2313, 2321, 2322, 2323, 2324, 2319, 2328, 2329, 2316, 2326, 2325, 
            2226, 2320, 2294, 2293, 2223, 2288, 2229, 2227, 2222, 2225, 2095, 
            2094, 2089, 2087, 2000, 2085, 2080}]}, 
          RowBox[{"-", "3.2`*^-6"}]], Annotation[#, -3.2*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2079, 2084, 1999, 2086, 2088, 2220, 2224, 2188, 2221, 
            2263, 2286, 2287, 2260, 2292, 2317, 2318, 2291, 2284, 2282, 2280, 
            2283, 2278, 2279, 2277, 2267, 2268, 2255, 2253, 2252, 2149, 2151, 
            2044, 2143, 2140, 2148}]}, 
          RowBox[{"-", "4.8`*^-6"}]], Annotation[#, -4.8*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2074, 2081, 1990, 2082, 2083, 2196, 2219, 2065, 2199, 
            2136, 2258, 2208, 2259, 2289, 2290, 2207, 2285, 2281, 2209, 2251, 
            2248, 2257, 2256, 2156, 2153, 2157, 2158, 2150}]}, 
          RowBox[{"-", "6.4`*^-6"}]], Annotation[#, -6.4*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2152, 2154, 2155, 2144, 2147, 2249, 2250, 2242, 2241, 
            2243, 2246, 2247, 2197, 2261, 2262, 2198, 2195, 2192, 2194, 2078, 
            2077, 2002, 2076, 2068}]}, 
          RowBox[{"-", "8.`*^-6"}]], Annotation[#, -8.*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2067, 2075, 2001, 2071, 2073, 2182, 2180, 2193, 2184, 
            2191, 1975, 2187, 2189, 2245, 2244, 2137, 2131, 2146, 1964, 
            2145}]}, 
          RowBox[{"-", "9.6`*^-6"}]], Annotation[#, -9.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2142, 2130, 2134, 2132, 2135, 2185, 2119, 2104, 2190, 
            2183, 2181, 2127, 2178, 2072, 2070, 2013, 2069, 2061}]}, 
          RowBox[{"-", "0.0000112`"}]], 
         Annotation[#, -0.0000112, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2060, 2063, 2048, 2064, 2066, 2177, 2126, 2179, 2036, 
            2125, 1977, 2123, 2118, 2133}]}, 
          RowBox[{"-", "0.0000128`"}]], 
         Annotation[#, -0.0000128, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2121, 2124, 2122, 2103, 2111, 2101, 2110, 2059, 2056, 
            2047, 2062, 2053}]}, 
          RowBox[{"-", "0.0000144`"}]], 
         Annotation[#, -0.0000144, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2052, 2055, 2005, 2054, 2058, 2112, 2057, 2109, 2102, 
            2120}]}, 
          RowBox[{"-", "0.000016`"}]], Annotation[#, -0.000016, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2046, 2050, 1995, 2049, 2051, 2108, 2107, 2106}]}, 
          RowBox[{"-", "0.0000176`"}]], 
         Annotation[#, -0.0000176, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2105, 2045, 2043, 1994, 2041, 2040}]}, 
          RowBox[{"-", "0.0000192`"}]], 
         Annotation[#, -0.0000192, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2038, 1988, 2042, 2039}]}, 
          RowBox[{"-", "0.000020799999999999997`"}]], 
         Annotation[#, -0.000020799999999999997`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2037, 1978}]}, 
          RowBox[{"-", "0.0000224`"}]], 
         Annotation[#, -0.0000224, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
UYVC7BPOcFrDW4r/AxX23C4=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -99.90136786283708}, {
                    Rational[
                    15, 2], -99.90136786283708}}, {{-7.5, \
-99.90136786283708}, {7.5, -99.90136786283708}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -85.89892840404644}, {
                    Rational[
                    15, 2], -85.89892840404644}}, {{-7.5, \
-85.89892840404644}, {7.5, -85.89892840404644}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.89648894525584}, {
                    Rational[
                    15, 2], -71.89648894525584}}, {{-7.5, \
-71.89648894525584}, {7.5, -71.89648894525584}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -57.894049486465235`}, {
                    Rational[
                    15, 2], -57.894049486465235`}}, {{-7.5, \
-57.894049486465235`}, {7.5, -57.894049486465235`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -43.89161002767463}, {
                    Rational[
                    15, 2], -43.89161002767463}}, {{-7.5, \
-43.89161002767463}, {7.5, -43.89161002767463}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -29.889170568884012`}, {
                    Rational[
                    15, 2], -29.889170568884012`}}, {{-7.5, \
-29.889170568884012`}, {7.5, -29.889170568884012`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -15.886731110093393`}, {
                    Rational[
                    15, 2], -15.886731110093393`}}, {{-7.5, \
-15.886731110093393`}, {7.5, -15.886731110093393`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -1.8842916513027888`}, {
                    Rational[
                    15, 2], -1.8842916513027888`}}, {{-7.5, \
-1.8842916513027888`}, {7.5, -1.8842916513027888`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.11814780748783}, {
                    Rational[15, 2], 12.11814780748783}}, {{-7.5, 
                  12.11814780748783}, {7.5, 12.11814780748783}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 26.120587266278434`}, {
                    Rational[15, 2], 26.120587266278434`}}, {{-7.5, 
                  26.120587266278434`}, {7.5, 26.120587266278434`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 40.12302672506905}, {
                    Rational[15, 2], 40.12302672506905}}, {{-7.5, 
                  40.12302672506905}, {7.5, 40.12302672506905}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 54.125466183859665`}, {
                    Rational[15, 2], 54.125466183859665`}}, {{-7.5, 
                  54.125466183859665`}, {7.5, 54.125466183859665`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 68.12790564265028}, {
                    Rational[15, 2], 68.12790564265028}}, {{-7.5, 
                  68.12790564265028}, {7.5, 68.12790564265028}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 82.1303451014409}, {
                    Rational[15, 2], 82.1303451014409}}, {{-7.5, 
                  82.1303451014409}, {7.5, 82.1303451014409}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 96.1327845602315}, {
                    Rational[15, 2], 96.1327845602315}}, {{-7.5, 
                  96.1327845602315}, {7.5, 96.1327845602315}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -78.8977086746512}, 
                    Offset[{4., 0}, {7.5, -78.8977086746512}]}, {{
                    7.5, -35.14008536593051}, 
                    Offset[{4., 0}, {7.5, -35.14008536593051}]}, {{7.5, 
                    8.61753794279015}, 
                    Offset[{4., 0}, {7.5, 8.61753794279015}]}, {{7.5, 
                    52.375161251510825`}, 
                    Offset[{4., 0}, {7.5, 52.375161251510825`}]}, {{7.5, 
                    96.1327845602315}, 
                    Offset[{4., 0}, {7.5, 96.1327845602315}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -105.15228265988358`}, 
                    Offset[{2.5, 0.}, {7.5, -105.15228265988358`}]}, {{
                    7.5, -96.40075799813943}, 
                    Offset[{2.5, 0.}, {7.5, -96.40075799813943}]}, {{
                    7.5, -87.64923333639531}, 
                    Offset[{2.5, 0.}, {7.5, -87.64923333639531}]}, {{
                    7.5, -70.14618401290706}, 
                    Offset[{2.5, 0.}, {7.5, -70.14618401290706}]}, {{
                    7.5, -61.3946593511629}, 
                    Offset[{2.5, 0.}, {7.5, -61.3946593511629}]}, {{
                    7.5, -52.64313468941877}, 
                    Offset[{2.5, 0.}, {7.5, -52.64313468941877}]}, {{
                    7.5, -43.89161002767464}, 
                    Offset[{2.5, 0.}, {7.5, -43.89161002767464}]}, {{
                    7.5, -26.388560704186375`}, 
                    Offset[{2.5, 0.}, {7.5, -26.388560704186375`}]}, {{
                    7.5, -17.637036042442226`}, 
                    Offset[{2.5, 0.}, {7.5, -17.637036042442226`}]}, {{
                    7.5, -8.885511380698112}, 
                    Offset[{2.5, 0.}, {7.5, -8.885511380698112}]}, {{
                    7.5, -0.13398671895396463`}, 
                    Offset[{2.5, 0.}, {7.5, -0.13398671895396463`}]}, {{7.5, 
                    17.3690626045343}, 
                    Offset[{2.5, 0.}, {7.5, 17.3690626045343}]}, {{7.5, 
                    26.12058726627843}, 
                    Offset[{2.5, 0.}, {7.5, 26.12058726627843}]}, {{7.5, 
                    34.87211192802256}, 
                    Offset[{2.5, 0.}, {7.5, 34.87211192802256}]}, {{7.5, 
                    43.62363658976669}, 
                    Offset[{2.5, 0.}, {7.5, 43.62363658976669}]}, {{7.5, 
                    61.12668591325497}, 
                    Offset[{2.5, 0.}, {7.5, 61.12668591325497}]}, {{7.5, 
                    69.8782105749991}, 
                    Offset[{2.5, 0.}, {7.5, 69.8782105749991}]}, {{7.5, 
                    78.62973523674323}, 
                    Offset[{2.5, 0.}, {7.5, 78.62973523674323}]}, {{7.5, 
                    87.38125989848737}, 
                    Offset[{2.5, 0.}, {7.5, 87.38125989848737}]}, {{7.5, 
                    104.88430922197563`}, 
                    Offset[{2.5, 0.}, {7.5, 104.88430922197563`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000020\"", -0.00002, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -78.8977086746512}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000015\"", -0.000015, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.14008536593051}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000010\"", -0.00001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 8.61753794279015}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "0.5`"}], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 52.375161251510825`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 96.1327845602315}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.00002383959282800582`"}], ",", 
                   "1.87021302828696`*^-6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000224`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.000020799999999999997`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000192`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000176`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.000016`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000144`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000128`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000112`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "9.6`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "8.`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "6.4`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.8`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.2`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1.6`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693265476128682*^9, 3.693265557108314*^9, 
  3.693265712735215*^9, 3.693265760000919*^9, 3.693265820667389*^9, 
  3.693265922901236*^9, 3.693266501030303*^9, 3.6932670688847823`*^9, 
  3.693267380064581*^9, 3.693267463833372*^9, 3.693267562890038*^9, 
  3.6932698478857327`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
prDpfGh41Jde94ePhP34HMGGrFuLjRv9ET6YJcCLLDcpj17JAtp73Q//Fxe3
16QNs2XBTNHotn1+fL6/BPYXGrzfvfhWH2XN3n+i4YUaHF10W+6Gfx8l8e3+
xOdn+fgfAvzY+9lXSh91Uw1uTSz7l/S+uttveXJEN7W4T18rKZWP/4/+/6/2
Q39cRw1nGNzXYsLdS5uXltN5TsNObeFuSSaEOLVnpwXy7ZEX4Cd/ePG7/r4c
0Jny3md6HwjIO/v72R45GBksFPpyBx8vJsCHxI0an/xMFMqcT90eU0LbM9bV
y+a4KJy7O3nr6gS+/f37QN/TM5PPzxeGyIkxhvKlatBgnLjFYYQwqGzUd1I5
8//q/4H2K2D2G/2f9gcPEeBtlr3fzrYYArmflaJG0eeOkPlc4WFSQ+BbYrWG
azj/+dKC85iF3zThKQ+koHJF9bIA+txxwt5QOChMCsy6uLlfo/vx/Of/K3yw
hADvOSny+DdrCVDuWSv/iq4T8xm+E2pZEnD53nbVi3SdIPIv/X/2//T//3G/
447dB5Wh+6Dz6D7oGLr/eYnuf4SnPjk2XooEC4k99q3STKhW8z3VJEPCtb2/
Yoey+++HNND9EDNTyWKUPAn6u40mP6DxX+VPLnFikWBieni5PHPgfRKOb0H4
sQjPv0+qQPdJu33HNTPZJNzRDto/XZwJsdvGGd/lkhB9LoR3aggTpmL3Sb2j
HA5/5ZDw5IDvu0c0f6qlWHS4Cgmra1VKDCX/jJ+C8KsQvhK7//O2lBSdq0TC
9meSU+ro34/MdT9bNZTme8NXLYD2ny92//dxcc6GG2okuAfq3J3cwIB3+8Vt
Y4eTICZ/rCK0i/FH/FuEF0X4eOx+lDvheUzyMBJOKu/dHfiGHmvnf1puTMJW
TsTG098G3o9ac+pvxhiQUHKryTa7iAFzboWF6k0k4eONcvl7Tf34i3/A1yI8
fn/8UhzE59Ofr3pWMbM4lwENqrsrl9uS4Jt2mtv6sf++3ADdH3/Wa7EjLUmQ
t/Se+fEiAySvvzaKXUrCN/NH6ipV/Xj9P+DbEJ6D7tdj0f16WcLHOmX6+7tt
zixV2syAQ2oWpvNXkLD49K1N3OSBegIrW6NArTkkPG8w8p4znQHncsQsyJUk
pB2Xes70YEAdhrfE8GcxPK4/SNbZ423tQkLqY6d85WEMeLKDCngQSAJ5hVP9
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
WwLM0u6+C72fQ02O0ps4VIwDXT+vNy7UvkvlQ6tpULMyDO3IWaWnfp86/ko3
rdddGY798jw6pOompcNR2ajnSUDRlTsh1lYE7F95KIMK76Q67nm5RE8UB6GN
G586jpaD7Lnmuz8cy6QoYQ/Z0wdJ0D/62m95ARsmXzSrttAXApNHR41fbpaA
i9puROFWediiNeyz4tG7VMZq55nvfhCwuXy5XPKrHEpRzUlSL1oRnvk76b5e
kktFHP7x/FiGEpx/VnDJSz6HmlJtOHuGlRI8VUmw2UwRIF3lWuSxlAEvo9zZ
XKk8yiHkUtUpTUU4fU7uziHhPGrolVSJVQt5sK7l8MT0D3epMuWMlOkVXPAe
Eus26zgB4zTW7RfayYDxi3vWTlh6l9JXyf2ygeICsff7t43Dc6l5RYt2HrrB
gc52qxMK/reo3VbXDq11V4AU0+sFbh05VK9vZceUXzywvPjmr/ndu1+nruXo
0ClZW6Vsjhyl9zuZI+u9gtsoi5Udf30earz1msFBkSkfduxKKCkTgk9uBVfb
wkTAi6q+behNwnTJDV9+PvlK1Yo0vezLIuBHtVtXJ4cJ28eef8obwoFxc6X3
LaLje4Nq+YthcaIQZx/raiDX//dkf7PYPmc+fKbme3wx+t/+93pdj3DlnCbq
wdKynb50Pto9Ybjc3cwm6nFJ0oFf9SREPEtYZKjdRfmO08/1p/NPm1TFe/ZV
BljJqAufptevzHdll2/ODOgapf78RyoBG+5os90uMeAua8Yhbzo+Ry368LnK
hAHBc56+myXOgUXp7xY+8BSBrpers8/X0PU/9dULFvVQy7bYJPxWE4e+q7Zj
Qw/LwRRXk8Srt0goviq/Zc/UDsr/S6hNQx0BI8iG91PpfJM19/0N5c8EyAXe
mW3YSeePmxOH2tH5qLU6NlehmQFmGof3h9Df/9zay0CslgHbd7d03aDzz7Ur
04+3VjDgXrO1a+NPAmK4qjJvShggNvd0kQrt/01bOwIe5dPPX+0f8qmMgLMN
U2UudTOgXfnnRfMqOr9umjjCsYEBI0u2vo7/RMAliVEzf79mwNpQYZFeOv+l
xeh6nqN//8yEXQYL6edf19aItM9kgK3NKNkGLgdeX70dGKQrRJ8TwmOOniFh
2ibGU8tJEvA70sf2S7w6/HIaYsD7SJ/zxuidjK9iQ9OzOzmiu8Rgc4D8dR+u
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
      "], {{{}, {
         EdgeForm[], 
         RGBColor[
         0.35277521585301597`, 0.4799778937991487, 0.9436995027006474], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNUK0KAmEQXBR0vXsIMZ9BMAjX7eIj3HUFoxjtPoNFNBgNJovF6D/nXzBZ
BB/BGXYFwzJz+83M7W4l6bY7OREpo/KolYrcgQFwUhS5gc/B3+AZ+AF8gNqC
D4GfkkgPAS9H9neopZqXGQvwB3gKnKrpRsCZmjbyfzKfnovYNz21EPqCSDW0
fvb3dnXt2OfhXM3A+glwr/Z+BDY854l+Sy2HO53U9Ge1ImdG5Po6sO9zxmp+
9jlX3TXMrjqnL3Y990t99w1w7Xvyxr978R5fbOk+sw==
            "]], 
           
           PolygonBox[{{2261, 218, 219, 2262}, {2191, 626, 210, 2170}, {2260, 
            217, 218, 2259}, {2180, 209, 626, 2544}, {2091, 210, 209, 2209}, {
            2058, 221, 220, 2233}, {2221, 220, 217, 2128}, {2658, 219, 222, 
            2229}, {2249, 222, 221, 2244}}]}]}, {
         EdgeForm[], 
         RGBColor[0.4631599345715812, 0.5750531258593093, 0.9508807931416691], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkb1Kg1EMhoNiPbW7g5tQUCgiDl6AiLNQKIg6dXOxiDoUwd3RoYM46eg1
eA0ubUXxB/xavw8HfwbFRdTnJRnCk5OTk7wnmW626tsjZjaPjWJrE2YF3ITv
8A0bYF9ls10ST4gvVMz2S2Yz8DiZdbnfgiXuDsgZg7ecv4nn8CZ5rcdxsyf8
D/xVcl4i5xmeYT38WvIe6tWGU/TYodcs/C17ffWpct4jXuA/JNd5Sf2/0PkD
T0NbBx5G/fPk/dRXGj95k+EvJteqeBVe6A7/FW5EHf11GPEs+Z18xdaTa5PG
Jfw+8SM4FzqltxN1VE//1xzqcGg+H815RfrgVfI/6++TFdc4iH10I6cHl+N9
I6gc7S83f6O8dsxTs2nE7rRDzUv17pPnF/E+D2ahS3Wl9Try+vAu9qh9/gMr
KWSX
            "]], 
           PolygonBox[CompressedData["
1:eJwtkr0vg1EUh08Evd73P7BJhAGJBCE2EWaaSMytxUIEi2JiMLHbDJVK2DRh
qYGhBgtF4mOoj+qgKmli9ZycMzx5f/fmfP7u25FaTC40iUgXNMNBELnjewv7
6JZIJENAifMY52eooX/gEd0di6y2iqxAH7o3Nq13/ehcsFytMYre8bP22EQ/
QAX9CffoK7iEAlzAHKShCNdO0WM09gSOYQqmIQ+nnqO5M8z/LtZjFv3bJlKH
L6jCfLBddZ5ldBka6D+oomOI4AzOYRu2gtXQWoPsOADDMAKdwXK1xhH6NWFe
1eEpWIzGlpnlDdKQimxmnX1IZxDz+AXdQ+yS+6veloJ59aFvhL4JpjWnQa9D
yCbME/UmGVlv9WA8Mo/Uq29ialCJrLb2aI9tR90167U20Ou+s+6+B7uwBhmd
z/8XfdOcv1nBPVPvJqk/4Tvqrv83vmKO
            "]], 
           
           PolygonBox[{{2163, 212, 2209, 2172, 2173}, {2838, 1649, 2859, 2867,
             2868}, {2556, 627, 2216, 2191, 2192}, {2652, 231, 2263, 2629, 
            2630}, {2537, 2536, 2216, 627, 2549}, {2030, 2029, 2260, 229, 
            2117}, {2787, 2786, 2864, 1653, 2901}, {2171, 2170, 2106, 635, 
            2138}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6044706767817786, 0.689775552361938, 0.9620052924067606], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk0lPVFEQhW+D9LvvtRMoC+OApDtoDI0rDCx1hyGGyY0mJhoTaeeRDQ7x
H7jzd2j4BW5MTExcuDA4oKAxNO0UEW2g0e+kyoRF3XOnmk5VdZ65MnK5KYRw
HWlG7nHYmw/hNpjlQkiRNe6nkxAGwLfgj2hv+8GN/q5/C9H2VXAJ/IXUkTnO
W3hvgC3ISe7msTOHDLKfTexvLqclhA38ucQ2gh95O86+Bi663//+8x7f1yyE
MjGvZBZ7J9KNVF23KzXRfhO4KzW/28FvHusRdHeyvysy2Peivw/pQsqFEMZ1
Bl/xZ4Evb8CH/Ovjvpn7W03G2QRy2O208L6aWL4RX6XUOHyamO1DSAk5EU1/
Uvzxdkq8gT3YrfA+CuZ4O839o8RiVcwD4AznEfZTYKvzJv4uoncBGUMytyN7
Ex6n+GkEq5dqqP/jrpOgf1U1jVYbcfUBXEbOqk+i5azcAzjsnA8hDzyX1dTq
rbr/BrdyPsf3FnCJ8x71DVjmfJ/9ATBJLX7lsYK0cV8HnySmKxsd0eJ+yd2q
55ulpi87B8GZzPLeUTCei17HiueoXBte42veO4pfebShMwq2g58T68cafpY9
nhfcffG+/hOs30rr9MWB9PVWC/ZXHDe8v4edY/n8nllc1cz86L3hXItz9ali
lw/NpWz3r7Nf9xm7SWzPwfOqm+919zpaDO8Ss1NyW2nB7CQFO3f7vLdHm6np
aHGOeaw33GYlWs/2eRzz0eKYBbf5jOwGe3xGPuE3H61nmsjlZ7R5nYpWM9VO
Nd+c2bxo/ko+F8p10fkRT5PeV+qvPv+j2qap9epjfN3xOBXvkNek5Fx3rzsX
Xfevz1pratyLS81Vv/uXj2eJzV0hNZ1ez/9oZvwPeq8Ne13eR6v5Me47CtZr
RfAfmaKa+w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtsjkEUhucv/b/5/r+IukUlmkbdEhYSv+jaLZUmaFXQkqDifluQEGlX
JOxIEGrFghAVIpW4JCpBUgkWFlRc69arW1uq2nrenFk8yfvNnJk5c+b9TsH6
XaU7s5xzW2EoFKWdmwvNKec+Quyd2814FfyNnCtgblvSuc0wCv2MsdyEcxNh
kNgBb1pjfejxxCwntgxy0dNhGoyFcQHp2ZCByVAIXzj7K4xJ29oiiNE9sXPd
cJq5M5CEGi5wEAYYb1UO5Jrg/E50lLa1c+EUsaNCfDUMR19hzT70DOZ7+d4D
GfQU6NL9YVLS1mjtJPbbnrQ7vU3ZGTqrhzO/oadBKmE5tHm7g+6Sx7oJ8Imx
dub+QAs6zfnr0GthkFrm8V3qbKyR76lpq/UWmIX2zFcwtwnuM58dm9b7JNnv
BsScn4Qx3t5Qb1nO2hUwmvgSYouhEP2SmDZnOSm3797W6g5d3nLOC2+mt3vM
WCM8gIdQnLK798Ji9Ddy6oQFzC2ErNhyk4didI7uDLfgNhyGQ/CDuZ+xrdHa
J/AUHkWWazm0om9EVh99f0TXEFMN5+A8nIQTUAGVsIicFsIGqIKytNVSb5iP
PkrMkbBHTdhDe9XCWeXvrb6qeTb6ImdegDr01XCGzjoGx8Oa2pCDcnkd8lfN
m9HvGesI9X6Fnk9O8/Q+sALeaA3cIfYurGJsJVTCmuB5eX8/HAhrykOMYt9E
trfe9IU3T8vbM6ET3Zoyb8vT8vZz4vuJzeG9u0PNVfsuxruhJbK7y58D6F5v
/7Y8Iq8oRrEZ9By4CfVQBRthKWcsgVLVHkpS5hXV4B3zpbDMm2fkncHQP0ZA
szdPyBst+rdj85y8dw8avNWkMryx3lpvUhf21N59Kbu7epZ6V0NYKw/Ki7+9
naUze0LOVcHj8voQb/6VB+SFkbHVQjX5R76TGSuES3AZmsL/oxr9RV+PzPs7
FO+tx80OPVa9tj0yL8sjTehhsX3L4+oF3tta7RGhr0XWGzT/Fv3BWy/p1v8Q
/in9W/KovKo3yQRPyVtl4S3kOXlPPVO9cy+sll8iu5/OSHj7Z/Tv1Ie3dWnr
peqR/Yy3ayxhHspHZ6est6pfqjfLU/KWetIv9Bf4HGqm2iln5a49Ory9cUvo
8er1/2LLTT16EP0fTlXg+g==
            "]], 
           
           PolygonBox[{{2682, 2681, 2559, 630, 2477}, {2638, 237, 2273, 2639, 
            2640}, {2021, 235, 2265, 2278, 2279}, {2902, 2901, 2865, 1641, 
            2826}, {2194, 2193, 2153, 205, 2160}, {2219, 2218, 2285, 256, 
            2023}, {1981, 1980, 2268, 235, 2094}, {2560, 638, 2113, 2185, 
            2186}, {2154, 205, 2173, 2181, 2182}, {2845, 1640, 2861, 2852, 
            2853}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7395358408622983, 0.7964502866529725, 0.9746736793279445], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
3gv6tlf4uSToQKNCcI1zkv7COa1JBMV02NaVmaDf6P3x9Q2+c/A/2/7/d0nY
CjkKfHB2Tbzvz4acyP2y5h3Ct5lf5rAun4692beteThDcCwfNN9O4o5t8j2b
7dwH+xrtPId8h1ylzvb2NGtEu1sSetog2FkWOkEf8PGRzmMROUYxYhiyIBP3
q4WglSBPXic4PR/3B931sB85Kx1+ZWh5+MXmgt8nkaMtSkL3O73fZvsA5EDe
w2UhM7LMsjzPJjF/ahJ3rZlteL35/9jQNPaM5m0SnuG9dnm/J5OY30X4tST2
eUn4t0ns+7zwONF+KBO++UrbOGddVoja6tt83H3uBnfnW9/x613/EPvGGcb7
PmIX1HwP+nm838cZ877LMsDfQ/7G2v8iBxOsypz0ZfiJ6cLTBI957k9MizqG
OE7dOsH5ODJN9tzaVMR34iG8QmeKaU1IRV3aNHeaaZFfP6XzbJ6O9ZM89zzp
ZKpwa9eAjzofQs6Rjh1HbFvYFd8neo9a7/ELz3/Aa8iBOfMHHOeJ9+Qt+5y/
fSt8Syny7r8vRQ06ymtHOx7x/kedUxX3UbhB0IG4lo+8Bh7J065yTttPOHHs
TyfhxxL7wbv1baTWjSyFvqqdEwzW++ta+71S5BidHPO/r/f+Gt9BXavnQXpu
KXxLMc7ypmLkAX2dU5BHr8yEHyQXID8kT7rQeQR5ykWS+VntWVkI4Lmjc0Xk
IA88Yh1jx4n2u0r7nlaK83nOZ1zvuup5x7ODjlUTfKYP+wwn+Hkh/S+d+/PF
uLucfydBhfOA9oID2fBl5CbtT/mOzeCj8GOX6x73Ko867IJi+MGLqMeL4Y+7
FMNn4NvOtJ9ra7/X3PQ6+Vt1OnIP9ISNkOtXmxd44j7SpyBmpVyzU7u3dw+t
QxLf6Ac19c6Oeg2+mLwEWVp4b+Q+R/xlxP8c4bIk+przZRMv6/0Sjf86CZ6q
zUPnYtyhc4uh11rbeY19I3JM1x7naW0nwcwk4sg84TeT0MPrSfhK9l8h/Ick
9PJqEr0nelD0zGp9XpN9l6f6rMf6ruFLVifB25IkzvdnHn/UmHk/NU3i7cok
9L2M80+C3zeSOCti6FHxviYJna8SXu5nxtr6HJHzHesKnV0seFy0eyYBPF+a
xN3f6Nj5NblVNuiT45ypxU8ItymEfOj1EfNLPJ/kc8LGXnP/hz4QceSI78Jq
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
AMKxLeE=
            "]], 
           PolygonBox[CompressedData["
1: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
1YXr1GZU4RxHuY5ypNXU/x8UZf9m
            "]], 
           
           PolygonBox[{{2822, 1599, 2825, 2823, 2824}, {2045, 2044, 2312, 325,
             2328}, {2651, 971, 2628, 2646, 2647}, {2024, 2023, 2284, 154, 
            2096}, {2016, 64, 2017, 2332, 2333}, {2347, 383, 2346, 2351, 
            2352}, {2848, 2847, 2851, 1635, 2906}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8540740568316371, 0.8864794859676055, 0.9859435400531545], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNWWl0ltURfpMvyfe990WQVCCGEom0IBFISOgGyL5oY2iFHBL2KCEh7H+K
ssQeA2IN4bQ1bAphCQSoYQkQrILsRBEkFgSicCxQWooCbQ8eOUdroc/DPDnk
x2Tud9+ZO8udOzP3JvmFmcNnRHue9wz+hICvxnjeZcAlwB99z/skyvM6A/8E
8DrGy4E/j7JxGaASv9uBMc153lKM/4O5zcDTgYsA0wA3AOcBDYJo0IcAN6MM
k38VeL7H761a/4J4boiHtFO0Jtc+Gfa80cBtQf8l5UP3DMBK3/gqgL2I5w3D
uBnGM8RP3lzhaZJDO7YBMkC/FWzpEfuWI9o/gf9r4DXA63zTZRNwGD6KArQF
Tw/4jyLvhmw9+mdxlNlSJjnbZDvHAySLMmvAmIL5tc7WSgC0AWwE7ABsALSK
hR6QsRUwGfyFgBcBs4X5ewxgZpT84pluCdItAxCH8dQmfLPlk6lN/DJKvzlP
nyWB52bIfDtKc6T9GP5vh7mPwiY3V7I/gA2XoOtx4Jed2dUX9sXadtz30Uno
NRATDcARKOUDouNsfa4zVr6fqd+0N1825spO0mRy3wG/BEziPmPtFoBmWjOi
dUOAe7GGo/XtDnhOQf7XwPH4HQBaAjZEm6/XAT+iuTMhm2sNeAvz62DXr8G7
2pks8nINr4mcxYqB3wHyABNlw28Uw/QvdY337Psk/SZNP99ipQ9wsmd2pUKH
XfQj5O8E3gpnbsJ8R+Bq/L4D+i2++SNV/kiNWPwcCNs6XUIP9pPjW4DWvp2R
H/jmX+pZIF0nS68hsLU75N4D/aOgew5zbXyzYbZsKhRf4+/Z+j1R3/K1P/f1
Cplv6ddzIYv1RM9ilnq2BwSA/0Lv5pD7LmTtAyRivBf4ethspw+6AvcC9AYM
hZ6DYkzfCVg3DzAWMA6QAxgZshgbq/FTzuh6uwd0nE+Qjf+DnE6QsYZ6AadK
DuWdC9vvT8PmU54Pnocu4F0A3odFn+5ZbkoTL+cawNMF+DRwOejPgP4N4rCt
/Rnw0bDxngeeD3tyYftAwDDolwXI1l5yH29qzzmm/zJ1JoZpjt+6am6yzj9x
muJkIewfARn9ndGkhR587yr+EfIN/cjaUBdj64/SWaT/LgAuAs6GTOc50jtP
vh0rvbO03gRnMZAHPBpwmusD/xO4LeIjMc7yzUjRn1a8kKc+bDFTF7b6cF45
NkM+514cDFveqQI+FLb8UxO2PBirXFSj+e3AH/r2bRvGG8RbCXxJufpnwM11
HhmfjL3Onu3lE77FfQfgY2GL6cPAp8JG8wnwjbDlteOS2Ua5PkG6RBT73MMk
2dBe4xSdj0TJTZHsROEU6ZUs3TIUc+nKiS2Vax7yzAbSrAJs9uwsbVSd4e+1
nsV8OWAL9q8SsJp2RoyuM3CisxyZ7Ix/cxN+rrtasErrNZcOLbTmas1fjxjf
tbB9y1OuSNa5ax9RTtcaXeVvnhPmaq7FupimfMjcEI9xKf0bMflrJItze0Fb
y4YHG/1trOXreRgvAswFPOqsRlwErgGMw/csbE4pcwTi+XVntSsT8CzgD6Cd
DplzAJUYrwcsj7M1X9O6OXB2T3z/h7PvpFsDaAUoltwcrJUdazKOq4Y2B99K
jPuwlmG8MM7k/R6wBFCm36xnCzTPtV6WfNK8CVgpWk+1cKXGjfxl4m2kI18h
5D8PyIs1exbIvhL8/ht0fAW4Tnqy5pfKH+wff4Tf++Djzs7yxSviOYvf/8L4
pLPayxp8GHguoC/mZ6onGBBreZw0/H4EkAf7C6HDBOBT4L8Omnrg/nFWk1mb
+wTm309VlxfIN+XOctEyZ73HecCJGPNVsfy1SPtFnm3O9mO7M72vqh/mHnAv
4oC34/smQEWsjemvKYB8xEoR8B7wlilmGDsL5WOuT9uK2QPFmM8y5bdmgdlz
BfQPYewoA+OnMd6J+cMYpwOS4LcK4FnyGX03NM58QB76O0c5l3HXjXUlbPML
Aa8CasFfALzbmR/iFY/003ztyVyNqWu9fP4X4NcAozC3CPgp7ctE4NGA7hi3
Bx4fa2eH8XMQdDuAf4X5ZWGzpVY+j1fM9gLNS6B5w1mcrdUZeTgw21oq/hdo
n/7szM/0d+/AYrd/YDE7XnJJ20xyuD8F2iOeX8ZB4xnupzn6l7plSc+KsMX9
K+r3Up3pRd03az/LdKaGBDY3WDpQHm3ODIz+mcB4aRvXPaH4rgd8xJoH2o+d
7U2J9pDn4yudEfpmGmC6bKDtc6Q39eeZyXbW836hOK+XjfW603HM+OrT5MzQ
t5wrVu/EdR6HrjUYf+9sf1oqNm6pHzgWYz0G6z/7gKWKKcbWFvUS67Ev/8Z4
N8bfOcttjBmeB9Zw1nb2gBc1Pqf1stVfMK4XKQavsfcF3gH4rdZ62xnNNNGV
6gzRdyzczQC7eCfTmaCtixQPtKmf9r5UPqUvX1KeKtFaM/WNMiibfQl14Zq8
h1FGsXzDfoU61kjPceo/F2rNbPVOs7Qm1yb9bvG0kj/aCidqXCS9qF+j3+uU
L+fqbB5RnjymvaDMcsmhvMWaY0xRr/POat85Zz7aE20+O6KYYVxWSSbX2Ots
vfec5bwp+nbAWf5735ncKsUBfcw4DHRGQsrD3APeoxr9t0s+PA3+O8BnnAHH
H+oslOo8rNO9jHHL81OrHPG5sxr+mTMe8mYCLwdeIT9sUo6eIhvrdB6264wW
Kh+ckP2LZUeVeKu0Fu8X0aofizVP/zTo7AzVfGkT/qXinaVzWqpxqfalXHvD
WFkh+nKd2SPSs1GPOYqlS4qnCq1NWy/LLn7bpPkK5YcB0rFButNW9tQzmtz3
R6gvL1YOYHzxnpCle8MK33zf3ln/tFz91C5n+XZ4YHvqa49Zd+aptlbr3YJ9
2k7tO3/38O1+fDtiv6v1nWvXahyrtyK+m7wbsTvGJGe9Kel2qgdkf1etNco1
31v3u79DzmPO+tgOzvrGSvEdcda7FQTGu1Z97wZnZ2KjM7pq6b9BmDYWKHZY
azpCTlzI9CVO0rsW+yD2nPujzR+sw6xfb+qdqztwN9V01vaI3iQYiznKh9yb
b0LWz/OtK539LiBVmG87vJ+fUD/GvixOfqM+e6QDdRmkHom9UjvRxAloQ6eQ
vW/xTsVvuYH1D+mB6d9TvcQTzmw64Nt+1iqP7NK+8Xcn0XR09q1WeuwI273m
A/liVthq+3bf8uE8ZzHB2MjA3A8Dy71fOrsf8h44BvjHvr3TtQJ+2tm9czxw
O9/eWC5j3SngLQHOD+w9he8qvYAf9+19Ihk4XXHIeOwJqMb4577F/jDFf2vd
KXi3eET1kXXyLdBdAf0y3/oe9j/ZgfVD7ItGAV9zls+fd2Yv/UeblzqrXcud
9RzsPZ4F/mlgdSUBeJ9y2TvOfL1ffn1B67MvzpeNRcAt1C+xb+L7Bd8x4sEX
6A7Cu8hw9WfPBXZ34R2A/s9ylrP/CjxGtrCn4+WUb26PAe8BRKDDbt94aMd0
9eXUh/3gd6r73M98fSfdDvz+Fuu8zX0LrLcaF9hbEvXku8sS3Unm6J7OezHf
L3kHKVE/1sNZrHalXyOWBxIi1l8ynx/C/FH1VOud+YW8UwM7Kz10XphTGvRu
sEQyeV9Kg9ASzD3pW02tUy721Vewn7gdsvccnssiZ33BfGfn86b6NsIdnd2B
6qX5hsM3Yr6lUQ+e9duiu6Xe6rBqEXM180FL9QTsEXroHY76k5b9GHuCvsrz
rDFfSQeux7cFyqMfp0tP6puiu/Rt6UkdqXsX9Xi39JvvCDel4zfSM1p6Ub8k
5Y5OsnGIauE90bEmDpG/+Y1v5imSG1E9jRL93dCD32HJ6K695p6f0xvQWeXE
qXqPbpAc6vOi6lmW6C7qzeiq+t/LWp9yKK9Sd1v2FAOl65BGvaVXRPpwrwqd
1aACZ3tJ+oHqmU6IhrS0j2Payt98u9momlLlrH+hTN4zhum+MQP4PWxUG6z5
DnAXZ/n7SWf9Lvveamf/8+Abf3PfYpSx2s23WGfM8z4xEmv0B+QID9A4Uz3S
BeArvs1d5v9rgge6HGIuw/xB32Ljlu4gVXoT49vYIHwfrHVrQdcB+DDwL/RG
xLeiNPlncKOfNOY7IN8MWZsHaQ3quJ//SwJ+H7hjYH10UmB8uaI7im+dWbd9
O39pOoMDRJPTpC5SVl+dCfZc3aUHvxWpH2QNv6tzwrgYJP5G2wZLb/Kkq9Zu
VG7ie+H9M60+nP048znv0F/4tgeXfIsFnjXqm6nzxbfV/wOt7jY6
            "]], 
           PolygonBox[CompressedData["
1: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
ac/0yHpQ9aKySTn4/4jv1yw=
            "]], 
           
           PolygonBox[{{2808, 1598, 2712, 2820, 2821}, {2662, 986, 2232, 2150,
             2151}, {2552, 2551, 2715, 1202, 2677}, {2039, 2038, 2103, 172, 
            2114}, {2012, 2011, 1975, 17, 1974}}]}]}, {
         EdgeForm[], 
         RGBColor[0.937741395999683, 0.9530882155924472, 0.9902717563147261], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1lMtvTVEUxrfjdc5uhJkECWVUNFKEPiLKwASVliZNjG5L23uvWwmiE8Sr
VIj0Um2MOpIYXLRBH/9BS/kLqEfpX2Bgxu/LWh18+dbZe621v7X22qe682Jb
XxJCKIGVoDmGkFsVwkP4KnwZnEuM+0AJFEARnAcza0PYQNw0PJiG8Bn7AtxK
/C8SXoN7wAJ2b7Q8ypEj5yJrX8F8sD355KKtK1bfg3yfxf+O78tf+xPEjIMX
wfIVXVfJder7FjFt8JFo9aiu2/Al9H0gbjg1ParzivMA6AcN+NVwzr5oWpd7
IC4k5jsczf+Z96rf8yx57epBfWo698Kb+B4jdjv8FLRj/8ysftU1B+dZ6wK9
ieXq8ztoIX6K/Y7UcjxPrPa/5BnF3gZfB6fwPQg3+Lk6/09m96L7OY3vGVAE
I4n1Ubl+ZLb+DW4BkytCOJbZ/ivvdS3xL+EauM5trX2EZ4P1NO+5les4ezOs
HUoNsk943JjrX8qs3gX4Lro70H8vWp2qdx32frfVg3bvv/Ln3dadbMFvCN4c
Tc+ca5r0+fwClxPzUd3qh/ou31FfUx+m3V9x855HPgU/T+dKk/RsjFZr3u+r
y7XkPNeEz2eX+2jvps/kAXg62syMRJsJ9WSH32fZNQ14Txp91jRn0vKG+6mA
16DOZ7Uevu/v5QH8L1qepCqER9idrFfgnWCcuF3wmszyNMCNbmvtcbT3NAQ3
Z+avuKloc/kE3hrtLjUL9a7hML7vor2/93Crz5JmajGz3vyGy55f5/SkNv/d
2BPR/itvo2mSniZ4NLOeVrPe5H1T/9Zn1ouj0uixyrG6yvqo91Hx2k/iszua
nlrvp3q5/A7F3+Eb/o72wLOpzcAn+D/0XaqA
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtIlUEYhkc90fn/E1lEJZWWtMqEoKLyQp4swigJTMEICk8XzdKgzDYV
adkNJe1mbnJlRNdjNymoTRu7Qu61wrKNLVJQWwQ9L98sHnjn9s3MN+982Ykj
ZfWpzrmdEIGboXMnEC1wHb0Q2pnQAVnorKhzmZCKToNvgXMVjJXDd/Qa+spY
ux1OoS/BLnQVXEY/hf3oQ/AM/Y81r5ztsYj2UuhG36VvMTofKiMW8wx6HMZg
FH7DHM7ykLkvYSt6Nn2zQjujzroE3Um8Luhkrzf0vYZ70527D8X0PU5x7hEU
ogsY61UemJ/J2sKoxdYeOeiT9P1Ic24YDqJr6HvPWD8k0DdCy51yci20PbRX
L2NPoDRq91VMxVZOlJsEtKLP+nzpzi3oIs60LM3yeZr2EO29xK6CYfQvqEm1
vpHAcqLcxGCG3pI9PrLXZ6hDrwgtlvLZhD4Ag8Qfgmp0sz+PznBROSbmKEzB
X8glRg+xkpCHXs6cJLl7Abnoq9AQMQ8VoM/791O8C6HFUKzj6EbYHNhaxdiE
Xu/fQ+04+mtg3toBg+h9UB+xPfpYPx/6nOVUXqrgTOXwh5yPwVp/X+UwDz3A
2BeYZGwKutG34RZ0wRXvT71HW2hzNLeYsY3QDE3KAdyBw1HL7Qdo1L+I2V+R
56bF7Aw6SwljW7wHev0ZdVbtkfD/I47+Gdjb1tEuor0yarmW/1aht3k/6r5x
dDrM9J6Wt7VGa2uhAz0P5vo/ob+R4/+LPC6vt0Grv5PuVhrYeZSDZGh30t3k
8aPoqtC8oj8w4muAakGrj/UJ3jnzVDX6bdT+hvr60Rt8fZAnzqEL2O9Bir25
3l4eSPp2urwftVogz8l7Daw5BhMw6T0kL9VBPdSG9jfleXk/O7S/r5qywK+Z
8DVk3P+RmM+RchX3/1OeWo1+HlqtkufkvXWB1QqdOT+wGqFaofqVEdobl3iP
DXiP9HiPyWsZvp5qD9WC9tDeSvmW97q8F3fDHvgPZBe9qg==
            "]], 
           
           PolygonBox[{{2115, 2114, 2099, 173, 2067}, {2611, 809, 2609, 2612, 
            2613}, {2613, 2612, 2605, 438, 2385}, {2146, 200, 2243, 2062, 
            2063}, {2590, 657, 2815, 2675, 2676}, {2143, 2142, 2196, 202, 
            2152}, {2157, 206, 2548, 2540, 2541}, {2670, 2669, 2665, 995, 
            2666}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9739905790975247, 0.9801227969942277, 0.9289113446311957], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkssrRVEUh7dLOfukJOWRR5maeuXVveUx8IhrYqKubpRSTExJHjHx+kfM
iAllQhmIlEQmwsiYifL9Wmuw+vZZez1/+7QUl6eWMiGELFaKDcYQTkpCGIZH
aQhTXGZhHXbMfRPcwreLbWN7ft7BXsjJwSd4kYRwTXwlnMRXwPKKJb8fbsDx
xGqq9l+0WrWcZzPWV/HFjH0XvId6qf97NP8bbEwtVzWK3ncBrvF9xS6L8Dna
HK/RZlKMYtfJvSGmB9aktlMFHODujJjf8hCq3K/7x2jz38MOvs/JbYPN2D7+
Btjne2m/euyU83Ri2snfy3muzLSakI74b6mzCbuxS85dqe2qvVR3xN9lCE5H
6zupXdyvd1tNbd9O+BlNuy/pmlq/A5j3XM2e9dk0Y85jFJt3vWddC+3+7f/C
hL9Ltesjne6izX8AR92v+x/XZAW2e69cYm8j/QtwN5r+63A+2u4z0XKUK117
Xc/WxHbQnIcw8X+xPLW6qj+W2P+qWT+ivZ/mecBf5lpJy1avqbf6B1LMXGA=

            "]], 
           PolygonBox[CompressedData["
1:eJwtkj8oxGEYx1/n6u73loHFQIrZpogoMTE4rvwrgy4WF7fdWUj+5Ep3GFmY
zsDEZFIGKYOUMpBFbGdgEJPPt+cdPvX9vc/zPu/3eZ5fayaXXoo559ohDl3e
uasa565hBZ2NTOtsHr2RdG4dKnACa5zdhvxV9BP0U7APHtE93uJ3sIWOQy2U
uFuGCziHcZiAJmJl7pagGd3prbZqrHnLUe5XwrlvOEYfwQEcQgtscncL6sn/
hmLMav6gq95iOlPsD4+/kEcXYMObV/kvonOwBAuaBex462+OYfXLK6T4TsO+
cnl/EarU/IQUegSmYBoayNmOmcckutFbrzqrQz9E9rY83Ica1eBRXpepUQhv
6K1XzmbJz8AH+gVG0WNwgz5jRqcJm7FmnQ29qIZqDZIzAL16FzqIXYZ9d6PX
vflRz+p9z1vv6lm9tyVNK/7M/ZnI7qrGZGQ7LoV/Rv+OdqbdDaGH4T2y2amH
t8h2kA8z1+x3I5uF9l+M7J+rhJ1r9+pRvcqDvPwDLutioA==
            "]], 
           
           PolygonBox[{{2202, 2201, 2143, 199, 2145}, {2116, 184, 2123, 2109, 
            2110}, {2373, 437, 2319, 2370, 2371}, {2122, 2121, 2258, 184, 
            2116}, {2383, 2382, 2374, 437, 2308}, {2137, 2136, 2573, 647, 
            2578}, {2384, 441, 2385, 2382, 2383}, {2135, 182, 2100, 2126, 
            2127}, {2567, 644, 2078, 2563, 2564}, {2110, 2109, 2124, 182, 
            2111}, {2145, 199, 2238, 1963, 1964}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9901489356968348, 0.9901943459969058, 0.8129211594480354], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkD2KAlEQhHtVmPcMzQ3cezgGaiLiLAqKoR5AD2HuAYzMTMxUMPJnBpbN
FzbRW2xi6Nd0B011Vdfral5jvhwuSiJSp8rUZxAZIHxHkYw+R5uAP/AU/Rdc
w2/olarNr9SFCvACrIGPaHt034s6f4iM0Mb0dzyHYBnqeYKVaJ4smk/7frQ8
zf0Dt8GydsGy9YYE7MBP9D2w5X3qObnfVviduc/Uo+8yz/qKdrf6puht+BG9
G22v+v8Ty7z6vn1iu2fMm+7Xd8pV34Ar/yv9szeoOjFI
            "]], 
           PolygonBox[CompressedData["
1:eJwt0b1OAlEQhuGJIeEsd2Bh4Y3gFSiJhauJNCTYQFg6sVEJDVZaW9nR2Blb
UOn9IYg/8RqwsNPG98tM8SRfZnfnzJxdbxTbnRUzW0MJX5nZFoVNfJC7FbMC
LbQxo/aCJzwH5XNc4B1vmOMVJzhGC218Zt5bZzySe/Q8jDN01l4ymzLHA2rJ
e6r3EGcYUZvw7A6D5DNpth75CJcYm79zRb7BvXntumyWJ++t2iq5T8/TmFGz
1rGPHLuZ91TvDorkMwzjG327QDXuS7sV8e6S/B2Uf/EXlLWzdi9XfBftnMg/
zHgb8+0kn1FZtY3kd6i7bOIg7nge/2QWtWbsoF3+AZxVSEE=
            "]], 
           
           PolygonBox[{{2392, 2391, 2384, 440, 2296}, {2510, 590, 2523, 2519, 
            2520}, {2380, 440, 2308, 2378, 2379}, {2379, 2378, 2373, 436, 
            2369}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9944909339910951, 0.9906249897959947, 0.641750346824206], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2431, 455, 2433}, {2435, 455, 2424}, {2441, 458, 
            2448}, {2392, 446, 2397}, {2555, 207, 2543}, {2296, 446, 2392}, {
            2512, 572, 2514}, {2400, 446, 2393}, {2668, 207, 2672}, {2307, 
            446, 2400}, {2543, 207, 2159}, {2520, 575, 2510}, {2672, 207, 
            2680}, {571, 572, 458}, {2424, 455, 2144}, {2517, 575, 2520}, {
            2159, 207, 2169}, {2169, 207, 2668}, {2510, 575, 2522}, {2680, 
            207, 2555}, {2379, 439, 2380}, {2522, 575, 2518}, {2369, 439, 
            2379}}], 
           
           PolygonBox[{{2505, 571, 458, 2442}, {2442, 458, 455, 2435}, {2448, 
            458, 572, 2512}, {2433, 455, 458, 2441}, {2413, 2412, 2406, 
            2407}, {2518, 575, 572, 2515}, {2515, 572, 571, 2504}, {2514, 572,
             575, 2517}}], 
           
           PolygonBox[{{2407, 2406, 2397, 446, 2307}, {2388, 2387, 2380, 439, 
            2375}, {2144, 455, 2431, 2412, 2413}, {2393, 446, 2296, 2387, 
            2388}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9913274263830044, 0.9824075141520623, 0.42080911848642183`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2414, 449, 2408}, {2307, 449, 2407}, {2413, 449, 
            2144}, {2419, 449, 2414}, {2407, 449, 2413}}], 
           
           PolygonBox[{{2436, 2435, 2424, 2425}, {2401, 2400, 2393, 2394}, {
            2443, 2442, 2435, 2436}, {2506, 2505, 2442, 2443}, {2389, 2388, 
            2375, 2376}, {2394, 2393, 2388, 2389}}], 
           
           PolygonBox[{{2425, 2424, 2144, 449, 2419}, {2408, 449, 2307, 2400, 
            2401}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9640132748478316, 0.8902704673561581, 0.3146987976169823], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2415, 2414, 2408, 2409}, {2390, 2389, 2376, 2377}, {
            2402, 2401, 2394, 2395}, {2437, 2436, 2425, 2426}, {2444, 2443, 
            2436, 2437}, {2395, 2394, 2389, 2390}, {2426, 2425, 2419, 2420}, {
            2507, 2506, 2443, 2444}, {2420, 2419, 2414, 2415}, {2409, 2408, 
            2401, 2402}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9286877968172881, 0.7549779083032097, 0.26147873128788596`], 
         GraphicsGroupBox[{
           PolygonBox[{{2377, 445, 2390}, {2390, 445, 2395}}], 
           
           PolygonBox[{{2410, 2409, 2402, 2403}, {2421, 2420, 2415, 2416}, {
            2427, 2426, 2420, 2421}, {2416, 2415, 2409, 2410}, {2445, 2444, 
            2437, 2438}, {2438, 2437, 2426, 2427}, {2508, 2507, 2444, 2445}}], 
           PolygonBox[{{2403, 2402, 2395, 445, 2386}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8916390818496978, 0.6008402036624559, 0.23129333253727888`], 
         GraphicsGroupBox[{
           PolygonBox[{{2386, 448, 2403}, {2403, 448, 2410}}], 
           
           PolygonBox[{{2439, 2438, 2427, 2428}, {2428, 2427, 2421, 2422}, {
            2422, 2421, 2416, 2417}, {2446, 2445, 2438, 2439}, {2509, 2508, 
            2445, 2446}}], 
           PolygonBox[{{2417, 2416, 2410, 448, 2398}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8574917756561485, 0.442912557515699, 0.20268749533698852`], 
         GraphicsGroupBox[{
           PolygonBox[{{2446, 457, 2509}, {2439, 457, 2446}}], 
           
           PolygonBox[{{2418, 2417, 2398, 2399}, {2423, 2422, 2417, 2418}, {
            2429, 2428, 2422, 2423}}], 
           PolygonBox[{{2434, 457, 2439, 2428, 2429}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2429, 454, 2434}, {2399, 451, 2418}, {2423, 454, 
            2429}}], 
           PolygonBox[{{2418, 451, 454, 2423}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2434, 2429, 2423, 2418, 2399}]}, "120"], 
         Annotation[#, 120, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2398, 2417, 2422, 2428, 2439, 2446, 2509}]}, "108"], 
         Annotation[#, 108, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2386, 2403, 2410, 2416, 2421, 2427, 2438, 2445, 2508}]}, 
          "96"], Annotation[#, 96, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2377, 2390, 2395, 2402, 2409, 2415, 2420, 2426, 2437, 
            2444, 2507}]}, "84"], Annotation[#, 84, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2376, 2389, 2394, 2401, 2408, 2414, 2419, 2425, 2436, 
            2443, 2506}]}, "72"], Annotation[#, 72, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2375, 2388, 2393, 2400, 2307, 2407, 2413, 2144, 2424, 
            2435, 2442, 2505}]}, "60"], Annotation[#, 60, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2369, 2379, 2380, 2387, 2296, 2392, 2397, 2406, 2412, 
            2431, 2433, 2441, 2448, 2512, 2514, 2517, 2520, 2510, 2522, 2518, 
            2515, 2504}], 
           LineBox[{2159, 2169, 2668, 2672, 2680, 2555, 2543, 2159}]}, "48"], 
         Annotation[#, 48, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2521, 2524, 2502, 2082, 2523, 2519, 2516, 2513, 2511, 
            2447, 2440, 2432, 2430, 2411, 2405, 2396, 2391, 2384, 2383, 2308, 
            2378, 2373, 2371, 2365}], 
           
           LineBox[{2116, 2122, 2035, 2134, 2227, 1964, 2145, 2202, 2208, 
            2215, 2179, 2190, 2564, 2567, 2568, 2578, 2137, 2127, 2135, 2073, 
            2111, 2110, 2116}], 
           LineBox[{2158, 2168, 2667, 2671, 2679, 2554, 2542, 2158}]}, "36"], 
         Annotation[#, 36, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2364, 2370, 2319, 2372, 2374, 2382, 2385, 2613, 2611, 
            2617, 2615, 2685, 2614, 2688, 2618, 2693, 2691, 2696, 2690, 2699, 
            2624, 2701, 2703, 2704, 2702, 2705, 2623, 2533, 2531, 2526, 2534, 
            2535}], 
           
           LineBox[{2258, 2121, 2034, 2133, 2226, 1963, 2238, 2063, 2146, 
            2152, 2143, 2201, 2207, 2214, 2178, 2189, 2563, 2078, 2577, 2582, 
            2572, 2797, 2803, 2807, 2676, 2590, 2587, 2588, 2557, 2583, 2573, 
            2136, 2126, 2100, 2112, 2124, 2109, 2123, 2067, 2115, 2040, 
            2258}], 
           LineBox[{2090, 2108, 2125, 2584, 2589, 2107, 2090}], 
           LineBox[{2167, 2157, 2541, 2553, 2678, 2670, 2666, 2167}]}, "24"], 
         Annotation[#, 24, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{1977, 1976, 1974, 2012}], 
           
           LineBox[{2360, 2362, 2310, 2361, 2363, 2366, 2368, 2602, 2603, 
            2604, 2605, 2612, 2609, 2616, 2367, 2686, 2607, 2689, 2625, 2692, 
            2694, 2695, 2697, 2698, 2700, 2732, 2381, 2736, 2737, 2739, 2740, 
            2741, 2404, 2743, 2706, 2619, 2744, 2710, 2708, 2709, 2707, 2530, 
            2528, 2529, 2527, 2525}], 
           
           LineBox[{2257, 2120, 2033, 2132, 2225, 1962, 2237, 2062, 2243, 
            2248, 2253, 2151, 2662, 2663, 2664, 2657, 2790, 2641, 2684, 2665, 
            2669, 2677, 2552, 2540, 2548, 2184, 2156, 2166, 2162, 2196, 2142, 
            2200, 2206, 2213, 2177, 2188, 2562, 2077, 2576, 2581, 2571, 2796, 
            2802, 2806, 2675, 2815, 2818, 2821, 2808, 2592, 2455, 2593, 2586, 
            2594, 2595, 2591, 2097, 2093, 2089, 2092, 2105, 2104, 2098, 2099, 
            2114, 2039, 2257}]}, "12"], Annotation[#, 12, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1973, 1971, 1967, 1990, 1996, 1993, 1987, 2006, 2005, 
            2003, 2002, 2008, 2007, 2001, 1997, 1999, 1998, 1989, 1988, 1985, 
            1984, 1968, 1966, 1983, 1957, 1955, 1954, 1956, 2503, 1965, 2305, 
            2501}], 
           
           LineBox[{2358, 2359, 2354, 2356, 2290, 2355, 2357, 2454, 2457, 
            2353, 2456, 2461, 2469, 2467}], 
           LineBox[CompressedData["
1:eJwV0EsuQ2EYgOHfyDUixC3iUiIIkcYYW0CXYAEMLMAa3CauJYK2KEWrrWpd
BhIrEBMDM0sQiaeDJ+/5vpzk/P+JLC7HlmpCCCt81oaQo0CRDyL1IQwyxChf
dr3azjBv5h9GPDfTw7u5SUNdCK36Z+7STrppo4M++qvvMcA30w0hzDBLngJZ
ijzwSIkKc40hlHVeF4iRMae55IIUSVZJcOgbZ7pLnAOu7PZ1jykmiXJkf0Kc
Yw44Z4ckae75db8nvSVHmQoPlHjlmRcKFMmS54Y7rslUz0aqeh4SnLLJLlts
s84GY6zR4j9P6CTjRPkHgIRByA==
            "]], 
           LineBox[CompressedData["
1:eJwl00lIVHEcwPH/gLhmVgxmIqFWWl2UDgUtZotblocSLM0lS1sso8CTl24d
OnooiA6VGkFIxw4iNOVSWZmZ2V6HovBQERVIRJ+hw4fv7/1m3pv3mJm81pO7
OyMhhBjvkkNYx6+kECa0gm/mPXqT6+ZBTSfGKOO0c4u21BAqaaKeOhpopoX3
7OIttbxhCa94wQzTPOMJk4xSzUue85qNaSFsYTOlbKeEp17bplP6gMfc4TL3
GOchj5jgLhXev5VyyrhvN8wIY8y320E1VVRyO/4cupMT1NDJcRo5xiGO0sFh
jhBzXru2cYBWWmhmEwfZRxMb2M9e1tBAPbnUUkQadXx03fW6lixWk8MX+wJd
SpR8/th9ZY6BlBC69SK/zbP84KzvsoMuTtFDI+e5RC9nOEfEuTmaoVFSmeU7
PznNXyI+O4EL5mRNZB4fHGfoAhaSTr/dNa7SSx9XWM4qVjLkPgvjz8cKMt3D
IhaTTRZRCskjl2UU89nv+IYWxGc+OS7SoaT//4F/G21jxA==
            "]]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2349, 2346, 2351}], 
           
           LineBox[{2270, 2102, 2037, 2255, 2118, 2031, 2130, 2223, 1960, 
            2235, 2060, 2241, 2246, 2251, 2149, 2231, 2660, 2631, 2653, 2649, 
            2646, 2628, 2643, 2640, 2638, 2272, 2636, 2634, 2633, 2626, 2287, 
            2286, 2282, 2283, 2088, 2289, 2292, 2288, 2297, 2299, 2302, 2294, 
            2295, 2301, 2275, 2303, 2000, 2298, 2266, 2069, 2228, 2291, 2293, 
            2004, 2079, 2284, 2023, 2219, 2085, 2279, 2021, 2094, 1981, 
            2270}], 
           
           LineBox[{2049, 2041, 2046, 2025, 2053, 2050, 2051, 2042, 2057, 
            2055, 2056, 2052, 2065, 2311, 2314, 2300, 1970, 2313, 2306, 2054, 
            2309, 2320, 1986, 2312, 2044, 2321, 2047, 2315, 1994, 2330, 2317, 
            2342, 2026, 1991, 2340, 2324, 2332, 2017, 2018, 2019, 2013, 2010, 
            2028, 2020, 1972, 2015, 1969, 2049}], 
           
           LineBox[{2075, 2560, 2186, 2175, 2211, 2204, 2198, 2140, 2194, 
            2160, 2164, 2154, 2182, 2546, 2538, 2550, 2714, 2682, 2477, 2809, 
            2798, 2811, 2849, 2835, 2845, 2853, 2792, 2843, 2857, 2839, 2869, 
            2873, 2788, 2902, 2826, 2862, 2899, 2847, 2851, 2783, 2841, 2834, 
            2837, 2825, 2823, 2711, 2819, 2816, 2813, 2673, 2804, 2800, 2794, 
            2569, 2579, 2574, 2075}]}, 
          RowBox[{"-", "12"}]], Annotation[#, -12, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2269, 2101, 2036, 2254, 2117, 2030, 2129, 2222, 1959, 
            2234, 2059, 2240, 2245, 2250, 2148, 2230, 2659, 2630, 2652, 2648, 
            2645, 2627, 2642, 2639, 2273, 2267, 2014, 2264, 2268, 1980, 
            2269}], 
           
           LineBox[{2285, 2218, 2084, 2278, 2265, 2277, 2281, 2274, 2276, 
            2285}], 
           
           LineBox[{2113, 2565, 2566, 2558, 2138, 2171, 2192, 2556, 2559, 
            2681, 2713, 2549, 2537, 2545, 2181, 2173, 2163, 2153, 2193, 2139, 
            2197, 2203, 2210, 2174, 2185, 2113}], 
           
           LineBox[{2861, 2852, 2791, 2842, 2856, 2838, 2868, 2872, 2787, 
            2901, 2865, 2855, 2861}]}, 
          RowBox[{"-", "24"}]], Annotation[#, -24, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2058, 2233, 1958, 2221, 2128, 2029, 2260, 2259, 2261, 
            2262, 2263, 2629, 2658, 2229, 2147, 2249, 2244, 2239, 2058}], 
           
           LineBox[{2172, 2180, 2544, 2536, 2216, 2191, 2170, 2106, 2217, 
            2091, 2209, 2172}], 
           LineBox[{2864, 2860, 2859, 2867, 2871, 2786, 2864}]}, 
          RowBox[{"-", "36"}]], 
         Annotation[#, -36, "Tooltip"]& ], {}, {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
nQvXlGO3VIHPkrnV+B9t2sfY
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -95.0476528977558}, {
                    Rational[
                    15, 2], -95.0476528977558}}, {{-7.5, -95.0476528977558}, {
                  7.5, -95.0476528977558}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -81.03177054185839}, {
                    Rational[
                    15, 2], -81.03177054185839}}, {{-7.5, \
-81.03177054185839}, {7.5, -81.03177054185839}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.01588818596099}, {
                    Rational[
                    15, 2], -67.01588818596099}}, {{-7.5, \
-67.01588818596099}, {7.5, -67.01588818596099}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -53.000005830063586`}, {
                    Rational[
                    15, 2], -53.000005830063586`}}, {{-7.5, \
-53.000005830063586`}, {7.5, -53.000005830063586`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -38.98412347416619}, {
                    Rational[
                    15, 2], -38.98412347416619}}, {{-7.5, \
-38.98412347416619}, {7.5, -38.98412347416619}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -24.96824111826879}, {
                    Rational[
                    15, 2], -24.96824111826879}}, {{-7.5, \
-24.96824111826879}, {7.5, -24.96824111826879}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.95235876237139}, {
                    Rational[
                    15, 2], -10.95235876237139}}, {{-7.5, \
-10.95235876237139}, {7.5, -10.95235876237139}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 3.063523593526014}, {
                    Rational[15, 2], 3.063523593526014}}, {{-7.5, 
                  3.063523593526014}, {7.5, 3.063523593526014}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 17.07940594942341}, {
                    Rational[15, 2], 17.07940594942341}}, {{-7.5, 
                  17.07940594942341}, {7.5, 17.07940594942341}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 31.095288305320814`}, {
                    Rational[15, 2], 31.095288305320814`}}, {{-7.5, 
                  31.095288305320814`}, {7.5, 31.095288305320814`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.11117066121822}, {
                    Rational[15, 2], 45.11117066121822}}, {{-7.5, 
                  45.11117066121822}, {7.5, 45.11117066121822}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 59.12705301711562}, {
                    Rational[15, 2], 59.12705301711562}}, {{-7.5, 
                  59.12705301711562}, {7.5, 59.12705301711562}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 73.14293537301302}, {
                    Rational[15, 2], 73.14293537301302}}, {{-7.5, 
                  73.14293537301302}, {7.5, 73.14293537301302}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.1588177289104}, {
                    Rational[15, 2], 87.1588177289104}}, {{-7.5, 
                  87.1588177289104}, {7.5, 87.1588177289104}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 101.17470008480782`}, {
                    Rational[15, 2], 101.17470008480782`}}, {{-7.5, 
                  101.17470008480782`}, {7.5, 101.17470008480782`}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -97.38363329040534}, 
                    Offset[{4., 0}, {7.5, -97.38363329040534}]}, {{
                    7.5, -38.98412347416619}, 
                    Offset[{4., 0}, {7.5, -38.98412347416619}]}, {{7.5, 
                    19.41538634207298}, 
                    Offset[{4., 0}, {7.5, 19.41538634207298}]}, {{7.5, 
                    77.81489615831215}, 
                    Offset[{4., 0}, {7.5, 77.81489615831215}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -109.06353525365319`}, 
                    Offset[{2.5, 0.}, {7.5, -109.06353525365319`}]}, {{
                    7.5, -85.70373132715751}, 
                    Offset[{2.5, 0.}, {7.5, -85.70373132715751}]}, {{
                    7.5, -74.02382936390968}, 
                    Offset[{2.5, 0.}, {7.5, -74.02382936390968}]}, {{
                    7.5, -62.343927400661855`}, 
                    Offset[{2.5, 0.}, {7.5, -62.343927400661855`}]}, {{
                    7.5, -50.66402543741402}, 
                    Offset[{2.5, 0.}, {7.5, -50.66402543741402}]}, {{
                    7.5, -27.304221510918353`}, 
                    Offset[{2.5, 0.}, {7.5, -27.304221510918353`}]}, {{
                    7.5, -15.62431954767052}, 
                    Offset[{2.5, 0.}, {7.5, -15.62431954767052}]}, {{
                    7.5, -3.944417584422686}, 
                    Offset[{2.5, 0.}, {7.5, -3.944417584422686}]}, {{7.5, 
                    7.735484378825148}, 
                    Offset[{2.5, 0.}, {7.5, 7.735484378825148}]}, {{7.5, 
                    31.095288305320814`}, 
                    Offset[{2.5, 0.}, {7.5, 31.095288305320814`}]}, {{7.5, 
                    42.77519026856865}, 
                    Offset[{2.5, 0.}, {7.5, 42.77519026856865}]}, {{7.5, 
                    54.45509223181648}, 
                    Offset[{2.5, 0.}, {7.5, 54.45509223181648}]}, {{7.5, 
                    66.13499419506432}, 
                    Offset[{2.5, 0.}, {7.5, 66.13499419506432}]}, {{7.5, 
                    89.49479812156}, 
                    Offset[{2.5, 0.}, {7.5, 89.49479812156}]}, {{7.5, 
                    101.17470008480782`}, 
                    Offset[{2.5, 0.}, {7.5, 101.17470008480782`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -97.38363329040534}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -38.98412347416619}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 19.41538634207298}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 77.81489615831215}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "62.94220341674104`"}], ",", 
                   "129.69639980783106`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "48.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "36.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "24.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "12.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"12.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"24.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"36.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"48.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"60.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"72.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"84.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"96.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"108.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"120.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693265476128682*^9, 3.693265557108314*^9, 
  3.693265712735215*^9, 3.693265760000919*^9, 3.693265820667389*^9, 
  3.693265922901236*^9, 3.693266501030303*^9, 3.6932670688847823`*^9, 
  3.693267380064581*^9, 3.693267463833372*^9, 3.693267562890038*^9, 
  3.693269849282812*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
vMGq+WhPAQVCb3Fk4gRnNy/Eh2ag3ChGge2+hVe8wtG5Tud5e5r1f8e7EfoM
d902B4hiAncZPX9ksRw0vDnPun+fCekV5hea9CnwkNBnLNS4tJKRxoRU8TNb
156Sg/cbinZJtjChTF3FQV6OMkjPsQDj72B8NYHn61fUsH7l5aPi5KntKH4d
1i55OkcOrJbIKK8cz4LK+I0J4yvlBPqVLKxfqYq0FHPQYsHse2Mma3fJwv2Z
c+8l72DBi3SZBsskOfhB6F1IfBbGF2I8X98jtOlvfY+w6cX2IH8WHG+7H3nT
TRbMUwq+VHxmgZbn7n4dkBukZ4q9f6MqpYQFnUE/O6Y1yoDl514tUUc2BIzu
YEpWykIXgY8j8PMJPKl/yv31XP74SjZsPZg/Zlb7cBD9lWpuq8eBZZPkQ7u7
ZQbpn9pmNC3xamBD5/4Ta+d0S8M9OU+XSz0cUKmKlG5iycCVIfAdGJ+J8VyM
f4v1YSpYH2bDmTVOi8KBbq8JV8LqpSBvwtsZt3TkoThq6i7Nq8MG6eF0M+fI
lk/mQJ9T4deKVxJgfySGnrVCHtxbDDsdZkkK9GTBQ+BXY7wHxgsT+rnH/m/H
pFhwoObGy8PTk8VA7t3lzodb5OGuC81gRr+YQC94BOvnVkzfYhG8igNPe0tH
xh8RgQd690qfBsnDr+bPrkppA/rCEAKfg/H3Mb4f4zMIfeE75kFFdRcO7KUf
bGo0FwIhKX3d2dHykJAbcfugixCQekqH1tOf0r05EGjjabtKuo83qzZh7+NE
ebgpn/etcWrfIP3ln/CZhP7y5Zi7nNl7OHB+ZG07xbGb1/DK7lNWsjz4798x
n3O4W6C/NMX6y1mbXpoWH0b+6bE+9Ci9gxecw7ROuycPZh2jE83eDtZrDoWf
g/GkPrVW8uns6lAOPPDtkQke0crzN2wziHkgD5W+MpdPmbcO6l+T/Wmy//wD
94OCcT9oFe4ncXA/aSrRDyH7p+OOfMyuX8iFGNmQQGMTLvAiW40nzOGC5Anj
MQuFlAT9UH7/VHyR9jp5thIoL3V+cx64YOZpckZ0mBJ0ZAnbz+9VBAvc/3XD
/V89qVExbVpKIMW6ucPjTivvgNbjYvcRSkC3NQqeqtPJm0D0uz3HHr5ctZIL
u8zlnnz93MpLiSqOzlrGBfdGqw6l+Z28cKLfTfbznIl+nSv210fsL9Lf5HyR
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
Xt6zz/MfGR9nDaqvyP79BqLfPos4379M+U1L29TNe9AgGuspoQCrE/VnBYzs
461lndTj9MsPqq9SpKyFsiZ380pK5iStreFAxKcx76Jre3kyGlM9ppZzwBbz
DcV83TDfVUPwJesZ/vmlHZ9f+PnzKs6fi4l6Ztlhlm3SjW7eaU03VrCeIgQc
rvtpu7mPVzj8ooqElqKgnlTCfEuG4LsO811H+Iv0N9/+29h+8n5CycVquu0w
IZisvPNc0AEWBLyKcbFVEoKw23mGCYnsQfcTE6z2e9yaLwLnLa/ue72DBdzQ
EQqv14nAt00yqU3RbMgg9BP3i6ZdemIiD946d+ul98nBozDJpvdH5aHJ2PUD
ewdVcB49j8+jGgZbZbeFKUDV6k+J4x7LQUbHlDCVbAXYzZzwzPIEddB5lMxP
t4h8QupLXB5qR+QiO+fSnZTvrqKAsKOwyJEXbJDqbw6/5UEFMUIvEpl3U+Wp
Gwc2WtcI1XyRA63j17smXufAbRFho3ovquD8zeebjflux3xzMN9GzPc+oacZ
nWLhVhLFgt7CYFGTeArIfO5W7bqF9rXE8lCuFRUsCD2NRXq60HwOGxK+eFN3
7qaAxcMkajY6b4ZOvkvbsHqA7+4h+AphvsMwX74+6TXWG+XdTPi1pocJcUZh
pU9TKJDSt21XpjgLJursOZ8xmjpIb2R4wnJSzBzEZ59s675LFDgnV2NVvpIF
Lo26MZumUQX6Ib7eSBvz7cN8h2O+sZivN9ZjHcJ6LOaowszaGJQ/z39T1L9F
ASNJ9RcLzzGhjUI9ZyNNFeix0rAeq801bVVCPhPGa3C6fW9S4LtwQeKBUibY
pnqeO4DyM6mvIvkmE3z5+rYUrFcj9XFShB7vOaFXK1U/1Ku0iwk7PcSeqV+l
wLvHJbu2BjChYVznTYcfFPDBfA9jviyC7zSC7x0c3xwc35l4fQTg9fEYx1sz
jrereL88i/dLW0unvWfTFCBq/4UZes9oIORLf/A7UB6OynJOnEygDdovvySG
eKukKMDV70q3ZPvokBO1JVJ1uzxk0tkLuAV04P4Bn0fgyfNN4MXdU813KYD1
vQBGzXwm0GyiEp+OQPX/cLX7pqNQ/sfnm0f4fMO8sqVvyzzE99bUrbdjWdAA
lDtuBRxIFRut5xbIgiJiPyP3QyliPyXrvSjK1LVxszjwY+PbU+8zkV3GHkdc
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

      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2108, 205, 2129}, {2129, 205, 2142}, {2117, 205, 
            2156}, {2156, 205, 2134}, {2142, 205, 2117}, {2134, 205, 
            2108}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.3280041667911315, 0.45852245613087095`, 0.9421211133586026], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2143, 2142, 2117, 2118}, {2135, 2134, 2108, 2109}, {
            2109, 2108, 2129, 2130}, {2130, 2129, 2142, 2143}, {2118, 2117, 
            2156, 2157}, {2157, 2156, 2134, 2135}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.43496182002356637`, 0.5511637995128448, 0.9489363604436343], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2110, 2109, 2130, 2131}, {2158, 2157, 2135, 2136}, {
            2144, 2143, 2118, 2119}, {2119, 2118, 2157, 2158}, {2131, 2130, 
            2143, 2144}, {2136, 2135, 2109, 2110}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5691724607931531, 0.661118870455863, 0.9592264875425104], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2159, 2158, 2136, 2137}, {2145, 2144, 2119, 2120}, {
            2137, 2136, 2110, 2111}, {2111, 2110, 2131, 2132}, {2132, 2131, 
            2144, 2145}, {2120, 2119, 2158, 2159}}]}]}, {
         EdgeForm[], 
         RGBColor[0.70500313816305, 0.7694730768460585, 0.9712317822493378], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2160, 2159, 2137, 2138}, {2146, 2145, 2120, 2121}, {
            2112, 2111, 2132, 2133}, {2138, 2137, 2111, 2112}, {2121, 2120, 
            2159, 2160}, {2133, 2132, 2145, 2146}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8306875332249718, 0.8678317068539229, 0.9837129125541546], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2173, 202, 2107}, {2106, 202, 2103}, {2107, 202, 
            2106}}], 
           
           PolygonBox[{{2147, 2146, 2121, 2122}, {2122, 2121, 2160, 2161}, {
            2139, 2138, 2112, 2113}, {2161, 2160, 2138, 2139}}], 
           
           PolygonBox[{{2113, 2112, 2133, 202, 2173}, {2103, 202, 2133, 2146, 
            2147}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9162961216362213, 0.9360936714698257, 0.9918783361405088], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2124, 206, 2418}, {2200, 199, 2024}, {2147, 203, 
            2103}, {2290, 390, 2288}, {2094, 199, 2098}, {2341, 472, 2337}, {
            2543, 201, 2123}, {2339, 469, 2286}, {2098, 199, 2200}, {388, 391,
             389}, {203, 201, 200}, {2556, 990, 2542}, {2205, 201, 2543}, {
            2148, 206, 2124}, {2539, 990, 2556}, {2548, 990, 2534}, {2289, 
            391, 2287}, {2542, 990, 2546}, {2418, 206, 2166}, {2546, 990, 
            2548}, {2204, 201, 2205}, {2534, 990, 2539}, {2349, 469, 2339}}], 
           
           PolygonBox[{{2106, 200, 199, 2107}, {2114, 2113, 2173, 2174}, {
            2123, 201, 203, 2105}, {2286, 469, 472, 2341}, {2103, 203, 200, 
            2106}, {2024, 199, 200, 2203}, {2105, 203, 206, 2148}, {2203, 200,
             201, 2204}, {2162, 2161, 2139, 2140}, {2288, 390, 389, 2239}, {
            2140, 2139, 2113, 2114}, {2337, 472, 390, 2290}, {2239, 389, 391, 
            2289}, {2122, 206, 203, 2147}}], 
           
           PolygonBox[{{2174, 2173, 2107, 199, 2094}, {2166, 206, 2122, 2161, 
            2162}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9634440071065291, 0.9722571808717699, 0.9467639400254355], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkD0OQVEQhQfFu3qdRCIholGzBp0lCIWGRKGwAt4rVIifKG3jbUBDIZGg
JZEICqX4JneKk3PumZ+bOflmr9FNikgOpMDKiVzgeyASJkQiMAJV/B1+Gy6m
RU54T3QHHPAzcBn/hl+CN7yv+DPna9oTwQVqR3qy6C66z+ch+gPG+Hnz9uJn
avZvHa7YrO5oma/1yPb/Ar9L54fwlvcZf4L+On/L0XmoTqR9TXvmOuf8vwP4
7fzdsfWOLYep3aX3LSyrJZyyTB7otfmaZWx7XnDN8tGc/q7uN7g=
            "]], 
           PolygonBox[CompressedData["
1:eJw1kLtKQ1EQRecaIXO/QRCCiJUJaGMdSztrbexsFFKkSBErwUetUTF/lEaL
gGBSqhgxLxWLKK7NHIsF+8ycPa/S3uH2wZyZLcI8VHKz18ysC2X0wM0e0Kfw
jV4h9pzFH/1tEKtR4B7vPvqlaNZDP8KVh0fec/hC33jk+3CBPoImlKECdbiz
qFmj/m8xait2TG4Tqskj7y7spJhyn3g+4Elzwgh6BbMO/g3y72kf7bdEbssj
pz9D3kPeZ+ROYIweeWjtMPGoqdoDeIMpTFJP9W557K4dr9ELHr3Us5A88s7g
B9oet9D/W4+Zuum+q3ncRLdZg3WPGTWrPPJe/vuJjclledxaO0zJlfKYXf2X
0X/2JlLC
            "]], 
           
           PolygonBox[{{2545, 989, 2542, 2546, 2547}, {2149, 204, 2148, 2124, 
            2125}, {2557, 2556, 2542, 989, 2544}, {2099, 2098, 2200, 220, 
            1958}, {2125, 2124, 2418, 626, 2414}, {2181, 209, 2162, 2140, 
            2141}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9876517175811883, 0.9891616821305076, 0.8543065262176182], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkk8vQ1EQxe9rk/bd9w382bCoRAQ7DVZ2wsrexgcgaVGJRFfY2CK1sfFn
wcKH0UhfrWhLVBNSqUq08Rszi+k5d+6cmdO5b2RtY2U94ZybJ5JEzE+VuCfO
Q+fq5K7AXuDcL/FKZL2eZ8Fc5NxWigBHOcfkM+Ae5xz5YqS1P6Zf8MpnwKrN
k1lz1lN6J63PUKh34qdMBPTKY3aX+5LN3QGfONe4T8A7aI7QdsFp8g/wFvyC
aDDvPe3ccqT1ojsmH5M/A1dlHnwfnOKuiXbM6zyZWwAHzIN4aXn1tQQftl3J
zjrMKMMH4ZPWR/qJD/FzB2/Db+AB/MXpLuS/ika0hVB9iJ8+/fLm4X++5Q/B
LPGM7sNrCO+Bm7Z/eYeO5b+9akR7EOruZIfyhttWL7qu7bAJXobq7zrUEF6z
txPeMO+CsscSNRXw1PZdt3zR+i+Cba/v/glOeP2mxsGMaR/TulPZbd9rj4r1
+aLmlvqUV730OSGX8JqX+zd7F3mfP/Edeao=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkTsvg2EUx8/bNn2ftzMTC3GPaBMSwchiYPARJCQMbUJKwqA7CQtJDZ1c
BgYfRjVam7q+3UQTiYrfyXmGX/I/93Oep2+1sJJPiMgIpKATiTwnRZrQQv9B
Fd2AF3QiYzHNaWMXsYtpkS3YQX/gu09azSe6CW9iPo0tZixXa8ro78h61+EL
feWYQ/4rXKCH8NUDkSNIoc/x1Yk9QhmdgyxMwhQswDwcQAmuQ3rCMfoE1mEN
lmAZRun5Tu9fmImsh/bSGq1thbaL3nCJfxeqeg9so8d8fQyD2JuwAV3QDU+h
7ao39fqZOjtPXQHOnN3eIF5xhmq98dTZzXr7LSTQPc7eowYD2LPQCWyHcfSD
s1ytaaOn8f0EljOn/xna7nrDIfF92PM76+6xs1qdkYxsRs3fN4G+87bG+9EB
3Pj9dPZwZLm6j75tyf9F1v+VvlHs988RT0dWqz0E/Q+272JO
            "]], 
           
           PolygonBox[{{2533, 987, 2549, 2535, 2536}, {2415, 2414, 2186, 627, 
            2419}, {2423, 627, 2186, 2170, 2171}, {2069, 2068, 2187, 213, 
            2038}, {2192, 2191, 2199, 217, 2086}, {2536, 2535, 2540, 996, 
            2636}, {2551, 995, 2104, 2149, 2150}, {2182, 212, 2141, 2115, 
            2116}}]}]}, {
         EdgeForm[], 
         RGBColor[0.995138075421409, 0.9920091598794011, 0.7121876978199183], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtVM1L1UEUHZ+iM/MstXSjCKnUIgpsY1DQKiPSCrSgRatoXQYWmCXZAzf9
C7mriL58Fm2ionJj2Ebd1SJMyyzRVgYF1jmcs7i/c38zd+7nmWk7d7HvQiGE
MASphHzA5z1kGlKOIbwDfk4hrEBmoS8Bj+YQaqtD6AB+hM1ERQhFrAfIE+jV
wL/AOjj+A3yO/0qcfQZcqwlhBOsj0FuxtoL91QrFbYDPIqSxWvoc1p5W4Ryk
DNnmfe4tIdw6ZBHyEDn8Ak5G5c38mfcl2F2HtEAmcH4Za98gG0lYQP5F5NIB
qWUTcP4nYB451heUP+sowW4YPsaz1ra6Lur1PtsLn3uAx+2beTPm+azcB7L6
xb5dAx5GrHnEGouyLds+JvWTfT0Buy7YnwTesD3P3XQ+JfuL7ssV/A8CL2fV
znr5f8Z+6G8I/oeRZynJL9fbgZ32zzhNngH7dt89eQAczZrBVebDeqH3Qz+d
pXNtwPWeAn7FfzPWN4F3o2a1it4uQL5A3xIVp9mx2p3PWfpL4saBpHkwB+Zy
J+rsPeCaOcA99m7QNf8zx8aSbBmXtvvwX8D+ZFK8ZXNk3fu0K7kPo1E8Ym+n
iFF8fZvUa+6RszxLLpJ/5FqTa6n1TNivxSQft4Bv2BPor5J4TB/kebtzKwMP
JvFrv20a7bc7iW/bs3rU5dn2u/99nk+D7YfNE/Jlo0Zzb0IdM47J2NSZ/6z/
p7027rO3s/rU4jnNeZ/2PcinDT4PMc+suljfI8/mBWLujLrfu1kf5DH0KmBv
lr/vSXPivPg28K3h3f2UdM/qfD8X3EP2cm9ULeRyn2tvzpoBa2F+3809cvCH
3y6+YTOukba8tzsKegM6k/Jkvlxv8x7nPOX3hH1n/39H1Up+khNHsnjSnVUb
a9yVdJ5+WgvyzTeQ9nV+M1hX0feXcTjzzQq9Ocfc2x7zheuM99pv60vgf0zu
ukU=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlM1vTFEYh0/njpl7rpISXZiYRS0qkVmQaAiJhahoqyTCPyBSCdGWmZhh
poNYkNjU0kfCglR8daqxESTY2NYWCdUQtFiISiXq+fU9iyf5vfc95/0659y2
AwN7+1POuR5IQzlxrpRxbhTjKPq5dy4fORfBI3Q73G9yLoW9Gr0J/mHPwRZ0
NvhHIZYPcsRbAT3Eu4j9kr0x9g7sp/JHliOOnctgPwj7f2HPQgsF/sV+hq8l
sXzaswz9xJtP3+RLwSd8n2HSW07lfo09g30Nu4pdh6voO8T/Rt8/YCLr3BvW
vIisxg/o7dCcsho60TOxzWKafOuwTycWa0gx0Ru9zWIp67d5q0G1aAa78Hcm
1nsz7ETP43+Ytprn0HuIvxsG0INwijXLWdsK/ehpavxIrZNwk3V/WDMLfehD
cCbUox6r6KEk1JYx33vWvoqsxwbrN2N/CfPTWU7BBL4p4o/gz8MquA43YrsT
uhsNOIge83YXdOY6+3rIdwxKidXcGuajWnpZU2A2eehCv6Oft1nLkQ899IUZ
aBZN7BlP24xWojv4tgFG2HM7ID3Mt0uxnbHOWj18RV9hz2WowEmoJTZ7zfQs
uhHq15nqbNd6O1vNpIBew7f22GpUrUtim/13uIfOQZ1eqvAbf46YhYzV3OEt
p3Ifh2JiM1mYDZxAd0NXqFG1VohXhiKUYNxbbapxfbgTuhtFKEFvmI9y7k9s
ppptG3R7m8lw6EG96Ex1trpDt9D7EjtLxVCsMb79dHZHdFfOeetNPc7TX002
lKECj7M2C70hF9s3+aroWmxvWG954Z/h7Y3prSnH3dCjej0PF8Ie7T0MR2Cr
t170BvUWF3uLp3/EIvR/cWidtQ==
            "]], 
           
           PolygonBox[{{2715, 1662, 2687, 2633, 2634}, {2554, 998, 2550, 2551,
             2552}, {2184, 2183, 2182, 211, 2179}, {2208, 2207, 2214, 226, 
            2017}, {2177, 211, 2096, 2100, 2101}, {2675, 2674, 2677, 1652, 
            2679}, {2430, 638, 2074, 2167, 2168}, {2155, 2154, 2069, 635, 
            2093}, {2420, 2419, 2585, 1202, 2559}, {2357, 1203, 2561, 2427, 
            2428}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9930821080256967, 0.9876116535101622, 0.4884083347566194], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVm1M1WUUf7jc+7///wO2ajlQGO+JRei4Wx/KlZbYi5tbtcytVqZAYoC5
tTJuuF7E7pr3AlshWK1SS0UHkzKYzhLXy+ZHP5m1tvoupZtwpa3o9+v82Pxw
dp6X837Oc85TvfWVp3bEnHOFBQDg3sC5nUnnugDbAC9hvwb4l8i5YyCo9s6d
AT4NmAJsx307oBNwC2hOQk4x8ArwNAFSgpVJO5sEzzjgpGTMQuc5yeKe6ybR
UvbdMK4MsDRmeidEN58wnhhoXoZNbbTBmx7avyppOuad8RTArhln+n6HfdPA
46Fze7Huhexe4FPY53GeB28P1q/h/A2c74s71wfoB8xC79+APGAE+g5B71Fv
/rcEZnun8HZhnqd0zlh1BObLlPxgTOYSJvshyJoGbgY+ARuuwJ6LkrE1MD+P
4W4/8GfAywFZ2HURdrrA5BUGJo972sr1GelyuuP6nOI/pxhNKi+TijN5BiVj
GPgw9FQiJiNxizFj3Zq0mtkDyARmF3kOBFY7LbJ5VnZQVqfy1QGcA+5OGv2T
gGrAE4A63B2Hnju9ycuL91H4uQQ2HAG+zVtebvUGXJ/F+VXFkjxXha8BBuMm
k/azBkfl77Tu/wQ0eMtzOXAD9HzONXCIXFSA9tvIaq5QsX4c+wrcbwC+4Sxf
rC2u89p3qJZYU29Dbhq8u4FDnJUCIkEiZmdNkJWArq+B3xQ9+XpVbxn6irs+
0OYiqw/qOQ755wERav0D4O9Uu3ms/wLNP6C5AHxJb/ky8LuSkwX+SnpPASf1
lseBP4a++8H3CfA88Fug34NzX2C6/oXcRXw/3Ef25hjXIuz/iKzOfqW80GLD
9/dzZPH/LTLaUdFvgI5G+Pg08CXocjg7Db4J0AWg+R74CvYBbHgA6/WyjTbW
4HwSLEWh+Uq7isHf5e3d7fJ2xjv2A0JM9p8NzZ8fQuOnnLrQgOt7gO/wVg+L
vcWXvk8xzqHZ/iPwDuUr7c126qC+RtUAa4Fvbkbv7obW17We0376pvu8MGlS
kfnOGLC2WbtjiMs70Pce9PYAl3qr9WXALwDuw/km4FbFgfGYUQxo43Xp5DpQ
Hf5fj8ppEfAj3up+X2T2x+RbseLHWDzs7Q0tVw0wJozpvHJBnlB1lVT98Jz3
9epj7Gdtmj/sLewnB9VT1uut8c1xNrWJ5kPw1eB8UcwwexTpWPuUORS3nsLe
Ugd4zluv2QbcHBnfg+orkd5kjfpcpXoAewH734vgWQ3ezewTwFn1glpAVWBv
Y7Nonpcv7YB00mj24n6Z5lqFbOX6Lu3vxV19YDQZvXfOmRZv/b9dPXNAfZN5
pv/DgC+96frCW1y6NAv7JJcyh0RLHvbctGI8pDPGgv28Xz19ieLBHrhY9Z/w
Jps2kLbSW2/8KTL/GYeemMWsXPObMWL9RIG9W9bZauDHvJ2tA96ot88ekNZM
oI+fevuDbNF8T+lvsk65a1bPH9PfgnNolXwvVU8tkR0l+kuUyy+esZ75p2B9
HtZ84Jy4HfrKcH4hshwtVZ62yJ6DqiPOc9o9KF7GsUx5ZQy6Vatp2bNgy4jq
lvSNqk/KyypHzEm9aou5+0Y98Lz6er/qe1R+0/+U/gqcvV3S260ZPaC85lS3
A/qHzOkPskv94VX11BX6RzG2lM+ZWqs3VCVZhcrpZc0U/hNT+jcyRzn9Bfh/
mFCMGetDetf7ZYuTrAHZTZvH9Reh3kj1SJ1r1WfYb66pB9LGCf33qGNMc502
NSgXfGvD0rfwhrKSOSgbD8gu/hkWzpzo3o9sFnDOsM75lmvlZ+tNf9yViluV
YsW88i/IO8a1RH8b/nGcdPBv86y3d/qMN75a9YLdmimcLbSL9tFv/ndYn6yD
j5QzzkPW/07lfC1szsDO1yObDxnFMae5z/m/Rj2KflSqzzFmbTrj3RH1xzjk
/wc5l3wF
            "]], 
           PolygonBox[CompressedData["
1:eJw1lWtol1Ucx4/bf/895+iESirzUrPLjPKF0gYVpOItujnt8qJSYurMjFS8
oGulc3PTHIaBFlE5LWtZhnbF+yQTfBkJBmVivVUjCJZKrM/X7+nFB77n9nvO
+d2e2qYls1+pCCG0Qgk6Uwg7yyHsgg70niKEC8z3Qy+6lblO1trhdvQnyXu3
Qy/6RfYshJnQCA1QD73VIXwKXRH4YAdsiJ7T2lb2vAVfM1dVGcK+QSEMRR+B
0YxHQB/6N/aehVHsHQ2/o89DDXoorOEOi7jLA8y9i/6VM19wthfOoE9F25LN
W1n/gTOD+dZexj+ztpfx53CQ84dgud5Utk3Z7mbtb3wROHOG9UvV+S3QyfmV
rK+AjbAJBkGAn9h3Gq6y5wr8A5fhjeizsrFR52EFDEDge7OhlbXb+P6T6DXR
45UwDrtrGb8Oq/V2WA9t2ecN+Q66Szt0ZNrzHu2dgc152H4ZlqFHwpsl++h6
dIsoO+Zt6LPRvpJP5dvjUM7+LLBXYs9w7jYSpkffaXX2iXxzn+LLWhkmoMcy
V1c4portVzn+svlNdIwV6x7YCefkN1xzEfZpju9N4lwz9+tJRnoBvJR8RmeV
I8qVjxTPap/5AH0y55e+9y36Bube5v013G8a42mMI7YqYDp6R3Kut3D+Y3Q/
tjeXfEZnN8BfVa4h1dIYaETfATPRDdisVwzhNVgGS3PMFfvHdR++fTc8Jv/A
pSrblO1fGB+rtA/ki4XMzSr7G03o/YV9o5r9DN1f7dpVzip3D3NmS8l3Pope
nOyrJuU4+kb4kLU9cJNsQx1r9fAsug8bkdxPcLhwzih3FsOS5JpR7YSc+5dz
rqsnqDecYu1flodw/iTjP1jrq/Sbzkf7VL5VjHaj70y+yza4OTmnlFs9jIcx
XpX7yXfY3IQ+De+w1g11rK/P/Uo5/Gpyz1LvUkwfRtcm94aL+HeyciPZF6oJ
1cb3Ob+Vk1+i30vuLQ/C+8k9Tr1u6f+xTPaFesb85J6g+l4LA/mMznaph+ou
0WuqadV2t+KDvksxTd7TletPb1GPq8k9Sr2qKtkXiplitwDuZ+9EaEbPSdaa
m5scI91POfMc+ikYl+Onuzfn/dd8oNriPrHCNT0DfaBw71MM/+Qd+6N7tfwz
PrqHb801rdpex1xt2d94OrmHqZdpTmvP5/sqf1Ur9xaOpWKqf0Vf7tfK2euS
fSLfyKfqnc8k56Z8tkV7Gd+SXGOqtZboXin/tkXneFP2zwt6a3Qv0hv11s3R
ta6cVG5OTc4N1eAUfTs5F5VjyjXVtGpbNfJEcg02Zn8rFurhA7nnq/c/FN1b
xsCj0T1fvV/vnYI+Ubi29E86iv4xOpfVk+9JrhnVjmrweGEbsqWe8Qj6P8y/
78I=
            "]], 
           
           PolygonBox[{{2433, 636, 2642, 2586, 2587}, {2429, 2428, 2424, 629, 
            2426}, {2647, 1593, 2652, 2648, 2649}, {2649, 2648, 2638, 1575, 
            2641}, {2004, 2003, 2216, 247, 2228}, {2316, 432, 2312, 2266, 
            2267}, {2436, 644, 2030, 2430, 2431}, {2267, 2266, 2315, 436, 
            2317}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9730843453111276, 0.9208693180174868, 0.3499381934389676], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
jqfcd1CX5fbVEdNzjeOh4DUUuBW6l2H8EcaDovaQf7Nt0Wz6H2LtW+D5YBTP
I17jfXo7rTv1A/dC7In4pqUvGBPDQJPNKkb4JqE/F7jn4duAfc9M96r8LjX9
MPuM9mdcnc5XT88ec69twz6WZ03Lqs897RjkuYujbPhsFA+ez7UV+L4b4xfc
y81w30wenJ8KeCjR3bkG+wyI0u9LwKVROh8Oku/2jOQt9Zg5ZrjpuW+gY4fn
M3aGeny7bXeHfc1zKWtNlO6VwLsT9R77Etm1jL2o7VlkXtzH/VONG/0e6Ja5
GY9X0up72PNQng7f90vu1Tt79ibnMcYEeZdAhiNBcXU06H3G2P3IPD5xn/+U
333Dguzf4XNYt3guz6/3HeS5vK+sXxctxwavkzfvBPkzZ9H+7NmvOY8xn70d
9BZ4hziq7+D/njbnjHYDeV3wPTvvtYF+G/4R9LdF1QjWiolRtJOYG4Lq2VvA
PaNiux/vXVB+ugxfzHV9GRXEt81366LteMn2pv7sY485bpmfrrjXZj3eFJXH
XgReBrgH441R7w2+NR4C7h1lmwxtHPWGro/K26NtuwuuLfyudvw8HwUcM6Y6
7CvSftE8yftp+44+zHOssO/4adT7Zn1UHuzlXLre8xuiYniY45B5sJdzIWNu
u/Xn232be46UY4I1/arP4XnMnZ35kph7SXvdsUK7NjkvNfo9f9V2bPA3bXzR
tr9he1ywzoyxDn9X+T/CNr+nJri3YQ1gPlkS9VYuBzzgXLACUJGVf+52rqG+
k30nWYdmf46+4nP5qMJv79X+b8Cazz38Jo8G/8fY6Tc7bUO7MC9NcW76e1a9
1pcTncl3K/MB5eJdpz4/cn4ut/yUZZd5THLeKEjUS8RE79MtzhWPO54Z14sS
1dwlieSf1qlPVP9cEST/eOswybqX2WYLXZfvt/6sAc/4/8DwRLzKbZMXHf91
xmXey/Uq8+L/O/Yei4Jkft1yl1su0jU5Lg64Ftxjufe4H5huW9Ams4xne9zN
8TjDY9qL9Xp2lI6zomzX23Wcvun01ZKgt+tjQedmfDblq3LclNsvP+78b2Cf
nHBOYL4cZfszJ0X7KAvckujd3Zpoz2TLVheUX9byXZzo7dwnkS8768Bp10Ce
U+R7mnZ9HOh6ui4oP9UG2f0B236F7Vrhu7s2e1OfqY65NUH3dEoQ34z7v2mu
m6yfz0XVt6XOPzybNeNB24QxO8O2nGl5j1vmFvcf9Pn/Ac5eF1E=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVtsn2Mcx5/2v///fZ8nUlHGBJ1abYvuColDbNN2CRfcICQW5wuCcMW1
TMUq66xrdXNYqyfToWLWbV2nqFqzWjc71DYJSyaChMwNE0x8vvm+F5/k+5x/
7+/01j/67F3PVIcQXoB58GYMYZyJUXgL3ZBCqCuHMMjiJeiNeQifs28ChrMQ
3mHP9awl9t+GfoQ9q5hvgh50H7RkntPafM2x/wa4CL2VM99w9hBch26K1rMw
hP4QBqvYWwphN3pl9FsZLEcvw54vsGUSGtDf8k4D++vhE8b97Jlm7xT0oTth
AN0LXejnoR29FlrQu2QDbzXDLPpKbBzD1t1wlPF++acY17L2Y+a9lzIuMd7H
+pKS9yxk3BH91uuwAX0Mm67CtkXwsTTsCbahjfUpxhlrFdiLvpo76suOgWLx
AKyoYCM8hL6lsEdvzsh+ziyosg8Oyh/MDbE2CCfRfzC3Dt0Oc4zLybFVTBSb
++DGit94MDkGioV8OBDtA3273ryC9c2Mt7P2vr4Rvabw5wZoj0a6A9ajX43e
OwybdBZ7zsfWy+AXfLmHufklx+AAegtMVDsne9CH4SZ8cQ0s5f2XoRdbe6AV
fXt07sqmN6JjoticZjwSHQPF4iN8fiFvn+LN76EOvRCeVv5WnLNP6m5Yg34R
3kWPsOcDGGe8F6a4bzG27sT+WvRw7tjVwgz6YhgJjvEixRrG4Axnf4d5ybWg
GlItbYNT2HdSPop+Q29VcaY69zfr25cI1U+ybVtgGN2u+MJxxicyf5O+rU+1
oFop7FW+7FQson2jN9+LPqOzY4Wtc+hjsAM9CtNFfuuOSfSXzOVVztkJ9CvY
cAj/3cGZLtVOdO0qpuPo72BryWdOKB/Y08i33Azr0b9yx1nW/oRrWT+Su5ZV
M0fR/8Em9GY4p1rJHUv5+BxvvsYdZfkVOtGt3PFZcI94SfmZu3d9Cq3ottxa
e55Df5U7F1VDX3PHdOZY1sGsvh/2qQfCJPzA+mmoUR4XPpKvzjL3l+yJznX1
nG70DHP7M9+huwaw8c7MNsv2weTeqZwbQj8FzRXnpHJzcXLs1RMWKN7JvlOP
Wob+hzu7q+yjf9GNuXujevZvyuHo3FLPVe9VD1Ev0RsPq5/AAe6bhZXoHdG5
rXhvj/7GmqIGVAsb2ZNljqFiqZgoNurZf6PvTa599ZT70bcm332Q8XJ0f3Ku
yAcd6LbkNeXQ2mSfy/fqEeoV66J7tXqMeo1irFjLhm70BYW9o3A49z9C/wrl
lHLrvOg17amJ7onqjcrJ4/oXRfdG+WAF9z0Od2PLPbAa/USy1txjyTmgXOiE
rtw1qFpUT1Jv6i9qTzmiXGlmbhtrP3N/S3IPOFPkhHKjnrmfyu7Z6t2rkvdq
rgk9l/vfoR5+JLonqDeoRlWrlyf3Z/XIRvTS6N6oN/W2clK5qR6hXvF29L9R
PbYX/T8z7Bkz
            "]], 
           
           PolygonBox[{{2073, 186, 2082, 2059, 2060}, {2089, 193, 2088, 2014, 
            2015}, {2060, 2059, 2084, 194, 2091}, {2196, 2195, 2240, 262, 
            2027}, {2320, 437, 2317, 2313, 2314}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9419291815215134, 0.8074755862255828, 0.272133060236152], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
b8Sq5ctdn/8POaCD2w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVtsVUUYhYdT2r1nx6SKUuRBC/GpKFTBS1RUiKCY+IA1EBMUIwqpovLG
K4mJCTer1nJRAbGnRKDSahShhaopjUCpXKol4KWgXIUXEUikFOVbWTs5K2fN
zD//zPyXtUfPWVDzZiGE8DYYCvbEEKpKQmgbEkIF/FQSwlkMzoMfGXcyfgq7
GeBXeBtzl1gbANvhHcztBIU0hBJwE2jC9gswDP5wFkJraQgXy0JYBm9izwLW
+tg/Ab4t+qwLoAd+hT0N3KUIBuAbEt/zZvAt/Cqoh68DF+FbAL9QAb6HbAY8
J9yHvxr8tUbfdQX+/sdfo+7KOsNQTGwjW801yRc2W/L7Z/AVrG9ksRmsgtdr
zFoj4wb4jdiUgxbQqr3M/VFwDFvgn4P+gue0ViQGKedUgffhH0T70hkr4e8x
NyKxzUr4Bf7/Bt1gH/iZM8Zx+bHgJ/jG6FgeAZt0NnNPslZLEPYzbo+OrXK2
A36G9ce5/yRwLs+ZcteH78OgOXGsFVPFVjFQLDYoB/DlmXNZydpq+EjmvmGt
DdwBP6j8cvYacn4v6zuYa0/9Br3ldubuYe0qPu6Cj2KtUnkBRVAH3gFHsD2a
Q1w+5KsR/z+oVkARfieYgL+7QRX+jqau1RpwAn6avbPgU4nJMcZl+XuU4wiv
Zf+L+JoDXov2IV/TKbob4IPs/yy4pi+rFtnzcfBcaZ5z5V49oF5Ywp59vK0L
H/34G8d4hmIBxir3YEyJe64M/go28zn7WTAXfhIfJxLXlGqrInVsdd9rqpno
XKgGVYvbWF8EXwYOqkZS88Xgr8QxVWzlU75H5P6Us1vho7jDzqHOiXKjO+gu
M8E8+MvRfDKYBR8erRXbwV72r2JPReKaVe1OZ70a2/HgGfVW5lpYCx6A/8ae
2cE5UW5ex6a24Bi8AT+X+K2642hsn48+ewp4Af5fam1oBIPwPdgvxPYt0MF4
DKgCx5g/DmZH79WdKuGHwVJivwT0wb+LzrVyotxMjOaKyW2Zc6bcqcZiZp/y
rZpV7c6Prh294dXoHlIvbVVfgAHlLFizpF2rsfkS26/BR9E1qdp8AvTDj6fm
6uEe+LRo23awJloDpAW79XbVYvRaB1gH703c20+Dk6k1T9onTZW2rsdmV8E9
9Cl8k/Q2+I7n2Ts5urek0dLq3fn3QTHp1jhxbWlPt/Q+uhZUE8PgvyTOhWpy
P+ubo7VJGtgM/zN1bUijD8CvYP9v4p6vy2Om2GlOa+9Ga69i9iH8QLS2SWOk
NWuj3643fSItzaytPfRgA/xy6lxXc79e6bV6Jq/fQ9KazFo0COrgvam1VTWl
2prI3N5S18yj8L7UvqTBX8GXZj5LPb84syZKG59jz3j4P4m/VdKMS4m/OUPy
b6++bfWZz1YPqZekGdKObvAI40mZue7wGPz31LnVN/lsXgOqhU6wS7oJXgru
sTOJNVBaqLkuxrfk+VIMyuEP4rOl1N/ocmlf5rtLs6rhp1SPwd+M0/D7M/ey
9jwE78r1QDXSCb8O03MvRA==
            "]], 
           
           PolygonBox[{{2072, 182, 2029, 2089, 2090}, {2243, 2242, 2196, 145, 
            2042}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9037192453884375, 0.6556934048979973, 0.24137331710590784`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
9n5HkPl/PbEcBw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlMtLlGEUxt+Zceb73smy7GJCoLMt6Gb3KwRtbWY0Ri1NndLGLFf9FbUu
CNpUuChJKjIj1G5GoWm0iKQLFZblrtsiaNHv6XyLB57znec9l/ec98t09uVP
xZ1zWVAGXgbOlWLOnQbzoXN/sS/zvR8ksdu9c3s5sAe0wM+mnWtLOtcBzsCz
fFuPbz+ogU+AJgLnQRp/AA7Ax4hfLS12gbOtYAP8HTl6Y1bDLLwZzW5iHeLM
Qvz3+HYhqmeG2gZBOTwDHsHbvOXeB1rhDd5q3QUK8FdRP4MgQawJ7IvOYn6H
V6EZJfcIWAof41s1virwILAcylULnsA/EaMubj3n0E/x7Tm4AW6CO6ASbQUY
hq/01rtyvODsMm+5ZD/D/hFYLarpJ3wbPZ/nbs6BrfBV6I8l6Av9FPwamlCz
AaPwS4HxFLgCvxVYbt3RdfiCtM2iAZTD14LGpM1gHfxpVJ9mlMI+it1IbyVw
0tsd6C6U8z583Fs86TXbstBmox5+4e/Gn+NsFnQqtjetzqiWaexSwnpSb03e
ZqWZa/aauWavHVoEvxpYb7rzaXJ9AHnqzYH38CWhzVYz/o12eTRP9bQCvjlt
d6mcm+Cf0XfhK4JJ9N+w++AF8AZ7BrslZt/k+xNYf4o/hH0Xuz1mMx6Cd5Cj
Pm5vRG9FMRVbGmnfhlZrPZgLbOe1+3pDG+Ep/APRflbC59EMO/vmsedCe5uq
+Qu8Ctx2psnAD2peqkH3DF6Hlks9PNbuh6bVmVr44iifvs3i304N3dTSA+rg
DwO7C73Jr2hHAqvtf43YJ8hRVK+gx9sZne0HO+A70/ZvUMwK+Bpvu9cMVmN/
DG2XNcNJ+GFvb7egN+9NI6121MOPeNsl3bHuuuhNqx3tgvd621XVVIJvSVst
ekN6SwOBvd0aMA4/7q127ah29R9MKpbG
            "]], 
           
           PolygonBox[{{2383, 2382, 2391, 572, 2263}, {1970, 1969, 1974, 18, 
            1975}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8698190877755068, 0.5017607067606467, 0.2130861946247763], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2570, 456, 2507}, {2256, 449, 2328}, {13, 14, 11}, {
            10, 13, 11}, {458, 459, 456}, {1976, 17, 1975}, {1990, 11, 
            1987}, {2573, 459, 2393}, {1975, 17, 1970}, {451, 449, 448}, {
            2263, 458, 2383}, {2329, 450, 2567}, {2323, 448, 2327}, {2574, 
            459, 2573}, {1989, 10, 1964}, {2336, 458, 2232}, {2567, 450, 
            2501}, {1966, 14, 1971}, {2097, 449, 2331}, {1987, 11, 1967}, {
            2393, 459, 2392}}], 
           
           PolygonBox[{{2392, 459, 458, 2263}, {2334, 456, 450, 2333}, {2501, 
            450, 456, 2570}, {2333, 450, 449, 2097}, {2232, 458, 456, 2334}, {
            2327, 448, 449, 2256}, {1967, 11, 14, 1966}, {2331, 449, 451, 
            2330}, {1971, 14, 17, 1976}, {2507, 456, 459, 2574}, {1964, 10, 
            11, 1990}, {2328, 449, 450, 2329}, {1972, 14, 13, 1973}, {1968, 
            17, 14, 1972}}], 
           
           PolygonBox[{{1999, 1998, 1970, 17, 1968}, {2390, 2389, 2383, 458, 
            2336}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2097, 455, 2333}, {2336, 457, 2390}, {2333, 455, 
            2334}, {457, 455, 454}, {1973, 16, 1972}, {1968, 16, 1999}, {2334,
             455, 2232}, {1972, 16, 1968}, {2330, 454, 2331}}], 
           
           PolygonBox[{{2232, 455, 457, 2336}, {2331, 454, 455, 
            2097}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{1973, 1972, 1968, 1999}], 
           LineBox[{2330, 2331, 2097, 2333, 2334, 2232, 2336, 2390}]}, "52"], 
         Annotation[#, 52, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1989, 1964, 1990, 1987, 1967, 1966, 1971, 1976, 1975, 
            1970, 1998}], 
           
           LineBox[{2323, 2327, 2256, 2328, 2329, 2567, 2501, 2570, 2507, 
            2574, 2573, 2393, 2392, 2263, 2383, 2389}]}, "26"], 
         Annotation[#, 26, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1983, 1985, 1984, 1965, 1963, 1982, 1957, 1955, 1954, 
            1956, 2386, 1962, 2255, 2274, 2385, 2384, 2335, 2398, 2397, 2396, 
            2395, 2403, 2406, 2405, 2404, 2413, 2412, 2409, 2411, 2410, 2408, 
            2407, 2402}], 
           
           LineBox[{2319, 2324, 2249, 2325, 2326, 2504, 2566, 2568, 2495, 
            2571, 2572, 2601, 2347, 2602, 2569, 2605, 2606, 2607, 2608, 2609, 
            2610, 2712, 2700, 2699, 2619, 2575, 2617, 2611, 2618, 2614, 2616, 
            2615, 2613, 2612, 2512, 2511, 2332, 2510, 2273, 2252, 2272, 2270, 
            2271, 2022, 2268, 2023, 2264, 1988, 2275, 2265, 2281, 2011, 1986, 
            2280, 2269, 2276, 2002, 2282, 2279, 2278, 2277, 1996, 1977, 1974, 
            1969, 1997}], 
           LineBox[{2387, 2391, 2382, 2388}], 
           LineBox[{2394, 2400, 2401, 2399}], 
           
           LineBox[{2223, 2064, 2020, 2211, 2080, 2016, 2090, 2072, 2071, 
            2081, 2026, 2057, 2054, 2066, 2065, 2037, 2044, 2053, 2052, 2036, 
            2034, 2035, 2043, 2042, 2243, 2248, 1995, 2033, 2235, 2009, 2190, 
            2041, 2230, 2006, 2051, 1981, 2223}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0EkvXWEAx+EXC9xI0CYSC1OsRHfdtsXO2kfwAfgaSK7xGooaLsI1JkTM
G5FcuWhqjFjUQrpoRGIjMbR47uLJ73/O4pz3nIrG5oamjBBClJecEP7xyn+e
eeKNpdwQ1tlgi00OWeOIP9khZEVCWLQXmGeOWRLMMM1nJqljignijDPGKD8Y
YYhh6hlkgO900E8vffQQo5suOvnozBGy09/ibEVaSTF5VHPnfpVea5nGubHz
dZFtO1PPdVUfNaqXuqn3miJp7xLj1nVCUyTtI13mr32gv3RNf3Jl7+i+nugp
Z6yk38mJ73hIb73gm//7hRpq+cpv91u1hTZixOligl566KOTfrrpoJ0onyil
nFPPK0m/R1Mk2WWPDxRy7EwFGuEd03pbRQ==
            "]]}, 
          RowBox[{"-", "26"}]], Annotation[#, -26, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2313, 2317, 2267, 2316, 2318, 2484, 2482, 2499, 2486, 
            2502, 2591, 2505, 2578, 2588, 2603, 2513, 2600, 2599, 2516, 2598, 
            2584, 2597, 2596, 2583, 2582, 2565, 2581, 2580, 2374, 2564, 2470, 
            2375, 2368, 2367, 2365, 2284, 2354, 2356}], 
           LineBox[CompressedData["
1:eJwl0D0vA1AUgOHTqWjiJ0gqhg6du1M/AIOGUGXzESYSk6RptaQM7Gjiq4PN
IkRIkNglRTD4A0arpzE8eU9ObnJzb3puZWw5ERFTXHRF9PKdjGhqH1/mjO7R
Mue0TIUtVllno9uOKjWydgOk6O+ctVsjT51tRnoiGlpmh13G7SYZZYICRaaZ
ocQ8iyyxwBFNZjngmBNOOeScM1rUqLBJlYw7hzTPMIOkebd/o80Hn7zy6C23
PHDDHfvc88SzP/rhytzWhv7qpb5oQq+T/3/9B9rmNaA=
            "]], 
           LineBox[{2128, 2152, 2553, 2555, 2560, 2421, 2417, 2128}], 
           LineBox[{2433, 2426, 2429, 2358, 2587, 2433}], 
           
           LineBox[{2631, 2664, 2659, 2662, 2661, 2658, 2663, 2651, 2671, 
            2673, 2631}]}, 
          RowBox[{"-", "52"}]], Annotation[#, -52, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2309, 2315, 2266, 2312, 2311, 2481, 2353, 2483, 2485, 
            2497, 2056, 2493, 2496, 2577, 2576, 2492, 2494, 2295, 2579, 2373, 
            2372, 2366, 2379, 2378, 2377, 2381, 2380}], 
           
           LineBox[{2220, 2061, 2017, 2208, 2077, 2013, 2087, 2193, 1960, 
            2101, 2177, 2179, 2184, 2164, 2168, 2430, 2030, 2438, 2047, 2435, 
            2425, 2093, 2155, 2172, 2424, 2428, 2357, 2586, 2642, 2643, 2432, 
            2645, 2637, 2644, 2672, 2660, 2669, 2679, 2675, 2681, 2714, 2634, 
            2715, 2716, 2717, 2691, 2690, 2683, 2688, 2685, 2670, 2682, 2689, 
            2684, 2595, 2632, 2629, 2630, 2443, 2531, 2529, 2523, 2527, 2224, 
            2528, 2225, 2219, 2001, 2218, 2216, 2003, 2048, 1978, 2220}], 
           LineBox[{2127, 2151, 2552, 2554, 2559, 2420, 2416, 2127}], 
           LineBox[{2638, 2639, 2594, 2652, 2648, 2638}]}, 
          RowBox[{"-", "78"}]], Annotation[#, -78, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2304, 2310, 2292, 2306, 2308, 2342, 2338, 2480, 2285, 
            2352, 2085, 2346, 2348, 2362, 2360, 2363, 2359, 2370}], 
           
           LineBox[{2076, 2207, 2214, 2212, 2028, 2213, 2215, 2532, 2537, 
            2538, 2541, 2635, 2558, 2533, 2536, 2636, 2530, 2562, 2550, 2551, 
            2150, 2126, 2415, 2419, 2585, 2561, 2427, 2423, 2171, 2154, 2069, 
            2038, 2074, 2167, 2163, 2183, 2182, 2116, 2176, 2096, 2100, 1959, 
            2192, 2086, 2012, 2076}], 
           
           LineBox[{2678, 2677, 2674, 2680, 2713, 2633, 2687, 2686, 2676, 
            2678}]}, 
          RowBox[{"-", "104"}]], Annotation[#, -104, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2291, 2305, 2262, 2294, 2296, 2283, 2307, 2075, 2340, 
            2350, 2351, 2343, 2345, 2361}], 
           LineBox[{2125, 2149, 2104, 2544, 2557, 2540, 2535, 2549, 2547, 
            2545, 2198, 2206, 2197, 2202, 2201, 2199, 2191, 1958, 2099, 2095, 
            2175, 2115, 2141, 2181, 2046, 2187, 2068, 2153, 2170, 2186, 2414, 
            2125}]}, 
          RowBox[{"-", "130"}]], Annotation[#, -130, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2287, 2289, 2239, 2288, 2290, 2337, 2341, 2286, 2339, 
            2349}], 
           
           LineBox[{2024, 2200, 2098, 2094, 2174, 2114, 2140, 2162, 2166, 
            2418, 2124, 2148, 2105, 2123, 2543, 2205, 2204, 2203, 2024}], 
           LineBox[{2534, 2539, 2556, 2542, 2546, 2548, 2534}]}, 
          RowBox[{"-", "156"}]], Annotation[#, -156, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2107, 2106, 2103, 2147, 2122, 2161, 2139, 2113, 2173, 
            2107}]}, 
          RowBox[{"-", "182"}]], Annotation[#, -182, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2133, 2112, 2138, 2160, 2121, 2146, 2133}]}, 
          RowBox[{"-", "208"}]], Annotation[#, -208, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2132, 2111, 2137, 2159, 2120, 2145, 2132}]}, 
          RowBox[{"-", "234"}]], Annotation[#, -234, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2131, 2110, 2136, 2158, 2119, 2144, 2131}]}, 
          RowBox[{"-", "260"}]], Annotation[#, -260, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2130, 2109, 2135, 2157, 2118, 2143, 2130}]}, 
          RowBox[{"-", "286"}]], Annotation[#, -286, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2108, 2129, 2142, 2117, 2156, 2134, 2108}]}, 
          RowBox[{"-", "312"}]], 
         Annotation[#, -312, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVV3k4Ff8bVcgWUdGXkFSkKEtKUSe7SKQkSba0qJS02UsoVKK0aFOWUFSk
aBFly86171wXd5mZFpXdb35/zDP3mZn7Wc7nnPOed6n7STtPfj4+vu/0NYu+
/v+7NPLVuYVDpQg3vG92K5qBb5Ibgzb3EFibLJzra18Oye4su8/mjRAZb7SN
HCBwv8Dtd8O373jgX3xgiL8JNsxTy5vYBGa3fdDS1q6EyqJ2L6nCJtypmjuq
RBE4/nvBqdjEKrzJoc7pBzajMzet8vgIgSbxE1k/JGpgYCt42VOvBcpPTJ7k
jRHYsrKUZxNUi1KeXEzMSAuOXO09LTBDYPfTmPiWs3Wwi9R8kP+6FVk+gWa2
AiQi13xaJ6RRj84VZs+Zx9swsu8/uYciJAo+DjPWD9Tj8FenHHG1duibvCWG
JEj8spD2PfSgAb8O+HzZwGrHJQ3bIp2FJFSbDeffsWMgaCKi0u1pB8pkeLdD
ZEns9/B+UyLSCOF7D1uinTshznf1SKUiiZs/Emz/FDbi1rpsZq5sF3axlxks
Wk6iUvJRU5J9EwIdkrvtkrvwQP9zTcpKElfGI6ul2ppw+7PATjWZbrgbNRU2
qZMwGThXErK/GS+XeX6budKNVduIbEEtErNqPD4TPc0ojizRbR7rxi8bwRRd
XXpf721znTxa0EmtSHt5rAcf9ijc9dxIIuDp5szvgy0YsY+Qu9zVg1Bn3cj4
zST0olelbPBqxZwDvqUvVXthedA6oMSQxJ8zix6lEK2YH5s0c9e1F/OPeZ74
Y0oi+4BA/AKfNigWM/Qu3+9Fu0+QywpLEictfl67NNKGVf/4T3s39OLZhfid
9jtIqGt3h1Hn27F+1boXjmJ98ArJNA63I8FeXBnoPNEOI+eDAyYmfdCOKNHN
3UMiVTDvTGVwB3bcvK2gGdSHsWtdqqx9NM6bzy72EO/EqqxXC57n90Hk4Oxt
lS4kBKQYS3ZkdyLlaeJl3ak+PO/YWq5wiMSLAc3lGx26sCQ+9ve3rf0w3RVi
fuo4iV15N1Yun+xCwtVQD7uwfjArPpd+PU1iIpqnPu9pN6QDfRm9Zf24ZDRp
Ku1HIsnFUmvctAc3Tx40PinGxJIPm0oOh5Cw0knTZXF6IOZhnzO1g4nPWn4m
H8JJ+PPzKwyb9yJij9mya3FMOKW//zb3GokdhNYT54RezLbccEuumYkxpb9G
LnEklra4LmXwehG4eSV/uuwA7t5b9/XNPRr/wpgkC/Thn6as7wbnAehK+hoK
PCHxPaNgRUFsH04vF2WWJA6AceVN4Z4UEo9uE891BvpALJqw2z0wAJ8ZCukv
SPgEy69KX9+PI2K8r/2qLMw7v+bLxBsSkxHxAQpR/VBojjp81ouF5fzaAvvz
SUTESFTHdvWjPlFtrnAmCxtjdLd9KiQhee+K4hwtJiKOlb9OoFjYsXjjDfly
Eg8S+U75hzGxaf1hew3tQRx8bsAIrCWhku5XRLYwQfHNGf9yZhB+Olv/62om
8frNr/keqweQXJn82O79IG58MXbe3E1C/8Oxgy3BA9h7x9iYNTaIJCvzZ49Y
JEq+DuRaNQxgrlv/0HmDIeS1WA5N8UjYVDoLFa5goWj1pWuiIUOo9tihfmCE
RDujee86PxbO/V2i9ahoCP3UTp+CCRKenTYZaVUsrCoqaForMIzRAPt3ivwU
qIHyCXmlQfREO/t/NRuGuLDjRLAoBX/C0DrWdxC390wq2kcOQ/n2/q09UhTY
HZFvu74O4oAxK7W2bBgdZ4K8fGQpWG3OV5GRHMI6Q1+lLQJssGbUr8gvpfDy
8fC9Hc5DEMGshJdb2aCiOpPKVlKQ4PtP7ErGEHoMYhYsDmJjXPpa4WlNCt5u
5kFf/g3h7SaF65H5bAg81e9S0KNQ9/Uc9c9kGJF6L+aM/mFjnjp3rBwUtJen
umnGDcNl/caLh7Q5kH2fIHPGnMKt8CbGkZ5h6K4rG2v05mCZkaXOEhsKfwYF
zJ6qsyGqbe9r/IKDNdVjNhV7KOyxWJfX5sdG71om780QB3p704+fPUAhL91j
1fwyNnI1fA4pLefCmLk3UukQBVmxWw8tF3IQvXqm54YrF9bewqmVJygEHP8q
cdmNA1e1645TD7lwGHv/9dxZCkR6nGtEKgePLC8OGDK4WLViNAGBFEKfJPss
6eAgPXtznPYUFzfiHDnGlygsin8XmjePi1y5CSxT5eHXzIeNFhEUXkSV39pp
wkVhaB6xYCcPe07IR26PprD1Ynsy5wIXVZyzDwQCePjQHtRqe5NC41le7uVM
LlrsdLb9SeZB0aJH1T6ewtFj06Xy/VwwP/z4y6rhITR363nHBArTrpKtuTI8
UMpZyc2jPAwqPyt1fkIhbo8ye4cVD+NRx+zKlAlY3uSXcU+moLp93fhQCA9z
fq/ky9tOIGvqoOehdAqfDM3ELr3lYb7TYGbaOYL2z9K3XlkUbDfslZdj0+v4
luR0P5HAuVZVgZM5FFjqXho5CgTUVruJRFUQaDeN3OWbR/NQOXDLdjsCurcU
3/vTdXFLDufZ+c8UUn/K/TM+SWBYyKEgW5RE7I2DRV+eUmgozH+lf43Ag8CY
Eo4SCebR7h4hGrepmL1HdNIJWP8sq1LeQGK96d5pGy8Kai7/lFaXEuA7xNe4
z5qul0oN8vd2ULBfc6dNmUkgp12vI86DRMeElX6vNoWLU+vi5PhoPdn49FfQ
/rimpcRx5SKa51UMy/kKJP4rTmfPvkniUjYunKJ11/rgNL/oJrru6fX/2JRK
gnE9/05eD+3bx6Q+zXIgEZwpN3r6E+0XR3Vy+YpJaG56fWbMl74r75rJaCBx
wSSTYZFGwknERuMnPS7zTvQc5jA93hLVXzdpX73SSrCGM0ncESsWXzxDQnEi
UbLtFImc59ce91aQ2HZxcuEuaQqnmuXWLrUn4WYayTxN+41z4fK058somB9S
EhJUIWFb8dbbjqD9eNDkkugaCq513I/rCQKw6R3TmiTBEvPcd4LWof+m96eO
vKXzT6NYuJQYhQytcJ06I1pvyaErEgIIKDpukPxJ+4G3Q8pcHWsaF4kd7ZVG
BMS73R/U0brXCSphxTtQKLkgGzMlQmDS/YbK6w0U/j1jFYy6UejuHzBeW88D
byj/TYwZhY/lgvecjtPvt78edb3HQ8dxlsFJe/ocyBU+BecoSL4PyIxz4aHi
p2T5joMUTBaaWS6l9aO21Ny9WIXWwTmDXWt8KYhsOrQsjNaJUfT8RX8JLtIn
DneLh1KodomYHKT14PSnq1I1l4t7F28dJWjdxIanNm1LpHDGJf2iYyAXN9uv
mbk+pBCVcf915XMKbTf0w102cnG/e2nZGP0dt1o7JprmfZOFk5pEPwfP+t+Z
30qhaL5VnrB6QfvX7IDqT1EcvBi0KlfPoJC10HO7WCaFqk8JPsd0OHjL6bUo
pfUxT296VSV9Lz/3QVquk43P5NnvLrQ+fJzuikS/plCs2Z5fHsZG6S9Ry7H3
NN+DNYctsykUcsacz2uwUfv3SUXcJxrnZ99LRd/SOkyWna3SPIzW8XVW6kUU
4kvcUypyaV87sDG1MXgYfdPfK0tKKPwdnrgcRY/37j9Hy8uqw+DMdtnuUkHB
YW68u2U+heyGC6RW3RB+zxmpGq2h/792jaHoR3of1+7F9V4YwqRopHUcg4Lc
rrIlFfT8GWZ562OWDkFwnmLN6lbaF8+5TkcW0Lrla23fXDEIoTDqxHAzhYf/
3HY10+MsHIw8XLh1EMJjheIpTfS6L3ikKdPzhlbqjxi9Z0HUOy7TrZFC19jB
Ke93FH68Ji6WaLAgxvSwVqTnnfI/ZPeRxunAnSfiFskDEN+rS7TXU1CcPPxc
6A2Nc8DOhAq5AUhUz7l+t47ClqCjk7tonDe58ataxzIhadSqvruWgsu0185E
+rzSzHJzaoWYkHqfXiVJ7zck5HgqL42CjPrhrXbB/VigHnC8uopCIp/3hF4q
hTAp2erGkT4sfLp9blQlfR6XTtqGJ1H49bfC0eFYH2RkFF+a0Xj2zfZJqaf5
4toZONjW14tF0ZQV/3cKs8NOjys8plBTtMZ3/95eyPIVcb+UUVAWPGPj9YDC
hR1FM58f9UCmY/X6ZV9ovUlp22qE0OvhyX9OqevG/KPMpjaaB1keNamr6Xo2
3/dMVbBKN8T/JZy9Sa+vPNdrSk2D5td4ZYdDYBdEwu2kzWm/7xcS2r1SgMLc
S8u4mg2dEFggmjt1ncbTMSlDpYOEsHDAuMjKTvA9Ldr99v916SVmrcgmIRjT
IMIM6sDEGr8RL7q+aU13OCyLJDFbZpXsJ0Y7/n3SvL30KM1/2wtZS13p548u
rYyn+4zflsM6rfspHH62UFCJ9uGZZW0bvEPaQLY+Ydywpc975LWTIt2HTGZo
mps3tYJzyMHX1ITmiZl1tjyLwKjW1T1Kq1vBGpFYMEn7xrt7bOHFnwj8yevx
HLvYgr7Q0uzs1RTqOeEusrcI/MKGsw3NzUju99inpEDhitybpkhXAqpqF96G
mTZjlFUlNSlC4ZzgeFS3HIGa5uhdbFYTtrN1v7f8pX3+h9FWnSYezoQ9+WUd
0YRE3uOLOUwSuzui/1yJ4WGxdk5stkoTRighvZg6EkaljRmd23j42lOquais
ERa/T1Fen0lovVFw1RLg4cj19tqAw4149Lct1SyDhNLDQ9IRBVzM0ye9e4Ua
8XPM6IDyXRLzrryqaKfree7wLAnTNAZMp15IT18mMe0zGrJWh4v9d6Qz0y0Y
uM8nXf1/vyf2G+qGERzMNlHbLsFuAMEfHJbrTKLTPIrT+pzOFz8NuKcjG2Ao
NKQfS/crFdqMJxruHNg+sY1qUWtAvKjt7+P0eeQryNuHynPwd/tBNYOKerDF
8zMs6L4tTdhTtKWZjUfj58sTveqh5u//rWYuCXv9yOJ4OjcNbSlOaDSpx9FB
/c7dfwjM8s4M3i3PhtZlyRPCS+qRYTc10t5F54PEer0FX4YRULYfBmN14BQU
iLvR9Xcf48+verdhlIilS51i1GHV6osqQ1kEhObIZd6k8+o82z/MpMw6eN01
xIm7dF3W23LY5vkQ9t42fNdypQ4v+Pn3/g4h4H7MfamE5RCSWq9fFXOvA+9k
8Sm/IwTmPY7oqOINgpBv3weDOqh3hkfO2BL4WJcRHx0ziA1uKhq+MnU4bmH+
LHwjgSP8tTaWdJ6fbcWatu6rxcu3wh/F6NyzcP1vEZEmFu4wgpJy42tBKFUw
YkUJFB1ZVFx2ns7X+2UsFCxroXE9mrfoNw/eD/SDI+RYKBjI4oVN12CRrwjl
1sWDTn1vnsenAQxaDaaNvatBU7zn4PVyHsKvlurU0f3OPmXixxmfGtzOK+rK
z+GB7oCzDGaYqB79rfdjdQ3sOhSaWI95WPkvVi09kYmtteMXjw1WQ3Lar0oq
igf/rPPJ0kZMvE2Z9X0wsRq1Ss3fNp/locrTeUkosx+qgcJS7k7VuGGs/fGo
K53HFIwTSLofTLCb59glXY3th25kx9N572TjSmknlX5IqMk83VtXBdFITnrR
eh6KoiVulpX14dKMPJsRVYXvL8yeEkt5WGA8IrruaB9GmpZp2ZhW4WrNs3uy
4jx4jreFJ4r24cjLVX4VM5Uw+zkdYzrKxbs3X/jEX/aiI1SryPRDJQQWOl3x
YXIhfDQlwM+6FzaOeiJFZyohV5tpV1PBRZr2zkLjiB60hTqquipWoucDUXIt
g4s156vXhn3tQpzdq59mqRVIStXYaBVF6+fjtifF0x2wUhb8pLGmAkfiTrwU
8eLCgK9UQlC/HQK/9kUsfPcd6sGZS8q3cfHVxCjY9HwrPhe9tp3Y/B0/jxJx
EWpc7I4sIMJzmuEXO2dxf0k53tlrzDEV4aKjepNzKdUIbbf9rHLrcvgbnvDj
Z3PgPv991Rx1Bria2a9eNZUBGpm8onIOhvfoGJgfqUcyn7D/Hecy8MsSLhfT
OOhe7+Iwb1stnOucTYJYpSgX0GBsucoB74vD+ptFlZBJzJE4eKIU134cN5s6
zMGoha201KZy1J4UabP8UwLbzpf5H805mNNgMRKbXYyrcEnSCiqBdDlP3V+V
g4VOhoz5q4tgOC/3xH+CJfgf4V2+eQ==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -98.18818562183802}, {
                    Rational[
                    15, 2], -98.18818562183802}}, {{-7.5, \
-98.18818562183802}, {7.5, -98.18818562183802}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -84.31650923838785}, {
                    Rational[
                    15, 2], -84.31650923838785}}, {{-7.5, \
-84.31650923838785}, {7.5, -84.31650923838785}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -70.44483285493772}, {
                    Rational[
                    15, 2], -70.44483285493772}}, {{-7.5, \
-70.44483285493772}, {7.5, -70.44483285493772}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -56.573156471487565`}, {
                    Rational[
                    15, 2], -56.573156471487565`}}, {{-7.5, \
-56.573156471487565`}, {7.5, -56.573156471487565`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -42.701480088037414`}, {
                    Rational[
                    15, 2], -42.701480088037414`}}, {{-7.5, \
-42.701480088037414`}, {7.5, -42.701480088037414`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -28.829803704587263`}, {
                    Rational[
                    15, 2], -28.829803704587263`}}, {{-7.5, \
-28.829803704587263`}, {7.5, -28.829803704587263`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -14.958127321137127`}, {
                    Rational[
                    15, 2], -14.958127321137127`}}, {{-7.5, \
-14.958127321137127`}, {7.5, -14.958127321137127`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -1.0864509376869762`}, {
                    Rational[
                    15, 2], -1.0864509376869762`}}, {{-7.5, \
-1.0864509376869762`}, {7.5, -1.0864509376869762`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.785225445763174`}, {
                    Rational[15, 2], 12.785225445763174`}}, {{-7.5, 
                  12.785225445763174`}, {7.5, 12.785225445763174`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 26.656901829213318`}, {
                    Rational[15, 2], 26.656901829213318`}}, {{-7.5, 
                  26.656901829213318`}, {7.5, 26.656901829213318`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 40.52857821266347}, {
                    Rational[15, 2], 40.52857821266347}}, {{-7.5, 
                  40.52857821266347}, {7.5, 40.52857821266347}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 54.40025459611361}, {
                    Rational[15, 2], 54.40025459611361}}, {{-7.5, 
                  54.40025459611361}, {7.5, 54.40025459611361}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 68.27193097956376}, {
                    Rational[15, 2], 68.27193097956376}}, {{-7.5, 
                  68.27193097956376}, {7.5, 68.27193097956376}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 82.14360736301391}, {
                    Rational[15, 2], 82.14360736301391}}, {{-7.5, 
                  82.14360736301391}, {7.5, 82.14360736301391}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 96.01528374646406}, {
                    Rational[15, 2], 96.01528374646406}}, {{-7.5, 
                  96.01528374646406}, {7.5, 96.01528374646406}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -91.785873444861}, 
                    Offset[{4., 0}, {7.5, -91.785873444861}]}, {{
                    7.5, -38.43327197005274}, 
                    Offset[{4., 0}, {7.5, -38.43327197005274}]}, {{7.5, 
                    14.919329504755508`}, 
                    Offset[{4., 0}, {7.5, 14.919329504755508`}]}, {{7.5, 
                    68.27193097956376}, 
                    Offset[{4., 0}, {7.5, 68.27193097956376}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -102.45639373982264`}, 
                    Offset[{2.5, 0.}, {7.5, -102.45639373982264`}]}, {{
                    7.5, -81.11535314989935}, 
                    Offset[{2.5, 0.}, {7.5, -81.11535314989935}]}, {{
                    7.5, -70.44483285493769}, 
                    Offset[{2.5, 0.}, {7.5, -70.44483285493769}]}, {{
                    7.5, -59.77431255997604}, 
                    Offset[{2.5, 0.}, {7.5, -59.77431255997604}]}, {{
                    7.5, -49.10379226501439}, 
                    Offset[{2.5, 0.}, {7.5, -49.10379226501439}]}, {{
                    7.5, -27.762751675091092`}, 
                    Offset[{2.5, 0.}, {7.5, -27.762751675091092`}]}, {{
                    7.5, -17.092231380129444`}, 
                    Offset[{2.5, 0.}, {7.5, -17.092231380129444`}]}, {{
                    7.5, -6.421711085167793}, 
                    Offset[{2.5, 0.}, {7.5, -6.421711085167793}]}, {{7.5, 
                    4.2488092097938575`}, 
                    Offset[{2.5, 0.}, {7.5, 4.2488092097938575`}]}, {{7.5, 
                    25.589849799717157`}, 
                    Offset[{2.5, 0.}, {7.5, 25.589849799717157`}]}, {{7.5, 
                    36.260370094678805`}, 
                    Offset[{2.5, 0.}, {7.5, 36.260370094678805`}]}, {{7.5, 
                    46.93089038964046}, 
                    Offset[{2.5, 0.}, {7.5, 46.93089038964046}]}, {{7.5, 
                    57.60141068460211}, 
                    Offset[{2.5, 0.}, {7.5, 57.60141068460211}]}, {{7.5, 
                    78.94245127452541}, 
                    Offset[{2.5, 0.}, {7.5, 78.94245127452541}]}, {{7.5, 
                    89.61297156948706}, 
                    Offset[{2.5, 0.}, {7.5, 89.61297156948706}]}, {{7.5, 
                    100.2834918644487}, 
                    Offset[{2.5, 0.}, {7.5, 100.2834918644487}]}, {{7.5, 
                    110.95401215941035`}, 
                    Offset[{2.5, 0.}, {7.5, 110.95401215941035`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "300"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -91.785873444861}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "200"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -38.43327197005274}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "100"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 14.919329504755508`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 68.27193097956376}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "338.82496070021944`"}], ",", 
                   "82.8976803339564`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "312.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "286.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "260.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "234.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "208.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "182.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "156.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "130.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "104.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "78.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "52.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "26.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"26.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"52.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693265476128682*^9, 3.693265557108314*^9, 
  3.693265712735215*^9, 3.693265760000919*^9, 3.693265820667389*^9, 
  3.693265922901236*^9, 3.693266501030303*^9, 3.6932670688847823`*^9, 
  3.693267380064581*^9, 3.693267463833372*^9, 3.693267562890038*^9, 
  3.6932698506768923`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJycvXk8Vd0XP26eucO5g3lOKaLSpHJXEUJEpSISaUSSJFTSJKUkqaQMRdJE
gymVilCipEJSyBSRKSrqdz7Ps+/1fbavX8/zvf/0Oq/7ds56r7322nut/T5d
NdfNdu4CfHx8VpJ8fP/7958fVfj73wrOP68/Ydd8fN0lxzM83ylD4NLCsV8q
X3FOivN3JVRxrxs4aXRFnTdvlXl4h7Vlnu8ylOBb6lGb6vRXnMQP1+qNbylB
tKEwed3A+bz8yLKrN5R4+OQz+pGaC+jg/bO2Sh/KOSXHktli5tzres5Gu6Jz
baZ0Hl5miteCSE0aJN/P/OC0qZyjPlFbSoh3Xc+Zpv2pdJsGjYf/+0OFmj0R
jWHR5RzudRBNlLyu511zkY5/sL8Vs99qymrNBZGKsGvO1lPGO15xwkUyNt0P
5143cEqrJG5NOaTIw98uOf8uw1MBRF4s+3AVXnE6v2/om7FeAdZCHXndwBk/
dirlrqsCwsfn/n1/BtidWR4rM6ec08Kfkm0WwYB08Xryup7zIzbGxvQoA7s/
AXmGSXfjjMo51eaXWsZ6ELD6qQJ5Xc/xO+747fRG4v/R/xG5d5D9oqPYr/0P
+7n3l4cpR5oeUtvKOdOCDt5UN5GHCgUn8rqe88S5tlyVI8+7/9/jKwcJ61wv
+J4s5/Q+XeQtpSoHiX9d13OqXaecOqAgh8UnC1Tpy5kdi8o56bL0vQJvWaD2
1zXpn1NN1qfKWVh8MiF7aeXyX6blnNCem8pJt7jX9ZyM4OgyrzQmNr7D/m/+
//X/6PYnIPvfYvb//ZGFkJJXjpO2lnNOHXbccfAnG+pnO62ctLWeM5Gd2S3T
z+bdvwfxVUN8b/7/8mXArrnbvmT613OeldsbTZzMBOuKjd9PxtVzopOuBa1c
wwLldS7Cvk+484ABKi/b2jP9yzmPFTdnpZH4Tre6gZNx5ZxfwmFbVruzYOfb
VhJfzsNzGUz56zPst7V/fYb9/s/7d3N2ipkp9uoywaSsesLPg92cH9SjM1oc
WTD/t7+n0alu3v1lxrc1EHfaOOtFv+vQ9JmworxZ+8nbNo75u3MO6i4kXsJx
s/+PNh7+v/K9nr2avP9PjlHgs3GVGkyghzVb9hT+5AR9i7ZNM2OB3RHFzPLq
nzz82gKtlkZWP0du3Af1pnFMOFMwY07/2H5Ozl76/BJbFpQUWESKzezn4HyD
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
RfhsrnW0qkAZcicrhltaKMLKgniFW4eVQDb/tm75/OG45+ZTPF/i84U7r0az
fw2yvwTZz73/g3miVYfODXAk3Yo1Z5N5ecCwobpixwAnPNLIwp98jrS71wcV
+wHeelGrFXm+8tAQx2HbGAWfPGUYpzGRL9x1iGOkHDf1U7ASWNvuWDN31hAP
b+7nWHnonCzIlE6ZMe+eMhin3Hn/6KgsJJXd3bwvQAmMqikNP3cPx/0ivfuH
zlXKwRTzz+XfybipcWoLTHwuBx2PxyX1kHHT/cDD89IjOR5+Oeb/36Z/+98Q
8z/Xno+Y/eMx+xch+7n3j2jPSCNm8cPAiU2tS0n7FfRDkozU+MHfcUL5FdL+
5K0LYzaI8g/nhb/8LwjRN9MzZ+Yow/Fmk5JpxwVhgrvb5q2+ShD59s7eyVsE
efi0F3P9XMeywBAO8wlkK8OWxcVqzjIs+HVrI5+QjxKkJA4+X9E3PK+yDl0c
6+fKBs2DqxTV7yoDcw0zOMKaDS/mEjNM/JTAx+hAZarhcF4Yzf8XR/H/aPaP
R/af+L/aLwKdQ95C67KUYd5cbYfs38KwtChcvNRbCZpks2dTK4V5/r//V7yJ
QR6zxjYqQxl6YqRbZnmJgdgqqQvjPJVgbA/R/8VIjHf/uL/sIWDRnrO140h7
nkr+UNwQSUC8wPR7tqQ9O9ufjTm1leDhU9gf8q3bGRAWMGfzSdKf526sjnN7
wYDDD7U+jN9K+t/s0w7/2wzMfhbMRv73/oP/80axXxzZr4XZX6ewzTCdkISw
WbWfMm8rw+WIvBXaHyUgNpVavHmDEuzzuL094aoED//3fCfrmiiD7e9ukvHw
ReEpy04a9L8xOjPcyfi3Gvq2RF6ahxfLdk0nZtHga0Z2KZ30j1DUpXFeZL24
IaEwdgzpH77N7XFFP6k8PNWnwHWsHx1UY1PfKJH4K60BiW32dIAZS6/NIvH3
dWvqb0yn8/Dxf/B/EOZ/3H4fZP/kUez/+18qqEst1NhO+jM37E74jnwKlFp2
zO/wUAJ/5iaFnlAKDy+K8RVEfDcivr+9/k++vbx5fH5FdKVFeQ+H3nb+QPYb
ZXDZs/P6yYs9HM03c6S3XuOuRx08/DmNdZse3v/CqdvlVGX2VhkMzUrfhOz8
wnk0lHPz2HVuvh1eZwIw/ctJpA9pQfoQbv+ci+eudwux9U4TrXd/wfKGx+Go
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
YQCtLyzvrjANfJ3vL1IwYUBO5W07MaDx5s92FE8tLP9v18n80517YwxnDxXi
mj7N1yLjtb90/ZXI2OH58wnNn7fvUkyjyfmzZy8ldN9+Ksg6OAaXTWZAClXB
Kyv538enA+KL15/5Ht3ahuR82iCgqbwjfNieb8gevP5sDY6/NZ2cn3cLE07d
9hvJB6+38fmH5xO8HsPrOW59REH1UQFWfx5xOvT+6SAB8jN+Op9PosKzo8a3
EvgZILBHbNHbu6T9iK8bxnc94huP8cX5c+8niO7Xj9Wn+HjsL0irmTqGAZKN
R83HVJP16xqHGbEk/6b91zUiyXUCzxfc+DqE4guPH268fRgl3rYh/F2Ex+uZ
O6W0lStKGHBcbPIl7w00OOMu3VS0jRwfTQnr7w9osB2rZ7jzl4bmLz7fudfd
6Jp7P3l0P649Wcgebv4wQ/lj23MXt2IRBszYJz42so4GJnLrTZd3EnDzywyv
J5toI/KPLVYPEVi9uQ3zF9ffjcjf+HjhzzOYdt25+A25Dxvyq1M1oI2o3/Hn
4fWrLdYfmE/v0GF3vOK8ZG0MIHaogOTS2qZMjWJOoM87tcj5KgB96jvFtao4
xze8enzipgpE1Vhv9YnK50xgPVu2u1oZogriLtb8IuDDWZm8gFYKzLqd9vYT
Gd+OiSpyHW0UqE98KPHlBwFvU/R9VndQIOx4+Zy+AQIW35j7rOIrBSYFN3gP
/e995Tt2muY9FKjy6r0g3EeAZa7bzrt9FAh2En4r3UPAk0e+byYOUGCcFUuC
1UXAvOL9eok/KFBmOHaOMumfe2XRocwhCmzXnuGtRc7PmW8u1YX+psDJIdOB
Z18bONN7zN8/PqICVVNma+YszeEYHl0snnJHCY6e+V1yoWcrZwJldpiSNR08
P5sZS3zP4+gPmkyxIb9PlX40Pp+sP95uffMuhyMBMyd8ejdVggarqm/sdpOV
AdArtUrbsIEzZnLfDrUFw79PTWOM/5I6jw5NS5efp8fn837/Q5n58K/fz7xo
NvEhkTXeKOdgUF5WfDZnTxOrK9J9+PenzQO9ymNNqbC748Ff+CaDjtv9v3SM
ytv+vv5oFXVdl0/X6GKZ8JfPPwk4HfyW+jiQAkO/Xb4lkf5JeSZQkn6CAvb6
ub9dmgnIYk08GH+FAmkubHHF9wQUrV4x79hjCogf96G/LSeg8uq+oZ3vKOD2
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
tUolR/vw/Qblq0XV8f4Tx46kmKM/Z4XEWmx50L6x8qZk9N/3y6xbHIYoYJx5
3c94N/KhB5Qhp3cU4FaYtnW9gvypdFWkSxHGI9lROzYT9e3HDVs9EpAfrfoi
8qqPCENH3wmoY7yFrN2vxiM/XUHdFD2N8eDckq/ujPxU6HUsoxD9Oyk2Pr4F
+amSO+sjN5yH/YtKGXzIT/XW2MttxHnY2nf6ZDfyp0M9DemTExSoLH8qmYp8
yfW26vp85K85CQPd7phPQXCv0AX5RsINqSh9zIfE8cXNaqj/Qo8dMRHE+N3M
oUda4vu8aY0eoajfHwaaxc1VUuD3HusUp28EKD7unxwbQoEjAcOdu/cToUOn
PFvbmgINVe6cCrXI1981phihPzZtNA6eJGE/ZCq+J+D6BXKaY6PiJCjV655Y
wvVXy6z5NUsngatzAOE38ukYKdFhNmHs/2dld6mh/vi/88MZ00Ef4xG7v6DX
CWD92Slelz+F/PrvyUWnQj7sv8zRzETkb4N1byt/Iv/fm9zxOxvft96eeGf5
+mqiqHYLXt9QQ+e6SUP9/fOxniOu7yC7s/Ew8q11f1v9MlBvPiCOSK0QIYG4
zQeB2OWfX63/sD0gmwhuKRxTy3pK8+gb9mjUWw3jyh9q0L9XQ4qrHuN+V222
LjuE61WUpt7MbiOCp4/fowm0j+NnzPZS5Putjbm+/qhfDUQD2d+gflgj3HtK
vJcCQQaeVR1Yr4k3hRmGaf/4naeSWplxBfL7GoZWQQgB9mewKtZfw/Wc319S
k0V9p/ju3k6ggL5Q1PNctCc/9uijbsyvsKDKhULkkye7n7dsr6LA97DUL9zo
bwedA8YXCjDeAe3fmXjdXlnq7F7MnxzWcy/8UH/b/j345Rnaf8aDz/A86jHr
2khzwQEKyI8nd1lXob6JaHp9EfX2gIPuSf12IpjYcGu8x/xO+Nw7qYJ60VBR
N02zlgLWVh43GdiPzhqmKfsi5lOWPLr8fa7rBUcSudG+u7Q7t8lrCHAixXHJ
xgrn/41XeT4/CHBv8w+r57NkCB+d6JpJJ4Jk9LqvdnmoV2bmCGMYzy9J0dZf
Mf/7bzhybbHCfKtrK/ZF//q8bDI7eJkIb34JiKzpoIDs3/Vxl1Aflwnsubj8
857X6lFD0ZWoBzYEtZ/NocBJ11m1AtRb19/+FM/C99tbXI3hxvinDv/YGVyO
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
      "], {{{}, {
         EdgeForm[], 
         RGBColor[
         0.34209040158061915`, 0.47072324471077875`, 0.9430186757834205], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2300, 211, 2295}, {2272, 209, 2298}, {2278, 211, 
            2186}, {2186, 211, 2300}, {2232, 209, 2272}, {2250, 209, 2265}, {
            2152, 211, 2278}, {2265, 209, 2232}, {2298, 209, 2250}, {2295, 
            211, 2292}, {2292, 211, 2152}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.44521457989219726`, 0.5600442247923583, 0.9495896572363038], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2187, 2186, 2300, 2301}, {2233, 2232, 2272, 2273}, {
            2279, 2278, 2186, 2187}, {2273, 2272, 2298, 2299}, {2296, 2295, 
            2292, 2293}, {2301, 2300, 2295, 2296}, {2293, 2292, 2152, 2153}, {
            2153, 2152, 2278, 2279}, {2251, 2250, 2265, 2266}, {2266, 2265, 
            2232, 2233}, {2299, 2298, 2250, 2251}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5775662579724972, 0.6679333331423083, 0.9598872780039605], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2264, 212, 2302}, {2305, 212, 2264}, {2093, 212, 
            2305}}], 
           PolygonBox[{{2267, 2266, 2233, 2234}, {2234, 2233, 2273, 2274}, {
            2154, 2153, 2279, 2280}, {2280, 2279, 2187, 2188}, {2294, 2293, 
            2153, 2154}, {2252, 2251, 2266, 2267}, {2297, 2296, 2293, 2294}}], 
           
           PolygonBox[{{2213, 212, 2299, 2251, 2252}, {2302, 212, 2301, 2296, 
            2297}, {2188, 2187, 2301, 212, 2213}, {2274, 2273, 2299, 212, 
            2093}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7081801330585427, 0.771954969404473, 0.9715484354098153], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2108, 210, 2304}, {2275, 192, 2547}, {2533, 210, 
            2244}, {2297, 191, 2302}, {2136, 191, 2150}, {2555, 192, 2137}, {
            2244, 210, 2108}, {2547, 192, 2555}, {2149, 190, 1958}, {1958, 
            190, 2166}, {2135, 190, 2149}, {2093, 210, 2274}}], 
           
           PolygonBox[{{2294, 190, 191, 2297}, {2214, 2213, 2252, 2253}, {
            2189, 2188, 2213, 2214}, {2302, 191, 192, 2264}, {2268, 2267, 
            2234, 2235}, {2253, 2252, 2267, 2268}, {2137, 192, 191, 2136}, {
            2155, 2154, 2280, 2281}, {2150, 191, 190, 2135}, {2281, 2280, 
            2188, 2189}}], 
           
           PolygonBox[{{2235, 2234, 2274, 210, 2533}, {2166, 190, 2294, 2154, 
            2155}, {2304, 210, 2093, 2305, 2306}, {2306, 2305, 2264, 192, 
            2275}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8296889059444315, 0.8670354285674354, 0.9836176625926516], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2135, 194, 2150}, {182, 194, 193}, {193, 181, 182}, {
            2275, 213, 2306}, {2559, 195, 2569}, {2115, 182, 2132}, {2114, 
            181, 2122}, {2136, 195, 2137}, {2122, 181, 2123}, {2577, 183, 
            2133}, {2564, 183, 2577}, {2141, 193, 2311}, {2083, 213, 2116}, {
            182, 183, 194}, {2123, 181, 2028}, {2306, 213, 2304}, {195, 194, 
            183}}], 
           
           PolygonBox[{{2282, 2281, 2189, 2190}, {2190, 2189, 2214, 2215}, {
            2548, 2547, 2555, 2556}, {2254, 2253, 2268, 2269}, {1959, 1958, 
            2166, 2167}, {2245, 2244, 2108, 2109}, {2569, 195, 183, 2564}, {
            2167, 2166, 2155, 2156}, {2149, 193, 194, 2135}, {2132, 182, 181, 
            2114}, {2534, 2533, 2244, 2245}, {2133, 183, 182, 2115}, {2156, 
            2155, 2281, 2282}, {2236, 2235, 2533, 2534}, {2150, 194, 195, 
            2136}, {2269, 2268, 2235, 2236}, {2028, 181, 193, 2141}, {2215, 
            2214, 2253, 2254}}], 
           
           PolygonBox[{{2556, 2555, 2137, 195, 2559}, {2116, 213, 2275, 2547, 
            2548}, {2109, 2108, 2304, 213, 2083}, {2311, 193, 2149, 1958, 
            1959}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9122291923990994, 0.9328508124899978, 0.9914904287992815], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2036, 184, 2336}, {2539, 186, 2583}, {2113, 185, 
            2131}, {2067, 184, 2121}, {2583, 186, 2134}, {2114, 185, 2132}, {
            2121, 184, 2036}, {2115, 186, 2133}}], 
           PolygonBox[CompressedData["
1:eJwt0L1OQkEQhuEJwbB7OqWkMnAbkKDSKJUSOiisEUu5CrwMziWokVJLvAIp
IeGngw4C75ed4smZ7Jmdn71+fn0cFsysgiJ+g9kP6mggL5lN8EY8Qgef5H3h
lngZzRYx3dHdJ///gTJxGw/YUGPrFPc466MbUi3daRKvscIY76ihiju0EOhV
imkmzbYn3uGAI6bkfIc0k2Zr+V3l7D1HuSdYlnasew/10pn+Rb4Z7kPaRfPd
EM/x7z2mvoN20UyaLSeeYIY/XFCjiEtcZels5jXm/qZ62wFefOex18j9bOBv
orfRTNFrqvYZasY+kA==
            "]], 
           
           PolygonBox[{{2336, 184, 2122, 2123, 2124}, {2578, 2577, 2133, 186, 
            2539}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9604538263497017, 0.9700271089592996, 0.9518255360827003], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2057, 163, 2361}, {164, 175, 163}, {176, 173, 172}, {
            2541, 630, 2544}, {2593, 165, 2101}, {2072, 177, 2081}, {2113, 
            174, 2134}, {2091, 163, 2057}, {177, 173, 176}, {2591, 165, 
            2593}, {176, 172, 175}, {2711, 630, 2552}, {2350, 172, 2102}, {
            2544, 630, 2499}, {2499, 630, 2711}, {173, 177, 174}, {2067, 173, 
            2131}, {2552, 630, 2541}, {177, 176, 165}, {2092, 164, 2100}, {
            164, 165, 176}, {164, 176, 175}, {2585, 174, 2589}, {2361, 163, 
            2014}, {2094, 175, 1982}}], 
           PolygonBox[CompressedData["
1:eJwtkr0uRFEUhTdh7pmjM4VphBtUREVLFCQSGnoSvdHyFLwDkpH4iQcw5SjN
E1CSzKVydcS3snfxJfues/baP+eWRyd7nVEzm4MxeEtmr/AEPejAMQyh0l1h
donuAZb5/mua/YJlsxH4IH6HPnfP8IX+Ew6ID2EFrsw9FolLtLOwQ7yrmoV7
38qf85rv78I10i6gmYdN2IIBvETP6v0GunE2CI20Nbk/QR09q/cL7s4jR7nb
yWvfQSv5TJotw0T2GTRLIrcJZ8SnsSPtaj957j1sxEyaTTvQLqrYpWqq9ipc
m+9kST2g6RbuKe+KGkOYonY7elAv49CAdTRrsRPtpoRHc8+Z7D2qV3nKW2/S
jxzlNsJrElqBYtVU7V78C3pTve109tlUo835P2lAS6g=
            "]], 
           
           PolygonBox[{{2102, 172, 2121, 2036, 2037}, {2584, 2583, 2134, 174, 
            2585}}]}]}, {
         EdgeForm[], 
         RGBColor[0.986673822039239, 0.9887572971931425, 0.8705127860602575], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNks0uQ3EQxYdG/fuXfqRKWuqjJSplycbW0qKJR/AAJH0GlhIqkWi1TRrR
voCNBW9gY2mpCxJPYIHfZGZhcXLmzp0598zJrRydHB5PisgeSIB8ELmEC/AW
GFLvwB2x+l7nosgZS+/wrdi7PrgCPdACZd5dMJNhN8yINJMiSTjr9RvvP1Mi
58zMU2eiadTgdTCgPxlNW7/ZBlmeT+nn4ETK+rVg+6rzTe8AdOk34M1onurw
NnMj6l047R7Ui/b0hoHfo3cVovnTGfX+zM4LM3fweNozQP8R3DC/5j7bfn/J
M8x7fqo/8px6nlXXa935QKeJzlOwfuvfXM9zXQjWX3XWOf3Gl2c4Gy1f9TwF
F5m7pr9E/8H96x11z6TqeejdffAbzMMYnvCcf9Du+K5qNDzbVzIYu2fdW4mW
Q4V6MZreBlzyf6AYzZN60+yD55yGl6P5nIOrrqO5Dj0vza4cLKf9lP2Xencu
Zfuqo//jH+PjUqw=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkjtLnEEUhodF3PlG0RQKrvfdRA1EdhsvxEZBcAvRwj+g5AcopNNaS8E1
EDVEBBFvP8IUClqJYu82W+56KdQklc/LmeLhe+fMuc53st+W5hZTzrkhqIOc
d+4H301oRz+mnXuAefQCNAbnGqAe0lDCtgEncApDcETsMQyit/HZgr+Jc/+g
H71HwX34hD7A5xrf75wr3I9yHoEXar7Cmbc7+ZTRbcRscF6HamI1VfsGbqHX
W+8lyKDvyLGL/gWdnAMxCZxgP4Vhb72qpyy5OzivotfAB7Ppbgd60B+Dadk6
guVQrmXiVuB/Yr2px85gb6a3U03VbsX2M+bLBYtR7CIseXsjvVUNHqAlWC/q
qRn9jO0JzuECJhOb7RAqacuhXFWoQR8xvzUfNKFTwd5eNt1d4XMJ4zAB/YqB
KSh6+wf6F1nq5KDJ22yaoZv4P/pHkOeuEH3kO4PfLGS9zSr/Nm8z1eIMmmUg
WG/auc/oxNss2qEv6ALkvdVQrTFivsI9ugxd8T3VUybYDONxBs0iH/nmYy71
pN6009rtYpz1lZxv8CGx3dHOTCf2htW449p1zahZtaPa1Yv4L7Tj2vV3peBr
Yw==
            "]], 
           
           PolygonBox[{{2551, 2550, 2558, 644, 2075}, {2276, 626, 2536, 2247, 
            2248}, {2576, 644, 2561, 2571, 2572}, {2567, 2566, 2579, 653, 
            2537}, {2257, 2256, 2271, 206, 2203}, {2087, 166, 2057, 2361, 
            2362}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9945843935017311, 0.9920285217852965, 0.7394141450240614], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1VUtIVVEUPT2f7917nmmDFMoIPy8V8gkqQmWaNnHaZxAEFUrFK6WIUoMi
XxpkfoJADSJI0CJRqF42SGrSXGrsOMLoM+hrVtRa7OVgs+7dZ9991l57n3NL
O84eOBNxzt2F5cBqvXMv4agBVsecS8GeRp0L8H4F/uLAuUvAPthl2CDsJqwC
cZ8QcwoYTzg3jFwjsEFhBjYKG4D1wq7Jx7g++fu1djw03x5gQWA5GvBcidwN
sB0wD38P/AfhnwDOg8MT8SI/cg3Boy7u3C7gFm88VxE/BZyBFeZafY+jVmOB
t3o2euOTEbdD+GYMWAW8KO694tuj59v4rlncBhRz1dme5Ex9VpC3A7gKLAEm
YaUxq6tcMUSusY4SxD0D3vOm4Q3pOa7nIeGY/Gvvo9J8WDVkxIX+YuSaRM5y
bzo8lBabA9OxDHgEa4+gx7i3vZh3QvuOaQ/WdUu1JcWbdcxR91zTNo33CzHL
xf5MKBd7Sb7twKW48TyM58/YrxXxS+LGHJPqazZiuZcU887b+6zW20Lrx3Lc
fHOq6z3814Fxb3PAedibsDnmjPzE+jLW9iPnN+7rba9J4B31lL2N4JsuPOcA
o7BzeP7uLS/z5wFfIedrcDjqTZdK9XRI2i9I71lxYx3Mz33ehvbtdGBaJjUH
Q/puXvGMLYIuSWlUQb5Rm2HqXKHz2RJohmJ2TrOaccbt1JyuzSu5spfkyLO/
IO25D/f76O35vrfzxpk/HZpmnN99MetToeLT6jn3alevF6F7EXQ7ibXGhBmf
mxI235zzlDc+5ELN+3Uv8AwGOu88962Ie74O9wNwNyyGi6sF+Evn64e3NcbM
YP8yb/kKgdOh+ZljU2AzXaK+nZdODxQzFdp91h2zmqbkZ4489X0DsN7bvbA+
MF3I8w3qfREat0asN4lns2qdl87N8rOOr9568wH4RbWsaDY7dRdzXjm3bYHV
yRjGUvuZtbkXT9YxqrPPvuZ7m79t3nKxd8y9Tf4IsMrbfFbqjmIM/wN/8X4C
+Ae41VuP8gObdWp3zFu/O6VVjf4ji9KQvi5Zbdx8WelAPag955P6//N2vnjO
6qRtvWaQdfJ+odb0JwLLmZZGo7qfRlR3RjOUUh2sp1GasyfduqPSOm/VOi+d
+i+kNN+lOpNZ3Tfk/VuaUJsW5WTPt3vjOA38D/Sa2q4=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVtoz2EYx1//bfx+749ttK0wmlnmMO1wYQ4hh9oF2bhRSmZhiRxyzGSR
opSanMKFNUqbEpoLJbtwwYUwrlDIxoaZU7QRPt+e9+JTz//3vu/zPu/3Ofwn
1G1dsSXlnKuHdHjnnVsw1Lm8DOc+YedGzuVAduzcSMjh21EOTGLPW+yHw/jN
uZOwkvXJ7C2G2dhzwhmdXQJLYUji3CbOLocezk+Ei/g7B7dZfwh3sA/ir5S1
s1DC3psEd4+1W/huh7vQAVVwgP0Nigm7hP23U+ajHDsbjqQs5izsXpiFvxpo
xn4DO7G3wz/sNMWE3cj+Edgfw/558EGxwg3W2qEAexx35sMiYlscmybSRj7k
6w+sx66DAexLEKPtVc5PwS7jbKneg44d8MObNorvK3Y3FGEXQxf2BfaeDxpI
i5noWc65zaynEtNYWldDTWw+5Etv+I7dwJl9sBW2wVqoBc/eJLaYFJve2OLt
zXq7auIz9gzu2IW9EfoUPxwmV3uhArsaX8ugn5i+QDo+02KrCdVGTYjtKWvP
IC2x2FUTqo35rDXi6xg8Z/2yt1qUZtO81YRqQ3fq7lNwLd1yqFxWBj0qIE4s
h8qlaiTyprG0LuWeMvgb8rMB+pV7vhXG9ga95T3fZgb9VDvKgXKhb1qbCtfx
3QaTtZczlfCTO37BoLfc6w7d1cnak5BD5VJ36m7FO4t4C/h2iredhjHYJ6AJ
WqENctl/hruaYLy3nCl3rZxvgx445EzDdXwfFVlvyudo7ExpAlmQDY/Zv9vZ
mSrVQGS53APDw52tIebOUDOqnT74DIWRxSoNpIV6VL26g99fsYcmlhvVTJRY
j6hXuri3G4q9aXcFMr3NDM2OV6y91h78d8F9eADTvfWeely9nhfmkXq8l3PD
EqtN1YBqQTNFs0WaFbJ3gN/7UzZTNFukmbRTT6g3lDPlTjWgWsiMTOvjkO8t
JsWmnlXvSiNpJQ0j7IWJ5VI5zcNOeXtbCxRhn9b8SLeaXe1Nw76QY+U6I7FZ
JM2k3dzEfKl+fnvrKfVWbejd5tDfmhGaFdkhty+wX0J9ZLNRb/7Ge/5FlptH
xNsVW80pXumlWaKeUG+ohlXLg7G9XRpL60ne3qKZPdZbD6uXNQM1C9d48603
6q3KsXKtGaBZsCq23tZ/Rhb7/wN+V8ig
            "]], 
           
           PolygonBox[{{2249, 2248, 2112, 635, 2151}, {2344, 148, 2066, 2068, 
            2069}, {2780, 2779, 2824, 1653, 2870}, {2805, 1649, 2821, 2829, 
            2830}, {2538, 627, 2303, 2276, 2277}, {2240, 2239, 2212, 207, 
            2242}, {2546, 636, 2553, 2542, 2543}, {2543, 2542, 2545, 627, 
            2538}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9934745311419679, 0.9884510068758032, 0.5311211692079963], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmH1sV+UVx2/7u79fe+8PFuemWSDWwR8rlIpgplKMKFAGahYQXxIY5U1K
222FQuY22rElSLY/SsBtvJhMFxCcoM6QxZkSXmTCRDZQ/kEYLAgOEJhro9ui
owT2/eR8if5xcu7z3POcc57zfu+Q+YunL6pMkmR9RZIUhPdosV9wOU2S2VrP
EnxHcK0qSeYIF6pjr0nQJphSTpKn9G6Q8CKtlwnak6CF7jqPOT7TnyfJRNHf
K/orVcH7B1mS3K/1NK3vE27WXodggWC53rXAU7jVusBvhOhuFv1o4atVIadC
ut2m9bVSktQJt0pWve7xXeHVwoN1wTXCH+h+7wtOCX6chb4dwktEN0bvFwuv
EM/x3FnwWFXoNl0wopgkVcLDhK9ITn8p5P1LZ8Zq/y7JzQQj9Xy3cCKd5nJv
rVeKrkO4XXBV9E9ofVk4EV2nnnPhBX4P3Ze0Xq79/+Zhv7m2YYvtgD26RTdf
ME+wROulSfih2faDplo6dAoPEG4WXYugVfAL64NenfYdZ78mucu0P0n4Btlo
g2wyUPghrVdp/0Hhomy5XTHzumAy+mv/W+XQ5SnbrdP8upKQi0zoRtpH+GqF
97H1AOtZFl7sc5z/YRbx8Jpo3q6K+xMXP5Jdpkm3J/Pw0XHxPFkKP+EvdL2o
d3dp78M89tnrtg2w9e3277d9Zo5tOd/Ps73eXQrcVAr6os/sLYXc6ebZbL7Y
9h77cbzveD88s7Dz0izigzipEp5ZClmNglK1fSeaJul9XrZeL/yufHBEcFjw
FZ35uc6UhYfaL/hnnnVGz2rriK4N5Yi3PvHpKkWsol+bY4ScavRZ9P2DZL8p
327Pgg88UsHQYsQ+zyd99xOl2KsyzQjnButx5dChvhx35u6p7ndnOfjeUQ5a
chl68BXnVGq5Jy2jT74+LXze+BPjM/Y755A91rAjjfx8zLl73DS8Y596Qd34
WRZ8bi0Gr9Olz2UO9V3ZXyn6f8gXs/KgHWp69K723U9bT3Rb5Tgi3lqdjy22
90Ln6F+yyK23hT8RPKnnFsn5SDImc1fhgZIzhfogfMk0fcK7ShGX+HpWKdZN
1r3ouEaXY9SpNPhy9mB12KPb8ZsW4yw8WL9RijO7/cxepeNnjPAxxUWl7FAo
RNwSN5NKEd+tzgNqfGMp9j/WHR4R/o/wNwpRO6gbv6+IGgIv7lghmGH/NNh/
O7OQ97TwINFd1fNFwRnx+lDrdXnwgceJiuhD1J/x5bAR98Wu/7YO6IJvPhac
S8Ouk21bdEVn9hryqLfU73Wiq9X7IcXwE/56J4tz0E8QbHKdod5M8T7v/5SF
vgeE/yzo1/Nfs7DrZ2n4pVdn7tP6kvAdgn3iP0p4TxZ3ejaL+gX/s3nE8V77
iLuucK06Zxp0OWdfEy+XzP+fwqMFO7VfD5bsOtltVxr67HYMNbpW4cPvuYfS
Sytk00f1vlAO/+G7PwpekIwe4eeziL+ZjqUb8YXwl4UPSOZbgkOC/+VhsyvC
H1VEHN1SiL5H/aT34B/qHD56VXz3ES+ZfWTdXrd8ZD9uHdDl++J7p86159ET
2z1PtHpmIfdWuBcRr/TMJc7Hxe45S31uyRfWzT7b/YWewD2JW3Loq+XopTeV
41yHz9ztWCKm/qY7vSc4Whk9/6elqMez7UNqLzME9fnvor/mOCfeiX9iCVvx
fqRrODZFb/oDvOg99Iaby5GLE4Sfz8MXN7pvQMMaHZZbj5Huh/B81rE3pTri
kZmQ2ZB4qRUMFzzgXGMGnOS8IX8PZTE3HBR+mVgXn61Z+BNd0XO9+9qcPGIO
+5EPK60X+hEDB9zvOqzbAsdIu59n2AfE3DK/67RvyBF8NdN1ERsPcd2uEbTl
MQcuFB6RRw14QXiR44c42u4++EoWZ19KP68Hz1Dj05hBdjmXTrgnkps1pucc
fr83Dd8fcQyM85p9nodL3gDRbhHelEVsb8ziHTTo9Jss6t1zwi85L151Xsyw
Haam4R/sPs7nmGs3mudPqElp6Herdau3jKLrOvW0O415mTve4tgjX/s8uzLD
QsN8iL+JT+ZsavSnaXxD4NOzrkvUp0TyCq7112cIeig8sOfaNOoSs3qNdVht
PTb4PfV3qu3NPaf5mb0Lgk1p3I8eUlcM/dFtsPXrsYxd5o2MfvcQeg1x/1vb
GXvjb/y4zbZ4xrpssQ2RxZ3Ij08te5Pf77A8ZG02D3iRQ+jAHdfmsf9N4afz
oPt1HncZZ99dn3vw1xbzqPH9mL2IR2Tv8bfbMc8hxCN76LfTMXfBva/PfZB+
2Otn9sh18o69834PfUse304TrdsY3/OXeeA1notqnGMF60Ruv+EZBL167E/8
sdl34U7EPnMAeTjePajROVtrnti/zuvNzhfypsf8djru9lv/rzvmNuZxv17X
FM6vsy+77dcNzu1tjrN+x+9l2+GcbddrO/Wbfq35oDv6II88OebeRj6sdozR
R467/v/Kvsbnh9wf+eZJnR/Yb2Z18NqrODwlusGy3weumeiGXfmOPVMZvjnk
ennAz13uacg96j5Rq3o9Wry35YF3OD7XOGdWGa9x7Lb5u/OM+8A+6zrR8TA2
j7m7znM3c0HRNaTe88Ztwk3+1uabe5j9WevZdqBnv17bFZtPyKP28i1CXJ13
br2VhU3fzOLubdaN3nePv73GeF5tcC/tco+b5G/bxnL0kw73O3x7xPmBf5a6
11Mbj/t/wSzXWHxzthDfAvSwefRmvhv4f5CHLjuy6Nv4i3fvue/hA74fODtX
+HbPe4dF/6j5POzeyHnkHHbPQMdhtjP2HlUMv01zTjTY/hfymNOY105Zf+7y
vp/Z4/sHv+P/4e7pzOaDXHfJpYetD/ercG4S2wc9WzJjDvLsVmN9oUfnz5z3
5D99CD9Odd1FFvW6y3MKM8iLedxnax42Qk9sf9G5d8F5u9+xR87Sc8ipo7Yt
sX3Ez9h7tO0zyrbpcT0eZZtj+4WeCbHJVuvwO+H/AxSkdHg=
            "]], 
           PolygonBox[CompressedData["
1:eJwtln1M1lUUx68+DzzPvT9NqWStpuvFJaQRWBAJ+iBSUNNByUazIUIYpUNx
vU2y2rL1V+tFbesPzRSqOWzrj7KazgSXvbte16JWakW6jN7LwqTPd+f+8Rnf
3z333ufcc885l4s61t60ZqJz7mlIw7qscz0wCj/DVcG5XRj6YBP6Pe/c2ATn
prLofXQqca4537lbYSJ6J2OvYX8FdqA/YY+PYStsgzvZo5G9hrDXoosZK4Iq
5lZDOWPzsc+B1ei7oSlta7R2t7e1b8AAejdrB+Jv6Lem4sMD+HI/nIWuYE0r
51oBV6Mvh734nspzbju6HyahA8xGbw521n7okS2xvXrBoY8wdj76AvgaPZnf
vA/TIfa8ku8b8akJPs049xnMY+wYtqNQGeyMOusRbEfhA/RBbPuhBPvr3ubK
Z/m+iN/sZt56OA+dgRLtCz9h74bytMVMsXscdqArYZ1iCdNTnBeq0CvhC/b/
Bu5A/xnsfDpPmr03c55NMaaK7RP48zmxPgnLsnZGnVU+z0Uf8GY7AYPohYxd
ym/t4buf73e85cpkeNfbGXVW3UEZuoDf3MhvPwznJrZGa5VDfejLGBvHNgbF
6MOKGbRguxmKoQim4VshlEEpHGDOINyF7RZi2QVv893tTXdCPvNehT2aD4PQ
Ae2QMG8SXAt18D1rR+C2YLHTnXaha7DlYBjbl9CBbvfmo3z9N1htqEZOBZuj
ucvkF7zlLXZn4BD6N+YsZW4O/kKfYu7fcAm2mbA22N3qztegc6qhlMVcsdeZ
dfZS5pbBLm+1ojmaW6Eaiz7K1xWMfYvtO2jReeL9zYJq9KpgtaicUe4sgBkp
yynlVgOxGp5gObLX2x7aSzXSjD7s7e63sMdjwZBWT9mCboORlPmwHH0dd9yL
/w9BNfoEf49DJ/us9NZDtsY70909yxqXZzXcp14FZehSeAE9jz2uyFjNePR2
9ngJX1+EZ7z1APUC7XFhsJ43GmtAtTDCWD1nqYXhYNTG+xlFPxesd2jOSfQf
8f5038eD3WEurv8nWE9Rb1GNPhksZ5W7BfhyNjTDUlgFq2EGtulZy0Hl4rFg
taqaVW9aDB2c7VG4GJ3HnLS3nqreekNitiaoQS/Btjj2KPWqDepfseer9w95
y0X1+De99TD1MvkgX273Vjs9cI/6L7aBjO2hvZqgEX5h7NeM1ZRqawgOwo8x
HorR7+gN3t4K3YnuRjWmWtMZdJYqfK7huwsK0XMhi85AUWIxUqw+5Psj+CpY
b9QboLegB1s3vq6HNtUEY4UZ6yklifU8xfMH8m+ctU8F08rJ1mA1oFpQziv3
98mvWG+qleeD5ZreqHuD5axydyNcn1jNN8fzqrYTxh7Jt563k++XMxZL+djK
3qdjftXBf8GQXsS8MeVaYm+R9jgH/SBrljvrcafjm6K3pTT2QsVIsdKZZ6Pn
J7aXYqrYqoe2xB5aHHuGekcla6+BBnS9txpULWpMNvUk9aZt3mpJPWC/tzdG
b41itC/2OPW6KXqb1Veh19mbqbczBW3OznAmYz1evV41PCuxNVqrnlURe0Bn
7Lnqvbpz3b18bIg1VBBzXLm+MLG7UI2oVqYl9tboTdXbqp6q3toYczdkLVfk
YzZrOaxcbo9vQ21iuaieot6SS6y2lsAC+Z6x/zV0pnH0nMRsytlydF1ib7l6
XH1ib4zeGtWQaul/ehAkpQ==
            "]], 
           
           PolygonBox[{{2052, 121, 2058, 2387, 2388}, {2472, 447, 2473, 2470, 
            2471}, {2243, 2242, 2654, 995, 2180}, {2471, 2470, 2467, 440, 
            2390}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9792130612234291, 0.9415429158806079, 0.37374709744737195`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
7stc+y8iLG5U
            "]], 
           PolygonBox[CompressedData["
1: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
YqsdWw3czv/7EnsW2don9o2qb9WJIRf+Bwf7cIo=
            "]], 
           
           PolygonBox[{{2481, 2480, 2476, 449, 2165}, {2658, 2657, 2784, 1556,
             2783}, {2676, 1106, 2626, 2482, 2483}, {2206, 2205, 2231, 203, 
            2225}, {2426, 97, 2046, 2049, 2050}, {2651, 987, 2641, 2657, 
            2658}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9519784981284017, 0.847317777835651, 0.28021897626583236`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
2ZeWcT5nsl+D0Me6/B+MZY9E
            "]], 
           PolygonBox[CompressedData["
1:eJwtlllsVVUUhk/be3t69hUMGkVEgUbkAUMglDhhRFEIiBSpYlFEK5gSDNJY
QJShAtoym+CMSk2MT2orLWqZDAgIVcBCaYtDsQhRHKIpaoKakPj9/Pfhy/3P
Htdea+21b+GMipK5uVEU1UIKagqiqBouS6LocjgeR9HMnCgqg0/Rk0IUHc2L
ooMwFv0aYxbTtwQ2oktoa8vzmHuC52juJay9Ez0heG4r3It+Hyako+gkm9ei
R7L3zfAvY/+DKtYcx/wx8AXfn0Mf1uoNB9DV9Jfn2EbZ2sL3SA50C1QktlH7
dTN+BN9NjOmBzsAn6L2wB4bTVwRPwvWsNRqeSWyzbO8F29BPsd6j2DoNlqKX
wyT2epzv59CLYWq2fwn66WCttkXonqzZA+pYqx6WoSezVzHkcu7VfFegS+E3
+gdh6Jn8KPoJrkFPY432PPt4KvpWxv+DbefgRvRZ1uiGl+EVOEFbca5t/B69
Hp5l7RXwAvrrxL6Sz46hB0O+4gUPJI6BYnEtehA8xpozC3wGnWWF/MbcYXAE
vZy+ZfA6bIQS2i5irURnRM+BIejBMAVdxZilUAnzsjbL9jqo11qccUbKPh+D
HsuciLnn+elP/6WJ15bNvfluhzaohbfhbubswVfNMD7Yh/LlLzAQ3RF7Ldko
W/vR9iP5+DN8xfgdMAp9G+xC/6B45dqnJ3V29hhe4BxSLl2XONd+hyHojqx/
R8E32TuluzWFte6Hlti+7qccpn0z35h2waezFI8Cx/ZvyOd7a+xc7AnbY++h
vZQDyoXvEu8l+xT7+qwv27K+KeR8xzhLB/RHNzDmAHs3wxb0UNqmqo+1izL2
oXzZAI1QHOxL3Snd5cZsn2Ku2E+kbW+efS7fr01cG5Rz69B7aatn/VmwDf0e
1BDbCr53Bp9RZ1WMz2DDONoOp23zueAcVC5OVm7B7egrGDsQytE3wMXovtBL
OcSch1i/lPkfoltZszDHOahcHJbxWXXHRqCvhq60c+AqdCN9A5RrcAh9Gk7F
jnlR1gbZ8idtf8WOiWKjGrMDvYU9y1hrOjSiG2hjeMRntC92zVHtUc1T7Zur
fMlxzVPt2xxsu2LSgH4n9lzlyLvog7R9mbaPBmRsg2zRHdVdXZS4tjwIB2Pb
IFt0p1ag76K/mr6V8FJipNfABvRHjClP+ww6y4u01eR4juaqRqpWFsHDiWu4
ankXbEI3Jc4t5dho9AfBd+kOOMX3dr4XppwDyoUu2h7J9R3TXVONVq1WDBQL
1RjVmqFwVPWIOZ1px6w7OKeUW7K5Cb0+2Jb7yMc3gu+s7sZE6ER/m70vuqOq
hauDc1F3XndfczS3FDaiTwS/XarBXcE1qzJbc1V7d7HGH8w9C30w/Ihiztgm
aJG/YV/aMVPsZmv/HMc8Zv5+2jalfUeaNVZjmPsq3zXBb57ePuXQfr2HwX2a
cwC9IPFbqTflvMZmfNflo77oN4PPMh3eQn8cO3ayYSFz5wfHS+9VpXIr9ls0
B1apvifWs+F59GHGdKd9Rp11Sfa9052rkr9ij12gnFJuJdZ6s2sSv4naS3tu
1X+JxLmqN1Bv4Vr656ecI3eidysf8+wT+aYDtqN3w/Hgmq3arRgcCs4x5Zr+
Y9TxvUYxS3nNdehV8ETKbeqrDn7L1bYy+I3WW603Sm/VZ8G+K4PTqkUZvyUX
Yqq3JrhPNsrWdIHfuptgnt7bYFtVI69UbUpcq1TDOtmnNThXdKZjwW+C3gbV
NNU2raG19B+lDN0enGuKQRv619i1UDVuvP6/Jc515bhy/X9GOVAK
            "]], 
           
           PolygonBox[{{2201, 2200, 2210, 201, 2139}, {2343, 247, 2365, 2018, 
            2019}, {2486, 455, 2479, 2484, 2485}, {2009, 2008, 1977, 17, 
            1976}, {2333, 201, 2650, 2181, 2182}, {2646, 2645, 2649, 980, 
            2631}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9150748619531548, 0.7010071578085528, 0.25052544435955476`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNUz1Mk1EUfWib9t2JwQHdWHQwTjiYEAwhiosJpAOjg4EBf4qToSQmghSh
yARJo6KbDAoL/oDURBD8H9xMCoGhLXaA4ODm5Lk5h8Th5Lzvfvedd9899zVf
Hchkj4QQrgBHgTMxhH3wafBLC6EvEcIr8GQyhGfAzSTXBSAPzAHXgBywirxp
8AfwjPI9pwKty+B5437PHUwyZzTJPZ43Agw769xFY7ygf86uU01Q59ZhLcjL
IjYO7gbqqD8D7k2HUMb6Twp7Is9aQ/yJUeMp+D5wHeu8x5C3h/xTkdoF6S+q
Hu/HefXH+3QWqGHdifglYAvrHvAO4u1o6ja4ZNSaAM8a7/cY/BkoYv3RWIfX
88LYM+9LUWfn1cc5cfG/b+/je+mXtDcnj86pTq93TL5sGPtYSbCOO/huQ523
wV+Mmp/AQ8D3BngEPob9m9A5AV4yev0WfMHo4ST4kVFzCvxQ68PYiPzql+c5
3WFGvl90n/D/rvRuqP6C9vn+d8b4c2OvveddxvtMa+5+IVYBdsVV4AC4J/1h
+eN5m+Kqco9HzklTZHxXOSuYh0bwcopavwPnw/+XleOadenVpFlX7oG+a/r2
9d8Uz2xNc+6y6s1rnP0VPX8T2Zu83saCceb9DbVEaq5Doxzp3U/5vKczliO9
G1JP6jp3WzO5FXkfv1c5xTkY1XmZNO92MtLnfvlVUr73YwD/vkH/R6Qf7ssK
uEPxpcj58P3r4Ad6m/5GW9Ks09/ZP62RtP0=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkztI1lEYxk+ifP9zBlui8FLSUkNtNggSiBQtQfGtOUUNlZfAiJayT83u
U1jYhZpaqi/QUpEsKroPLRmY0KBFQ1FYm1O/h+cMP3i+/znnfZ/38m3c31fu
rQkhtEMtnEsh9CKOwFn0SzhcF8JdeIveEENYDyMF5/A6+ewavEFPcfZ+VQgf
YBrdAgvE/QJr0HPRZ7rTh26GphxTsTfBd+4uwkophH8wH/ytTL4FzjswvB3m
0WeSvR6EYfRTuICXo/AM/Zk3c3Ab7sDH7O8dfEJf5M4J7h6CSd2Pji2P8no+
OVYPzKKfwzC6AjfRm7nzE2+/oA29h2/f0D9gL/oqOUehCg/hcfarfNPoV8m9
uwIj6BfJWjmWot9Ucw2qpTG6l+pJA/ov35ZzDuWq8P5ArXv0lfNyshfNYJdq
Ta5NNZ5EP0runTzJ2wx017knO9DHk+8q3gB6gBynoB+OFa5BtWhHptD3YIlY
u/n9ILnn6v04TEB74dn+hlb83Uju5SJvxtCT0bPRjDrR17k/Bvugq/CMlE87
ekn7WXIszaBVPeZ3tWSP8rolejZ/YCv6cnIuebyFvp/sVTuj3VGNqlU93Jlc
Y3/usXqtHdAuqEdP0KuJWR+dU7m7stemvNv6j+i/sha9LroH6kUFBgt7kjft
zLboHdY8lH8IfTrPU98Gk99Uck/Um/8NmI0c
            "]], 
           
           PolygonBox[{{2328, 217, 2148, 2318, 2319}, {2327, 2326, 2646, 219, 
            2335}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8811496904591638, 0.5532103272176427, 0.22254072724250634`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2324, 222, 2335}, {2327, 222, 2183}, {1967, 220, 
            2319}, {2140, 200, 2202}, {199, 200, 221}, {2329, 221, 2330}, {
            199, 221, 220}, {2335, 222, 2327}, {2183, 222, 2334}, {2164, 199, 
            2175}, {2319, 220, 2328}}], 
           
           PolygonBox[{{2184, 200, 199, 2185}, {2291, 2290, 2198, 2199}, {
            2209, 2208, 2227, 2228}, {2332, 221, 200, 2140}, {2199, 2198, 
            2223, 2224}, {2228, 2227, 2178, 2179}, {2330, 221, 222, 2324}, {
            2334, 222, 221, 2332}, {2263, 2262, 2208, 2209}, {2175, 199, 220, 
            1967}, {2224, 2223, 2262, 2263}, {2328, 220, 221, 2329}}], 
           
           PolygonBox[{{2185, 199, 2164, 2290, 2291}, {2179, 2178, 2202, 200, 
            2184}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{2263, 205, 2224}, {2184, 202, 2179}, {2185, 202, 
            2184}, {2224, 205, 2199}, {2291, 202, 2185}, {2209, 205, 2263}, {
            2228, 205, 2209}}], 
           
           PolygonBox[{{2179, 202, 205, 2228}, {2199, 205, 202, 
            2291}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2185, 2184, 2179, 2228, 2209, 2263, 2224, 2199, 2291, 
            2185}]}, "42"], Annotation[#, 42, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2332, 2140, 2202, 2178, 2227, 2208, 2262, 2223, 2198, 
            2290, 2164, 2175, 1967, 2319, 2328, 2329, 2330, 2324, 2335, 2327, 
            2183, 2334, 2332}]}, "28"], Annotation[#, 28, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{1979, 1978, 1976, 2009}], 
           
           LineBox[{2516, 2511, 2415, 2517, 2518, 2521, 2523, 2525, 2526, 
            2689, 2691, 2692, 2693, 2695, 2696, 2698, 2700, 2742, 2699, 2628, 
            2746, 2730, 2748, 2749, 2697, 2747, 2751, 2750, 2732, 2530, 2733, 
            2731, 2718, 2717, 2701, 2714, 2713, 2715, 2716, 2753, 2531, 2754, 
            2752, 2756, 2694, 2757, 2759, 2758, 2760, 2755, 2745, 2743, 2744, 
            2741, 2740, 2739, 2738, 2690, 2688, 2629, 2687, 2678, 2685, 2680, 
            2682, 2488, 2487, 2370, 2486, 2485}], 
           
           LineBox[{2107, 2355, 1987, 2099, 2019, 2343, 2360, 2366, 2349, 
            2347, 2348, 2356, 2630, 2639, 2640, 2642, 2631, 2646, 2326, 2182, 
            2333, 2331, 2139, 2201, 2177, 2226, 2207, 2261, 2222, 2197, 2289, 
            2163, 2174, 1966, 2318, 2148, 2035, 2130, 2342, 2042, 2107}]}, 
          "14"], Annotation[#, 14, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{1975, 1974, 1970, 1996}], 
           
           LineBox[{1989, 1991, 1990, 1971, 1969, 1988, 1957, 1955, 1954, 
            1956, 2514, 1968, 2407, 2434, 2512, 2513}], 
           LineBox[{2447, 2446, 2445, 2444, 2443, 2456, 2458, 2457, 2455}], 
           LineBox[{2453, 2454, 2449, 2451, 2378, 2450, 2452, 2493}], 
           LineBox[CompressedData["
1:eJwV0E1I02EcB/DHINcLHSJCsnKNsoOXwgJB6OBFXKaQImhFiAtBCKOpxJqK
kr3ouUMnETuXSXYIFKGbrvIl2xYoghfBLsNLeAj87PDh+/39nufPxhPretLS
WxJCmGLueAgzDBwLYVZ+pv9ECElSpBlkmI/M8IlZrp0M4QbXuclVLnOFJeeV
clneJsMlc4P8R0yPUsZ5HtkVuKhfoIKf5u8s+k/nzGv6bzb4wSorrPOLLDny
lPOHJu4Qp5lGWkmwxTZd3KedDto46zdfepN7+ns5zTtGiu/EJBt84C0FkgwV
d5EQTvk+oe/rd2Wl+UCv1av1b3q1viNvmav0UrlrrpdRc1Zv0Zs5Q5ldlexg
xVlC1nDa/oHctKuT3ezpcbkuH8s2jrrXJzt5SoqHfHHnmewh4k6vHGbJfkD+
lyPyiLPnMmN+IdOM89e8zBt9lDG2zBPyNa+Kb0nOboF5vpLnENuAVwo=
            "]], 
           LineBox[{2515, 2520, 2522, 2519}], 
           LineBox[{2524, 2528, 2529, 2527}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2474, 2478, 2477}], 
           LineBox[CompressedData["
1:eJwl0klIVVEcwOEjWZq6SBuQFoIRlFmBkZohpTn0LAMNqWgge/DKeSxrYbRp
XZbtykqhVHIhEUgElYUNFkKEqyDShdAq2gVJ+j1afPz+59yzONx7s6PtR9sS
QgivKEoOIW91CJNJap7TYusc80pdsK7QLOtZc635CBlssJejJ5jxLKoFrLF/
Sr/ZK9EYP80R/aLNWkeic116lg6ucIZnzvRoA6ucadWrfLB/URf1miZ49s+8
Qpf0L8FclBJCIQU8d26P7qWMC5ynkRhNNNBMPq200EY7ndzkFh3008dtdnOH
G8zE78c0H/nMJ6Z4wzvex98zrznpnn36goj5nr5kgLvc5wG9PGSQIR5xjGFG
eMIY4zzlgLt0c4nLPGaEYUbZkuqbsY0d7CSPXLayi3y2s4/9lHCIw2yimlI2
EqGKYio5SDkVZFLGetaRTgZD7pGqa0khkMa8/e/84By11HGcek5z3bt6yyQT
DPCVMfr5RSe98T3/Q5p3EjX/NtfoZus/Sf//+2U0VV2D
            "]]}, 
          RowBox[{"-", "14"}]], Annotation[#, -14, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0bsrxWEYwPH3cOpwjuvApshy5E6uJykpiyIGpRCZDJgs/gvFpChMdrPs
SjLJwEByOe7360eGT9/nfX7v9P7KJmYGpiMhhDlas0Koyw5hO6bmY005J81R
PXXu1hLnA3O/uZdCiuySOsSub+PaRL79sB7adeok5+Ye3dMpHSTuXhY5JMil
MR5CA3XUsutejdZTRTUrlLLKGhWsU8kGV5xxSJoLLnngjkfOiSRCyCSDVtq4
sf/mnVfueeaNT774oMPdFMV00U42LcS4dqdZj7RA83gyR/VHT1hkhCXGGGXH
G2yzxTL7bLJAmlnm/3beMeFtxs235j4td36J/f/TX2wePtk=
            "]], 
           LineBox[{2249, 2277, 2538, 2543, 2546, 2151, 2249}], 
           LineBox[{2468, 2467, 2470, 2473, 2623, 2625, 2468}], 
           LineBox[{2624, 2492, 2619, 2621, 2622, 2620, 2624}], 
           LineBox[{2788, 2789, 2721, 2793, 2791, 2788}]}, 
          RowBox[{"-", "28"}]], Annotation[#, -28, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0L9KgmEUB+BTDp9JfyRMsETKUqOlMXAKGhyKBK8gvIDcvQvn1qb2lhbX
1vACHHRxkDYFl3xeGh5+55zvvC+830V/0HvdiYgn7vIRt3sR40yqp7Ktb6lz
cq5/kFX9RN1VP1KkZHZMhXNOqXNTiLimxSENdrmiyRmXfLmjLk+opV1nq3Jj
XpYLmcl9ihxRYkaOA/LpPufWdjuyyT3fzPlL6du7HPPJGz98MGLJgGGaeWPB
/ov6V/2c3qRfZf//agtsdR+1
            "]], 
           LineBox[{2542, 2553, 2712, 2500, 2545, 2542}], 
           LineBox[{2824, 2822, 2821, 2829, 2831, 2779, 2824}]}, 
          RowBox[{"-", "42"}]], Annotation[#, -42, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2350, 2102, 2037, 2337, 2125, 2030, 2143, 2313, 1961, 
            2169, 2158, 2284, 2192, 2217, 2256, 2271, 2238, 2536, 2247, 2111, 
            2085, 2118, 2550, 2558, 2561, 2571, 2566, 2579, 2540, 2584, 2585, 
            2589, 2072, 2081, 2591, 2593, 2101, 2092, 2100, 2091, 2057, 2361, 
            2014, 2094, 1982, 2350}], 
           LineBox[{2552, 2541, 2544, 2499, 2711, 2552}]}, 
          RowBox[{"-", "56"}]], Annotation[#, -56, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2124, 2336, 2036, 2121, 2067, 2131, 2113, 2134, 2583, 
            2539, 2578, 2565, 2570, 2560, 2557, 2549, 2117, 2084, 2110, 2246, 
            2535, 2237, 2270, 2255, 2216, 2191, 2283, 2157, 2168, 1960, 2312, 
            2142, 2029, 2124}]}, 
          RowBox[{"-", "70"}]], Annotation[#, -70, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2122, 2123, 2028, 2141, 2311, 1959, 2167, 2156, 2282, 
            2190, 2215, 2254, 2269, 2236, 2534, 2245, 2109, 2083, 2116, 2548, 
            2556, 2559, 2569, 2564, 2577, 2133, 2115, 2132, 2114, 2122}]}, 
          RowBox[{"-", "84"}]], Annotation[#, -84, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2136, 2150, 2135, 2149, 1958, 2166, 2155, 2281, 2189, 
            2214, 2253, 2268, 2235, 2533, 2244, 2108, 2304, 2306, 2275, 2547, 
            2555, 2137, 2136}]}, 
          RowBox[{"-", "98"}]], Annotation[#, -98, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{2274, 2234, 2267, 2252, 2213, 2188, 2280, 2154, 2294, 
            2297, 2302, 2264, 2305, 2093, 2274}]}, 
          RowBox[{"-", "112"}]], Annotation[#, -112, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2273, 2233, 2266, 2251, 2299, 2273}], 
           LineBox[{2296, 2301, 2187, 2279, 2153, 2293, 2296}]}, 
          RowBox[{"-", "126"}]], Annotation[#, -126, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{2232, 2272, 2298, 2250, 2265, 2232}], 
           LineBox[{2300, 2295, 2292, 2152, 2278, 2186, 2300}]}, 
          RowBox[{"-", "140"}]], 
         Annotation[#, -140, "Tooltip"]& ], {}, {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
B8lzIHHQsF1cqRyGokXeK4Sq8D/keqqT
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -96.11270952905429}, {
                    Rational[
                    15, 2], -96.11270952905429}}, {{-7.5, \
-96.11270952905429}, {7.5, -96.11270952905429}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -82.73820863439911}, {
                    Rational[
                    15, 2], -82.73820863439911}}, {{-7.5, \
-82.73820863439911}, {7.5, -82.73820863439911}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -69.36370773974394}, {
                    Rational[
                    15, 2], -69.36370773974394}}, {{-7.5, \
-69.36370773974394}, {7.5, -69.36370773974394}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -55.989206845088766`}, {
                    Rational[
                    15, 2], -55.989206845088766`}}, {{-7.5, \
-55.989206845088766`}, {7.5, -55.989206845088766`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -42.614705950433596`}, {
                    Rational[
                    15, 2], -42.614705950433596`}}, {{-7.5, \
-42.614705950433596`}, {7.5, -42.614705950433596`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -29.240205055778425`}, {
                    Rational[
                    15, 2], -29.240205055778425`}}, {{-7.5, \
-29.240205055778425`}, {7.5, -29.240205055778425`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -15.865704161123254`}, {
                    Rational[
                    15, 2], -15.865704161123254`}}, {{-7.5, \
-15.865704161123254`}, {7.5, -15.865704161123254`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -2.4912032664680765`}, {
                    Rational[
                    15, 2], -2.4912032664680765`}}, {{-7.5, \
-2.4912032664680765`}, {7.5, -2.4912032664680765`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.883297628187094`}, {
                    Rational[15, 2], 10.883297628187094`}}, {{-7.5, 
                  10.883297628187094`}, {7.5, 10.883297628187094`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 24.25779852284227}, {
                    Rational[15, 2], 24.25779852284227}}, {{-7.5, 
                  24.25779852284227}, {7.5, 24.25779852284227}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.63229941749744}, {
                    Rational[15, 2], 37.63229941749744}}, {{-7.5, 
                  37.63229941749744}, {7.5, 37.63229941749744}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.00680031215261}, {
                    Rational[15, 2], 51.00680031215261}}, {{-7.5, 
                  51.00680031215261}, {7.5, 51.00680031215261}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 64.38130120680779}, {
                    Rational[15, 2], 64.38130120680779}}, {{-7.5, 
                  64.38130120680779}, {7.5, 64.38130120680779}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 77.75580210146296}, {
                    Rational[15, 2], 77.75580210146296}}, {{-7.5, 
                  77.75580210146296}, {7.5, 77.75580210146296}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 91.13030299611813}, {
                    Rational[15, 2], 91.13030299611813}}, {{-7.5, 
                  91.13030299611813}, {7.5, 91.13030299611813}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -92.29142355915279}, 
                    Offset[{4., 0}, {7.5, -92.29142355915279}]}, {{
                    7.5, -44.52534893538433}, 
                    Offset[{4., 0}, {7.5, -44.52534893538433}]}, {{7.5, 
                    3.2407256883841398`}, 
                    Offset[{4., 0}, {7.5, 3.2407256883841398`}]}, {{7.5, 
                    51.006800312152606`}, 
                    Offset[{4., 0}, {7.5, 51.006800312152606`}]}, {{7.5, 
                    98.77287493592108}, 
                    Offset[{4., 0}, {7.5, 98.77287493592108}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -111.39785340866018`}, 
                    Offset[{2.5, 0.}, {7.5, -111.39785340866018`}]}, {{
                    7.5, -101.84463848390648`}, 
                    Offset[{2.5, 0.}, {7.5, -101.84463848390648`}]}, {{
                    7.5, -82.7382086343991}, 
                    Offset[{2.5, 0.}, {7.5, -82.7382086343991}]}, {{
                    7.5, -73.18499370964541}, 
                    Offset[{2.5, 0.}, {7.5, -73.18499370964541}]}, {{
                    7.5, -63.631778784891715`}, 
                    Offset[{2.5, 0.}, {7.5, -63.631778784891715`}]}, {{
                    7.5, -54.078563860138026`}, 
                    Offset[{2.5, 0.}, {7.5, -54.078563860138026`}]}, {{
                    7.5, -34.97213401063063}, 
                    Offset[{2.5, 0.}, {7.5, -34.97213401063063}]}, {{
                    7.5, -25.418919085876944`}, 
                    Offset[{2.5, 0.}, {7.5, -25.418919085876944`}]}, {{
                    7.5, -15.865704161123249`}, 
                    Offset[{2.5, 0.}, {7.5, -15.865704161123249`}]}, {{
                    7.5, -6.312489236369554}, 
                    Offset[{2.5, 0.}, {7.5, -6.312489236369554}]}, {{7.5, 
                    12.793940613137833`}, 
                    Offset[{2.5, 0.}, {7.5, 12.793940613137833`}]}, {{7.5, 
                    22.347155537891528`}, 
                    Offset[{2.5, 0.}, {7.5, 22.347155537891528`}]}, {{7.5, 
                    31.90037046264522}, 
                    Offset[{2.5, 0.}, {7.5, 31.90037046264522}]}, {{7.5, 
                    41.45358538739892}, 
                    Offset[{2.5, 0.}, {7.5, 41.45358538739892}]}, {{7.5, 
                    60.5600152369063}, 
                    Offset[{2.5, 0.}, {7.5, 60.5600152369063}]}, {{7.5, 
                    70.11323016166}, 
                    Offset[{2.5, 0.}, {7.5, 70.11323016166}]}, {{7.5, 
                    79.6664450864137}, 
                    Offset[{2.5, 0.}, {7.5, 79.6664450864137}]}, {{7.5, 
                    89.21966001116739}, 
                    Offset[{2.5, 0.}, {7.5, 89.21966001116739}]}, {{7.5, 
                    108.32608986067478`}, 
                    Offset[{2.5, 0.}, {7.5, 108.32608986067478`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "150"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -92.29142355915279}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "100"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -44.52534893538433}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 3.2407256883841398`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 51.006800312152606`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 98.77287493592108}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "171.15369182000083`"}], ",", 
                   "64.36911570837798`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "154.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "140.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "126.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "112.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "98.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "84.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "70.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "56.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "42.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "28.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "14.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"14.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"28.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"42.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693265476128682*^9, 3.693265557108314*^9, 
  3.693265712735215*^9, 3.693265760000919*^9, 3.693265820667389*^9, 
  3.693265922901236*^9, 3.693266501030303*^9, 3.6932670688847823`*^9, 
  3.693267380064581*^9, 3.693267463833372*^9, 3.693267562890038*^9, 
  3.6932698520849724`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6932655903512154`*^9, 3.6932655931193733`*^9}, {
  3.6932656513277025`*^9, 3.693265665895536*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", "sol", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "sol", "]"}]}], "Input",
 CellChangeTimes->{{3.693266438786743*^9, 3.6932664409858685`*^9}, {
  3.693266529784948*^9, 3.6932665322650895`*^9}, {3.693266600232977*^9, 
  3.6932666023360977`*^9}, {3.693267060677313*^9, 3.693267064012504*^9}}],

Cell[BoxData["0.000023837931733382026`"], "Output",
 CellChangeTimes->{3.693271633049838*^9}],

Cell[BoxData[
 RowBox[{"-", "0.0000145160143557015`"}]], "Output",
 CellChangeTimes->{3.693271633054838*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6932708285748243`*^9, 3.6932708392584352`*^9}}],

Cell[BoxData["77.41235372703491`"], "Output",
 CellChangeTimes->{3.693270839632457*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"topol", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Import", "[", 
          RowBox[{
          "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\lshapeels2.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], 
       "]"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodesAll", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
lshapenodes2.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"nnodes", "=", 
    RowBox[{"pack", "@", 
     RowBox[{"N", "[", 
      RowBox[{"nnodesAll", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"allcoords", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"nnodes", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"topol", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}],
   FontWeight->"Bold"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Bold"], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"edges", " ", "are", " ", "straight"}], "*)"}],
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"meshVis1", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FaceForm", "[", "]"}], ",", 
       RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
       RowBox[{"GraphicsComplex", "[", 
        RowBox[{"nnodes", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"topol", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
           "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nodeVis", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MapIndexed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"#2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
         "nnodes"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVis1", ",", "nodeVis", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{"1", "000"}]], "}"}]}]}], "]"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"order", "=", "2"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"forcing", "=", "0."}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"young", " ", "=", 
    RowBox[{"3", " ", 
     RowBox[{"10", "^", "7"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"KN", "/", "m2"}], "*)"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"nu", "=", "0.3"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mu", "=", 
    RowBox[{"young", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"lambda", "=", 
    RowBox[{"young", " ", 
     RowBox[{"nu", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "nu"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"Assemble", "[", 
     RowBox[{"allcoords", ",", "topol", ",", "order", ",", "forcing"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "637", ",", "1634", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "2843", ",", "1634", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"KE", ",", "FE"}], "}"}], "=", 
    RowBox[{"ContributeLineDirichlet", "[", 
     RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "2843", ",", "3035", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    StyleBox[
     RowBox[{"tol", "=", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"radius", "=", "0."}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"ydir", "=", "2"}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"coordy", "=", "8"}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"], "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
      RowBox[{"ComputeBoundaryTopol", "[", 
       RowBox[{
       "ydir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",", 
        "order"}], "]"}]}],
     FontWeight->"Bold"], 
    StyleBox[";",
     FontWeight->"Bold"]}], 
   StyleBox[
    StyleBox[
     RowBox[{"*", ")"}]],
    FontWeight->"Bold"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecids", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"858", ",", "891", ",", "926"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"926", ",", "960", ",", "1001"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1001", ",", "1049", ",", "1106"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1106", ",", "1174", ",", "1269"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1269", ",", "1450", ",", "1856"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1856", ",", "1988", ",", "2075"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2075", ",", "2140", ",", "2196"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2196", ",", "2246", ",", "2297"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2297", ",", "2339", ",", "2394"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2394", ",", "2445", ",", "2500"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["newnodes",
    FontWeight->"Bold"], 
   StyleBox["=",
    FontWeight->"Bold"], 
   RowBox[{
    StyleBox["{",
     FontWeight->"Bold"], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.15`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.45`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.75`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.05`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.35`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.65`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.95`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.25`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.55`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.85`", ",", "8.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "8.`"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"po", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"po", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "c"}], ")"}]}]}], "]"}]}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"FE", "=", 
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
     "]"}]}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"FE", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], "]"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"KE", ",", "FE", ",", 
       RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"scale", "=", "7500"}], ";"}],
  FontWeight->"Bold"], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"deformed", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
       RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}],
   FontWeight->"Bold"], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"tabdeformed", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"deformed", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"deformed", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], 
      "]"}]}], ";"}],
   FontWeight->"Bold"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"meshVisDef", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"{", 
          RowBox[{"LightRed", ",", 
           RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
        RowBox[{"GraphicsComplex", "[", 
         RowBox[{"tabdeformed", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"topol", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}],
   FontWeight->"Bold"], 
  StyleBox["\[IndentingNewLine]",
   FontWeight->"Bold"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Show", "[", 
   RowBox[{"meshVisDef", ",", "meshVis1", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", "1000", "}"}]}]}], "]"}],
  FontWeight->"Bold"]}], "Input",
 CellChangeTimes->{{3.693256934816312*^9, 3.693256978973837*^9}, {
   3.693257094673455*^9, 3.693257131757576*^9}, {3.693257432241763*^9, 
   3.6932575150254974`*^9}, {3.693257589244743*^9, 3.693257591344863*^9}, {
   3.69325762188861*^9, 3.6932576765847387`*^9}, {3.6932580232925687`*^9, 
   3.6932580292049074`*^9}, {3.6932581567031994`*^9, 3.693258197204516*^9}, {
   3.693265230556636*^9, 3.69326523989117*^9}, {3.6932652913641143`*^9, 
   3.6932653145184383`*^9}, {3.6932653445571566`*^9, 3.6932653464202633`*^9}, 
   3.6932653814782686`*^9, {3.693265875432521*^9, 3.693265880329801*^9}, 
   3.6932664583248606`*^9, 3.6932669079385767`*^9, {3.693267010658452*^9, 
   3.693267013296603*^9}, 3.693267118785637*^9, 3.69326718352934*^9, {
   3.6932674177667375`*^9, 3.6932674255111804`*^9}, 3.6932675242938304`*^9, {
   3.6932688548069315`*^9, 3.6932688580671177`*^9}, {3.6932688918930526`*^9, 
   3.6932689805961266`*^9}, {3.6932690492610536`*^9, 3.693269067765112*^9}, 
   3.6932691817316303`*^9, {3.693269557009095*^9, 3.693269557856144*^9}, 
   3.6932696384087505`*^9, {3.6932697185073323`*^9, 3.6932697958367553`*^9}, {
   3.693270288449931*^9, 3.6932702896970024`*^9}, {3.6932704257217827`*^9, 
   3.693270428981969*^9}, 3.6932704894504275`*^9, {3.6932705306317835`*^9, 
   3.6932705618235674`*^9}, {3.6932706041359873`*^9, 
   3.6932706095272956`*^9}, {3.693270645584358*^9, 3.6932706551429048`*^9}, 
   3.6932707899906178`*^9, {3.693270852069168*^9, 3.6932708556233716`*^9}, {
   3.6932709367910137`*^9, 3.6932709382860994`*^9}, {3.6932712787565737`*^9, 
   3.693271279723629*^9}, {3.693271421199721*^9, 3.6932714215437403`*^9}, 
   3.693271637897115*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
/D++PWwg
     "], PolygonBox[CompressedData["
1:eJxNmntwVdUVxu9J7s2956Yq8hAoQtQAgqK8RCY8RLChAawBQaWg4SUCDUQy
E2LaahmRlCCEsYrykBRiEA3MkELEYEFEQIVBrOiARhGwBk2LBG3FihTa9bl+
jvyxON/57X3OuWefvde3NnD15AfvLEiJRCIH7Y+oHQOLmEVokWbR2fgjFo9a
XJ/ibc0sWtHnUOB91PZR4G3X6Dr6LA68j9qeCrytn8VA+owIvI/acgNv+7XF
ePo0C7yP2loE3vawxVz6fEAftX1M2zqL9fRZR5+PYV8kI5F26ZFIf4t0iy1J
Z9If2nFe0pl0lcVQmHShxc9g0v0sXgudSUcsikNn0lvteH3oTLrQ4lTCmXQP
i20JZ9Lf2vHJhDPpPRYzYdLLLQbDpGdbtIdJ/9Liv3Fn0p0tPok7k07TvePO
pBvs+GzcmfQOi3kw6dUWv4FJL7C4HSY926InTHqMRTOYdH+Lr9OcSbezeD/N
mfR3dnwtzZn0hxYbYdK7LVbApDdbLIZJr7H4A0y63GIWTPoRi5EWky1GWPRD
z6JtmkVf+qgt06I9TDph8b+YM+km0w0xZ9KHLf4Gk95l8QpMeoNFBUx6iUUp
TLrIogAmfZ/FXTDpbIvBMOnuFtfBpNtZtIRJX7AF/H3UmXSDxTGY9D6LN2HS
myxqYNLLLJbCpH9rUQKTHmFxL0w6y2IQTLqbRSeY9KUWUZj0l6mRSGOqM+n9
Fu/ApKst/gKTftziTzDpWRaFMOlsiztg0hkW3WHS58hbiy36kqOa0Udtn9D2
jMUQ+nxDH7Vtp22DRR59PqKP2lbQttPiIfrspM8KWHPyqFLCFRYdI86ku1rc
ApO+1SIPJj3JohQm/UeLzTDpl5TPYNInLDICZ9IdTE8MnEmPt1gLk66y+Bom
fdoiO8WZ9FDTq1KcSa+2+BQm/ZnFz1OdSV9telyqM+kJFh8rr1ocsPjA4i0b
iD0W4yzyQm87aLGLPm+H3kdt00Jve9Oilj6HQu+jtjmht9VZrKHPZ6H3Udu8
0NvWWiykz9eh91Hb0tDbyi0K6BMkvY/aqkNvK7bIpU/LpPdR287Q2+616Emf
Lknvo7bjobcNsLiUPrckvY/avg+97WqLxqT3uSfpfdTWKultF+y4P+l9Zie9
j9p6Jb3t7xbr6LOIPmobSdtuizL6PE8fteXT9jxafeSL4yxuwB//zDfVt3zB
4l2+o77V6+n+Hc+al5xP+DfTtYUWd3CPf6T6PXTtaYs30v0eunZzul+71GIl
99C1iy1mcY87o34PXTvO9Mvpfg9duzrdr21n0ZF76NoqizLuIf0yfcXORP2e
ulcQ82tvNS+6K+73kD5Dm9hkfGIUHjIN75hvMRMtr1kOK8eLNsHW4FV7YZvx
siOw3XjdN7AP8cIWcWff4ZW9487a4aV3wvrjtYWwMXjxYthsvLoKtgAv3wpb
jdfXw3ZQC5yDNVArZCacpVFXDIV1ptbIg/2SWmQRbDa1yi7YcmqZM7A91Dpd
Q2ffUgvlh84+pDbTXPpv0ued8kANcyikzswgp+4iD6yiTxW13A/XJr2v6s7u
XDONXKO5lxr6vHqda1cybzaj5zOHVqOnp/tvVS23id98A/M2k987i2vUN4e2
WWj1uR7fOXFRjayjzlcGnsf0G/XbWpK35qA78GzVlv/hN+RyD117D3VxLroN
NXIL9GfUxGLSW6iZ16PLqLHnoqdSk49HD2UsB6I1plupfXsn/TdFqI2nw/pR
O1fACqmtD8DOs46r+B598d1/MyZD8NkQlofPdoE9hPeOgq0kN/TknksZQ41d
39DbtM5/F/c+0lr7HWPOpJUrZkSdSSsXnU91dprcVgN7gVyZD5uAF14Hk5ZX
fpni7DO8dD1sNV57N0xaXnwucHYar94Iq8LLp8LG4/WdYdKqBU5FnJ2gVtgK
e4laohz2R2qN6bBJ1CI5sK6sM62dXrR1RatPLT5byhpcg6/OgC3ER4fBCvDN
TrAV1FYlfMPt1GkvwqRVu70Dk1atdwaWQS14DSybWvFXsFnUkg/AHqfWXAir
phbdBJNWrXoMJq1aNow6u5RaNwtWTe2guTWcGqEaPTX0d1UdcD7p79yT2qA+
6exSaoHapLNGfH0JbD8+XgBbh2+PgJXh5V1h+Xh9EjaS2qAxdNaLWuL10Fkr
ao+q0Nlx3kG/fS41y3G0+vTDFwdadGPf1A99BfumTHTAHiqB/px9k5j0AfZN
h9F17Jt2oVexb9qAnse+aQl6NvumIvTd7JvuQ/dm35SNbs++qTv6MvZN7dDf
sG8Sk36ffVMD+hX2TfvQFeybNqHns29ahi5k3/Rb9Nio1xXTqCXGMJZiWYxp
Fte0umjOhZx/kOptuk8PWCHPmgmfz295HFbBb90Ae4V32Qt7n3f9FHYZYxNl
PNozdpmweXyL5RbFaH2rzbA6vuVbsAN860ZYBr4xmBzSHS+5G9YS71Pufinh
eVtMenfC16TGRGPxDGt2E3oqa3ohuj9r/gG08oE8RT7y4kWeuZLzBwL3/Rpy
2aMclcfu57yUPHYbrC/eot92OOHrXkz6ZMLXkZh0GutITDqDNTUXfWvovqg6
QrXCt3ikmPQbeGgF+mnWcRXXTg793eSLO3inNryj3q1L4HXMSt5lCnXKfPQQ
ahTVKlfy/Bz6DIHl8N30rcZGPIe8zrMXkmMa0S+FnoPEpI+GnqPEpGNJ95gc
7lWCB01HV+BR5ei38LCt6HN43Cl0HzxQTLoIj5yK3oaHbkSn47vn0FPw4LvR
W/Do9eizePiX6D6pXuNM51tMoQbqje6e9Lkin+vAnBmG951JOuuEN7yddHYe
H3gOVo8PPAKrxQfGwArI+xrLHrQVoNUnpC46Gvic6ILPpsFG4bO9YCX47ETY
i/js0zBp+ewumLTW1SnYJmpTvftX1Mhi0uuo8fPR97EH6IruGPoeQUz6K/YQ
YtKvJrxubcNc/hd1q5j0burWLehl5BbVrnPIMVPpswyWT62mb1lCDZeP3k6N
V4NOUheeR8+jRpyBHkcN+UPdaLE27nlMdeZw8pm0+qhNrNuPed/iGnyzG/py
fPMKdBQPDdDKqfPZd66yKMNX5qMLadM+dCd9NrEP/QS2l33of2BH2Jumxp19
w940I+6sBfvQQbDe7EMnwe5kH1oKK2QfWg1bzD50J6yKfeg+2Fb2oSdh9exN
L0k4k9Y+dGDCWSb70BmwoexDF8Gy8Fd57U2Mj8blHtgqxuGwxRbGTayIfjsZ
l/P0+YSxahl3torrirmmN7XHcDxTHirfPIXHRuEhbAa/VXO7POGeLm+P4fdj
8fFR8Jn4eDHscXy8ErYBHz8A28tzT8F2Mw819yYyZjN49mjGdCC6LWN+CfoL
vonYF3yvd/iOO2Fj8QattQLy+Fj0koj7zKN45yCOyottOL+NXHk66awDuXJP
0tkZ8uIy2Cnyj/y9eao/V+t6Mc+cw1qvgb1NHp3JPSr4jfpttfhKBfoIvvIW
+jJ85Rx6GL7SB12GrxSh38NXtqGvwlfEpH+f4h6tvPzwRR79AOeDyXFd0OmB
v4tyWz3vtJvcpzYx3Ut5/VnuIa28/hosjbz+z8BZL/J6BmwieX0M7Gny+hKY
tMZ8G+w5fOhWxvQRfKcFbAxe9HnorAdetTF0FqMW+EPo7Ch1w12ww9R9mqsl
1FSH0X+ipjqJ3pjwa1V7dOMeb1A7qXZpwqfFpF9L+jpQLj4Y92dIK3cfizmT
Vm5fF3Umrdx/LUxa3nAw1dl2vGMRrARvyYFJq3ZIwrYwJzQX9lJXbEGrTwa1
ot5tX8LrPDHpzxP+rqq94rzzZGpBtYn1pxa+hfUxlVq5CPYMtXQtbApjpLF5
gnFT7dea8RtCrTgI1p1aR33z8Pzu6E5J93kx6SP4vJj0Ajz/PvREPL8j+rrQ
86KYdFPCfVDe2AoPvAbvvAm2nH2H9hpr2KMsR5eQm4vRw+l31GIHfQbhW3kW
WWj51lOwDHxObfKAKM+N4Mdj8JYB/KZ78JEiWCr3aIm/tk7z50doj3C/mziX
t9Rb5OMxxeiTsZ+ubc253mELPvUvrjuMd10Zd3YlvtWSdyjhvXXtE4xJCXo6
XiWWdZFn6XgCP3mK8anGC7IYpz5xf5aO9Wk/PTuPsRxNWw987GY8bxQ+Ng1W
yXP0vLW0VaLVpxzv1NyoxaPkVWHCf89ovE1t9+Njo9Hqo7mv5zaxBh4mT064
KOcO5vzawNeF1oHm/kmOg/Cvk6wD9ZHeybENfqbzenK17vUdOVxM+gA+VIBX
VXOsoa0aX1qCfjfieVB5S7nqLHlMeepAmp9LK0+9G3V2hHvo2rMRz+XKC43k
dPnaEdq6Bp5X9Qzd6ypyrJj0beSkjeip5KR96LKE31t5pi3PkE/qGbr3/YHn
iScYmyc5nsbbnySH5KEnk0M6oW+A78HLJxPL8CK1l+HNelZl4GOhPD2EMZFW
nm5IdXaQPF0JW0SengSTVl7OhEkrVx9PcbaXXL4U9nu8vh9MWrVAY+DsPWqF
Slic3K2xq0l4TheTfi/hniYm/X3CPVJMuj0eKiY9DI/diC7Dgz9H7wvdo8Wk
L4Q+bmLSGr+J5GaN+wZy8kR0ETn5OnSv0NeO6opS1oy06ooamLTqik9hGdQV
zWFjqCtyYEuYlwtgt+BTo5lTRazbVbDh5K0HyVnTyWUvw5TnTnL+BFr5tHOa
s3zyZhNMuarWYiY5q5b8pdyi/KG+fWjTNTHyVmdyys3kqZGwaeSuOtgJ8ql+
a8+Yt4npP16pj95N9/k37yjdmWvFNP4a979flON01Pkcctz96BYJzxvKJU3k
gAl8l9vJSaV8l4dgB8hNPw/8GulraRPL4duMsLgcre+ltb6Vb5hDWz331nde
xzOkm9MmdhW5RrlqfNzzipj083HPK2LSx+inddw85n3eZW1Ph0lrHf8v1VkD
6/ivsErWcSlsEmt7OExa6ziAHWcd18CWsraHwaS1jgNYI2v7VVgluegx2Fm+
g8b2SvLiWfQd9O2K1jVl5Fa9e3NyxA951iKbHFGDLiZHvIeuIEd8j96R8Lwg
toM5M4y51IscUca6LiJfFLH2L3B+hDxxAa7vrnXZxPdvy7q8ETaaeVwOy2Jd
zmX+a+7r+IuYr4EHWatai+pTy7rTXN7MuhSTnswaHA1PxP06Menfpfk8XcBv
m5fi49zE/M5mTt/O3NS55pTm0b0xn3PSmkePRZ3NYdw0fhM4amxv5lx9Nc9a
ck3Fj98l7n1asDbV97u499U8PMQ1x5j3eta3Mb9W37Yy7vdozlxQW9u4t4lJ
q08D80xzZz1HzaVizrN513WwYnQ97Tpq7TZwrntJd0jx+Xw5a78DfYbBdZ7L
cQRjncuayOW8hqO+RRPnNWjNjYC4kfny45ocznkdY1WKPsTcUl5sHfU+0sqV
T0adjST3Dog5qyPX5saczWWuaa68wJwUe4E5mWBuaa61Zk4l0HVpfi/1m8k9
NS9b8G0Xct1mdGbc+QTmSx3fWfNkVdS/qbTmQTOY9CHeV6wt315t+6P+zcWk
p8T8XMfO8Z/mnI461/PqGMvWPGMAv/te/d1j3O/bjLHbT7RmPH+87xTGcgDv
/QvG6wQhrXHS+LRmDDIZL7XrqHM9M5d7nOA3ZDJWAe0LGbM6WIDW7xjA3k57
PP17oP6tqpG91VH2egPYixWz98pmzmtNKBf8HxFk0UY=
      "]]]}, {{InsetBox["1", {0., 8.}, {-1, 1}], 
     InsetBox["2", {0., 7.85714286}, {-1, 1}], 
     InsetBox["3", {0.147058824, 8.}, {-1, 1}], 
     InsetBox["4", {0.145635799, 7.85793951}, {-1, 1}], 
     InsetBox["5", {0., 7.71428571}, {-1, 1}], 
     InsetBox["6", {0.294117647, 8.}, {-1, 1}], 
     InsetBox["7", {0.144212775, 7.71587902}, {-1, 1}], 
     InsetBox["8", {0.291271599, 7.85873616}, {-1, 1}], 
     InsetBox["9", {0.28842555, 7.71747232}, {-1, 1}], 
     InsetBox["10", {0., 7.57142857}, {-1, 1}], 
     InsetBox["11", {0.441176471, 8.}, {-1, 1}], 
     InsetBox["12", {0.14373201, 7.57366104}, {-1, 1}], 
     InsetBox["13", {0.43773706, 7.8590901}, {-1, 1}], 
     InsetBox["14", {0.28746402, 7.57589351}, {-1, 1}], 
     InsetBox["15", {0.434297649, 7.7181802}, {-1, 1}], 
     InsetBox["16", {0., 7.42857143}, {-1, 1}], 
     InsetBox["17", {0.143251245, 7.43144306}, {-1, 1}], 
     InsetBox["18", {0.588235294, 8.}, {-1, 1}], 
     InsetBox["19", {0.584202521, 7.85944404}, {-1, 1}], 
     InsetBox["20", {0.432479998, 7.5774127}, {-1, 1}], 
     InsetBox["21", {0.28650249, 7.4343147}, {-1, 1}], 
     InsetBox["22", {0.580169747, 7.71888809}, {-1, 1}], 
     InsetBox["23", {0.430662346, 7.43664519}, {-1, 1}], 
     InsetBox["24", {0., 7.28571429}, {-1, 1}], 
     InsetBox["25", {0.577495975, 7.57893189}, {-1, 1}], 
     InsetBox["26", {0.142316175, 7.28949566}, {-1, 1}], 
     InsetBox["27", {0.735294118, 8.}, {-1, 1}], 
     InsetBox["28", {0.730665245, 7.85909523}, {-1, 1}], 
     InsetBox["29", {0.28463235, 7.29327704}, {-1, 1}], 
     InsetBox["30", {0.726036372, 7.71819046}, {-1, 1}], 
     InsetBox["31", {0.574822202, 7.43897568}, {-1, 1}], 
     InsetBox["32", {0.428639888, 7.29546017}, {-1, 1}], 
     InsetBox["33", {0.723527113, 7.57902399}, {-1, 1}], 
     InsetBox["34", {0., 7.14285714}, {-1, 1}], 
     InsetBox["35", {0.141381104, 7.14754826}, {-1, 1}], 
     InsetBox["36", {0.882352941, 8.}, {-1, 1}], 
     InsetBox["37", {0.877127969, 7.85874641}, {-1, 1}], 
     InsetBox["38", {0.282762209, 7.15223937}, {-1, 1}], 
     InsetBox["39", {0.572647426, 7.2976433}, {-1, 1}], 
     InsetBox["40", {0.721017854, 7.43985753}, {-1, 1}], 
     InsetBox["41", {0.871902998, 7.71749282}, {-1, 1}], 
     InsetBox["42", {0.426617429, 7.15427515}, {-1, 1}], 
     InsetBox["43", {0.869558252, 7.5791161}, {-1, 1}], 
     InsetBox["44", {0., 7.}, {-1, 1}], 
     InsetBox["45", {0.718029392, 7.29887555}, {-1, 1}], 
     InsetBox["46", {0.14091544, 7.004835}, {-1, 1}], 
     InsetBox["47", {0.570472649, 7.15631093}, {-1, 1}], 
     InsetBox["48", {1.02941176, 8.}, {-1, 1}], 
     InsetBox["49", {0.28183088, 7.00967001}, {-1, 1}], 
     InsetBox["50", {0.867213506, 7.44073938}, {-1, 1}], 
     InsetBox["51", {1.02426648, 7.85873677}, {-1, 1}], 
     InsetBox["52", {1.0191212, 7.71747354}, {-1, 1}], 
     InsetBox["53", {0.425280448, 7.01163121}, {-1, 1}], 
     InsetBox["54", {1.01596422, 7.57878341}, {-1, 1}], 
     InsetBox["55", {0.715040929, 7.15789358}, {-1, 1}], 
     InsetBox["56", {0.863411358, 7.3001078}, {-1, 1}], 
     InsetBox["57", {0.568730016, 7.01359242}, {-1, 1}], 
     InsetBox["58", {0., 6.85714286}, {-1, 1}], 
     InsetBox["59", {0.140449776, 6.86212175}, {-1, 1}], 
     InsetBox["60", {1.01280724, 7.44009328}, {-1, 1}], 
     InsetBox["61", {0.280899551, 6.86710064}, {-1, 1}], 
     InsetBox["62", {1.17647059, 8.}, {-1, 1}], 
     InsetBox["63", {1.171405, 7.85872713}, {-1, 1}], 
     InsetBox["64", {1.16633941, 7.71745426}, {-1, 1}], 
     InsetBox["65", {0.859609209, 7.15947623}, {-1, 1}], 
     InsetBox["66", {0.423943467, 6.86898728}, {-1, 1}], 
     InsetBox["67", {0.712626451, 7.01520674}, {-1, 1}], 
     InsetBox["68", {1.00911581, 7.29967701}, {-1, 1}], 
     InsetBox["69", {1.1623702, 7.57845072}, {-1, 1}], 
     InsetBox["70", {0.566987383, 6.87087391}, {-1, 1}], 
     InsetBox["71", {0., 6.71428571}, {-1, 1}], 
     InsetBox["72", {1.15840098, 7.43944719}, {-1, 1}], 
     InsetBox["73", {0.140144039, 6.71908509}, {-1, 1}], 
     InsetBox["74", {0.856522886, 7.01682107}, {-1, 1}], 
     InsetBox["75", {0.280288079, 6.72388447}, {-1, 1}], 
     InsetBox["76", {1.00542438, 7.15926073}, {-1, 1}], 
     InsetBox["77", {1.32352941, 8.}, {-1, 1}], 
     InsetBox["78", {1.31760131, 7.85973628}, {-1, 1}], 
     InsetBox["79", {0.710211973, 6.87251991}, {-1, 1}], 
     InsetBox["80", {1.31167321, 7.71947257}, {-1, 1}], 
     InsetBox["81", {0.422676078, 6.72614026}, {-1, 1}], 
     InsetBox["82", {1.15482027, 7.29924621}, {-1, 1}], 
     InsetBox["83", {1.30763971, 7.57973555}, {-1, 1}], 
     InsetBox["84", {0.565064077, 6.72839604}, {-1, 1}], 
     InsetBox["85", {1.00225748, 7.01625986}, {-1, 1}], 
     InsetBox["86", {0.853436563, 6.87416591}, {-1, 1}], 
     InsetBox["87", {1.30360621, 7.43999853}, {-1, 1}], 
     InsetBox["88", {1.15123956, 7.15904524}, {-1, 1}], 
     InsetBox["89", {0., 6.57142857}, {-1, 1}], 
     InsetBox["90", {0.139838303, 6.57604844}, {-1, 1}], 
     InsetBox["91", {0.279676607, 6.5806683}, {-1, 1}], 
     InsetBox["92", {0.708576937, 6.72927962}, {-1, 1}], 
     InsetBox["93", {1.46379763, 7.86074544}, {-1, 1}], 
     InsetBox["94", {1.47058824, 8.}, {-1, 1}], 
     InsetBox["95", {1.29943503, 7.29908305}, {-1, 1}], 
     InsetBox["96", {0.421408688, 6.58329324}, {-1, 1}], 
     InsetBox["97", {1.45700702, 7.72149087}, {-1, 1}], 
     InsetBox["98", {0.999090576, 6.87325898}, {-1, 1}], 
     InsetBox["99", {1.45290923, 7.58102037}, {-1, 1}], 
     InsetBox["100", {1.14799207, 7.01569865}, {-1, 1}], 
     InsetBox["101", {0.56314077, 6.58591817}, {-1, 1}], 
     InsetBox["102", {0.852089797, 6.7301632}, {-1, 1}], 
     InsetBox["103", {1.29526385, 7.15816758}, {-1, 1}], 
     InsetBox["104", {1.44881145, 7.44054987}, {-1, 1}], 
     InsetBox["105", {0., 6.42857143}, {-1, 1}], 
     InsetBox["106", {0.139455655, 6.43292271}, {-1, 1}], 
     InsetBox["107", {0.7069419, 6.58603933}, {-1, 1}], 
     InsetBox["108", {0.27891131, 6.437274}, {-1, 1}], 
     InsetBox["109", {1.4440498, 7.2989199}, {-1, 1}], 
     InsetBox["110", {1.14474459, 6.87235206}, {-1, 1}], 
     InsetBox["111", {0.996829335, 6.72964834}, {-1, 1}], 
     InsetBox["112", {0.420643206, 6.43952784}, {-1, 1}], 
     InsetBox["113", {1.61046086, 7.86081675}, {-1, 1}], 
     InsetBox["114", {1.61764706, 8.}, {-1, 1}], 
     InsetBox["115", {1.29279534, 7.01474235}, {-1, 1}], 
     InsetBox["116", {1.60327467, 7.72163351}, {-1, 1}], 
     InsetBox["117", {0.850743031, 6.58616049}, {-1, 1}], 
     InsetBox["118", {1.59832244, 7.58132433}, {-1, 1}], 
     InsetBox["119", {0.562375102, 6.44178169}, {-1, 1}], 
     InsetBox["120", {1.43928815, 7.15728992}, {-1, 1}], 
     InsetBox["121", {1.59337022, 7.44101515}, {-1, 1}], 
     InsetBox["122", {1.14156887, 6.72913348}, {-1, 1}], 
     InsetBox["123", {0.705873717, 6.44209171}, {-1, 1}], 
     InsetBox["124", {0., 6.28571429}, {-1, 1}], 
     InsetBox["125", {1.29032684, 6.87131712}, {-1, 1}], 
     InsetBox["126", {0.139073007, 6.28979699}, {-1, 1}], 
     InsetBox["127", {0.278146013, 6.2938797}, {-1, 1}], 
     InsetBox["128", {0.994568094, 6.5860377}, {-1, 1}], 
     InsetBox["129", {1.58860453, 7.29942042}, {-1, 1}], 
     InsetBox["130", {1.43759861, 7.01378605}, {-1, 1}], 
     InsetBox["131", {0.419877724, 6.29576245}, {-1, 1}], 
     InsetBox["132", {1.7571241, 7.86088807}, {-1, 1}], 
     InsetBox["133", {1.76470588, 8.}, {-1, 1}], 
     InsetBox["134", {1.74954231, 7.72177614}, {-1, 1}], 
     InsetBox["135", {0.849372333, 6.44240174}, {-1, 1}], 
     InsetBox["136", {0.561609434, 6.29764521}, {-1, 1}], 
     InsetBox["137", {1.74373565, 7.58162829}, {-1, 1}], 
     InsetBox["138", {1.58383883, 7.1578257}, {-1, 1}], 
     InsetBox["139", {1.28730729, 6.72868052}, {-1, 1}], 
     InsetBox["140", {1.13839316, 6.58591491}, {-1, 1}], 
     InsetBox["141", {1.73792899, 7.44148043}, {-1, 1}], 
     InsetBox["142", {1.43590908, 6.87028219}, {-1, 1}], 
     InsetBox["143", {0.704805534, 6.2981441}, {-1, 1}], 
     InsetBox["144", {0.99340519, 6.44188878}, {-1, 1}], 
     InsetBox["145", {0., 6.14285714}, {-1, 1}], 
     InsetBox["146", {0.138751852, 6.146275}, {-1, 1}], 
     InsetBox["147", {1.58185888, 7.014633}, {-1, 1}], 
     InsetBox["148", {1.73315925, 7.29992095}, {-1, 1}], 
     InsetBox["149", {0.277503705, 6.14969286}, {-1, 1}], 
     InsetBox["150", {0.419280989, 6.15182199}, {-1, 1}], 
     InsetBox["151", {0.848001635, 6.29864299}, {-1, 1}], 
     InsetBox["152", {1.90396745, 7.86112737}, {-1, 1}], 
     InsetBox["153", {1.28428775, 6.58604391}, {-1, 1}], 
     InsetBox["154", {1.91176471, 8.}, {-1, 1}], 
     InsetBox["155", {1.43304571, 6.72822755}, {-1, 1}], 
     InsetBox["156", {1.89617019, 7.72225475}, {-1, 1}], 
     InsetBox["157", {1.72838952, 7.15836147}, {-1, 1}], 
     InsetBox["158", {0.561058273, 6.15395111}, {-1, 1}], 
     InsetBox["159", {1.13743805, 6.44137582}, {-1, 1}], 
     InsetBox["160", {1.89053537, 7.58183397}, {-1, 1}], 
     InsetBox["161", {1.57987892, 6.8714403}, {-1, 1}], 
     InsetBox["162", {1.88490055, 7.44141319}, {-1, 1}], 
     InsetBox["163", {0.992242287, 6.29773986}, {-1, 1}], 
     InsetBox["164", {0.703856623, 6.15450344}, {-1, 1}], 
     InsetBox["165", {1.72611914, 7.01547995}, {-1, 1}], 
     InsetBox["166", {0., 6.}, {-1, 1}], 
     InsetBox["167", {0.138430698, 6.00275302}, {-1, 1}], 
     InsetBox["168", {1.87991105, 7.29982415}, {-1, 1}], 
     InsetBox["169", {1.43018234, 6.58617291}, {-1, 1}], 
     InsetBox["170", {0.276861396, 6.00550603}, {-1, 1}], 
     InsetBox["171", {1.28384456, 6.44255022}, {-1, 1}], 
     InsetBox["172", {1.57708967, 6.72883233}, {-1, 1}], 
     InsetBox["173", {0.846654972, 6.15505578}, {-1, 1}], 
     InsetBox["174", {0.418684254, 6.00788152}, {-1, 1}], 
     InsetBox["175", {1.13648294, 6.29683673}, {-1, 1}], 
     InsetBox["176", {1.87492154, 7.15823511}, {-1, 1}], 
     InsetBox["177", {2.0508108, 7.86136668}, {-1, 1}], 
     InsetBox["178", {2.05882353, 8.}, {-1, 1}], 
     InsetBox["179", {1.72384877, 6.87259842}, {-1, 1}], 
     InsetBox["180", {2.04279807, 7.72273335}, {-1, 1}], 
     InsetBox["181", {0.560507112, 6.01025702}, {-1, 1}], 
     InsetBox["182", {2.0373351, 7.58203965}, {-1, 1}], 
     InsetBox["183", {0.991199202, 6.1540091}, {-1, 1}], 
     InsetBox["184", {2.03187212, 7.44134595}, {-1, 1}], 
     InsetBox["185", {0.702907711, 6.01086279}, {-1, 1}], 
     InsetBox["186", {1.43025107, 6.44372462}, {-1, 1}], 
     InsetBox["187", {1.87115964, 7.01494079}, {-1, 1}], 
     InsetBox["188", {1.57430042, 6.58622435}, {-1, 1}], 
     InsetBox["189", {1.28340137, 6.29905653}, {-1, 1}], 
     InsetBox["190", {1.72113364, 6.7294371}, {-1, 1}], 
     InsetBox["191", {0., 5.85714286}, {-1, 1}], 
     InsetBox["192", {2.02666284, 7.29972735}, {-1, 1}], 
     InsetBox["193", {0.138736648, 5.85958591}, {-1, 1}], 
     InsetBox["194", {0.277473296, 5.86202896}, {-1, 1}], 
     InsetBox["195", {0.84530831, 6.01146857}, {-1, 1}], 
     InsetBox["196", {1.13574343, 6.15296241}, {-1, 1}], 
     InsetBox["197", {0.418932201, 5.86463446}, {-1, 1}], 
     InsetBox["198", {1.86739773, 6.87164647}, {-1, 1}], 
     InsetBox["199", {2.02145357, 7.15810875}, {-1, 1}], 
     InsetBox["200", {2.19716191, 7.8619005}, {-1, 1}], 
     InsetBox["201", {0.560391107, 5.86723997}, {-1, 1}], 
     InsetBox["202", {2.18844146, 7.72380099}, {-1, 1}], 
     InsetBox["203", {2.20588235, 8.}, {-1, 1}], 
     InsetBox["204", {1.5741543, 6.44340685}, {-1, 1}], 
     InsetBox["205", {1.43031981, 6.30127633}, {-1, 1}], 
     InsetBox["206", {0.990156117, 6.01027833}, {-1, 1}], 
     InsetBox["207", {2.18351572, 7.5830023}, {-1, 1}], 
     InsetBox["208", {1.71841851, 6.58627578}, {-1, 1}], 
     InsetBox["209", {2.01620013, 7.01440163}, {-1, 1}], 
     InsetBox["210", {0.703025181, 5.86760405}, {-1, 1}], 
     InsetBox["211", {1.28259536, 6.15436793}, {-1, 1}], 
     InsetBox["212", {2.17858999, 7.44220361}, {-1, 1}], 
     InsetBox["213", {1.86486766, 6.72777037}, {-1, 1}], 
     InsetBox["214", {2.17395376, 7.2990345}, {-1, 1}], 
     InsetBox["215", {0., 5.71428571}, {-1, 1}], 
     InsetBox["216", {0.139042598, 5.7164188}, {-1, 1}], 
     InsetBox["217", {1.13500392, 6.0090881}, {-1, 1}], 
     InsetBox["218", {0.845659256, 5.86796813}, {-1, 1}], 
     InsetBox["219", {0.278085196, 5.71855188}, {-1, 1}], 
     InsetBox["220", {2.01094669, 6.87069452}, {-1, 1}], 
     InsetBox["221", {1.57400817, 6.30058935}, {-1, 1}], 
     InsetBox["222", {0.419180149, 5.7213874}, {-1, 1}], 
     InsetBox["223", {1.71805753, 6.44308908}, {-1, 1}], 
     InsetBox["224", {2.16931753, 7.15586539}, {-1, 1}], 
     InsetBox["225", {1.42944729, 6.15577345}, {-1, 1}], 
     InsetBox["226", {1.86233759, 6.58389426}, {-1, 1}], 
     InsetBox["227", {0.560275102, 5.72422293}, {-1, 1}], 
     InsetBox["228", {2.34351302, 7.86243432}, {-1, 1}], 
     InsetBox["229", {2.33408485, 7.72486863}, {-1, 1}], 
     InsetBox["230", {0.989870299, 5.86678895}, {-1, 1}], 
     InsetBox["231", {2.35294118, 8.}, {-1, 1}], 
     InsetBox["232", {2.32969635, 7.58396495}, {-1, 1}], 
     InsetBox["233", {1.28178935, 6.00967933}, {-1, 1}], 
     InsetBox["234", {2.00860168, 6.72610363}, {-1, 1}], 
     InsetBox["235", {2.16313934, 7.01053385}, {-1, 1}], 
     InsetBox["236", {0.703142651, 5.72434531}, {-1, 1}], 
     InsetBox["237", {2.32530785, 7.44306126}, {-1, 1}], 
     InsetBox["238", {1.71769654, 6.29990238}, {-1, 1}], 
     InsetBox["239", {1.13408134, 5.86560976}, {-1, 1}], 
     InsetBox["240", {2.32124467, 7.29834165}, {-1, 1}], 
     InsetBox["241", {1.57304165, 6.15416563}, {-1, 1}], 
     InsetBox["242", {0.846010201, 5.72446769}, {-1, 1}], 
     InsetBox["243", {0., 5.57142857}, {-1, 1}], 
     InsetBox["244", {1.86107232, 6.43935124}, {-1, 1}], 
     InsetBox["245", {0.139319979, 5.57330149}, {-1, 1}], 
     InsetBox["246", {2.15696116, 6.8652023}, {-1, 1}], 
     InsetBox["247", {0.278639958, 5.57517441}, {-1, 1}], 
     InsetBox["248", {1.42857477, 6.01027057}, {-1, 1}], 
     InsetBox["249", {2.00625666, 6.58151274}, {-1, 1}], 
     InsetBox["250", {0.419447755, 5.57814761}, {-1, 1}], 
     InsetBox["251", {2.31718149, 7.15362203}, {-1, 1}], 
     InsetBox["252", {0.989584481, 5.72329956}, {-1, 1}], 
     InsetBox["253", {0.560255552, 5.58112082}, {-1, 1}], 
     InsetBox["254", {1.28092485, 5.86506141}, {-1, 1}], 
     InsetBox["255", {2.49094411, 7.86252189}, {-1, 1}], 
     InsetBox["256", {2.48188822, 7.72504377}, {-1, 1}], 
     InsetBox["257", {2.5, 8.}, {-1, 1}], 
     InsetBox["258", {2.15333543, 6.72097366}, {-1, 1}], 
     InsetBox["259", {2.4774382, 7.58428656}, {-1, 1}], 
     InsetBox["260", {2.31007856, 7.00666606}, {-1, 1}], 
     InsetBox["261", {0.703299804, 5.58101176}, {-1, 1}], 
     InsetBox["262", {1.716636, 6.1525578}, {-1, 1}], 
     InsetBox["263", {1.85980704, 6.29480823}, {-1, 1}], 
     InsetBox["264", {2.47298818, 7.44352935}, {-1, 1}], 
     InsetBox["265", {1.57207512, 6.0077419}, {-1, 1}], 
     InsetBox["266", {2.00408711, 6.43561341}, {-1, 1}], 
     InsetBox["267", {1.13315876, 5.72213143}, {-1, 1}], 
     InsetBox["268", {0.846344056, 5.5809027}, {-1, 1}], 
     InsetBox["269", {2.46941894, 7.2983973}, {-1, 1}], 
     InsetBox["270", {1.42776836, 5.86451306}, {-1, 1}], 
     InsetBox["271", {2.30297562, 6.85971008}, {-1, 1}], 
     InsetBox["272", {0., 5.42857143}, {-1, 1}], 
     InsetBox["273", {0.13959736, 5.43018418}, {-1, 1}], 
     InsetBox["274", {2.14970971, 6.57674501}, {-1, 1}], 
     InsetBox["275", {0.27919472, 5.43179693}, {-1, 1}], 
     InsetBox["276", {0.419715362, 5.43490782}, {-1, 1}], 
     InsetBox["277", {2.46584971, 7.15326524}, {-1, 1}], 
     InsetBox["278", {1.28006035, 5.72044349}, {-1, 1}], 
     InsetBox["279", {0.989742559, 5.57937354}, {-1, 1}], 
     InsetBox["280", {0.560236003, 5.43801871}, {-1, 1}], 
     InsetBox["281", {1.85845577, 6.14752821}, {-1, 1}], 
     InsetBox["282", {1.71557546, 6.00521323}, {-1, 1}], 
     InsetBox["283", {2.29806919, 6.71584369}, {-1, 1}], 
     InsetBox["284", {2.00191755, 6.28971408}, {-1, 1}], 
     InsetBox["285", {2.6383752, 7.86260945}, {-1, 1}], 
     InsetBox["286", {2.62969158, 7.72521891}, {-1, 1}], 
     InsetBox["287", {2.64705882, 8.}, {-1, 1}], 
     InsetBox["288", {2.46010807, 7.006788}, {-1, 1}], 
     InsetBox["289", {1.57133505, 5.86158102}, {-1, 1}], 
     InsetBox["290", {0.703456957, 5.4376782}, {-1, 1}], 
     InsetBox["291", {2.62518004, 7.58460817}, {-1, 1}], 
     InsetBox["292", {2.14681071, 6.43081284}, {-1, 1}], 
     InsetBox["293", {1.13314106, 5.57784438}, {-1, 1}], 
     InsetBox["294", {2.6206685, 7.44399744}, {-1, 1}], 
     InsetBox["295", {1.42696194, 5.71875556}, {-1, 1}], 
     InsetBox["296", {0.84667791, 5.4373377}, {-1, 1}], 
     InsetBox["297", {2.29316276, 6.57197729}, {-1, 1}], 
     InsetBox["298", {2.45436643, 6.86031077}, {-1, 1}], 
     InsetBox["299", {2.61759322, 7.29845294}, {-1, 1}], 
     InsetBox["300", {0., 5.28571429}, {-1, 1}], 
     InsetBox["301", {0.139838416, 5.2869928}, {-1, 1}], 
     InsetBox["302", {0.279676833, 5.28827132}, {-1, 1}], 
     InsetBox["303", {1.8571045, 6.00024819}, {-1, 1}], 
     InsetBox["304", {2.00027554, 6.14249861}, {-1, 1}], 
     InsetBox["305", {1.27884766, 5.57517971}, {-1, 1}], 
     InsetBox["306", {0.419931047, 5.29060957}, {-1, 1}], 
     InsetBox["307", {1.71490174, 5.85864897}, {-1, 1}], 
     InsetBox["308", {2.14391171, 6.28488066}, {-1, 1}], 
     InsetBox["309", {2.61451793, 7.15290844}, {-1, 1}], 
     InsetBox["310", {0.989900637, 5.43544752}, {-1, 1}], 
     InsetBox["311", {2.44753561, 6.71531026}, {-1, 1}], 
     InsetBox["312", {0.560185261, 5.29294783}, {-1, 1}], 
     InsetBox["313", {1.57059498, 5.71542013}, {-1, 1}], 
     InsetBox["314", {2.28953431, 6.42601227}, {-1, 1}], 
     InsetBox["315", {2.78529926, 7.86277327}, {-1, 1}], 
     InsetBox["316", {2.77648088, 7.72554653}, {-1, 1}], 
     InsetBox["317", {2.61013758, 7.00690995}, {-1, 1}], 
     InsetBox["318", {2.79411765, 8.}, {-1, 1}], 
     InsetBox["319", {0.703827917, 5.29308475}, {-1, 1}], 
     InsetBox["320", {2.77283941, 7.58520814}, {-1, 1}], 
     InsetBox["321", {1.13312336, 5.43355734}, {-1, 1}], 
     InsetBox["322", {1.42455427, 5.57251504}, {-1, 1}], 
     InsetBox["323", {2.76919795, 7.44486974}, {-1, 1}], 
     InsetBox["324", {2.4407048, 6.57030975}, {-1, 1}], 
     InsetBox["325", {1.99863353, 5.99528314}, {-1, 1}], 
     InsetBox["326", {0.847470572, 5.29322166}, {-1, 1}], 
     InsetBox["327", {1.85656371, 5.85352806}, {-1, 1}], 
     InsetBox["328", {2.14142006, 6.13742964}, {-1, 1}], 
     InsetBox["329", {2.60575724, 6.86091145}, {-1, 1}], 
     InsetBox["330", {2.76777285, 7.30004729}, {-1, 1}], 
     InsetBox["331", {0., 5.14285714}, {-1, 1}], 
     InsetBox["332", {1.71422802, 5.7120847}, {-1, 1}], 
     InsetBox["333", {0.140079473, 5.14380142}, {-1, 1}], 
     InsetBox["334", {2.28590587, 6.28004725}, {-1, 1}], 
     InsetBox["335", {0.280158945, 5.1447457}, {-1, 1}], 
     InsetBox["336", {1.27763498, 5.42991593}, {-1, 1}], 
     InsetBox["337", {0.990772656, 5.29142553}, {-1, 1}], 
     InsetBox["338", {0.420146733, 5.14631133}, {-1, 1}], 
     InsetBox["339", {2.76634776, 7.15522485}, {-1, 1}], 
     InsetBox["340", {1.56836386, 5.56830114}, {-1, 1}], 
     InsetBox["341", {2.59700204, 6.71477683}, {-1, 1}], 
     InsetBox["342", {2.43415883, 6.42362256}, {-1, 1}], 
     InsetBox["343", {0.56013452, 5.14787695}, {-1, 1}], 
     InsetBox["344", {2.7617074, 7.00894273}, {-1, 1}], 
     InsetBox["345", {2.13892842, 5.98997862}, {-1, 1}], 
     InsetBox["346", {2.93222332, 7.86293708}, {-1, 1}], 
     InsetBox["347", {2.92327018, 7.72587416}, {-1, 1}], 
     InsetBox["348", {1.99822568, 5.84840715}, {-1, 1}], 
     InsetBox["349", {0.704198877, 5.14849129}, {-1, 1}], 
     InsetBox["350", {1.13407474, 5.28962939}, {-1, 1}], 
     InsetBox["351", {1.4221466, 5.42627452}, {-1, 1}], 
     InsetBox["352", {2.94117647, 8.}, {-1, 1}], 
     InsetBox["353", {2.28256458, 6.13236068}, {-1, 1}], 
     InsetBox["354", {2.92049878, 7.5858081}, {-1, 1}], 
     InsetBox["355", {1.85602292, 5.70680793}, {-1, 1}], 
     InsetBox["356", {2.58824684, 6.56864221}, {-1, 1}], 
     InsetBox["357", {2.91772739, 7.44574204}, {-1, 1}], 
     InsetBox["358", {0.848263235, 5.14910563}, {-1, 1}], 
     InsetBox["359", {2.42761286, 6.27693538}, {-1, 1}], 
     InsetBox["360", {1.71217346, 5.56408724}, {-1, 1}], 
     InsetBox["361", {2.75706704, 6.86266061}, {-1, 1}], 
     InsetBox["362", {1.27749225, 5.2863972}, {-1, 1}], 
     InsetBox["363", {0., 5.}, {-1, 1}], 
     InsetBox["364", {2.91795249, 7.30164165}, {-1, 1}], 
     InsetBox["365", {0.140366371, 5.00029937}, {-1, 1}], 
     InsetBox["366", {0.280732743, 5.00059875}, {-1, 1}], 
     InsetBox["367", {1.56613274, 5.42118214}, {-1, 1}], 
     InsetBox["368", {0.991644675, 5.14740354}, {-1, 1}], 
     InsetBox["369", {2.57878335, 6.42123286}, {-1, 1}], 
     InsetBox["370", {0.421269122, 5.00183613}, {-1, 1}], 
     InsetBox["371", {2.74683799, 6.71591114}, {-1, 1}], 
     InsetBox["372", {2.91817759, 7.15754125}, {-1, 1}], 
     InsetBox["373", {2.13787211, 5.84242702}, {-1, 1}], 
     InsetBox["374", {2.2792233, 5.9846741}, {-1, 1}], 
     InsetBox["375", {1.99781782, 5.70153116}, {-1, 1}], 
     InsetBox["376", {0.561805501, 5.00307352}, {-1, 1}], 
     InsetBox["377", {2.42245582, 6.12938207}, {-1, 1}], 
     InsetBox["378", {1.85395626, 5.55871145}, {-1, 1}], 
     InsetBox["379", {1.42090977, 5.28316501}, {-1, 1}], 
     InsetBox["380", {1.13502612, 5.14570144}, {-1, 1}], 
     InsetBox["381", {2.91327721, 7.01097551}, {-1, 1}], 
     InsetBox["382", {0.705853839, 5.00442749}, {-1, 1}], 
     InsetBox["383", {3.08039576, 7.86238909}, {-1, 1}], 
     InsetBox["384", {3.07255622, 7.72477818}, {-1, 1}], 
     InsetBox["385", {2.73660895, 6.56916168}, {-1, 1}], 
     InsetBox["386", {3.08823529, 8.}, {-1, 1}], 
     InsetBox["387", {2.56931986, 6.27382351}, {-1, 1}], 
     InsetBox["388", {3.07007827, 7.58462982}, {-1, 1}], 
     InsetBox["389", {1.71011889, 5.41608977}, {-1, 1}], 
     InsetBox["390", {0.849902177, 5.00578146}, {-1, 1}], 
     InsetBox["391", {3.06760033, 7.44448146}, {-1, 1}], 
     InsetBox["392", {2.90837684, 6.86440976}, {-1, 1}], 
     InsetBox["393", {1.27734953, 5.14287848}, {-1, 1}], 
     InsetBox["394", {1.56406212, 5.27719547}, {-1, 1}], 
     InsetBox["395", {2.27751854, 5.83644689}, {-1, 1}], 
     InsetBox["396", {0., 4.85714286}, {-1, 1}], 
     InsetBox["397", {2.1368158, 5.69487541}, {-1, 1}], 
     InsetBox["398", {0.14065327, 4.85679732}, {-1, 1}], 
     InsetBox["399", {3.06778012, 7.29990466}, {-1, 1}], 
     InsetBox["400", {2.72357039, 6.42024233}, {-1, 1}], 
     InsetBox["401", {2.41729879, 5.98182876}, {-1, 1}], 
     InsetBox["402", {0.993468848, 5.00433791}, {-1, 1}], 
     InsetBox["403", {0.281306541, 4.85645179}, {-1, 1}], 
     InsetBox["404", {1.99573907, 5.55333567}, {-1, 1}], 
     InsetBox["405", {2.89667395, 6.71704545}, {-1, 1}], 
     InsetBox["406", {0.422391511, 4.85736094}, {-1, 1}], 
     InsetBox["407", {2.56234707, 6.12640347}, {-1, 1}], 
     InsetBox["408", {3.06795991, 7.15532786}, {-1, 1}], 
     InsetBox["409", {1.8518896, 5.41061497}, {-1, 1}], 
     InsetBox["410", {0.563476482, 4.85827009}, {-1, 1}], 
     InsetBox["411", {1.41967294, 5.14005551}, {-1, 1}], 
     InsetBox["412", {1.13703552, 5.00289437}, {-1, 1}], 
     InsetBox["413", {2.71053183, 6.27132299}, {-1, 1}], 
     InsetBox["414", {0.707508801, 4.86036368}, {-1, 1}], 
     InsetBox["415", {1.70721448, 5.27122593}, {-1, 1}], 
     InsetBox["416", {3.06295579, 7.00858141}, {-1, 1}], 
     InsetBox["417", {2.88497106, 6.56968115}, {-1, 1}], 
     InsetBox["418", {3.22856819, 7.8618411}, {-1, 1}], 
     InsetBox["419", {3.22184226, 7.7236822}, {-1, 1}], 
     InsetBox["420", {3.23529412, 8.}, {-1, 1}], 
     InsetBox["421", {2.41550801, 5.83567121}, {-1, 1}], 
     InsetBox["422", {2.27581378, 5.68821967}, {-1, 1}], 
     InsetBox["423", {3.21965776, 7.58345154}, {-1, 1}], 
     InsetBox["424", {0.85154112, 4.86245728}, {-1, 1}], 
     InsetBox["425", {2.13468798, 5.5460503}, {-1, 1}], 
     InsetBox["426", {2.55537428, 5.97898342}, {-1, 1}], 
     InsetBox["427", {1.27981013, 5.00020703}, {-1, 1}], 
     InsetBox["428", {3.05795168, 6.86183496}, {-1, 1}], 
     InsetBox["429", {1.5619915, 5.1332088}, {-1, 1}], 
     InsetBox["430", {3.21747327, 7.44322087}, {-1, 1}], 
     InsetBox["431", {1.99366031, 5.40514017}, {-1, 1}], 
     InsetBox["432", {2.86835744, 6.41925181}, {-1, 1}], 
     InsetBox["433", {0., 4.71428571}, {-1, 1}], 
     InsetBox["434", {2.70149092, 6.12613717}, {-1, 1}], 
     InsetBox["435", {0.141149635, 4.71334293}, {-1, 1}], 
     InsetBox["436", {0.995293021, 4.86127229}, {-1, 1}], 
     InsetBox["437", {3.21760775, 7.29816767}, {-1, 1}], 
     InsetBox["438", {0.282299269, 4.71240014}, {-1, 1}], 
     InsetBox["439", {1.84941925, 5.26552786}, {-1, 1}], 
     InsetBox["440", {3.04460274, 6.71316555}, {-1, 1}], 
     InsetBox["441", {0.424501252, 4.71346733}, {-1, 1}], 
     InsetBox["442", {1.42258474, 4.9975197}, {-1, 1}], 
     InsetBox["443", {3.21774223, 7.15311447}, {-1, 1}], 
     InsetBox["444", {0.566703234, 4.71453452}, {-1, 1}], 
     InsetBox["445", {2.85174381, 6.26882247}, {-1, 1}], 
     InsetBox["446", {1.13904492, 4.86008729}, {-1, 1}], 
     InsetBox["447", {1.70431007, 5.12636209}, {-1, 1}], 
     InsetBox["448", {2.41371723, 5.68951365}, {-1, 1}], 
     InsetBox["449", {2.55349748, 5.83489553}, {-1, 1}], 
     InsetBox["450", {2.27363689, 5.53876494}, {-1, 1}], 
     InsetBox["451", {3.0312538, 6.56449614}, {-1, 1}], 
     InsetBox["452", {0.711014542, 4.71610849}, {-1, 1}], 
     InsetBox["453", {3.21263438, 7.00618731}, {-1, 1}], 
     InsetBox["454", {2.13256015, 5.39722519}, {-1, 1}], 
     InsetBox["455", {2.69245001, 5.98095136}, {-1, 1}], 
     InsetBox["456", {3.37587278, 7.86119314}, {-1, 1}], 
     InsetBox["457", {3.36939263, 7.72238628}, {-1, 1}], 
     InsetBox["458", {3.38235294, 8.}, {-1, 1}], 
     InsetBox["459", {1.99162402, 5.25982979}, {-1, 1}], 
     InsetBox["460", {1.56415789, 4.99122352}, {-1, 1}], 
     InsetBox["461", {0.85532585, 4.71768246}, {-1, 1}], 
     InsetBox["462", {1.28227073, 4.85753559}, {-1, 1}], 
     InsetBox["463", {3.36814923, 7.58155663}, {-1, 1}], 
     InsetBox["464", {3.01109949, 6.41530218}, {-1, 1}], 
     InsetBox["465", {2.84063478, 6.12587088}, {-1, 1}], 
     InsetBox["466", {3.20752653, 6.85926015}, {-1, 1}], 
     InsetBox["467", {3.36690584, 7.44072698}, {-1, 1}], 
     InsetBox["468", {1.8469489, 5.12044074}, {-1, 1}], 
     InsetBox["469", {0., 4.57142857}, {-1, 1}], 
     InsetBox["470", {0.9992349, 4.71714377}, {-1, 1}], 
     InsetBox["471", {0.141645999, 4.56988853}, {-1, 1}], 
     InsetBox["472", {3.36692898, 7.29466767}, {-1, 1}], 
     InsetBox["473", {2.55162068, 5.69080764}, {-1, 1}], 
     InsetBox["474", {0.283291998, 4.5683485}, {-1, 1}], 
     InsetBox["475", {3.19253154, 6.70928564}, {-1, 1}], 
     InsetBox["476", {2.41160446, 5.54044504}, {-1, 1}], 
     InsetBox["477", {2.69107299, 5.8388238}, {-1, 1}], 
     InsetBox["478", {1.42549653, 4.85498389}, {-1, 1}], 
     InsetBox["479", {0.426610992, 4.56957372}, {-1, 1}], 
     InsetBox["480", {2.99094518, 6.26610821}, {-1, 1}], 
     InsetBox["481", {2.27146, 5.38931021}, {-1, 1}], 
     InsetBox["482", {1.70573105, 4.98492734}, {-1, 1}], 
     InsetBox["483", {3.36695213, 7.14860836}, {-1, 1}], 
     InsetBox["484", {2.82952575, 5.98291929}, {-1, 1}], 
     InsetBox["485", {0.569929985, 4.57079895}, {-1, 1}], 
     InsetBox["486", {1.14314395, 4.71660508}, {-1, 1}], 
     InsetBox["487", {2.13017688, 5.25228023}, {-1, 1}], 
     InsetBox["488", {3.17753655, 6.55931113}, {-1, 1}], 
     InsetBox["489", {0.714520283, 4.57185329}, {-1, 1}], 
     InsetBox["490", {1.98958773, 5.1145194}, {-1, 1}], 
     InsetBox["491", {3.36033874, 6.99750549}, {-1, 1}], 
     InsetBox["492", {2.97550809, 6.12962703}, {-1, 1}], 
     InsetBox["493", {1.56632428, 4.84923824}, {-1, 1}], 
     InsetBox["494", {3.52317738, 7.86054518}, {-1, 1}], 
     InsetBox["495", {3.51694299, 7.72109036}, {-1, 1}], 
     InsetBox["496", {1.2868545, 4.71481456}, {-1, 1}], 
     InsetBox["497", {3.52941176, 8.}, {-1, 1}], 
     InsetBox["498", {3.15384155, 6.41135254}, {-1, 1}], 
     InsetBox["499", {0.859110581, 4.57290764}, {-1, 1}], 
     InsetBox["500", {2.68969596, 5.69669624}, {-1, 1}], 
     InsetBox["501", {2.54957204, 5.54212513}, {-1, 1}], 
     InsetBox["502", {1.84806427, 4.97885262}, {-1, 1}], 
     InsetBox["503", {3.5166407, 7.57966173}, {-1, 1}], 
     InsetBox["504", {3.35372536, 6.84640262}, {-1, 1}], 
     InsetBox["505", {2.4094917, 5.39137642}, {-1, 1}], 
     InsetBox["506", {2.8286485, 5.84275207}, {-1, 1}], 
     InsetBox["507", {3.51633841, 7.4382331}, {-1, 1}], 
     InsetBox["508", {2.26872974, 5.24473068}, {-1, 1}], 
     InsetBox["509", {1.00317678, 4.57301526}, {-1, 1}], 
     InsetBox["510", {0., 4.42857143}, {-1, 1}], 
     InsetBox["511", {0.142829208, 4.4268454}, {-1, 1}], 
     InsetBox["512", {2.96007101, 5.99314585}, {-1, 1}], 
     InsetBox["513", {3.13014654, 6.26339396}, {-1, 1}], 
     InsetBox["514", {3.33773632, 6.69260943}, {-1, 1}], 
     InsetBox["515", {1.43056505, 4.71302403}, {-1, 1}], 
     InsetBox["516", {0.285658416, 4.42511937}, {-1, 1}], 
     InsetBox["517", {3.51625022, 7.29116768}, {-1, 1}], 
     InsetBox["518", {1.70715203, 4.84349259}, {-1, 1}], 
     InsetBox["519", {2.12779361, 5.10733527}, {-1, 1}], 
     InsetBox["520", {0.429594987, 4.42617155}, {-1, 1}], 
     InsetBox["521", {1.14724298, 4.57312288}, {-1, 1}], 
     InsetBox["522", {0.573531558, 4.42722372}, {-1, 1}], 
     InsetBox["523", {3.51616203, 7.14410226}, {-1, 1}], 
     InsetBox["524", {1.99039749, 4.97277791}, {-1, 1}], 
     InsetBox["525", {3.11038141, 6.13338319}, {-1, 1}], 
     InsetBox["526", {3.32174728, 6.53881625}, {-1, 1}], 
     InsetBox["527", {2.69026808, 5.55116122}, {-1, 1}], 
     InsetBox["528", {0.718475484, 4.42815163}, {-1, 1}], 
     InsetBox["529", {2.82777124, 5.70258485}, {-1, 1}], 
     InsetBox["530", {2.54752341, 5.39344263}, {-1, 1}], 
     InsetBox["531", {1.57189853, 4.707637}, {-1, 1}], 
     InsetBox["532", {3.50804311, 6.98882367}, {-1, 1}], 
     InsetBox["533", {2.96330727, 5.85768776}, {-1, 1}], 
     InsetBox["534", {2.40951171, 5.24800795}, {-1, 1}], 
     InsetBox["535", {1.29143827, 4.57209353}, {-1, 1}], 
     InsetBox["536", {1.84917964, 4.8372645}, {-1, 1}], 
     InsetBox["537", {3.29183963, 6.38682658}, {-1, 1}], 
     InsetBox["538", {0.863419411, 4.42907954}, {-1, 1}], 
     InsetBox["539", {3.67165799, 7.85957758}, {-1, 1}], 
     InsetBox["540", {3.67647059, 8.}, {-1, 1}], 
     InsetBox["541", {3.66684538, 7.71915516}, {-1, 1}], 
     InsetBox["542", {3.09061627, 6.00337242}, {-1, 1}], 
     InsetBox["543", {2.26599948, 5.10015114}, {-1, 1}], 
     InsetBox["544", {3.49992419, 6.83354508}, {-1, 1}], 
     InsetBox["545", {3.66690609, 7.57702481}, {-1, 1}], 
     InsetBox["546", {2.13113882, 4.96765283}, {-1, 1}], 
     InsetBox["547", {3.26193197, 6.23483691}, {-1, 1}], 
     InsetBox["548", {1.00813922, 4.42992332}, {-1, 1}], 
     InsetBox["549", {3.66696679, 7.43489445}, {-1, 1}], 
     InsetBox["550", {0., 4.28571429}, {-1, 1}], 
     InsetBox["551", {1.713232, 4.70224996}, {-1, 1}], 
     InsetBox["552", {1.43563357, 4.57106418}, {-1, 1}], 
     InsetBox["553", {0.144012417, 4.28380227}, {-1, 1}], 
     InsetBox["554", {3.48294111, 6.67593323}, {-1, 1}], 
     InsetBox["555", {0.288024834, 4.28189025}, {-1, 1}], 
     InsetBox["556", {3.22626217, 6.12234016}, {-1, 1}], 
     InsetBox["557", {3.66741382, 7.28711275}, {-1, 1}], 
     InsetBox["558", {2.83096411, 5.5601973}, {-1, 1}], 
     InsetBox["559", {2.69084019, 5.40562619}, {-1, 1}], 
     InsetBox["560", {2.96654353, 5.72222967}, {-1, 1}], 
     InsetBox["561", {0.432578983, 4.28276937}, {-1, 1}], 
     InsetBox["562", {1.99120725, 4.83103642}, {-1, 1}], 
     InsetBox["563", {2.55029368, 5.25128523}, {-1, 1}], 
     InsetBox["564", {1.15285903, 4.4307671}, {-1, 1}], 
     InsetBox["565", {3.09796604, 5.87262346}, {-1, 1}], 
     InsetBox["566", {3.19059237, 6.00984342}, {-1, 1}], 
     InsetBox["567", {0.577133131, 4.28364849}, {-1, 1}], 
     InsetBox["568", {2.40953171, 5.10463948}, {-1, 1}], 
     InsetBox["569", {3.66786084, 7.13933106}, {-1, 1}], 
     InsetBox["570", {3.46595802, 6.51832137}, {-1, 1}], 
     InsetBox["571", {1.57747277, 4.56603576}, {-1, 1}], 
     InsetBox["572", {0.722430686, 4.28444996}, {-1, 1}], 
     InsetBox["573", {1.85564383, 4.69686821}, {-1, 1}], 
     InsetBox["574", {2.27188014, 4.96252774}, {-1, 1}], 
     InsetBox["575", {1.29759968, 4.42996455}, {-1, 1}], 
     InsetBox["576", {3.66142402, 6.98117594}, {-1, 1}], 
     InsetBox["577", {3.42983771, 6.36230061}, {-1, 1}], 
     InsetBox["578", {0.86772824, 4.28525144}, {-1, 1}], 
     InsetBox["579", {3.82013859, 7.85860998}, {-1, 1}], 
     InsetBox["580", {2.13448403, 4.82797038}, {-1, 1}], 
     InsetBox["581", {3.82352941, 8.}, {-1, 1}], 
     InsetBox["582", {3.81674777, 7.71721996}, {-1, 1}], 
     InsetBox["583", {2.97289593, 5.57930979}, {-1, 1}], 
     InsetBox["584", {2.83415697, 5.41780975}, {-1, 1}], 
     InsetBox["585", {3.3937174, 6.20627986}, {-1, 1}], 
     InsetBox["586", {3.34214293, 6.11129714}, {-1, 1}], 
     InsetBox["587", {3.10531581, 5.7418745}, {-1, 1}], 
     InsetBox["588", {3.65498719, 6.82302082}, {-1, 1}], 
     InsetBox["589", {3.81717147, 7.57438789}, {-1, 1}], 
     InsetBox["590", {2.69513687, 5.26199107}, {-1, 1}], 
     InsetBox["591", {3.29056847, 6.01631442}, {-1, 1}], 
     InsetBox["592", {3.21636158, 5.8974097}, {-1, 1}], 
     InsetBox["593", {1.71931197, 4.56100733}, {-1, 1}], 
     InsetBox["594", {1.01310166, 4.28683138}, {-1, 1}], 
     InsetBox["595", {1.44234032, 4.42916201}, {-1, 1}], 
     InsetBox["596", {2.55306395, 5.10912783}, {-1, 1}], 
     InsetBox["597", {0., 4.14285714}, {-1, 1}], 
     InsetBox["598", {3.81759517, 7.43155581}, {-1, 1}], 
     InsetBox["599", {0.145429244, 4.14190113}, {-1, 1}], 
     InsetBox["600", {1.99805566, 4.69148646}, {-1, 1}], 
     InsetBox["601", {0.290858488, 4.14094512}, {-1, 1}], 
     InsetBox["602", {3.63785716, 6.65415831}, {-1, 1}], 
     InsetBox["603", {2.41464089, 4.96421485}, {-1, 1}], 
     InsetBox["604", {0.436558598, 4.14138468}, {-1, 1}], 
     InsetBox["605", {3.81857741, 7.28305783}, {-1, 1}], 
     InsetBox["606", {1.15847509, 4.28841131}, {-1, 1}], 
     InsetBox["607", {0.582258707, 4.14182424}, {-1, 1}], 
     InsetBox["608", {2.27776081, 4.82490434}, {-1, 1}], 
     InsetBox["609", {1.58582472, 4.42509607}, {-1, 1}], 
     InsetBox["610", {1.86210802, 4.55647192}, {-1, 1}], 
     InsetBox["611", {3.81955966, 7.13455986}, {-1, 1}], 
     InsetBox["612", {3.62072712, 6.48529579}, {-1, 1}], 
     InsetBox["613", {0.72833052, 4.14222498}, {-1, 1}], 
     InsetBox["614", {3.2421308, 5.78497598}, {-1, 1}], 
     InsetBox["615", {3.33475712, 5.92219594}, {-1, 1}], 
     InsetBox["616", {2.97924834, 5.43638991}, {-1, 1}], 
     InsetBox["617", {3.11482776, 5.59842229}, {-1, 1}], 
     InsetBox["618", {1.30376108, 4.28783557}, {-1, 1}], 
     InsetBox["619", {2.83998006, 5.27269692}, {-1, 1}], 
     InsetBox["620", {2.14149232, 4.68840774}, {-1, 1}], 
     InsetBox["621", {2.69943354, 5.11835596}, {-1, 1}], 
     InsetBox["622", {3.81480493, 6.97352821}, {-1, 1}], 
     InsetBox["623", {0.874402333, 4.14262572}, {-1, 1}], 
     InsetBox["624", {3.57988112, 6.29936146}, {-1, 1}], 
     InsetBox["625", {3.43689612, 6.01781154}, {-1, 1}], 
     InsetBox["626", {2.55740165, 4.96590196}, {-1, 1}], 
     InsetBox["627", {3.96773088, 7.8578084}, {-1, 1}], 
     InsetBox["628", {3.97058824, 8.}, {-1, 1}], 
     InsetBox["629", {1.72930912, 4.42103014}, {-1, 1}], 
     InsetBox["630", {3.96487352, 7.7156168}, {-1, 1}], 
     InsetBox["631", {1.44904708, 4.28725983}, {-1, 1}], 
     InsetBox["632", {2.00490407, 4.5519365}, {-1, 1}], 
     InsetBox["633", {1.02051208, 4.14341569}, {-1, 1}], 
     InsetBox["634", {3.96638508, 7.57185235}, {-1, 1}], 
     InsetBox["635", {3.8100502, 6.81249656}, {-1, 1}], 
     InsetBox["636", {2.41975008, 4.82379021}, {-1, 1}], 
     InsetBox["637", {0., 4.}, {-1, 1}], 
     InsetBox["638", {0.146846071, 4.}, {-1, 1}], 
     InsetBox["639", {3.96789665, 7.42808789}, {-1, 1}], 
     InsetBox["640", {3.53903511, 6.11342714}, {-1, 1}], 
     InsetBox["641", {0.293692142, 4.}, {-1, 1}], 
     InsetBox["642", {3.37894578, 5.82807746}, {-1, 1}], 
     InsetBox["643", {0.440538213, 4.}, {-1, 1}], 
     InsetBox["644", {3.25834877, 5.63574144}, {-1, 1}], 
     InsetBox["645", {2.28492898, 4.68532901}, {-1, 1}], 
     InsetBox["646", {1.16662183, 4.14420566}, {-1, 1}], 
     InsetBox["647", {3.1243397, 5.45497008}, {-1, 1}], 
     InsetBox["648", {3.79277321, 6.63238338}, {-1, 1}], 
     InsetBox["649", {2.9861007, 5.28825836}, {-1, 1}], 
     InsetBox["650", {3.97002529, 7.27832652}, {-1, 1}], 
     InsetBox["651", {1.87255887, 4.41748536}, {-1, 1}], 
     InsetBox["652", {0.587384283, 4.}, {-1, 1}], 
     InsetBox["653", {1.59417667, 4.28415639}, {-1, 1}], 
     InsetBox["654", {2.84580314, 5.12758408}, {-1, 1}], 
     InsetBox["655", {2.70412378, 4.97252931}, {-1, 1}], 
     InsetBox["656", {2.14850061, 4.54884509}, {-1, 1}], 
     InsetBox["657", {3.97215393, 7.12856514}, {-1, 1}], 
     InsetBox["658", {0.734230354, 4.}, {-1, 1}], 
     InsetBox["659", {1.31268786, 4.14391779}, {-1, 1}], 
     InsetBox["660", {3.77549622, 6.45227021}, {-1, 1}], 
     InsetBox["661", {2.56173935, 4.82267609}, {-1, 1}], 
     InsetBox["662", {0.881076425, 4.}, {-1, 1}], 
     InsetBox["663", {3.5316493, 5.92432594}, {-1, 1}], 
     InsetBox["664", {3.970355, 6.96630826}, {-1, 1}], 
     InsetBox["665", {1.73930627, 4.28105296}, {-1, 1}], 
     InsetBox["666", {2.4275809, 4.68370033}, {-1, 1}], 
     InsetBox["667", {2.01580862, 4.41394058}, {-1, 1}], 
     InsetBox["668", {4.11764706, 8.}, {-1, 1}], 
     InsetBox["669", {4.11532316, 7.85700682}, {-1, 1}], 
     InsetBox["670", {3.40186978, 5.67306059}, {-1, 1}], 
     InsetBox["671", {4.11299926, 7.71401364}, {-1, 1}], 
     InsetBox["672", {1.45875389, 4.14362991}, {-1, 1}], 
     InsetBox["673", {3.72992452, 6.23642232}, {-1, 1}], 
     InsetBox["674", {3.27456674, 5.4865069}, {-1, 1}], 
     InsetBox["675", {1.0279225, 4.}, {-1, 1}], 
     InsetBox["676", {3.13222135, 5.30381981}, {-1, 1}], 
     InsetBox["677", {4.1155987, 7.56931681}, {-1, 1}], 
     InsetBox["678", {2.99295307, 5.14012681}, {-1, 1}], 
     InsetBox["679", {3.96855607, 6.80405137}, {-1, 1}], 
     InsetBox["680", {2.29209715, 4.54575368}, {-1, 1}], 
     InsetBox["681", {2.85084591, 4.97915665}, {-1, 1}], 
     InsetBox["682", {4.11819814, 7.42461997}, {-1, 1}], 
     InsetBox["683", {1.17476857, 4.}, {-1, 1}], 
     InsetBox["684", {1.88300972, 4.27849881}, {-1, 1}], 
     InsetBox["685", {2.70881401, 4.82670266}, {-1, 1}], 
     InsetBox["686", {1.60474173, 4.1420782}, {-1, 1}], 
     InsetBox["687", {3.68435283, 6.02057443}, {-1, 1}], 
     InsetBox["688", {4.12147317, 7.2735952}, {-1, 1}], 
     InsetBox["689", {2.15963011, 4.41091316}, {-1, 1}], 
     InsetBox["690", {3.95917546, 6.62422508}, {-1, 1}], 
     InsetBox["691", {2.57023281, 4.68207165}, {-1, 1}], 
     InsetBox["692", {1.32161464, 4.}, {-1, 1}], 
     InsetBox["693", {4.1247482, 7.12257043}, {-1, 1}], 
     InsetBox["694", {3.56099123, 5.73848815}, {-1, 1}], 
     InsetBox["695", {2.43541172, 4.54361045}, {-1, 1}], 
     InsetBox["696", {3.42479379, 5.51804372}, {-1, 1}], 
     InsetBox["697", {3.28399764, 5.32994238}, {-1, 1}], 
     InsetBox["698", {1.75072956, 4.14052648}, {-1, 1}], 
     InsetBox["699", {3.14010299, 5.15266954}, {-1, 1}], 
     InsetBox["700", {2.02671317, 4.27594466}, {-1, 1}], 
     InsetBox["701", {3.94979485, 6.44439879}, {-1, 1}], 
     InsetBox["702", {3.00034702, 4.98962442}, {-1, 1}], 
     InsetBox["703", {4.12590507, 6.9590883}, {-1, 1}], 
     InsetBox["704", {1.46846071, 4.}, {-1, 1}], 
     InsetBox["705", {4.26470588, 8.}, {-1, 1}], 
     InsetBox["706", {2.85588867, 4.83072923}, {-1, 1}], 
     InsetBox["707", {4.26394099, 7.8563936}, {-1, 1}], 
     InsetBox["708", {2.30345161, 4.40788573}, {-1, 1}], 
     InsetBox["709", {4.2631761, 7.7127872}, {-1, 1}], 
     InsetBox["710", {2.71805973, 4.68343767}, {-1, 1}], 
     InsetBox["711", {4.26650098, 7.56762087}, {-1, 1}], 
     InsetBox["712", {4.12706195, 6.79560618}, {-1, 1}], 
     InsetBox["713", {1.89600432, 4.1392494}, {-1, 1}], 
     InsetBox["714", {3.92541868, 6.2345899}, {-1, 1}], 
     InsetBox["715", {4.26982586, 7.42245453}, {-1, 1}], 
     InsetBox["716", {2.17075962, 4.27298122}, {-1, 1}], 
     InsetBox["717", {1.61530678, 4.}, {-1, 1}], 
     InsetBox["718", {2.57872628, 4.54146721}, {-1, 1}], 
     InsetBox["719", {3.72011268, 5.80391571}, {-1, 1}], 
     InsetBox["720", {3.43577393, 5.35606496}, {-1, 1}], 
     InsetBox["721", {4.27461812, 7.27101942}, {-1, 1}], 
     InsetBox["722", {3.29342853, 5.17337787}, {-1, 1}], 
     InsetBox["723", {3.59033316, 5.55265036}, {-1, 1}], 
     InsetBox["724", {2.44765034, 4.40652043}, {-1, 1}], 
     InsetBox["725", {3.14984814, 5.00009219}, {-1, 1}], 
     InsetBox["726", {4.12557771, 6.61606677}, {-1, 1}], 
     InsetBox["727", {3.00774098, 4.83912204}, {-1, 1}], 
     InsetBox["728", {2.04127908, 4.13797233}, {-1, 1}], 
     InsetBox["729", {4.27941038, 7.11958431}, {-1, 1}], 
     InsetBox["730", {1.76215285, 4.}, {-1, 1}], 
     InsetBox["731", {3.90104252, 6.02478102}, {-1, 1}], 
     InsetBox["732", {2.86588664, 4.68480368}, {-1, 1}], 
     InsetBox["733", {2.31480606, 4.27001778}, {-1, 1}], 
     InsetBox["734", {2.72730544, 4.54017267}, {-1, 1}], 
     InsetBox["735", {4.28356265, 6.95631504}, {-1, 1}], 
     InsetBox["736", {4.12409348, 6.43652736}, {-1, 1}], 
     InsetBox["737", {4.41176471, 8.}, {-1, 1}], 
     InsetBox["738", {4.41255883, 7.85578038}, {-1, 1}], 
     InsetBox["739", {4.41335295, 7.71156076}, {-1, 1}], 
     InsetBox["740", {2.59184907, 4.40515513}, {-1, 1}], 
     InsetBox["741", {1.90899892, 4.}, {-1, 1}], 
     InsetBox["742", {4.41740326, 7.56592492}, {-1, 1}], 
     InsetBox["743", {2.18672534, 4.13649061}, {-1, 1}], 
     InsetBox["744", {3.44675407, 5.1940862}, {-1, 1}], 
     InsetBox["745", {3.3017211, 5.02056516}, {-1, 1}], 
     InsetBox["746", {3.59727646, 5.37925709}, {-1, 1}], 
     InsetBox["747", {4.28771492, 6.79304578}, {-1, 1}], 
     InsetBox["748", {4.42145357, 7.42028909}, {-1, 1}], 
     InsetBox["749", {3.15959329, 4.84751485}, {-1, 1}], 
     InsetBox["750", {3.75587253, 5.587257}, {-1, 1}], 
     InsetBox["751", {2.45988896, 4.26943041}, {-1, 1}], 
     InsetBox["752", {4.12091284, 6.23275749}, {-1, 1}], 
     InsetBox["753", {3.02365497, 4.68589812}, {-1, 1}], 
     InsetBox["754", {4.42776307, 7.26844364}, {-1, 1}], 
     InsetBox["755", {3.92625485, 5.80874023}, {-1, 1}], 
     InsetBox["756", {2.05584499, 4.}, {-1, 1}], 
     InsetBox["757", {2.87588461, 4.53887814}, {-1, 1}], 
     InsetBox["758", {4.29220655, 6.61677088}, {-1, 1}], 
     InsetBox["759", {2.3321716, 4.13500889}, {-1, 1}], 
     InsetBox["760", {2.73567714, 4.4032689}, {-1, 1}], 
     InsetBox["761", {4.43407257, 7.11659819}, {-1, 1}], 
     InsetBox["762", {3.45359406, 5.04103813}, {-1, 1}], 
     InsetBox["763", {2.60497186, 4.26884305}, {-1, 1}], 
     InsetBox["764", {3.31001367, 4.86775246}, {-1, 1}], 
     InsetBox["765", {4.55882353, 8.}, {-1, 1}], 
     InsetBox["766", {3.60421976, 5.20586383}, {-1, 1}], 
     InsetBox["767", {4.44122023, 6.95354179}, {-1, 1}], 
     InsetBox["768", {4.56061073, 7.85530221}, {-1, 1}], 
     InsetBox["769", {4.11773221, 6.02898761}, {-1, 1}], 
     InsetBox["770", {2.20269106, 4.}, {-1, 1}], 
     InsetBox["771", {3.75877899, 5.40244923}, {-1, 1}], 
     InsetBox["772", {4.29669819, 6.44049598}, {-1, 1}], 
     InsetBox["773", {4.56239793, 7.71060441}, {-1, 1}], 
     InsetBox["774", {4.56781673, 7.56492552}, {-1, 1}], 
     InsetBox["775", {2.47813608, 4.13471521}, {-1, 1}], 
     InsetBox["776", {3.1814233, 4.68699257}, {-1, 1}], 
     InsetBox["777", {2.87950522, 4.40138267}, {-1, 1}], 
     InsetBox["778", {4.44836789, 6.79048538}, {-1, 1}], 
     InsetBox["779", {4.57323554, 7.41924663}, {-1, 1}], 
     InsetBox["780", {3.03956896, 4.53267421}, {-1, 1}], 
     InsetBox["781", {3.95146718, 5.59269944}, {-1, 1}], 
     InsetBox["782", {2.74404884, 4.26636513}, {-1, 1}], 
     InsetBox["783", {4.58082173, 7.26819074}, {-1, 1}], 
     InsetBox["784", {2.34953713, 4.}, {-1, 1}], 
     InsetBox["785", {4.30567638, 6.24104277}, {-1, 1}], 
     InsetBox["786", {3.46043406, 4.88799007}, {-1, 1}], 
     InsetBox["787", {3.60563292, 5.04950302}, {-1, 1}], 
     InsetBox["788", {4.45883539, 6.61747499}, {-1, 1}], 
     InsetBox["789", {2.62410057, 4.13442152}, {-1, 1}], 
     InsetBox["790", {4.58840792, 7.11713484}, {-1, 1}], 
     InsetBox["791", {3.3276668, 4.71812867}, {-1, 1}], 
     InsetBox["792", {4.13239702, 5.81356474}, {-1, 1}], 
     InsetBox["793", {3.76168545, 5.21764145}, {-1, 1}], 
     InsetBox["794", {4.70588235, 8.}, {-1, 1}], 
     InsetBox["795", {3.027951, 4.39495844}, {-1, 1}], 
     InsetBox["796", {4.70866263, 7.85482404}, {-1, 1}], 
     InsetBox["797", {4.59705447, 6.95750691}, {-1, 1}], 
     InsetBox["798", {2.4963832, 4.}, {-1, 1}], 
     InsetBox["799", {2.88312583, 4.26388721}, {-1, 1}], 
     InsetBox["800", {3.94012085, 5.40054445}, {-1, 1}], 
     InsetBox["801", {4.71144291, 7.70964807}, {-1, 1}], 
     InsetBox["802", {3.20325331, 4.52647029}, {-1, 1}], 
     InsetBox["803", {4.46930289, 6.44446459}, {-1, 1}], 
     InsetBox["804", {4.31465458, 6.04158956}, {-1, 1}], 
     InsetBox["805", {4.71823021, 7.56392612}, {-1, 1}], 
     InsetBox["806", {2.7615104, 4.13318256}, {-1, 1}], 
     InsetBox["807", {3.4739103, 4.74926478}, {-1, 1}], 
     InsetBox["808", {4.60570102, 6.79787898}, {-1, 1}], 
     InsetBox["809", {3.60704608, 4.89314221}, {-1, 1}], 
     InsetBox["810", {4.7250175, 7.41820418}, {-1, 1}], 
     InsetBox["811", {3.75767178, 5.0579679}, {-1, 1}], 
     InsetBox["812", {4.73388039, 7.26793783}, {-1, 1}], 
     InsetBox["813", {3.34531993, 4.56850489}, {-1, 1}], 
     InsetBox["814", {4.14706183, 5.59814188}, {-1, 1}], 
     InsetBox["815", {2.64322928, 4.}, {-1, 1}], 
     InsetBox["816", {3.01633304, 4.25724268}, {-1, 1}], 
     InsetBox["817", {3.17639678, 4.38853422}, {-1, 1}], 
     InsetBox["818", {4.61840486, 6.63080788}, {-1, 1}], 
     InsetBox["819", {3.92877452, 5.20838946}, {-1, 1}], 
     InsetBox["820", {4.49043992, 6.24932805}, {-1, 1}], 
     InsetBox["821", {4.74274328, 7.11767149}, {-1, 1}], 
     InsetBox["822", {2.89892024, 4.1319436}, {-1, 1}], 
     InsetBox["823", {3.28533505, 4.45294534}, {-1, 1}], 
     InsetBox["824", {4.85294118, 8.}, {-1, 1}], 
     InsetBox["825", {3.61238488, 4.75568112}, {-1, 1}], 
     InsetBox["826", {4.85712379, 7.85449538}, {-1, 1}], 
     InsetBox["827", {3.48738655, 4.61053949}, {-1, 1}], 
     InsetBox["828", {4.75288872, 6.96147203}, {-1, 1}], 
     InsetBox["829", {4.34912275, 5.81509098}, {-1, 1}], 
     InsetBox["830", {3.7536581, 4.89829435}, {-1, 1}], 
     InsetBox["831", {4.86130641, 7.70899076}, {-1, 1}], 
     InsetBox["832", {2.77897196, 4.}, {-1, 1}], 
     InsetBox["833", {4.12146272, 5.39863967}, {-1, 1}], 
     InsetBox["834", {4.6311087, 6.46373678}, {-1, 1}], 
     InsetBox["835", {4.8692363, 7.56311169}, {-1, 1}], 
     InsetBox["836", {3.39896366, 4.4795568}, {-1, 1}], 
     InsetBox["837", {3.14954026, 4.25059815}, {-1, 1}], 
     InsetBox["838", {3.91358074, 5.04583543}, {-1, 1}], 
     InsetBox["839", {3.27035236, 4.34162068}, {-1, 1}], 
     InsetBox["840", {4.76303416, 6.80527258}, {-1, 1}], 
     InsetBox["841", {4.87716619, 7.41723261}, {-1, 1}], 
     InsetBox["842", {4.51157695, 6.0541915}, {-1, 1}], 
     InsetBox["843", {3.02685732, 4.12862134}, {-1, 1}], 
     InsetBox["844", {4.88627899, 7.26804554}, {-1, 1}], 
     InsetBox["845", {3.36741679, 4.3794204}, {-1, 1}], 
     InsetBox["846", {2.91471465, 4.}, {-1, 1}], 
     InsetBox["847", {3.61772368, 4.61822003}, {-1, 1}], 
     InsetBox["848", {3.51259227, 4.50616826}, {-1, 1}], 
     InsetBox["849", {3.75085946, 4.76209746}, {-1, 1}], 
     InsetBox["850", {4.65501452, 6.2842672}, {-1, 1}], 
     InsetBox["851", {4.0958636, 5.19913746}, {-1, 1}], 
     InsetBox["852", {4.77797433, 6.64414077}, {-1, 1}], 
     InsetBox["853", {4.8953918, 7.11885848}, {-1, 1}], 
     InsetBox["854", {3.25536966, 4.23029601}, {-1, 1}], 
     InsetBox["855", {3.89838696, 4.8832814}, {-1, 1}], 
     InsetBox["856", {3.45260739, 4.39060871}, {-1, 1}], 
     InsetBox["857", {3.1547944, 4.12529907}, {-1, 1}], 
     InsetBox["858", {5., 8.}, {-1, 1}], 
     InsetBox["859", {4.38359093, 5.5885924}, {-1, 1}], 
     InsetBox["860", {3.36430793, 4.29470714}, {-1, 1}], 
     InsetBox["861", {5.00558495, 7.85416673}, {-1, 1}], 
     InsetBox["862", {4.90557886, 6.96604811}, {-1, 1}], 
     InsetBox["863", {5.01116991, 7.70833345}, {-1, 1}], 
     InsetBox["864", {3.0373816, 4.}, {-1, 1}], 
     InsetBox["865", {4.79291451, 6.48300896}, {-1, 1}], 
     InsetBox["866", {4.06948971, 5.03370295}, {-1, 1}], 
     InsetBox["867", {3.62998632, 4.50931463}, {-1, 1}], 
     InsetBox["868", {5.02024239, 7.56229725}, {-1, 1}], 
     InsetBox["869", {3.74806082, 4.62590058}, {-1, 1}], 
     InsetBox["870", {3.53779799, 4.40179702}, {-1, 1}], 
     InsetBox["871", {4.67892035, 6.10479762}, {-1, 1}], 
     InsetBox["872", {4.91576591, 6.81323774}, {-1, 1}], 
     InsetBox["873", {4.32526553, 5.37512935}, {-1, 1}], 
     InsetBox["874", {4.56584848, 5.81661722}, {-1, 1}], 
     InsetBox["875", {5.02931487, 7.41626104}, {-1, 1}], 
     InsetBox["876", {3.45519041, 4.29905423}, {-1, 1}], 
     InsetBox["877", {3.36119906, 4.20999388}, {-1, 1}], 
     InsetBox["878", {3.88681056, 4.74467663}, {-1, 1}], 
     InsetBox["879", {3.26287353, 4.11514801}, {-1, 1}], 
     InsetBox["880", {5.03867759, 7.26815325}, {-1, 1}], 
     InsetBox["881", {3.16004855, 4.}, {-1, 1}], 
     InsetBox["882", {4.81958912, 6.31920635}, {-1, 1}], 
     InsetBox["883", {4.92929441, 6.65721816}, {-1, 1}], 
     InsetBox["884", {4.04311582, 4.86826845}, {-1, 1}], 
     InsetBox["885", {3.74738037, 4.51246101}, {-1, 1}], 
     InsetBox["886", {3.64224895, 4.40040923}, {-1, 1}], 
     InsetBox["887", {3.5460729, 4.30340131}, {-1, 1}], 
     InsetBox["888", {5.04804032, 7.12004546}, {-1, 1}], 
     InsetBox["889", {4.26694014, 5.1616663}, {-1, 1}], 
     InsetBox["890", {3.45777343, 4.20749974}, {-1, 1}], 
     InsetBox["891", {5.15, 8.}, {-1, 1}], 
     InsetBox["892", {3.37095267, 4.10499694}, {-1, 1}], 
     InsetBox["893", {3.87523416, 4.60607186}, {-1, 1}], 
     InsetBox["894", {5.15663722, 7.85372365}, {-1, 1}], 
     InsetBox["895", {5.05826899, 6.97062418}, {-1, 1}], 
     InsetBox["896", {4.9428229, 6.50119859}, {-1, 1}], 
     InsetBox["897", {3.27037741, 4.}, {-1, 1}], 
     InsetBox["898", {5.16327444, 7.7074473}, {-1, 1}], 
     InsetBox["899", {4.73495527, 5.91155423}, {-1, 1}], 
     InsetBox["900", {4.22438254, 4.99524997}, {-1, 1}], 
     InsetBox["901", {4.84626374, 6.15540374}, {-1, 1}], 
     InsetBox["902", {4.02276166, 4.72725579}, {-1, 1}], 
     InsetBox["903", {5.17215435, 7.56167541}, {-1, 1}], 
     InsetBox["904", {3.64594666, 4.30125777}, {-1, 1}], 
     InsetBox["905", {3.74669991, 4.39902143}, {-1, 1}], 
     InsetBox["906", {3.55434781, 4.20500561}, {-1, 1}], 
     InsetBox["907", {5.06849767, 6.8212029}, {-1, 1}], 
     InsetBox["908", {5.18103427, 7.41590353}, {-1, 1}], 
     InsetBox["909", {4.62012002, 5.57904293}, {-1, 1}], 
     InsetBox["910", {3.86329203, 4.49508657}, {-1, 1}], 
     InsetBox["911", {3.46864551, 4.10374987}, {-1, 1}], 
     InsetBox["912", {4.96315189, 6.34674602}, {-1, 1}], 
     InsetBox["913", {3.38070627, 4.}, {-1, 1}], 
     InsetBox["914", {5.19042858, 7.26922474}, {-1, 1}], 
     InsetBox["915", {4.52906835, 5.35161903}, {-1, 1}], 
     InsetBox["916", {4.18182495, 4.82883364}, {-1, 1}], 
     InsetBox["917", {5.08061448, 6.67029555}, {-1, 1}], 
     InsetBox["918", {4.00240749, 4.58624314}, {-1, 1}], 
     InsetBox["919", {3.74582041, 4.29911422}, {-1, 1}], 
     InsetBox["920", {3.64964436, 4.20210631}, {-1, 1}], 
     InsetBox["921", {5.19982289, 7.12254595}, {-1, 1}], 
     InsetBox["922", {3.85134991, 4.38410128}, {-1, 1}], 
     InsetBox["923", {3.56633835, 4.1025028}, {-1, 1}], 
     InsetBox["924", {4.43801668, 5.12419514}, {-1, 1}], 
     InsetBox["925", {4.90406206, 6.00649123}, {-1, 1}], 
     InsetBox["926", {5.3, 8.}, {-1, 1}], 
     InsetBox["927", {4.98348087, 6.19229346}, {-1, 1}], 
     InsetBox["928", {3.47951758, 4.}, {-1, 1}], 
     InsetBox["929", {5.09273129, 6.51938821}, {-1, 1}], 
     InsetBox["930", {4.7909902, 5.71831083}, {-1, 1}], 
     InsetBox["931", {5.20937995, 6.97395865}, {-1, 1}], 
     InsetBox["932", {5.30768949, 7.85328057}, {-1, 1}], 
     InsetBox["933", {3.9792037, 4.47771213}, {-1, 1}], 
     InsetBox["934", {4.15721491, 4.68232113}, {-1, 1}], 
     InsetBox["935", {5.31537898, 7.70656115}, {-1, 1}], 
     InsetBox["936", {4.37927538, 4.95679699}, {-1, 1}], 
     InsetBox["937", {3.74494092, 4.19920701}, {-1, 1}], 
     InsetBox["938", {5.32406632, 7.56105358}, {-1, 1}], 
     InsetBox["939", {3.84314141, 4.28747736}, {-1, 1}], 
     InsetBox["940", {3.65806665, 4.10105315}, {-1, 1}], 
     InsetBox["941", {5.21893701, 6.82537135}, {-1, 1}], 
     InsetBox["942", {5.10671465, 6.37428569}, {-1, 1}], 
     InsetBox["943", {5.33275367, 7.41554601}, {-1, 1}], 
     InsetBox["944", {3.5783289, 4.}, {-1, 1}], 
     InsetBox["945", {3.95599991, 4.36918113}, {-1, 1}], 
     InsetBox["946", {5.01886671, 6.06442893}, {-1, 1}], 
     InsetBox["947", {4.32053408, 4.78939884}, {-1, 1}], 
     InsetBox["948", {5.34217957, 7.27029622}, {-1, 1}], 
     InsetBox["949", {4.13260487, 4.53580863}, {-1, 1}], 
     InsetBox["950", {5.22905212, 6.67594618}, {-1, 1}], 
     InsetBox["951", {4.96186038, 5.85757873}, {-1, 1}], 
     InsetBox["952", {3.8349329, 4.19085343}, {-1, 1}], 
     InsetBox["953", {3.74979496, 4.0996035}, {-1, 1}], 
     InsetBox["954", {5.12069801, 6.22918317}, {-1, 1}], 
     InsetBox["955", {3.9404624, 4.27584049}, {-1, 1}], 
     InsetBox["956", {5.35160547, 7.12504643}, {-1, 1}], 
     InsetBox["957", {4.09065336, 4.43507847}, {-1, 1}], 
     InsetBox["958", {3.66648895, 4.}, {-1, 1}], 
     InsetBox["959", {5.23916723, 6.526521}, {-1, 1}], 
     InsetBox["960", {5.45, 8.}, {-1, 1}], 
     InsetBox["961", {4.29166816, 4.63738647}, {-1, 1}], 
     InsetBox["962", {5.36049091, 6.97729311}, {-1, 1}], 
     InsetBox["963", {4.58090933, 5.03126902}, {-1, 1}], 
     InsetBox["964", {5.05425254, 5.9365644}, {-1, 1}], 
     InsetBox["965", {5.45733031, 7.85357261}, {-1, 1}], 
     InsetBox["966", {4.04870185, 4.33434832}, {-1, 1}], 
     InsetBox["967", {4.70948006, 5.22964413}, {-1, 1}], 
     InsetBox["968", {5.13367135, 6.12236663}, {-1, 1}], 
     InsetBox["969", {3.83398605, 4.09542671}, {-1, 1}], 
     InsetBox["970", {5.46466062, 7.70714522}, {-1, 1}], 
     InsetBox["971", {3.92492489, 4.18249985}, {-1, 1}], 
     InsetBox["972", {4.50808433, 4.88851559}, {-1, 1}], 
     InsetBox["973", {4.83805078, 5.42801924}, {-1, 1}], 
     InsetBox["974", {3.754649, 4.}, {-1, 1}], 
     InsetBox["975", {5.47294412, 7.56159255}, {-1, 1}], 
     InsetBox["976", {5.24695327, 6.38097334}, {-1, 1}], 
     InsetBox["977", {5.36937636, 6.8295398}, {-1, 1}], 
     InsetBox["978", {4.43525932, 4.74576216}, {-1, 1}], 
     InsetBox["979", {4.02576942, 4.25027032}, {-1, 1}], 
     InsetBox["980", {5.48122762, 7.41603988}, {-1, 1}], 
     InsetBox["981", {5.1466447, 6.01555008}, {-1, 1}], 
     InsetBox["982", {4.96941041, 5.59953373}, {-1, 1}], 
     InsetBox["983", {4.26280225, 4.48537411}, {-1, 1}], 
     InsetBox["984", {3.91817713, 4.09124992}, {-1, 1}], 
     InsetBox["985", {5.37748976, 6.6815968}, {-1, 1}], 
     InsetBox["986", {4.20210302, 4.39244481}, {-1, 1}], 
     InsetBox["987", {5.49097308, 7.27061689}, {-1, 1}], 
     InsetBox["988", {3.83303919, 4.}, {-1, 1}], 
     InsetBox["989", {4.00283698, 4.16619233}, {-1, 1}], 
     InsetBox["990", {5.2547393, 6.23542568}, {-1, 1}], 
     InsetBox["991", {4.1414038, 4.2995155}, {-1, 1}], 
     InsetBox["992", {4.40359001, 4.6146487}, {-1, 1}], 
     InsetBox["993", {5.10077005, 5.77104822}, {-1, 1}], 
     InsetBox["994", {5.50071854, 7.12519389}, {-1, 1}], 
     InsetBox["995", {4.11107644, 4.22470016}, {-1, 1}], 
     InsetBox["996", {5.38560317, 6.5336538}, {-1, 1}], 
     InsetBox["997", {5.25403484, 6.11339019}, {-1, 1}], 
     InsetBox["998", {3.99187949, 4.08309617}, {-1, 1}], 
     InsetBox["999", {5.17705021, 5.88120147}, {-1, 1}], 
     InsetBox["1000", {3.91142938, 4.}, {-1, 1}], 
     InsetBox["1001", {5.6, 8.}, {-1, 1}], 
     InsetBox["1002", {5.50917559, 6.97778545}, {-1, 1}], 
     InsetBox["1003", {5.60697114, 7.85386465}, {-1, 1}], 
     InsetBox["1004", {4.08074908, 4.14988482}, {-1, 1}], 
     InsetBox["1005", {4.3719207, 4.48353523}, {-1, 1}], 
     InsetBox["1006", {4.54998456, 4.70212548}, {-1, 1}], 
     InsetBox["1007", {5.61394227, 7.7077293}, {-1, 1}], 
     InsetBox["1008", {4.63689327, 4.82023419}, {-1, 1}], 
     InsetBox["1009", {5.38719189, 6.38766099}, {-1, 1}], 
     InsetBox["1010", {5.25333038, 5.99135471}, {-1, 1}], 
     InsetBox["1011", {4.72380199, 4.9383429}, {-1, 1}], 
     InsetBox["1012", {4.31442615, 4.3830057}, {-1, 1}], 
     InsetBox["1013", {4.25847355, 4.31583783}, {-1, 1}], 
     InsetBox["1014", {4.20252094, 4.24866997}, {-1, 1}], 
     InsetBox["1015", {5.62182192, 7.56213153}, {-1, 1}], 
     InsetBox["1016", {5.51763265, 6.83037702}, {-1, 1}], 
     InsetBox["1017", {3.980922, 4.}, {-1, 1}], 
     InsetBox["1018", {4.17132444, 4.18859526}, {-1, 1}], 
     InsetBox["1019", {4.06558184, 4.07494241}, {-1, 1}], 
     InsetBox["1020", {4.51551185, 4.59191092}, {-1, 1}], 
     InsetBox["1021", {5.62970157, 7.41653375}, {-1, 1}], 
     InsetBox["1022", {4.14012794, 4.12852055}, {-1, 1}], 
     InsetBox["1023", {5.3887806, 6.24166818}, {-1, 1}], 
     InsetBox["1024", {5.52476688, 6.68303452}, {-1, 1}], 
     InsetBox["1025", {4.88989177, 5.10766922}, {-1, 1}], 
     InsetBox["1026", {5.63976659, 7.27093755}, {-1, 1}], 
     InsetBox["1027", {4.40042841, 4.38921404}, {-1, 1}], 
     InsetBox["1028", {4.05041461, 4.}, {-1, 1}], 
     InsetBox["1029", {4.48103915, 4.48169635}, {-1, 1}], 
     InsetBox["1030", {5.37439833, 6.10441376}, {-1, 1}], 
     InsetBox["1031", {4.61227378, 4.65059467}, {-1, 1}], 
     InsetBox["1032", {4.12599122, 4.06426028}, {-1, 1}], 
     InsetBox["1033", {4.26363807, 4.19782445}, {-1, 1}], 
     InsetBox["1034", {5.6498316, 7.12534135}, {-1, 1}], 
     InsetBox["1035", {4.23157244, 4.15249037}, {-1, 1}], 
     InsetBox["1036", {5.53190112, 6.53569203}, {-1, 1}], 
     InsetBox["1037", {4.31484407, 4.23923086}, {-1, 1}], 
     InsetBox["1038", {4.19950681, 4.10715629}, {-1, 1}], 
     InsetBox["1039", {5.29984789, 5.82583853}, {-1, 1}], 
     InsetBox["1040", {5.23967971, 5.68451772}, {-1, 1}], 
     InsetBox["1041", {4.70362089, 4.72661353}, {-1, 1}], 
     InsetBox["1042", {4.58355389, 4.55990339}, {-1, 1}], 
     InsetBox["1043", {5.14783063, 5.48075664}, {-1, 1}], 
     InsetBox["1044", {5.36001606, 5.96715933}, {-1, 1}], 
     InsetBox["1045", {4.36605006, 4.28063728}, {-1, 1}], 
     InsetBox["1046", {4.1118545, 4.}, {-1, 1}], 
     InsetBox["1047", {5.05598155, 5.27699555}, {-1, 1}], 
     InsetBox["1048", {5.65786028, 6.9782778}, {-1, 1}], 
     InsetBox["1049", {5.75, 8.}, {-1, 1}], 
     InsetBox["1050", {4.1864006, 4.05357814}, {-1, 1}], 
     InsetBox["1051", {4.48643067, 4.39542238}, {-1, 1}], 
     InsetBox["1052", {5.7561577, 7.8538879}, {-1, 1}], 
     InsetBox["1053", {5.53326601, 6.38926285}, {-1, 1}], 
     InsetBox["1054", {4.554834, 4.4692121}, {-1, 1}], 
     InsetBox["1055", {4.794968, 4.80263239}, {-1, 1}], 
     InsetBox["1056", {4.23721644, 4.08921133}, {-1, 1}], 
     InsetBox["1057", {5.76231541, 7.7077758}, {-1, 1}], 
     InsetBox["1058", {4.27001488, 4.1195923}, {-1, 1}], 
     InsetBox["1059", {4.30281331, 4.14997328}, {-1, 1}], 
     InsetBox["1060", {4.42893613, 4.29489285}, {-1, 1}], 
     InsetBox["1061", {4.17329439, 4.}, {-1, 1}], 
     InsetBox["1062", {4.67456301, 4.59906386}, {-1, 1}], 
     InsetBox["1063", {5.66588895, 6.83121424}, {-1, 1}], 
     InsetBox["1064", {5.76996003, 7.56207718}, {-1, 1}], 
     InsetBox["1065", {4.23235113, 4.04460566}, {-1, 1}], 
     InsetBox["1066", {4.35440361, 4.1776965}, {-1, 1}], 
     InsetBox["1067", {4.65159593, 4.52789586}, {-1, 1}], 
     InsetBox["1068", {4.27492608, 4.07126637}, {-1, 1}], 
     InsetBox["1069", {5.5346309, 6.24283367}, {-1, 1}], 
     InsetBox["1070", {5.77760466, 7.41637856}, {-1, 1}], 
     InsetBox["1071", {4.55078521, 4.38945324}, {-1, 1}], 
     InsetBox["1072", {4.49182219, 4.30914841}, {-1, 1}], 
     InsetBox["1073", {4.40599391, 4.20541972}, {-1, 1}], 
     InsetBox["1074", {4.22748582, 4.}, {-1, 1}], 
     InsetBox["1075", {4.30845731, 4.08669424}, {-1, 1}], 
     InsetBox["1076", {5.672044, 6.68447225}, {-1, 1}], 
     InsetBox["1077", {4.95567823, 4.93980274}, {-1, 1}], 
     InsetBox["1078", {4.62862886, 4.45672786}, {-1, 1}], 
     InsetBox["1079", {4.27830166, 4.03563318}, {-1, 1}], 
     InsetBox["1080", {5.78795679, 7.26995321}, {-1, 1}], 
     InsetBox["1081", {4.34198854, 4.10212212}, {-1, 1}], 
     InsetBox["1082", {5.52032648, 6.10052049}, {-1, 1}], 
     InsetBox["1083", {4.77034851, 4.63299287}, {-1, 1}], 
     InsetBox["1084", {4.45637908, 4.22688774}, {-1, 1}], 
     InsetBox["1085", {4.54673641, 4.30969439}, {-1, 1}], 
     InsetBox["1086", {4.31891625, 4.04334712}, {-1, 1}], 
     InsetBox["1087", {4.28167725, 4.}, {-1, 1}], 
     InsetBox["1088", {4.73164713, 4.53965611}, {-1, 1}], 
     InsetBox["1089", {4.61513975, 4.38348411}, {-1, 1}], 
     InsetBox["1090", {5.67819906, 6.53773026}, {-1, 1}], 
     InsetBox["1091", {4.50676425, 4.24835576}, {-1, 1}], 
     InsetBox["1092", {5.79830892, 7.12352787}, {-1, 1}], 
     InsetBox["1093", {4.39396315, 4.11616214}, {-1, 1}], 
     InsetBox["1094", {5.50602205, 5.9582073}, {-1, 1}], 
     InsetBox["1095", {5.46005986, 5.81213534}, {-1, 1}], 
     InsetBox["1096", {4.35953084, 4.05106106}, {-1, 1}], 
     InsetBox["1097", {4.69294575, 4.44631936}, {-1, 1}], 
     InsetBox["1098", {5.11638846, 5.07697309}, {-1, 1}], 
     InsetBox["1099", {4.44593775, 4.13020216}, {-1, 1}], 
     InsetBox["1100", {4.3293752, 4.}, {-1, 1}], 
     InsetBox["1101", {5.41409766, 5.66606338}, {-1, 1}], 
     InsetBox["1102", {5.80716389, 6.97762889}, {-1, 1}], 
     InsetBox["1103", {4.5529987, 4.25143454}, {-1, 1}], 
     InsetBox["1104", {4.86613402, 4.66692188}, {-1, 1}], 
     InsetBox["1105", {4.60165064, 4.31024036}, {-1, 1}], 
     InsetBox["1106", {5.9, 8.}, {-1, 1}], 
     InsetBox["1107", {5.67934013, 6.39086471}, {-1, 1}], 
     InsetBox["1108", {4.48382203, 4.15888263}, {-1, 1}], 
     InsetBox["1109", {5.90534427, 7.85391115}, {-1, 1}], 
     InsetBox["1110", {4.40647062, 4.05808107}, {-1, 1}], 
     InsetBox["1111", {4.67227138, 4.37504441}, {-1, 1}], 
     InsetBox["1112", {4.52170631, 4.18756311}, {-1, 1}], 
     InsetBox["1113", {5.35298512, 5.48109686}, {-1, 1}], 
     InsetBox["1114", {5.91068854, 7.7078223}, {-1, 1}], 
     InsetBox["1115", {4.81169833, 4.55141637}, {-1, 1}], 
     InsetBox["1116", {4.37707315, 4.}, {-1, 1}], 
     InsetBox["1117", {4.59923316, 4.25451332}, {-1, 1}], 
     InsetBox["1118", {5.81601887, 6.83172991}, {-1, 1}], 
     InsetBox["1119", {5.91809815, 7.56202283}, {-1, 1}], 
     InsetBox["1120", {4.559261, 4.19317469}, {-1, 1}], 
     InsetBox["1121", {4.651597, 4.30376946}, {-1, 1}], 
     InsetBox["1122", {5.29187258, 5.29613033}, {-1, 1}], 
     InsetBox["1123", {4.45341039, 4.06510108}, {-1, 1}], 
     InsetBox["1124", {4.48901303, 4.10516975}, {-1, 1}], 
     InsetBox["1125", {4.51276634, 4.13206604}, {-1, 1}], 
     InsetBox["1126", {4.53651965, 4.15896232}, {-1, 1}], 
     InsetBox["1127", {4.75726264, 4.43591086}, {-1, 1}], 
     InsetBox["1128", {5.6804812, 6.24399917}, {-1, 1}], 
     InsetBox["1129", {5.92550776, 7.41622336}, {-1, 1}], 
     InsetBox["1130", {4.41897809, 4.}, {-1, 1}], 
     InsetBox["1131", {4.729403, 4.3666047}, {-1, 1}], 
     InsetBox["1132", {4.59681569, 4.19878627}, {-1, 1}], 
     InsetBox["1133", {4.56751484, 4.16002376}, {-1, 1}], 
     InsetBox["1134", {4.6426069, 4.24983698}, {-1, 1}], 
     InsetBox["1135", {5.82192897, 6.68544563}, {-1, 1}], 
     InsetBox["1136", {5.0214647, 4.77193626}, {-1, 1}], 
     InsetBox["1137", {4.55133299, 4.13036153}, {-1, 1}], 
     InsetBox["1138", {5.66625462, 6.09662722}, {-1, 1}], 
     InsetBox["1139", {4.49332584, 4.05258488}, {-1, 1}], 
     InsetBox["1140", {5.936147, 7.26896887}, {-1, 1}], 
     InsetBox["1141", {4.54171065, 4.10524944}, {-1, 1}], 
     InsetBox["1142", {4.70154337, 4.29729855}, {-1, 1}], 
     InsetBox["1143", {4.59851003, 4.1610852}, {-1, 1}], 
     InsetBox["1144", {4.46088304, 4.}, {-1, 1}], 
     InsetBox["1145", {4.53208831, 4.08013735}, {-1, 1}], 
     InsetBox["1146", {4.57576868, 4.12687283}, {-1, 1}], 
     InsetBox["1147", {4.6336168, 4.1959045}, {-1, 1}], 
     InsetBox["1148", {4.93219055, 4.57563152}, {-1, 1}], 
     InsetBox["1149", {4.68598064, 4.24516064}, {-1, 1}], 
     InsetBox["1150", {4.86903671, 4.48426609}, {-1, 1}], 
     InsetBox["1151", {5.82783906, 6.53916135}, {-1, 1}], 
     InsetBox["1152", {4.56998558, 4.09925759}, {-1, 1}], 
     InsetBox["1153", {4.80588287, 4.39290067}, {-1, 1}], 
     InsetBox["1154", {5.94678624, 7.12171438}, {-1, 1}], 
     InsetBox["1155", {5.65202805, 5.94925527}, {-1, 1}], 
     InsetBox["1156", {4.60020437, 4.12338412}, {-1, 1}], 
     InsetBox["1157", {4.63146481, 4.1581642}, {-1, 1}], 
     InsetBox["1158", {4.77253785, 4.33328004}, {-1, 1}], 
     InsetBox["1159", {4.49763864, 4.}, {-1, 1}], 
     InsetBox["1160", {4.53324128, 4.04006867}, {-1, 1}], 
     InsetBox["1161", {4.56420248, 4.07164235}, {-1, 1}], 
     InsetBox["1162", {4.67041791, 4.19302272}, {-1, 1}], 
     InsetBox["1163", {4.73919282, 4.2736594}, {-1, 1}], 
     InsetBox["1164", {4.59826051, 4.09326574}, {-1, 1}], 
     InsetBox["1165", {5.62027183, 5.79843216}, {-1, 1}], 
     InsetBox["1166", {4.62931283, 4.12042389}, {-1, 1}], 
     InsetBox["1167", {4.72096841, 4.22832524}, {-1, 1}], 
     InsetBox["1168", {5.95646751, 6.97697998}, {-1, 1}], 
     InsetBox["1169", {4.6644196, 4.15524319}, {-1, 1}], 
     InsetBox["1170", {5.17679538, 4.87695064}, {-1, 1}], 
     InsetBox["1171", {4.56539482, 4.03582118}, {-1, 1}], 
     InsetBox["1172", {4.53439425, 4.}, {-1, 1}], 
     InsetBox["1173", {5.82980756, 6.39258314}, {-1, 1}], 
     InsetBox["1174", {6.05, 8.}, {-1, 1}], 
     InsetBox["1175", {4.59631665, 4.06314735}, {-1, 1}], 
     InsetBox["1176", {4.702744, 4.18299107}, {-1, 1}], 
     InsetBox["1177", {6.05549826, 7.85372992}, {-1, 1}], 
     InsetBox["1178", {4.62709525, 4.08988747}, {-1, 1}], 
     InsetBox["1179", {5.32665218, 5.11386889}, {-1, 1}], 
     InsetBox["1180", {5.5885156, 5.64760905}, {-1, 1}], 
     InsetBox["1181", {4.65842128, 4.11746366}, {-1, 1}], 
     InsetBox["1182", {6.06099653, 7.70745983}, {-1, 1}], 
     InsetBox["1183", {4.56658716, 4.}, {-1, 1}], 
     InsetBox["1184", {4.69424959, 4.1472852}, {-1, 1}], 
     InsetBox["1185", {4.77684228, 4.25002026}, {-1, 1}], 
     InsetBox["1186", {4.81567269, 4.29995537}, {-1, 1}], 
     InsetBox["1187", {4.59754835, 4.03157368}, {-1, 1}], 
     InsetBox["1188", {4.85450311, 4.34989048}, {-1, 1}], 
     InsetBox["1189", {4.62487768, 4.05935104}, {-1, 1}], 
     InsetBox["1190", {5.96614878, 6.83224557}, {-1, 1}], 
     InsetBox["1191", {4.75595619, 4.21148984}, {-1, 1}], 
     InsetBox["1192", {5.07508715, 4.65030139}, {-1, 1}], 
     InsetBox["1193", {4.65593, 4.0865092}, {-1, 1}], 
     InsetBox["1194", {6.06812317, 7.56137825}, {-1, 1}], 
     InsetBox["1195", {4.7350701, 4.17295942}, {-1, 1}], 
     InsetBox["1196", {4.68575517, 4.11157934}, {-1, 1}], 
     InsetBox["1197", {5.83177605, 6.24600494}, {-1, 1}], 
     InsetBox["1198", {4.92637509, 4.41711582}, {-1, 1}], 
     InsetBox["1199", {4.59878006, 4.}, {-1, 1}], 
     InsetBox["1200", {4.62590946, 4.02967552}, {-1, 1}], 
     InsetBox["1201", {4.65343871, 4.05555473}, {-1, 1}], 
     InsetBox["1202", {4.72407958, 4.13932721}, {-1, 1}], 
     InsetBox["1203", {5.55813961, 5.48143708}, {-1, 1}], 
     InsetBox["1204", {6.07524981, 7.41529667}, {-1, 1}], 
     InsetBox["1205", {4.6823736, 4.08220056}, {-1, 1}], 
     InsetBox["1206", {4.8016368, 4.22218493}, {-1, 1}], 
     InsetBox["1207", {4.99824708, 4.48434115}, {-1, 1}], 
     InsetBox["1208", {4.7795687, 4.19010724}, {-1, 1}], 
     InsetBox["1209", {4.71308906, 4.10569501}, {-1, 1}], 
     InsetBox["1210", {5.97181393, 6.686419}, {-1, 1}], 
     InsetBox["1211", {4.75750061, 4.15802956}, {-1, 1}], 
     InsetBox["1212", {4.62694123, 4.}, {-1, 1}], 
     InsetBox["1213", {4.84310038, 4.26085239}, {-1, 1}], 
     InsetBox["1214", {4.65427056, 4.02777737}, {-1, 1}], 
     InsetBox["1215", {4.67899202, 4.05282179}, {-1, 1}], 
     InsetBox["1216", {5.82046992, 6.0981715}, {-1, 1}], 
     InsetBox["1217", {4.74749924, 4.12893968}, {-1, 1}], 
     InsetBox["1218", {4.88456396, 4.29951986}, {-1, 1}], 
     InsetBox["1219", {4.70881719, 4.07789192}, {-1, 1}], 
     InsetBox["1220", {6.08572326, 7.26825563}, {-1, 1}], 
     InsetBox["1221", {4.73749787, 4.0998498}, {-1, 1}], 
     InsetBox["1222", {4.6551024, 4.}, {-1, 1}], 
     InsetBox["1223", {4.67935081, 4.02641089}, {-1, 1}], 
     InsetBox["1224", {4.77993113, 4.14309969}, {-1, 1}], 
     InsetBox["1225", {4.70454532, 4.05008884}, {-1, 1}], 
     InsetBox["1226", {4.80318122, 4.16872464}, {-1, 1}], 
     InsetBox["1227", {5.52776361, 5.31526512}, {-1, 1}], 
     InsetBox["1228", {4.94980071, 4.35794702}, {-1, 1}], 
     InsetBox["1229", {4.82643132, 4.19434959}, {-1, 1}], 
     InsetBox["1230", {4.73233984, 4.07377384}, {-1, 1}], 
     InsetBox["1231", {4.7709189, 4.11855214}, {-1, 1}], 
     InsetBox["1232", {5.97747907, 6.54059244}, {-1, 1}], 
     InsetBox["1233", {4.6797096, 4.}, {-1, 1}], 
     InsetBox["1234", {4.70443106, 4.02504442}, {-1, 1}], 
     InsetBox["1235", {4.76190667, 4.09400458}, {-1, 1}], 
     InsetBox["1236", {6.0961967, 7.12121458}, {-1, 1}], 
     InsetBox["1237", {4.7937872, 4.13230933}, {-1, 1}], 
     InsetBox["1238", {5.80916378, 5.95033805}, {-1, 1}], 
     InsetBox["1239", {5.21798376, 4.72497127}, {-1, 1}], 
     InsetBox["1240", {4.72718182, 4.04769789}, {-1, 1}], 
     InsetBox["1241", {5.01503745, 4.41637419}, {-1, 1}], 
     InsetBox["1242", {4.87052806, 4.22174942}, {-1, 1}], 
     InsetBox["1243", {4.81454463, 4.15057811}, {-1, 1}], 
     InsetBox["1244", {4.83530206, 4.16884689}, {-1, 1}], 
     InsetBox["1245", {4.7885673, 4.11013498}, {-1, 1}], 
     InsetBox["1246", {4.7558625, 4.06965576}, {-1, 1}], 
     InsetBox["1247", {4.7043168, 4.}, {-1, 1}], 
     InsetBox["1248", {4.72648979, 4.02384894}, {-1, 1}], 
     InsetBox["1249", {4.80764327, 4.12151896}, {-1, 1}], 
     InsetBox["1250", {5.36143179, 4.93160745}, {-1, 1}], 
     InsetBox["1251", {4.78334741, 4.08796064}, {-1, 1}], 
     InsetBox["1252", {4.74981833, 4.04530694}, {-1, 1}], 
     InsetBox["1253", {4.91462481, 4.24914924}, {-1, 1}], 
     InsetBox["1254", {4.82590804, 4.13243158}, {-1, 1}], 
     InsetBox["1255", {4.87132343, 4.18689948}, {-1, 1}], 
     InsetBox["1256", {4.77638322, 4.06529186}, {-1, 1}], 
     InsetBox["1257", {4.80621571, 4.10171783}, {-1, 1}], 
     InsetBox["1258", {5.78458125, 5.79950179}, {-1, 1}], 
     InsetBox["1259", {6.10597954, 6.97671539}, {-1, 1}], 
     InsetBox["1260", {4.72579776, 4.}, {-1, 1}], 
     InsetBox["1261", {4.84417281, 4.1433442}, {-1, 1}], 
     InsetBox["1262", {5.98027498, 6.39430157}, {-1, 1}], 
     InsetBox["1263", {5.12870961, 4.52866653}, {-1, 1}], 
     InsetBox["1264", {4.74854853, 4.02265347}, {-1, 1}], 
     InsetBox["1265", {4.76941904, 4.04262308}, {-1, 1}], 
     InsetBox["1266", {4.82568641, 4.11110656}, {-1, 1}], 
     InsetBox["1267", {4.97322632, 4.29877823}, {-1, 1}], 
     InsetBox["1268", {4.80478815, 4.08191669}, {-1, 1}], 
     InsetBox["1269", {6.2, 8.}, {-1, 1}], 
     InsetBox["1270", {4.9073448, 4.20495206}, {-1, 1}], 
     InsetBox["1271", {4.84515711, 4.1204953}, {-1, 1}], 
     InsetBox["1272", {4.79690395, 4.06092796}, {-1, 1}], 
     InsetBox["1273", {6.20565226, 7.85354868}, {-1, 1}], 
     InsetBox["1274", {4.74727873, 4.}, {-1, 1}], 
     InsetBox["1275", {4.8721188, 4.15204954}, {-1, 1}], 
     InsetBox["1276", {4.7677169, 4.02131154}, {-1, 1}], 
     InsetBox["1277", {4.82546478, 4.08978155}, {-1, 1}], 
     InsetBox["1278", {4.78901976, 4.03993922}, {-1, 1}], 
     InsetBox["1279", {4.8142783, 4.07048751}, {-1, 1}], 
     InsetBox["1280", {5.03182783, 4.34840722}, {-1, 1}], 
     InsetBox["1281", {6.21130452, 7.70709737}, {-1, 1}], 
     InsetBox["1282", {4.80910988, 4.05342579}, {-1, 1}], 
     InsetBox["1283", {5.75999871, 5.64866553}, {-1, 1}], 
     InsetBox["1284", {4.84614141, 4.09764641}, {-1, 1}], 
     InsetBox["1285", {4.76601475, 4.}, {-1, 1}], 
     InsetBox["1286", {4.86999882, 4.12640584}, {-1, 1}], 
     InsetBox["1287", {4.8310495, 4.07532611}, {-1, 1}], 
     InsetBox["1288", {5.11276174, 4.44926961}, {-1, 1}], 
     InsetBox["1289", {4.90006479, 4.16075488}, {-1, 1}], 
     InsetBox["1290", {4.95116903, 4.22663248}, {-1, 1}], 
     InsetBox["1291", {4.78688527, 4.01996961}, {-1, 1}], 
     InsetBox["1292", {6.11576237, 6.8322162}, {-1, 1}], 
     InsetBox["1293", {5.5369159, 5.15076469}, {-1, 1}], 
     InsetBox["1294", {4.80394146, 4.03636407}, {-1, 1}], 
     InsetBox["1295", {4.82376846, 4.05905834}, {-1, 1}], 
     InsetBox["1296", {6.21814819, 7.56073367}, {-1, 1}], 
     InsetBox["1297", {4.8478207, 4.0801647}, {-1, 1}], 
     InsetBox["1298", {5.9830709, 6.24801071}, {-1, 1}], 
     InsetBox["1299", {4.82131581, 4.04592363}, {-1, 1}], 
     InsetBox["1300", {4.78475078, 4.}, {-1, 1}], 
     InsetBox["1301", {4.86787885, 4.10076214}, {-1, 1}], 
     InsetBox["1302", {4.93908684, 4.19016018}, {-1, 1}], 
     InsetBox["1303", {4.83663422, 4.06087066}, {-1, 1}], 
     InsetBox["1304", {4.99783747, 4.26698984}, {-1, 1}], 
     InsetBox["1305", {4.89484053, 4.13231638}, {-1, 1}], 
     InsetBox["1306", {4.80251098, 4.01818204}, {-1, 1}], 
     InsetBox["1307", {4.81886316, 4.03278892}, {-1, 1}], 
     InsetBox["1308", {4.83470431, 4.04649688}, {-1, 1}], 
     InsetBox["1309", {4.84949999, 4.06268299}, {-1, 1}], 
     InsetBox["1310", {4.86666554, 4.08169429}, {-1, 1}], 
     InsetBox["1311", {4.80108051, 4.}, {-1, 1}], 
     InsetBox["1312", {4.92700465, 4.15368789}, {-1, 1}], 
     InsetBox["1313", {5.04450591, 4.30734721}, {-1, 1}], 
     InsetBox["1314", {4.8181367, 4.01639446}, {-1, 1}], 
     InsetBox["1315", {4.88961628, 4.10387787}, {-1, 1}], 
     InsetBox["1316", {6.22499186, 7.41436997}, {-1, 1}], 
     InsetBox["1317", {4.8327744, 4.0321231}, {-1, 1}], 
     InsetBox["1318", {4.84809282, 4.04707014}, {-1, 1}], 
     InsetBox["1319", {5.09681387, 4.36987268}, {-1, 1}], 
     InsetBox["1320", {4.86545223, 4.06262645}, {-1, 1}], 
     InsetBox["1321", {6.12133277, 6.68689465}, {-1, 1}], 
     InsetBox["1322", {4.81741024, 4.}, {-1, 1}], 
     InsetBox["1323", {4.88551037, 4.08322389}, {-1, 1}], 
     InsetBox["1324", {4.92005411, 4.1265549}, {-1, 1}], 
     InsetBox["1325", {4.83220394, 4.01606155}, {-1, 1}], 
     InsetBox["1326", {5.73839448, 5.48890254}, {-1, 1}], 
     InsetBox["1327", {4.84668564, 4.03145729}, {-1, 1}], 
     InsetBox["1328", {4.86287956, 4.04665003}, {-1, 1}], 
     InsetBox["1329", {4.98771325, 4.20411571}, {-1, 1}], 
     InsetBox["1330", {5.97468521, 6.09971577}, {-1, 1}], 
     InsetBox["1331", {4.88140447, 4.06256991}, {-1, 1}], 
     InsetBox["1332", {4.97082888, 4.1753683}, {-1, 1}], 
     InsetBox["1333", {4.83163347, 4.}, {-1, 1}], 
     InsetBox["1334", {4.91310357, 4.09942191}, {-1, 1}], 
     InsetBox["1335", {4.84627117, 4.01572865}, {-1, 1}], 
     InsetBox["1336", {4.86030689, 4.03067362}, {-1, 1}], 
     InsetBox["1337", {4.9539445, 4.14662089}, {-1, 1}], 
     InsetBox["1338", {5.39034008, 4.78399631}, {-1, 1}], 
     InsetBox["1339", {5.02244863, 4.23520146}, {-1, 1}], 
     InsetBox["1340", {5.25917214, 4.5729919}, {-1, 1}], 
     InsetBox["1341", {6.23529952, 7.26754238}, {-1, 1}], 
     InsetBox["1342", {4.8776663, 4.04622993}, {-1, 1}], 
     InsetBox["1343", {5.09437447, 4.32818728}, {-1, 1}], 
     InsetBox["1344", {4.90574557, 4.07873753}, {-1, 1}], 
     InsetBox["1345", {4.84585671, 4.}, {-1, 1}], 
     InsetBox["1346", {4.85927252, 4.01533681}, {-1, 1}], 
     InsetBox["1347", {4.94526769, 4.12079342}, {-1, 1}], 
     InsetBox["1348", {5.057184, 4.2662872}, {-1, 1}], 
     InsetBox["1349", {4.87392814, 4.02988994}, {-1, 1}], 
     InsetBox["1350", {5.21048602, 4.48216502}, {-1, 1}], 
     InsetBox["1351", {4.89838757, 4.05805315}, {-1, 1}], 
     InsetBox["1352", {4.89235799, 4.04289611}, {-1, 1}], 
     InsetBox["1353", {4.85823815, 4.}, {-1, 1}], 
     InsetBox["1354", {4.93659087, 4.09496595}, {-1, 1}], 
     InsetBox["1355", {4.87227386, 4.01494497}, {-1, 1}], 
     InsetBox["1356", {4.88632842, 4.02773907}, {-1, 1}], 
     InsetBox["1357", {4.9733193, 4.13609745}, {-1, 1}], 
     InsetBox["1358", {6.12690316, 6.54157311}, {-1, 1}], 
     InsetBox["1359", {5.16179991, 4.39133814}, {-1, 1}], 
     InsetBox["1360", {4.99237382, 4.15941227}, {-1, 1}], 
     InsetBox["1361", {4.92598078, 4.07425117}, {-1, 1}], 
     InsetBox["1362", {5.01142834, 4.1827271}, {-1, 1}], 
     InsetBox["1363", {4.96319882, 4.11714655}, {-1, 1}], 
     InsetBox["1364", {5.09193508, 4.28650188}, {-1, 1}], 
     InsetBox["1365", {4.87061959, 4.}, {-1, 1}], 
     InsetBox["1366", {4.91537068, 4.05353638}, {-1, 1}], 
     InsetBox["1367", {4.88386039, 4.01386954}, {-1, 1}], 
     InsetBox["1368", {4.95307834, 4.09819565}, {-1, 1}], 
     InsetBox["1369", {4.90704969, 4.03956229}, {-1, 1}], 
     InsetBox["1370", {6.24560717, 7.12071479}, {-1, 1}], 
     InsetBox["1371", {5.14424303, 4.34902735}, {-1, 1}], 
     InsetBox["1372", {5.96629952, 5.95142083}, {-1, 1}], 
     InsetBox["1373", {4.89872869, 4.02558821}, {-1, 1}], 
     InsetBox["1374", {5.0440021, 4.21095969}, {-1, 1}], 
     InsetBox["1375", {5.71679024, 5.32913955}, {-1, 1}], 
     InsetBox["1376", {4.94657361, 4.08215393}, {-1, 1}], 
     InsetBox["1377", {4.88139237, 4.}, {-1, 1}], 
     InsetBox["1378", {4.91853325, 4.04415594}, {-1, 1}], 
     InsetBox["1379", {5.54606819, 4.98626426}, {-1, 1}], 
     InsetBox["1380", {4.93713721, 4.06671451}, {-1, 1}], 
     InsetBox["1381", {4.89544692, 4.0127941}, {-1, 1}], 
     InsetBox["1382", {4.91270421, 4.03324292}, {-1, 1}], 
     InsetBox["1383", {4.92770082, 4.05127509}, {-1, 1}], 
     InsetBox["1384", {4.9695658, 4.10142536}, {-1, 1}], 
     InsetBox["1385", {4.90687517, 4.0223299}, {-1, 1}], 
     InsetBox["1386", {5.07657585, 4.23919227}, {-1, 1}], 
     InsetBox["1387", {4.98112995, 4.11349968}, {-1, 1}], 
     InsetBox["1388", {5.12668616, 4.30671655}, {-1, 1}], 
     InsetBox["1389", {4.96125642, 4.08673052}, {-1, 1}], 
     InsetBox["1390", {4.89216515, 4.}, {-1, 1}], 
     InsetBox["1391", {4.99269409, 4.125574}, {-1, 1}], 
     InsetBox["1392", {4.92169581, 4.0347755}, {-1, 1}], 
     InsetBox["1393", {4.92794814, 4.04226105}, {-1, 1}], 
     InsetBox["1394", {4.90420468, 4.01116495}, {-1, 1}], 
     InsetBox["1395", {4.91835873, 4.02692354}, {-1, 1}], 
     InsetBox["1396", {4.91502164, 4.01907159}, {-1, 1}], 
     InsetBox["1397", {5.01391876, 4.14345625}, {-1, 1}], 
     InsetBox["1398", {4.94003096, 4.0490138}, {-1, 1}], 
     InsetBox["1399", {4.94829365, 4.05917786}, {-1, 1}], 
     InsetBox["1400", {4.95655634, 4.06934191}, {-1, 1}], 
     InsetBox["1401", {4.92819547, 4.03324701}, {-1, 1}], 
     InsetBox["1402", {4.9015342, 4.}, {-1, 1}], 
     InsetBox["1403", {4.97593923, 4.09130711}, {-1, 1}], 
     InsetBox["1404", {4.92530786, 4.02540743}, {-1, 1}], 
     InsetBox["1405", {4.93736304, 4.04036616}, {-1, 1}], 
     InsetBox["1406", {4.91296244, 4.0095358}, {-1, 1}], 
     InsetBox["1407", {5.03514343, 4.16133849}, {-1, 1}], 
     InsetBox["1408", {4.92242024, 4.01756786}, {-1, 1}], 
     InsetBox["1409", {5.1113073, 4.26205378}, {-1, 1}], 
     InsetBox["1410", {4.93469513, 4.03171852}, {-1, 1}], 
     InsetBox["1411", {4.96943449, 4.07526539}, {-1, 1}], 
     InsetBox["1412", {4.98974579, 4.10066836}, {-1, 1}], 
     InsetBox["1413", {4.91090324, 4.}, {-1, 1}], 
     InsetBox["1414", {4.94748341, 4.04436142}, {-1, 1}], 
     InsetBox["1415", {4.93225699, 4.02389132}, {-1, 1}], 
     InsetBox["1416", {4.95517037, 4.05207025}, {-1, 1}], 
     InsetBox["1417", {4.92073431, 4.00878393}, {-1, 1}], 
     InsetBox["1418", {6.12999081, 6.39574898}, {-1, 1}], 
     InsetBox["1419", {4.94436871, 4.03686677}, {-1, 1}], 
     InsetBox["1420", {4.96285732, 4.05977908}, {-1, 1}], 
     InsetBox["1421", {5.00355236, 4.11002961}, {-1, 1}], 
     InsetBox["1422", {4.92981885, 4.01606413}, {-1, 1}], 
     InsetBox["1423", {6.25549157, 6.9764508}, {-1, 1}], 
     InsetBox["1424", {4.98231265, 4.08118886}, {-1, 1}], 
     InsetBox["1425", {4.941254, 4.02937212}, {-1, 1}], 
     InsetBox["1426", {4.91904837, 4.}, {-1, 1}], 
     InsetBox["1427", {5.06555556, 4.18671792}, {-1, 1}], 
     InsetBox["1428", {4.93894906, 4.02211174}, {-1, 1}], 
     InsetBox["1429", {4.92850617, 4.00803207}, {-1, 1}], 
     InsetBox["1430", {5.94889067, 5.80057143}, {-1, 1}], 
     InsetBox["1431", {4.97451588, 4.06476122}, {-1, 1}], 
     InsetBox["1432", {4.95493587, 4.03970903}, {-1, 1}], 
     InsetBox["1433", {4.95137438, 4.03336737}, {-1, 1}], 
     InsetBox["1434", {4.93664411, 4.01485136}, {-1, 1}], 
     InsetBox["1435", {4.96204708, 4.04496264}, {-1, 1}], 
     InsetBox["1436", {4.94781288, 4.02702571}, {-1, 1}], 
     InsetBox["1437", {4.9271935, 4.}, {-1, 1}], 
     InsetBox["1438", {5.14603876, 4.28491528}, {-1, 1}], 
     InsetBox["1439", {4.99836163, 4.08783703}, {-1, 1}], 
     InsetBox["1440", {4.9691583, 4.05021625}, {-1, 1}], 
     InsetBox["1441", {4.94564113, 4.02033216}, {-1, 1}], 
     InsetBox["1442", {4.93545817, 4.00742568}, {-1, 1}], 
     InsetBox["1443", {5.17459337, 4.32253044}, {-1, 1}], 
     InsetBox["1444", {4.95896471, 4.03589042}, {-1, 1}], 
     InsetBox["1445", {4.98617444, 4.06974336}, {-1, 1}], 
     InsetBox["1446", {5.02770034, 4.12215539}, {-1, 1}], 
     InsetBox["1447", {5.0959677, 4.21209734}, {-1, 1}], 
     InsetBox["1448", {4.95617281, 4.03043864}, {-1, 1}], 
     InsetBox["1449", {5.20314798, 4.3601456}, {-1, 1}], 
     InsetBox["1450", {6.35, 8.}, {-1, 1}], 
     InsetBox["1451", {4.94346937, 4.0136386}, {-1, 1}], 
     InsetBox["1452", {4.95338092, 4.02498685}, {-1, 1}], 
     InsetBox["1453", {4.93427224, 4.}, {-1, 1}], 
     InsetBox["1454", {4.96568742, 4.03882621}, {-1, 1}], 
     InsetBox["1455", {4.97959727, 4.05425705}, {-1, 1}], 
     InsetBox["1456", {4.9514056, 4.01883369}, {-1, 1}], 
     InsetBox["1457", {4.94241017, 4.0068193}, {-1, 1}], 
     InsetBox["1458", {4.96299355, 4.03207182}, {-1, 1}], 
     InsetBox["1459", {4.96097125, 4.0275099}, {-1, 1}], 
     InsetBox["1460", {4.97241013, 4.04176199}, {-1, 1}], 
     InsetBox["1461", {4.94943027, 4.01268054}, {-1, 1}], 
     InsetBox["1462", {5.01441062, 4.09448521}, {-1, 1}], 
     InsetBox["1463", {4.95894896, 4.02294798}, {-1, 1}], 
     InsetBox["1464", {6.35521054, 7.85332364}, {-1, 1}], 
     InsetBox["1465", {4.94135097, 4.}, {-1, 1}], 
     InsetBox["1466", {5.00070794, 4.0741133}, {-1, 1}], 
     InsetBox["1467", {4.96932775, 4.03268978}, {-1, 1}], 
     InsetBox["1468", {4.95717007, 4.01733523}, {-1, 1}], 
     InsetBox["1469", {4.94846571, 4.00634027}, {-1, 1}], 
     InsetBox["1470", {4.99003623, 4.05829786}, {-1, 1}], 
     InsetBox["1471", {4.96680067, 4.02732486}, {-1, 1}], 
     InsetBox["1472", {5.26129046, 4.42645856}, {-1, 1}], 
     InsetBox["1473", {4.98197031, 4.04527408}, {-1, 1}], 
     InsetBox["1474", {4.95539118, 4.01172248}, {-1, 1}], 
     InsetBox["1475", {5.05184833, 4.13428118}, {-1, 1}], 
     InsetBox["1476", {4.96427359, 4.02195995}, {-1, 1}], 
     InsetBox["1477", {4.94750114, 4.}, {-1, 1}], 
     InsetBox["1478", {5.13067953, 4.23760568}, {-1, 1}], 
     InsetBox["1479", {4.97566196, 4.03330774}, {-1, 1}], 
     InsetBox["1480", {4.96246939, 4.01651929}, {-1, 1}], 
     InsetBox["1481", {4.95452125, 4.00586124}, {-1, 1}], 
     InsetBox["1482", {4.97263009, 4.02713982}, {-1, 1}], 
     InsetBox["1483", {4.9606652, 4.01107863}, {-1, 1}], 
     InsetBox["1484", {4.99153049, 4.04878616}, {-1, 1}], 
     InsetBox["1485", {4.96959822, 4.02097191}, {-1, 1}], 
     InsetBox["1486", {5.01524144, 4.07848324}, {-1, 1}], 
     InsetBox["1487", {4.95365132, 4.}, {-1, 1}], 
     InsetBox["1488", {6.36042109, 7.70664728}, {-1, 1}], 
     InsetBox["1489", {5.00305425, 4.06038957}, {-1, 1}], 
     InsetBox["1490", {4.96776872, 4.01570335}, {-1, 1}], 
     InsetBox["1491", {4.98434336, 4.0362911}, {-1, 1}], 
     InsetBox["1492", {4.95982928, 4.00553932}, {-1, 1}], 
     InsetBox["1493", {4.97993611, 4.02838644}, {-1, 1}], 
     InsetBox["1494", {4.96593922, 4.01043479}, {-1, 1}], 
     InsetBox["1495", {5.08253329, 4.15972476}, {-1, 1}], 
     InsetBox["1496", {4.97695114, 4.02363019}, {-1, 1}], 
     InsetBox["1497", {4.97396617, 4.01887395}, {-1, 1}], 
     InsetBox["1498", {4.95899337, 4.}, {-1, 1}], 
     InsetBox["1499", {5.31943294, 4.49277153}, {-1, 1}], 
     InsetBox["1500", {4.9722119, 4.01425868}, {-1, 1}], 
     InsetBox["1501", {4.96513732, 4.00521739}, {-1, 1}], 
     InsetBox["1502", {4.99302476, 4.03927447}, {-1, 1}], 
     InsetBox["1503", {6.26537597, 6.83218682}, {-1, 1}], 
     InsetBox["1504", {5.04148193, 4.10085453}, {-1, 1}], 
     InsetBox["1505", {4.98688724, 4.03053492}, {-1, 1}], 
     InsetBox["1506", {4.97045764, 4.00964341}, {-1, 1}], 
     InsetBox["1507", {5.00272053, 4.04986338}, {-1, 1}], 
     InsetBox["1508", {4.96433542, 4.}, {-1, 1}], 
     InsetBox["1509", {5.16539135, 4.26311402}, {-1, 1}], 
     InsetBox["1510", {4.97833412, 4.01677599}, {-1, 1}], 
     InsetBox["1511", {4.9812722, 4.02012056}, {-1, 1}], 
     InsetBox["1512", {4.98421027, 4.02346513}, {-1, 1}], 
     InsetBox["1513", {4.96971608, 4.0048217}, {-1, 1}], 
     InsetBox["1514", {4.97665509, 4.01281401}, {-1, 1}], 
     InsetBox["1515", {5.01607227, 4.06248128}, {-1, 1}], 
     InsetBox["1516", {6.13307846, 6.24992486}, {-1, 1}], 
     InsetBox["1517", {4.99383837, 4.03268341}, {-1, 1}], 
     InsetBox["1518", {4.97497605, 4.00885203}, {-1, 1}], 
     InsetBox["1519", {5.41924836, 4.63638516}, {-1, 1}], 
     InsetBox["1520", {4.96897452, 4.}, {-1, 1}], 
     InsetBox["1521", {4.98151604, 4.01510128}, {-1, 1}], 
     InsetBox["1522", {4.98943113, 4.02477874}, {-1, 1}], 
     InsetBox["1523", {4.98397174, 4.01779977}, {-1, 1}], 
     InsetBox["1524", {5.11321825, 4.18516834}, {-1, 1}], 
     InsetBox["1525", {4.98642744, 4.02049826}, {-1, 1}], 
     InsetBox["1526", {5.93148182, 5.64972202}, {-1, 1}], 
     InsetBox["1527", {4.97429483, 4.00442602}, {-1, 1}], 
     InsetBox["1528", {4.98009661, 4.01161605}, {-1, 1}], 
     InsetBox["1529", {5.00238681, 4.03933719}, {-1, 1}], 
     InsetBox["1530", {5.71990592, 5.17152403}, {-1, 1}], 
     InsetBox["1531", {4.97867719, 4.00813083}, {-1, 1}], 
     InsetBox["1532", {5.01391056, 4.0509406}, {-1, 1}], 
     InsetBox["1533", {4.99057121, 4.02142909}, {-1, 1}], 
     InsetBox["1534", {5.03710108, 4.08044485}, {-1, 1}], 
     InsetBox["1535", {4.97361361, 4.}, {-1, 1}], 
     InsetBox["1536", {4.99465198, 4.02609235}, {-1, 1}], 
     InsetBox["1537", {4.98469795, 4.01342657}, {-1, 1}], 
     InsetBox["1538", {6.36779854, 7.55991268}, {-1, 1}], 
     InsetBox["1539", {4.98667128, 4.01547898}, {-1, 1}], 
     InsetBox["1540", {4.98864461, 4.0175314}, {-1, 1}], 
     InsetBox["1541", {4.97815932, 4.00406541}, {-1, 1}], 
     InsetBox["1542", {4.98353814, 4.0104181}, {-1, 1}], 
     InsetBox["1543", {5.00169147, 4.03194237}, {-1, 1}], 
     InsetBox["1544", {4.98237832, 4.00740962}, {-1, 1}], 
     InsetBox["1545", {4.99471499, 4.02235992}, {-1, 1}], 
     InsetBox["1546", {4.98976843, 4.0160689}, {-1, 1}], 
     InsetBox["1547", {4.98842312, 4.01431241}, {-1, 1}], 
     InsetBox["1548", {4.98707781, 4.01255592}, {-1, 1}], 
     InsetBox["1549", {4.9917113, 4.01807944}, {-1, 1}], 
     InsetBox["1550", {4.97764146, 4.}, {-1, 1}], 
     InsetBox["1551", {4.98624418, 4.0097645}, {-1, 1}], 
     InsetBox["1552", {4.98202382, 4.00370481}, {-1, 1}], 
     InsetBox["1553", {4.99089225, 4.01460641}, {-1, 1}], 
     InsetBox["1554", {4.99222807, 4.01626596}, {-1, 1}], 
     InsetBox["1555", {4.99017496, 4.01314584}, {-1, 1}], 
     InsetBox["1556", {4.98541056, 4.00697308}, {-1, 1}], 
     InsetBox["1557", {4.99477799, 4.01862748}, {-1, 1}], 
     InsetBox["1558", {4.98945767, 4.01168528}, {-1, 1}], 
     InsetBox["1559", {5.01174885, 4.03939992}, {-1, 1}], 
     InsetBox["1560", {5.20494371, 4.29603353}, {-1, 1}], 
     InsetBox["1561", {4.99274483, 4.01445249}, {-1, 1}], 
     InsetBox["1562", {5.00099614, 4.02454754}, {-1, 1}], 
     InsetBox["1563", {4.9946877, 4.01646303}, {-1, 1}], 
     InsetBox["1564", {4.98895023, 4.00911091}, {-1, 1}], 
     InsetBox["1565", {4.98166931, 4.}, {-1, 1}], 
     InsetBox["1566", {4.99218257, 4.01280548}, {-1, 1}], 
     InsetBox["1567", {4.98528822, 4.00348654}, {-1, 1}], 
     InsetBox["1568", {4.99162031, 4.01115848}, {-1, 1}], 
     InsetBox["1569", {4.99957279, 4.02106255}, {-1, 1}], 
     InsetBox["1570", {4.99459741, 4.01429857}, {-1, 1}], 
     InsetBox["1571", {4.9884428, 4.00653654}, {-1, 1}], 
     InsetBox["1572", {4.99814944, 4.01757756}, {-1, 1}], 
     InsetBox["1573", {4.99419018, 4.01246512}, {-1, 1}], 
     InsetBox["1574", {5.06855324, 4.10722386}, {-1, 1}], 
     InsetBox["1575", {4.99135847, 4.00872285}, {-1, 1}], 
     InsetBox["1576", {5.00954458, 4.03120133}, {-1, 1}], 
     InsetBox["1577", {4.99744462, 4.01548872}, {-1, 1}], 
     InsetBox["1578", {5.03272024, 4.06003516}, {-1, 1}], 
     InsetBox["1579", {4.98516587, 4.}, {-1, 1}], 
     InsetBox["1580", {4.99378296, 4.01063168}, {-1, 1}], 
     InsetBox["1581", {5.14656084, 4.20953496}, {-1, 1}], 
     InsetBox["1582", {4.98855262, 4.00326827}, {-1, 1}], 
     InsetBox["1583", {4.99673979, 4.01339988}, {-1, 1}], 
     InsetBox["1584", {4.99109664, 4.00628722}, {-1, 1}], 
     InsetBox["1585", {4.99608327, 4.01185665}, {-1, 1}], 
     InsetBox["1586", {4.99376671, 4.00833479}, {-1, 1}], 
     InsetBox["1587", {4.99542675, 4.01031341}, {-1, 1}], 
     InsetBox["1588", {5.00152089, 4.01652764}, {-1, 1}], 
     InsetBox["1589", {5.00020154, 4.01451441}, {-1, 1}], 
     InsetBox["1590", {5.0044306, 4.01976519}, {-1, 1}], 
     InsetBox["1591", {4.98866244, 4.}, {-1, 1}], 
     InsetBox["1592", {4.99139699, 4.00314361}, {-1, 1}], 
     InsetBox["1593", {4.99888218, 4.01250118}, {-1, 1}], 
     InsetBox["1594", {4.99375047, 4.00603789}, {-1, 1}], 
     InsetBox["1595", {4.99797636, 4.01124817}, {-1, 1}], 
     InsetBox["1596", {5.0073403, 4.02300273}, {-1, 1}], 
     InsetBox["1597", {4.99707054, 4.00999515}, {-1, 1}], 
     InsetBox["1598", {4.99570066, 4.00821712}, {-1, 1}], 
     InsetBox["1599", {5.02729939, 4.04797801}, {-1, 1}], 
     InsetBox["1600", {5.56269639, 4.84302134}, {-1, 1}], 
     InsetBox["1601", {4.99597457, 4.00612084}, {-1, 1}], 
     InsetBox["1602", {4.9976346, 4.00809946}, {-1, 1}], 
     InsetBox["1603", {4.99897092, 4.00927315}, {-1, 1}], 
     InsetBox["1604", {4.99169734, 4.}, {-1, 1}], 
     InsetBox["1605", {4.99424136, 4.00301895}, {-1, 1}], 
     InsetBox["1606", {5.00030723, 4.01044684}, {-1, 1}], 
     InsetBox["1607", {5.00188557, 4.01230832}, {-1, 1}], 
     InsetBox["1608", {5.0034639, 4.01416981}, {-1, 1}], 
     InsetBox["1609", {5.00577553, 4.01667412}, {-1, 1}], 
     InsetBox["1610", {5.00808717, 4.01917842}, {-1, 1}], 
     InsetBox["1611", {4.99819867, 4.00620378}, {-1, 1}], 
     InsetBox["1612", {5.02187855, 4.03592085}, {-1, 1}], 
     InsetBox["1613", {5.05896072, 4.08240645}, {-1, 1}], 
     InsetBox["1614", {4.99996548, 4.00729813}, {-1, 1}], 
     InsetBox["1615", {4.99667035, 4.00306042}, {-1, 1}], 
     InsetBox["1616", {4.99473225, 4.}, {-1, 1}], 
     InsetBox["1617", {5.00173229, 4.00839249}, {-1, 1}], 
     InsetBox["1618", {5.01776078, 4.02812102}, {-1, 1}], 
     InsetBox["1619", {5.0035696, 4.01010224}, {-1, 1}], 
     InsetBox["1620", {5.00540691, 4.01181199}, {-1, 1}], 
     InsetBox["1621", {5.09951102, 4.1327316}, {-1, 1}], 
     InsetBox["1622", {5.00712047, 4.01358305}, {-1, 1}], 
     InsetBox["1623", {5.00883404, 4.01535411}, {-1, 1}], 
     InsetBox["1624", {4.99909933, 4.00310189}, {-1, 1}], 
     InsetBox["1625", {4.99736612, 4.}, {-1, 1}], 
     InsetBox["1626", {5.013643, 4.02032119}, {-1, 1}], 
     InsetBox["1627", {5.00109309, 4.00441232}, {-1, 1}], 
     InsetBox["1628", {5.24449606, 4.32895305}, {-1, 1}], 
     InsetBox["1629", {5.00308684, 4.00572275}, {-1, 1}], 
     InsetBox["1630", {6.37517599, 7.41317807}, {-1, 1}], 
     InsetBox["1631", {5.01254932, 4.01681877}, {-1, 1}], 
     InsetBox["1632", {5.00522399, 4.00749533}, {-1, 1}], 
     InsetBox["1633", {5.00736114, 4.00926791}, {-1, 1}], 
     InsetBox["1634", {5., 4.}, {-1, 1}], 
     InsetBox["1635", {5.00940839, 4.01129213}, {-1, 1}], 
     InsetBox["1636", {5.01145563, 4.01331635}, {-1, 1}], 
     InsetBox["1637", {5.0022207, 4.0015265}, {-1, 1}], 
     InsetBox["1638", {5.17990342, 4.23390157}, {-1, 1}], 
     InsetBox["1639", {5.00444139, 4.003053}, {-1, 1}], 
     InsetBox["1640", {5., 3.99731626}, {-1, 1}], 
     InsetBox["1641", {5.00687838, 4.00488842}, {-1, 1}], 
     InsetBox["1642", {5.00274796, 3.99865849}, {-1, 1}], 
     InsetBox["1643", {5.04936821, 4.05758904}, {-1, 1}], 
     InsetBox["1644", {5.00931536, 4.00672383}, {-1, 1}], 
     InsetBox["1645", {5., 3.99463252}, {-1, 1}], 
     InsetBox["1646", {5.0116963, 4.00900121}, {-1, 1}], 
     InsetBox["1647", {6.27085161, 6.6873703}, {-1, 1}], 
     InsetBox["1648", {5.04068823, 4.04501541}, {-1, 1}], 
     InsetBox["1649", {5.01407723, 4.01127859}, {-1, 1}], 
     InsetBox["1650", {5.01701147, 4.01445912}, {-1, 1}], 
     InsetBox["1651", {5.00549591, 4.00000072}, {-1, 1}], 
     InsetBox["1652", {5.01994571, 4.01763964}, {-1, 1}], 
     InsetBox["1653", {5.02597698, 4.02504071}, {-1, 1}], 
     InsetBox["1654", {5.03200824, 4.03244179}, {-1, 1}], 
     InsetBox["1655", {5.00327522, 3.99579048}, {-1, 1}], 
     InsetBox["1656", {5., 3.99142825}, {-1, 1}], 
     InsetBox["1657", {5.00836225, 4.00186065}, {-1, 1}], 
     InsetBox["1658", {5.13046881, 4.15823935}, {-1, 1}], 
     InsetBox["1659", {5.01122858, 4.00372058}, {-1, 1}], 
     InsetBox["1660", {5.01371875, 4.00603694}, {-1, 1}], 
     InsetBox["1661", {5.00655044, 3.99694844}, {-1, 1}], 
     InsetBox["1662", {5., 3.98822398}, {-1, 1}], 
     InsetBox["1663", {5.01620892, 4.00835329}, {-1, 1}], 
     InsetBox["1664", {5.00382446, 3.99252628}, {-1, 1}], 
     InsetBox["1665", {5.00984612, 3.99883289}, {-1, 1}], 
     InsetBox["1666", {5.02016409, 4.00977074}, {-1, 1}], 
     InsetBox["1667", {5., 3.98439905}, {-1, 1}], 
     InsetBox["1668", {5.0131418, 4.00071733}, {-1, 1}], 
     InsetBox["1669", {5.00764893, 3.99362431}, {-1, 1}], 
     InsetBox["1670", {5.00437371, 3.98926208}, {-1, 1}], 
     InsetBox["1671", {5.0157412, 4.00307266}, {-1, 1}], 
     InsetBox["1672", {5.01834061, 4.00542799}, {-1, 1}], 
     InsetBox["1673", {5.01163707, 3.99574653}, {-1, 1}], 
     InsetBox["1674", {5.02411926, 4.01118819}, {-1, 1}], 
     InsetBox["1675", {6.12794988, 6.10242363}, {-1, 1}], 
     InsetBox["1676", {5., 3.98057412}, {-1, 1}], 
     InsetBox["1677", {5.00874742, 3.99030018}, {-1, 1}], 
     InsetBox["1678", {5.0049061, 3.98520894}, {-1, 1}], 
     InsetBox["1679", {5.01562521, 3.99786875}, {-1, 1}], 
     InsetBox["1680", {5.03216026, 4.01748682}, {-1, 1}], 
     InsetBox["1681", {5.01947096, 4.00147555}, {-1, 1}], 
     InsetBox["1682", {5., 3.9760095}, {-1, 1}], 
     InsetBox["1683", {5.02331671, 4.00508236}, {-1, 1}], 
     InsetBox["1684", {5.01342802, 3.99266017}, {-1, 1}], 
     InsetBox["1685", {5.00543848, 3.9811558}, {-1, 1}], 
     InsetBox["1686", {5.0098122, 3.98601883}, {-1, 1}], 
     InsetBox["1687", {5.04020125, 4.02378546}, {-1, 1}], 
     InsetBox["1688", {5.01810862, 3.99502016}, {-1, 1}], 
     InsetBox["1689", {5., 3.97144488}, {-1, 1}], 
     InsetBox["1690", {5.16244215, 4.18146424}, {-1, 1}], 
     InsetBox["1691", {5.02320072, 3.99987845}, {-1, 1}], 
     InsetBox["1692", {5.02829282, 4.00473674}, {-1, 1}], 
     InsetBox["1693", {5.01519447, 3.98805625}, {-1, 1}], 
     InsetBox["1694", {5.00584617, 3.97633008}, {-1, 1}], 
     InsetBox["1695", {5.22063051, 4.25899618}, {-1, 1}], 
     InsetBox["1696", {5.01087697, 3.98173748}, {-1, 1}], 
     InsetBox["1697", {5.09467316, 4.0878302}, {-1, 1}], 
     InsetBox["1698", {5.05265245, 4.03334229}, {-1, 1}], 
     InsetBox["1699", {5., 3.96599923}, {-1, 1}], 
     InsetBox["1700", {5.02057674, 3.99009367}, {-1, 1}], 
     InsetBox["1701", {5.0798884, 4.06536466}, {-1, 1}], 
     InsetBox["1702", {5.00625385, 3.97150435}, {-1, 1}], 
     InsetBox["1703", {5.91864934, 5.496368}, {-1, 1}], 
     InsetBox["1704", {5.01696091, 3.98345233}, {-1, 1}], 
     InsetBox["1705", {5.01169234, 3.97665065}, {-1, 1}], 
     InsetBox["1706", {6.38488234, 7.26632152}, {-1, 1}], 
     InsetBox["1707", {5.03834354, 4.00993293}, {-1, 1}], 
     InsetBox["1708", {5.06510364, 4.04289913}, {-1, 1}], 
     InsetBox["1709", {5.0265303, 3.99384771}, {-1, 1}], 
     InsetBox["1710", {5., 3.96055357}, {-1, 1}], 
     InsetBox["1711", {5.00674342, 3.96593208}, {-1, 1}], 
     InsetBox["1712", {5.03248386, 3.99760175}, {-1, 1}], 
     InsetBox["1713", {5.02304485, 3.98516718}, {-1, 1}], 
     InsetBox["1714", {5.0125077, 3.97156382}, {-1, 1}], 
     InsetBox["1715", {5.12259323, 4.11200273}, {-1, 1}], 
     InsetBox["1716", {5.01823711, 3.9779782}, {-1, 1}], 
     InsetBox["1717", {5.04839426, 4.01512913}, {-1, 1}], 
     InsetBox["1718", {5., 3.95405921}, {-1, 1}], 
     InsetBox["1719", {5.19441549, 4.20468912}, {-1, 1}], 
     InsetBox["1720", {5.3120949, 4.37075211}, {-1, 1}], 
     InsetBox["1721", {5.007233, 3.96035981}, {-1, 1}], 
     InsetBox["1722", {5.02985987, 3.98781697}, {-1, 1}], 
     InsetBox["1723", {5.04198144, 4.00182101}, {-1, 1}], 
     InsetBox["1724", {5.01348685, 3.96586494}, {-1, 1}], 
     InsetBox["1725", {5.02478189, 3.97930574}, {-1, 1}], 
     InsetBox["1726", {5.01951332, 3.97250406}, {-1, 1}], 
     InsetBox["1727", {5., 3.94756485}, {-1, 1}], 
     InsetBox["1728", {5.03667489, 3.99046676}, {-1, 1}], 
     InsetBox["1729", {5.0077973, 3.95395328}, {-1, 1}], 
     InsetBox["1730", {5.15051329, 4.13617526}, {-1, 1}], 
     InsetBox["1731", {5.01446599, 3.96016606}, {-1, 1}], 
     InsetBox["1732", {5.05147903, 4.00604028}, {-1, 1}], 
     InsetBox["1733", {5.03204395, 3.98146025}, {-1, 1}], 
     InsetBox["1734", {5.02074199, 3.96665402}, {-1, 1}], 
     InsetBox["1735", {5.06461667, 4.02166917}, {-1, 1}], 
     InsetBox["1736", {5.02651893, 3.9734443}, {-1, 1}], 
     InsetBox["1737", {5., 3.9398232}, {-1, 1}], 
     InsetBox["1738", {5.2613576, 4.28409078}, {-1, 1}], 
     InsetBox["1739", {5.0083616, 3.94754674}, {-1, 1}], 
     InsetBox["1740", {5.04561934, 3.9937091}, {-1, 1}], 
     InsetBox["1741", {6.27632725, 6.54255378}, {-1, 1}], 
     InsetBox["1742", {5.03930601, 3.98361475}, {-1, 1}], 
     InsetBox["1743", {5.0155946, 3.95384735}, {-1, 1}], 
     InsetBox["1744", {5.02197065, 3.96080397}, {-1, 1}], 
     InsetBox["1745", {5.02799712, 3.96744309}, {-1, 1}], 
     InsetBox["1746", {5.03422803, 3.97510352}, {-1, 1}], 
     InsetBox["1747", {5., 3.93208154}, {-1, 1}], 
     InsetBox["1748", {5.17660286, 4.1582954}, {-1, 1}], 
     InsetBox["1749", {5.06416961, 4.01090208}, {-1, 1}], 
     InsetBox["1750", {5.0545638, 3.99695143}, {-1, 1}], 
     InsetBox["1751", {5.00930361, 3.94010642}, {-1, 1}], 
     InsetBox["1752", {5.0167232, 3.94752863}, {-1, 1}], 
     InsetBox["1753", {5.08083908, 4.02820921}, {-1, 1}], 
     InsetBox["1754", {5.02326588, 3.95478829}, {-1, 1}], 
     InsetBox["1755", {5.04836611, 3.98605519}, {-1, 1}], 
     InsetBox["1756", {5.02947531, 3.96144188}, {-1, 1}], 
     InsetBox["1757", {5.04193712, 3.97676274}, {-1, 1}], 
     InsetBox["1758", {5.03554934, 3.96868725}, {-1, 1}], 
     InsetBox["1759", {5., 3.92285776}, {-1, 1}], 
     InsetBox["1760", {5.10081608, 4.04832288}, {-1, 1}], 
     InsetBox["1761", {5.06372256, 4.00013498}, {-1, 1}], 
     InsetBox["1762", {5.01024563, 3.9326661}, {-1, 1}], 
     InsetBox["1763", {5.0768602, 4.01576388}, {-1, 1}], 
     InsetBox["1764", {5.20269243, 4.18041554}, {-1, 1}], 
     InsetBox["1765", {5.0245611, 3.9487726}, {-1, 1}], 
     InsetBox["1766", {6.39458868, 7.11946496}, {-1, 1}], 
     InsetBox["1767", {5.03093716, 3.95572922}, {-1, 1}], 
     InsetBox["1768", {5.01860723, 3.94038964}, {-1, 1}], 
     InsetBox["1769", {5.72302159, 5.01390852}, {-1, 1}], 
     InsetBox["1770", {5.05742622, 3.98849563}, {-1, 1}], 
     InsetBox["1771", {6.12282129, 5.9549224}, {-1, 1}], 
     InsetBox["1772", {5.03687066, 3.96227098}, {-1, 1}], 
     InsetBox["1773", {5.04310156, 3.96993141}, {-1, 1}], 
     InsetBox["1774", {5.12079308, 4.06843655}, {-1, 1}], 
     InsetBox["1775", {5.05111288, 3.97840129}, {-1, 1}], 
     InsetBox["1776", {5.23631732, 4.22195882}, {-1, 1}], 
     InsetBox["1777", {5., 3.91363398}, {-1, 1}], 
     InsetBox["1778", {5.07288132, 4.00331854}, {-1, 1}], 
     InsetBox["1779", {5.03749005, 3.95693437}, {-1, 1}], 
     InsetBox["1780", {5.032399, 3.95001656}, {-1, 1}], 
     InsetBox["1781", {5.01153887, 3.92361046}, {-1, 1}], 
     InsetBox["1782", {5.02729776, 3.94217816}, {-1, 1}], 
     InsetBox["1783", {5.04426601, 3.96310007}, {-1, 1}], 
     InsetBox["1784", {5.02049125, 3.93325065}, {-1, 1}], 
     InsetBox["1785", {5.06765219, 3.99156986}, {-1, 1}], 
     InsetBox["1786", {5.14567543, 4.09127386}, {-1, 1}], 
     InsetBox["1787", {5.05189569, 3.97074413}, {-1, 1}], 
     InsetBox["1788", {5.45788971, 4.54029251}, {-1, 1}], 
     InsetBox["1789", {5.06028865, 3.98003984}, {-1, 1}], 
     InsetBox["1790", {5.03810945, 3.95159775}, {-1, 1}], 
     InsetBox["1791", {5.04404295, 3.95813951}, {-1, 1}], 
     InsetBox["1792", {5., 3.90265095}, {-1, 1}], 
     InsetBox["1793", {5.37969374, 4.41255116}, {-1, 1}], 
     InsetBox["1794", {5.03598829, 3.94396668}, {-1, 1}], 
     InsetBox["1795", {5.0438199, 3.95317895}, {-1, 1}], 
     InsetBox["1796", {5.01283212, 3.91455481}, {-1, 1}], 
     InsetBox["1797", {5.03003442, 3.93558372}, {-1, 1}], 
     InsetBox["1798", {5.05267851, 3.96308697}, {-1, 1}], 
     InsetBox["1799", {5.07787815, 3.99464408}, {-1, 1}], 
     InsetBox["1800", {5.17055778, 4.11411116}, {-1, 1}], 
     InsetBox["1801", {5.06068982, 3.97155685}, {-1, 1}], 
     InsetBox["1802", {5.02307774, 3.92436315}, {-1, 1}], 
     InsetBox["1803", {5.08739683, 4.00419196}, {-1, 1}], 
     InsetBox["1804", {5.04256696, 3.94725454}, {-1, 1}], 
     InsetBox["1805", {5.07158181, 3.98300473}, {-1, 1}], 
     InsetBox["1806", {5.05091207, 3.95681468}, {-1, 1}], 
     InsetBox["1807", {5.09691551, 4.01373984}, {-1, 1}], 
     InsetBox["1808", {5., 3.89166792}, {-1, 1}], 
     InsetBox["1809", {5.19076357, 4.13512656}, {-1, 1}], 
     InsetBox["1810", {5.04914563, 3.9505424}, {-1, 1}], 
     InsetBox["1811", {5.03957759, 3.93791679}, {-1, 1}], 
     InsetBox["1812", {5.061091, 3.96307386}, {-1, 1}], 
     InsetBox["1813", {5.01448093, 3.90372097}, {-1, 1}], 
     InsetBox["1814", {5.03416525, 3.92768445}, {-1, 1}], 
     InsetBox["1815", {5.21096936, 4.15614195}, {-1, 1}], 
     InsetBox["1816", {5.04702447, 3.94291132}, {-1, 1}], 
     InsetBox["1817", {5.90581686, 5.34301398}, {-1, 1}], 
     InsetBox["1818", {5.05778118, 3.95548985}, {-1, 1}], 
     InsetBox["1819", {5.02566423, 3.91547564}, {-1, 1}], 
     InsetBox["1820", {5.08287498, 3.98596963}, {-1, 1}], 
     InsetBox["1821", {5.07239816, 3.97258325}, {-1, 1}], 
     InsetBox["1822", {5.11939049, 4.03058302}, {-1, 1}], 
     InsetBox["1823", {5.05447136, 3.94790585}, {-1, 1}], 
     InsetBox["1824", {5.23870081, 4.18779808}, {-1, 1}], 
     InsetBox["1825", {5.32737043, 4.31191632}, {-1, 1}], 
     InsetBox["1826", {5., 3.87859936}, {-1, 1}], 
     InsetBox["1827", {5.27821915, 4.23922852}, {-1, 1}], 
     InsetBox["1828", {6.27970663, 6.39719639}, {-1, 1}], 
     InsetBox["1829", {5.04525276, 3.93100576}, {-1, 1}], 
     InsetBox["1830", {5.57932459, 4.69977842}, {-1, 1}], 
     InsetBox["1831", {5.01612973, 3.89288712}, {-1, 1}], 
     InsetBox["1832", {5.03829609, 3.91978519}, {-1, 1}], 
     InsetBox["1833", {5.0732145, 3.96216177}, {-1, 1}], 
     InsetBox["1834", {5.09793346, 3.99262005}, {-1, 1}], 
     InsetBox["1835", {5.05447809, 3.93706638}, {-1, 1}], 
     InsetBox["1836", {5.08410649, 3.97360966}, {-1, 1}], 
     InsetBox["1837", {5.02896185, 3.90479099}, {-1, 1}], 
     InsetBox["1838", {5.14186547, 4.04742619}, {-1, 1}], 
     InsetBox["1839", {6.40412486, 6.97552166}, {-1, 1}], 
     InsetBox["1840", {5.06845896, 3.95264438}, {-1, 1}], 
     InsetBox["1841", {5., 3.86553081}, {-1, 1}], 
     InsetBox["1842", {5.06370343, 3.943127}, {-1, 1}], 
     InsetBox["1843", {5.05092794, 3.92409473}, {-1, 1}], 
     InsetBox["1844", {6.1091667, 5.80494032}, {-1, 1}], 
     InsetBox["1845", {5.11299195, 3.99927047}, {-1, 1}], 
     InsetBox["1846", {5.01747753, 3.87977471}, {-1, 1}], 
     InsetBox["1847", {5.16986354, 4.07178992}, {-1, 1}], 
     InsetBox["1848", {5.04359652, 3.90957876}, {-1, 1}], 
     InsetBox["1849", {5.085338, 3.96124968}, {-1, 1}], 
     InsetBox["1850", {5.06193171, 3.93122144}, {-1, 1}], 
     InsetBox["1851", {5.03225947, 3.89410633}, {-1, 1}], 
     InsetBox["1852", {5.07913675, 3.94979891}, {-1, 1}], 
     InsetBox["1853", {5.10120697, 3.97654147}, {-1, 1}], 
     InsetBox["1854", {5., 3.84999371}, {-1, 1}], 
     InsetBox["1855", {5.07293549, 3.93834815}, {-1, 1}], 
     InsetBox["1856", {6.5, 8.}, {-1, 1}], 
     InsetBox["1857", {5.1978616, 4.09615364}, {-1, 1}], 
     InsetBox["1858", {5.21947295, 4.12489549}, {-1, 1}], 
     InsetBox["1859", {5.24108429, 4.15363734}, {-1, 1}], 
     InsetBox["1860", {5.01882532, 3.8666623}, {-1, 1}], 
     InsetBox["1861", {5.0582312, 3.91436653}, {-1, 1}], 
     InsetBox["1862", {5.13796491, 4.01284315}, {-1, 1}], 
     InsetBox["1863", {5.27470919, 4.19518062}, {-1, 1}], 
     InsetBox["1864", {5.04889696, 3.89937233}, {-1, 1}], 
     InsetBox["1865", {5.03495506, 3.88095006}, {-1, 1}], 
     InsetBox["1866", {6.50476883, 7.8530986}, {-1, 1}], 
     InsetBox["1867", {5.07202325, 3.92357099}, {-1, 1}], 
     InsetBox["1868", {5., 3.83445662}, {-1, 1}], 
     InsetBox["1869", {5.11830744, 3.97947329}, {-1, 1}], 
     InsetBox["1870", {5.10448047, 3.96046289}, {-1, 1}], 
     InsetBox["1871", {5.09514789, 3.94661917}, {-1, 1}], 
     InsetBox["1872", {5.0858153, 3.93277544}, {-1, 1}], 
     InsetBox["1873", {5.02032617, 3.85119833}, {-1, 1}], 
     InsetBox["1874", {5.06553445, 3.90463833}, {-1, 1}], 
     InsetBox["1875", {5.16293787, 4.02641583}, {-1, 1}], 
     InsetBox["1876", {5.03765065, 3.86779379}, {-1, 1}], 
     InsetBox["1877", {6.50953766, 7.7061972}, {-1, 1}], 
     InsetBox["1878", {5.0543421, 3.88693407}, {-1, 1}], 
     InsetBox["1879", {5.39338325, 4.33974186}, {-1, 1}], 
     InsetBox["1880", {6.41366103, 6.83157836}, {-1, 1}], 
     InsetBox["1881", {5., 3.81600285}, {-1, 1}], 
     InsetBox["1882", {5.08211479, 3.91592054}, {-1, 1}], 
     InsetBox["1883", {6.28308602, 6.25183901}, {-1, 1}], 
     InsetBox["1884", {5.02182701, 3.83573436}, {-1, 1}], 
     InsetBox["1885", {5.19405164, 4.05230598}, {-1, 1}], 
     InsetBox["1886", {5.12362294, 3.95967611}, {-1, 1}], 
     InsetBox["1887", {5.11115903, 3.94343942}, {-1, 1}], 
     InsetBox["1888", {5.34264596, 4.25308054}, {-1, 1}], 
     InsetBox["1889", {5.09869512, 3.92720274}, {-1, 1}], 
     InsetBox["1890", {5.27119923, 4.15113273}, {-1, 1}], 
     InsetBox["1891", {5.04065233, 3.85240295}, {-1, 1}], 
     InsetBox["1892", {5.07372914, 3.89291809}, {-1, 1}], 
     InsetBox["1893", {5.14808844, 3.98628065}, {-1, 1}], 
     InsetBox["1894", {5.05978723, 3.87449582}, {-1, 1}], 
     InsetBox["1895", {5.24818232, 4.11466442}, {-1, 1}], 
     InsetBox["1896", {5.73234795, 4.87153146}, {-1, 1}], 
     InsetBox["1897", {6.09551211, 5.65495824}, {-1, 1}], 
     InsetBox["1898", {5., 3.79754909}, {-1, 1}], 
     InsetBox["1899", {6.51744889, 7.55909169}, {-1, 1}], 
     InsetBox["1900", {5.22516542, 4.07819612}, {-1, 1}], 
     InsetBox["1901", {5.09472025, 3.90537797}, {-1, 1}], 
     InsetBox["1902", {5.0231238, 3.81739758}, {-1, 1}], 
     InsetBox["1903", {5.90289593, 5.19228338}, {-1, 1}], 
     InsetBox["1904", {5.04365402, 3.83701211}, {-1, 1}], 
     InsetBox["1905", {5.08192382, 3.88119784}, {-1, 1}], 
     InsetBox["1906", {5.0646195, 3.85856264}, {-1, 1}], 
     InsetBox["1907", {5.11571136, 3.91783785}, {-1, 1}], 
     InsetBox["1908", {5., 3.77565652}, {-1, 1}], 
     InsetBox["1909", {5.49653106, 4.44419987}, {-1, 1}], 
     InsetBox["1910", {5.17786944, 3.99308802}, {-1, 1}], 
     InsetBox["1911", {5.13696167, 3.938778}, {-1, 1}], 
     InsetBox["1912", {5.02442059, 3.7990608}, {-1, 1}], 
     InsetBox["1913", {5.33331828, 4.19684017}, {-1, 1}], 
     InsetBox["1914", {6.52536012, 7.41198618}, {-1, 1}], 
     InsetBox["1915", {6.41932404, 6.68737359}, {-1, 1}], 
     InsetBox["1916", {5.15821198, 3.95971815}, {-1, 1}], 
     InsetBox["1917", {5.10732571, 3.8948354}, {-1, 1}], 
     InsetBox["1918", {5.0462476, 3.81879231}, {-1, 1}], 
     InsetBox["1919", {5.59634648, 4.58781349}, {-1, 1}], 
     InsetBox["1920", {5.06945176, 3.84262946}, {-1, 1}], 
     InsetBox["1921", {5.08858666, 3.86472233}, {-1, 1}], 
     InsetBox["1922", {5., 3.75376396}, {-1, 1}], 
     InsetBox["1923", {6.28121454, 6.10513149}, {-1, 1}], 
     InsetBox["1924", {5.21958744, 4.02154711}, {-1, 1}], 
     InsetBox["1925", {5.13272761, 3.90847297}, {-1, 1}], 
     InsetBox["1926", {5.02605767, 3.77755614}, {-1, 1}], 
     InsetBox["1927", {5.04884118, 3.80057251}, {-1, 1}], 
     InsetBox["1928", {5.07250316, 3.82389266}, {-1, 1}], 
     InsetBox["1929", {5.40707277, 4.26693256}, {-1, 1}], 
     InsetBox["1930", {5.16276431, 3.93411658}, {-1, 1}], 
     InsetBox["1931", {5.11684785, 3.87591218}, {-1, 1}], 
     InsetBox["1932", {5.0952495, 3.84824682}, {-1, 1}], 
     InsetBox["1933", {6.53446516, 7.26510065}, {-1, 1}], 
     InsetBox["1934", {5.32399061, 4.14059979}, {-1, 1}], 
     InsetBox["1935", {5., 3.72782717}, {-1, 1}], 
     InsetBox["1936", {5.29264802, 4.095303}, {-1, 1}], 
     InsetBox["1937", {6.08533237, 5.5036757}, {-1, 1}], 
     InsetBox["1938", {5.26130543, 4.0500062}, {-1, 1}], 
     InsetBox["1939", {5.19280102, 3.9597602}, {-1, 1}], 
     InsetBox["1940", {5.02769476, 3.75605148}, {-1, 1}], 
     InsetBox["1941", {5.05211535, 3.77945576}, {-1, 1}], 
     InsetBox["1942", {5.07555456, 3.80515585}, {-1, 1}], 
     InsetBox["1943", {5.14510904, 3.88710202}, {-1, 1}], 
     InsetBox["1944", {5.09875872, 3.828993}, {-1, 1}], 
     InsetBox["1945", {6.42498705, 6.54316882}, {-1, 1}], 
     InsetBox["1946", {5.12636999, 3.85698895}, {-1, 1}], 
     InsetBox["1947", {5., 3.70189039}, {-1, 1}], 
     InsetBox["1948", {5.39192738, 4.19849971}, {-1, 1}], 
     InsetBox["1949", {5.03017816, 3.7306619}, {-1, 1}], 
     InsetBox["1950", {5.50013511, 4.35518978}, {-1, 1}], 
     InsetBox["1951", {5.05538951, 3.75833901}, {-1, 1}], 
     InsetBox["1952", {5.0784731, 3.784754}, {-1, 1}], 
     InsetBox["1953", {5.89997499, 5.04155277}, {-1, 1}], 
     InsetBox["1954", {5.24512323, 3.99078824}, {-1, 1}], 
     InsetBox["1955", {5.10226793, 3.80973918}, {-1, 1}], 
     InsetBox["1956", {6.5435702, 7.11821513}, {-1, 1}], 
     InsetBox["1957", {6.27934306, 5.95842397}, {-1, 1}], 
     InsetBox["1958", {5.18186416, 3.90568032}, {-1, 1}], 
     InsetBox["1959", {5.1286077, 3.83554989}, {-1, 1}], 
     InsetBox["1960", {5.7416743, 4.7291544}, {-1, 1}], 
     InsetBox["1961", {5.15749048, 3.86573108}, {-1, 1}], 
     InsetBox["1962", {5., 3.6712116}, {-1, 1}], 
     InsetBox["1963", {5.08139163, 3.76435216}, {-1, 1}], 
     InsetBox["1964", {5.03266156, 3.70527232}, {-1, 1}], 
     InsetBox["1965", {5.10483084, 3.79005224}, {-1, 1}], 
     InsetBox["1966", {5.06035632, 3.73349663}, {-1, 1}], 
     InsetBox["1967", {5.21861928, 3.92425861}, {-1, 1}], 
     InsetBox["1968", {5.13084541, 3.81411083}, {-1, 1}], 
     InsetBox["1969", {5.33711372, 4.07594157}, {-1, 1}], 
     InsetBox["1970", {5.37678199, 4.13006686}, {-1, 1}], 
     InsetBox["1971", {5.29744545, 4.02181628}, {-1, 1}], 
     InsetBox["1972", {6.42857781, 6.39835015}, {-1, 1}], 
     InsetBox["1973", {5.15845668, 3.84210678}, {-1, 1}], 
     InsetBox["1974", {6.07515264, 5.35239317}, {-1, 1}], 
     InsetBox["1975", {5.61336837, 4.47584857}, {-1, 1}], 
     InsetBox["1976", {5.10739375, 3.77036531}, {-1, 1}], 
     InsetBox["1977", {6.55275815, 6.97459251}, {-1, 1}], 
     InsetBox["1978", {5.1301167, 3.79540883}, {-1, 1}], 
     InsetBox["1979", {5., 3.64053281}, {-1, 1}], 
     InsetBox["1980", {5.08959282, 3.74108197}, {-1, 1}], 
     InsetBox["1981", {5.20096401, 3.87724405}, {-1, 1}], 
     InsetBox["1982", {5.06532312, 3.70865425}, {-1, 1}], 
     InsetBox["1983", {5.03634541, 3.67451151}, {-1, 1}], 
     InsetBox["1984", {5.15942289, 3.81848247}, {-1, 1}], 
     InsetBox["1985", {6.26944273, 5.80930921}, {-1, 1}], 
     InsetBox["1986", {5.12938798, 3.77670682}, {-1, 1}], 
     InsetBox["1987", {5.15540255, 3.80076541}, {-1, 1}], 
     InsetBox["1988", {6.65, 8.}, {-1, 1}], 
     InsetBox["1989", {5.50373917, 4.26617969}, {-1, 1}], 
     InsetBox["1990", {5.19750776, 3.84654737}, {-1, 1}], 
     InsetBox["1991", {5.11882933, 3.74866731}, {-1, 1}], 
     InsetBox["1992", {6.65470895, 7.85261107}, {-1, 1}], 
     InsetBox["1993", {5.15138221, 3.78304834}, {-1, 1}], 
     InsetBox["1994", {5., 3.60431348}, {-1, 1}], 
     InsetBox["1995", {5.09779401, 3.71781179}, {-1, 1}], 
     InsetBox["1996", {5.28266818, 3.94700423}, {-1, 1}], 
     InsetBox["1997", {5.04002927, 3.6437507}, {-1, 1}], 
     InsetBox["1998", {5.24443754, 3.88875702}, {-1, 1}], 
     InsetBox["1999", {5.07269083, 3.67781142}, {-1, 1}], 
     InsetBox["2000", {6.43216856, 6.25353147}, {-1, 1}], 
     InsetBox["2001", {6.56194609, 6.8309699}, {-1, 1}], 
     InsetBox["2002", {6.65941789, 7.70522214}, {-1, 1}], 
     InsetBox["2003", {5.90199951, 4.90004157}, {-1, 1}], 
     InsetBox["2004", {5.14437646, 3.75959377}, {-1, 1}], 
     InsetBox["2005", {5.19405152, 3.81585068}, {-1, 1}], 
     InsetBox["2006", {5.74720506, 4.60632491}, {-1, 1}], 
     InsetBox["2007", {5.18198755, 3.79318545}, {-1, 1}], 
     InsetBox["2008", {5.47904196, 4.18526944}, {-1, 1}], 
     InsetBox["2009", {5.13026491, 3.72696932}, {-1, 1}], 
     InsetBox["2010", {5.60688697, 4.3706377}, {-1, 1}], 
     InsetBox["2011", {5.16992358, 3.77052023}, {-1, 1}], 
     InsetBox["2012", {5.23655885, 3.85098796}, {-1, 1}], 
     InsetBox["2013", {5., 3.56809414}, {-1, 1}], 
     InsetBox["2014", {6.66688416, 7.55789822}, {-1, 1}], 
     InsetBox["2015", {6.25954239, 5.66019446}, {-1, 1}], 
     InsetBox["2016", {6.07149639, 5.20322675}, {-1, 1}], 
     InsetBox["2017", {5.10916483, 3.68778816}, {-1, 1}], 
     InsetBox["2018", {5.04364468, 3.60612828}, {-1, 1}], 
     InsetBox["2019", {5.15936493, 3.74248072}, {-1, 1}], 
     InsetBox["2020", {5.08005854, 3.64696859}, {-1, 1}], 
     InsetBox["2021", {5.34671708, 3.96974985}, {-1, 1}], 
     InsetBox["2022", {6.56779648, 6.68737688}, {-1, 1}], 
     InsetBox["2023", {5.22868015, 3.81321889}, {-1, 1}], 
     InsetBox["2024", {5.40053092, 4.03705451}, {-1, 1}], 
     InsetBox["2025", {5.20857255, 3.7856055}, {-1, 1}], 
     InsetBox["2026", {6.67435043, 7.41057429}, {-1, 1}], 
     InsetBox["2027", {5.18846495, 3.75799211}, {-1, 1}], 
     InsetBox["2028", {5.45434476, 4.10435918}, {-1, 1}], 
     InsetBox["2029", {6.43124463, 6.10750921}, {-1, 1}], 
     InsetBox["2030", {5.14563884, 3.6977649}, {-1, 1}], 
     InsetBox["2031", {5., 3.52542837}, {-1, 1}], 
     InsetBox["2032", {5.12053565, 3.65776454}, {-1, 1}], 
     InsetBox["2033", {5.32021312, 3.90322022}, {-1, 1}], 
     InsetBox["2034", {5.04726008, 3.56850585}, {-1, 1}], 
     InsetBox["2035", {5.08728935, 3.60794308}, {-1, 1}], 
     InsetBox["2036", {5.18081879, 3.71556345}, {-1, 1}], 
     InsetBox["2037", {6.68329438, 7.26386715}, {-1, 1}], 
     InsetBox["2038", {6.2520154, 5.51098341}, {-1, 1}], 
     InsetBox["2039", {5.29861805, 3.85092714}, {-1, 1}], 
     InsetBox["2040", {5.60040557, 4.26542683}, {-1, 1}], 
     InsetBox["2041", {6.57364686, 6.54378385}, {-1, 1}], 
     InsetBox["2042", {5.90402402, 4.75853038}, {-1, 1}], 
     InsetBox["2043", {5.16101277, 3.66856048}, {-1, 1}], 
     InsetBox["2044", {5., 3.48276259}, {-1, 1}], 
     InsetBox["2045", {5.21599875, 3.733362}, {-1, 1}], 
     InsetBox["2046", {5.24651086, 3.76599802}, {-1, 1}], 
     InsetBox["2047", {5.75273581, 4.48349543}, {-1, 1}], 
     InsetBox["2048", {6.06784014, 5.05406033}, {-1, 1}], 
     InsetBox["2049", {5.27702297, 3.79863405}, {-1, 1}], 
     InsetBox["2050", {6.43032069, 5.96148694}, {-1, 1}], 
     InsetBox["2051", {5.05036276, 3.5252517}, {-1, 1}], 
     InsetBox["2052", {5.13193924, 3.61800045}, {-1, 1}], 
     InsetBox["2053", {6.69223833, 7.11716001}, {-1, 1}], 
     InsetBox["2054", {5.09452017, 3.56891756}, {-1, 1}], 
     InsetBox["2055", {5.56615655, 4.17203916}, {-1, 1}], 
     InsetBox["2056", {5.20227266, 3.68864618}, {-1, 1}], 
     InsetBox["2057", {5.39598871, 3.91768342}, {-1, 1}], 
     InsetBox["2058", {6.57744898, 6.3995039}, {-1, 1}], 
     InsetBox["2059", {5., 3.43263357}, {-1, 1}], 
     InsetBox["2060", {5.46394811, 3.99816746}, {-1, 1}], 
     InsetBox["2061", {5.24353254, 3.70873188}, {-1, 1}], 
     InsetBox["2062", {5.17658912, 3.62805783}, {-1, 1}], 
     InsetBox["2063", {5.05346544, 3.48199756}, {-1, 1}], 
     InsetBox["2064", {5.36067725, 3.85086631}, {-1, 1}], 
     InsetBox["2065", {6.7007687, 6.9739354}, {-1, 1}], 
     InsetBox["2066", {6.24448841, 5.36177236}, {-1, 1}], 
     InsetBox["2067", {5.53190752, 4.0786515}, {-1, 1}], 
     InsetBox["2068", {5.14334282, 3.57823637}, {-1, 1}], 
     InsetBox["2069", {5.28444917, 3.74639054}, {-1, 1}], 
     InsetBox["2070", {6.42323424, 5.81323277}, {-1, 1}], 
     InsetBox["2071", {5.10072552, 3.52507504}, {-1, 1}], 
     InsetBox["2072", {5.73878771, 4.36817309}, {-1, 1}], 
     InsetBox["2073", {5.32536579, 3.78404921}, {-1, 1}], 
     InsetBox["2074", {5.89806363, 4.62483633}, {-1, 1}], 
     InsetBox["2075", {6.8, 8.}, {-1, 1}], 
     InsetBox["2076", {5.22437425, 3.64725555}, {-1, 1}], 
     InsetBox["2077", {5., 3.38250454}, {-1, 1}], 
     InsetBox["2078", {6.80464906, 7.85212354}, {-1, 1}], 
     InsetBox["2079", {6.06571763, 4.91034953}, {-1, 1}], 
     InsetBox["2080", {6.5812511, 6.25522394}, {-1, 1}], 
     InsetBox["2081", {6.70929906, 6.83071079}, {-1, 1}], 
     InsetBox["2082", {5.05707266, 3.43357211}, {-1, 1}], 
     InsetBox["2083", {5.19216547, 3.58755518}, {-1, 1}], 
     InsetBox["2084", {6.80929812, 7.70424708}, {-1, 1}], 
     InsetBox["2085", {5.15205411, 3.53310665}, {-1, 1}], 
     InsetBox["2086", {5.10693087, 3.48123252}, {-1, 1}], 
     InsetBox["2087", {5.27215938, 3.66645327}, {-1, 1}], 
     InsetBox["2088", {6.41614778, 5.6649786}, {-1, 1}], 
     InsetBox["2089", {6.81631943, 7.55670474}, {-1, 1}], 
     InsetBox["2090", {6.24009685, 5.21417012}, {-1, 1}], 
     InsetBox["2091", {6.71450106, 6.68722601}, {-1, 1}], 
     InsetBox["2092", {5.72483961, 4.25285076}, {-1, 1}], 
     InsetBox["2093", {5.32506728, 3.70354428}, {-1, 1}], 
     InsetBox["2094", {5.24647585, 3.60586492}, {-1, 1}], 
     InsetBox["2095", {5., 3.32378583}, {-1, 1}], 
     InsetBox["2096", {6.58127471, 6.10988692}, {-1, 1}], 
     InsetBox["2097", {6.82334075, 7.4091624}, {-1, 1}], 
     InsetBox["2098", {5.06067989, 3.38514666}, {-1, 1}], 
     InsetBox["2099", {5.2033827, 3.54113826}, {-1, 1}], 
     InsetBox["2100", {5.1607654, 3.48797694}, {-1, 1}], 
     InsetBox["2101", {5.11414532, 3.43451065}, {-1, 1}], 
     InsetBox["2102", {5.89210324, 4.49114229}, {-1, 1}], 
     InsetBox["2103", {5.37797518, 3.74063529}, {-1, 1}], 
     InsetBox["2104", {5.43281095, 3.80498148}, {-1, 1}], 
     InsetBox["2105", {5.68342787, 4.1453356}, {-1, 1}], 
     InsetBox["2106", {5.48764673, 3.86932766}, {-1, 1}], 
     InsetBox["2107", {6.83212361, 7.26263365}, {-1, 1}], 
     InsetBox["2108", {6.06359511, 4.76663872}, {-1, 1}], 
     InsetBox["2109", {5.30078622, 3.62417466}, {-1, 1}], 
     InsetBox["2110", {6.4091823, 5.51596246}, {-1, 1}], 
     InsetBox["2111", {6.71970307, 6.54374123}, {-1, 1}], 
     InsetBox["2112", {5.56483143, 3.95357405}, {-1, 1}], 
     InsetBox["2113", {5., 3.26506711}, {-1, 1}], 
     InsetBox["2114", {5.16652872, 3.44354292}, {-1, 1}], 
     InsetBox["2115", {6.58129832, 5.9645499}, {-1, 1}], 
     InsetBox["2116", {5.26226574, 3.55356236}, {-1, 1}], 
     InsetBox["2117", {6.23570529, 5.06656788}, {-1, 1}], 
     InsetBox["2118", {5.21459992, 3.49472135}, {-1, 1}], 
     InsetBox["2119", {5.12135977, 3.38778878}, {-1, 1}], 
     InsetBox["2120", {5.07039448, 3.32979714}, {-1, 1}], 
     InsetBox["2121", {5.64201613, 4.03782044}, {-1, 1}], 
     InsetBox["2122", {6.84090646, 7.11610489}, {-1, 1}], 
     InsetBox["2123", {5.3656854, 3.66069802}, {-1, 1}], 
     InsetBox["2124", {5.87068844, 4.36570849}, {-1, 1}], 
     InsetBox["2125", {6.72391832, 6.39994069}, {-1, 1}], 
     InsetBox["2126", {5.21891212, 3.45257519}, {-1, 1}], 
     InsetBox["2127", {5.17229204, 3.3991089}, {-1, 1}], 
     InsetBox["2128", {6.40221682, 5.36694632}, {-1, 1}], 
     InsetBox["2129", {6.84877924, 6.97327829}, {-1, 1}], 
     InsetBox["2130", {5.32114877, 3.56598646}, {-1, 1}], 
     InsetBox["2131", {5.43058457, 3.69722137}, {-1, 1}], 
     InsetBox["2132", {6.57702574, 5.81715633}, {-1, 1}], 
     InsetBox["2133", {6.0552601, 4.62858382}, {-1, 1}], 
     InsetBox["2134", {5., 3.19653095}, {-1, 1}], 
     InsetBox["2135", {5.27805562, 3.50125981}, {-1, 1}], 
     InsetBox["2136", {5.08010907, 3.27444762}, {-1, 1}], 
     InsetBox["2137", {5.14078896, 3.33580846}, {-1, 1}], 
     InsetBox["2138", {6.22943574, 4.92065748}, {-1, 1}], 
     InsetBox["2139", {5.50494466, 3.75909664}, {-1, 1}], 
     InsetBox["2140", {6.95, 8.}, {-1, 1}], 
     InsetBox["2141", {6.72813357, 6.25614014}, {-1, 1}], 
     InsetBox["2142", {5.22322431, 3.41042903}, {-1, 1}], 
     InsetBox["2143", {5.84927364, 4.24027469}, {-1, 1}], 
     InsetBox["2144", {6.85665202, 6.83045169}, {-1, 1}], 
     InsetBox["2145", {6.95444505, 7.85101937}, {-1, 1}], 
     InsetBox["2146", {5.3981117, 3.59898442}, {-1, 1}], 
     InsetBox["2147", {6.9588901, 7.70203874}, {-1, 1}], 
     InsetBox["2148", {5.57930475, 3.82097191}, {-1, 1}], 
     InsetBox["2149", {6.57275317, 5.66976275}, {-1, 1}], 
     InsetBox["2150", {5.2782622, 3.4404314}, {-1, 1}], 
     InsetBox["2151", {6.39782338, 5.21934315}, {-1, 1}], 
     InsetBox["2152", {5.20962887, 3.35770572}, {-1, 1}], 
     InsetBox["2153", {5.34151132, 3.50779827}, {-1, 1}], 
     InsetBox["2154", {5.80069919, 4.11863204}, {-1, 1}], 
     InsetBox["2155", {6.96565176, 7.55458442}, {-1, 1}], 
     InsetBox["2156", {5., 3.12799479}, {-1, 1}], 
     InsetBox["2157", {6.86120565, 6.68707515}, {-1, 1}], 
     InsetBox["2158", {5.66571474, 3.90898065}, {-1, 1}], 
     InsetBox["2159", {6.72877914, 6.11128811}, {-1, 1}], 
     InsetBox["2160", {5.16021814, 3.28382813}, {-1, 1}], 
     InsetBox["2161", {6.04692508, 4.49052891}, {-1, 1}], 
     InsetBox["2162", {5.08650442, 3.20264243}, {-1, 1}], 
     InsetBox["2163", {6.97241342, 7.4071301}, {-1, 1}], 
     InsetBox["2164", {5.47507462, 3.63198238}, {-1, 1}], 
     InsetBox["2165", {5.75212474, 3.99698939}, {-1, 1}], 
     InsetBox["2166", {6.2231662, 4.77474707}, {-1, 1}], 
     InsetBox["2167", {5.27846877, 3.37960298}, {-1, 1}], 
     InsetBox["2168", {6.86575928, 6.54369861}, {-1, 1}], 
     InsetBox["2169", {6.5663492, 5.52094151}, {-1, 1}], 
     InsetBox["2170", {6.98055381, 7.2615351}, {-1, 1}], 
     InsetBox["2171", {5.33761228, 3.42828761}, {-1, 1}], 
     InsetBox["2172", {5.430538, 3.53727083}, {-1, 1}], 
     InsetBox["2173", {6.7294247, 5.96643607}, {-1, 1}], 
     InsetBox["2174", {6.39342994, 5.07173998}, {-1, 1}], 
     InsetBox["2175", {5.24696569, 3.31630254}, {-1, 1}], 
     InsetBox["2176", {5., 3.04833019}, {-1, 1}], 
     InsetBox["2177", {6.02281238, 4.35401433}, {-1, 1}], 
     InsetBox["2178", {5.56733743, 3.6897936}, {-1, 1}], 
     InsetBox["2179", {6.98869421, 7.1159401}, {-1, 1}], 
     InsetBox["2180", {5.09289977, 3.13083724}, {-1, 1}], 
     InsetBox["2181", {5.17300884, 3.20875391}, {-1, 1}], 
     InsetBox["2182", {6.87038766, 6.40037748}, {-1, 1}], 
     InsetBox["2183", {6.21245656, 4.6323313}, {-1, 1}], 
     InsetBox["2184", {6.55994523, 5.37212028}, {-1, 1}], 
     InsetBox["2185", {6.99577335, 6.97316995}, {-1, 1}], 
     InsetBox["2186", {6.72633491, 5.81935415}, {-1, 1}], 
     InsetBox["2187", {5.33371324, 3.34877694}, {-1, 1}], 
     InsetBox["2188", {5.65960023, 3.74760482}, {-1, 1}], 
     InsetBox["2189", {5.51956468, 3.56674339}, {-1, 1}], 
     InsetBox["2190", {6.38765921, 4.92537925}, {-1, 1}], 
     InsetBox["2191", {5.44164656, 3.45395808}, {-1, 1}], 
     InsetBox["2192", {5.99869968, 4.21749975}, {-1, 1}], 
     InsetBox["2193", {6.87501605, 6.25705635}, {-1, 1}], 
     InsetBox["2194", {5., 2.9686656}, {-1, 1}], 
     InsetBox["2195", {7.00285249, 6.8303998}, {-1, 1}], 
     InsetBox["2196", {7.1, 8.}, {-1, 1}], 
     InsetBox["2197", {5.26737784, 3.2324428}, {-1, 1}], 
     InsetBox["2198", {7.10424104, 7.8499152}, {-1, 1}], 
     InsetBox["2199", {5.09807351, 3.04789814}, {-1, 1}], 
     InsetBox["2200", {5.18579954, 3.13367969}, {-1, 1}], 
     InsetBox["2201", {6.72324512, 5.67227222}, {-1, 1}], 
     InsetBox["2202", {7.10848207, 7.69983041}, {-1, 1}], 
     InsetBox["2203", {6.55554991, 5.22451618}, {-1, 1}], 
     InsetBox["2204", {5.77845282, 3.83682136}, {-1, 1}], 
     InsetBox["2205", {6.20174692, 4.48991552}, {-1, 1}], 
     InsetBox["2206", {5.94800254, 4.07176882}, {-1, 1}], 
     InsetBox["2207", {7.11498408, 7.55246411}, {-1, 1}], 
     InsetBox["2208", {7.00729662, 6.68700019}, {-1, 1}], 
     InsetBox["2209", {6.87628356, 6.11268929}, {-1, 1}], 
     InsetBox["2210", {5.62973019, 3.62049056}, {-1, 1}], 
     InsetBox["2211", {7.1214861, 7.40509781}, {-1, 1}], 
     InsetBox["2212", {6.38188847, 4.77901852}, {-1, 1}], 
     InsetBox["2213", {5.45275511, 3.37064532}, {-1, 1}], 
     InsetBox["2214", {5.54568083, 3.47962855}, {-1, 1}], 
     InsetBox["2215", {5., 2.87650916}, {-1, 1}], 
     InsetBox["2216", {5.36174684, 3.25613168}, {-1, 1}], 
     InsetBox["2217", {6.71801288, 5.52352412}, {-1, 1}], 
     InsetBox["2218", {7.01174074, 6.54360058}, {-1, 1}], 
     InsetBox["2219", {7.12898402, 7.26043656}, {-1, 1}], 
     InsetBox["2220", {5.89730541, 3.9260379}, {-1, 1}], 
     InsetBox["2221", {5.10324726, 2.96495904}, {-1, 1}], 
     InsetBox["2222", {6.87755108, 5.96832224}, {-1, 1}], 
     InsetBox["2223", {6.55115459, 5.07691208}, {-1, 1}], 
     InsetBox["2224", {5.28778999, 3.14858306}, {-1, 1}], 
     InsetBox["2225", {6.17493632, 4.34232017}, {-1, 1}], 
     InsetBox["2226", {5.19614703, 3.04746608}, {-1, 1}], 
     InsetBox["2227", {5.73989571, 3.67423773}, {-1, 1}], 
     InsetBox["2228", {7.13648195, 7.11577532}, {-1, 1}], 
     InsetBox["2229", {7.01594949, 6.40028208}, {-1, 1}], 
     InsetBox["2230", {6.37135548, 4.63437142}, {-1, 1}], 
     InsetBox["2231", {6.71278064, 5.37477602}, {-1, 1}], 
     InsetBox["2232", {6.87564407, 5.82155197}, {-1, 1}], 
     InsetBox["2233", {7.14276745, 6.97306161}, {-1, 1}], 
     InsetBox["2234", {5.66376192, 3.5231093}, {-1, 1}], 
     InsetBox["2235", {5., 2.78435273}, {-1, 1}], 
     InsetBox["2236", {6.54588267, 4.93010103}, {-1, 1}], 
     InsetBox["2237", {5.57179698, 3.3925137}, {-1, 1}], 
     InsetBox["2238", {6.14812572, 4.19472481}, {-1, 1}], 
     InsetBox["2239", {7.02015824, 6.25696357}, {-1, 1}], 
     InsetBox["2240", {5.47758036, 3.27536852}, {-1, 1}], 
     InsetBox["2241", {5.10845979, 2.87042143}, {-1, 1}], 
     InsetBox["2242", {5.38978045, 3.16348642}, {-1, 1}], 
     InsetBox["2243", {7.14905296, 6.83034791}, {-1, 1}], 
     InsetBox["2244", {5.20649451, 2.96125247}, {-1, 1}], 
     InsetBox["2245", {5.30166318, 3.05830266}, {-1, 1}], 
     InsetBox["2246", {7.25, 8.}, {-1, 1}], 
     InsetBox["2247", {5.8911909, 3.76466207}, {-1, 1}], 
     InsetBox["2248", {7.25408645, 7.85007549}, {-1, 1}], 
     InsetBox["2249", {6.87373707, 5.67478169}, {-1, 1}], 
     InsetBox["2250", {6.70797243, 5.22659264}, {-1, 1}], 
     InsetBox["2251", {7.2581729, 7.70015098}, {-1, 1}], 
     InsetBox["2252", {6.36082248, 4.48972432}, {-1, 1}], 
     InsetBox["2253", {7.02157662, 6.11277981}, {-1, 1}], 
     InsetBox["2254", {7.15338758, 6.68692523}, {-1, 1}], 
     InsetBox["2255", {6.0953059, 4.02490561}, {-1, 1}], 
     InsetBox["2256", {7.26388257, 7.55201724}, {-1, 1}], 
     InsetBox["2257", {5.78184301, 3.56659005}, {-1, 1}], 
     InsetBox["2258", {6.54061075, 4.78328998}, {-1, 1}], 
     InsetBox["2259", {7.26959224, 7.4038835}, {-1, 1}], 
     InsetBox["2260", {6.86967656, 5.52610672}, {-1, 1}], 
     InsetBox["2261", {5., 2.67833523}, {-1, 1}], 
     InsetBox["2262", {7.15772221, 6.54350255}, {-1, 1}], 
     InsetBox["2263", {5.69779364, 3.42572803}, {-1, 1}], 
     InsetBox["2264", {5.59341387, 3.29460535}, {-1, 1}], 
     InsetBox["2265", {5.11367232, 2.77588382}, {-1, 1}], 
     InsetBox["2266", {7.022995, 5.96859604}, {-1, 1}], 
     InsetBox["2267", {6.70316423, 5.07840927}, {-1, 1}], 
     InsetBox["2268", {7.27559247, 7.25953025}, {-1, 1}], 
     InsetBox["2269", {5.50240561, 3.18009171}, {-1, 1}], 
     InsetBox["2270", {5.40717934, 3.06913923}, {-1, 1}], 
     InsetBox["2271", {6.33795867, 4.3408975}, {-1, 1}], 
     InsetBox["2272", {5.31553637, 2.96802225}, {-1, 1}], 
     InsetBox["2273", {5.21691958, 2.8643337}, {-1, 1}], 
     InsetBox["2274", {6.04248608, 3.8550864}, {-1, 1}], 
     InsetBox["2275", {7.28159269, 7.115177}, {-1, 1}], 
     InsetBox["2276", {7.16151132, 6.40018667}, {-1, 1}], 
     InsetBox["2277", {6.53025439, 4.63641154}, {-1, 1}], 
     InsetBox["2278", {6.86561605, 5.37743175}, {-1, 1}], 
     InsetBox["2279", {7.02089156, 5.82108499}, {-1, 1}], 
     InsetBox["2280", {7.28727325, 6.97192234}, {-1, 1}], 
     InsetBox["2281", {5.93070138, 3.6308964}, {-1, 1}], 
     InsetBox["2282", {6.69736009, 4.93094234}, {-1, 1}], 
     InsetBox["2283", {7.16530043, 6.2568708}, {-1, 1}], 
     InsetBox["2284", {6.31509486, 4.19207068}, {-1, 1}], 
     InsetBox["2285", {5., 2.57231772}, {-1, 1}], 
     InsetBox["2286", {5.82379031, 3.45894237}, {-1, 1}], 
     InsetBox["2287", {7.29295381, 6.82866769}, {-1, 1}], 
     InsetBox["2288", {5.61503077, 3.19669701}, {-1, 1}], 
     InsetBox["2289", {5.71936329, 3.32046301}, {-1, 1}], 
     InsetBox["2290", {5.11895057, 2.66791057}, {-1, 1}], 
     InsetBox["2291", {5.52123371, 3.08325491}, {-1, 1}], 
     InsetBox["2292", {7.01878813, 5.67357395}, {-1, 1}], 
     InsetBox["2293", {5.42457824, 2.97479203}, {-1, 1}], 
     InsetBox["2294", {5.22734465, 2.76741492}, {-1, 1}], 
     InsetBox["2295", {5.33016923, 2.86992382}, {-1, 1}], 
     InsetBox["2296", {6.86039496, 5.2286691}, {-1, 1}], 
     InsetBox["2297", {7.4, 8.}, {-1, 1}], 
     InsetBox["2298", {6.51989803, 4.48953311}, {-1, 1}], 
     InsetBox["2299", {7.40393187, 7.85023577}, {-1, 1}], 
     InsetBox["2300", {7.16686967, 6.11287032}, {-1, 1}], 
     InsetBox["2301", {7.40786373, 7.70047155}, {-1, 1}], 
     InsetBox["2302", {7.29743567, 6.68567664}, {-1, 1}], 
     InsetBox["2303", {6.69155595, 4.78347542}, {-1, 1}], 
     InsetBox["2304", {7.41278106, 7.55157037}, {-1, 1}], 
     InsetBox["2305", {6.27977931, 4.02936616}, {-1, 1}], 
     InsetBox["2306", {7.01500963, 5.5245609}, {-1, 1}], 
     InsetBox["2307", {7.41769838, 7.40266919}, {-1, 1}], 
     InsetBox["2308", {7.30191753, 6.54268559}, {-1, 1}], 
     InsetBox["2309", {6.07955975, 3.69520276}, {-1, 1}], 
     InsetBox["2310", {7.16843892, 5.96886983}, {-1, 1}], 
     InsetBox["2311", {6.85517387, 5.07990646}, {-1, 1}], 
     InsetBox["2312", {7.42220091, 7.25862394}, {-1, 1}], 
     InsetBox["2313", {6.50098101, 4.33947483}, {-1, 1}], 
     InsetBox["2314", {5., 2.45112908}, {-1, 1}], 
     InsetBox["2315", {5.63528808, 3.09737058}, {-1, 1}], 
     InsetBox["2316", {5.84531271, 3.34632066}, {-1, 1}], 
     InsetBox["2317", {5.54006181, 2.9864181}, {-1, 1}], 
     InsetBox["2318", {5.12422882, 2.55993731}, {-1, 1}], 
     InsetBox["2319", {5.74093294, 3.21519798}, {-1, 1}], 
     InsetBox["2320", {5.44341887, 2.87551394}, {-1, 1}], 
     InsetBox["2321", {5.34480208, 2.77182538}, {-1, 1}], 
     InsetBox["2322", {5.97021186, 3.49713074}, {-1, 1}], 
     InsetBox["2323", {7.30476154, 6.39866041}, {-1, 1}], 
     InsetBox["2324", {7.42670344, 7.11457869}, {-1, 1}], 
     InsetBox["2325", {5.23790115, 2.65748591}, {-1, 1}], 
     InsetBox["2326", {6.68324638, 4.63657286}, {-1, 1}], 
     InsetBox["2327", {7.01123113, 5.37554786}, {-1, 1}], 
     InsetBox["2328", {6.24446375, 3.86666165}, {-1, 1}], 
     InsetBox["2329", {7.16613905, 5.82061802}, {-1, 1}], 
     InsetBox["2330", {7.43177905, 6.97078308}, {-1, 1}], 
     InsetBox["2331", {6.84883751, 4.93178366}, {-1, 1}], 
     InsetBox["2332", {7.30760555, 6.25463523}, {-1, 1}], 
     InsetBox["2333", {6.48206399, 4.18941655}, {-1, 1}], 
     InsetBox["2334", {7.43685467, 6.82698746}, {-1, 1}], 
     InsetBox["2335", {7.16383918, 5.67236621}, {-1, 1}], 
     InsetBox["2336", {7.00672271, 5.22677219}, {-1, 1}], 
     InsetBox["2337", {6.67493682, 4.4896703}, {-1, 1}], 
     InsetBox["2338", {7.3093302, 6.11046441}, {-1, 1}], 
     InsetBox["2339", {7.55, 8.}, {-1, 1}], 
     InsetBox["2340", {5.65554539, 2.99804416}, {-1, 1}], 
     InsetBox["2341", {5.75636389, 3.11132696}, {-1, 1}], 
     InsetBox["2342", {5.55922786, 2.88822298}, {-1, 1}], 
     InsetBox["2343", {7.55328455, 7.84996454}, {-1, 1}], 
     InsetBox["2344", {7.44148376, 6.68442805}, {-1, 1}], 
     InsetBox["2345", {5.46225951, 2.77623585}, {-1, 1}], 
     InsetBox["2346", {5.86683512, 3.23369895}, {-1, 1}], 
     InsetBox["2347", {5., 2.32994043}, {-1, 1}], 
     InsetBox["2348", {6.84250115, 4.78366086}, {-1, 1}], 
     InsetBox["2349", {7.55656911, 7.69992907}, {-1, 1}], 
     InsetBox["2350", {5.36061751, 2.66154988}, {-1, 1}], 
     InsetBox["2351", {5.12763384, 2.43632952}, {-1, 1}], 
     InsetBox["2352", {5.24845765, 2.54755689}, {-1, 1}], 
     InsetBox["2353", {5.98970287, 3.37215772}, {-1, 1}], 
     InsetBox["2354", {6.11663342, 3.53531911}, {-1, 1}], 
     InsetBox["2355", {7.56042471, 7.55180352}, {-1, 1}], 
     InsetBox["2356", {7.1603427, 5.52301508}, {-1, 1}], 
     InsetBox["2357", {6.46425271, 4.03382672}, {-1, 1}], 
     InsetBox["2358", {7.00221428, 5.07799653}, {-1, 1}], 
     InsetBox["2359", {7.44611285, 6.54186863}, {-1, 1}], 
     InsetBox["2360", {7.5642803, 7.40367796}, {-1, 1}], 
     InsetBox["2361", {7.31105485, 5.96629359}, {-1, 1}], 
     InsetBox["2362", {6.26575216, 3.71009818}, {-1, 1}], 
     InsetBox["2363", {6.65964449, 4.33997612}, {-1, 1}], 
     InsetBox["2364", {7.5677607, 7.25870435}, {-1, 1}], 
     InsetBox["2365", {7.44801176, 6.39713415}, {-1, 1}], 
     InsetBox["2366", {6.83623837, 4.63673417}, {-1, 1}], 
     InsetBox["2367", {7.57124111, 7.11373074}, {-1, 1}], 
     InsetBox["2368", {7.15684622, 5.37366396}, {-1, 1}], 
     InsetBox["2369", {7.30883, 5.8175777}, {-1, 1}], 
     InsetBox["2370", {5.67503685, 2.90093201}, {-1, 1}], 
     InsetBox["2371", {5.77179483, 3.00745595}, {-1, 1}], 
     InsetBox["2372", {5.57839391, 2.79002785}, {-1, 1}], 
     InsetBox["2373", {5.87743969, 3.12528334}, {-1, 1}], 
     InsetBox["2374", {6.99779352, 4.93032335}, {-1, 1}], 
     InsetBox["2375", {7.57534686, 6.9695232}, {-1, 1}], 
     InsetBox["2376", {5.48333388, 2.66561385}, {-1, 1}], 
     InsetBox["2377", {6.44644143, 3.87823689}, {-1, 1}], 
     InsetBox["2378", {7.44991067, 6.25239966}, {-1, 1}], 
     InsetBox["2379", {5.37643295, 2.55127437}, {-1, 1}], 
     InsetBox["2380", {6.64435216, 4.19028193}, {-1, 1}], 
     InsetBox["2381", {5.13103885, 2.31272174}, {-1, 1}], 
     InsetBox["2382", {6.00919387, 3.2471847}, {-1, 1}], 
     InsetBox["2383", {5., 2.19241434}, {-1, 1}], 
     InsetBox["2384", {5.25526768, 2.42152997}, {-1, 1}], 
     InsetBox["2385", {6.13409302, 3.39799477}, {-1, 1}], 
     InsetBox["2386", {7.30660515, 5.66886181}, {-1, 1}], 
     InsetBox["2387", {7.57945262, 6.82531566}, {-1, 1}], 
     InsetBox["2388", {7.15305045, 5.22487528}, {-1, 1}], 
     InsetBox["2389", {6.8299756, 4.48980749}, {-1, 1}], 
     InsetBox["2390", {7.45179072, 6.10805851}, {-1, 1}], 
     InsetBox["2391", {7.58270039, 6.68135106}, {-1, 1}], 
     InsetBox["2392", {6.99337276, 4.78265018}, {-1, 1}], 
     InsetBox["2393", {5.78131079, 2.91429274}, {-1, 1}], 
     InsetBox["2394", {7.7, 8.}, {-1, 1}], 
     InsetBox["2395", {6.28704056, 3.55353471}, {-1, 1}], 
     InsetBox["2396", {7.70263724, 7.8496933}, {-1, 1}], 
     InsetBox["2397", {5.69452831, 2.80381986}, {-1, 1}], 
     InsetBox["2398", {7.70527448, 7.6993866}, {-1, 1}], 
     InsetBox["2399", {7.30350195, 5.51934525}, {-1, 1}], 
     InsetBox["2400", {5.88804426, 3.01686773}, {-1, 1}], 
     InsetBox["2401", {7.70806835, 7.55203666}, {-1, 1}], 
     InsetBox["2402", {7.14925468, 5.0760866}, {-1, 1}], 
     InsetBox["2403", {6.63158387, 4.03764506}, {-1, 1}], 
     InsetBox["2404", {7.58594815, 6.53738645}, {-1, 1}], 
     InsetBox["2405", {7.45367077, 5.96371736}, {-1, 1}], 
     InsetBox["2406", {5.60934338, 2.68229496}, {-1, 1}], 
     InsetBox["2407", {7.71086222, 7.40468673}, {-1, 1}], 
     InsetBox["2408", {6.81830796, 4.3404774}, {-1, 1}], 
     InsetBox["2409", {6.45194456, 3.7249936}, {-1, 1}], 
     InsetBox["2410", {6.01356367, 3.12584108}, {-1, 1}], 
     InsetBox["2411", {5.50440825, 2.55499186}, {-1, 1}], 
     InsetBox["2412", {7.7133205, 7.25878476}, {-1, 1}], 
     InsetBox["2413", {5.387281, 2.42324821}, {-1, 1}], 
     InsetBox["2414", {6.98675656, 4.63492122}, {-1, 1}], 
     InsetBox["2415", {7.58692648, 6.39138365}, {-1, 1}], 
     InsetBox["2416", {7.30039875, 5.3698287}, {-1, 1}], 
     InsetBox["2417", {5.2620777, 2.29550306}, {-1, 1}], 
     InsetBox["2418", {5.1332989, 2.17614032}, {-1, 1}], 
     InsetBox["2419", {7.45152095, 5.81453738}, {-1, 1}], 
     InsetBox["2420", {6.15155262, 3.26067044}, {-1, 1}], 
     InsetBox["2421", {7.71577877, 7.11288279}, {-1, 1}], 
     InsetBox["2422", {5., 2.05488825}, {-1, 1}], 
     InsetBox["2423", {5.79082676, 2.82112952}, {-1, 1}], 
     InsetBox["2424", {5.88758473, 2.92765346}, {-1, 1}], 
     InsetBox["2425", {7.14674953, 4.92886305}, {-1, 1}], 
     InsetBox["2426", {7.71891467, 6.96826332}, {-1, 1}], 
     InsetBox["2427", {7.58790481, 6.24538085}, {-1, 1}], 
     InsetBox["2428", {6.29932903, 3.4114301}, {-1, 1}], 
     InsetBox["2429", {6.61881558, 3.88500818}, {-1, 1}], 
     InsetBox["2430", {6.80664033, 4.19114731}, {-1, 1}], 
     InsetBox["2431", {7.44937112, 5.66535741}, {-1, 1}], 
     InsetBox["2432", {7.29770161, 5.22122012}, {-1, 1}], 
     InsetBox["2433", {5.73535288, 2.69897608}, {-1, 1}], 
     InsetBox["2434", {7.72205058, 6.82364386}, {-1, 1}], 
     InsetBox["2435", {6.98014036, 4.48719225}, {-1, 1}], 
     InsetBox["2436", {6.01793346, 3.00449746}, {-1, 1}], 
     InsetBox["2437", {7.58934552, 6.10010027}, {-1, 1}], 
     InsetBox["2438", {5.64029285, 2.57456207}, {-1, 1}], 
     InsetBox["2439", {5.88712521, 2.83843918}, {-1, 1}], 
     InsetBox["2440", {6.4574477, 3.57175031}, {-1, 1}], 
     InsetBox["2441", {7.14424438, 4.78163951}, {-1, 1}], 
     InsetBox["2442", {7.72391702, 6.67827406}, {-1, 1}], 
     InsetBox["2443", {5.51929433, 2.42496645}, {-1, 1}], 
     InsetBox["2444", {6.14968764, 3.12639882}, {-1, 1}], 
     InsetBox["2445", {7.85, 8.}, {-1, 1}], 
     InsetBox["2446", {7.4466612, 5.51567543}, {-1, 1}], 
     InsetBox["2447", {7.85131862, 7.85077257}, {-1, 1}], 
     InsetBox["2448", {5.39812906, 2.29522205}, {-1, 1}], 
     InsetBox["2449", {7.85263724, 7.70154515}, {-1, 1}], 
     InsetBox["2450", {7.29500448, 5.07261154}, {-1, 1}], 
     InsetBox["2451", {7.59078623, 5.95481969}, {-1, 1}], 
     InsetBox["2452", {7.72578345, 6.53290427}, {-1, 1}], 
     InsetBox["2453", {5.2665978, 2.15986631}, {-1, 1}], 
     InsetBox["2454", {7.85403418, 7.55379611}, {-1, 1}], 
     InsetBox["2455", {6.79891503, 4.0414634}, {-1, 1}], 
     InsetBox["2456", {5.13555895, 2.0395589}, {-1, 1}], 
     InsetBox["2457", {6.97112348, 4.33851408}, {-1, 1}], 
     InsetBox["2458", {6.620703, 3.73306072}, {-1, 1}], 
     InsetBox["2459", {7.85543111, 7.40604707}, {-1, 1}], 
     InsetBox["2460", {5.85915851, 2.73275532}, {-1, 1}], 
     InsetBox["2461", {5., 1.90811052}, {-1, 1}], 
     InsetBox["2462", {6.0004488, 2.88551601}, {-1, 1}], 
     InsetBox["2463", {6.3116175, 3.26932549}, {-1, 1}], 
     InsetBox["2464", {7.85666025, 7.25902201}, {-1, 1}], 
     InsetBox["2465", {7.13727475, 4.63310826}, {-1, 1}], 
     InsetBox["2466", {7.7258412, 6.38563316}, {-1, 1}], 
     InsetBox["2467", {7.44395127, 5.36599345}, {-1, 1}], 
     InsetBox["2468", {7.58992751, 5.80661255}, {-1, 1}], 
     InsetBox["2469", {7.85788939, 7.11199695}, {-1, 1}], 
     InsetBox["2470", {5.77617745, 2.59413229}, {-1, 1}], 
     InsetBox["2471", {7.29275973, 4.92500768}, {-1, 1}], 
     InsetBox["2472", {6.46456505, 3.42486543}, {-1, 1}], 
     InsetBox["2473", {7.72589895, 6.23836204}, {-1, 1}], 
     InsetBox["2474", {7.85945734, 6.96561314}, {-1, 1}], 
     InsetBox["2475", {6.14782267, 2.99212719}, {-1, 1}], 
     InsetBox["2476", {5.65944086, 2.44096704}, {-1, 1}], 
     InsetBox["2477", {6.96210661, 4.18983592}, {-1, 1}], 
     InsetBox["2478", {6.79118974, 3.89177948}, {-1, 1}], 
     InsetBox["2479", {7.58906879, 5.65840542}, {-1, 1}], 
     InsetBox["2480", {7.44235277, 5.21756496}, {-1, 1}], 
     InsetBox["2481", {5.53418042, 2.29494104}, {-1, 1}], 
     InsetBox["2482", {5.98296413, 2.76653456}, {-1, 1}], 
     InsetBox["2483", {7.86102529, 6.81922934}, {-1, 1}], 
     InsetBox["2484", {7.13030512, 4.48457701}, {-1, 1}], 
     InsetBox["2485", {5.40429041, 2.15764722}, {-1, 1}], 
     InsetBox["2486", {7.72690032, 6.09214203}, {-1, 1}], 
     InsetBox["2487", {6.62259043, 3.58111326}, {-1, 1}], 
     InsetBox["2488", {5.2711179, 2.02422956}, {-1, 1}], 
     InsetBox["2489", {6.30935741, 3.12961982}, {-1, 1}], 
     InsetBox["2490", {7.29051498, 4.77740383}, {-1, 1}], 
     InsetBox["2491", {7.86195851, 6.67247037}, {-1, 1}], 
     InsetBox["2492", {5.13688683, 1.89524946}, {-1, 1}], 
     InsetBox["2493", {7.58683594, 5.50878233}, {-1, 1}], 
     InsetBox["2494", {5.92749025, 2.64438112}, {-1, 1}], 
     InsetBox["2495", {5., 1.76133279}, {-1, 1}], 
     InsetBox["2496", {7.72790169, 5.94592202}, {-1, 1}], 
     InsetBox["2497", {7.44075427, 5.06913648}, {-1, 1}], 
     InsetBox["2498", {6.11331286, 2.84337857}, {-1, 1}], 
     InsetBox["2499", {7.86289173, 6.5257114}, {-1, 1}], 
     InsetBox["2500", {8., 8.}, {-1, 1}], 
     InsetBox["2501", {8., 7.85185185}, {-1, 1}], 
     InsetBox["2502", {6.95584154, 4.0411625}, {-1, 1}], 
     InsetBox["2503", {8., 7.7037037}, {-1, 1}], 
     InsetBox["2504", {7.123939, 4.33655077}, {-1, 1}], 
     InsetBox["2505", {6.47168239, 3.27798054}, {-1, 1}], 
     InsetBox["2506", {8., 7.55555556}, {-1, 1}], 
     InsetBox["2507", {6.78946144, 3.74112785}, {-1, 1}], 
     InsetBox["2508", {8., 7.40740741}, {-1, 1}], 
     InsetBox["2509", {5.79958739, 2.45696763}, {-1, 1}], 
     InsetBox["2510", {7.28519067, 4.6294303}, {-1, 1}], 
     InsetBox["2511", {7.8629206, 6.37800176}, {-1, 1}], 
     InsetBox["2512", {7.58460309, 5.35915924}, {-1, 1}], 
     InsetBox["2513", {8., 7.25925926}, {-1, 1}], 
     InsetBox["2514", {7.72833408, 5.79868773}, {-1, 1}], 
     InsetBox["2515", {5.67858887, 2.30737201}, {-1, 1}], 
     InsetBox["2516", {6.62670862, 3.43293003}, {-1, 1}], 
     InsetBox["2517", {8., 7.11111111}, {-1, 1}], 
     InsetBox["2518", {7.43876993, 4.92115231}, {-1, 1}], 
     InsetBox["2519", {5.54198302, 2.15542813}, {-1, 1}], 
     InsetBox["2520", {6.30709732, 2.98991414}, {-1, 1}], 
     InsetBox["2521", {7.86294948, 6.23029213}, {-1, 1}], 
     InsetBox["2522", {5.41045176, 2.02007239}, {-1, 1}], 
     InsetBox["2523", {8., 6.96296296}, {-1, 1}], 
     InsetBox["2524", {6.07880305, 2.69462995}, {-1, 1}], 
     InsetBox["2525", {6.94957648, 3.89248908}, {-1, 1}], 
     InsetBox["2526", {7.11757289, 4.18852452}, {-1, 1}], 
     InsetBox["2527", {5.27377365, 1.8823884}, {-1, 1}], 
     InsetBox["2528", {7.72876647, 5.65145343}, {-1, 1}], 
     InsetBox["2529", {7.58354079, 5.21070154}, {-1, 1}], 
     InsetBox["2530", {7.27986636, 4.48145677}, {-1, 1}], 
     InsetBox["2531", {8., 6.81481481}, {-1, 1}], 
     InsetBox["2532", {5.1382147, 1.75094002}, {-1, 1}], 
     InsetBox["2533", {7.86345016, 6.08310805}, {-1, 1}], 
     InsetBox["2534", {6.78773315, 3.59047621}, {-1, 1}], 
     InsetBox["2535", {6.46902719, 3.13284081}, {-1, 1}], 
     InsetBox["2536", {7.43678558, 4.77316815}, {-1, 1}], 
     InsetBox["2537", {5.95221764, 2.49173048}, {-1, 1}], 
     InsetBox["2538", {5., 1.61455505}, {-1, 1}], 
     InsetBox["2539", {8., 6.66666667}, {-1, 1}], 
     InsetBox["2540", {7.72701068, 5.50188923}, {-1, 1}], 
     InsetBox["2541", {7.86395084, 5.93592397}, {-1, 1}], 
     InsetBox["2542", {7.58247848, 5.06224384}, {-1, 1}], 
     InsetBox["2543", {6.28495997, 2.83986057}, {-1, 1}], 
     InsetBox["2544", {5.82299733, 2.31980298}, {-1, 1}], 
     InsetBox["2545", {8., 6.51851852}, {-1, 1}], 
     InsetBox["2546", {6.63082682, 3.2847468}, {-1, 1}], 
     InsetBox["2547", {7.11276805, 4.0408616}, {-1, 1}], 
     InsetBox["2548", {7.27418164, 4.33327057}, {-1, 1}], 
     InsetBox["2549", {6.94746006, 3.74276798}, {-1, 1}], 
     InsetBox["2550", {5.68774038, 2.1647131}, {-1, 1}], 
     InsetBox["2551", {5.54978563, 2.01591522}, {-1, 1}], 
     InsetBox["2552", {7.4331066, 4.62575234}, {-1, 1}], 
     InsetBox["2553", {8., 6.37037037}, {-1, 1}], 
     InsetBox["2554", {7.7252549, 5.35232503}, {-1, 1}], 
     InsetBox["2555", {7.86416704, 5.78823275}, {-1, 1}], 
     InsetBox["2556", {5.41341739, 1.87710115}, {-1, 1}], 
     InsetBox["2557", {6.7888522, 3.44099463}, {-1, 1}], 
     InsetBox["2558", {6.46637198, 2.98770109}, {-1, 1}], 
     InsetBox["2559", {7.58125053, 4.91411271}, {-1, 1}], 
     InsetBox["2560", {5.27642941, 1.74054725}, {-1, 1}], 
     InsetBox["2561", {8., 6.22222222}, {-1, 1}], 
     InsetBox["2562", {6.10484789, 2.52649333}, {-1, 1}], 
     InsetBox["2563", {5.13867312, 1.60464286}, {-1, 1}], 
     InsetBox["2564", {7.26849691, 4.18508436}, {-1, 1}], 
     InsetBox["2565", {7.10796322, 3.89319868}, {-1, 1}], 
     InsetBox["2566", {7.86438323, 5.64054153}, {-1, 1}], 
     InsetBox["2567", {6.26282261, 2.689807}, {-1, 1}], 
     InsetBox["2568", {7.7247288, 5.20383812}, {-1, 1}], 
     InsetBox["2569", {6.62879068, 3.13704415}, {-1, 1}], 
     InsetBox["2570", {7.42942761, 4.47833653}, {-1, 1}], 
     InsetBox["2571", {6.94534364, 3.59304689}, {-1, 1}], 
     InsetBox["2572", {5., 1.46777732}, {-1, 1}], 
     InsetBox["2573", {8., 6.07407407}, {-1, 1}], 
     InsetBox["2574", {5.97694502, 2.33907984}, {-1, 1}], 
     InsetBox["2575", {7.58002257, 4.76598157}, {-1, 1}], 
     InsetBox["2576", {5.83349773, 2.17399808}, {-1, 1}], 
     InsetBox["2577", {7.86350534, 5.49168536}, {-1, 1}], 
     InsetBox["2578", {5.69689189, 2.0220542}, {-1, 1}], 
     InsetBox["2579", {6.78997126, 3.29151305}, {-1, 1}], 
     InsetBox["2580", {8., 5.92592593}, {-1, 1}], 
     InsetBox["2581", {7.7242027, 5.05535121}, {-1, 1}], 
     InsetBox["2582", {6.45660707, 2.83634257}, {-1, 1}], 
     InsetBox["2583", {5.55306113, 1.87181389}, {-1, 1}], 
     InsetBox["2584", {7.26418322, 4.03722675}, {-1, 1}], 
     InsetBox["2585", {7.42442427, 4.32999037}, {-1, 1}], 
     InsetBox["2586", {7.10545867, 3.74440812}, {-1, 1}], 
     InsetBox["2587", {5.41638302, 1.7341299}, {-1, 1}], 
     InsetBox["2588", {7.57675555, 4.61843864}, {-1, 1}], 
     InsetBox["2589", {5.27734625, 1.59473067}, {-1, 1}], 
     InsetBox["2590", {7.86262745, 5.34282918}, {-1, 1}], 
     InsetBox["2591", {8., 5.77777778}, {-1, 1}], 
     InsetBox["2592", {6.94567577, 3.44347553}, {-1, 1}], 
     InsetBox["2593", {6.62675453, 2.9893415}, {-1, 1}], 
     InsetBox["2594", {5.13913155, 1.45834571}, {-1, 1}], 
     InsetBox["2595", {7.72373113, 4.9070731}, {-1, 1}], 
     InsetBox["2596", {6.27926716, 2.52723283}, {-1, 1}], 
     InsetBox["2597", {6.13089272, 2.35835671}, {-1, 1}], 
     InsetBox["2598", {7.25986954, 3.88936913}, {-1, 1}], 
     InsetBox["2599", {5., 1.32099959}, {-1, 1}], 
     InsetBox["2600", {8., 5.62962963}, {-1, 1}], 
     InsetBox["2601", {7.41942092, 4.18164421}, {-1, 1}], 
     InsetBox["2602", {5.98742755, 2.18789911}, {-1, 1}], 
     InsetBox["2603", {7.8623644, 5.19451165}, {-1, 1}], 
     InsetBox["2604", {6.78855417, 3.14124748}, {-1, 1}], 
     InsetBox["2605", {6.44684216, 2.68498406}, {-1, 1}], 
     InsetBox["2606", {7.57348852, 4.4708957}, {-1, 1}], 
     InsetBox["2607", {5.84399814, 2.02819318}, {-1, 1}], 
     InsetBox["2608", {7.10295413, 3.59561756}, {-1, 1}], 
     InsetBox["2609", {5.700377, 1.87590797}, {-1, 1}], 
     InsetBox["2610", {7.72325957, 4.758795}, {-1, 1}], 
     InsetBox["2611", {5.55633663, 1.72771256}, {-1, 1}], 
     InsetBox["2612", {8., 5.48148148}, {-1, 1}], 
     InsetBox["2613", {6.9460079, 3.29390417}, {-1, 1}], 
     InsetBox["2614", {5.4184786, 1.58925833}, {-1, 1}], 
     InsetBox["2615", {6.62050354, 2.83757791}, {-1, 1}], 
     InsetBox["2616", {7.86210135, 5.04619412}, {-1, 1}], 
     InsetBox["2617", {7.41559839, 4.03359189}, {-1, 1}], 
     InsetBox["2618", {5.27826309, 1.4489141}, {-1, 1}], 
     InsetBox["2619", {7.2575615, 3.74099481}, {-1, 1}], 
     InsetBox["2620", {7.56942718, 4.32246525}, {-1, 1}], 
     InsetBox["2621", {7.7204045, 4.61112494}, {-1, 1}], 
     InsetBox["2622", {8., 5.33333333}, {-1, 1}], 
     InsetBox["2623", {5.13983178, 1.31217814}, {-1, 1}], 
     InsetBox["2624", {6.78713709, 2.99098191}, {-1, 1}], 
     InsetBox["2625", {7.10249934, 3.44595643}, {-1, 1}], 
     InsetBox["2626", {6.14135737, 2.20180015}, {-1, 1}], 
     InsetBox["2627", {6.29571171, 2.36465867}, {-1, 1}], 
     InsetBox["2628", {7.86186557, 4.897981}, {-1, 1}], 
     InsetBox["2629", {5.99791008, 2.03671839}, {-1, 1}], 
     InsetBox["2630", {5., 1.17422186}, {-1, 1}], 
     InsetBox["2631", {6.45368643, 2.52797234}, {-1, 1}], 
     InsetBox["2632", {5.84769287, 1.88000204}, {-1, 1}], 
     InsetBox["2633", {6.94448917, 3.14260883}, {-1, 1}], 
     InsetBox["2634", {5.70386212, 1.72976174}, {-1, 1}], 
     InsetBox["2635", {7.41177586, 3.88553958}, {-1, 1}], 
     InsetBox["2636", {7.56536583, 4.17403479}, {-1, 1}], 
     InsetBox["2637", {8., 5.18518519}, {-1, 1}], 
     InsetBox["2638", {6.61425255, 2.68581432}, {-1, 1}], 
     InsetBox["2639", {7.25525346, 3.59262049}, {-1, 1}], 
     InsetBox["2640", {7.71754942, 4.46345487}, {-1, 1}], 
     InsetBox["2641", {5.55961096, 1.58378599}, {-1, 1}], 
     InsetBox["2642", {5.42057419, 1.44438676}, {-1, 1}], 
     InsetBox["2643", {7.86162978, 4.74976787}, {-1, 1}], 
     InsetBox["2644", {7.10204455, 3.29629529}, {-1, 1}], 
     InsetBox["2645", {6.78440001, 2.83881324}, {-1, 1}], 
     InsetBox["2646", {5.27966356, 1.30335669}, {-1, 1}], 
     InsetBox["2647", {8., 5.03703704}, {-1, 1}], 
     InsetBox["2648", {7.56269504, 4.02651585}, {-1, 1}], 
     InsetBox["2649", {7.40966432, 3.7375815}, {-1, 1}], 
     InsetBox["2650", {7.71443008, 4.31494012}, {-1, 1}], 
     InsetBox["2651", {5.14053201, 1.16601057}, {-1, 1}], 
     InsetBox["2652", {6.30376846, 2.20845975}, {-1, 1}], 
     InsetBox["2653", {6.94297043, 2.99131348}, {-1, 1}], 
     InsetBox["2654", {6.15182201, 2.0452436}, {-1, 1}], 
     InsetBox["2655", {7.86020225, 4.60185876}, {-1, 1}], 
     InsetBox["2656", {6.00187544, 1.887555}, {-1, 1}], 
     InsetBox["2657", {7.2543734, 3.44246084}, {-1, 1}], 
     InsetBox["2658", {6.4605307, 2.37096062}, {-1, 1}], 
     InsetBox["2659", {5.8513876, 1.73181091}, {-1, 1}], 
     InsetBox["2660", {5., 1.02744412}, {-1, 1}], 
     InsetBox["2661", {8., 4.88888889}, {-1, 1}], 
     InsetBox["2662", {6.61800504, 2.53035267}, {-1, 1}], 
     InsetBox["2663", {5.70750685, 1.58537209}, {-1, 1}], 
     InsetBox["2664", {5.56288528, 1.43985942}, {-1, 1}], 
     InsetBox["2665", {7.10042416, 3.14397018}, {-1, 1}], 
     InsetBox["2666", {7.56002424, 3.87899692}, {-1, 1}], 
     InsetBox["2667", {7.71131074, 4.16642537}, {-1, 1}], 
     InsetBox["2668", {6.78166293, 2.68664458}, {-1, 1}], 
     InsetBox["2669", {5.42288226, 1.29956434}, {-1, 1}], 
     InsetBox["2670", {7.40755278, 3.58962342}, {-1, 1}], 
     InsetBox["2671", {7.85877471, 4.45394966}, {-1, 1}], 
     InsetBox["2672", {8., 4.74074074}, {-1, 1}], 
     InsetBox["2673", {5.28106402, 1.15779928}, {-1, 1}], 
     InsetBox["2674", {7.25349334, 3.29230119}, {-1, 1}], 
     InsetBox["2675", {6.94076754, 2.83902211}, {-1, 1}], 
     InsetBox["2676", {5.14169181, 1.02055019}, {-1, 1}], 
     InsetBox["2677", {6.15605802, 1.89510795}, {-1, 1}], 
     InsetBox["2678", {6.31182522, 2.05226084}, {-1, 1}], 
     InsetBox["2679", {6.46617956, 2.21511935}, {-1, 1}], 
     InsetBox["2680", {6.00584081, 1.73839161}, {-1, 1}], 
     InsetBox["2681", {7.70979168, 4.01943981}, {-1, 1}], 
     InsetBox["2682", {7.55829162, 3.73116388}, {-1, 1}], 
     InsetBox["2683", {7.85721504, 4.30561821}, {-1, 1}], 
     InsetBox["2684", {5.85540274, 1.5869582}, {-1, 1}], 
     InsetBox["2685", {7.09880377, 2.99164506}, {-1, 1}], 
     InsetBox["2686", {6.62175753, 2.37489103}, {-1, 1}], 
     InsetBox["2687", {8., 4.59259259}, {-1, 1}], 
     InsetBox["2688", {5.71115158, 1.44098245}, {-1, 1}], 
     InsetBox["2689", {7.40624746, 3.43896526}, {-1, 1}], 
     InsetBox["2690", {5., 0.880666393}, {-1, 1}], 
     InsetBox["2691", {6.78232365, 2.532733}, {-1, 1}], 
     InsetBox["2692", {5.56610097, 1.295772}, {-1, 1}], 
     InsetBox["2693", {7.25229482, 3.14070545}, {-1, 1}], 
     InsetBox["2694", {5.42519034, 1.15474193}, {-1, 1}], 
     InsetBox["2695", {6.93856466, 2.68673073}, {-1, 1}], 
     InsetBox["2696", {7.70827262, 3.87245426}, {-1, 1}], 
     InsetBox["2697", {7.85565537, 4.15728676}, {-1, 1}], 
     InsetBox["2698", {7.55655899, 3.58333084}, {-1, 1}], 
     InsetBox["2699", {8., 4.44444444}, {-1, 1}], 
     InsetBox["2700", {5.28338362, 1.01365625}, {-1, 1}], 
     InsetBox["2701", {7.09713508, 2.83923097}, {-1, 1}], 
     InsetBox["2702", {7.40494214, 3.28830709}, {-1, 1}], 
     InsetBox["2703", {6.31481309, 1.90111721}, {-1, 1}], 
     InsetBox["2704", {6.16029402, 1.7449723}, {-1, 1}], 
     InsetBox["2705", {6.00960565, 1.59262765}, {-1, 1}], 
     InsetBox["2706", {6.47182842, 2.05927808}, {-1, 1}], 
     InsetBox["2707", {5.14285161, 0.875089805}, {-1, 1}], 
     InsetBox["2708", {6.62671642, 2.22068731}, {-1, 1}], 
     InsetBox["2709", {5.85941788, 1.44210548}, {-1, 1}], 
     InsetBox["2710", {5.71475746, 1.29671081}, {-1, 1}], 
     InsetBox["2711", {6.78298437, 2.37882143}, {-1, 1}], 
     InsetBox["2712", {7.85489584, 4.00971991}, {-1, 1}], 
     InsetBox["2713", {7.70691891, 3.72474626}, {-1, 1}], 
     InsetBox["2714", {7.25109629, 2.9891097}, {-1, 1}], 
     InsetBox["2715", {8., 4.2962963}, {-1, 1}], 
     InsetBox["2716", {5., 0.733888661}, {-1, 1}], 
     InsetBox["2717", {5.56931665, 1.15168458}, {-1, 1}], 
     InsetBox["2718", {7.55557772, 3.43309103}, {-1, 1}], 
     InsetBox["2719", {6.93958383, 2.53406857}, {-1, 1}], 
     InsetBox["2720", {5.42833499, 1.01088054}, {-1, 1}], 
     InsetBox["2721", {7.40416547, 3.13744072}, {-1, 1}], 
     InsetBox["2722", {7.09546639, 2.68681688}, {-1, 1}], 
     InsetBox["2723", {5.28570322, 0.869513217}, {-1, 1}], 
     InsetBox["2724", {7.85413631, 3.86215305}, {-1, 1}], 
     InsetBox["2725", {8., 4.14814815}, {-1, 1}], 
     InsetBox["2726", {7.7055652, 3.57703826}, {-1, 1}], 
     InsetBox["2727", {6.16380855, 1.59829711}, {-1, 1}], 
     InsetBox["2728", {6.31780096, 1.74997359}, {-1, 1}], 
     InsetBox["2729", {6.47356815, 1.90712648}, {-1, 1}], 
     InsetBox["2730", {6.01337048, 1.4468637}, {-1, 1}], 
     InsetBox["2731", {6.63167531, 2.0664836}, {-1, 1}], 
     InsetBox["2732", {7.25020904, 2.83750569}, {-1, 1}], 
     InsetBox["2733", {5.86341396, 1.29764962}, {-1, 1}], 
     InsetBox["2734", {5.1437187, 0.729172467}, {-1, 1}], 
     InsetBox["2735", {7.55459645, 3.28285121}, {-1, 1}], 
     InsetBox["2736", {6.78725329, 2.22625527}, {-1, 1}], 
     InsetBox["2737", {5.71836334, 1.15243917}, {-1, 1}], 
     InsetBox["2738", {6.94060301, 2.3814064}, {-1, 1}], 
     InsetBox["2739", {7.40338881, 2.98657434}, {-1, 1}], 
     InsetBox["2740", {5.57328637, 1.00810483}, {-1, 1}], 
     InsetBox["2741", {5., 0.587110928}, {-1, 1}], 
     InsetBox["2742", {8., 4.}, {-1, 1}], 
     InsetBox["2743", {7.85345945, 3.71422498}, {-1, 1}], 
     InsetBox["2744", {7.09684402, 2.53540413}, {-1, 1}], 
     InsetBox["2745", {7.70490798, 3.42721679}, {-1, 1}], 
     InsetBox["2746", {5.43147965, 0.867019148}, {-1, 1}], 
     InsetBox["2747", {7.55417619, 3.13288366}, {-1, 1}], 
     InsetBox["2748", {7.24932179, 2.68590169}, {-1, 1}], 
     InsetBox["2749", {6.32025292, 1.60306189}, {-1, 1}], 
     InsetBox["2750", {5.28743741, 0.724456273}, {-1, 1}], 
     InsetBox["2751", {6.16732308, 1.45162191}, {-1, 1}], 
     InsetBox["2752", {6.47530789, 1.75497487}, {-1, 1}], 
     InsetBox["2753", {6.63287384, 1.91434115}, {-1, 1}], 
     InsetBox["2754", {6.01641118, 1.30141314}, {-1, 1}], 
     InsetBox["2755", {8., 3.85185185}, {-1, 1}], 
     InsetBox["2756", {6.79152221, 2.07368912}, {-1, 1}], 
     InsetBox["2757", {5.86741003, 1.15319376}, {-1, 1}], 
     InsetBox["2758", {7.8527826, 3.56629691}, {-1, 1}], 
     InsetBox["2759", {5.1445858, 0.583255129}, {-1, 1}], 
     InsetBox["2760", {7.40328301, 2.83578042}, {-1, 1}], 
     InsetBox["2761", {6.94321905, 2.22949662}, {-1, 1}], 
     InsetBox["2762", {5.72244364, 1.00844314}, {-1, 1}], 
     InsetBox["2763", {7.70425075, 3.27739533}, {-1, 1}], 
     InsetBox["2764", {7.09822165, 2.38399138}, {-1, 1}], 
     InsetBox["2765", {5.57725609, 0.864525079}, {-1, 1}], 
     InsetBox["2766", {5., 0.440333196}, {-1, 1}], 
     InsetBox["2767", {7.55375593, 2.98291611}, {-1, 1}], 
     InsetBox["2768", {7.25059118, 2.53533406}, {-1, 1}], 
     InsetBox["2769", {8., 3.7037037}, {-1, 1}], 
     InsetBox["2770", {5.43424085, 0.722432278}, {-1, 1}], 
     InsetBox["2771", {7.85245399, 3.4173121}, {-1, 1}], 
     InsetBox["2772", {6.32270489, 1.45615019}, {-1, 1}], 
     InsetBox["2773", {6.4766973, 1.60782667}, {-1, 1}], 
     InsetBox["2774", {6.16940841, 1.30517666}, {-1, 1}], 
     InsetBox["2775", {6.63407236, 1.7621987}, {-1, 1}], 
     InsetBox["2776", {5.2891716, 0.57939933}, {-1, 1}], 
     InsetBox["2777", {7.4031772, 2.6849865}, {-1, 1}], 
     InsetBox["2778", {6.01945188, 1.15596258}, {-1, 1}], 
     InsetBox["2779", {6.79217952, 1.92155582}, {-1, 1}], 
     InsetBox["2780", {7.7041869, 3.1283266}, {-1, 1}], 
     InsetBox["2781", {6.9458351, 2.07758683}, {-1, 1}], 
     InsetBox["2782", {5.87160091, 1.00878145}, {-1, 1}], 
     InsetBox["2783", {7.09918482, 2.23273796}, {-1, 1}], 
     InsetBox["2784", {5.14537785, 0.437389303}, {-1, 1}], 
     InsetBox["2785", {5.72652393, 0.864447105}, {-1, 1}], 
     InsetBox["2786", {8., 3.55555556}, {-1, 1}], 
     InsetBox["2787", {7.55359915, 2.83231505}, {-1, 1}], 
     InsetBox["2788", {7.85212538, 3.26832729}, {-1, 1}], 
     InsetBox["2789", {7.25186057, 2.38476643}, {-1, 1}], 
     InsetBox["2790", {5.5810443, 0.720408282}, {-1, 1}], 
     InsetBox["2791", {5., 0.293555464}, {-1, 1}], 
     InsetBox["2792", {7.70412304, 2.97925788}, {-1, 1}], 
     InsetBox["2793", {5.43700205, 0.577845407}, {-1, 1}], 
     InsetBox["2794", {7.40433835, 2.53526399}, {-1, 1}], 
     InsetBox["2795", {6.4780867, 1.46067846}, {-1, 1}], 
     InsetBox["2796", {6.324143, 1.30983013}, {-1, 1}], 
     InsetBox["2797", {6.63450088, 1.61463243}, {-1, 1}], 
     InsetBox["2798", {6.17149373, 1.1587314}, {-1, 1}], 
     InsetBox["2799", {6.79283683, 1.76942253}, {-1, 1}], 
     InsetBox["2800", {8., 3.40740741}, {-1, 1}], 
     InsetBox["2801", {6.02367933, 1.01114747}, {-1, 1}], 
     InsetBox["2802", {6.94627118, 1.92634696}, {-1, 1}], 
     InsetBox["2803", {5.2907557, 0.434445409}, {-1, 1}], 
     InsetBox["2804", {7.55344237, 2.681714}, {-1, 1}], 
     InsetBox["2805", {7.10014798, 2.08148454}, {-1, 1}], 
     InsetBox["2806", {5.87579178, 0.86436913}, {-1, 1}], 
     InsetBox["2807", {7.85209345, 3.11971886}, {-1, 1}], 
     InsetBox["2808", {5.73074551, 0.720302831}, {-1, 1}], 
     InsetBox["2809", {7.25245017, 2.2341802}, {-1, 1}], 
     InsetBox["2810", {5.1461699, 0.291523476}, {-1, 1}], 
     InsetBox["2811", {7.70391528, 2.82884969}, {-1, 1}], 
     InsetBox["2812", {5.58483251, 0.576291485}, {-1, 1}], 
     InsetBox["2813", {7.40549949, 2.38554148}, {-1, 1}], 
     InsetBox["2814", {8., 3.25925926}, {-1, 1}], 
     InsetBox["2815", {6.47887759, 1.31448359}, {-1, 1}], 
     InsetBox["2816", {5., 0.146777732}, {-1, 1}], 
     InsetBox["2817", {6.6349294, 1.46706617}, {-1, 1}], 
     InsetBox["2818", {6.3255811, 1.16351007}, {-1, 1}], 
     InsetBox["2819", {6.79230446, 1.6214382}, {-1, 1}], 
     InsetBox["2820", {5.43924576, 0.43306236}, {-1, 1}], 
     InsetBox["2821", {7.85206152, 2.97111042}, {-1, 1}], 
     InsetBox["2822", {6.17575775, 1.0135135}, {-1, 1}], 
     InsetBox["2823", {7.55435125, 2.5324309}, {-1, 1}], 
     InsetBox["2824", {6.94670726, 1.7751071}, {-1, 1}], 
     InsetBox["2825", {6.02790677, 0.866332367}, {-1, 1}], 
     InsetBox["2826", {7.10036284, 1.9311381}, {-1, 1}], 
     InsetBox["2827", {5.29233979, 0.289491488}, {-1, 1}], 
     InsetBox["2828", {5.88044673, 0.720197379}, {-1, 1}], 
     InsetBox["2829", {7.25303978, 2.08359397}, {-1, 1}], 
     InsetBox["2830", {7.70370753, 2.6784415}, {-1, 1}], 
     InsetBox["2831", {8., 3.11111111}, {-1, 1}], 
     InsetBox["2832", {5.7349671, 0.576158556}, {-1, 1}], 
     InsetBox["2833", {7.40571553, 2.23562243}, {-1, 1}], 
     InsetBox["2834", {5.14808495, 0.145761738}, {-1, 1}], 
     InsetBox["2835", {7.85195764, 2.82183225}, {-1, 1}], 
     InsetBox["2836", {5.58773583, 0.431679311}, {-1, 1}], 
     InsetBox["2837", {7.55526013, 2.3831478}, {-1, 1}], 
     InsetBox["2838", {6.63562979, 1.320464}, {-1, 1}], 
     InsetBox["2839", {6.47966848, 1.16828873}, {-1, 1}], 
     InsetBox["2840", {6.79177209, 1.47345388}, {-1, 1}], 
     InsetBox["2841", {6.32941364, 1.01713137}, {-1, 1}], 
     InsetBox["2842", {6.94636268, 1.62660902}, {-1, 1}], 
     InsetBox["2843", {5., 0.}, {-1, 1}], 
     InsetBox["2844", {6.18002176, 0.868295604}, {-1, 1}], 
     InsetBox["2845", {5.44148947, 0.288279313}, {-1, 1}], 
     InsetBox["2846", {7.10057769, 1.78079167}, {-1, 1}], 
     InsetBox["2847", {7.70436415, 2.52959781}, {-1, 1}], 
     InsetBox["2848", {6.03181155, 0.72139062}, {-1, 1}], 
     InsetBox["2849", {8., 2.96296296}, {-1, 1}], 
     InsetBox["2850", {7.25270088, 1.93313151}, {-1, 1}], 
     InsetBox["2851", {5.88510168, 0.576025628}, {-1, 1}], 
     InsetBox["2852", {5.2961699, 0.144745744}, {-1, 1}], 
     InsetBox["2853", {7.40593157, 2.08570339}, {-1, 1}], 
     InsetBox["2854", {7.85185377, 2.67255408}, {-1, 1}], 
     InsetBox["2855", {5.7385062, 0.431488507}, {-1, 1}], 
     InsetBox["2856", {7.55560473, 2.23372235}, {-1, 1}], 
     InsetBox["2857", {5.15, 0.}, {-1, 1}], 
     InsetBox["2858", {6.63633018, 1.17386182}, {-1, 1}], 
     InsetBox["2859", {6.79238199, 1.3264444}, {-1, 1}], 
     InsetBox["2860", {6.48306953, 1.02074925}, {-1, 1}], 
     InsetBox["2861", {5.59063916, 0.287067137}, {-1, 1}], 
     InsetBox["2862", {6.9460181, 1.47811095}, {-1, 1}], 
     InsetBox["2863", {8., 2.81481481}, {-1, 1}], 
     InsetBox["2864", {6.33324617, 0.870752683}, {-1, 1}], 
     InsetBox["2865", {7.70502077, 2.38075412}, {-1, 1}], 
     InsetBox["2866", {7.1004209, 1.63177984}, {-1, 1}], 
     InsetBox["2867", {6.18317637, 0.722583861}, {-1, 1}], 
     InsetBox["2868", {7.25236199, 1.78266905}, {-1, 1}], 
     InsetBox["2869", {5.44574474, 0.144139656}, {-1, 1}], 
     InsetBox["2870", {6.03571633, 0.576448873}, {-1, 1}], 
     InsetBox["2871", {7.40503893, 1.93512491}, {-1, 1}], 
     InsetBox["2872", {7.85218208, 2.52405816}, {-1, 1}], 
     InsetBox["2873", {5.88927658, 0.431297704}, {-1, 1}], 
     InsetBox["2874", {7.55594933, 2.08429689}, {-1, 1}], 
     InsetBox["2875", {5.3, 0.}, {-1, 1}], 
     InsetBox["2876", {8., 2.66666667}, {-1, 1}], 
     InsetBox["2877", {5.74204531, 0.286818458}, {-1, 1}], 
     InsetBox["2878", {7.70549393, 2.23182226}, {-1, 1}], 
     InsetBox["2879", {6.79299189, 1.17943492}, {-1, 1}], 
     InsetBox["2880", {6.6384735, 1.02673394}, {-1, 1}], 
     InsetBox["2881", {6.94647257, 1.33066344}, {-1, 1}], 
     InsetBox["2882", {6.48647058, 0.873209762}, {-1, 1}], 
     InsetBox["2883", {7.10026411, 1.48276802}, {-1, 1}], 
     InsetBox["2884", {5.59531958, 0.143533569}, {-1, 1}], 
     InsetBox["2885", {6.33623632, 0.724669383}, {-1, 1}], 
     InsetBox["2886", {7.25249379, 1.63380287}, {-1, 1}], 
     InsetBox["2887", {7.85251039, 2.37556224}, {-1, 1}], 
     InsetBox["2888", {6.18633097, 0.576872119}, {-1, 1}], 
     InsetBox["2889", {7.40414629, 1.78454643}, {-1, 1}], 
     InsetBox["2890", {5.45, 0.}, {-1, 1}], 
     InsetBox["2891", {6.03989626, 0.431724567}, {-1, 1}], 
     InsetBox["2892", {7.55528346, 1.93443138}, {-1, 1}], 
     InsetBox["2893", {8., 2.51851852}, {-1, 1}], 
     InsetBox["2894", {5.89345147, 0.286569779}, {-1, 1}], 
     InsetBox["2895", {7.70596709, 2.0828904}, {-1, 1}], 
     InsetBox["2896", {6.79387747, 1.03271864}, {-1, 1}], 
     InsetBox["2897", {6.94692705, 1.18321593}, {-1, 1}], 
     InsetBox["2898", {5.74602266, 0.143409229}, {-1, 1}], 
     InsetBox["2899", {6.64061682, 0.879606064}, {-1, 1}], 
     InsetBox["2900", {7.10056316, 1.33488249}, {-1, 1}], 
     InsetBox["2901", {7.85274697, 2.22702224}, {-1, 1}], 
     InsetBox["2902", {6.48929627, 0.726754906}, {-1, 1}], 
     InsetBox["2903", {7.25262558, 1.48493669}, {-1, 1}], 
     InsetBox["2904", {6.33922647, 0.578586084}, {-1, 1}], 
     InsetBox["2905", {7.40456667, 1.63582589}, {-1, 1}], 
     InsetBox["2906", {5.6, 0.}, {-1, 1}], 
     InsetBox["2907", {6.19051594, 0.432151431}, {-1, 1}], 
     InsetBox["2908", {8., 2.37037037}, {-1, 1}], 
     InsetBox["2909", {7.55461758, 1.78456586}, {-1, 1}], 
     InsetBox["2910", {6.04407619, 0.287000261}, {-1, 1}], 
     InsetBox["2911", {7.70552798, 1.93373784}, {-1, 1}], 
     InsetBox["2912", {5.89672574, 0.143284889}, {-1, 1}], 
     InsetBox["2913", {7.85298354, 2.07848224}, {-1, 1}], 
     InsetBox["2914", {6.94762079, 1.03623128}, {-1, 1}], 
     InsetBox["2915", {6.79476305, 0.886002366}, {-1, 1}], 
     InsetBox["2916", {7.1008622, 1.18699695}, {-1, 1}], 
     InsetBox["2917", {6.64294797, 0.732671933}, {-1, 1}], 
     InsetBox["2918", {7.25288283, 1.33716318}, {-1, 1}], 
     InsetBox["2919", {5.75, 0.}, {-1, 1}], 
     InsetBox["2920", {6.49212196, 0.580300049}, {-1, 1}], 
     InsetBox["2921", {7.40498704, 1.48710536}, {-1, 1}], 
     InsetBox["2922", {8., 2.22222222}, {-1, 1}], 
     InsetBox["2923", {6.34288835, 0.433829944}, {-1, 1}], 
     InsetBox["2924", {7.55478061, 1.6353853}, {-1, 1}], 
     InsetBox["2925", {6.19470091, 0.287430743}, {-1, 1}], 
     InsetBox["2926", {7.70508887, 1.78458529}, {-1, 1}], 
     InsetBox["2927", {6.0470381, 0.143500131}, {-1, 1}], 
     InsetBox["2928", {7.85276399, 1.92983189}, {-1, 1}], 
     InsetBox["2929", {5.9, 0.}, {-1, 1}], 
     InsetBox["2930", {6.94831453, 0.889246628}, {-1, 1}], 
     InsetBox["2931", {7.1013641, 1.03974392}, {-1, 1}], 
     InsetBox["2932", {6.79659968, 0.73858896}, {-1, 1}], 
     InsetBox["2933", {7.25314009, 1.18938966}, {-1, 1}], 
     InsetBox["2934", {8., 2.07407407}, {-1, 1}], 
     InsetBox["2935", {6.64527913, 0.585737802}, {-1, 1}], 
     InsetBox["2936", {7.40520251, 1.33944387}, {-1, 1}], 
     InsetBox["2937", {6.49526075, 0.435508457}, {-1, 1}], 
     InsetBox["2938", {7.55494365, 1.48620474}, {-1, 1}], 
     InsetBox["2939", {6.34655023, 0.289073804}, {-1, 1}], 
     InsetBox["2940", {7.70499456, 1.6349447}, {-1, 1}], 
     InsetBox["2941", {6.19735046, 0.143715372}, {-1, 1}], 
     InsetBox["2942", {7.85254444, 1.78118153}, {-1, 1}], 
     InsetBox["2943", {6.05, 0.}, {-1, 1}], 
     InsetBox["2944", {8., 1.92592593}, {-1, 1}], 
     InsetBox["2945", {7.10186601, 0.892490891}, {-1, 1}], 
     InsetBox["2946", {6.94878508, 0.741899573}, {-1, 1}], 
     InsetBox["2947", {7.25323759, 1.04169694}, {-1, 1}], 
     InsetBox["2948", {6.7984363, 0.591175555}, {-1, 1}], 
     InsetBox["2949", {7.40541797, 1.19178238}, {-1, 1}], 
     InsetBox["2950", {6.64738261, 0.439930573}, {-1, 1}], 
     InsetBox["2951", {7.554716, 1.33826166}, {-1, 1}], 
     InsetBox["2952", {6.49839954, 0.290716864}, {-1, 1}], 
     InsetBox["2953", {7.70490025, 1.48530411}, {-1, 1}], 
     InsetBox["2954", {6.34827511, 0.144536902}, {-1, 1}], 
     InsetBox["2955", {7.85249728, 1.63228717}, {-1, 1}], 
     InsetBox["2956", {6.2, 0.}, {-1, 1}], 
     InsetBox["2957", {8., 1.77777778}, {-1, 1}], 
     InsetBox["2958", {7.10097048, 0.745210186}, {-1, 1}], 
     InsetBox["2959", {7.25333509, 0.89400422}, {-1, 1}], 
     InsetBox["2960", {6.94925563, 0.594552518}, {-1, 1}], 
     InsetBox["2961", {7.40511108, 1.04364996}, {-1, 1}], 
     InsetBox["2962", {6.79950447, 0.444352688}, {-1, 1}], 
     InsetBox["2963", {7.55448835, 1.19031857}, {-1, 1}], 
     InsetBox["2964", {6.64948609, 0.294123343}, {-1, 1}], 
     InsetBox["2965", {7.70422949, 1.33707944}, {-1, 1}], 
     InsetBox["2966", {6.49919977, 0.145358432}, {-1, 1}], 
     InsetBox["2967", {7.85245012, 1.4833928}, {-1, 1}], 
     InsetBox["2968", {6.35, 0.}, {-1, 1}], 
     InsetBox["2969", {8., 1.62962963}, {-1, 1}], 
     InsetBox["2970", {7.10007496, 0.59792948}, {-1, 1}], 
     InsetBox["2971", {7.25268121, 0.746356939}, {-1, 1}], 
     InsetBox["2972", {7.40480418, 0.895517549}, {-1, 1}], 
     InsetBox["2973", {6.94991931, 0.446394238}, {-1, 1}], 
     InsetBox["2974", {7.5544244, 1.04232553}, {-1, 1}], 
     InsetBox["2975", {6.80057264, 0.297529822}, {-1, 1}], 
     InsetBox["2976", {7.70355873, 1.18885477}, {-1, 1}], 
     InsetBox["2977", {6.64974304, 0.147061671}, {-1, 1}], 
     InsetBox["2978", {7.85211475, 1.33520639}, {-1, 1}], 
     InsetBox["2979", {6.5, 0.}, {-1, 1}], 
     InsetBox["2980", {8., 1.48148148}, {-1, 1}], 
     InsetBox["2981", {7.25202732, 0.598709659}, {-1, 1}], 
     InsetBox["2982", {7.40439194, 0.747503693}, {-1, 1}], 
     InsetBox["2983", {7.10033416, 0.448435787}, {-1, 1}], 
     InsetBox["2984", {7.55436045, 0.894332478}, {-1, 1}], 
     InsetBox["2985", {6.950583, 0.298235958}, {-1, 1}], 
     InsetBox["2986", {7.70373772, 1.04100109}, {-1, 1}], 
     InsetBox["2987", {6.80028632, 0.148764911}, {-1, 1}], 
     InsetBox["2988", {7.85177937, 1.18701998}, {-1, 1}], 
     InsetBox["2989", {6.65, 0.}, {-1, 1}], 
     InsetBox["2990", {8., 1.33333333}, {-1, 1}], 
     InsetBox["2991", {7.40397969, 0.599489838}, {-1, 1}], 
     InsetBox["2992", {7.25159346, 0.449167622}, {-1, 1}], 
     InsetBox["2993", {7.55368724, 0.746115588}, {-1, 1}], 
     InsetBox["2994", {7.10059336, 0.298942095}, {-1, 1}], 
     InsetBox["2995", {7.70391672, 0.893147406}, {-1, 1}], 
     InsetBox["2996", {6.9502915, 0.149117979}, {-1, 1}], 
     InsetBox["2997", {7.85186886, 1.03901906}, {-1, 1}], 
     InsetBox["2998", {6.8, 0.}, {-1, 1}], 
     InsetBox["2999", {8., 1.18518519}, {-1, 1}], 
     InsetBox["3000", {7.40285276, 0.449899457}, {-1, 1}], 
     InsetBox["3001", {7.55301403, 0.597898699}, {-1, 1}], 
     InsetBox["3002", {7.2511596, 0.299625586}, {-1, 1}], 
     InsetBox["3003", {7.70298254, 0.744727483}, {-1, 1}], 
     InsetBox["3004", {7.10029668, 0.149471047}, {-1, 1}], 
     InsetBox["3005", {7.85195836, 0.891018148}, {-1, 1}], 
     InsetBox["3006", {6.95, 0.}, {-1, 1}], 
     InsetBox["3007", {8., 1.03703704}, {-1, 1}], 
     InsetBox["3008", {7.55201274, 0.449026719}, {-1, 1}], 
     InsetBox["3009", {7.40172583, 0.300309077}, {-1, 1}], 
     InsetBox["3010", {7.70204837, 0.596307559}, {-1, 1}], 
     InsetBox["3011", {7.2505798, 0.149812793}, {-1, 1}], 
     InsetBox["3012", {7.85149127, 0.742734112}, {-1, 1}], 
     InsetBox["3013", {7.1, 0.}, {-1, 1}], 
     InsetBox["3014", {8., 0.888888889}, {-1, 1}], 
     InsetBox["3015", {7.55101145, 0.300154739}, {-1, 1}], 
     InsetBox["3016", {7.70117272, 0.44815398}, {-1, 1}], 
     InsetBox["3017", {7.40086292, 0.150154539}, {-1, 1}], 
     InsetBox["3018", {7.85102418, 0.594450076}, {-1, 1}], 
     InsetBox["3019", {7.25, 0.}, {-1, 1}], 
     InsetBox["3020", {8., 0.740740741}, {-1, 1}], 
     InsetBox["3021", {7.70029707, 0.300000401}, {-1, 1}], 
     InsetBox["3022", {7.55050573, 0.15007737}, {-1, 1}], 
     InsetBox["3023", {7.85058636, 0.446299212}, {-1, 1}], 
     InsetBox["3024", {7.4, 0.}, {-1, 1}], 
     InsetBox["3025", {8., 0.592592593}, {-1, 1}], 
     InsetBox["3026", {7.70014853, 0.1500002}, {-1, 1}], 
     InsetBox["3027", {7.85014853, 0.298148349}, {-1, 1}], 
     InsetBox["3028", {7.55, 0.}, {-1, 1}], 
     InsetBox["3029", {8., 0.444444444}, {-1, 1}], 
     InsetBox["3030", {7.85007427, 0.149074174}, {-1, 1}], 
     InsetBox["3031", {7.7, 0.}, {-1, 1}], 
     InsetBox["3032", {8., 0.296296296}, {-1, 1}], 
     InsetBox["3033", {7.85, 0.}, {-1, 1}], 
     InsetBox["3034", {8., 0.148148148}, {-1, 1}], 
     InsetBox["3035", {8., 0.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1: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
/D++PWwg
      "]]}}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.693269104687224*^9, 3.693269183174713*^9, 
  3.6932695245362377`*^9, 3.6932695591172156`*^9, 3.6932696395768175`*^9, 
  3.6932697976478586`*^9, 3.693270431508114*^9, 3.6932704912885327`*^9, 
  3.6932705325748944`*^9, 3.693270657349031*^9, 3.693270940717239*^9, 
  3.693271281985758*^9, 3.6932714748197875`*^9, 
  3.6932716409132876`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvX+M5UdyH9Y77+fM7LyZ5S45HPLInSXXx/GIFI57d8Tus3DUH7KokU+E
aPiklRCcT17rWQpyPNsShMUt/cfqIAkJD+DGgK0gN4uz/gkYAUFgOHoOggUU
YRMFsBMBCuDEwAA5Or9sRwpOQuxEcRS/vOru6q7qruru75vZ5Z5yczfLmZ7v
t1//rK6uqk99fuSnfv5nfvrLP/XzP3vrp/bf+us/9Vd/5mdv/dz+D37lry+L
eueM6f2z5ff/uG/g54Ux+M9i+X/yz+/BP/C3P1ml/6Yt6Jn5zISvNftvz0zv
nSz/emLuTWPZbG5fs99r9t++WSxfds8uoJ6++nqfvb58lH+SLSq8PmCvL07u
melsvnyySw/UJmBx3gRX5p5bT1/3X1Nz76T7++4bmjcz80XL+3o7sS29hneb
J4++vsLk6a+f3JuuFRq/O0tfX3XutSbYNdFt7pUB4LXOdn3xyJijubpScPST
ciw+nsb+mOmx8jT2ni4hfPTuAanh4O5paziau+KhtuZLS37Zg45bxo7jigO5
/JrNm4vZsCtPt41lh5YsO7mmCWIUV7Coen7Ml7slDOxiMTczY6fK/fkC28KL
+U1zZd+ENYmvKlWEd9fIR7l3XTMODu+Zk4Xv3IZeDf4+JY9/SmwN/FxqzfIB
Uu5XybIes2XMzbl/xn1M4fnkmfDzsp7dvD1KPa4bFzMZzatJPlZqTjan57vW
0WWuS6MS53qH9L7TqGD5mm+Se/zE3Fk2BQV3mFR1RNh68U263nlk9YXUcYa0
+pdyaOudB6H85rLSAxxicYEpP4MMmd533RybB+9suaGSH8fNmK27ZS3L1tBa
bONKtQir17WF9GnL7N8p9ClbvdvJMpyZa++8HpdeUx2TlcY2SM4dttqjnjcz
9+kuqFXTj9XQsd2oja1aCyk+B6XnoMvnUmH/b9mCTXcozOLpduLGyAQdxy9n
KHcn5BZZ7ovwPpXy0vt9XFB02pbf9mS7OafCX3h9zaCWFTdvz49T6IGvWami
75dsehy51+/ivu3j0qicWiihkk93r4+S17iO3aPncRy6PhkCYYT7pbd6rL19
r7WU5il9L47omI2k2sc++8jlY2vC2+bAvxnnQdYoFji1xW6Oa8tsrW2QYmef
UWu85mVBaQEUFgaOBooY5fG10Ja4PgaJcH1Urw7EzY+Lp/B6OL5rwqMyhule
SzfL/XvFPVhawpUBUF89B8v3HJRlEvPLvrX8oPYy2enU/qAR9dvsori8kqx5
ISxW4QY3nJm4GcO0w9+PjmxT6E2a1OM+8imlxUTfnR7GG6TYG3JX3TCzGRcP
7jXQdo58a8njO/LjZM2yRcRaI36qJFGzRi4X8cERtb2EezapBXcBHx5uqhGr
GZFq8nsMCjg60VkD47Bo89w0LP1QjX/c9Wk9mRvfkt0Z04RcFcN8ZKlyPQ6P
hy9pSJL5qS0iZWD7pBal2Fbuip8zr/sibWnVlhw28/V3roVLofC8JGlR+8Cb
OaqRxSoEfZr2c2x2pzdLe4XqvvyuMDN3Z00N8Q1PV72bM2xGZVyjNoazfMK1
MVgkq1fRaUg3WBUFwZnJ83dtwShWD2pEcqsPghX/RjWgicE7w5Hyepif6fKY
we2DqtzYqjzv3VE/3T12gSm9WW3TA7Xx2Pl44XaDJR2p2AtfXnucKTuzWdjU
vjVKLXby7s2zTcAe75v7U3eLZ8U9UktUoRNrTrGGEashmVGvDw+kwcgGT5jS
uNIqo9FnYxqeXufarJ9JUB7B9Mgbwoci6nJxlfDnlfEg/SkvnmIt/XSNuOJn
lMqX+oo5qurP1aW2Va1GWmtujp9f/nt3eTE5MHc7vr8QnocOHRZ2CNVxgxAL
a+9oudJulvqRvd5tNMOBofbsaFlBeeCjhT4tW28ayXCrZG3IdpBijj6fHVTu
V1SKdJuTPxdCk+BYObjLJu5Ir8YPj9tTPbEpJ2Z2oBiEqf59wVU1o/bfQ+Z5
KPQmXKnonrXPQ3dQoYPCXdcU/3z2eMkqGB0K7je9lnC8Gn7Egpyq1NLnbcmL
WyrZ4U0hzalNM6tmQKpJZ3mcVLHo1J11V3zX3838KM+dlDAP2GT2WGfCbYQs
Fj8kpnV6tDXUaXpY8Q8qCw46NDXH6Wpq+bnzPpTXHK8niqGu9eAYN7eHTvdO
ugrCR6Bcb6rmz5xulJObQPhYWIH2Kwr5zvV0HWWtHrLP+rKk3zTZTZNMXZg5
QysZJKdO4rU90N/Pncnxbyf3rjkr2NhcI85k+ohXBXSf8cby+4p570T+9EUY
knDFTToRlMjXmfsCK89Mu0Lld/ZjLfzqL9WSzxh8PzDvbMVa9u/ktfCW0xt+
mL16JT3WlLXq3PbJ3CptYfERhrhBa8PCKyFhIm5dJ/ahMMlib6JBFcvsWJQH
o2V2TzEvifcFN8v0eKF+ZpdYkSMtxEHSI6X4huXRVKxhKCxTsmU2iAe4aeMl
UuYMall5VE30HPDiI6lYjfkglbQNbLGSgSgjM3OK/UcL7rv9K79iy//u228v
ryPf/5u/uSz793/6p7uXTXjZ/Oio6d3/5M/9udN97iMqu/+X/pLat8fRj1/9
mZ9ZLFUVedL+p098wpb/v2tryxd/8/u/f1n2f43HWdm/GgzKz0142b8+d65Y
X9fnzqrs/x4Om577415P7dtp+tH6HPxXnbS/+Hf+jn3gS9/8prv4L8t+6O//
/QVUQcv+vb/yVxb/T7+vPzeJZd/e2Vn841deKdYHZf/n+vritz73uepz0NFf
+upXq89B/2r9+Lmvf93WV3vuP33rLdu+tG/S57b2F8bvP/iJn2jvhzZp+9/6
1uJb+/vumLjiyn7l9u3F/7q3R8rW/vM331y85P56cvXq4vjWLfYGNOf7Hj5k
Zfhp9nvflcEz8Cx9DuqCOuVPgwH5qx98oNf8TIeOdf+o79iOyfP03S5+t4sf
Yxdptf/kxRcXf/PLX652jH3UE90xX8UKWIzGePxHBuWIrYg3G1Df8X10h8b3
zxqK0WPReZLXe/JETL355k+0TO4qSJem2UUD12t7K72OA5xPrv56MEP0wydt
gBEEb5rfQz2N/q26T43GxNKp7xocf3Lvmm3F2++3PY8O2TwawplHwDodXExK
HXk8b9+W2ZsuhQwMtSrCW6Tn848Lf1R/vYw/ev9tbUs8RvyRPSOfHkcDbAF2
08EUUcMfZWE1IGRgd4Z2JO5D2o4SAAl8deFr1gWAtDk0/jf4GrOxrLwKRcdT
02EQRynixwlM40RMqOdmZwwThknSHZIZflAof+tbJ+biuAk25D7uqXz/KzCQ
kjya5vH4b755Yq5Ouom1UM2AuOpTaTSuSUZXxaVQxc6m88y6OXGSByJ+WLAH
EdJKOQ3oLgfYJxHSvbkTDDdnPAy+JUC954yH3vkzEGc0hNL5V8Kig8U29NXk
oenb7LgE5A5fBYrEnyvgIS/10+muIG1wEYZqumKQ8Hcad9A3Dx+e2F3PzqCd
wtFZPppZNWnwcR09dOvTy8kYe9TPczXUTw1rEoa1ArYJnU7295uvzczkajNQ
JoRyZGICWnM/QLdOytWYXFXYXu7Mm+biRT7b3eqYJDCmRdPoCuLKoiSuvBcf
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
gyxTKrFSexSwFHf3b7Dqq0e3SktUglwVFAB4pCn0QcYpskP1HNR6Dqqt4ZQs
yGPNhntZPgsA6lgM2br9t/c/XLkSN1PPlUFIPQydHb51+28PYAABpzByZfAz
lNnP/4r9dwDPwV/Z89vueWR3sZ/lPx9S30PrXAvdv3/v85/P2h4idd2VpU1g
SACa1sC4BoHRhGayA7DmBgAGNp0ARjPjJwAmKgzKuhuA375xwz5jMQwjVxYi
elFrXeg4iSIzjJd6KzG0uOcGgBWBVsGkwMA6rIVr57/c2Ih99P0G3oOwyHrC
IvNjBhI3LLJxfZFJZbhQbdmGK/uvrl+Pc7EmbIZtV4ZAHls20Z/Dsj+cTMI8
wmcUN9KQl5E+2nUR5vZpZZEx9FVhwqQQbolR4z/+0R9d/M7rr5MyiuyrEhZt
8aUAdFfQTboUpOXx3x8cLIDBypZtuDJYiun0cEYmV4bLwzFB6c8xhic/PfAZ
6TZj7Ru6MuhPmIph7Hc3nFUh6j6fijjsdAJaI/GZcGtloKrs9yA/JBxYExRh
xQFw2wjmir6x0lAU3pV2w2PsovTx33FdlKhspLmTGvLe1762+L1Ll75zOitF
0UsfKpVJnfhuZz+OzjbiWTggRVL6oUw3RuqAFM5SsRIHTvmjq4CUvUl3NFDq
rqOj59yfZ4gGGhUHPzTlZt6UvC79M21a0WwiGkLkBzyIz49Qp/QJZ7zQu2Di
qK2YdLkvv+Xu2Z8M84tfMDCIQqFut1IMk25gyoNxi/WkCJ+Js7CNcwdjqSnT
HD5yKi6UZ8LjV/dumq2tDtXg72kM4gHJF/OyfT0EBktjq2BtYI5uzLgzqRig
rJk2F/chC4wd5O5MUZNycHINnBND78qyoyr9bv/AmfNFwffGqbf6wIFFiICN
FngZWjMvEGdFY6xmMGoE96U0KjTIXSFv4cvZVbMrrv6ZHxnbu0bYhrT8WQBL
Ek4p1KNEIZqtjanZfycDTpRxGzzOFAagsTf4un8MlGFQiltfj0dyXBHpOOC0
gNhQW8CIiex0WB2JsUiMa1KZtgbSD8OnDcmRI0Rp+qUdtkwyeSX0SBqSf3RE
zKllrF4i9u1BNnOqRDOAkTpWemzaV4X8oTJSVmYeDZVcfD2CrM8ErHdTA+uV
vACQnu+VDeJNKKQJK/HIHbM0eMcd5Cg4yA6CLrtpw1DCOdUEOVHpD7sh94ZJ
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
zxvbFd6oaGFFKr2u6D4d1zjP6elyGxV9fcA3npdoLYmKGpoQgMD7sQk5xnA9
2fvZsSCa2SRZlj7HXeBjbs3R4EJnJQbTo04PD2Q4P9u045DvxMHg9Pz6SWgO
SMHJXiI2OBWcJMoK7AhVuqcd3HwtYMYGuDf07zBqIoJWJFHbbRgerk4n2ZX7
kPdOiEj4+e05kWOBbVlHe/MwRxoRCRc4xiMqUJJqNszF4vJHHy3icRX1Z12G
S6271AptVCVcQn1HvS7yWZDenyZmFYhjGMiniJbmbI9pvFzp9peltnmatFDm
vhFFvAAX9LE/9syliBvhWffRFzNBpzVF+8h8cId2J0VjWWCi0nFEQmh2Kdin
MyxI3LvJAU/yS0ixTGmo/vkXf9/LpD/QwI0jXaRJdBKltMTW6a8n8y4l7maZ
BuhtqxQVj1Fj8bkKrnFo3r8ePxxNLU24bZlZwE8ThyZWsdt+5ppVP3mTJLr5
8000d8qlMhhUJDOwJPTQlEUvl7T+UD6PrhqhHkQMssdMzg5X9HFKIt0j04PJ
Ra0iAR2GOfEwwaHfI3yTcc2LKYH+EyW+6rAso/8JVmdolE3oJ9BSbVXZraTy
s0H+UP/WiBHTpZ/r8zyw9OYSk4YUAVwhk4IgnF/66leb6GZs2xAQqNHN1OLo
445hgEA8LboCmWXNSFQ+JCAzv8E/V0MCls5kZjilJmpBXridsc+qZdu9/Dop
y9U0t8/xmZtso4ouZEkgepvz4QER0y2owQAPZGtQAN7hfYPiAOXNP2RNyaqo
QgndRiUtf3CPa3o5UCe/KeFBlZQrgqCZVIrl4ZeiLr1hnaWdLuTXZzQkrfw2
XQF0uFglK/dSB6AXYr6jJYjvs6xsZfyc8DNjfRsVWd8w76+IDdurQ90KFu2Q
/ZS4onWX9YVEveG5SFG41QQT1arIVsRiEadGydnqGVBpa6qYuxiDYo9kymAl
MRaNirAcJrJ8mbYLq8xTficxyV3YhZKXmgWyFkh5GJWIvjPbz9VUYadnbQt/
WwmI8ih43Dbr6LTMnny+KzQt5DJK7xqBHsGlCSnJE1Rm0948vAVNKYPBEhK3
MLbJLVpoTTd4m+Vxi347EVZTTybZE8qaCK5ejKeXDYRfYd8IzMfiida6vwTG
tkknbFimWChYqDaEGDVaE3eP25jrRYQYSnJdie6IOo2+wxQZJi0bHpcejjeT
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
NDDZZe+x+/H3vUyOu2VGjn9HXe+ukWYIthPKvHkkwPP9ArINQu+pVXVxi0+P
Uu9SV69t6IyKNWEzLfPpm8uzlIampiqVJ9TybGZff9mXznpDO2gSrskQveZ4
30bo/lOzzMab+TC6lFRt8k1XmN3vhxpDW55IyC0SMCScQ2lGLaE2OJ+QQgT/
FEwb8FfBb8V4tf0qaBiwDfRvR4lS4x5yjRkDqCNooUgPvXpqrpu8U5omQoId
NNwxmhXHHtE1YStNGrz291ZMnkA958QyDhzq9BU41wUSXNnUk10ozopM89aM
oWN8fc10PQ+MLT8Zjal5/oCIIESEywQe1LOvAv6vR2hQ+OiHUGq6C1I5drc1
kJ0klFpeBmaMycpjMETeWLOg/NAM3AQcnjBaT9R153hRjn+Uw+NH/oIcd63/
Dpfab/hCnd6WumiOex34+Feym/5E9tLz6rKFPrenV3xZU2YmaX8cgsHwDhAt
a7V0jAPu3cUGScBWrfAXD3bWhRT9JXt8Wy3WUe4WXEzj2Lu/o0zgICpkUKEj
mflket9EswvDzb7xenK8dUr0x9c0PIYmSFBWTZVaDZvy6hQzryalhRAp4Abf
IY3bMwUhZQgtQ4gZPC6IT2APDyja0mXGJnU2fqbEmuXmlU5IBdXeyctJtqRc
d7q8aZy7X6RkvUKVnAb83vLshlpZpCZI7HpRVeBLS0QQJPrgDg1Szn0tkzDz
+q2V5xjSx4ltMD8HucQTvuhheXHbdo316o+0opbJNqLYDEW/UUrOHAQWajE4
5b5nh1rfOscHuoOG2KfsMwaDFKGLFYcg8pt8CNiWcU7auOyk8Ihl24mSsZ+A
R8uzLKc2X/nYSzdV5Vs7n//8NyjZBQ36ulrb2fU4zgTW2XamhTu1Q+dYPjpb
0ed/+Hpv9+gpXig8n2lVGJ92y1qd2ferPRfW0gmPhT21Yofe5ZTXMhP2otOx
UGiwuTc6bEx+3ceUl/eyxzP6VfOkhqMD/31kCziXTG2NafFItj/FtsDUCDNl
xHvENqgsruncpqTf8oAhjiiBzLWxbGpQbIwuq0tA+b5VqobNevZtI0btzzqM
+G3l+URjacopBLY2AyoCRFVLFAWifZmvwV2UmvsDCINcW+5Dn3Rck2neCR9g
SCUfU/xpdilPkoE1izinDVtg7CXEilrAAfdV5JTwt3Ha1BHtU+e2502VNMqb
vRSbGLNSaGwo0uy8lBjMvUyhmmg9ztPqCmEClThLCI8L7LzrW74YxS8xxlrn
MJBu/WCZkebwaRNpz8FABrublDZzryxWiSX6Ug2egIf3fjTErYfqbAtzWgux
Mr1vqAbnKRYCaZ0X1MVl/Q9nUp6qvAx87PZt7tBANPbTwqfZtzuqX0rZG2+q
89duTs/5e1eyuarXAcrTV09ecsOGPQwg6LjN9vgtDfrwhk4jz0wQa3Nog6pb
J4+MgTcix/HTX/jCyJUQWjGHfQDbQWGnQFhA2ILU5NqaoHSx1y2cArFCbDYI
nR6PkDWlKgMHsLT6XaKhMHLaYceKNp2UgmXHiAlg7jGjQyCPnWE2Fdn0EoxA
nh40aTWTdinjRFGstOih1V/rpBSd53BLxSFi03s9YZUFhBJk2eN119aG6mHf
3yzTPyRYn7BCAy3fDD4GBJPQn95HQBjs2iyg+y5D/VPfzSaaKRJDT2hoezuD
9SQp11JeI3d33/dxLdYW8OXXcoKZokaaUfjtz4cHFNuDuid6qr2oXEBjO7vs
0qJm4LE6cZroxOfUT727qTxSZJroxb9Wa1feZUm1IRbzKT31v5Czo/sXbamK
KeJT584N1CUrSmA4dB4eUtGRauqK8lZ4HNm5eZCdWQgm3eDeT4/zaXN5KHvR
bdP0CjaiBzlGUFT7tn8yhB/ByzbRd9fRUX/NlmFjM3YNU5siOyf74UTrcY5x
WkYl6J+4WQd1S0toNsvIYOK0z3jRLg5DzKkoIhkoxuJrBBEsPTIW+9FNaRJv
yoWLPbL+/Ojy7/TjcKPXjDwgfGqpp8WSwtQ7NjKVAPVOCq9GGiorob19pEEE
J+fyiybxwkqEbUgwzTaSgNHWePTRLgbTtHcKpJ+2o8bu4NigNA973nS5kl7v
O+rKSjaOvjP4y6vtlz04bstxzbaa9vAJ3b9p7co5CyiBnemGutJqq9lF+Eam
VlcG6jSincHE6kLxP0QFO5uq+6WbP77yT3dU/T9X6uSeGdy2Pm/36DlTrjo9
+bLa0k72gbdtZtR5l+Xb0qpAN9uFyy6esEBmz0mZTaU1YR2/2UL3O2pk44pb
ZJvp+ebu1HXikSQpVVbDVezF2kHXVPMPwlU8PZZWlOSkyXdVsqLOGiEwRlYj
7CyPzXM1aUbQTT5uaGtOqCPhMAgdReSVoiZr5ahDsuCQgqfuBiBw9c3VwlC8
0GXQYpsSl6nb1R6SwijlQxoHovJZCM2Q+BFAoVJ2KUrVwTRHKzoeXuvUbKaB
5vdQBk2PpsB+4tEUrw6DWoI2US7Wr2PKJQlx7YUsaGTSbN4ftkra3BgE5l+s
ro4Q2WdDLTQOA3807YP5bAp2YKq+cBdGPGgeGL95ePy44aaemPj32TOtZ06K
13uuYUgLirgO1QSnsa7W1yGctts48msYc8NF2OpZlVahlVT1TH1d1GrufMcZ
R2pt3bE6HZhF4AyvinrLUHvh6XOZijFBQ73hwi5zbttuwls6y+wx0Djg22p7
xWxilmngsFH7pn2R72U22VB9YtVvvjQQSl0EZ4hphbkfG2esnJ5pMkjW6vtN
Vr8Xyum0+5KMGQ5rCRJLh6vaPqAZNA24uRIkS3z3emOrwUOh32kqKiqmBTdo
s6AVeA20HZVSnfqw2RmBPKyJzk2o0VB95ZJ0BMH9nO091yufImUsPp+5J6qT
aa5OkoTKhk3mVgg7fKRzbe2GWqn6i0icHRWmKgsCSNrQtn3cgc8AJgNUiJ28
Khju2Hsd/hgDvgmrnB6Gk8HSgU+BONMYRxXShsOxJ5TBMywBCvxms/7HOybi
o6svTMLwyP+yo1q/5rAr96g4zN80o3A4MXGIHhiWBlWCHkNWi1StflAbBvWI
JSfaGz2xunls5WM3K5XMWJr5Fd3k2sT8POv2RwlhXZtKbnPDWEcBy2Vm9mCy
HOugb54//frO6ge+od7/fjBd++rkiZ6DotG+Xt5fcK2bCBlCOojBtAr0E7/Z
qL6+897nIpegnaOY6DGUMCGdSDUK0L9mww3hqzPmWsgN8Klf/uXsNyMpsO+E
igP2JipkulzclFLUqLmE4S5VMdoJomNeY5nrgxZzT13hykdj9JBEJOFx8iXW
CNcpXVLMPyHH28Jdbciftnq3I9KAwB2OCG7qAEYDFatq8M51onhxPDRi3o4f
XIEqXp1Jsg3Mb5WHpEliKLwuKiQXXTymFpaUZuuyzF7RQq1q/KwUQp5W7aYN
Ctf0+F27uq7WwX3J7vLoIhrnLbeYq0d+y1qN3WzNQltagyqyhqhbKpV9rZN8
gCW7/NEtdeH9xtDSfAWXUbNPca88yMLzYoRZnl/grAx6zp57XNx9sRQohtXF
XMliHsns9T95WpOKZhOijwmkeDWw6WCdQO0XBmdwzUA6DteZtQ0b37M8/vgH
lb6RMZ/L0+aAW7zT5oIospokp61Fuqn9ZvsubOcfGWq3aX1aDTyeUOpVw1yW
7kdmFagqyj4+Y80EmcA4caeaZdKAr+OT4n4FX9EsGzWz/FxHOfSvRgGmfxxc
PqmG/E7knL77mLN5wdNZ2rihFqo0aHFRnVjUZdXYUpwvoebAynCwpy2pi2u+
sF6pa+rXHqUqbV31L9q7LAN4/5DynWyg4XPuUXWis0X4TXy3t0zMHcrQOOY3
nMjbciE9igCjAYD8pF3UTJaREWDQ5+4iM65mmZdFU98vooDLRpcExEfQnTuW
bLPnV/DZRd2sV1xXJgBaQzcM1tdbtdroT+6+2+07KMt0aaDgaVe/bcQThBVl
2O5xmgDTCfCUkXhcalR4cW1QfW+FuUqfCZ6zLA3VyhgyfnjixFs21PXvkR0+
2yKsa+hKXnfPnDFCWpnEtm8VVZ33YtnEv7MhX2/RbeGv1ezstjq4vqE2SNKD
ZuEwd5m5281HMy9bc1yB+baptr6avem3ds5g3lLvxtD/xuN+sGhEV6peGoDD
rL64I8kdKYUzAgNK1G0dl18k1tS6YOvn5QhpXFJqNcvjUqSxFumlmk6ykMhF
u9hhCdYatGO3CwDESosi/GZpfVweH37LYTwpy4zCridp2zGkczXflXDHBodT
RNxMImgd6KJ2VfWq0a1T/50VgS111s6gqm7ZhE5mdDw6raYXMiW3urZ5V9eo
6Un1X2Tz1bFzNu309L0P8kDWfq+VTYvJUEPFEST0nPVPiitMSFX3ZUDn09jY
ZCkIXGQ8+d3i5QJnBqho3H5sH23KWkEklgD6xhEJFsUdfP8Cj3VIu+QBwVua
Uc3fyrQV+vzXy0vn3YLkrL79UpdnJlO+zM27u09mgvInOyuTiE6oMHMYdafb
4Bu/aW2BzFtd/Tl1tbeVPRf+ZMKyeF0dXQQOpz9nJvV8F4XjC+rRNprpUzam
pnTFy8UtWxiExus67UdaQ7Plz06eDCNbVUUNZKfLXNThr2ZnR/Zx3gJSaeel
Rm2gkc3Siyfc5cn7s3+0aE2vCmxl6ZjrSygR2eXWlrJE81ienn7eO37IhJEY
oX/O27dQkpCKWnl4OxiSqjp9z+xmJqc3OaieyaiD/IKF5yVRGfTNk64JNCJ3
WoAL3O6rU01i6x7bc7uORdEfqtr/y93Cha2QEFkhOBgh8EKK0+4w393pLrwC
9MUQVrCeSCnQNPSn3n1S35a18CukQHGFtwIlnU9snTHNGF3l4SCukHaxyJwa
Wv/EWjQthofl5nNEEExRFyLR4qZjCKdTgpdgeKC1cW6l+FxesEwSVWozzp6E
tMJSZV2tPDLavfdeywdV+R/UpXsBhPlV/fuEetnYjRDGa2+qyaBKLTtcb7Gg
nzkd3gCwE6ZSrXnuQD3hjMhFtbrgn1QzkrQfNUS/erQ/arsNgWZfUR9/fbhZ
pbftXVM/ZzETXkSPsKQAKdahohqKLkwfurGqf4GU/E1FoTeg1qlUJZxEWf4T
mKDe5kcOnD1m2cNMVOQMRa36lZLIKeCd94kmT2tZHvcexm3t4FRHj/bw0FHz
WZGG4mXN7UhEmrUPKCHSWoGFtkuFKglFAdxhFDSFjcpmLNVDUVumtYq3TDM5
B0IeovRgI6e/a7XKvf3pFWXcHl0UFepmFwRgxMjKuPGYmzd9I8DunHXBa+gU
sK3DaAcYaW6oyvwNQ/hORBXhQUYwgvobPSD7KfFGudOu6vx0dm5dtxILy3J0
rPzEAGJUThoirybh7EhpWl6xbpL1uibJtB7y5YhR3V26ioaxoPf72wGZoIyi
IQhr3DKCKmVSpsRJKSOOqTHkPY0+jDR6nexk9qMRFkM6B4VXx/DybLkKsWeJ
HSycuJfkJ1gghvQL2ULV3Zzsjv6XO0eNljdRsYk/2Gk09tAGYavARJIrmwtb
/+BmJWANsmGHbDiy/7Vcqhgxcobcch34SXbV5Of9uusiHw/Mk1kpg6BK5AIY
0NV9MjDmkpZsNSzP87W2AKYCjk17yYDiF9FvsCG02mZz+MxVGsoizQWKQg9M
bmkBWJLiTNXAUtDBK7okPPCnsNd2gByuOtyf3RLrxIyI4AAJKhArg4+dKSIU
SWRnEjZKxCuSt8wSVpEjeogVBu3HznYOOxHmq1PslcHl5YWKXTKYcotXlQ+D
mID4c94ynNn9xCe+SV2I3UvWpfpQ9zczKVlGEleUL7sENlX16ZuT1B5T67uT
lb+nv9qs/obLy9RDTZS5t521bKf7FRLXrqp3bQMD6JrayARt8cRFjZ89D9S1
6xcPVcO7vK7gQwMK3D6G46aNpGp223svngtyNp7sEzt/UW55PM8MOyFUMvLi
LZ8pt8Vcxb2tcn33x99rBk1Nmqo0Y74smUvcP3CWelF9Uim4V43tfLzQPmby
YFKSwP7bS2ATFfi8joM0CIUy7arE8QF5jco0WCFIg24tq7lrlHGZM2ErAt3z
zd3e0Eq64gB7v3aNILRVZN8P+gQpH4KpaGAhyZXgdnOK4kRCKj/7rMKPFNPJ
Nf0WgJlWAnMO7m6M0fXDeRvkb9T+WgHAZ2803N3Y+CO7ZF+xSuEFvZk6Ndde
g39IUS5mpeImCqRhnzLuWJworrsZUMsLqtPjjH5Yy3NidVuvfpO72ldLzb56
4Iz9dc+UbPmqItIxbcs/maZAMmBOx8gaEEzQYsigpBIO7V7yLzAxOboXd7NM
PE74wIlco9RiYh6GoSIhlXvmOS6EmMYjVeVNibuWz458h+3+IEdGQ+4OPjxh
Za+laaJgZapJ/NbmjWO89NnlPDbMhoqsBDJozj3wMa8cD1Wi2q5FlkhF5T1P
oUahXm6skAQSpECzSMMxvC43Z5JfYch6sgR7B7q/4SyEE4xutO2NLhEx8GwB
BeLkdyB3HniCFUEXEiNbksJus0Tsi/FIdA8txKQ3SLuS3wX3ZPMnwDX5UePT
WzFkicyf7nP/3QZPmd6Ss/qz6jgpiK3USeHb5M4ULt5t8/LdBZ88NKS8Zk7c
sXULMu8QzawgI+oHlKyk3ZmH0PyL9R2LyrOVFIrscHOp+dLNRmv0b1utkTp1
aqg+cb8gbvLqgD93mlsxvi7jv98mpXkienBUH0bNRyVRulrJKIEb8C3I8pLi
vZTbFTo+GPrThlgb5pBU3c2LkYbCbC8YvqYPSQpKzrYQweKrHKhn74PnIqwY
fmDw4YqUB1JohiXUbFrmgyGOVeEjZ7dtaAIvL/B0pPvthnrH7Hl77jIc+9mO
ZkZ/19dDOntNX8e2M5cSB2m96JeXpwMNEWEjEW6L6phWOx8kpI2av6waxjmK
aB6mgpoGYr4IX73Bck3DvkEXQfzmyJH/6WZNp8d34KqhXUcVn31Cdkrdvcm0
etdSUz8svkmre0ozIrXOHFMOOqJs4kivt666tAupxM5utTUyt5n4w0wRIRk+
FBty2dxy23odZ/mwccSYvrXJt/za4x4LHUC/rS4FcmvAvFBmhLL79Hs0xabl
YyuMplidiMzjAPJWi6gxxiXSKEammChR95xp/Smux7LkGSPugKg7jF9Nsdop
ViSzIAWadPwMNkxLsIMBJa5Ak0AIY6no9kTZU4SkHH7VOPOSdNJWLhpTC5Rx
QjO4J3dBLHJ+Tswr0HcWKxaBmNlVpJeQmTXxJbipPyUPsxcprQ9YBXpvncQG
WxGANepPG0fukfFPityn4LtoBQbTu5hQWS49buwsiG0ZY+dD7/4tdGuz4/vq
P9QVPw9muiTzM2eetPbaL6oug3u/6ZknaU9wIzKKenpE0zVav2HXV6a+1Hm1
1e34UzVDVJdpyomJ77lRg1lxHeWcbLgOR37jMUPk8uFPrb3CghLe07ozzE6E
GyAE0HRRs4ZB9/hCVE+ZVE29et1xIyXEP206SjVvBfGiOq0nof1Du/Zj5NsJ
LESW1iNiVCrKtsYch1zaiwSTFp770CO20QwBMObpuoSVaR5r0V+ixKXS5HOG
7MRMSWZmgsWKBmsZFSzQyFIdQxVfivoisuxM9DGX+qJV6s2IrbPd68RI9VY0
RWHBBdQ2qw84fbVv27J7a7LF9BUbGkV8gnWyt+ookw5XpTS0XZuuqgnoLyRn
6Yis76b//PjxkVUi/1/2lfkgx8z9UyzdPkki9CoGXQk+7ZSy2o77sZpEoq2W
s5XzYBtX9hyz74Dpd68PLTCyocgUYeec8qKcbSmXLvc2K403bran/vedWhX9
5XkdxQJFKBkaTPwiRnv9b6SnptYB3X9BYjc+OQTnU+MFokVHMtaZe92e1+BN
Uy3JF4Qjwi4ooKyTy3IpcGHmf/bAA7q8Duo1zAbHQZVLqPtkUGUxa0aKHslH
s5gabcRq1OO/7UsuOXXqdF5EHSTryoThVrH2CdoXeZfBHS5lpSKlKb6Z31nz
1XduJ/uqM4VSGkayhkYGQdFccklLkVGDN2kX38swalA8u84WUHMrQMUL+161
sg3elFNVEVNPqKpIN7wCVWUZsFmhXAJ1Prf5yitv3KzVgAbyn4OHufmfWXvm
gdbfzi68fFipp9UZpmizUSP9Bd60pYlCWWNDa6tWFTMNSjDrpoBJS5cUDi8i
RY6pG/z8U9afce7fNGfN3MLmP6JGSmbr2Pa1qC7d11GV+lB97nOyFAkyCsAU
Vc0stPn56+r1b3vZbVCTLKqnVUzWBGfIrhu9DiGfqbkuloTptcdYNWIpTgu5
jYiDfwQtw8xPTP0Ta6X5YjgEZoD7xrMMrmO0+mykALW9WM0m+oKvW3W9mEKO
jWb6KQwNRS4pBVnEoq2RKZQzmSjWx7oKuZJ/pQ3Pq1B1qsC+raSWgg3FaYSz
R16mcQUc7pYgMQS7NFL51BRHqE+XKYD/Vv/73e/+Q3V1BWA+Fzdnl756c2np
X+8ch8L7+28cztSx6dCbu5OVL+N3pfB8DY+Ros+6VQSszG76AXVCt0iZzyTz
hLr20dOkNmJeD8WzHzADfeNKS9c3b1u0DTC6X37GJortsF29xlg3/3/u3gc6
0qu6E7z1V6UqVanUkrokd8uSGtldkd2OJXcbdxnakNjrqm7jdWeAkR0HyhCK
4CQ4EJYp0r0QxdCEOBnLZ4c4mbSwfWZm48Ak7C5QyQSdKI4hCwPrxORwElY7
U2aCmRAIf5I5gE1w7bvv773ve99XJZvsnjNKTFe9+v68733v3ft798/vOsKD
uBChQ0yuEFolScGAwL56417sTImbh9/4oPhc3oJCcaDqB+l2Izii9kw/kTUC
yW0WgTrMRCPPuBduU4Q8jCPTS6cCuOeAvrMJVvBECR9ERw4bh32cpOOsC72k
Miq+pFLFUKKhWczRO6wnKuaSLL1OND/dQwT+oA9w3y7Leo1IJBF4JJrEGnQw
eitYhlcmlF4fJZHhAOHb/14/q8uEFfJYEj3C62C+Pw3wNC5RqtuV2s6wU6wH
jaxh5xlbguX1c93rDr5LHj9VeNjqPcuyr/8uf+0ehmzLNHM1ZjMeo9lgqJCO
Wy5M7I5J0zbjOQ142b0pREODTHNlVm1SCnrJRqPFxxKNG8aI072xAXldCGGV
v32ZITkVkOne0pWp3jrSjjn5KoElruN5PnP8uGurBO5BZp2lndhHDvdBCjib
jfH27oEVBT5fkkXE+DfyRtmUBJv9VKbv9EiazUB/loZcG7nAzLQ+24wr8aSj
Y+y56dQz0LlT6JfyKWdJrVqvhd62Ynik/FteQooEJ3Mi9T+i1F6rhDJZTQTx
Mr5GV5ycDOqFZhH24UtHJwYaC9k+Ot5JS90ocfjDTDdZ9GpKydBV94rxrjIX
YCogbLwpKLOnq/FTi2mZycDU0scZhi0fpviJrSwwbR8ZXFMenPlF8jkyxShW
CURZFWmbLzTpufF7ogyDOSaVMRp5dQBMWlarxeALzggZyb625uIt4zCHrQJW
gPLZHSLsJNzpF1VqISZOxMW0xIULKoE3hr1BgzWKbW3YiRo7nLYORkw7DZll
Sp/Q9FDl+EPq3dtik/htxc0b3Dh95eBBO29Cc46J1oRkalyBeB9KXfF85+E8
iQD8npgYXySf3SSBqDKmk8P89lGAjwbnaTYgA/VOV1/nj81cl9Lrtccz8t8K
5k3fuYGFnsTpQl/d05LCr4ymDtzoCJCzs6WqrrtXW5XJsZb1Qsmm7uqqSi+7
6scd/osaniQSi26A92B9ptOcPDh4/CUvoRzePI47ziWqeLJyiNHRxfLfSiUn
l6YD7++KQJvOi2IZI0MS863cPBI494XOG6JCP9FcSp/dLQsV+ku/9InmFJym
ZuQk2RT6jc4hCOnTklmnYnldt0IFFh5dg+Xzyph2xbGSOn1aTJMLVjXx26pn
j4/uUZEC1ItrJBLuQuaK3FlCc6/ivMM9TgsR4w7rT4yZLj4DF54Y0DRVM8M0
HEegJ7UefrtyxJmjM+rQmi3NRmRG/CBnSS1By/1CnDQxr+d7QgqZGfGfAP4T
fv57gL+3MyEfUFNlMrbytW522F7GvBb1Ghfl+Bu6SW2xFUvn6d2VyS+0b3uL
okM8dzahDJ3hKFUFzrBNDh5OD54jF/VaMQSFfyx6y/oMkvgfxamS9/e4kEpH
Dz+MKQnwlnsHNBDJmy4sf3if0yWUwo7TB6fRD2S6EN6Z7/XT8BT5HBQiFCx9
FeCr5hgzhcQ28hk7NSLEC2LqKWHix2UuwmzG+PUnJdE0/ZPWX/knX6dMsp4p
CmVUOhexrPiveLa9B/Pze3Dddcy6Y51No9VWiCdIKAUNunTy3ip6XZkRALQU
jkzUW0ak1bKJoVcGXuE+pwljToidJkOS0GlMQSOchG6bI5Pr8Adf9SrZ/kcA
f/QBgH9rPgv5gRrr8baHWuhncfwHyPGxjlJ6Tmjj5wyFZQe2Ut+FRmtRHFqG
OfFKFn5EzKXissxr2FoFXXlKR/hhpb8CSahCU5ELcVORmk7qoGEvb7eYvAaH
2Zj9yrq4c2FPWvV9y4Vlrx0tjiI+/pHH8sbp23vvxRhKybktu94whDWjhpPE
JLtyQTj//8Fs3kc+bnxJB4UGaAo7C44JZbKPVtpvaMnfw1YQq52AEsSp1Pfo
ZI5bE6MivhF3pjQmXkusihyc4yTNQ+fudt92y7+Utzv9U3yW4efVukYMOZg+
tgczM3vwznWX4msqCXPLrCr0aayG/sA6LR4xy9HQgzi2utiIaVy6T2xBpbIF
2UwHDt24Z2uQO3KocIBBiOUgp7tI50YvqfKtsxNjW1J5BbL5xoE/+k+0joY9
YTpwnPYt2nUuX5CGaaEyYLG1zFPYlJRGdylVLWK+3rI7fsnnk9RJ3DLyN904
9w30fRBSzArufFk5nS0v9tDp18HCJpaMIHvh/CxgvsibfxTLQpo4wjPQKFaZ
QG4dlyf0xw58R3YhX3jOMQnN6kicVVnTgakZMlr33ovBZZLIUX5//L6ORKQP
PBpQGV6+mZlI4xQxDTMrFoZFOLBEV5QalT3cgStvmZuD0jmHd4uno+LZl2bQ
jAOJLg0L2ceDwtg7lNnjQ8IAAw6SalRHIkXIY1A2rukXsDRHYdgK59kGuV8c
g/A+amPzmPaL4VLYvC51NLwBhXM0w9efkSZwNBAKGW6Pkwt0P9Mtqi3vpxbL
T5o9y4cAPkSNvXHygsuBqCr1vzt7iCKOlUOd0a6Iqhj1M1AUuLB89hEtDo7D
AtThHk8v7W2tNhfg/O4B+EL7rjverQKnTIzSjPV/yTHZ6ATCY/egU+90Mzk5
OA9mMx+WhW79GR4T0s6kQWzWw8gcg2pK2JIJaBbG3T2aidFcLJGiLoYQTuAh
bdT4x/2yUcEY2qzleF+YkLPCLUoIZWxIjz+uaiHRQPx4UTOgmpIyLXZ0vWJq
tnJPMtgPXAik7IeECnRO7l+A9KJJ7ozljhxNdQMv/BwIJC7mNxTPXFJe2pTf
TN6zV9NQ/xuJmu6Yss18vmAZCjpXTFSi2TCNUrI50B6z+72UkqYaRP8cwHMh
cYNXStrxhmAK/Z1+VxRW+QhdVeb4HhQzVRs6UTwLF9DWevwUvhT1Zg+JT6qS
8s5Wg0TW+QFXAxd5Bzyi7s1XdvqZrByQ72TSzwR3nWZhhtCImrdZFBDodUFs
ihtlndmOUMK6l8xpIYY2h1YSk/tCZIQ0c8Y8neWh8MVP1JDICw7Z7KeQ6JFd
c6YW/GpRijkr5IejJkrdIXRKj0QIEiIMzZjlreVDvNShbb50ms6Pmrg/lJ5u
2OkBiHL//Ts45xPT7odWpjeDbV6dlyZiWRd6gfwypxDKxQac7AxJRwvsejxG
QCYleeW2aC1lV4kUwRLFBix9f0gd5Qxt0leOxnIYHqNPVSoSHz2dyn/r8Xzq
E1J4pZKFl2+eoELPeBKgcAI2lWSBKdNGwu7VBD3A9lKKAGMH3v72nqwoJTbx
zWtuVs7D8vi7YeF0DAoKl1TUe38Wz6DCJLPo/UFzvtnVcINzzzKABrdPw5n0
WOqflj4hywazSDESgaHc/Ix/37THE6mFwFmOtYXkufkL7xmA7P2yMgEOU5AZ
i8lYUsYGy6Y0vmjfFus7EN3w+XtBhRMqKzuWk8nHFNTuNATlYPb98lIY5TSi
SfxxKAd9YNmikUWbo2B3SkvKk29yVl9T8eY/EAPD7oHkVv1kbNZZEikalnns
6NLRdWATRvsAbf9GoBXRhlm7YHXAZSgJn2oOLxpUJ+GL1lQCs+glX5+c/D62
m/+wsEecJDPO1dCu0peA+J2eqxlH5f8VD9NFk4XCnJN6RZOLfxnc2N1T9WqX
lmXQhQyNNDGsYp9uWPDN7KOqjYJmMxfueEhxc6DlU/1xhwbkpY8zaFHiqtsH
H56/baxfK7uBGCW8SAVX5BHzYfQr7h2lhH300T3Ik9jbUbkYYzMBmTAMZvMM
oz8ZmvxjDDzxxBlcnIdMpkHSioTeOfCa844blUYlbO4x2cJ0w6xYoFouDTDK
f6JFhnwKs/WnVmLfbj4kg99DWKGYDbNbN68ZxSrk9SBIZuUW3ZPEcaNQtWjH
nCwTJI/DHBA/Yy0mkU03S6R4Mjm/LUw0p8cNVd+5JUJJpFe2/gZhJ4JdGFLu
0elosXyMUETQg+3fB/g+8ew+bD5/HeDr+PkfAf4xaX+L35NgYihywIW0/SvV
ljPe3XH5TNklfCMXu1dMuHOmGhtWyvlGF0erbZaSHCMTFwSZPUl4KCtZ7XVk
yZKeK8v3wTY7m2IM+6cpeCyNRZTEsLn6xqdtINkQJ5V6J1ncFWN5SHxGfB0H
zdrYL00JkZTFRDsett3fQTUQdgJERQ/bTWil7rhteTJ3UlS8GrlJf2SspVwu
gSFUJ/HWRMdWAPqe9jpho7O61AH+1PpQ9KDLQ1EXtxIvEytr6OEEZ8Waxvkr
7KiS4jIWtph3D7ZDN7HJFeT5+CG7+aqzdNX5K0/k/HLN1QImyibnysWUoR+J
jVxvFmj1R7QXmbp3ZOcWlWYfeNWrvoXtYjP0j1JqpTLfp1Lob3RiAkozCu98
aYXfk6J19drjp5gA8JxrVukPUvqoUw7DemOmD/m/VdEAGIu5oHXQ3t0wLS5w
irwRu26XeFjUtm7PHt7BbR8GGsFj76T6zTdWo9DDBSYTcPJk1PkukHNsmaoG
VHfbSeZs6fHRF/Gl43nbWD+d5YWwQc5SXUo5UE9RQg1FkZ8hlZes7mP7fCNQ
779f5ZolClSHVv1dCFfDMZn++XCgj5nqk/7CYJIvsk8N5hRNcqwYMAkkZfqr
lzrFjpmvNKBCjkk6n4Af5x+Ps6Vr+DOEuICibXzMx7uSCNg9Uj0gNEbA8rT2
6ki1pQPN1eoellZNTCyM4QTLwtLZvY/ccouaiC+qfdi6m+d7qOdZBV8VSzVG
y3OiTcpUNEzK/S+bivPGF0GlG3WP0vBO4+9L9Evk1XwPJLGYtj9pw8G2XhFY
NEYa9Zowdvvu5KWDdi77Dpgq63Q8VeYd7tGbA7eTq9tKbOLtda+F35PjlU5/
UczSDrzfLG5mswkSp+I+EgdOKkwatsZRwmQIt0FYHw84ohjQ0JlklhLLCKnb
9JYc5TWWndy9ZPoLbUj/IZPrDzxqqo6zCplK2EkpUaRlXeU7T6UGftln1Ae6
gq2pauuqPk+ovrIY5gNGdO2HYWCETKAYGcltoYwRnNqLVhvOKdgIcgswYx9d
yD1y7EpRTMpZW7AtgetgMiFiZkNCp+F8CWNcS5JjH7+PFKAon4WdZFkURPix
qdVFrvaevOoqE5aTpSWz5cyQE6ngTyRTw9hMJDWBsminMRMIjeOkUjYemUQ3
MGVCuv4rwH+VqExnI/h7SX8fGQj3DVEBBzeTICsY6D9jsfTL/MCa2ERiTPrq
OsyY6iYzAqUdhvPGHW3dE2IrtbKp31TdMu/d+5qNvslyzWcx15qQekYNuubN
ZmMl1TTfBYT4SvbBtRMP8ap+QA/2RQkLHKb5noVTT1zAkM497f+welUb8LDZ
r52NU00LHiw+xUtn6xr1qO1o/XophPRJf18uywkjM0s1urNxjPjfohZUMUjO
MCYMyTXEAUjkG6AW5pgKMZJX3F5kbchFYsECicAAWFazb4Se2Lw6OToZO7/V
oUoYjOFvOIYGguCo4ndJoZoNVDjXQBtVlJEKCpeoH7K0Trh81fH4+/mSGcz4
RvoQpmkPMcgPSyePFx85qF42A4Xpl8MpSZrzHmShc7a4VRWH6fgq3GZh24Y/
j0snz8xMr3mEiKx6nS/c+E1ThRlEn3oKZ3oH64M6ONJxwmFTa5eeCS6igZTE
EZyPs2GHcBJTh3f0DG7Bf5U0IMfiWivPmhQ4J7FUwqRM2DT6w2zlzXI3Ri9Z
NSkbN/lUHUY7SbNuNyjnA3Ij6OthHyzY0ZPTJhIbhCPaLCbHzaGM3ySVUHJs
6zjQZXHG5dXGMRjLrAD8D+9ueoHfpTDTPTTp7+RJxkxNYR+xSWZQvSRxeXpP
kadCkKal7oOwYeZvZma+Ry29Ia3sZ84n0YWECF3TgdWmggAOQGN7AGtHxMQp
CxwlwZxjDpd7gzWxEZ1Gs+4WvOmsipDgqJIkBbhCGY2WPCRrX7BKSShVTQ55
THSjQeo+OUiRLckE3pmCxp6eYwGloTTIZDKyOohcMDQaxGzy5166p5P+bBc0
YcPWPfdIg7AUnkWHGOys0KoRN4vyjWLqql4DeElfoJvj5KzQahhnJ/6KM9Cu
wao63mw6kT3AzGZU83ZDMq6woSnLiLMffx/HQ4vYIj/BOD0J/0PdbzqM36Uw
0A8jLVNmDucCWkRnZTMClKXR53/G2gbFfLeSRWsXXBOQlm3jZj3QPNkIo0QC
Ag2wYuH/5ruQViXTJ49+E/Y6U7byL2R24EL7PGzUiDsnuwzZvKrxnJhjQqj3
LQImXj8bZasl80NPWZOClm8xlPrG/CH/N76MxJPvFx9mZK10meqITpRhKQbr
W2JtaD+0Wo563rM07BBRiZbQOFVwCvzpyZPyeJmgX1XTyDAcy3AYPbWo1DZz
1+gePB9/VwI+o5xDw7HMz//qr8olQ/kjnvfMpJhHz0I7M78F8C0zM00b/kfT
cpm4zQREsE7RFb+dgPVyoQ+pL/nHQ6nsArJMLaepGUTKG4qAy4IOG+nBTSFq
EsWbXcbpcYYy49lcjk/CUPzmpJ5FEfPE1ZJyH7JZLBWQbIpIDmxPyM5lsVXV
wIxIYBRhJSFf6Cz5h2LxH+0sGVMzAt+gkV9UXzMGCG1jTyQnHtODNKXminds
EWZmXfUayGAy7ZqQZ5roKPVNOLmE43tRZvq1aNksEiMUcjEoc0I5ae8rB/u6
677dzueflFEi3D3Boy60hMCXhsoHVzfKJbmsy+p4lBa4O5XfErL32YvXWT4X
aebPkcDLW3qhL7lUes57yWNm6xMkcEhQREwETFjF4paPMY/A9GJfoAR9rBbu
mxuwXFuJOOlYKWD+Lq0/ONYYR6ypDHONwVMP8XZ7LAlC3Kz7XR8WnMSc9+JQ
tFfIUUqlwvR8EwFFdGXgleopgtPKvlY9RRiZQ8IUYbwhCVNE0T2OVD2evCsa
Ep5JukJ8cZZQAJfLLwnVYuJxOjyflPPveV2h8Ux+NNAQP00wiDwUg55jPjx9
YwgNQpyJm5phY3qQGAWf1IPwG/N6FTOrh3a2Fy1jODRRKFR/bwRSCZIA4b1O
/Xic5N2rYhIZguHDApwej/SC3TZEYhA/QV/420hIIo1ejsQbhZI5cuADH5cj
Ex7kbGREiASOnSgMLdH54wlX5klxT76zn/lHJ9XyEutlnDCgU9Y7JVGsFGz8
dsxQGLcsf+QRlpN3ihj8VVszdZQRzDOVZmKMen6aIK2TlbGlNEJil8pLEqAe
JxhNYBwLN3AvKJp5I4eRN9uiOqq5ZjLIgNutlaHStFv2H++zOb5jtyJY7kIM
mR5aMy7L53dsLR8b73rcnFODDtsRY1FsFz5tXhO/p//GK0z8qb+qvK451vUR
72ef0Yyp4hKljz0DrQ07eKsycFuM5+FVmCratzNF0NmLVNs/APyDRYR5+b9l
uhE0n82G0Dj8fSqdoHnCZhZWq3oOok2uBadAmrhtLOHyeel+PVwrNdMZd3rp
8J7066P//iIhSI4AtXFYOrvtDVuEvNnt1DiVNHutxpr9+OMo1B1PQiRO/Dyc
a9BozQm2ANV8tjhVkhkszjT6elC/k849Fwrq1lsINJ5Ze5VmGmR4TpUx5nhO
Y0FGCpCAD1nur2yLYXbKa+EXSjWmjBu2+p0Hz4PZLH5yo40nS+/nKuP2KsEI
WA/fB6PnI/raRClE3mP8ZZLKJxNnIQ9gDD5QOOVoX2PisnBiooKTOmKbkzpS
jO9I/Lv0NW1COlRSv0k0uzxMh/KacNRhKVKjcdTE+rKoqyswd0P2qnTgLn6C
v7vzZHCs7OwJVsnwOYT2AUL3yU0VnB2jPFYxofuBGRMQDjQSNHb81dkHYt9+
3MSKaU+SB3YeFmQih6zrkzRdJ8hNCFdY/M0NxYAvWegGa+3sunsJocUdElZL
MuDccToPHQbSyx09DpHbBRbaQMeDd9w0pRuRcnRYN0mZO0nqVZZEsSFOTU7t
vwl1pb0Zp08kyl/cfVu1O/H8AJhkaVN9Ux1bt0Qedn7FTargaCLgqCkUZkZC
0wO62S8eq153KwEf34Rtyc83wd0NrcXk/cXzlM011OeLsm8CiWCZyjpdXefh
7sj9a3AE3yDes65DyFRNKhXwvymuWSir+HBzTvl6eAlWEyYrVs2ER+BssQoL
WxedppWI6BSsYjicXenYz3XYQCwtn1UcI/5d7ZxBzkRbXeHw9BSsLtTtcy5P
VQQmvFtcb0OC3Iu6f8u1WQFQ6uK5cXzLQq5MQWNNnLaAYGQeWvhYm6fExFHt
nU1xn0wWigVxu4WWAJ4VzAGEhU01pQ4LZCq7WxEfascUqK4vQFEclBHnZYtl
AdXzEsKWkeAaI2FEu4v3ysoY1mw8lDbePupvCcFnBpu1MTVgdBUPsvxWSTlp
/mZP78kuygJlnZo6bMqj1t7TfPAhQ6k/Ld2iNhKO6YBYSkm0ZyPwlHbu+Piw
KE7Gy9+ookVlqPLrb2ZZTiGopnEy+kRkaAN+0zgZv+sizgwnW8/bC8HJ++CM
5HEE9mmNwzagviCcA2mln2ZXmCY6ktkAeiSlMZY8JD3K2RxXszhAUFUyHRp0
LyY+Zzb6vpPPDxl/s6xPifnsUVI3Og3jbu/OL7Iu+Y8fSamPST7dTy9Cea/y
dfmbr5j01ph+Up4bw10U/9ixXFfqMtG690l4yrfoMu6akF8nGHEPUfLHEpsH
cXiFZx2HCCZifTvxt455DXz7x+nt/OrbQ8BmeIzjZmDMGOe1qEpaw734S4d2
DJYMjeIuf56V4+bPCA8xQYfVPbhhbI9beiHhMRU8JXR7N74X1ZOS33xB6K1L
9iqTRgx3B7SAih4SZtwnXVsXKK0ekIU8N4yHcIaEwN65JUbqwKR/aDlc7o2a
ArDhy4VBLk202RMIpQbKQmm2C9tba7C0bK7hKtBg15AYW3K4y/vh8Ruwgfdv
1NUoVAU2OwWn0P7bG7gtl3zy94hLIRa18djiUitwrISXV7e+aGK0D8in2Lab
mQ1o1QT0tPNkXdtVEXYiXDTwc110xB1zuJw376YqHnIDixvadzMNU+UZabGV
RQ/LU3KAepaPXmddmnb8nMmL3u9AC6NgavOyC8fl51k4GECWBfW/BlFShjiK
IisaaYh+8QCeDOgKquIes8s2eapqZ0QNpm5g6COt16hMWmB2H5ZbhWPdbevo
1tXTQS0VEH1aJwTxYzTMh2XFyxDMaRyrbE+xoxPVGpN1pTEcmmQl3MRvGjuy
0A2NHVnoRgJ2NOUT5TeNHWGe1EAcjUuRjHcpYn8LZ2zQvLFC5BjDTS79JkaX
JzHlhpmXlFa04JNCGTK2NJQD//BKLD7cC9vwJGEcf4af+mo2IbGXiEvqjxpz
nsclaM8ilygMm37GPctysIek9tNJPRhEhiHSiRiCppA5KKYj4Q0Cecq4/iW9
Va/bJu2PjqeZVxHjNHe/aOYC8hwxiZiJhmo6E+JKv4QSF8LwNXhcpK0cmT7x
ffJ34rmEaRnq00Tk+Ud6a7noW7M+/2G2fy9CKvRWisH5G2s5jQoOP5KAzAX/
ymyOu3bzKkbK090MzdoQ2SeZbqM9IBOwdsUYD2Z0cdsBjJVSxtlN7eExTz+m
rHORXnKWJza40mJpfit6v4W0E1uzNc2s42ZCgGCq7qIGN+zl/YHbcZcdl9Gg
0qYrn92f2vRpxgR+acCah5xNsUR1zBnAFMy6Np554+me0Azo8hIpBWueXsHi
lt3HrEFj1YHHRn1Dw2J1/Db5XTEK6ERPaWCrE+fLto5JwPu33P03zZAgmFXz
ZFuyVBmehR24qVCE4z06p88I1LEg7mP6bDymZ9R1CU+eGkO0364wmy0+R0ZC
5SkXiFA0w4UkUxWxT9H3RZtubVH8cgRaaCMWY/xzxqa7dB0sZxw8miLJtFXd
BtE2DEewiHhc/m/F2FYpL4FhV4krVIzfFRrO+wHMAOvvcQmUYofaOSW2Xguk
M3XLLt04vwG18ln4Xx/qYKUeR/NZ4cvC8+B4grNfWxoonJ75vg8nYuSs9vkF
wHORK08d9Hx2qQPT84r45I03En6fMe7d8PKAdRA6AmYZy9DrANufmgURTwUc
Gwfoiq2HWYOj3YvG14eiVfOVPV3qJAThGfw/Ejgu3tQbgvAhiyW3C62s7MBS
NhDxRXHVaHVnlDq4GPHnRg1oLCcCW6yFW15Ds3XHsRzEUwNyvc4CQDR66JBh
o4GKEbZCvhUx58ZzThV5t+LYacy0rvInChVvi0mHZ5cZS7yMDSmMcgUHpm8c
Z46C5zL3ZRTum4Ts/Ej3Y3gF+fhmYnsR5v4ahf0+dhQCvTbRvgNrMBqd1HAv
8gR8m1OJzLK4xeW9W5NZyR82MmNcUZpkG7ZblsP97qGe72MSh632o7ymvCcF
POv9+EhjGRy46Fu3GDU07FHZ4DZmC+7Nx6yA2PZR+S8MJ3pkjnI5Zlb/3vll
qNVDLtSx4DuLrI1aJ24V62MuCUshAffKlMFtlOc/j892Ds4bNBtaXLNscZnh
N6/E/RYvP+nEQMhat8JywWk6tC0vn2dsXMyXqocNHVi0fVWA3TUZzHExMqfl
vc+dt4+v4i+29aQ8IQByWWBcAkcwTgH7wIZSNDY21XOtNQRO0QEQ0geyrc9F
O3YrwRaO/LELxBaujle2cNEmx41XY3d9U+fW0Qpt7o8ugloJYO5KDfpbyije
MUHdCI8X9LV2YH3aDIrAWTtmyopNxjU1yGSvgJdgEIcMlNkW91qB2rLd3c3C
jBjCi6J5EaanT6h6ZMvHRefFv0stZRSvHVGHT4nJewo2DpcgP30GztUXoDJ9
SLRWHM1N+QTcVJuDmekyFLKzcLyxCMfEtgQBY0H0cqNVsc6NokbYs61Z1Sb+
J5+dh+NT+lkKp6CzoD8v3Koo/zPI74//0uBlKMn/nQhVT0n6XtFy8PhxsVEo
qI1COvUwwBWSHVOFNRcgk1fsNQ4j1mwM9za1p8owmea9vz/YffHKE+2XXfWO
iKSlq6VnXqZf70cWS0HqAYlS7WFFU7JBHnY/qX376m4AZIYpqhRHV46ET4zC
PzZaMUupktd1XTpz6tT+Yx3d8YrYKFCjjG44vB1D2r4OMqYs8n9IJZSYnJpI
wpDeToQyexO3E+HNEjd86pecXJ6tFH0OJpz1W7yo0jHi7GzMYF1ib2txpgG1
62JLDUSiSYe5miX9WYsHp0ZMpzkIbWbY8dpeEgZtEeQkYXek0KraxkRtp3bR
sHYvYDOpLMHksEuEJ76HJNzaJUsbeLahC+6KMyVXE69Djw/2MVmUZGg3/BHc
5Bbt+PMLiXIAhnD+JlMBs06ESqwMKXsznTw74vvMh5O9khfCaWwjjvzJF+gJ
WzBAfXQF76EH/kRi0TuMpXsyOO9Hmt8DL0g9oaxNxKBNuzXklYUdkDSSJPJQ
o43nfo6NH3suOIy8VMdfPtrsiguvDwkDstoGw641TAjkFbyuR05nXrg40YKf
a4bCNXpndY1LYsWVT109dDRsSiQJrR54a67GbueUl3pBF2lXAoMrNwj1TTto
ODitnv9IjrSGFWNxw+FPdtz/UMGrXQBqG0DNoGM2dgro9meVTsGrpV8C6o5t
2MpFf1CtfTYmVn2UY+6sulFixzdg244gxrPr67VOiVFQ5/Zs3iW59p1Vi59h
RcVwk3D2exYsXlrZ1lecNSydqgqQYTjX3CWi7W44PwvkD/cXh+GmU6S+g+Ww
Nk/TQk+MI1IUd1+Y0T+VHYOS2NptqgKvlpHpsgV7H9sr4uMwyI4yUKrO8d2N
9nsYxjVD4EFZ55PqPhb0zbJFd5uag6DVzl6/Ot43eyLVfARwv1E7p9NLl4Am
T8icxWpJfD+hExamFliwhjiM8675K9UE/MVqVNyoy+Vha35pTHifcoDIwqs4
/RskVRpPP6dDdpBw++wSBndRKxvP7fbwjftTy0zxBeVZFJDpMZgQm1A12VDU
rQsq1cfntXgYEuaqz5b7T6wdLl+FQevhbZnZWzU4uQDP3HN5raojE/xSQ7Zm
pfz+t1KE7SBEwhLaH/EAc29XJtvuu9Utt+j5IXdNIO5+DXclqvYQ8qQEhjTJ
VYO0UW++0k1iT/3FBT6F8vjlE3JqeAZdyDaLRuDjNg2OakUbLV0EwS6Y0Yxk
9e3B+WXl1zZbwiFGcdmOMp9ibeyG4RiIx33JZQ5S+AR0zxYisaH4pENb7RAm
1TcP2g7G2YsKTTvqEYz6TEKF9rgtOUYaWRNzIMB6CH1M8EFiaH95/bPEK4yx
x/aHIlGojvnNZNpHCk4FR9SPjvaHwnsjo3uQY6dKiFt5WPxmqJpcnvWXdCDr
TRB3im8EjCRmxseJh0ankDiH7eWi8lv3zG1Xohmi+34n8fXHeFshbtj4GDyP
0Q1VOxtL1C4xtkCW/cxWcyECIjxOEmra8eeeH5AFulIB7VGcdGCLuB64ZaKc
cXEZIzx3DDuSt6apoDWma5ocEZrgmtTDPIfLtGYL0G3xyNEZ5uPhIpizCVGc
1fMrIHhyCdZtMnleti2z5/KHzTxPHD/NKMeEjrc0OLAKawK2K7CDYnkJzu2p
FIoWIUPZWKPPUION8w0zdmB2RY+ctRWV5bVKq2I7U1c5u7NT5lprcOawKqGn
jszC6vZF0Vq0Mg6NqOi4utM+zwwcXyG3PwLXl9RNfkjOAs5JShh0c8FqWWrj
wvNjdX/k/may9Cft8UlTSybLy9gW7Vu//Mo1sfdBTx4p5OOIPOXRZNmcEyOm
Rnk8UZUYdGW85QQRsTAtfZzMW0gr7nFNAGiPv1RpJeQKZCz4GgypO4TLy0UC
x+Pa3eUy+nIOAQ6JUPYuiQPQ/qB9sDxbcHTPE6rLycYuPk9pLGlPZGXU/Pwe
3HjIqw+dRNPCqUNcfejoOLlzJvjYBnZFuBeVUqRO9mbRXE/maAlXsTaRnXkz
p3qJjhXIZqL5Y84xE7qHHzyOFiZpiHJznHgPkvIkxBGSw/T1N7udRLCkYDk5
VEH+e9FuKlSZRLf5GGKr1jNyg5g0MtbS6G+UAjgnqsBS+CQpvB/zFPFacJVA
2+QLOO6FnPvf83GhtnKgbSLQVgq0FUc8rhBoGx/xuLER2/KBttwLaFNq4ja/
8ARd9PY3mPscpSbpvk2355a/YEPFN6DWXb72QXV89sOSjkMc34Xyu2Tb9XOP
6RD1VrfdVuXWIPe70FG0FU5tl/+NzqvEsmzqenOrPYwl6V67qM67/foPC2Gw
173W1uj9EFL22eteP9frLo79mvw8lt2G1uaZLqTfI78vZ/91N63qrD84d/2f
defS8vOnAJ6UbSlZh72r2z4l/82kP8W+k38VS3rWNJnmeRViQg2zcWU/KWDR
xql+gFsdyoUslLSR2SSuyk8zynyK4knaUTTAQgwtxRbyqkibvnpJhUk9+PBx
HX7E7INxnh1x+XGjrclhLv6WWXgQy1jO/2z6MYGwZNXJUFa0wjOcUyOUm2YS
dJiaCQW/Btrjg0APwChhl5FrZnoy5D0ClIoRoBSDsezdfZgWP/5JuMuCHO2O
WG0MwUyjcynL/rPK6mUGNWKCZuUKsHC5E6XDdfr2UBT2XRwBvNrfgHnz8vke
NM3xhD8q0cDJR9P5XyVwY/XUA0HYg2Ao58qsGPPikIqi40PcuP4+UxHzxEMV
+wqs8L5+ztGO02E6wPBKf2lJHi4ZyCtIs+NKssi2yUDbqMe9kHP/Oz1OVmgI
nVsOtE0E2kqBtmL8cbQKDhQCx40H2kLHjY3Ylg+05Ya3yXFRbTV6nGx5+cv3
4LJKB656uatRm7Llrtdhtsx/s4Wd88fFPO/0sxmnVo3xvpBf6acyT5PjVwWO
bPXT8JS6vqt30E+ln/bOv6rPq3EvwPLLB/2x3Jd1356BSumMuJYqfZJOPQvF
UjTINJX7jrlX5DeAvzbf6W/mMyV68NuS/tW4xSf1Vbgl++cAf27KfDg3L0uG
o53R/FWeW7kDrzlhHOxZSS9xx/s2QNOjWVd9weoly8L3yLGMEm5jUNs4j/Qn
/dyBZ/UIPWOdtNmQHPfkcFEL2VDWm5b1qMdl7Sw1JAVZHSbh+GE5YKbdFOYL
WZ9Pv2UAM5WONXTbdFjNXzJaMFyetREAoU6deX6hhYOBf1lThSIEymxQZxJY
MkapqWhaV8x7i+65fXvOiyUnx+2386i5JOQ0shFMGRUSz4m1fmncY8/V2XTJ
OCYuf3/OvrmhmDec1iENiPef4/kSEZMLtVwG/LVsPmZBISpvrpHC6APy9OBg
8Mr8Bi59a5sPFSNO9saFnCkljl5oxXINbEzR4F/+F/9CKNyX7e6Ktre/732D
P7v6atU26dpGPQ6V1L/98R9nbfa4yv6PQwX3sdOnhx6H9cN2fvRHhx6HIkyW
sx1yHIKCzxw/PvQ4rLn3F1deOfQ4TCD+q6NHw+NXVm3/y8/8jBwX2TYROK4U
eN5i/HH/92WXDf5bqaTaCoHjxvn7kFvM0HFjgfuOBY7LB+ZLLnAcacNahTK5
Oi3blmB3dw9++ooO/PLuwJzTftUPty2Qecll9rfd4tgX2lD4XbgTj/9lrIvW
gP9pd9B83VGnbG/55T24c24GpuY2mq9739O7KauE63DXbg9+BGaaBw//xC6k
/rhdKLxDW1qbMPbK3VT6c23I/yJce8Uq5swoHV74fHsi/TqAK94DP71Yb8KL
/91uRlwylzZFCH9IHVf6sur21Inm4tgbdtOZb7eXZt8Ol01NNceyzd1C7tO6
G5Xm4Vf8geju4/id4ITXQfGKqyhuaI7Bj+2m07v0uF8D+DX7u9fm//u4uAe+
Fiw0asramaKj3wb4NtRkW9HUtzL/0eJl1CKjNTODNpOyrcDKWil9bxK6BnBP
zTozbQDl6hbsdGr2UumsuMERG4xJszlMwBMlXwq7nGuOG0QLWyuIUSXYwhgd
yBdVbvttJztNeMlncI5/4K67kitlVazIHSXvZywKKE5sAXJNXbic+Pyt5T/G
WRtbzto2F0AV6SCjHzqbl0MJj58fzCfG8oijjh8KoAhQokSt0kXRcR5Da++5
JhzCFB9lLQtH3nCDl0KegJr2YxUbhiqGWXcM+LPJ4eFrqcMq4e6SkUVwqAi6
2chS1vPQSMnY0pOOYMfmvcXYWQLznMck4GQ8B+dd2H188FaBjpF0cN18lE2z
kKuhwpGJLN6oQYuKWQtyDofaQvxyjLAioQ0Vki1UrdtCJQRDbV+dmRmcv/de
1oZUzZZub0G1Yewv1i2R3w6pNksXosSXbGP8zHoMWJ276cBz6Ow55gcf0yDV
i5oxJr+H7mDN+r3Tmj6zJGfB8KmrSyMxSr7yCJxdbumUXc2BblKLkQlG/uWF
5FD8hxhbCYTHBmY6QgVQZkgez23jvquHMKOVuClxIz0D5Wl3LE7z2jK6szHn
dlEdJlRT/YQ+wFD/vFa8oSr82EMmXuSU6PgCHBf/ruDNlxZguryoqM3l79Vu
2vo/Pmv0YMQn4v1r6kM620KGmhvgkGzLO5MMd4Ko5Nk5TsiDtuwsEquXYL5z
D1yhTuME6FWBWRbmZRzsNooPfAeFOThsboLxsdLrNI+uZZPHDGviHaOSrW+S
qVIWQz6Ax+/Dd7rNQvbWXAC02e+oV76RILvJJYp2Vv3sz/agnMdixD3kSIKu
rRTP+MuoPvOlL8saZcmQE6wtRoJ3S1UliiwZJzf7r2jBdsMNe7BCqCpjFLSn
YnmUlOqAzXAgVwiIz5CWToqCMwLdT3Dkfnp/7yjaVlUIw3ADSzVZO+PibrtQ
CMekb6/DMEGka07d1Nxm2I5hETzsQ8dFdU9mLbirkApWVmnxqKSAIg/GaKp3
wzTXX9br1hHPttuTAfV08Hlps7g2y9K/Tw03ahvTSKE2rc1YldVDgetpbcY8
mXoMWN53SJslaq4cj8nM7MlUBvXWrjJI2v21KFLV80WZbWQXsIxZR0cxxpE1
+wQUj70Tb4CLxwS/ud9MfpqaQ2W5SD4iFHIms0H2SFOyCPsOpvzPYr3nkhMV
TgWayF5sK5DkJ1g/D/lsVczxtyJxnTp1FeAyo3NPQKNch0J1AJ2T4uipvBlC
6PXwmIXu8dMPS7F3KfS6B9OxvG/08/MxspuNJd10amO7aTKHT8tmm6mF/6Hh
3d+Gxm1N9ebQ9xiAAxUYSOCKrtvxLv24SiCvEsBbd4VuWqS5XJPciCobcdlG
xgq9d/lr9xAZIvqkc5RZuzu9GDkf2c6YSPtHux0ozu0hrpUr7RVXEjkqISHC
PQl5a0R3cTXIq0EHTLX98QklvwR6DIYahAKJ9KJFe5ltu0x3+/bb92COJMwB
JdVMztDwhLx1l6wFtO1wlYAPaNMGYzbVGXYGDfomlveQRvBCmpSFMTBSFa4l
lEtUtbEi9v/0mmOUttAeKtQW0kRDNZbWHKwmTUhzHNQzBd9fkewIHL4JZ6H0
4llhaL6VkInWRaVpRfFqIbLGILWdFvIuYDc4d6l4cHt6sMKa+kLEf+U8pkSb
mM5NrZJUjS8Xox8qOWYzFu2e08Tv+/UJUJ0pPiVCoqqvk8nvwGsvx2tvSoJX
RXyqHy4nx7S1N+jefvvX5Myu2jgKjCoXFz6HhQE2SHy+2KpkVmD62BGBofMO
9crYe0VjqwZ8RXs6xV6yNs31T+0vxXErXRj7Zfn9xOmP+1T99nMqylDU57Wj
Tu+mUkHjqTGSorbB/GCln3LG48s2bvo36ii2vx1Qeo3aUp23mEexhdq0AiO2
1TfA1LFFKGdIagvIbSmzv9rshNoiNHRutZ6S3bEJp9lPuZwPWHEbPYMxMhRf
yL81N5tb+i6mqoZMBqDv6r8sLCh7aiHfgJUbnLjQukdHO6Fn+cO33cbwYSCq
LbHQZfOtjwzEq3yi/ZKXPBwyRXnyVqJyra1QRdu2qYCsngpotZBMr/I2+UgJ
ocmmLxJvhnYNxAaGfZReo+UXrg8WHVCw7aHLvhC9oe+BL1xGq5DjGMoPtelY
R/RdY10Jqg+Y3lCPfUDJqeye3omMUGKxp2LbnV+ZbKO9Kmt4iaM9abQcDC6K
Aw1PmbXrs521zcJXV8XEF5f24Kpj2Z2xhB54bE0Cf230pXiQ5kCbaa+ruBgD
PAZJLJyOZqzjYa7m0Hnxjk0kyauh0WiBLUtpFv3ykiL5tkrU6ALMFxC9LZ2D
o9OO/UNsU7pTE/fZaY3NGt8JEfZfCN7uwJ11IsDTH8C2brv923SDoZgjqor3
AGkmNloYyVu0hRYVqbhx5FThzgEh2q6v6PuqSKCcEMairQ+pPukHNCv55m4K
Pt2Gl11s1uAWLS5/BqrllWYR/tluKvMJ8f11zUzlzbsHJp9oT7vthLHi0Q2Q
segZxaIVAXJsG04Js88xSsJscMyORiqJSfnbFOXh/irAV81x7SE7Hdpm8rnE
b+9S3c1e1OL8gBxN3HF23yz2rZZKY14sw3WhCWpw5qayiYnujx2QlXO+kxeS
CGOmsR2nVL2lQyLmAI637MScPrYHa0c69u0xu59MgVfp6xxDr8KsQB+v+NlB
P536En1TLiCG88DqNjTKS28xfosroO15piJRGMm+Ehra6+15GELXWuR//qVf
kihetk0FpLlu+1al4tpCUr/K26T+TLApYV9wJB47dSphB5FGH9k+dUdIT4wq
w3Ub+hzk1mZIW+hc9op1G2MO0W3oY0FfC9UdzPdyKPBsaptmiPEcunF7iYyp
R2m+DXB/sU2P3fbquMVYao3vw1F4eFsP+XLAMUXUt1wRFWqspsnYWMIYA5VM
ECDeFbcajYCdyqUuKLYT+wAdlxEhFIW55eLMOtSqFAeuq0NNNq3RE1qvGn5a
XdDXvqOezbR1HLCGaUitOVXc1ziPxBokppsPa9P4eh8yf8MlQ16e07z5mvfu
QopUHVg+088DO5ZA6WdwE6J3X+4247+Dmy4TQoBuqQzZapxeNduZQnMWHhD4
8gvmbl4c54zlGSaKbhIeiq+ekEq0nKEG2QUX4vEkwJN/C/C3+Nt3Ab6rlMm4
H5pqTjXKB5UHVOSxRXosUxh8nII7k4zVKe5p1N4tz46D0oZ8te+Z0mpI/G/t
PGrvJhw/vwsZ97YwjFPRn23qyT6PASFCp7iyh6uHlV5Rm1+ZF8W4/GXkhqbr
es9vCYlVkc48OLQ4aL6m8VbxhE+23/IQVwbMy6Hd17pKJfP2WqtBbL3LkN8l
mP/I/A57zOPl16rRy0VrOwl/V+aCvvWVgHSeCoh/3fYbb3yjlLDUqMSOq7o2
lM6//qY3JR7H7PdLL1DFjKpOXkhbSJ0w1aHb8KE03rdtrLydVjFsspQS1Imt
cdDrRHRDTk+PoIOwzHOdke3bsmf7VA+unJ0J5TBgCNeDFo9wPkgvkSUFicjs
FEu33oqb+/LzTIFEddd09Z+BM5c6PEaMRgVNXBGN59VJ35ZtRagbWfbSCwlm
u5+sDQOTUbsmWrck/r8uRQchp1D/YsCCqdKj+QbTGibIfaEKQEN9aDev6jFU
dXu9YrvvNemZUq5TSiDZ0/7hw9+WUjGbMQ6H1eZSwbfPLIt/F6lvh6iVn4a5
2kwTZtpCyf2ZOOHNsILE7OiRKNf642WVPpERUrdYU4TpW626kNDv1vrlN9E+
3j+0NFDS2aaAYNlO3DCjF78lKcDVmB2ClRr6uXa69eq/Ms9GpPv3xOcvxijX
7wTCEF9HVaTvPdK7oQpVStQbhP+a3RANmzD/KgK/sn+osbL5OaNMW4fCFbVB
k+EFmM6ouvXk+OzM19uvKL3OBaFE/HL4/UqZf3GnMmYaSxyisXsa3qHIdikT
Uu+hsRS4m+e2ZhUY8OjjA7jhWIcY/hrwzvfpA3XI4CiUTwTRMtFGzBrWK+/X
eqAmilCaAw+UmAgI5B9Sbcx/oLUZw/cvUm0stmr5/0ftE9Igo25SWNukGSiy
wQjV9w4BDPNaX/+qLShUXNIuPYYnr3qinoZFGgtsWDnZWUZQxw3XbkFl3pWc
8bBPIiGTftps4OkzSZfLwJoQytNLNJk6aeeW827PGapGCXelgQSc8cgRycf5
hoxrxNEz+aVdKkE6Ffz8kbeLG2XWiQ2RaUij2umiw32e3VARHhO3f/TdmAV4
/FGMOKZFOS5aUdHgRJPE7Kiay3K3qMikonkwUtiUduD0aUc94kqXuApJzig6
DSowYoNXpdKD8uib6YAMyLFeAK0iimFUW1ZjG8tPCY5iqNa021+YPQGnYVZM
qYzRTL/c5SW3gauuftOfb0J7fNmaZ0zoORkeiaPTuIec/8NA+KSykVVJKegD
Yx/nVFTr6hMOwWaH7lsb8Kb/oRzQaJh7qexqGQUA9DGPt2HqQTiHYZ0YrLKE
sYBn4NZbT4lL/Vz35sPKMpuG3xDXOdMn+ZUsDyGBIlf3+SjMFRa6M9HQEd9y
ShU87lqVpI7U6lb7YoUznFcug8RXprChFvITNGQkdAnsZWDfy/a4msGYtP1m
87IfaRuzg9rjFmBRzJFtx0zML1PV+RHLcEqMdGnuMKwh20TtuE7S1LMUXQfS
J7xpHRVmFm8sL1nynfV37kG52JFsFeLlwUMP4ZLYgnJV6itpScJVY7MbvIQ3
rXtw24gKWDpTQramUHHcnMP13cVbvmZGyadMdBsivkmqB9pWAur2B6/3Ddzy
NJxRcCwlj2mpGI0UE4EWCT+QoQvZTIPJkhjdExrwENlgsBOEq9HSIktO6VJh
pJuHTJ4xN4/vZxCoyDdYLkbLPfr6k6MOjl+jbKE8/yWGqZX3IJ7SIwp/aL4x
TbUd0pGYZj2/eEei5XQanSQ4V7C6mLwMfT4LlA3S2brHeNV1Qx/Do9A0aeic
B8RaHFgRibidgovvwjyd+UqgfAVLkxofwjJD7XZJ9HR5dp2VlR4crUVKLAQo
5eKdx+T2LNmWmV+K8dcVn+cFgL76EOnGXPzTet2IjftJisF2+T1oO5m5Y0+7
5P0cLfoCSqzNPAFLpSbRiSaNz6eEk/gNdNjkXsRdEtl1GLBDQwPDdcz/+ZwT
3606K7wcBYLW1GPejkprcPNUSyz7PJDpwcc2bbHPaBGKOXllhLI0Ygvb6sCX
gFmpD7wWLxsqLeHRE4QIkm1dTysdj25L85v+BiQB0iKP62+PMNwaByImNhpQ
zqy7xhLvL2ZVt2pHA34e9ozXPnS5QL/pb2ss9SzMlGRhASXHJDeQmWx7UC/W
rFyrY2kIw1m4tCxgjmZQq2s5NydQbeHDuxOVb7fvmH+7Rct7nRn12NXuJPyK
fNxK5TFs6HuhvgKUvk25/DUozWeMyeaEWEx5zVTUzSuOs7jw5qhzxmFgB0Sr
Pl41Ni3z7x8B/JEPgc2x+D3PfTWh06jvJj6KLC8mT76fSj1FxwLnil419hlT
qd8UQ6KqotnZlS1AGejswlu4iA5NIytX1kVm0pqwa0HG0v9cx8QBdF/R0Lx3
6c/JxJ4Kgl7jZXc1XWIEWbxenEwK6pSWrRtWzBkm/qdjd3/uGjsR5eXxUPTL
tYE2uT7L7NYyKEDiUG3ZYt7nfSJcFvU0EsJV8Qc6DQf2o8mYNjPb8X0rxED7
m7sdKUJDgUyBl2tUdQhBWOU19Cp+VZD7sZJ2vmcU/TDKWW84aAdYPlscG1oE
8rhwcdaTHOfNCSSH+6NvQoXpZUlYWCQ4Pdx872tEJwqM7I4bbqMwyt1UH8+q
v8V0pDh0xkh620qPAjReSYVMCo4NbZK0BwgS4kKjVbem3bMs9SSp0SjTPJlo
J1y/Orp3topYp0FTGvpyMDExhLgU1OA7t9HICxkclvbozkl5HZ930D2Gn7JC
u8wfmyby6eNl8NJmk8RX5uOeKqvfLY9a5DBzhOQYCfQuv6hs8tGCmVEThzfs
RsH4UiHIPTTt9FFmI3peVIdwY3i94bCPNTnkI/xPh27cg2lHvr58Prjtc2ND
ONmFojYFokMPM9gzlhGX0haow6EWoHHfcgHoXsz998u0DJezsx7KewimQ4z5
F8W0GYkWCDMvC37T8xWxK2rbpxYX/d0kXZ7zBDcgJ4Z7Jy+11lXzod69UVtf
i4WPY3tz/PA7d6H02TYs/y4cLjh8vTz3kMCjyteH0iTkEzQWDpsgljXHXS93
FcqZjVWOW/AS2OinTOJC6jlMW7UW1SK8CapLJ7pToSS88h+I8890Z7KKzbdQ
CKJWZb3N+tbbPxYgsh1CvAaD0mBUH96GULE51vhiJaOMgsc1el7cdQxYjfPf
xrS/zoTC9TVmdqAXK2uvrUjUagIu6mIgyDXNfF+Zs2/OGddJqtH62owsuu0y
1tUGEJfofIXuPQbwjW9Y3oRQxrpvguMOQKXv1MxfiOCMRyW+imIYnGHUNaNq
R/txIox3xO3+3veHzPWiQ12Zg1NbcBlG1fiWRfprfIvZiZgPDBbfOizrPplX
YgWYMoUNd2wSe2EKmyS5PKtrlWN42chuI2ejwZpDVGGoIoNqu/zUGuCW2jL9
9RKpf+MAL9Nl48OuQiwvE3Do2BrkS9GHTexBLsg1SDMa4vZWxhVgLv+alzag
POseLOBOBl7YwrDshaIG4ofb3RHtmJX5hEpuofoN6rhRbh1tc7e+Zb0BUwsJ
D0vM8TkGL3hviqzXcbY1L8cEOz9/TDl6orOaVz8MXJI+c5Kvx69OpB9QRsvJ
rYQ4N0dmO7PPcRDlR6QFoQjDVRl2W91llZZ/H92CFBIwFsExORLgNvDgVnQz
kQDbpDj5xgfl8YzOyz0sWSlGXlV49DQ5LpB2bfNOocM2jFe/lN8mG/setb10
o+P7/mxYHneyqyuV4LfeI211kjs7sgvyiK/o1AeZ8KHpyOlWnFd2lvPRplK5
eFxFsc2zAkI1IHTbR265xbUl1IX4uwMHBhYtagTJLJ3quLsjtUiDRggs7omW
T+qvx/b5JUk0oY5pCa1T76fS6r7Z7HPQMfVuLYZo9GeWBgydVI53oN4S1800
HAjF4xeFjMQpawt7KoIcSQt35xGQ+TdXb+t6E+gMbsDdN4m907UXoF7tQDbf
ax4UCCeT+UL7wMSbxTGv785l3yvHaQoehOL0if5Yum/R11heR86nYoP72tTn
n44G9YVsph8A+ABFfOipN6iSpthiGi5e3xxPLZ4Y3ZeVa2+SxgsagClOf9IE
vCcFtmvgXfaBJuTz8h8/Vr8Ji2/bNSHrJhY8k+XHrW9fFFuKjAIxZZiZUQB/
YxNJKLNSDU3fvS3ejvh8+LxbjuJFlXTxCcvjfN1e87473rpbXvq2RFLf+IaT
jyZkLLp/nQ2iiEx+T6FEGU7gpEqU3G2DoEOfqI/XW590ctjm5B9VbSx3XxE+
cFvlEdXG/PchRMieMwb1DXXEOo++ZGNRxWgJwPa9dSEHZGyxKVbCaEQFlOcK
yBfJI14lJk47I5uXroSgyTVGxcQhUKZ5JoddJajCX301yqp99iTHVI6Z5Qb3
JNldzevygIriGKwk2DtDNVpy7DLDukGPHakb1IIc5t9m4696LZNcQkbo/c2Z
Y/Pi63yM1dVOSBLiY30k0Al0P2wqY4ePu+5P9ex+0bd+WwuQD9HIpQ22HVI2
2ZDdk8G1wUbm1Jz/LgMxUpng7QZh4DTF36UGiWowfEdLPHsoDSCK3UvURrkk
A1Ls+DD9udeFCsuQCB1n7033KCbxIieB5/T0FqyuudONNqHTxywY5ZmP8QlV
mQIaeD26v6MSCLf5qVSR5ci4qj8kGrEzkWR4CRD5Nar9sS2ELzXBD85nH5sy
C6VuQ2ZP2zYWOE63XXjHO1z6cEFPUqoFvaCcYLCOLeA6aaNsnaJXDnvx0N3F
a1V459JlX5SmMMhuNc/IdDmaIFGW7JkbnVUx71aa0PqMgM5/136ZGJ1DBANl
Mh9Gmiv5aldtt8oAmqgGYxsX7BRdh6wlFJFMCt233fKgHXV17gHxjt7UPTGv
82smGZyE1dmKhqB/1n5Z2eWYHLrqp/Fk8R2T+v/PtjXqLQIsLOGHbjrzq9Tt
HiCDaRoYaY6RNs2Us2n65wyLZtUoqIqxqOIaXzPQ1aDhuOv5Nk+agsLfkoCu
1UwfUiwzxxUPQZvnGmxsbcOPF/QPAgBncjYswNnly7B+aAZm5xchQ/IWKf+L
CR6YksMq9rO2u1ksRAs9JPKGmwW8e+qhDVhunGOL+tDiAH72FeozbhWHVJ6O
za4kmslFxu1EEPDKDQNYXeWEoTKohB62asN1QqkDfmgmlYDaPMqoazQYvkgz
CAkYtsQlI4BhcTepsPXfqBDYxvvlKE6EzkUVXciEasB/GuP81BrNFlMNOf+Y
4UZfQgrfFF7V2WcJch705AjHqETqsTOPaOL4969ZY7IZ1OWl7TQfLVoWH4IY
qADia8LJES4TgRTKqlkhHO7J13B5M85LbXtA+cmiHbZpqaRH0rA5RTjwyByJ
rw6YtdfYprcPUYHzwiSZQBeuXWnA/Dwh8xtSQG4vekvdFLhE4kzxJ8rVSw04
fDjxYQLEJPJqkuc91IMECBZ4iHI5GuPMOjvmVkfgyqpHB2GUer/RlS9/I7zh
5Bp872rNChSB+UCO59vTWCMr1+N7wWKn+NNEyz0xu/fAKy3Au8EqREUvqbO1
PAuhNw6BSCLdA4unWXJRTPCR/5kML55e2IIbb0s4LMvfgjMd47cW4eFwnsZk
xs1slp1D37WnHSmCCwWeeN57GXk6ztskDtZt35ycdG0aQzO7rW5DixNu7ogt
N2Tf5XF3qm1xpCAfViFTZoa3rMkDo7BleSf5/aKNhr3YafQzqoaghmKGLgzv
QSn0Y0p8FNG83C/PqkukbNTmDswUNrqzBeXgP336MZoBjCxj+OrR2PUzhy1Y
EKDwb5UlOm1Mn4W+phD5TjrFrLqAHtO5pRPqsBeL7q3APVvr2KHuWMDIm83/
Dh7ou/7b1kCcIhbY7N/RYz4E8CHPUttpjqWbqh5Pum2wbPSaNuvrPxsDsrmW
sQTLczLpP6bn4OeAFTiU5zVNdjUCfqfv3K3kHtfPkYH8Tb8CDTEepdw5dd7c
/6bXgTzbG05TKCArJ0E2qxaOrR8wBhuNGciXgA7jd9IZRSLtly31oDFEzZWF
RHFiFcass8YNCRXA405c2IsYokNKVBO4MkF5NNCmsTAzICdjYUbjr/+eR14O
dtJQ9QvdzK7Qow7FrA+FqSWLZv7alNuBQ8/x7uQxI1m4begiNTdxc2RW35dJ
qhiDH8PVSsPxnUusUhxJARbizuaKTr2kk60OhrrancYQcDAMj+wLY+QYntBR
pjDiJWz0sBkK2gHyHPvDT5KtwVpdY7T0uN/Mr8ImaDX52FF7MrwUIeuhJsFj
4b9JNSHip8yKgPZwNMitZ19iFGpCfDeG0/mFxnpTzlIbe+9NaAi+lxikFyaJ
CgTaOAmGl3zigk/LQc16hcRQMW64JHf1tgdhOuy3nI4Ql1Pk5+kYKitNjHFm
SBu/pKNSx+3lcNU28MYiqbJbJAfWWAhoODS+0dnysNtQIvhADKw6RdOZsPDU
EJgtOkCKIdAfPXPGHsdAqm7705MnZQkoyieJViUbna6CJFQ4m/9OrdqJ8Gkc
09NhR7IKmuW4srhFKL+5BQPDUQ1xxZNP9gQKlDXxBH5Zb+bz791dumrQzmaf
hFt1yKv6q8Hy+nk4V693D+qs8Nuv/5DibpLoAl3QZ+CaksNIL37Zu0W/tuGV
oh/1WqufIrR9aiatSBX7xDcG8vqwfhHHAsey2Zht7uYv+Xb7obc8SEF58wZ4
9W4u94X2RPXzSGNuw3hX4APdck4h54XS/4GsPgT7/et+TKgsdsKGyObGf15N
h8Ow2jkTstIKKPq/a0vwP9A4hwdTPDYiiRQpZEnWrLGIdv1TzAwNWIVxlWX7
6ax9GpfF1fcGOh8XuaFiVwRCbWzDS6fFyUUdwJS5gEit+cgj/263CJ9u3/aQ
k1JqdbuUrA+2o8tOzt+6az9/rhGQgDWubnWYvJEEiWEMSCO5+An17i95LOQV
CpYwuBzshtHSnsdLtWFZ57w5yEUewsGJVl8qU2lbPA1NuOdBi7E79JrD0cx8
B7KrEZuB/4Ld7iQhnSsme0gh7Wp9D6472lHThBi+TP1Ea3fsufDJQNys7STa
rTdCoQWkF1ToF4w32sWw6EmoD3fWbt8ASKME4uLmOClFgsI1z71vfU3fsX9V
j5Fh//Wk6dDZP26JIpfIkqPF3eUmb3EmWHkrNJnc4+cY3jAjGt/BoPtUhs2i
jTm6XHm1sXBRGJoLP0QOBCkdbbNMTBV4KN66HLXP7VFQEmDHiBNIiRMEq4Ng
2cbQhePxaYZB4FEmEsv+Iu9PTo5sI/F1JHOXHHBy2xr6FlWbcdx/fWoqsQqP
acN6FcG6RmXeJmdRqGqpPo45/UO4r+SOkzQt+E0z1DGPosSC0hIyHlldxKzN
gT4OFu5NhUajK8fFvfGdhhJ1XikAF8ChS3x0r7lMQaixAqpHcVhxCx5AFh8S
E/tbb+6oOFbH9qy91P3cgWfliORS35WHb9Of0QyGInpTUSGJjuiSZQra5D/d
vuaad0GxtA6FvOn4Yhcm/krhltQX7YChtbzcuIjmrO7i7O/ZFzPovbybz98v
v5fTv93PFp4lKMtktj8jJvZKP5X+pv7+3Wal8jZTKDxQXgXVU9YYSCly89Ec
5aUc5vcPAVLPGHoLvQ52JO5aSsfUgnUC1F8Rrjpcb6azt4ZAKS2fIG57Zjdt
zxVXLtbg/M8vWYlQXJ8BuGxWfrb1gTKyIEQItUL1sg6sYGp+3u30IFN3dOCa
P079dpCbwRpqft520tuYr5KUymXHmuUCBDTblqai2FdwQLZfK/ftTLGbzXDM
gLaJWrvm88FpnjDMDT09nulQwg5QBZbQ7Eutxr6OMWbRRpS8h2LwRFAS1qq0
R3lTgC9qxGA35yKPmKRsXDyY+w65UojeKqPswmUVImzzFgKjEs7YLwCvJjMI
w9oYu7ILqHz96xWdMjmT4k4/ljbRDqq1Qa3lW4rjDdQKdteu25NEL8y8KP5d
lSsjipk1lg7ZyN1CrVvLmvOIx7izC9adLdWXDQa2Fc9dwECciTBslVQY1FhW
khAArc/EUk1Cx3ltT19yyUgo4z8vLyfWhWK+EA/JyHqCCX02bR981at+IM8W
qk8YqlHFalmFam2Vedt3x8Ysggodx9y7uiQY2y/P6LnoDHsxeChQOTIkQhW9
Gt19BzPVx516wX+lPHGEjWZh0YBx9Hcjs7mRGzwuSW0hjQlEtV2ul4FQWesN
oZbUPJfYKmtWzao04b26KyuAemYrvhPvEP7QxcUGVFZoFFFLIK1a89I3Pi2g
6bfbd6w8SPhGMVsd86FbChbO2NEzbm2k/iFezn4q9WXTDTVas3D4pjVlbZcY
5Uv2NWNdj7HMFwm4oBlG/yMBKbXmbfe+l3xfcVuQ45tgQhs0mLVAYwp+08dO
6CxW1rSlZ1LYlPrkV9Mplqr+RxOZx5uXzr5uN+A3TiI+9fGV9XGn8v9hV2cQ
0WsZKVjkyE2N7yTPQyqehR8rucNSueeat001d9Ppz7YP59vyMo0LGzB/+arU
gCabGj3cabCUViH7n1HgxSVfkRaZHjImE13fxQKqf37EYrMWmdhKDWCQhKpk
o5wqOg1JJqK2oBUIwwrYS7TtwGyd0PyLwfwq5TyHRS3l9jWqlkMZPROxYMdt
tNU5dS9VNpAcFBOPpzWklJZPvt9qTpr3zBVvtGSQuZsO4FZXPDBC31lHlIjK
noeblrS7i5I1JjEmFhjYk5mPjcAlQunhfl5VVu6TkfBRB47m9ehFDHQUSOR9
fGEO9/hN41ANhlDGZ4DvLzd/tU5gCOnjRFIukNTd8xWgICct36fKcgFv4nNs
lGEaxkAuVZk8YkP1HJd+s0T8xGhUOws7g2G2nbDxK4XPlkLNwsMNksAALVPG
8nFDxz1PwCHjyRKOM6DmP544MVIh5mdzucTnGPV5WZm3hOdF2YbfP37jjeF6
O+Q4W5cnVIZOA6d/9u//vbyHbJuIP45lbB40UkGGjtAJ6gx3dO9E5FSiufMg
d9TYXIJVGfZt2eP8jQz+a1k1XSVNw+Rv17wOeiq2JAN2bCHNsehS17F32EYT
6VW1Y1Lf2S+Ao3c0bmVO6rWmZYUuDvOuO5Tl6dobZPkmca0eKirkQmn+wk3N
3UuuUu9C6YAj4LthMTggXzKmQc+LMjC0Mo4nPlv6JnGFoS0uTM2P3BFuwbfg
Jug00+m37o6XPtGG9LvVY8/Y4CYBM5sL8BMO6XS2m2vTD+zmcp9t5+Httjjo
uaWKTCxRfxXU+7pQ9AnMFVGXfTkgbDxZj6RZ9yEbZJdXvym84hfBpJxEPl/Q
RzM5beQa+0XRfFz8H8L7rCzNdvRw1M6WyXwHQ9/6E85dCsiGv1ErNtPjnNE+
q9Bxc6LiMd13tmFroeoh8SxUzz3SXE27Y9UwhYIP0XBWjJyPRVFf3200YfyV
uyn4ZLt8zWM6KmgDDpcLAh3uuJnZuShre69uXbQ7EjVLa+r3etXiN5Mels+L
HcICUte3VPR+bxCa0Y6FQBmQu7csPmglKMdJ6r46SpdVl1GsQHlGPU80q8sq
carRMIxQtGPxohBIq0BOLbFTjWalh0cpizOsEDsNM9LKHDKxbc4yxWBeNba3
9Pb5yp4syq4uwUw1oWo91F7kg5fYS+Q8kEWnxISNL6GhiHYqRcMM1TNPsfgy
Nt5SNq4641EgUpE7X6n1C/lg9fEK6kQx175z2rfp4UlZKS4D5WYMGiyscjjW
isIxa2SicCzjVg4DU+fgvONAGWIhbchE1IG3bWPvcYrhL9TtVt+HcIHGFKz+
X+i4ULHxIXgksexsyDA0pMg5SoX3/MIvJD7Hm3791+Vxw573s9dcM0AMNuw4
5oLTYSHYNyudtCEfq4tLNkv8dhj/V7rllGnqShm17ch346vzmdXgHHKqjEc4
cpNgJNiCjzw5sI6NtYStH10e8hgh4ZiscDstRettAg1sxVie8EjrH41DY4PW
MOdrPJtvwNJZYtuS+dnbTIL1OsjAaNGCOH5bLoILJzrQOgla639Zxz3B7bfv
wduvdoc78TsHCXl43VpDRaLdddcXvby9bQOf+mW9Jcnk/lEnT2nycbUBU4vv
pWQvrA7pTKmuFA9rTsfGNgrTbqGg/JGXnnbvUj7tuV63fa3S92s3Dez6vv76
vxT6GvMuMLBqAE89JZFd99pbPiN/X517DJ1U3aOTKl379E8N+ks1lb+Ry31X
6P9q8/i9T+9mU59sF1/0KCxDtbv2XnUupDDS7Cd2M7lB+8yZr8C5GhZqVUF2
KYGzLtt+2vg19Yg73IHPrdO44/ySJOrNS+ZIO99o8ey/gKNZgXUW5TEPzsK/
kZ5eOILXtaapJhT/w+5Vl+y25+fv75YdC7uAi9luOs+S8m1/0sU/Jf15BjAy
T4rK4ikhGktNSN+xu3SVqdZ7GGa0N+SihjGZvIZd45A59ghRo7i6NhjhLA3y
RQCNlZfx1d58c0+sl3WkYbKJow2zDaHhkZpxQM0I4kPktloSZUKbNSrCKDXc
/kmxNONBEoA4D1hEN9JTitMDA0FCeMFM4XhKtrzbdPBYa8uMwSTaIHo4kVzT
8wPovtpL7GQGPT9xNNTmclF13Hx876eC3cHbVuaN/4WbgOIJ66rs+rT79j0k
X0ddZtIfsYs2lbzH4s8gFFxGORkjuKdoXXFJabD0cNUsBwJDhk3irSFPZIeP
kDONbtLGpp2TmyEElZwJcTP6SPPcTLXtDGChMCjeHEVWOWRuRT1u/pOIWBLz
QwbVPR4uNZEuNCYhi7n6rEJiCaUlLwaKCUcZ/r1KAIsOrSRWYp4MoJXFAFrR
92CBRbqN5PfacxmBjC52zAolO/SjwtyTajHGFNDKY6qk5KuS8//8OU5POQ4+
L6ndcWwsi77TDHZnVX/iwroV6nWoW+dDdKtAA0sUfRYKdT+yVN1zD8qG92LG
1SQeRKy+fObL7TYQmMfX26Ep8e1Ktm/gsa0Tlo7m2hvUW5OZM+p8KFXlZP2d
V796gPmyyH4dGm5rKFv1QlQI31eL6v5nLcbZMmyH6vhmdmywe/XSE+2Vlz1I
tByxD9il7pa8u2cNMtkevFIzBMiqOQRzZHTQ3kWzDVqxP+ULz/UPjFGFiRDA
hHV9Cc4utfq16l9bGCBebX8yryASpL8nlsuf7U7lHm8vXdWGFWuiOgWVmQsC
LhX7qey3yLVZrNJHL7/0T3dXXvz19hW5n1TdmhaIK49HNWs3D3anxv6krSxS
92mZcrHvmKefaf7oHZ/ZvaqMCOuNsNbdgZuymT5kVaRZKm3KtGSZJejUqnFk
MkCG3rXe8YCr8AB7dzeVI8Vv+pAysWwR25pEGnPIKNnKW+SxMCuE+az8ZgB/
1lH2iL2wCswrHLtCbXQlmnYVpC3RqaUd7EkXbbVDILSdF8obMXJOfGOruR3d
YLJoCZoDaVx2OaNaQ8SeRMUcFSt0ZnHAzjXig4oanq9W4louieChF4gRDxyv
rntI/lYqNGQgD92+PZ/kv7h2DrJmR36WwsyeHnNC/GHErMfSkbXjz+/ro4Th
15hgasEkeKpxsTFCEEhg9XGoHUZVB8xYgVxVMD+hMcoSbC4hGY3KPYslVxsB
XDNCkqLcegY9cDHQpsdiyj9z/LiCNrdf/2G7mE/KDEeJK6QrVuMaE53scI36
IYc+CgqGpN6RKdyQR0Rh7k1tTrXnhYGidTw9DKTbWMjPUvw9QiW3Gfu8Pg5x
kj1/KXCuxjvMbn04gNvG9cxKcr+TuDYiN+QjVktaBiqePVtyL26/VCeGZOas
rVrexAdOlRUXsT7GlF6OW2oS8RCrqDbTOMlWsI6CTH5dmnXMvNdWIouVyFXB
UY9YlzVZTcYhh8Rc6xWnVkyYyalWI6ABn0PoKqfLxz7m+elX2cY40YJm2zeh
bng51Ftq3tsymvGn4FDLG3uhwDK4n/+YW7HbFtmUYcOrKGYQT2cPYxRb0jM0
nweTPoi7MO2Ca77xRW/YzcKT7Qkx+daOiHNPmNKAtSakH9idhC+077rj3c1V
DM+yxoxSP6dJPAqF59BeZfnwroK3403E99fJ79cdbGtiC1BotNWdgl/UaOPh
5ljxAfnUKy/bBDQdHN/c8PGD76uDYp54RxFA6ZguxBc33LuzW0rRNMSVuMxH
KGQw6r/TT6fo/YSEO3K5fgSCVdAXXAtVl56Fzd7LA1WoT++m0p8i3+3veTPb
hUBY1rDGuFuk6GYlFcchs7AonRF7GybMUBG9yHkgqzhTxsMaHDF6WiFn8fia
G2f2i2y/MCSLWZn4M2iXRmFtlbPvHosvNDWuLdLOtyXPq3P4YIKLRoIV1DNv
aliGNvEjsjUU4LaTZn9hpUA052pYIhVvdlmjIz9S6HOxgVQJtv1ih25pnd3I
C9IO34NmJESuxQm2HSWbC282geEWAugYHm80YpK8KLw4t0Qu0gmNtJd356MO
v8CT4YilR5cjIIlMaxZ38/jjPTiJQyXUYVoqRZnybrAHSAMD5NDqgNrZ/CfX
gyKDz+Jn+psCOfJaOePTibOY2D4e/IEBmJArKWRgYZlq+jgEKghYYq+nzw0Z
dhhY0QAGQ3swxIcCGNZnBWCGVGMLl1Wx1dkG1Kujp46/aaivUmattBZlajHs
wZuOiQmTNZdTe8VWjOTAgB2/2K78yvhAKtaYAlnx45LRqKCK7QZXqueB3bGL
z60NK8lnZr4JpxeIDtyCbF6+Opy9W/fcE2EqY8M+rJAQbxuTQaSZ/J6dQthp
JFl9dTeU5iprm9mooNOXumQrG7/ZM0Hws2BooNRCxv3HgljASrzceEy87+Ke
jFx/6dwpHBddd7cmrb3qr4oRLs3rHxkI/frJNupb47BelT6zlpkxoMi13i37
VYXfRkpegjW+K17KBbhpuirO2wGtayOxQCmCTYxxYkNOFqyeQY7PvkP3bxEW
bFXba8T9/lr7v74LV6p7OH9SVuCT2h/srhz4rPRhqb8ZsXSqsIA7y7ki3sPD
Qycweh7gxgs21PpgSrTPXMA3I6TdIww7QfFyZRhZPwtXLB2GK2o1KJdnxOwq
QunsBUmS0ZjSCARWZOiuPhEwrApjgRB8bNtifPi/G3BxS7GsmyS6FbWErc/x
9KqJMSpwldXY6h9aGugx/Uec8UpSZC1rul5n4UQtj3fdCyoe0IwwLF2ySU5l
p5PvzCabLe5gDTyncOwuaHiqdgQfZCNH8+y/BLqdjBPR0nCLjzilMYxv+Q52
ZszvDLu8sYjz3BN7qVAVTj64kWe1k4N0huZuER8VjTV6y+kwlY+S8HIMklKJ
ZGqS1L4q7lvqIKOaIR3vU0Fd6B+HOz4PChTQCWEMGvgf6kaaJxSyDzw/7c5M
B/s0RYS0O9PQoevpc5mbZSmgyS8NqJRDZvUN9mxJePyLc8JYoD6ttLWhBx2p
cmlPdEtsIkraNKdqexMy1SIwAjWmwlUc1E44VP31N284gvFxVrbUXzBmzdlp
7mSCR0+wR2IZYiuSiruHHIOVFekYNBNTEiGqCZvFV4S/4SRE+8NYYJSt7yUn
R/nIqZ7eyal+qnVXRSN695ZFp1NsFQx5LRmmYg2mx18j4I19wQ2ov1QLhxNA
XVvi335Ni/Wx3DMk/MftTNbWetaNZl7wqhVjNWhtqKGWxXg9M8CRt+9139v+
Pa7a6lvwqJjL2QxOpivFFFmBloATVVgzQ27VEcDDcOMDMgOQmhqU+p79cjst
rnmTrbFZEfdWxAPXz31cDMcG3Hrdgj7+jt1s7gtteNmfwJumBUI7uiOPW17/
S9go2plUqJld5ny3RKwRmYxPmpTpp3J/7SGMecirEY9YQsTUYgjmlHxbkuOV
W1FKM3h0xLKSnlJsBCvF37CkaMoIJ17hiknCW4E2voK6dpyvcgKg2co6zGTJ
DG8ZaLsDDbtT62fKzzp7keO4UfSfdj1o/PREW/uT47k3E9nbpNH4yAzpqDY6
4LFO3TjC/uEpSUVdJtexlYaY1xuc1L1a35P5DSHe8hB1h3InSTu3UTB/ceWV
VrOV1BbVskU5ncovo003f/7DP+zaZMqF3uMybVlVtnlUDaYNW0pS3+Xp1hf3
kXgIiqEcNkwoUYTfI1tgld1hbf/qzjljwQ/tiENK8AegR3+wJn1aHSF0RkjL
oktDBjkR7QnV8hYsnaQmtFjZzZuT+RXopKQRzvYvv4MKHmL9BBUO8vY6UCsT
H2l8nqTZCV539RaUrJt7jUVQUKR3sWFEGP6VbIynXcyqC3IuOViqlng+MOm9
eo0fO33azLoswigD5PBlSHwnX59GevjGHNJTiwSL4WCWvFSZCnouxxv37Zhs
QaE4gAdeS9IXtVEeuQY3oNzPThpJOLA2CHXuuriDHU88twt5xSFXLDgOOTXQ
DV/fNu/VS+p9d7xbbrVdkk0H3v+kxIPSQeHiRXa4HOu58C5xbr9SMfQ0z2IC
udu6pp6DlaJM1+he8RL1Am649j/CdGG9e8mE0pP5yW8i2WsfUl9z2+vMVvPK
awa7x5Y+356deR80ykegpVmfC9kVKNUviDbc4l/s58GmZftZ1Vb3Vef7Ql2a
w9SMWxB3VM6AfFq0zs3Cstj2lUodOKwMBs00Ubmo0vDu62ITfOUq9DPjKnQC
A490rkkzU3LHt3rbsKBuHuA7HJNtoYDWlFXlPOnGRCwc2bqAWSRezvVNcDeq
8o509djf5lY/LjfwxkplgqvVrOw1W/DA7lV6FoScgtkAejcFD6NJxpOxNuqn
HsJp1NNBX2olyOqynYv2Gi6zIaopWYIJcwVUpWiwwMBKP36+XoXSKNU5Cd3y
QY2ei19UW7WMTH/Nl5QAn1AL3agwKbor8n/zuB0MqbiSOgU/2lMuJ0KDHgtV
2ZY1BxuVqLUo3TViEgSOPmqKnBI1NnJOSVD5MliuhFYkJNn8n1pDDiAa0Bfa
VYZ2i8xJrc9lAX12vpF0Tl56nnPoUQVm5jSqmephU2AkZnc55jdrpaZuGzrV
hsGORWYtnpbJ9qRNilbjJqeOcld+eXqY22kaQ5F0yGR7cOuV0Xp0Q13MqkTE
0rmY7PJy9AG9ABvIrsLJzoCljZkgmEigYW0Zzvu5tH4QTM4q7PrCY/Zthgrc
aVSL1hULIZVTJWvA69/UagOcfQW12jEH267GXGC1E32fRduK0fe4qLTKD9X4
YBNX5S1H+RLQ87B+i86zdaYNY1cQO4cmrP6BvbT1C8oBkgZzKtv6mTGleTOZ
73t8kihLd+DscstofWl4ddPlYvdaFZmIa1ydcoV79Z4otUl3ja3mpS96ereU
+XQbVv4Q311zu3X7LuT/un39jV8Ryn4FGfX6WrZF+d4EILh2pdGcqu/sjqU+
1U6n/6VQTyTdpXFGKPY6bNr7b4iFtAevnJYREOpeUm2+QavES8hO9fuyYoKv
cjEgbQPOdA+MeeWSzTHiOXZactvs7Ouph6Fw+RkZDYF9Wp92ptcCOTX9iwKd
A1w1OyXBqXUdpFXh6nH4ANyJb2qjDJniUjcN71JdSD0I+WKgq/KvZJFJytGe
9CH3tB1SA4TLZ3f6k8Uv06EGjBft6Let8KRYkGfc/lb6mjTODDG8WZN2z+E/
38SKiMful7f9HeaLIlQsTsgFpQx+ZyiDUXp0bFnXyLYlch1m0afbnyLz/5rz
TinXlBQLi4vMXZwt7hnjL74Gx0mxBee0lJlQogDVL8azyfWq99Mm5Ozu979f
SuGBLzL0cY+85jWSwoFubtlx+lx01KHYkm16TxnyrYYCy/ap9hnTwhC1758b
UvsBGJFVAeW+MozRkVG2UD1FPGpY8H0yPX9icqPNow9IJR3Q7YSaP6aZl+XO
6n7GaElzc2PSmZ/vwdWH6A5t/8SGEfKa2ALgBmiE1g26g5GznvFTeAnpEXLA
pF6Mx0cYRkmP5Awynvh4zqG8MusaL75DGH4CdZA+MAvVAuUCIFzYbkJZq0or
8K75/MOfbnyj3JJr87okpxbiwoR7FBWGoNEeOkUnS1EGQmENSFAKGJwPCujn
iQt9QJON9cq1VPAJfjVnenXmEk2izwFZG2cCprTaxDpMHFle4quOxgbT0Th0
qNEcn5Qyo33JJV+BuSJ5OzrrddWQX5KUCxluIcAQ9q5eF/pN5TYU8s8Svv26
hZN+dtZS427YMIDmRTLPq26lx5TYJHeaP/mrg91U6on2yh2fx0zV5g2123fH
JnfF96+ISbImMPYFOFteQaUIr7yalpg4A6tZ8+QXkAKse+nq/2PRg3NPHBHj
MQNLs/VmpvDe3dL0Z9ouquAAc28BQ0Hf09kqdU1KIhnm4NrLW/00fM2iGcnD
Z6OsLTgZW/0SKcFGTAEPw7wdgUq/kDFVc78Ltxlp+VJu2Bewvd4SHWkh6cgx
MWhVmBWXWJmC5vilPy0GT8C84lv1JRGwrGNYRfP3f+INu5D5i/ZP3vFuWF/N
i2l1GC6o2dSEl39G4Bkd/VlGInuyOs3cEStmx75TsdZMhKo4fr3uCVBCrYMD
drWswbAup6fND6RkDCZYTC5mtdWgUfF25pNjZZjIKt2KOKFlaeOKrOa7E408
UdDO/Gk/K4DuWqRF+f77e3AYJ9EaMyig4DCh7WiOVCjDYQPEC7/7Yz9mK0Ag
BrDh7i8K4IAjAeW8HK+w94UhTFUAz9VvwHKENU3LjHAwKcMCwea8v182Nt8o
FmBO02DzPqpNjLPmEAzFEhyJl/CylZMNCxZlBBiAow4udWn65+R16BrJFoUh
YzYEVskIQMwDGn0K5INWGztwxaFjHwP8sH5T4sPwEgD+lRNBacwbm4jac7CB
1O6ikAqGVBfRXkAWMMhpZQJIyxbJI7Ku2+1BMU8MQxP7SWOjZXGjNbSH4C87
OTDsBbo3DkN7PHKIo8NSBON6t5agKROYXD7Pc8PQM4Zvx+ZlNNqU2e7Uz06Q
9vjbiqy0DnW32AVsMxHVdCIhKhOR8WW7YdEr1HKnNu2tnXnUZxso09eHKgPV
iwl7QkSJT4Cq53PHjkl19H+trxtjWsaG9rp3FbSCYRtuVT9w1102C4A5URNL
Q0QMotKnJsmE60401TmBsXFHWrc7MT+YaGAn4Rrd8rRSxLdf/2HfDW9mgmo7
DL4H/4PfUGb1l9b54ltRac6KFIV5/KMZihftLqPWHJuUwbjth97yMAayWNfP
7CdsDxUQvRVOtE1kiEvo3usY+jtNBdPAwBaxocmsiM/3GOoYTV+wAzcdWxDT
7OX6Oi0JP3q9M/q7tr05gG7BYjr9XTHkEiHbTG9Ewkt3bMjtxblGVbyge6BT
73TzBfV78bLPQUMC/L3m79+LuTtfbt9w6d2iX68V96l1DxrcOvuXKLSbl12j
5tKbbnq32E6hrAAt/x1yzhfcut9g+cPfh9MLariPc6OaDiUN2NlWuun0OfMo
E1p54PQqzW3AZouk2iysydQZNfnk5ex+dO/cEpRN9BdiwaKctiaLF6uyV2rr
cntiLVkbHcatRucRshCvsgD2OTuFHZWFZT5ii1xfSwraR7sdktFP7cga7arl
5RTGBNyvuV4rK3vGQo7jKqVatYrkMR04eZuEoyhndYgli/fTFXNxa6tDBywi
ZUjznwiRThuZK0c5UA+BiosiV8XDShHHqOhEzV2Z35D85c//CsY5HzrUoofJ
qIobeHuuzJ4Vv94lYtSkNeyYwYqxLoUP5/5hc4nH7+uQlM8hlwiwoGqjgRuP
QuRh3LHUl8Q6L6d5PkrqlwiCHGdeFJHNJg9/YJFb88e82r8E5ijrXgLiGQlH
JhavQ6mSzbv4eZpC42d++Skg2GakkrkmPT+AnYhkk6hc2rwWpoi9bSI8XnHj
SOYcmQRx2FRjJ88kKz2BMkzBbsmGs2rSlcH2Eb1gNHKMHdblV5O1yP0dkYIo
0V7whzdvfeAOdEzotsNMqvoENt5Gx7xQArZkHS3jU2FDEB/zaBO4D8oRwhDc
wFKLvHfxHQ0eUlVjQhNuZcRnNHwgeDLRg2gPNSt+fn4PbjzEAOboGzo5FHqL
EqjiwdsKVOnEeNobPLW+OLcHt98QdMBn9egqoj6XuGb1N/dw9SfGldUUI6fB
Z/akWL3KwmOKZR1mGBB65+4fOAjhw4QyyQBF8mlVbzcq5Lb7YzrVGntm1vv0
TXsSSuCLvWj293mszKX/MJTbfJ5RyG1eJWfhVe80mVwLAhUJcJPXHb9T0vR1
AX5FTpFL4TEUr01o/cbuGHy6Xah+RKCLGtxDAW1KeUtxz7XemNLAe63vhT0j
eFVPnN2Cu06Yftb6pYPPatfgswJ3tJh8eSX6/Ko73YMZmbz+0RNn3CbJeBiW
lzaalQOf2S3CJ9tHX/8VKGUFVCjpq9dWxDNvA5Y7acGZ7iV5QzK4DXCt4j3Y
68ixYP3NL+3BT00ZiJoHWLpgIuLlH2Z791rWeSydsXbgt3Vu3ZsElkftJKkw
YVvxfNhA6k6r7nIdTCU9O/FpnsO4+LDhnLj4t+oUgrS+2+jwg9Co1fVr9oy5
BmXrnDFrcTUl+cj81QpHBnSvrUlGCcv2RhKIN8VO4KToxry4zcKq3friKEpp
iK5JAdqQrApJZdtveVk7ZPrSJRFZIqyGvyyoScNflE1Sy+C3I4E2DX9ZDEks
/DVVU1zsrTTx5Rj44lasoLlKC7QcA9NGxGSJYCPy35fOfuqtjw/8NgmMVbLK
UGyR1EaVHMErBhIPsRQxER6GPKG6H0QzxP5sDEsh69CQKw+xOw0bVvMMNKzj
jTc2kDmToZWEt+lDjSjCmx42tMHeI9nKzBFH6Mcn2XCYG+jW8Akz7hKFMr3I
Bsi8HwqG49jAZdKZPXaKI36OsqLoxfVLFZg5RsGeX5qFV0AItBvyHYrYhmAu
MIpWXI8JHTZjh3OWqh4f9G4dpueM6ZJNevABZyLjeagbBd6NKPuXYRbBqx+9
2cWgULoKM1WplDS2dQunKkpr10M0WOT1Q+ymzBHSkVVeYiJ5akFlD4hDIhgE
J49BmZQBO8CYxnapPaq7c7QmkvUJ0e26+ePOMc4OzyIMNpxjNCFfWAtbuO9W
63WhmVz+rA/pK3E8Lcs9fWxPKvgtlxu20VC1vqJrdx0Tuswj1bV4QFSkPZcq
Ej/97fZdd30FyNY0GEtRQRAA3UcTnxYFjQkde3AVsahRkktazO1AJa84Eag8
UpfcaTbG37C7JOHik2A5K3vaPVDZgmtRfkCdYClTaZ5zXOI4gORrb5kYy+jM
Q0TLSls4hJxXl1ZYY6KZGfuD3Sn4fPtlKw8L7L4GS3OLMIXgUnInrmj76ifb
PyTQbMWU1M1DoWhfY9QqKyRSVgDWxs/BO9c3KGGCKS139CjP5CiffQRnSvfS
Sx/S7Y9AC2cOzuf1m/qZaL24QPrFddEMEYwbXRWAdB0HZAo2ziuZL+MiTIWa
ek0W6zludyvi0Ta21cw1xT3kH8vbJVEpLnzXvDNkNaMmWvQiHzl9josyTYSM
k7Zs6qdo8pFVCgDlPJFxOxb32pjHni09SFlz9PK2w1Fe+qaMwcQis6WsUxuZ
LSgrDleU32avretcouVIbhjxm4bALIhQ1b/jFtsjgbaEXDkGgTWTZsAR7jz6
e1sh3y8jYjBrDi3Fdq+Q91zC1iqZFONn8HQKb5vCC7OiY5fGmYRi2+MgwT6v
Y5xY1F4k0cc+uhJs3wwfy4xrI1ilxSUeeioJlIWdt+AKQiQ+ODeK0e0Mtinz
xkinMp+5Gki3OoO8A2Si0bChcKTyzUdRAEVqLMdNAjbKmQA8HUsceWa2JA8j
v1Z6LAY7xuY4knG1MNrszLErK9NcuO6yRYjj3M7mgU+OeUmIRyx37cEIf+uA
xKMHLKMR9JUYilECijiHQEa7ycKvN3adYGXXiLOTxrSzQFnbD5txYxJ1At0i
3r3I7R0Md6bJwN3ToUFI9rWwUKfZ+RDNC4elQQmfszEAVO3F72sOGMOwUYdo
AkLFgwOANh4D6lARIeEL6sIQb1sRHFaHo2EPSMdxnZsttsMCPW36I4GvZMOB
1fYcU6I1ptoaaeFZsamv4aWABV5CNiM+32qqZLUERFxzuxY/Q5NuMVDStWSN
EQp/9NKW/uCpksCNy2C499CYqBANW8ZduPavdKDkFyPLW9Mzs6yCBNO7vdbY
2BfhlSwyiNvJ9LzA94zHSxtcVutPs5ftdvckcg/79baR48TF85q4ANGHRV0h
Z678MTi1XEbQ7SHQGYk49bXM9PUJ0lwecNWcLsuE6lHWQPex9lXv+4reekta
DZfUlP8SnD4ts6gVNr4Sqg2P07Kj8Oybf2tPzAPSy9Tn4OrrtuFaMIR3MqnY
TgKs43f8uOtGOr3bnjzwbpdu3DtlNxbZMf3G1M6gT1lJDs3ZSjQWtxcwYENs
EU4Zyzael4cF8Zo3WxGiEvmb/CuYLR4csStrD1pFixWlSLjYMaoGKFkg9s9w
dDZaK0wu4m8yiwot2ITdrybe68wUjUDuyA3WhiGuC7T70MJOJ70gMTtDeqyX
tuCW2yUER5mskhMLNJ/ApPLhIbjYEJZr9DygezyNxpnhWrcx9sd9InQbroN/
o6FxVqeeivUWT8Pw1EJlWASkfFFW9juagvgYxgAlbQrvmsLTGJZfABWHPlI9
8ETMEG84i7YrQXTInn/shh7MV0bvQ7g9sa6OfjGTQwx64bHg1whZ9DzrXbQv
zgvvF5dSmwJ04eSzgVOqw+yCw96UAcjG780uQ2A7hhdPTfkFiJIN69zIub+h
Dj8MXqNQSBpqr+TDSKbisRGmo2NSf0gRPPhGVIYTc14qMyvuGYmhYJeIi0Y+
6EtNkqY4ItYMfN4zLIM+f6SHaHMsjgA7j64Wvxiq0yOx6VnW3gzRRFt3egG4
4SYyufw7U5nrDW38nROpsoDDbsVat6i3SbpOt0ly+cObbhJTQUUOI072eZJR
9VAiKIm3dEIdfkclhyoKo5R1WJ90G8iwCfXKOeGemWdz1rZmq7tK6O246dQp
7qkefTOOAD1WRWeZkE0PvjsbaoNSBceu+2zGzIoCMd/xPXlEQYHdDTjYrS75
foxwz6h8SNMVlclk9Kd9MlK39DnbrsNaEA7gmMscQmMaIY9g6O7wX969Euk5
EyFyC4SFEVWEbQPe+RiJw3LFmdxLaOmZdE4V6ikrzl4rjRQQ7I9NfUc+RSb9
LLTQ9rrR6y/VVJZcHgkDF8Tji13FBhIjaqK/avbDsK3iBPozehRSqe/oJXih
n9WkQanUs4QVEqseZZWjx07/jf7EeF8f+4zpE4ApGb56pDsxcZ9J63Kya3MD
fTomLqKfTqn7ydpRei7JS5k5aiZEvS45hbHaudn/HUEje2GTwfwUfKH9loe+
Iis21FddO+Ll8do5KOY3oDLT+3+Zexsgu47rPLAx782bN2/w5gcz4AAEwBmA
I2I8Ih0C4u+TRSq7UDhDSYygiPJQzlLjYuXJ9q7oleKSxwIiG6Ylr4vaCNoq
ianVoChV7Va4LMcql1cvWzKqUDSdLTtOlKKyKVv7XDu0HWWjlBTSqUSyuZbe
3nO6T/c53af7vqEUx6MCBfTc27dv3+4+3/n7jnnllY9Xk980rePnqvW8YXoL
GDbCtI9/YI5drr74J1arTwXMf2c2W7PAsfAvdu5detK86cKqfd2Fgel2+vLe
zj80jzxNq4PGjJYo8+wLIKm2DRRO3boi40NiIBj5aAyV9GKUmXd+BMhNhmbn
KCMPPBcMGd58O21OXx4SDQicS0DLZZWf5qtwrjgvPPxM4iLtdEdE6YWGDscD
BjAYFvS3jhwZ/eGtt45cGIdgGnaoWZQ9cG0iJ88haZ+ym0PSB7NrSyFBJ8zt
T17HWctA6DHiQb3YXTZOdbOy8boIjqiN88Q3E8bUaqnnAhYFGWsc3JpaDgUi
J+dlbN4JR2GDjViV/sm12v1ahB9EEA3N+SUWbKzdKtsmstflyzaFyeBHqH9t
nvOl3C7stan9r+VFTGpi5Jju/j4wZLBbxjHqxe8YBbeEQUqTfoDe6LA4Pn5l
KukIt4cxf5fTNZOa6Rr+n6Xx1Rg9y337seig2NM+KX0//aJFFBqyG9ZU3gqV
esMpMpV8Cn5qxCUrQ3BRKwcUM9G0R2xPEP+DNUvhXysKZJyVbShUWU1hz/DU
kvSkaMmYhEMc+Zxa0NbUCBvxv1OUVs2J1nzt0mW33R+856qZnc0UxyNF7ubQ
TFk1rKhy/NVHLj+2QxEhLHQxeEqMQLcZZ1LOO9RsXjO3B4vscm/bSDVGok7H
wUfSc32rzygCY6vKeTBUhiS8XthGfo1BPMWHb6zd69mr4qUXjvsmq/Aqgjng
Fe/+xBBiuDdPMU5F9+peZ9RhqNi+aDprXDWffs4tzEecEZeZ1wfMWIQ/M2bx
5LaQOW7CN5d7/8eNCRcD8d9bvSmEF9z7WwiBHrAZXPsnjlhepgnzZ6Y/ROPw
5n9TIeR7176yY976kssEe/vmrPlbN46cswoQQKHTF8ECed1c7MxUI7HjeOWV
vWpnbG02p75+Y2Hyd3fMxN+vJD25CiDE7ZK5vHFmv9H8d9IW6mAXmme3wnjb
c46f4TamRWGME1U9GO7+9QVb/uLNWNbdTd/N5l3r6x4BdiaeCSsFbO2uHSrB
g0eit7VSrcG7zJtOMtR49o98EHSFdPePdP+tHPKpZQjACKl31T8dRyzRXpsp
XyTUq60t88DuUfM/iaAOsK/io5zdtRmdLcfe/Colo/6HbhfbgNIYDgfHC0mU
xhY1wgXW8NoCQytQwEAT/BIOEYj7cVHBgn3RwT9B0u9gooj2dW2Ca8ndK6JV
HXRkUWUpTORmh2L4gze4ih4iIRX5tRkMbOOo0GOkw8V8wKZEkOGxthLrFWe6
jU2+Qq6GU9LjaPqVi1klXDVOsGSWqFgyXfCDbMDsZbKZzndRRpAD+/j6iVL3
aKpBdxfEChQvzfZAzbmHefTQFpAgkgJgN9Bmwt/dEHIybw6TYERel1qZHq/2
zdFu6d52DpDkp0eQRnAhydc9j9y9Z2082CTCuMNqkhOlkU+kLnvtZZrNMs7T
qL7jnpvx4MZfo7gYfUDWqjxU/5cf+zGXG9FQCOQdagPF3EOySXvUkqKOBqc5
pW1WIeps2zY4Hn2bo9/iTPOmpdxr0aIFk5xVl3vytZrNNxE8BL1ktkYBcdER
165iJrxXJEJNwqAH2Kl+6kNXq+P0tNn2pvhV+5EL1Y3Dwre8ynXWyNvff9k7
MzZ6Jmy65FAUVfgIJLn/Z3LES9RbZ5/R9lOx4Ijk7AWyT65t+A3fvI729WBB
CFXZ0rGX028fMcjV4Hn2O50hZrINPEa4h+lu2yqwtF//skuWCq4YimHrrW+b
viVk2PzlD3z4xqFDFeJa+iVjkHIshAl4u+j6G6t3tAWzrKFtyWx4I057d+6o
NWw2J4ANN7CpvfvcjGk0gJdiaKub97Hi+ebC8sdu3FyhvA8BrwQ49a8O+Eeb
X79uVmcscPw7dyYOge3ekmub2TcTFsdOTrwWO6L2W5PEPfpnZsuv2Pl9033F
I7RjiGeHZsuCuBBfPPHnaDa8tLqAI2ZhupaLYdI3HW5XrcuXzC+8h4FAQ7VP
XmNH+3l+eE3gDEEzMNL/qbvcsvmHgmThRLDuhyk4OTjrLzFyI9RxKVaC+MS5
PgQfpwNuQt91sbH4lOd3jB+BLiCnFfmQhtuV/E0Z2wDfmd1mos+P2Gr32taU
Koic6XW8Llpi+3ss2Ci8gmTdysj1IsbQpDqHos3qWHmgo7jo+MhDJGvWl+9O
Un4q25B8emyakOa8VvB3B6LrUPBcZCcoxw3bFEtXp74fMhiErVaRKNAvV/9d
9QBBRlQXyxjHFpKpVqlgU2z7/fV1T4urXQd2m4P09+rcnNeftJKoQs/qKv11
wlaP6tU0/u83vGHkgQ7iimmLbwjFfP3mm/E8wfNAKzIwgweTUjHAwReK7uGw
iZRQvG5OtqHWOmtH9w+3t7EN81Lbti3kP468pVo72Dj9KBWlEQfbDO0shVVO
2/wm8PbR+RdWbQSxncwNJcw5o+O6X46PPgT22V5yj0h6kl5+EW7RXzeuOKd+
PexODIp077HBjF/aFhAJZFo+foO8s8C142awTCLgu5tGxtlzPV9f1toUoVjk
hZ7n9+YoSR+pmmEpJM2zL4/IMvJMt/tqFCzJQ7f3Iv2CC4wNc/GStDraL7xi
kYlzdXrPqnmjOfd2QCtr1bd2SAnPqgpt9QkRtcxdA8hTGZij7a4JOe5H9w85
AtVW888r0LAR1PnqCy/NYs43zkMADW93oQFMHzyGUuYXPhO8veBhBjKAVz5a
/b2xZU64KAFMxLJjZxDm8x4U2kX0U5tTE5s3mq1/Vf3uyVA4cMbfcnTpl6tZ
kAXoF97w9Rur07+7Y5ofNd1F4zKxOmYBpMSV9V2z8GVh74ISSpdBmh27DOYX
z7Th7NKQK3TFE+viNrJ8+oeGOxsLn7c5VMYKjGBhdrHI1i5ih9v62s6vPCuI
gdQlO8IAakBEcJicDODHa1vuJPaFQWJpTkuoUdMGvcCb5e9NUuVdCBPitS99
6boBmoStgUqeyFSI1PQcUPzpVSNOMZLlPcnCw+xrWp5Ee+m6uW/ZcLTR1ABE
5pgKvnjjvh1Xa0pF60KqjVWHoBQ201CX1CkpOuKYsVB5rMxU5QhtWlyOCuuT
FMt5JXojyU6QjdaZDKuUIbX8EPyq9sgsg6rSyD0ltBAnZUPg03UT1MZxPZsY
878cNGJjKTA0n1yET+NMG/tjt6n0pZNQQjjRVaoaPcg8awKjaOaZjm3jypTz
wDU4KDKzsu0/dTqJCUi7DttcBUGwtntzz5Q2FmsW4hWcqHgvr8Rk68E45EZA
CjqCFnRWuaoPv/7II3gDAqVZBTyxNgBiCLy0Cg+zAVJ67XFFgaOnbJvIhCTY
UNJLepJ7aOn80GycUo/syQSqCfsuna7z60Nz1smU2GKs33qeCoaWTLQQ3/Mk
81zKWDnxXh6Sv/mYam9iWPYbN91k18lcdAZH6W0ffGfftBbAGhGUQYg6sjN4
PSCD5VTLxcyPrVqzkxv8/i23ULG87wHwNYvHMfIIQZxGd2BPuqMoNVE5sweL
NEv5arjr8uxoXq1AE92zaknaifjcg6COub06d557bmhajWUMrHr0Cag+tb5p
Fr54415cqP8KRKS9fKl6hLV8HfcqFKUsyTBLKwMsvqte0+y+dwuZK3+ap0S/
0QEbDFuqbt3D09Nai2bwTS8+fD4Ao7l/ZqxhEs1G+zz9g9ZC12doE2iC/y7v
N5lZ6tR5+tAnqzfe8yL9mifHZC7iK1FSB9mZHKMRyR5v68Vp4FYK+HvEDy9N
7Y4SAc8WcHeSDlQygDg2MhGTlq+CG0uHaDjTgid8ZLmUrW9yeNmcdpBExjPV
tXX49kkMFOx6QUAi2I8nERg+9ZQdLdlDWm4G5RaTFjJRKTUkgXAiCeUc4NDD
hSrbHpgADxJ3rmhr55DEmnm3xOEQG64C/vAA1DuDEbhvD1oRQio9Ot99Q9zf
ZOdaswko360BLLu6VU48978zMmiFXW8VPlBLm2iI8j+SouWRJ+BXdTCplEbg
yLbXwxMMOV1GzALaYbJPFUWIFAY64/0RAZeozBMK966NHIUwJcWHBE2wU194
4IEiDvi7n/xkwBU2OgGDtWNzE68NSUYeaINngNAzHdvGC9oS+OK4hkBVyZCk
XWcTJG0beFL8+KbCWCD0ile2+mdvetPoT2dnazGTiKh1pjkRUbuiYKECZhKc
RzNuh2UUBnY+7B6+5Ztk+eO6gj8fbJswELovJliR2/nrqA2RpWtjYfu+TcxI
x/camdv6Iu3NbYrdDz70DD52tv2MMd2B177dHrajWx4/EnI0+j/vv3904/C0
iyEySGWDbB/WczWgNfLMknkBGR6c+sm+V8nTjaX+aIh0im04Rx+IZ54Rszca
PbuzM4oMIV1z8br7ZqcitceSsDz/SuDosYH7iUZfQY7/0X8HEQKzHgpKXUdI
fX23NWH9c8D3c4WZMQDt/O1N4/6F/92fWngtgiw3meNbvU1z5vesteRXvly9
2APVWXjK3G6zZGks/hVnuktmw9YL2Jy99R/cOHTo/9l55xoUU1w3666OwHJv
20e6n7rLGemCsa1Bv0MWSHJloo7prSv08YNPpWVs7uo1mQS+4YPqbQ64LeYN
HBuNVoauOV1X7lQVkVIEaDi6yPMcSgjhRAYeVS+9ZNv3HBwQLL8iDF22ieu2
tnCDadeFtoD73NK2iUuPReQn/UG+Epmamh7WcW/PB1Pze704o73/d7icxuOI
9LZcjCeHP7kI00TmJwbAtK8MfgixboM+K/SUxxv5Mem8oXncoo4TDyfiwWdR
bCabWKs50ciBx6/fGvjfF9Mk7Vfeed7SsXkbtYZjstE/pVC0GUUW2YDnUk1I
4StzbSlRP6KLArQZ1xTyk5/9bIBAoWcHBLQy0iJx3Y1vjzNErCjX3aIAixna
8xLTKrsNpLGLi/DFQXl9sAlFmEdAAL2bBaFPbVDwi9rEfLng1YjSUcWtsfOb
cAx3loPFRaYBN/cr9RKHdcj8eY6isc1PXiHUO/HyA+wBK8B9g4QjZtDnRfLw
peDzEM4lQW8Nf8pKtt9pjtr+5e234xApcwBcs+QGprBewrwe++pVd3iEEdo4
9heO2Q/WbH43TPpxNzPX9qcm/tgLeahAjN2AJk1Zjij2wHl0bb/T/Kab5NfQ
igRGKDwx7Amzu2ILNT/TPvQMsm84jR3XAoST3/KGjziQYMsOt1q2ZLbpBHMa
BFVvDQb7XV9f8M/wN0uLS7bgSH85+KWmKuSxjmyJgYfczsbfPsXg111bPjYN
INF6ha3O3V21NS6b7WUHgQ4HCm2vmPHjSXLieWOl1fMgirdqQjwP1Hhk56bk
2AgzxsIzADFALed9+CsbhYcNQ1sjHgTkFP560hkutHgbaUth0CAvvjtRDPLI
F0nx7VYOcD5lCS6mpa8tFm3wpbYCsOHXajl3zgqFsOC++3RfsM98KxMIcPMN
FLDZ8rdOmtgqEQ6Xt/FThJ3W9vprXNIr7AtZk3eGI6HUV0a6g0/BBwnCV7p8
qYwGsmOKnkuEylo/FPCujXO+U13ZZXbI9cQUInLH1GQ8hiqYwUZFFcwhPkVX
k3GkFlXMKoLt9SGN1ByAeMB5j0W+RBab6D3vpbWp62tiryjXOSwhNJcO7QBl
RTZpQ9tVsvnAe79+o3EoFKfyYaScAWDQ39z4wNdDKYF+Kc7NTzzOQx49SFRm
g5unrMb0Gd2xz+tJeM+r04zoOARr3/s+3Af6M/hy0P/mG5Y2bxxZHe20mp8H
G6MWGjOprCM3TBFwZM2gbfE6I1vSDj4pKFwgyydyzkobZDUX0ydRzDjhAgjN
8ZGf1XbY/MDGp2/csmH9dHb8P8QxgZL5uQb0tJtP/WNMRN853Po5127jWuyB
8YXNhcZjN1qH4T2+wZTE7UCJQDt4sG1DMDp/sjPZCsve163uXd6fO2IRW+PQ
a1H8YNvbvIZX1/YnjAUohw79hY0EpxT8aXN3D5lm3fR+a+dWtyob7bfbdLTn
+86vYrMuXJEJwWm2wZ1mDeB5M1+o/r24uu2MC/MVrIgsAVeQD85WBhaRBNfN
xWU7E/YNroWu52zOYjUKrN+Dnhfpa/BcEnQEbgQfmZ2YZSbMnJUhDhvb6GkG
C783oJz70eMs4CHJlNIKsIdrqB4m111lnjjHEjNR0M0oZFKydnp/nsQrY9Cm
pT6sEWlm7rdje0OSV/WWtwzMytHtgHhH30eqNMyFT0j0gaj5foR+PS2f+4bq
7nbgS7zS599mwT+/Lr7GrwUWZrjXj75z3JdCRbB2vB+oIXn4YXLtXHksNA7D
QxJDH+TSj8c0P7MNm9eLfNp1owPmtOkxJZ0x4QCzC0AbHuP1EEFUF3RtaYkU
DhE034EGEYT4XlHkjmvTirQIi38eIjRZfwxeHRfKelg1bGXDVwckEXKH1J2w
fbFnGq3zrl1b7aFkinOX8eB3lsNCCd0V5vD1XFmaH4cczkgroFjHLT2+QFi6
OPdOzrYNiQn8r1P7ouy+68LZcerhod1FjSEQrUbglapQa/aKSWUler+qm/Xn
mZ1CX/nEfiwF/xXPYxPoeA7vuJe4aXO593WAmzuPvfPLZvX+a+biavV5LP0A
BD3tzE/vuEehWgy4weKbX/kyyGf+O3xkt8vq0zdt0lFgiXYxptWWWrMk+XaQ
tgjJg3uOrnRoLl3cMHd+xPLG2HvuM7ADe5eslucjImACrrtIXMp7et8AjXFP
PBrUlQoMbpo3Xg6hsLRUEwOv2TRTH75xePZrO2bqy1Y4Q4Rv7/LuX1+xJg/T
/afs4LtsfubuB4B6wKw+aHfqygot8Z65tO2KQKCGCqGC2/vdKWdaOfRa0F5p
13VNb7tvq7E9FuQIWfXDd+8Cq5CTqesm9khdPk3TNu+NEnZzROSITpbBqqYV
HnH9euUvggroiffV4KySvZ4qmhSe+vQj1RnQZOc2j84S2h3eJqK5Zc6Qt3d4
ejFN8z/McYD9LEf7bg5D0nFi6x6PKXADmVLHsZpLcBLx2YxsFWkq78EB3CDE
QZUSZ72sXg5yc13pRRL9Zcz1/fsTH1sYehzQl7FaRUkV+Ftmrp5Ue4kzqFeW
zvsVfT7JoOqYEgZgKNa/o684kWX/UN4R6Vveebvo/fDBQYTXBecU+XtTLbDQ
LAla6eHazKHCvekzuG9DBIEW7BZi9O5lRfyWCH5yPz7KSVYeqgQpnuA545WI
rYnJ/vFn1VwaqkFtsA8uVXjEtPZERj8VuKa1AfI9nIjs8QPLRhOF0EPCDNYS
jusdcTCCcbywzcRoitmMzqJGjmxyYmuxblB+6I5Fa8CnxLpMmYfdlXfYKJJ3
3Q9W+T6czDjhj97XMzvPU51RRobDTcZy+CNMT//6jbU5YSoibhaeSH26UrTv
J6iZ0yD8/mUoBn9/yVxmWjDA5Bdf9EkS6SSum955hwnE8bHmjP/MkoFH+imm
54ffwYRA/oNdZRBUe8biFkbj/hM/8ftVe4VNzjFrdHXN7NLQ3O3qZ/b6235c
V9g1V7b8MUWyG+EGneenMcgTGLcRWHadvxXgzzwQnUpRMLx6fnflKCNxB1QE
bpD3DNBXYX8QOnmfVuMQcZSvmYuX9ghZecPJ8c4z7jCeNT5RROZGowos9qpb
to3WEKJAhdYYWQKE3Fc0bjIPUbopl8PGEXr6R5LmeXqVJc6FRZCDMt4a46iJ
Lp+2/oIIk/hMGxzmwPMmJh6QvoJHIh49zlU/6JdS90SRH4scMLIWUmK4kJMp
LmM349bw7CnnlKsDGlDSOlAbaTT8MnQ55kKTPaOcJlpibJRUyxNta1V0zVD+
V0O6ilDolbz8FPdq8pPDSvrRctJpDXm7SnVorN5PAcozSdKUKnfcc3lksr+q
nIBvDL9VgwCZtiRIauz61S98DEYXJdDG+VYeLfjaFYEcl/FHHgnFz+3LFutn
kp8B96p74p492YJ/VJazEOn8ly/hPDTYCPssUQCt0enu5Vi+21omndoG05UL
qcQJdmAm56UPnb5lf30E/S9rx3q2XhzT2ETmYtX1C8/29xtTFEL4XXNyvmdu
D29syVYwZhigJG4b+4gfy37jUv4QVxh/ZmUZ0BceREVnZwQqJEuNweMYUNxL
L8m4/mQml0+av3HOAcHqfqTqblDQPi+4YgXJqR7Vngm/s+Vy9qDCoOlf2q6k
/BmyhviTbnLyL8yl1SVzbHVboIpnX4aUGGDdHJi7DKAMsJqsmS3SgjfWnR4e
yvDggvF2IEsyfAmKu7iQuzedDEC4NQ85MdxsPY8xMN3lkYuBec1aRSyTjCdb
d3O+uWUu3zji+AjBddFnUsf09ycaI4pBsVKnYxp3fIFFYQJXzFH8zenVB6pv
Yl3cAVfvXrAAB21/vjQ986voC0BbDMFIxRO1KODkOE4T+dev+QMQlud4tQt4
xnLGPOK9J0Bi+6MfD/uaB/eCMQwrp/JiIJwxGZ59zgsDru9qOyGIcXxzH4xd
IUbNkKopvfOyDb/FfP66/+FnfzYr5rU2lh0nRX/UhjwFWtSepmxreup/XogA
/fnQdnevoGHMQ4km1nxPRG5GEmtAYSq+lC98VZQo1qIPPn7VtLou/idPuBN6
bEXmKi/TpeeQexhlZnurNTCb1oQ1SctvEAXtqmpj9KS5SFCUk8NfeBmAS5zo
pSV/yTatIgxFgvOzSITANGzwWJyjxEFAtdP3l9m696/eHxAz9ovPXUWslTJj
t/SAosGWq2DLPHThUPj1t4O/PM1p94wLApqdsCoo1BIbkTYTnOFZsc3IqomO
qJQxFrMu9rfWfQquHcci/8rkYGERzwNuhEUHHarRle7amv36H5w9S+ENwkco
trf9mu8W57mCMRN99o7uummfHCNqXYEl4lpM7IjkC67a9WjOzggPt938I4xA
6F39AiN4c/otVIPogfX/uiB/O3fm7XZVbhBvGUYgbH5gI6j79odgCQRCQFWJ
vd0fPmIdJBOQcPIlVafX6BTSqpXX+Rm1ayZ+G7v98R9/NQjtW2HfbF5zZ/6H
fphGhUGXgFutSNv4I/aIyKKEP1uwrjb/68dHN/7a0m/tmNXfgkAdjOz6aapg
Eh8/7u33kqF29ycP27ogTSCm4+ePC0eNzx/YOMWjWCuedNJ0WlUXFxK6+rJR
jX8IbiyhcIEr/VxICTHWbpyCat9arB8L94kjKCSNp5AOLACgKwU7hpcvKABg
XrahYXq+/joNPGht6EEvAApo+48zM6PfufdeTxWjBfr/AECGBhRyICPuby+N
IWzhCR3DgcjpTWspjtYfZrCyX6ZzqQUiPq+is59H39ChIM8+WWFUXrtQj/gz
aiV4VRc6XJYdzm6bTN/BEBPTx5f8lThzGOn37PtEmDeHaeThKktFb7IgqCMn
bpRkVPAunnaWORq9BmG0xLFcPQ+hSh0NHocIX8BQOouVavkBneIv0qNCmMGz
3PKV1t1Dp4tJvp0aRIWoCNwIrsZmjiDndjBdu2Cz7bSuRTT5GGlIjvBhH/Q8
H0iZQwqtmaG5uBr8NFQSIYcUbCGHQPsKzvdKNhGFkrsNLdIA4oJImjILjwwh
Dgi+Obh48PgA+wMP45U+WzvJNoVmEsQhmoHYt3Z9/1ciuSiGs3SWENPrK68M
Mff0Rz4TFkS6vGER7FnW2IytBq7dMX0cJ1eK4XfwKdav0GLawz62litIYDMs
MYC/0b5u3n5uQ7XVgII+2CIDnCundblvbrvtkmk2KNjlLgyN2KMxDfpEirxg
mKnGJuSG1CEzwimQ2YHr8R7ZvWfHeuYe/glRqthEuHG/0wkJu/Bz330u/LVl
GMmWL0rWpIwwiCdAxLd7wenfp0//EdxknniEnsaiZFvAfoxh5rBmWBgpiYgt
VvvDmZcYgdwzPnrV/u5wHNbnfjZ23/EzI5es/MXUxKvluM+Y+Xm7icLCjVYe
W83kfBYrrec9vXSZpuBWj265qWOkfu5pBbOST08Qlg56EcZjCUDkNy9c8IBH
AI/50Aag6B+9+92iTbsOhMzf+8VfrAUynocIHTQ8OFHzbWQhTcO9bQkBpMEh
asGCUheiYFTYCORSH6cLGoVmGGGImyOhGiJ/PE2PzxZu1Zj/pkRbNIpi3QGS
DRCdWARkmZSZrJaRJmtExHyZgcCPNpBMUGYa7clGMSk/nnBBTWnTRbNfNxU1
7zxkW7bkGNMinALzsY8UE1ZZEaOhlc8KUIRb+BhBYRbjcXhwFYPrfDwxx38h
xCTWumXJUXltLYkhhx7VZY47V1bQHYeEKPHTyYxACuYrBdhXjwArqz2guMo5
p10qXjaeSA9koogDzY6o9UHgWuZUaYmT2mtOJh8kgLRFEcMZ5UXYhMmzYyr/
owD6eTiiG4NPbOVLP/ravv9rXlmcc9eGOP8RBSq03LOJrWyU5l/YdzwdIjHw
0QDVM/wOfIs2183qxfBdbTB6iYdqPSHhTcfiuS+pfuv//va32wMHSI0bDQys
h7myBCGTgL3BGiH8kLyroIHUlG+D+MYt+da6I9de/hH/Ua1Jhpk/b7+MHxIL
vzLT4LWeCT5fb7fZRjS/zRfWMv3unNlm3kVDSUtbG4bMviPL4rtrXFq4qWBc
yI2Kmduly+z5Vwab0+bTN2aXvr1z660vQY0184m7OapKFvz+6qqFv632KPrA
YjNv3nrsl2+YiZd23v6TI3PuHHjaz1dI3pgTqz1XrSxRrjf/8VOfvtGa/TYy
VgW1FEHz/uzJEdmJWIGWyNHIx9oYoNk5jo5a7wWh7yQdhsW9613e+0w4gOK8
mfz0JqwpqDVMBHIqE5RIGNZceQ6IQqXD2B2nWdRE2qkrDyZ0RFeVVuS3OFgp
zFLY9npA56ITw/Y8EJCDx5Oqx7pSQTPs06mijM3gTwwVqY4f2uqlLph0EUGi
V/goxgAQ0VsAz3x7aZz7pfsthwry93f1QxWsiJ2hat7jpyB3oeRMdr0SC3Mn
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
PMDKr1rRtm7CH9JqbnU5Q7CuANDatMryTKOZLnK4ou9W9Q2Y23UuspqSIl2U
KhSib4uxvOCj525SfCvHZhCszSkv9WpOZqgCs7dnN3fJssiQZfW83eWJMpoA
47Yvw1NEd9areZYSQy9+uD7MCJdnEfj7xO6FHzgF1QSy2eEHDglHo92eEiLZ
NzVqHQwbx5ZPHilXN8irHnPHyxoSSw1HiKThhHIddIZn03Dgk7+eWQLQS/te
rZAKw9CGySoMKZMD87h6iQJyb1+/R2ylEnJ11rAVAwofqIebTsR75soXNLHA
OCDR9JYYi6zjgVAZFyPBK9aPSwYWaUKRiF99YsYRO27Qiskjjcm/+c1vfnTd
wp8GpIXlVG2najnyhh7I8gqwEi+zlDDDkzPurqi3mr56paiCkDFlrZLtfWBB
c5JZdr5aet/ptHnhMyfNuC+U2yoVetJI47lUC1DWm26BrBdkkWBqFrJojUon
1/a3HXSS24/CXQrmw+/sCm1HNVK7CfOC0oX5cwKWLfr1Zj4uQf/LcUwkYUar
cjVfz9P6mGaDX6QsTx6fHbccPHJIWp7Psw/VAngjRhZFXre6731jN+8YKFwz
07lr12kpRpLhJ1xM7PMJgI9zJsjHPpePAWmDnO2DWISpoZ84nOIQQVFCa4Cy
ccL1BlHqhjo7tBbxPazCChRMx30TZYbviHeg1wy07W3fSILvRiH4VpTbzoI/
2Xzg/byzrHjSjNU/j6vSjAOtGd8iJksEDxTlv0P8Jk5Qj5KhGID1uGUZMwwi
hPU4hDVn4q9BiVIXGPI5g2QJmO7/8W/9LWSjLNfOPL35SpWILL+/yzw2h8Os
pnd4GtS0Ip5KE8ujsit3HhdXJJm4HEnP7T4qItJK1O3tVbqSaWtApl/q87Kk
zIm+ljV6PXQ2cGlnBe+sFJnHzbHZSNN2Twk9MM7Hzs3H1J4sSr9ztpepUGP9
jmi5vNZZn8K2GP/BD2Zh53pd1fhjprcvSxAICPeRVXJPJGjHua43QawFErK7
RSXQobs3LTsle/E5g9hAhBaxcTTsRZ0NPE5oBh8zxghHTdPhyzMQciE562Rq
B0YigXxT7PkOa0tLe1J1hYvHzgYVZT0uPsGGlwKyUEzZ29GXQkQXpOwoAAeg
1nCb5K8nEwy8IUxwOydWCoqIS6DeIGoQZSxCfzyOagpFiymiBjeCCKmgcfok
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
xYia9dEPidGwLiKDrycYfPh8ogTwZvpe0jXUKDpGzXHxghT0qbd8XDmdNIua
ZMNzDlmAPRuum9qpUUzg524txjeO030fWk4QK5qymdcHISoH6cOWSopl33pZ
req0mR5gl9sul2E4fcB4cixS7BvTUg2h9sFxnobK9lC0jqV6M2KMWy9sipH9
27NnW6JtY0qO5nlxvOUUOtwCKZbuivE+q0n8Fvt09KcQzNEN6+cmmiXaP2JV
YhDyw7YmUm2wLP8j1hm+zEGokyDtouoUR4LNYXE9qsYhW7b3FgJGOw+s87gQ
/9inX6OV7Ogan66qKW4BXkehMI4PM/bhB50a4eb7C7tmiRKc9Hd1/ObmrLm1
b7TFlTaOd0k/G88eg+vsXL0XKvRYHB4XmU0lRYAbKikUjgmd3LfTzXV0uixS
JoTeiItlWeXa8fdaOsqQHtbwQnsapjeOey+Wobwtr+eny8qxFXx1bbI7kjVv
a6k2ol9D5Cu+bEgMp6IBQkPQEPq9hh9PmoJINbxhjP1EFr0gnX//l38ZQyvR
izHiWQhavUFzLmXQZ/0mSk2CADxuDGoLvxaoWIQsUEHvjNGjeA+/dL9/2rxz
jb2jzjuslY31SoUt5mn/Qb0pr3BD0twh/i6drwcJaI+lkrbYbd/QHna3qC5d
cW/7Rgpb3jD483yNJeioM57QdSbK04RdFyqfNENQN3VvatCa/dbUI54ZSbG4
vHQiCedEcWiDy46pAzrjSvgEsITpVloDp7RbZA6kLnDOyJN+VkOhXlAIVnsG
ch5Fp1OQBdF2CtfZqObfWfdhLVEjKXZ6vmcy27HTCupEpdPitiTphQcIJe2/
+HolXaQ1W9NSlJzhU9lsFXKA+pNOfRMlTVH6L7SfoaDV6q5RumqY5ErOpcJm
2OJxcWwsfn240I/vFTqT62wps6WuvXMCYFSykSzwM3oimnFOpzfTjj48q9SW
6tCJ265ZSCuVc/OxtN0jV5qfv1u34awC/Etl7aj8rWnouskaX2amT1feHJcQ
XE+xSijpYxejKS3ipSxtUy4rqoXiPC9xWRibTrRiIMJy0kOlaws47IXzrjb/
RA6qQXPnU4+a9XU7INVW238vfzNQj//bv/N36DtumC5Fo54JFaJp1ifT5tVf
N2Nna3FMVB95LY4JOjY2ThRJZpsGiCKwwtYjwEU3U8J3HvZKlW5Qz+Opp80g
6nm89hmygXukI4Y+MMMY9Qc9Mt0z6pZD7triVZ1cVrXNTBel9yZxxXNaEHdg
cM8aXCuxS+NjjsEq4DoLhfzg/+FVw1sPYhSD1Fnu3YBpsvppD/NspEoi+PiW
SsMjIFGk1IKlQ5UVk9QbXwuy80LG248xg2XpU1lCrH/qQG2OeXP/WqP0EC4o
J1UVhr1ogilv75nYEAs8vPluinpXTzfKaHF14WyLl8N+iPVVTrS0E3wki7Bd
/XDi88wPCcPU89CSOymVWU10yQ53mNBWWTnGmhkkBYDrGmfYXXFQ1bSidYGZ
+d944HXI8LCAK6NwGAS+ixbOYwn/JSDpB5UBIpnswY4RjkSFmmpt5yoggiaT
9G2/3LKZFAO/68ky0ia160LLfuuYS2WmIEfGAbisbAVp7sy74R3ki3milF5n
2xWblwR/dLfIZhoW/kSNaCj0GOYMSxJEVsPQ4ZKkytQiJsuydc43v/KLi6Fh
l9Cy7ffF8aHx3ti8RNRJegVftkydOGq+9A9TjSUr1IcajfiM6JYSpTHQLSX8
7FcyhoL1+P29PYL7HqcaYsXC1NMhUIBRC4GAW9JW+ob3agX+uyLDdtzVxSN2
zWq86L9bX58ndWcjBke4mwRG1iMpgkcCSb1AwsGIpymV7pJ4e/geWmXhlabg
53++dSucC+PwXdbyZ6vWpWlt0NnPv4rrx+KMC8Kp9jfxsqI6u2yAGsjpSWoH
6Sg9VjKcPH5oEv2ZF/XDd++hpCKw0/Ddraka3TbunNW2gAvV8mfnOABqOf3b
NQzrtqsiM9bNd7K4hX6s3nnqmM+70GfCauXYnmWhR++wDNcWOrbdlDv9esNr
9NZmSRLDjrSErl4KtNyJ5IWBj7hr7BhJ+WQlZpC9ak2cz8gOM3R/77N/RUZV
pVKu+E4bYja4i8Qa25TuCnysS5+YNTvrhqbg8QaHhUNJrKtJVRMt9nefDlcg
L0SblXREbo+Qz4p/dGMH+uClK0ThaNfUnnrGT7CRJ31Lx3NiRMXwyHhThHXB
qL1MU6GzlaaC3HsHGgj2ZyGAb7kMzxpwjk4LUWEFIV5wbbBHkLDyKyRuGKMC
vlGerkTshwxhuED4BZr7PJJF0E1hi6AjIHRzcz5Adzh9AJeEd/rLZ58NAjVo
ixVstUpDL4e3A/ErEnX5k+ctT6jniEM/t2vMZ07m2vFTJwWcO7Lcz9VpbUQl
Wl/LpieeN9RAWNvPwG3Hs6lYmOMtl85p8xr9dA3xtKNiArq40q3HINBm51dT
o4xqQOWtW9D0vHALlMDUOXW4nThttcSRRaKrffB86BVphqzOjvAvlHatnt8k
2dMOdM115n4a0ZPe/zLD2MVvghhEqwQMqSSFMAhKyYrc6Yjado/TqZqKYQJi
NF13LDOt/reXX05SUGQlrBZfRH6VrGI46doxIhh4+xvMceHSNsX2bBq+hVKm
YZs9LxZtTgqAbDo/ubp0SGG8NUrc8FkCCESlppTq5wypjqUrHv3qr+bpvmCc
i32pBWtzHyfA0uoW/+a1rJrvfFkyevmGQHVN2OeItnCvcH5C27DePmZgLCpI
IoCANCDRaMutcco7xz0N8qU02zDLRUFSwZszu9DYRTXKzBHLj579bbvxaf3T
ddCqEI5+zkqt99dA9sYWb8bqdHZgP3E7jXHCyFdNpk3FUBWuSk4r40Iw4Sgr
K1KI9u2mxaEqxDR/lFXRy0dlIHK4LS9phe3akSn2YAZ+QDO0rLNk/4jUvzjn
NddaO1dZLOrkKOgWB1FS2aS7kuH3nbfewgBcP6KP5vGC2EH0GfDoHpXPiQlv
zYjq59DPb37zm1kZx/fkuUJNRTcHA0Cjl8E063P/GfjLcJiDXyjnF6/6O1/7
WhbMUS2Pev/1XR/v+JgZ47DadfsrWjeQh1tszJIolFq9FXHJMTSrkQr6REUN
o/NywsOY6tkTuhy+alwvinCVDIJf5uqduahu3iH3AteeMDMRnWD5BBJQQieF
Sa8YaII4JQLiVuLv/kePSbGwr/hT8PvsvsSJMFIFqUnr99yNyQf+JYbyEllY
1UywTqi6FYRR7GeocGcZUoa4puwXl2TjWZkOYhFvyu50Sv936mQ835ppklCX
S/S5/SjrsUCSJ+nxUS7Us2eWC9CYus7CYhPpamZa4opCi/K1ua5vsv96Ym5x
wXMPYwh/zWNqhw7GgLaYYiQRQHq8qRJRR3jWaAShEKWJZ4xPFFsURBHXRdH1
ItTYF+KYoDdh2Xf+oLnZk3qu+CQdWvyxkrPAIgnwlvFXcxM6ZlWVJV7GG7kG
DqOM2RXV4pRfMGQgAodofH5egkQYYy16AHx/96tfTRJclOPZY0KSOw/7q5Hl
Bs2kutLiETVE4V4EK2GnIWoYsUkTNYS8/6GjhpXEvO58JB9Jyo9EFQR8lrlT
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
873Hrrmb7ZnqBmYNSmdKU6hT+fqSpc1vVVh+r8litzfy9AxOw5vKDbPGIh06
mlPFrzNtI3jCxglLVud26dsVnjt2mxMCS/znRuaya/CsaHhwEkbjNt7rHcS7
d9cNySX+jqrCGJ/ZqXShhvNHxo5pSNmJwcKYpc1FrpyP6z644dsl7FEH+Wxe
YKtIcXlVDvYS7AEbmJMw6quTHb5ytVw7iSOq9RtnGZUJtiJyBtGbL740Flq8
iN7s7F8oO/Ug1SSW975+V2lwfaDYiy8Knj5Wd1x8pps8rFuvKvIqaf2jzyzc
s8+Krz/s9m4c6j0vuVxHoSz671iK0iySlTKQLUWMR2+EPF3x0aOozQnigbTr
D8sLqZY4TjQ6eSlX2e4Kxj90SMMV1gogw/tU+AFroyKuhYzVKcD96Fi6Sa1c
yvid16ngpnKDQJwOWUpILRjGQX/ayWz5gN262SpjbIcwtb+lT1UqtRzUkhXa
a4jwAm1I/u4BkIdNMfKVtEmkL/D7H10xyZMmnbmTkTr5dRgeJ48aJVTj1CyK
HkR3bffC1TJ58LpaAyNxB7TDscJGQ7BmCrxg1poU1sT8ukJqvbJ6JKcWwIlW
yB/P3bz7nbuO/EC/827uhlV4pcqoIGKn85ZyHqFofxxTGxF0MgBS5lN2VorQ
qcjIjqGTqS0YVwRdSaEzR6K/cu8Ah5bFf4mgGL9cPbPkB/uAYaNsM5VSlK1n
iqK5/aRgqE+ZWbdOiqPffJW7orauUoFSezxRsloe1r5WEVamSTbWFD17Ee4r
yantFpY6zuqzDMnGLed29lXYV+P55BcvL58f8V33re/mR+9Js1XBoYdgF1k/
lN0fMWe3kJ/XF41zHtEI/Eo+UGaUq1XmuvS0/W5Cjf7CkfM0Ahz2dyYleSjf
zXE5VjK7k3723pQ72VewKuGdtDuiy9O1IBExpuD4fQpf86Wl2IyJtOCwYBDg
E7pGgubfflVAI8THY4I25cCvIBQXBCgIVGU+sqN1eoUoQYpyeCywWmcXOBay
a9wJ+wh10iIH3aDQqQYWBC5gFbBjalaqZehnba3QBBRm4fM4r9L+SE0A1v5U
E8bmdm2Hzl422rStylajsHKt+2o74ndUnJ4wKm1zyK46Ar1SMrOLZlbuHZPE
Bt0rsNsFEPUMvbP+srS6ulAh25el983TLgcMrQgPYoL0L8zE09CuVrIKuYKR
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
h8D18IReImL5ktWXUoEyRuyC7WrUgFCOIvHaq6rIRcRjBuUpvFHpBDIAA0DA
O06mojeNm0/n3B8M+inkXAvZ/zcnCC6ukmFLttU5MGvTrxZPrp5v2v4KnzHk
X7K5GnVQnsQmdfAWnks2TUBQvR9NGBVTyAoMM9MKan6AVvABanrApiqPgcE+
lo99soV1aOES9XkvWr370P6l8aErePE9tKGK6vE55aZkhRlH3wW2iAhXBjmV
0+DA7dtXlNUF/qcoNzCz92H0YQXreJ3Ah1vZiwX23zyOxzFj/wGcZRFeYmgf
UeajKmMLnz+kPG60/ZBuZWSzPbMpbRXUTVM4Tm6S41m1x18zAh43P0CtD9CP
K170i2BlEZJCELYhcvUtJYDa0LtIhCbO5I88/bQNzt+BrvsizmUKMcrH0jtb
3P4sdOvp69XzIDg4jbus7ny8y8y+fZBhuMub0NG2d3LJpDpWooYI5wrscruO
3pEh40AbkH6W2sbaxZy+NJ5VjvHNgF+juXL5zWNtgpNkQ/cwjNIYi1gFdEU7
BheODWeXL0LrCgMHSPk2GKjDGI+4AmmXSkKGxJBOQmYTLTMndc7cmOdyfjMl
udi4eQ+9JcW3vOT3EpWb382JyrkynjwfMji0Cueoatwky30dpgnafhRIo8IT
K5JGEpOS1iXOg729/E9bkQyU+ASyl5MFcEjXO+acr9woVPGboiiabDsLznGD
NiqCH2kjp0j4zS98IdmaHGMQedN7pvhiyWQ8QJJJ7YmPIphwQsOiBNEVGIQ4
nM7taKFV8mj54chaFzFraleM8Lk0rOHg0D31+r00jDrVU4/hpfOSKr63U2yW
iXpiaNEg5EXgGl8oVw6fXgTAOnLuWxmYVCqGYc4k1jeKQZtQb2hza6t6I6/R
rqi3wqSSqS1kQ62UQhNfdx0wNu5ODl6XbG9lHlq4UriX2UG5z31xG+UO8XOD
xnN1ufgqNa1yYClelwtWOj2Xe8Y6Dbui/bDEMVnUzqzN0s8eHxakKC/klStz
9+y2KBlbx5UpWl34ivGzvnbH3p2OYPvs5634ag4PzwVMLKf2Lmf3bF5m2eWD
yGP7iiTou0rqRjybs/7XiKR2fI2swX9jezs5hIzTS9lzcgDa4tKqGuSRkSqB
Yg9M8UNg6GE6syK9m1QYLCqHch0QI0lCRyGayzAaDogH6XfIS8r28tR90HNG
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
naJvdHeYYjUqhvza9lTTooyQx4S4jgx/xeathc9exk3uo8Okv0IKQGai1UaN
wycjhh1abHxKivD1/MdFNZfDok/bMOI1BjUdK0YhG+r8eRxLtq48u3C4pcpk
kGxe28uU4TaV1EGLq/X/Mq0k/+685Ia/+41vYO4aywf/0898xuSkvE1wzQ6u
/m/39zEyauz3B1/96nIdrm7CfsW2JuyX+g6HYwSlhMr3on4E5WNKBOpZB/oC
gU4UmMxvfOc7VeAUAWj6FMDDdxKPldr0gNzN0Pgx/PCHUNgZhE4hDUWEHY1s
S1oL5TOhV/qwnZdKsaUi8SS4akYd8us4tjgV3VAmZyyfJWtETXwrdQiSv6pR
PzXRbVO66fgbiw9a2HDehoYj1nFTfgwaAoSeiyGC7PH6cYFvLhK8+a5UHBvN
uKzd6uqf/OFqPuNyCBm5YoThGM2PF2c1DHjS6jura2KsvjFpsSm52cdYXe/t
LZqfr0f4LBvtRuQqutvikzqj0sBrez4qBVtlP3/f6MLicCwT36BzrApxSz6o
5LJrQM5bPuHIjoUZvYPlIzbm2/YAC6w8i7C+au/wGGh7dj9CJ+1lvV6gfAqs
XMCnV7DEifU6Vl3r5/7977e2urDSEitHSC3XQhsqooTgdRSWeEtyAq+aKSDt
gnkjnr8RuRdSl5FT2fO5Ed0I6ZtE4siU3TM2L8NYFm0L3k01HolfoQ/h/EfE
PbN3ZRWnBmA+YTWnyjrVWuIvBSLpuzUc4XVf5pQUj3haVJhSE3waOVzP1VZ/
W4+AXl4uuwEL3vLQwsVBzvXR6Gz4tU/XcLjnraWwZwajNI3Pe+ONs+HWov55
5mJAT6+ROT/Xzfqw6ez+SsDnUqxU7V4bpeiNL0pBEiJrRNoQsFe64KqhGWmK
FfYn7L8NtpbIMiLzkYX98euve1t5q59jka5y0BAkkCo7+HeLRQCN3rP7rQPF
6ZY6QJQ+AbuKc0E19UpgsTp6+lNhcE2jfW8ogWprIZH3MtZ1wxpa722O1/ve
imOlNj/T8RMPhrAvPsl7kRxYuajCZFK5gOIoZbyQF63f9sMi13E6EaSiQCgs
sEuQmw5dGOSmq1yYJk55rzdMtZk2N9XP28ieomeu9d7mePFZd7DXUThM26F6
1is6lYOLLv6T2CwFsHWF0iMkY+NyxN8KoJvYJhyExROikms8mr24pL2Ix4hf
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
fnKl3XP/H+M4m/c=\
\>"]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.146846071`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.146846071`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.293692142`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.293692142`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.440538213`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.440538213`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.587384283`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.587384283`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.734230354`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.734230354`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.881076425`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.881076425`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0279225`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0279225`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.17476857`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.17476857`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.32161464`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.32161464`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.46846071`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.46846071`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.61530678`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.61530678`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.76215285`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.76215285`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.90899892`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.90899892`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.05584499`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.05584499`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.20269106`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.20269106`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.34953713`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.34953713`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.4963832`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.4963832`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.64322928`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.64322928`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.77897196`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.77897196`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.91471465`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2.91471465`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.0373816`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.0373816`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.16004855`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.16004855`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.27037741`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.27037741`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.38070627`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.38070627`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.47951758`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.47951758`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.5783289`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.5783289`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.66648895`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.66648895`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.754649`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.754649`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.83303919`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.83303919`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.91142938`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.91142938`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.980922`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.980922`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.05041461`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.05041461`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.1118545`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.1118545`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.17329439`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.17329439`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.22748582`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.22748582`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.28167725`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.28167725`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.3293752`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.3293752`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.37707315`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.37707315`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.41897809`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.41897809`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.46088304`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.46088304`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.49763864`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.49763864`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.53439425`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.53439425`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.56658716`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.56658716`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.59878006`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.59878006`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.62694123`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.62694123`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.6551024`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.6551024`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.6797096`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.6797096`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.7043168`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.7043168`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.72579776`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.72579776`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.74727873`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.74727873`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.76601475`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.76601475`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.78475078`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.78475078`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.80108051`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.80108051`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.81741024`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.81741024`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.83163347`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.83163347`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.84585671`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.84585671`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.85823815`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.85823815`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.87061959`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.87061959`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.88139237`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.88139237`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.89216515`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.89216515`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.9015342`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9015342`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.91090324`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.91090324`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.91904837`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.91904837`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.9271935`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.9271935`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.93427224`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.93427224`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.94135097`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.94135097`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.94750114`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.94750114`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.95365132`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.95365132`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.95899337`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.95899337`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.96433542`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.96433542`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.96897452`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.96897452`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.97361361`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.97361361`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.97764146`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.97764146`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.98166931`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.98166931`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.98516587`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.98516587`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.98866244`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.98866244`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.99169734`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.99169734`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.99473225`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.99473225`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.99736612`", ",", "4.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.99736612`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "4.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJx90G0sFAAcBvDjyFvqSDOudV7LdWvHwtk1eSk7STd33GprXUZaO+pyrA8p
olFcJVO72im6cV523qaLw0VZnWJ1Sk5cSKLEwjQXTtm0tj48/tuz/37fnj2u
cUJuApFAIEStxvRv/j9SME2/z2Wg61nQ+n4LHRLB99b46KG7E5WUga5RaJ3b
83Jt+gT06IdeusZnCtqPav6RL5qBzovsXO07Bz0iFJ/kef6E9i9kV2jTF6Cv
P7abOtT/C3qt7zI0wyhJCRWvQLNuVQ/yRYRg5FnX/Evbik2gixrOre5tCs0K
4z6VGIjQa3uYQ9dJy+S8vRughbGOkzyOBbThRaLqZqQldNbu9msalhW0gqF4
2EK1hu4Ludtca2MDbVdBibLtw2aWr4wLSjZCq6lSL0OMLXSQgiHIttoE/bpO
kEKqwj6uvH9RGrEZmiOgy6b7sWkdvp+L95Cgw0vPLOeKsBOy5VtT67Fl2nnr
ua/Yw+T9hHMudtD01MstLA52Rrf6PCULO5taKbGsxjaJDlbN6rDznLVLt43r
uMYmKMDdHjrarSqJfgC77GXRvR0J2O2p6k/LmdiDlCHquwfYX8jkLvMm7B+O
R5MCerCddLuuMiawm+MqZf5G7EfEGtop0hZoz2S+8o479qT8t4jti12rL/G2
CMPWyoQqSTT2ab/JUK847IHGg0vvz2JHMisbrqRhe8fWNYlzsB1yGtWFBdgz
42adNCl2TJq8p6MUm8O3NyNXY7ND0v1FSmxucr2+vhV7qDcga7YDmzTmoQ58
ha1qazXkarH5U6XHTPuwiU43nlwYxFYwwweZI9jD+UcWFsewi8s1Oudv2Cfa
GE3MaexAj3jumxnsAh5zOn4eezv3e2bGArYbOdxRuojN28kWHzZir32Hf/4D
qAphew==
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.6932717181367044`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "637", ",", "638", ",", "641", ",", "643", ",", "652", ",", "658", ",", 
     "662", ",", "675", ",", "683", ",", "692", ",", "704", ",", "717", ",", 
     "730", ",", "741", ",", "756", ",", "770", ",", "784", ",", "798", ",", 
     "815", ",", "832", ",", "846", ",", "864", ",", "881", ",", "897", ",", 
     "913", ",", "928", ",", "944", ",", "958", ",", "974", ",", "988", ",", 
     "1000", ",", "1017", ",", "1028", ",", "1046", ",", "1061", ",", "1074", 
     ",", "1087", ",", "1100", ",", "1116", ",", "1130", ",", "1144", ",", 
     "1159", ",", "1172", ",", "1183", ",", "1199", ",", "1212", ",", "1222", 
     ",", "1233", ",", "1247", ",", "1260", ",", "1274", ",", "1285", ",", 
     "1300", ",", "1311", ",", "1322", ",", "1333", ",", "1345", ",", "1353", 
     ",", "1365", ",", "1377", ",", "1390", ",", "1402", ",", "1413", ",", 
     "1426", ",", "1437", ",", "1453", ",", "1465", ",", "1477", ",", "1487", 
     ",", "1498", ",", "1508", ",", "1520", ",", "1535", ",", "1550", ",", 
     "1565", ",", "1579", ",", "1591", ",", "1604", ",", "1616", ",", "1625", 
     ",", "1634"}], "}"}]}],
  SequenceForm["ids = ", CompressedData["
1:eJwNwzEoBAAUANDv3N0ow2W70w2WMyh1GVEWJaEM6gZuNJxsUtSly2JxySZX
N+pisKhLFrYj63VlcXWDwXALC+/Vy5f3NiojEbHuUSLi2Konnln30qY33vtk
x659hyZGI8bNOeOCq267b9VzG9756Ks9B/6YTEZMOOWs865YctcDT73w2lvb
vvjuh1/+mkpFZJy0YNFFl910x4qH1qx7ZcsHn32z66ff/jmWjsg67ZxLrrll
2X9VGCxP
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.693271718140705*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "4.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99731626`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99731626`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99463252`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99463252`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99142825`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.99142825`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98822398`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98822398`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98439905`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98439905`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98057412`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.98057412`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9760095`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9760095`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97144488`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.97144488`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.96599923`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.96599923`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.96055357`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.96055357`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.95405921`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.95405921`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.94756485`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.94756485`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9398232`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.9398232`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.93208154`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.93208154`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.92285776`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.92285776`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.91363398`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.91363398`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.90265095`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.90265095`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.89166792`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.89166792`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.87859936`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.87859936`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.86553081`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.86553081`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.84999371`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.84999371`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.83445662`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.83445662`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.81600285`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.81600285`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.79754909`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.79754909`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.77565652`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.77565652`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.75376396`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.75376396`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.72782717`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.72782717`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.70189039`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.70189039`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.6712116`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.6712116`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.64053281`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.64053281`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.60431348`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.60431348`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.56809414`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.56809414`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.52542837`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.52542837`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.48276259`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.48276259`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.43263357`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.43263357`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.38250454`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.38250454`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.32378583`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.32378583`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.26506711`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.26506711`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.19653095`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.19653095`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.12799479`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.12799479`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.04833019`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "3.04833019`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.9686656`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.9686656`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.87650916`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.87650916`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.78435273`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.78435273`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.67833523`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.67833523`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.57231772`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.57231772`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.45112908`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.45112908`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.32994043`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.32994043`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.19241434`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.19241434`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.05488825`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "2.05488825`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.90811052`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.90811052`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.76133279`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.76133279`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.61455505`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.61455505`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.46777732`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.46777732`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.32099959`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.32099959`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.17422186`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.17422186`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.02744412`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "1.02744412`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.880666393`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.880666393`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.733888661`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.733888661`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.587110928`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.587110928`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.440333196`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.440333196`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.293555464`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.293555464`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.146777732`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.146777732`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJyFzm1IkwEUBeDp5jvdpptmRISpI6LCZuRXkOgS1MyvNCqymmy0YrNQabiQ
io2MxRbV1mjCljjT/SjLDFZaQWsQNLVlW8Nos1rT1spyCMMcthrMfh46cLg8
cLncbEFro5BMIpG40cavNJZ0bmyyuP+stVxYkIWZ0Jvl1Nm4ELavf9t8+0/s
npeHlrx+7FzzvJ7xCdtivFhS9A575F536gc79v0nd2a6XmDXnvvy6uhj7OUB
m7lwCLuSoxoPGLE1D2u8Bi329q29hLUL20czbPFLsOWdk6VkAXbWN8r+zHrs
k71DTOMO7NEDTWNsNrZ45vvaZio2je4S6+dSoIfpGpltArtiwKRbHMSeUqpl
OQrsg0lvxXw+9oY+xwlVPvZH56bjZiq2sJGdrHMkQ78XnTafuYmdqg7l9vOw
d49Ib7/OxC5OqarrczGgd41bgxIVdtY+xtiqfGxWWcT4wEOHDoocNxI7sL2/
6pQ8JraT1UFk6GjQU1fL5e712IFC3ZvzmiTo8PTXbDaB/XuwOhgWJEL/SCcs
zmdUaOFzongNGXuCaB5tqiCgPd3HEnaeSoCOqNP2rtNSoDP+bLwW0JOh650+
+6Nb8dBW02UFSxkHXdBZwBW1kaAPuy/N9igipcg1VtOeFs4yNF+6+m6Rawm6
gZeXRjm7CF1W3iCdZIeg83JaPQbbAnSld7pE1BaEvuK9XtXCmYMetj+N/uOH
llQfcRtsn6E57bToPQ90bN/xH1uhSSv5C55Q43o=
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.6932717181527057`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1634", ",", "1640", ",", "1645", ",", "1656", ",", "1662", ",", "1667", 
     ",", "1676", ",", "1682", ",", "1689", ",", "1699", ",", "1710", ",", 
     "1718", ",", "1727", ",", "1737", ",", "1747", ",", "1759", ",", "1777", 
     ",", "1792", ",", "1808", ",", "1826", ",", "1841", ",", "1854", ",", 
     "1868", ",", "1881", ",", "1898", ",", "1908", ",", "1922", ",", "1935", 
     ",", "1947", ",", "1962", ",", "1979", ",", "1994", ",", "2013", ",", 
     "2031", ",", "2044", ",", "2059", ",", "2077", ",", "2095", ",", "2113", 
     ",", "2134", ",", "2156", ",", "2176", ",", "2194", ",", "2215", ",", 
     "2235", ",", "2261", ",", "2285", ",", "2314", ",", "2347", ",", "2383", 
     ",", "2422", ",", "2461", ",", "2495", ",", "2538", ",", "2572", ",", 
     "2599", ",", "2630", ",", "2660", ",", "2690", ",", "2716", ",", "2741", 
     ",", "2766", ",", "2791", ",", "2816", ",", "2843"}], "}"}]}],
  SequenceForm[
  "ids = ", {1634, 1640, 1645, 1656, 1662, 1667, 1676, 1682, 1689, 1699, 1710,
    1718, 1727, 1737, 1747, 1759, 1777, 1792, 1808, 1826, 1841, 1854, 1868, 
   1881, 1898, 1908, 1922, 1935, 1947, 1962, 1979, 1994, 2013, 2031, 2044, 
   2059, 2077, 2095, 2113, 2134, 2156, 2176, 2194, 2215, 2235, 2261, 2285, 
   2314, 2347, 2383, 2422, 2461, 2495, 2538, 2572, 2599, 2630, 2660, 2690, 
   2716, 2741, 2766, 2791, 2816, 2843}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.693271718156706*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"els = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.15`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.15`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.3`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.45`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.45`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.6`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.75`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.75`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5.9`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.05`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.05`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.2`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.35`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.35`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.5`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.65`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.65`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.8`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.95`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6.95`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.1`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.25`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.25`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.4`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.55`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.55`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.7`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.85`", ",", "0.`"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7.85`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.`", ",", "0.`"}], "}"}]}], "}"}]}], "}"}]}],
  SequenceForm["els = ", CompressedData["
1:eJx1zksNg2AUBeE/YIFXoRTQgAE0VAIJbNHTaiqeeExhNye5yf12043Le4pD
CMl+0f9YMlzf93PM3Z9L1evvmHs+l6lZrqbHTU+hpsdNz0PNSjU9bnoqNT1u
ep5qVqvpcdPzUtPjpqdRs/b2Bm6Rb3U=
   "]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.6932717181677065`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"ids = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2843", ",", "2857", ",", "2875", ",", "2890", ",", "2906", ",", "2919", 
     ",", "2929", ",", "2943", ",", "2956", ",", "2968", ",", "2979", ",", 
     "2989", ",", "2998", ",", "3006", ",", "3013", ",", "3019", ",", "3024", 
     ",", "3028", ",", "3031", ",", "3033", ",", "3035"}], "}"}]}],
  SequenceForm[
  "ids = ", {2843, 2857, 2875, 2890, 2906, 2919, 2929, 2943, 2956, 2968, 2979,
    2989, 2998, 3006, 3013, 3019, 3024, 3028, 3031, 3033, 3035}],
  Editable->False]], "Print",
 CellChangeTimes->{3.6932707343674364`*^9, 3.693271018487687*^9, 
  3.693271359386185*^9, 3.693271552562234*^9, 3.6932717181727066`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1: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
/wcVH7dF
     "], PolygonBox[CompressedData["
1:eJxNmntwVdUVxu9J7s2956Yq8hAoQtQAgqK8RCY8RLChAawBQaWg4SUCDUQy
E2LaahmRlCCEsYrykBRiEA3MkELEYEFEQIVBrOiARhGwBk2LBG3FihTa9bl+
jvyxON/57X3OuWefvde3NnD15AfvLEiJRCIH7Y+oHQOLmEVokWbR2fgjFo9a
XJ/ibc0sWtHnUOB91PZR4G3X6Dr6LA68j9qeCrytn8VA+owIvI/acgNv+7XF
ePo0C7yP2loE3vawxVz6fEAftX1M2zqL9fRZR5+PYV8kI5F26ZFIf4t0iy1J
Z9If2nFe0pl0lcVQmHShxc9g0v0sXgudSUcsikNn0lvteH3oTLrQ4lTCmXQP
i20JZ9Lf2vHJhDPpPRYzYdLLLQbDpGdbtIdJ/9Liv3Fn0p0tPok7k07TvePO
pBvs+GzcmfQOi3kw6dUWv4FJL7C4HSY926InTHqMRTOYdH+Lr9OcSbezeD/N
mfR3dnwtzZn0hxYbYdK7LVbApDdbLIZJr7H4A0y63GIWTPoRi5EWky1GWPRD
z6JtmkVf+qgt06I9TDph8b+YM+km0w0xZ9KHLf4Gk95l8QpMeoNFBUx6iUUp
TLrIogAmfZ/FXTDpbIvBMOnuFtfBpNtZtIRJX7AF/H3UmXSDxTGY9D6LN2HS
myxqYNLLLJbCpH9rUQKTHmFxL0w6y2IQTLqbRSeY9KUWUZj0l6mRSGOqM+n9
Fu/ApKst/gKTftziTzDpWRaFMOlsiztg0hkW3WHS58hbiy36kqOa0Udtn9D2
jMUQ+nxDH7Vtp22DRR59PqKP2lbQttPiIfrspM8KWHPyqFLCFRYdI86ku1rc
ApO+1SIPJj3JohQm/UeLzTDpl5TPYNInLDICZ9IdTE8MnEmPt1gLk66y+Bom
fdoiO8WZ9FDTq1KcSa+2+BQm/ZnFz1OdSV9telyqM+kJFh8rr1ocsPjA4i0b
iD0W4yzyQm87aLGLPm+H3kdt00Jve9Oilj6HQu+jtjmht9VZrKHPZ6H3Udu8
0NvWWiykz9eh91Hb0tDbyi0K6BMkvY/aqkNvK7bIpU/LpPdR287Q2+616Emf
Lknvo7bjobcNsLiUPrckvY/avg+97WqLxqT3uSfpfdTWKultF+y4P+l9Zie9
j9p6Jb3t7xbr6LOIPmobSdtuizL6PE8fteXT9jxafeSL4yxuwB//zDfVt3zB
4l2+o77V6+n+Hc+al5xP+DfTtYUWd3CPf6T6PXTtaYs30v0eunZzul+71GIl
99C1iy1mcY87o34PXTvO9Mvpfg9duzrdr21n0ZF76NoqizLuIf0yfcXORP2e
ulcQ82tvNS+6K+73kD5Dm9hkfGIUHjIN75hvMRMtr1kOK8eLNsHW4FV7YZvx
siOw3XjdN7AP8cIWcWff4ZW9487a4aV3wvrjtYWwMXjxYthsvLoKtgAv3wpb
jdfXw3ZQC5yDNVArZCacpVFXDIV1ptbIg/2SWmQRbDa1yi7YcmqZM7A91Dpd
Q2ffUgvlh84+pDbTXPpv0ued8kANcyikzswgp+4iD6yiTxW13A/XJr2v6s7u
XDONXKO5lxr6vHqda1cybzaj5zOHVqOnp/tvVS23id98A/M2k987i2vUN4e2
WWj1uR7fOXFRjayjzlcGnsf0G/XbWpK35qA78GzVlv/hN+RyD117D3VxLroN
NXIL9GfUxGLSW6iZ16PLqLHnoqdSk49HD2UsB6I1plupfXsn/TdFqI2nw/pR
O1fACqmtD8DOs46r+B598d1/MyZD8NkQlofPdoE9hPeOgq0kN/TknksZQ41d
39DbtM5/F/c+0lr7HWPOpJUrZkSdSSsXnU91dprcVgN7gVyZD5uAF14Hk5ZX
fpni7DO8dD1sNV57N0xaXnwucHYar94Iq8LLp8LG4/WdYdKqBU5FnJ2gVtgK
e4laohz2R2qN6bBJ1CI5sK6sM62dXrR1RatPLT5byhpcg6/OgC3ER4fBCvDN
TrAV1FYlfMPt1GkvwqRVu70Dk1atdwaWQS14DSybWvFXsFnUkg/AHqfWXAir
phbdBJNWrXoMJq1aNow6u5RaNwtWTe2guTWcGqEaPTX0d1UdcD7p79yT2qA+
6exSaoHapLNGfH0JbD8+XgBbh2+PgJXh5V1h+Xh9EjaS2qAxdNaLWuL10Fkr
ao+q0Nlx3kG/fS41y3G0+vTDFwdadGPf1A99BfumTHTAHiqB/px9k5j0AfZN
h9F17Jt2oVexb9qAnse+aQl6NvumIvTd7JvuQ/dm35SNbs++qTv6MvZN7dDf
sG8Sk36ffVMD+hX2TfvQFeybNqHns29ahi5k3/Rb9Nio1xXTqCXGMJZiWYxp
Fte0umjOhZx/kOptuk8PWCHPmgmfz295HFbBb90Ae4V32Qt7n3f9FHYZYxNl
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
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
/D++PWwg
     "], PolygonBox[CompressedData["
1:eJxNmntwVdUVxu9J7s2956Yq8hAoQtQAgqK8RCY8RLChAawBQaWg4SUCDUQy
E2LaahmRlCCEsYrykBRiEA3MkELEYEFEQIVBrOiARhGwBk2LBG3FihTa9bl+
jvyxON/57X3OuWefvde3NnD15AfvLEiJRCIH7Y+oHQOLmEVokWbR2fgjFo9a
XJ/ibc0sWtHnUOB91PZR4G3X6Dr6LA68j9qeCrytn8VA+owIvI/acgNv+7XF
ePo0C7yP2loE3vawxVz6fEAftX1M2zqL9fRZR5+PYV8kI5F26ZFIf4t0iy1J
Z9If2nFe0pl0lcVQmHShxc9g0v0sXgudSUcsikNn0lvteH3oTLrQ4lTCmXQP
i20JZ9Lf2vHJhDPpPRYzYdLLLQbDpGdbtIdJ/9Liv3Fn0p0tPok7k07TvePO
pBvs+GzcmfQOi3kw6dUWv4FJL7C4HSY926InTHqMRTOYdH+Lr9OcSbezeD/N
mfR3dnwtzZn0hxYbYdK7LVbApDdbLIZJr7H4A0y63GIWTPoRi5EWky1GWPRD
z6JtmkVf+qgt06I9TDph8b+YM+km0w0xZ9KHLf4Gk95l8QpMeoNFBUx6iUUp
TLrIogAmfZ/FXTDpbIvBMOnuFtfBpNtZtIRJX7AF/H3UmXSDxTGY9D6LN2HS
myxqYNLLLJbCpH9rUQKTHmFxL0w6y2IQTLqbRSeY9KUWUZj0l6mRSGOqM+n9
Fu/ApKst/gKTftziTzDpWRaFMOlsiztg0hkW3WHS58hbiy36kqOa0Udtn9D2
jMUQ+nxDH7Vtp22DRR59PqKP2lbQttPiIfrspM8KWHPyqFLCFRYdI86ku1rc
ApO+1SIPJj3JohQm/UeLzTDpl5TPYNInLDICZ9IdTE8MnEmPt1gLk66y+Bom
fdoiO8WZ9FDTq1KcSa+2+BQm/ZnFz1OdSV9telyqM+kJFh8rr1ocsPjA4i0b
iD0W4yzyQm87aLGLPm+H3kdt00Jve9Oilj6HQu+jtjmht9VZrKHPZ6H3Udu8
0NvWWiykz9eh91Hb0tDbyi0K6BMkvY/aqkNvK7bIpU/LpPdR287Q2+616Emf
Lknvo7bjobcNsLiUPrckvY/avg+97WqLxqT3uSfpfdTWKultF+y4P+l9Zie9
j9p6Jb3t7xbr6LOIPmobSdtuizL6PE8fteXT9jxafeSL4yxuwB//zDfVt3zB
4l2+o77V6+n+Hc+al5xP+DfTtYUWd3CPf6T6PXTtaYs30v0eunZzul+71GIl
99C1iy1mcY87o34PXTvO9Mvpfg9duzrdr21n0ZF76NoqizLuIf0yfcXORP2e
ulcQ82tvNS+6K+73kD5Dm9hkfGIUHjIN75hvMRMtr1kOK8eLNsHW4FV7YZvx
siOw3XjdN7AP8cIWcWff4ZW9487a4aV3wvrjtYWwMXjxYthsvLoKtgAv3wpb
jdfXw3ZQC5yDNVArZCacpVFXDIV1ptbIg/2SWmQRbDa1yi7YcmqZM7A91Dpd
Q2ffUgvlh84+pDbTXPpv0ued8kANcyikzswgp+4iD6yiTxW13A/XJr2v6s7u
XDONXKO5lxr6vHqda1cybzaj5zOHVqOnp/tvVS23id98A/M2k987i2vUN4e2
WWj1uR7fOXFRjayjzlcGnsf0G/XbWpK35qA78GzVlv/hN+RyD117D3VxLroN
NXIL9GfUxGLSW6iZ16PLqLHnoqdSk49HD2UsB6I1plupfXsn/TdFqI2nw/pR
O1fACqmtD8DOs46r+B598d1/MyZD8NkQlofPdoE9hPeOgq0kN/TknksZQ41d
39DbtM5/F/c+0lr7HWPOpJUrZkSdSSsXnU91dprcVgN7gVyZD5uAF14Hk5ZX
fpni7DO8dD1sNV57N0xaXnwucHYar94Iq8LLp8LG4/WdYdKqBU5FnJ2gVtgK
e4laohz2R2qN6bBJ1CI5sK6sM62dXrR1RatPLT5byhpcg6/OgC3ER4fBCvDN
TrAV1FYlfMPt1GkvwqRVu70Dk1atdwaWQS14DSybWvFXsFnUkg/AHqfWXAir
phbdBJNWrXoMJq1aNow6u5RaNwtWTe2guTWcGqEaPTX0d1UdcD7p79yT2qA+
6exSaoHapLNGfH0JbD8+XgBbh2+PgJXh5V1h+Xh9EjaS2qAxdNaLWuL10Fkr
ao+q0Nlx3kG/fS41y3G0+vTDFwdadGPf1A99BfumTHTAHiqB/px9k5j0AfZN
h9F17Jt2oVexb9qAnse+aQl6NvumIvTd7JvuQ/dm35SNbs++qTv6MvZN7dDf
sG8Sk36ffVMD+hX2TfvQFeybNqHns29ahi5k3/Rb9Nio1xXTqCXGMJZiWYxp
Fte0umjOhZx/kOptuk8PWCHPmgmfz295HFbBb90Ae4V32Qt7n3f9FHYZYxNl
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
      "]]]}},
  ImageSize->{1000}]], "Output",
 CellChangeTimes->{3.693269104687224*^9, 3.693269183174713*^9, 
  3.6932695245362377`*^9, 3.6932695591172156`*^9, 3.6932696395768175`*^9, 
  3.6932697976478586`*^9, 3.693270431508114*^9, 3.6932704912885327`*^9, 
  3.6932705325748944`*^9, 3.693270657349031*^9, 3.693270940717239*^9, 
  3.693271281985758*^9, 3.6932714748197875`*^9, 3.6932717205328417`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ComputeSol", "[", 
      RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol"}], "]"}], "//",
      "Simplify"}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stress", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ComputeStress", "[", 
       RowBox[{
        RowBox[{"(", "dsols", ")"}], ",", "young", ",", "nu"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], "//", "Chop"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.693235428018648*^9, 3.693235434088995*^9}, {
   3.693236455268403*^9, 3.6932364571055083`*^9}, {3.693236876198479*^9, 
   3.693236924255228*^9}, 3.693237040093854*^9, {3.6932437635145874`*^9, 
   3.6932437665367603`*^9}, {3.693250101950153*^9, 3.6932501033802347`*^9}, {
   3.6932581207461433`*^9, 3.693258124105335*^9}, {3.693265457865638*^9, 
   3.693265459112709*^9}, {3.6932655161849732`*^9, 3.693265518560109*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "Sol"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sollists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refine", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xi", ",", "eta"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xi", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"eta", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sol", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"sols", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sollist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"sollists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sollists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sol", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"sols", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sollist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"sollists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"lp", ",", "lpd"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stresslists", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "stress", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"xx", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"yy", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"X", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Stress", "[", 
       RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"stress", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xi", "\[Rule]", "xii"}], ",", 
         RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"stresslist", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lp", "=", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Contours", "\[Rule]", "15"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", "1000", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpd", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"lp", ",", "lpd"}], "]"}]}], "Input",
 CellChangeTimes->{{3.693147768298156*^9, 3.6931477886013165`*^9}, {
   3.6931478309917417`*^9, 3.6931478405672894`*^9}, {3.693147914065493*^9, 
   3.693147930688444*^9}, {3.693148177536563*^9, 3.693148187558136*^9}, {
   3.693148304158805*^9, 3.693148327461138*^9}, {3.6931484619338293`*^9, 
   3.693148476868684*^9}, {3.6932117347968535`*^9, 3.6932117391471024`*^9}, {
   3.6932300380513597`*^9, 3.6932300605376453`*^9}, {3.6932301488906994`*^9, 
   3.6932301499847617`*^9}, {3.69323080034696*^9, 3.6932308101225195`*^9}, {
   3.693235372429468*^9, 3.693235372732486*^9}, {3.693235436024106*^9, 
   3.6932354401393414`*^9}, {3.6932364508441505`*^9, 
   3.6932365936713195`*^9}, {3.693236626653206*^9, 3.6932366623992505`*^9}, {
   3.693236702379537*^9, 3.6932367597068167`*^9}, {3.6932367966909313`*^9, 
   3.6932368329780073`*^9}, {3.693237004646826*^9, 3.6932370307123165`*^9}, {
   3.693237100761324*^9, 3.6932371033364706`*^9}, {3.6932384674004908`*^9, 
   3.693238470380661*^9}, {3.6932385098439183`*^9, 3.693238569548333*^9}, {
   3.69324376863988*^9, 3.693243772370094*^9}, {3.693250104791315*^9, 
   3.693250134623021*^9}, 3.693250174791319*^9, 3.6932506355716743`*^9, 
   3.6932508275446544`*^9, {3.6932508714421654`*^9, 3.6932508908102727`*^9}, {
   3.6932509255222583`*^9, 3.6932509549359407`*^9}, {3.6932511010312967`*^9, 
   3.693251122855545*^9}, {3.6932511765676174`*^9, 3.6932511963407483`*^9}, {
   3.6932515183391657`*^9, 3.693251540170414*^9}, {3.6932516547809696`*^9, 
   3.6932516923391175`*^9}, {3.6932581290916204`*^9, 
   3.6932581350099587`*^9}, {3.6932654529713573`*^9, 3.693265457082593*^9}, 
   3.6932655407383776`*^9, {3.693265674306017*^9, 3.693265705562805*^9}, {
   3.693265748121239*^9, 3.6932657535125475`*^9}, {3.6932658101227856`*^9, 
   3.693265814177017*^9}, 3.693267377567438*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Ro9Z727noOdh2Wjp5028+kckfhbGK2J8KqF/tEazlD9xEYrHDsb+mruLCap5
zQuCbquA9oPLM+4FMYGN9Y+0sP4Rc03plu8oTvbt4t+1ms6C0HrZXLMiFZhl
NNPpljyLRy+JhfE7CLwxxtcTelV1B0uXT7VB93fW4fHS51jwyjyy0QrF+Z+X
K4TPyWKBEqFXNf6LgrHPMlXIuen0Kp9iw9VPq+RsUdwuaJKe/chiWF/sI8Zr
YXw2gRfA+HhCX2xt3r6cI7Yo3mT8GXP3JcKXfRjVW6oCfpWLVz58ywY5Ql9M
tWTOlPTlqlDqEb+1bIssXLvoMj7pPrq/U8/33/eV5dHLu3PM+pU+2o960h+K
TkuXg4YL676PQ/vLtY0d223Oy/Ho5d17Kd4ti/a7qTotp3oN5eFNtUiwA9q/
Hr2fLSc3Z1ivkNwfG/H+uIbYH9nYfuW/2O+G7V9J6NNtvTg/pAXt128O6hr9
EZODg0dvha9/qIL8BqsZ0nRefcC7mO9PzPcrwZfbv7Yd9699bDDwKwWNLd/P
bz4kRodkuWDjdDSelNQj+kliuH+wKO4f/GPGxK4ENLa5GMdwQ3iF2RvGLkFj
udMzEyMRfiyhL5DuebX12AALXsyJNFyA8DHuZjQ+NPbdNX6CEcK/w/1rr+L+
tXyfdq/JQuPdnc/XLBOnQ8KNaU763SywKHtj2CM53K/3CO7X2yBVkDm2hwWO
TeGn29D11wyGWLujseHVZrXNksP9er8RfOdhvkmYrw7ma4D716bg/rW5mRYn
xrSzYLlmvcRF9Pe7xRXnlnWwIFH39dUiad5+vWkfjvxpQuNLZ4JuDCL7L88M
PlDayYIbsgd96qWG+V4bgW88wZfsX7tTLtlc4Svr//xh9P/5aje6P2tiQeVJ
5FAxePv1rvLneKW2sGDxlhbWF3S9FL1toUzET7+p8KYvbZhv8gh8SzHf45jv
AaJ/bWzPppI/b1kwtvjXYTadDhmn2A5v3yN7l8uc3yVLB0OiX2+52sT9Rz6x
4IfG86pEGTpUGZtsWPGFBdC/4qoNi5fvDoKvAOb7DPMNJfr1Zm6VdhrzggVZ
mfE2xejvz9qW5/ysRvOx5W3mHnk6iBL9er88cT529BUL3AweejYj+2c9nHbY
rZ4F++dbXdwth+Iagm8c5qs5Al+yf22na7/m8gcsmCY6vus5mw5bF5/3iSxH
873xWlom2i9FiX69T1uFzI0rWJCzPXT0fDQfo0YFyZk+Y8HvJarj4hSH+Qb+
he9HzJfsX/uMEXHsZB4LLs6y6/FVoIPL0lW5agXo/Vlc+9xPjbdf73rje6/9
77Bg68lin9NoPrKaM+VqS1iQNzvpFkv1v/Pl9q+9ifvXujiqzHLJZEH0hMm1
R9HfLxuXiDxH+1BDhZVu8mjefr3KebaN+66zIPV6yUYhFKdKPIh8tzObBWMi
mXslNYb5umO+lZjvBczXleBL9uvdGTc//TnaJx88Xy60TwutL2a72pafR9fv
P21caYDiTKJf75bd19uSMljQ9DnBUwL9/5BxXb+OIT77v/QaTJ+I4liiX+/f
+JL9ayP0V3flBaN9/6Fsw/LJdOgtv/E54gAL4s/G2DCBt1/v3D0DlvePsmDL
QoPu1gl0uK4+u6kzngWKuZ3zvGah9XcEvg8JvqMxX7J/rX1AzjYvJxZMzDwx
bqouej4ErGw+ObOAYQq9k4G3X2+XncT1uO0scHmxX+Qesj/ThU/Z0JcFy3ya
NdXhv/NNIPrXyoT/ERCdz4LbdaeOiyD8/hth3YcXsCDBg1O+y4i3X2+fqnBe
/nK0P7x59D4Z4Wf4yJ3OtkPv9/eX75eZ0KEO850/Al9Hgu8o3L92Ou5fG2Tw
JE5UF72PXpMaNqDr2VfvdVSagfa3yQK9H2yG+/VK4n69ZR++WB00YoEfoHcC
zfe1NVcnVM5Gz1Nj7vuJ83j79f6NL9m/dqV8znM+ERZYZbfW2MxF+6OQoukU
KRY8VjiWP2cdHQaIfr1XoHWqEAetLzHhb+vnoPvv8aRSUwPZF5pmz7Tn7de7
B/O9gvnaEXzJfr2S0Rt1XlQzQU/erOHuYvT+rCgS0q9jQvJUaetZHrz9en09
bwU2f2NCkUvCmiML6KDBnnNa7wcTtkhliFAu/50v2a/X6/V4lcwTTHAxGP02
1g75K6s0dA3TmRCc+cBp3k7efr1+KaqaxXno/2VMddRZhuKRuq3HDQqZML+m
uG62F9oPCL4SBF9PzPc45nub6F9bUTx1Y6oTEw6FvZbeu5YO70239iW5MOHU
bzVXu0A6lOB+vS64X6/T19rZmsFM2PFh0EdyFR12G4yKddvPBOYLbxdr/7/z
TSP4kv1r18cs18vWZkLGJ/vg++6Ij8iZ9Ch9JlwW0Q0MCOHt1xuvfc/qwlwm
yOdyHpxypkP3aYlFcQuZ4LQx8Efz3uF+vb2Y75O/8OX2r52K+9feyX8qsaWd
AQcEnqpdS6fDNrOKiTPlmGB9xPgIvZi3X+9RrWOpTGkmLH3VvMToIB2Mzxi6
OmsyYfBBtlAZ+v0tzPfECHzFCb63CH0rCYknRWcF2bD8witjO+QfOATEbTgs
zIZrfLO2KUjx6mMdeS62dSX6O+szuz4T+VvFJoWXDouyIc+16UCA+LBeluu/
1Mv6r/42V89LDut52c9IntWJfu/VGtkQiP6/2YHn+74hfIVW06n9krx6Xsen
1R+25mMDPS7q2DV0va60Nb116PdZkgOcJ1LD55uh+HyTez5aic9HueexEfh8
lexnrD36QtlXNwY4eQPz5006zO9+5++C4nrXY1R7bxcdmEQ/4z4r+bf5Jxjw
c5N02MpKOrglXK2q9mVAdrjM+rWjGFCHz5eP4vPlWEtZhX++A6wtWC/95igD
HszxFlNG9mQrjm4S/s7gOV/WPmBteUmMAePv/hpwM2XAatGCb72zGdB5y/OM
3iHGEJ8ozIdr7yZsryu2JwfbI4Ptn4bt7yXsJ/HFxPNel50sblvFAPOzu+fY
fkXzf2WT2KwcBghZaTv1TmTAVuJ9yFfTmPZNhAkxn1t6rREfsQEfo7QeBtQa
H3c5asTgeZ9NiPfDi7ge+T4XTZyerGHOhEL1IrM3p+hwOHtD82UjJii8Hox9
em/4fU7H7zNk6z97h973AL+y/T9Oo/VHqy9j9AYmvNe5mxbxaGT87hHw5Hq3
XVEmO/UAEyLiHz7qPkmHjw/Ovaw8xIRjEV66SQ941zvV+ceSV59jgtbXUcze
VDqM2WQnFnyZCRWjdxSdvfff8eR+8NFkyeqm+0yYXeDd9jyODuYvQ0YlP2XC
la0vBBxvD+8HiXg/yNCnqfp8YYJ99MPyixF0eMtYOz27gwlHC6ZYKF/l3T9G
wkdjPLlffl5es3XrABPeimwvEduPfp/oZnxZlAUL+SGo8uTwfvkE75cau1JK
3GVRfHJ5623nXcg//KZulqHKgqM7028diubdX0fCR2E86U/cKLsyORD5E8G/
nQzLttJBsJ0Kr9FhgYBhtcLug8P+xBXsT+R/3JIcZYj8Z7ZwrhZaX9Q6VteI
zGJBv86qHVt28/pDpD9FXm869v8Ssf93a/O7U3+WsuBwx8X5GgtRPOhy7pTF
QmTP6BdX2x14/b/i3dLKE5B/eP2fBiRo/1Drqfjs5cgCW7kM94ENw3j6CHhV
jF+G8aR/TPdHHvgOFO/MHbxwFtnrHZk96+ZOFqxrKNKdtHHYP07A/nFz5sDM
klAW8E/OOT3DFsUHDp1HeyJQfJv9qnuN23C8tx7HPy9V7im8RvHehTljimzH
06Hw5qtd8XdRfD5ta6auHtpviHhvvqlNvFgZC3RqpDcWI//V4+lCeUMU36W6
BbE3o3hnC473knC8d9v1g+w0FM9OT1kgMwHFR0dvbr5Z95wFVZWf/c9rDceH
XHw+xhtgfBTGP8d4NSIeFlBk9KhWsaB4efiiCSjeWPVuYe0vFP/SIq19iscM
x8OfcDxcHNtaK1bLgkrT0RETULykJT7pt1IdC+7Iu255ieajgoif/4afic8L
QvB5QfDxS3/43rLA1dxa6jfiU+6u6R3/ngV3pfk8dyH//TRxXmB2wnNM3ycW
/LEICC1H+I/HH3xjNSK8IHqCNXjPF8wJ/GcCT56nsFbpfnD+yoKZf/T36aH4
18ZPY613C7rfjwtsGSrD5ync86OVX1JSK1uRv3Cz1f84it9njtV6/qKdBZyH
001E0e+LiHwyTSIf7QiRz0bqfTxLOXBf4VcDVb7glKeUngrkO0ytp59soRQV
D/ssnqoypPfRgusPOa4X96V8aKBynR7WXT6pDBF1gxNa9rZQIQ4n8xee4tUH
URoBvx/jyXrFisbz/dVPGiizZkmHaJoyGJ3rupzu2kKFajSEGjKUeeozgzee
85HJa6DmGf2q9wngQLNP0xT7xS1URJP2Ss09HGAR9d6f1xyuXqmmApv5T3Z3
oPGEX6mtd44oQ5etfkW4rzJPfbv4tbgmfSUV2G4JVnfFVWDCZpkN7P3K0HYw
60OWhApPPRu3Xm0Xrlfj1qOtw/VBZH272h0n2f4JKqA8bbFphDUHbs2vXH4y
QRn4BXpyLZZyYCFR3y5A39GtPRbZNU0jmfrEgZzbjienRCtD4T3K1O3zyHw9
Cb7dmC+ZfzDn1+si12oaRAqsXjOxiQGipi2cHQIobpw+bpS1HROeEfkH9Z/4
jV6gOKdn7btpIQUMaLg7Ofoh2ieaZfyFLo5hDuUfRI/g7z0k/D1ufsZMnJ9h
FGMQmf5LGmyvG8bclUJxW/iFxaL90tAb18BuDWIO5WfE4PyMB7/eZAh/lYFO
+wV9Pb8YILvco9SPjwbWjSJKqR5MHr5A8BUi+HLzV/7g/JW75972PVSUgth/
/Dfkx4nJurRoN0hC7ptE0ynbmDz5K/8c0xtISEPeF6P7h8VRHLP/tbLidylQ
XtZ8UWYXkyd/5W98yfyedTif6DnOJ+LmI23C+Uhkfs/RjsF61hRJmGrF7KC3
MGCVzFaF6SUSQL9gpznWgjmU3zPwF745mC9ZP8nVq1iL9SpIPQGyfnJnXdLR
k8UNlHex6ZEFb5jgfNF4T9OpBiqBPmWi4DYWZBD1kMFhmkterGmhDm8/Pvbr
W+Tn6lwfX0W1UKC7mE9rOwsWEXoBp8RtZB8faqCqxz9UlElgwwqd+I7eMS3U
jsFtmlkJw/oIz7A+wn77eeX2cQ3UdsGqU4dQ3Gfv/V7KRa+Fkgs0ONaC4kRJ
gg/X3kRsL9ceCttD6u8E1U6rcNqoDDf26YqV1DZS8QoGUYtdlUHf9rjM/MjW
Ib2hPKw3JCHT/boQja/c2t857mMjldusaOEmqAIi9q35l5NaqfWE3hBX70oK
610tIfJ1rfG4Bo/J68UR9sQQ+bufLvZnWyN8naXSpvILHZReV+LAI8RnQ838
kPL0Dp58XJnN78ZNR/irroXbC0R/UPOSz7vPQ3iHmUf2dQx0joi/gvEWGL8S
4+Vw/m4Ezt9NmuuV8wPNT4tJ73Rh524q4eBm0V9ovue9+lpwyaGbJ383re3K
3CsIb/kpuM/qbg/lnRGSfhHhV1jEd7vd6qHGEvk36Xd83o6fpgLNxt73bk5Q
AmWDFW170T6WPiG77YiOEjBx/aQBrp9cP/tbXzTaV/fdWi+kUagEV16ZpDNS
lOFZXI3NpiIlnvpJcv3PJdb/XiL/Js9c+Ef/TBW4IC6sWCSkCIE+rP1m55Uh
UDd2tLjocL5RMc43ytpX4MqaoQLlp4y2zExQhArbaYYbzqDnsezpofJERZ58
o9MEX1XMNw3zXYW/p9rj76l+UmnjQ0yQn3BYhbH7jTz88zneP1MZPG6d3TTq
vfxQvlEizjdSOr9U5o6RCpyfz4hV2aYAx9YNfHh3QRmmOHRZxGznza/6G1/u
9+Or+HuqyBjr6z8NVWBan7EycpVhbArlc++sMuSGHikNuiIHb4nvx6Cws80Y
2bPlziW5qebykG7fZK+G7GGlK8pbz5Mf4utA8D2P+apjvp6Y71X8/dgDfz/e
K/46Lwn5UeoBbWtv+MlC3fEzC5KRX7To2LuSk4GyPN+PS+Tkpj80UIH2ZcXG
T1lyMJjk9V73tDI8OPfO9Kj88Pfy65ivMMF3DMGXrM9neiV/6m6UgzTFU31h
51uoyErvyKdB8sB3Q21707kWHn06twSp8HmtcsCKfBSSK9VIeX54XXUsRB6i
xLPW1ks28uhhkXpXpB5UK6FHIPQg69Txd3KwaqeyjNPWTkrVMt925k55SHGv
tPLf3jmkR7Aa6xFYCPabPvgkB9JPNSxiNTqoaO+2zv275aHg9yGh3tEdlBjB
l07wjSD4knoNSs4XVGfUysG6u9IppjI9lEt5mrHkVnmoyRml94bZw6PXECk3
cX1TvRysUYmttinqogK2CpVreMtDHmMXpVPSNaS/oDQCXxXMNxXzvULkZ0gr
HDwrO0kFPnn9vGRvyYbOPcIzatD6UHrW8kzTQjZcwfkZ/jg/48iF+iu1aP0R
2Nl54OBHNriEV8++lawMh1Vib5g3IDyR3/C355OrR1D1l/2Xu9+RegQ11+g7
b/e1Uztz89rtEf6K4eeira/aKWn+X6u+o/2Sq0fwDusLxLYGLF5i2UltHKjL
fYL8gQ69vdoHDTspZ+G+3LytKI4m9HcCL8lo5wY3UHOvPM6ehMYpc7LN++Vb
KJNZs7yri3j1ho7WXxl1N6SBsqxKc1XVkQXLwQ/H/VRbKLWcIKs5aEzqK50e
wX/wxf4Dqd8X5RZXlTOZA95rw6xD0hupDxZbVtdM5MD+O2bp6vatPPp9h9Qb
rCMecSBm2xqd0wWNVH5W5U8mGutUadvd9G7l0e/7m/9wgdBru/G8hi3RrQhq
8ybvPTa7kSo0/bNCs1MRPJ9ZJtp+b6FuYf2+JKzf15Dz/se6aCUor3rjKuXV
SIVelKofiFSCvgdlKbc1W3n0+0i+7wm+5PvvQawf3Pdx8Pr/vY9cPbjXWA9u
cehv/WNqCmCwhPHgpGwjdbnzZPwxZQWIcuk5+ye3ZUgPrhfrwelNVYqLvo1+
n7Bd13VUI/WY+fTEilwFUFWseM162EKpE3p5JP4JxqthPKmXtz14p+0iO0VY
lBtWG6DbSFlcbPA3sVWEMm+p2/pvWqhMQj9xpPnfguf/GVGflnvg/vMxfp1U
QtK0xM0oHk/5DTp+7p3UtcPr77xOV4bdRH1XmGFK6nLNDioGbh58i/DJ01ve
TZfroNaFXTSRRfF1KBH/c+N7BRzfhxHx+CGcr2aE89W2O827u3u8CmwIbSii
KbNg1Te/xzeOoevWRnNc1Hjz1aCwUf8h8mdcExIMpl1nwVkDCDaPU4bWVwrv
x+Ww4L+ub7OI/L91TwLmx6qqQOPKBj7BbwzoP37shmeIMmSvPd+l38Hgyedr
VvgkLD5GBTS9XNYd3s8EHbODxUfDlEFNWfXQwkPMofw8Ll/vv/Al8x1vcFLr
OpjI/3wy5s6BAhT3PpAVdd6pDBHH1kZL3aHz5Dver9vALFFQgTF+Dh/MbBmQ
+yjwTVOgMrxZW1eSZjec7yj/F743Md9anA/Kh/NB9TmpxhwJFdBb9ztyswoN
IuZJNYV7KoPTNv+V5po0nnzQGdMeSB6QUQETzcZS1bF0CNK4vWPXdmVQz4g4
8XI8HUT/I19u/ecLXM+ZcyvsZ5VSDxUR2CyjgJ7PpTavBWxE0d8jXyXRkV9J
1nPOF6103F3eRdWOzauag/ChMtPjXG51UaVhKZd/Ijy3HvLnCO9LKvG+cOtd
p+J61yCthCnCt39TQaEmfqro+X/r2Fnqf/Y3VeFoHzwe4cl6VwkJt9hWtz5q
QaqJWRK6/v90u1f0UWHvttBSkD1kvWsuwXcZwZesB4awCv4kAz748abnVgvC
e8/xeNU+gQ/21ybOaUR4bj1wOa4H9jTsTFJh/6EM9TlKwsj+7rrwvEuDA9Q5
FT9Hsf8XXz2C7x6C72PMN5Cor95vXXDr61EB2Dd6+q6gKSpwOPqHV9xhAZgx
qUV+MYpjyHrp2rxtb2c78cPtoHhFA2R/YPPksSX2/LBm35yJSSeUoe8vfL0I
vouJevL/ncN1CMHtsrtnUpA9N0zWrzvULAQOy26IxiC/5g1RTz7XMSlnzR1B
qK+vpEUi/AnXC5toeYKw/6xm1HeED8B8V2C+wQTfQ5jvdMxXC9fbr8P19t5n
U3f1oPE4rx1hH/RRHHdXNHCznSjslF0auBTZT9bbF0uHybuMEYFsg7IECs3/
7SD9dj91ERjDWWn6I1WZp35+JL6rMF9Sj8Dx1WP182gcvCflzVKEF9jhcqod
jSXKxkiUIzypR+BRfHPhMzSu3ikxTQnZ81E5J2rSETEAz1lmMid4+fpivloj
8CX1GuxOJD2ai8aUgPHrcdrofVjQGaGIxvotPaGRaB3l6jVsxHoNDVvEfHei
8Rn7+FUFE1Vg9XqdxP1o/MlrRrlOwjDf33/hK475knoWChHjrb3CZGDCV7em
V+oqoHX0wAKfCBk4M92OVn5YmUfPQndDhMyb5dLwSybwI99YFeg7GeVRtkIa
PBhaTzIj0PuL+c4fgW8OwZer95GA9T5Merb5bthNhydrGCvGo31gb0f/QMEe
OgjNXKK0L0CZR+9jQeGB1OS7NMgVj0njV1EBOcPiU733aZBYGRiTsQ/Zg/lq
Y75KBF9tzPc05luN9VCOYT2U03ZXQkSzGUDzy/v0Ea3r23/SQwLyGXDEkrXf
eYcynCb0UL6PYwROU2SAZ6uzygFZxEd6yh0VVQbMnaO32NtvmG/8CHyDMF9B
zJfUi9FsnLcisJ0Jc2udFqxB9nReLbl6tJcJTR+F3geifaaS0Iv5fGJ3292l
THCJ/BKfhvA/N7OTDtozIU9OSq8T2f+C0Is5RfD1Ivhy9QeNsZ6gmc78WXee
yUF+sdcZpUu/Kf0P58ZWbpSHtV+WOey5+ZtHT/Dyg77M3S9QvHnu66is1X3U
k+ox19rc5eFwI2PeJKc+nnhTgYg3NxDxZhKht6gTzxBNfSgH65tTirUn8oFp
gZPU7HXyUB8ZZVdgyAek3uJu/5dpk5/IQbHlClau4B/K6OmBRHEneUje9Eko
AO0jdYR+IpdvIcF3PebLPU+bNcJ52nZ8nrYSn6eR9e3fejfdDkf4pzoefjJj
flGty0PyX7j88x1o28R7nF889ep3DXZMckf4Zb62v5+G9FPOoiE1AwhvOvPX
xlGB/x/18AR+I8bPwXiyvr2JPSBUivAvmM6LOG1/qACNSfvvIbxY10769y9/
KF+inu1A0aTXyoIqcGFFnvXUi3ygsm3ClPB/4rMtVas/ZPDWv5F4ZQJP1r+p
sNWsgpE9Fj2ObxPf8YPfqYQbUc7K8K1hWu6Z1/xD9WyFuJ5Ne1pBfiM/Wsfj
JD342IKwTtx+eoyTMgitSWC6MQX/M56sf9tCd+87zof2VfZsw9VoPL9Omz1h
A3pvOz9170Vjsv7tRouCwaJBZcg86iuSt1sY9C7+7rizHo0PTH6VGMhbL8fF
Xx4BL0zUv12u2/LYANmzR7lhksF1EXh67N26HcieuhBaXmG2CHzG9Ww7cT3b
uYf3HUchvgCX7K41iYL77pJnOmg+JULaj39qEx3C7/gLXhzjpxH1bykuJdEr
0f069ePZRG01cQjPXhBf/c/zk+BT82qs+FA9mzyuZ1Oazr57DD0PCjIp/OnL
JeBSR9XqQBS/KzJP05+tkYBCXG/mhuvNZkbdHr9eWAV2N99+mlUgBWB/s8Jj
E/K3+8+NriqR4qk3y6nOnFooivalM/VZEd+kYUJLqMOAO9onDKJNwrqkoQ7H
CwJEvKBPxAsuOF74Q9TjkfZfxvYrYPvfEvV4Fz41+vgJofVhd+ZXrVBJ8D1j
FteN8OU2lceXHJUcqq8biS9F8DUk9Ci550Uu+LzoOz4vcsHnRaQeZdvqfYVd
cV3UilT5lb31TFANGGU9aX8XJVA176mKJ2tIX5KrRzn36aGJCZ9+Us+8zvVq
1DFhS6zM9uqKn1RaWsKXIHcWqGL8Toy3IPCeBJ7UoxS5ksXcMxaN7055lPqC
CR0BdlIXaGgM4TdTnVngSOhlNK8Z1+286TfVakZLUXrKBC+X9DOB1r+pmHd7
Q/LX/nc8qa9xrv9SbM6VAap8ftvz+IdM0L/waYNx3ABl5Or7xmElC9wJvQyX
4/oG4r2D1LlFT0RkS5nw89sYjf76QWpVgZzB76UsHn0NZwL/g8CT+hrC83Jv
3Vfnh4HtLt3fipnguqt7lQeLH7zT0na8XMzi0cuonbO89tBcAXj92ObT/QIm
1PjXnqubIQBh+7RvXbcaxk8YAV+L8eEYT+pruI9rP5TlLgjjfHw7OPlMgCJ6
2xkHQdB4rX0+cgFrSC+Dq68hs113Rk2kEHipJA5szUPzKzB/6rZAIZjI/zLR
3ZIXTxsBr4PxpL5GpPNBxbhCYQgTypB9eRs9fzqDlzIuCoPzm3VjjixiwRpC
L0O96ECf7TcRmDRKdKIx4vvZ9qbW61oRSL7VfPkCmn+uvsb0EfAfMT4F40UJ
fY3QhcuEvHTF4NHYs6xVhUyQ3lcUVEcTg13JryvmOLCGvk+74+/TP+rVaRHb
xeH9r85ffkVMmHHlYW2thTjY7qloq9vAGurPcQ/r7wcv0eV7ny0HUlS19x4f
Adg06fPTIkt5sOE4vumKEBjS33+J9fdXdKUJUsXIv3kgrWS7hB+OR1ZsDrKV
h3jbPqWVKG7l6u83Ef7VOuxfmRP+FbcfiTHuR7J8e/m3c5Fy4Lju5OD1BCFQ
jG6bU6EkD77rFTwfFAsN9SPZi/uReDgO+JqdkoOcxbPyFA8Kwux1m8TL9OTh
2zbGmbdnBf8132WYL7ef1nXcT2vRCZNAC2s5+OMpO+rXEhHwdWzYrFcmBwbH
l3EMPUWG+mnx435aSw8LZfdskYMrGx1oK3yEYZ6fmx3fdzlYaOl4LyheeKif
1kh8lQi+l3C/sR7cb0yQFflTeLwcZPoY60xG++uztR6Wc0/IwbbFicf+/BYd
6jf2Avcb03rlMjPDSA4em9hmsDmioLF+/Guj63Lwosv3JWeaKGhivlcx34WY
bz/BdxrmS/Zji+HcSfEVkIPgWs3Wqq3ioJRvlVbuIwc6ax5+qI4W5+nHtkBe
y7JQVg4itr8J23tBDLrDV3UfCpWDlaHCM93KxHj6sQkQfCswXy/Ml9uvjo77
1QnoKomfeCoLMgcKP7N7JKBCv1QzZL4cSNQLG74dLcnTr+7Rmc1VEk2yUPhb
ZVPXVAmYEX3t49m1cqD57LaUvYMEyPyFrzLBdxHRL6GwZ5GQZlADJVX75X4e
GkewdPr3MVsoltHl+jo07iX6JaRWTor33NtAOWtPLupaKgdmn6apg2wL9eWk
pVYtGnP7JdwjvtdYjPC9hts/YCnuHzDFuH7xjMAGyl5nT8ooSQUojl0sWCrV
QtXa3HArRGOyX8IOJdkLk/Y0UFOD9fQ2o3FNmADfaVoL9XPulFOP0ZjsD1Ew
Al8m5kv2S2ifVWlbGt5Amfyuz7Kaoghfv2vZvNBooSa0PN7xFI25/RLkcb+E
Im+OzZ+QBuropRVjDVIV4NSRHu3HiG/wCfh+P5W3XwKX7yqCbz3mO1L+m8UI
+W9kf4J3mRtCz2c2UKBVY/GgWQlsXrlXLjFroQ71fmzIalECe6I/weu9salm
JxqomexrV5XslCDfqM1rviGyXzTJe6bdcD+DTox/Q+ALMX4/xtfh/g3quH9D
w9upfvvjGqgg9W1XrqPx0njJTzKTWqgVfVN/Ct3j7Vcx0vzr4Pnn6uEexHq4
m8LVFJPGseG6aX9JHIr3l2ot9J8yhQ3v27z0vvkp8+jhzs3Tzw07woKB8CsH
/RBeffOhuA8xLFB7elQ8e9fweYXKCOcV3/F5xVd8XsHVC87CesFHxWcudVoj
C4kHzQ49YKtA7K8LppKusrDP5s0EqSBlHr3ggAWXbg7eZcPHBb4ZWSwVmDFh
7NrUx2zwFA3M2h2gzKP/+ze+XD3lo1hPeWMgu08VredHxfTObpVVAbWTO7w3
J6KxXbL/SmQPqafcb3r2zJ2fsrBkEiNBGeHl9DeuyudD61VNfpUewkf8hW8M
wZfUm/b7c2NJSqE8yE1YcswD8TXbJGQb/FAedA3uX03frcyjNz2tVkbz7Vh5
qEqcneKJrq8vXPh5xxR5SJ4oKh8YqMyjN+2K+UYRfKMw3wpCv9vr3G6Hzg4F
8D025eRPhgqkwwSvoN8KoHXf41yyvzKPHrdvVUJN2QoF2Gsef/wqmv/cttkb
9joqQEd8SeYoZP/lv/C1IPhOwnrlNKxXflo/v9pytBI0xO844ktTAaWlaRdS
dJRgWi97gzR6Prl65ZOxXvkRz+QE1VBFaPa/EJdNVwGNTzQZWowiTHpXLGyL
nofHf+GbRvAl9e51iHzYiTi/9AfOL71J6N0bZc61kmvlgJGIT/1TSRWYWWYx
26OLA1KTNvLdQnhSL740R8dAYRkHBJY0VLdLqcDzsjmxcqs5aN8xn/r5X+Cr
CDypL98XmRpy9bYS+HRd1p0qowI/w76PqitVAjfniY96dwzPP4OY/694/pWJ
+U8m9Ateu8UMSP1iQeBPiXMlUnSIPrK0cAcaz1Utn3dahlevIar3Ggyg8cfu
xWPHILzYFQGH8/0sMPC/dS1Xmrd+jKwPI+u/4rB+gTnWLwhl5nl0oPGhfRuU
fNH1Araa+GT+ZMFsqdjfXTLDeg0zsF7DdZNxN/+gsaDx9A/KCC8W+EAxupcF
ZrGT0x8j/PG/8D2G+VpgviVYvyAO6xeECBR2rexkgVdQSe4rGh3mml2CtV0s
KE1eXvyDMazXcB3rNRySyNfVRH8f2Hus6Sy6nmNdd10I4jO37cRqbzqvPsUR
gm8g5guY70j59j44334WzrdXwvn2qYReQ/uPS/Pj0N+70GY3k0kHuNkspvSP
voTV98AB9rBeQwLBd/sIfNNemkn6SLPhWeRUyXw+dP8eS/mq0tG4NtdPU5AO
QhFBH8qYaKxu0hwhjK5/T16GD/3d/fiO5PTfNKjN4tfrYLHBt8+/IpifDq2J
Lbbv5dkwsXPjYn2E/3q9mX4E/d5yt676k24aKB37+e0O+vu4J9XmxYM0sPIS
eNSrzAaBSOObr4R46xur2jeq/JJkw3SrX8nTxekQ/K5pjpsMGzLLVqWEofnO
CKH27kF/n3/li81TZO+0NXnzpdDfi3ZODvtH76PUYBozEdlb4P2kJFyMDicI
vvGY71PMVxjzrcB8m0awfyy2fwFh/xfPMwymLBsWC36Zmd1CgyObFtzV5rDB
xShls8sPGkxx+u5lqs6GAB/bNDk0f26rbzAS0fWWhSYuO/GBBiHbu2KPof01
46JTrFQjDdIO6ytFaLLh5+PJNbtah/G2f8H3YDzddrfHOkU2mFzeSqVW0yBw
tKz6MzU2hMS/fyFaR4PW75eqKS02vG3sdd32lgbZVmZl45C94yrnaqc8pMGO
qmmZUqPZ4N0sxBJ8QoM74f5R37XZcE/g7m/XZ8N4LYzfifE+BL4U43+qtVhc
RPNltyz4ydICGkiXVUpuHMP+37L6rogGYzbnPdPQYcOavdou7ndpoN999P4k
xC+sJn+r2FU0/wc5HncQv9ktZ9VuX6PBoMIZxrKJbBDfOOvp5hs0mIbxoX/B
S2D8jlvnBy6NYsOCuoBVtmdokHL9QvmGseh+hvXrPzlLg5l+KxIUEf7R6dFS
5hdoMOeqrP5EdP+k3prMS0+kQULml/EiyP+pPtY3910yDdrO3hz1Dtkf9lFy
vnLaMF76L/hwjFdymKNSh+aj7qvCRpNwGixatSwzbgIbXlnp6f46RoPg1S6z
bPTYUPu/hl80cH2uJHoQ3b88+6T9dUE0EJIqmTROlw3tHix52SM0UGDJryib
jp7XPUfOL46lwaYR8B0YL0/gXwguKVg+Cd3P6681r3vRQDnhNlqa2JBNBZ9T
3kOD173Pd86ajZ63R+MmHEC/zxGY6j1Wnw26UqplR5zQ/RtzQ8SdYsNu5nfD
MdtpMJ75ITHLkg0PFEoz8/fSIPcveC2ML8d4l82Xu9NmseHI7OkuJ6xp8E4/
wLd4PhvyM1sn79pAA7v+BT3vVrBhMNCyd6kveh8kA305pmxo8LUWvm5Eg1Bz
iwbZZWzot/iqWWFDg39kr+nObBgTqGXe5EaDE3/B/yHw16kXGXsWsMHKe5nx
tTHIPtY6uz/r0P1ZqVJhYEIDxcYW8QBfNjhRDWtur6CB9dnAmk82aH2r5fO+
KoWejw+7yhs2s+GGx1LfE1o0yGxUK2o6yIaYxN+7ws2G8aX/Eu9Aqfpm27PB
q9Q/9EezDOz13PUzYweajzF5Jm/5aXA25YVvfAwbTrSmfX+ggJ6flwWyh9ez
QePKz7RpD2Wg+PdOjY172bDKrFxYpV4GFNX0J5ufZENCbYqb0DcZcMH4URhf
ROAVMD4R4xXXB/Oro/myaOxnl52UAWWZjPyr+9hw/umbMv0sGRh1++GOOeno
fcot9EvPl4Flqkmtua5of1EVPGznJwO71KqW94eg9c/++2GrfTKQqiF5hzrF
hqN/Dh6GsGG8B4HvIfDRGK+UEXvfzp0NT7af/SqyVAbWnG1dbIzwJ53/LBxc
JQPar+Nr1U+geK5w4GrPRhl4PzEqrRfNt5Ljqfk3x8vAo/X28wL3s2H1y+v0
awYykB07pkMwiQ1RXzivLpv+HZ+L8ZEYb3PCzvnyLjYYWaybbz4gDWFSMzxe
HmPDxfGCDWdYMrDwkrsX32V0PemMYBFtGXhAV9d2QvYuKPG2rH4mDdXNmyJ1
Eb8+/6W3Ezuk4XPpta7+YjbkJtVqr6EP4+dhfA3G9xL4bIw3WsxZqRHLhgtr
I0qEY5E90+IitVB8KHtjz7Jdt6TB5mv+/Ulv2BAktu1L6xtpuBYue+j9aTaI
9J81MlgpDXlWnlFqT9mg15r5zS5YGqwoTsK6PjY4vL6a6n9xGC/2F/wqjG9r
NiqruoH43/8zyVREGthzRFff/cKGjUYOS2ImSsPMxOedV+Rk4ca1nO1flkmD
9jwnkbJSNkyIslW3vi4FDYJW2k79bEgOE7/5tFYKtH8cXMivLwvShwvmLf4j
BeMwXhvjPxN4LYyXwfim+V3hps/YULavfAEskwLlM+83RErJwp9eU6Vrm6Xg
5VR1w/p5sjDNs+Dr6INSoLenll1czwYbevwO3W5JeL3rYXKesiws/lMdFCMg
BQe888bcXC0LC1rZob00KdDH+CX/Eu/odGWP9nvkf1HFBe9SJUGtTqP0n36B
C6VffeE7IAlvF8eK5ayUhTH136U1NkuCUsDrppjP6H32bBKMnCcJrZufNY9V
kYXV+/bP3ywuyXNe2I39+yvYv39VrVqtz4eeV9mjb14jf9bCZOrVCH60nqtq
nmhF/nASoQ/xvd3Hsg39PXzX2vDj6PfP3jhJhAmyIXh83cFgGV59CXFCT8Oe
0NMg/UNSP4PEk/5jkudq+3T0+y3ThLSjkP/YqnY2zhL9/qyqTM5XaV7/kq/S
WuQ2+v0YgVFP0tHfu6I2lEui3ycbfejPRf406f+tg00HTdH+HiqYUT8B2e8r
88w0Ygoam+UJBCI81/8LxP7fKIeiSQPIP5oc27T6DfKfQ1QNW7LRfvhP2tJk
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
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
6/Orhr3q92vS+5rfzFuf2X7nBG+eHXBRwK7RvmMDjmibfA//r/L5kTzN+KKf
1xj32+CZEa2TBz6Sb4hjn4i0Y+K5f8Dwhuw/+rRY/F+bh3D6l36fEWP2/eCp
9wJOjTynBZzckGstc2Bv988Le/n/ts9ph86B6ryy1LOW2h/wQH2E1ZblXkdZ
85Rj0X3WyOvwOWvbKbYv9O3ZkDy6WbvAKQ1d4n1xPF9vyP2ZJe710Pbn2f7s
O7E3yJr5QNTlwiirbbPcD+4kffOD7qcDFpek7oau9mRJ2kqwkxD/kHL3IyW5
7mArxKZ6O3udypf3uB7dJz7wLFLuvNe4B83/iGmeNN0FZWmXocyZAVcHXOP7
TX7f7Pc1yrTYkW4rSdsksuYCw7G5zVJXeN64Jy2PulDOuWWpMz9p2Dzrcq84
KYe9zBnWq1DvB60779hezgo4O+DEgHN8P9M4vtlLg378FE40/oSSjXt8J/nN
eDrF7yP8Bvfx5rm0LPuOPjzVNCfZB9husTGTfmXRxjznSAd7KuyxXW76OeaZ
bT0Im2a7Xi09Z1s2tif27NBlLoz1+6KStKvRLuiN2D4nxPvEgGulmTJPt53Z
B6Btr9GONz3g4ICRAYeVZzvPsI83C9i2JG1WBRsY+0y9fO9uXCfT9jKeuC6G
EYcuij0NWZ+2Otz2OktZBjmMNK1Nd5b0fmTbFfoEHR382L1eLUnenG8e8jLe
0ftoG/Y02xpesCF2lh7m8I7STnwb46C/h/gL9dzRenazLXr5vbNpe/l+k+0G
X23pOtHVMrpaJmMBXoanO7tHBN/PNoxxelz0wc3BU3dVpn0dGzh+A1Xu4dCH
9BFjj/Fwt/wCv8FHjDFs+m1iTmnfLOcW0v1R+rpJE3W5XXruKMnx+Se/j7J/
6Cd4nDkJOm+K/ppakbZK0mBLZu25URzkZ3+Otj/G8D9J522+k449Znj0Ost9
rmijLfqPpqfP2WtgXDIOT7Yswo83Dn0cfRpdfL5yK+sp+zfYOVgf0a3RVdHp
sHnONw16Fbaggk0IffE+wwlD7v7QdZS14q/GzzE96bAZ3rJJGDIyOuCjhs8K
2Lwi9bjZAXcadmvAH4UtKjIM/eoxcTziO7iwX6HjoOv8XVnhKuPvky7k9DmW
+XfjJ5nm76a7O+COgLuKU29nzxC9mb0zdAP0AmxyA0pTJ0SXQj9En4L+a63D
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
MnzJ3mmS8thqZbIftZVhy/u0zca23DCXt067HH5o+AK+pC/aQr9XxHzaN/Lt
3jzXyScNfyhoqA0a1jRurM+P1dme2JC6ts65A55mXsA2wD4+toKP7U/67mDX
V/SKg9TD9jF/t9ZZb9r1O9vi3oB7mMNL08aMrXk3YZeAnQNaywu0V4M4wDW3
PNOg5/ykrfBT+ehj6WGvkn3K4yuSP7BJ0efrom7fBnxdnXTQNwut9/PK6JzT
ut4zWawzM5vkWoN8MKJu4xp+qOv4TZ7tIv2rjrWnq3KtIpy1YKsI+yf7HfoT
PSjv3mNb3BfQM3D1bp1nkL7SlgiPNw/+mBD41kUf7RTwLjJ/Y/o7Ym8D11R9
7fGtXywNr1rOQ+K/z7IIg69pM9ruCccQPH2j54dmCNd73qBK2srsD/qF+n8T
dFwYtFV2yDG73PmRNY8ysOcyhn/UnrrYNmY87qO9kn57QT0L3lvg2IKelc6v
4MZ3kvOA+NqDc5D4pyir0AbYfZsEbX+oS7qnW485VSmn/7kq6Wb8UY/lhbmw
KMfLYsfMKPt5g4wY/TayIu2QtM1M+xt+oCzKJJwzk5zBesWxx/gaHDr8pTFe
Bsbz5tL0ZcNvGnvve+VpF/5PpHvX8d6oLR0bOrZt1hDsqpypm4xPl7xO237i
urLcNmL/eZV6DzoAPlroBLQZPoLr1AfRcdEJOXPRtizPX7TeZJxB358Cbi9N
P6uujj3mst+W5dw2T/mfeQReZU5kbOEfy5jGJ7ZRXwDmpW/1MUD3ams5lIev
NfLcX5pkmXdY7lzDH7cdn3RO+15eR9a9P9qvW3n6XiyQNmj8xDZAp9i+PPWA
j0pyTcQn4LvmqTN9pB71lbrYWnW6T13zPvGdtQ8fAmzf7Df8qD71kbrdOnU7
ZHDog7ap8iTvtD1jk7iPzEu56I605VeliWOtePaOPMegozbNurypnrfKd+o2
VXzgRQcrcp/lE3F/aLoP1YFXWxZlPmFbPmkfPu77bbY9fPqF685y+fK9Jhv5
dLFh/bT5Y1cdz7oY/f9YdfYF8hj98R/zft4keWGLuuSH/xj2hWW8K/6tXTM2
rOVRt17MnU2zvMWOK3wur47yJrl+3CPfdDMv69ajyjB/75B8ha92gSdf059h
Xoecc5/skMD7Ex1yrmvhPPy5eyEFOv/jex/nQ9Le6/oADzcNHhkY5bZsnt+E
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
y0Mt/1rTTzQP6bdxXxKd//8B7kvnHQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwlk11LVFEUhhchOeqBOU2O48w+pzDDi3BC7Uq67Bc0jh/g5JQiCIFJdFFE
ljoUQRfhRRRUF31/aFKUivovgggSAi+EbrqpH9Czei9eeM7ea6+197vW6Zq8
VJk9YGanURPqTc0G82Y9nWYV+EnJ7MZBs3n0FF5NzDrazfLoPdzO2jgHx1AJ
Lgez7xmzi3wf4XuaHDvkGi6YTcLz7K+1mp1oM7sJr6KlyOwuWoE/BvE9NA4n
5Kg1qcZhuI+1XfL/QP3wDDn3yb+BpuBlYvYyivHYoVRvKaMq/Je1BXI3UMT9
P6NfsdmDnNkX+GiqWM/puWtBb1/hzuf8fsTsxzrzCW5B1yPlbIPXE93F3+xv
X+TMNd7acAXV8FqP0AZ8oWg2gO+n0BRcKMk7f7O//Q1npsk94x7BY4m8L1A/
B2eocaXDbA61wG+DYmfRHfg1qkfKcRs+Rky1oDNd8IcgL7wH3otNcg7kNQM7
cBV9o9YuOgMvE/M11lqF71tBvSyjTe77LIiHyLfNdysxVyN55F6NJMr1Ew3D
WZ+nWB4tBc2Qz9IoysFn2c9lVdNr/0aHslq7D5/HM0L+e1iHe4Nmw2fQZ3Ei
qHc+c/Wgml7beziayDP3zme6OZVn7t1l9C5oBn0WveYafDzVLLuH3al66L10
z7bgF0FvH0HP4eZEudyDP3y/DNqruedF9dB76R7E8KugPe/ZQ/YbRc2G/4OP
S5ohnyWf8ZPwP8UDe6w=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.351829993243686, 0.47915918948321673`, 0.9436392739518082], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
SLhOUcagZ2PeO+reOmj51IdvW2D6/wOHikqE
            "]], 
           PolygonBox[CompressedData["
1:eJwllUts1UUUxkfTFNKWtsjtbe+d+ZcgJiyEPgTU4JI1CqW0hFBaCgHK+5EQ
5CFi0SCJBnChMQgKaAGRRykNigEFAgQM4RmICYkmuHAjCwmuQH5fvsWX/v4z
5545c86Z01HdK1qWvxhCWIlK0MtZCO21IcxEo+F/YgiVVSF8UhHCMfh91FAe
wqtoMzwNm1gXQj1aCM9B9+G9qBOejwbhv9G8zDaylc0s+FLCTy6ED9FleAA1
1vCX75PwK5ljGcC+Gx6K1uRDWITK4JGZfY9BrXApamNvBipRbMUQerjYYjQC
Hkz2pZgU2yPuUFXlO+6Aj6Lt3PV3vodh24zNZs5/D42DN7C2jdg+RXfhLdgf
LA2hiXychN9E/w0N4QmaAP+ATSHnmIfw+zPJsQ1h7TA8WzZl+MXHHuL7lbW1
7G1E5+GLyawcXYCHy191CEVUnZwj5eoE6lfuMseqHIwRR9fqOGd0wrWsXWTv
MqqDH7N2j7veROX8/ir6El9foz74R9RU45r8BG9HO9n7HL0LLy7QL/RNK1oC
z81c+z2oA97Fnf4kFw/Ra5z1Fqonnh40MToHykUpOgifRuNrfKbOPhHde6rJ
EXgZZ7QFn6mz+6Nz34wG4O9QF7YdqJf9Ss6fS+27UJ2YtSZ+24i64WrWprDX
jfLwWH6/HN6EGuFDaAW+etDHqnU0L0AfRdvIVndshjN8LCuxj3p4VcG56aO+
p/jOoQXszUI18Jzo2qgHOuCl2M8IvmNPwTayVQ+rl5VD5fIvNB4+Qo7qcu6x
7+GZyb2hNe0FtJXa7n2Js1TPomNRzw7CXZlrpR5vgL8quhfXo93w0+jc9uLj
/+gzdfY61hrgQuZe0gyYCr+tnuX8kexPgaeje3zfQS1wbdFvUTlSrpRz5V41
KsDTM7/l0agFfj36LalGw1WfzHvqkZ/VH8m9/wf+2+Fn0bHqzi+ot9B1+Aoq
hduSbR+gyfCx5F5Wzx/X+9Ib5T5n0Qj4WvJb2I9+S/YhX+qJw+qP5N69hr/V
8A20i9g+Q9/AJWgfuV+DzVG4Su+53G9Yb/l28uzTTNFs0czR7NGbrIA3RedS
b2YjfC7Zl2bEL3AlMZ7KO+ZquDX5bsq5cq8eV683o074g+jaKYZeOJf5rpoJ
ebgC9eftcxi8teBe0JuZB99MvptsytmvTM6N7qy7ayZrNut/yCj4neTcqCfU
G99Gv812tB/ui35LerNf4H9acq9oJms230metZo5t5JnhmbHU3piElyWPLtU
43/5np3c68p5p3LPWmuF/2edpn8ORJ+ttTN8vxHtSzNbs/s513Hwog==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.4623050335115283, 0.5743590786659046, 0.950813492198616], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
b65Z7//ft0xvrXbg/wK5EcMw
            "]], 
           PolygonBox[CompressedData["
1:eJwllVlsllUQhofy89O/LW1p/fdziJjIInFjX4oILtiyVYxKVdYE0sZAoQXZ
L+oFCcaklasSYiLEhJJYNRbqxqIitQW9UCAKVS9MvDWGC0iIUJ/Je/Emz3eW
mTlzZs43cVPr6m0lZtaGEujrYNZYa7YmYzYmmj2BDufMDqGX4c+KZkMVZoOo
D27Lm+1k3w60E46sSWfNMqgIL8Neb7XZR6ge3pWXr0tJsw74Wdb8zdp/0HPw
bGw2Esh/pWYz4QrG+oilK21WDm/Cxh81Zn+ijfBB1kwsN3sI7YdHM3a0Sms2
wFOiYt+O/WnwO4x1Y6sX/QJXFcxWJeRzPDwWLYTr0Dh4Hntq2XsCtcBljE1l
bgoqh0sLYt/je6vR8oRsuu23OGO7KUeeqy8Z6+PsLXyfgQeJYTex7EFD8AP4
uMB5z6Ja+Apjh5k7hE7CWcYuZbQmA19l7CRzH6If4EeiztqK/uJ7Kz5fwtdq
1AJ/y9g21jajb+Cf0Ltp+fgR3pFXbM1oO7wCe6XkL4kmwXXkuDSlHFQQf2te
d+932g7PZs17+O5CM+D5Ubn7AJXAw/gYwtcgaoIfZ6yDubfRo14v6Ai+OtEa
eA/+kind8QF4TlG1MYLmwZXY6EzrDH6WBvZYTjGn4UpiXJbQneThL9gzTO12
UyP/FnVGP6vn6E3YPJ/UThfzo+C52Hg/qzPNgb/3HKWVw+/gJ6NiP46/x+B7
2OysUo+chrf4fTGXQg/Cs6Jy04mmwz8H1baf4Thcw9hIVmfws9wMylUDPfkb
/JTHwPxVtAh+Bv2eVQ8V4IGgWvAYL3ovo356bxX72+DLQbV0DH0KV7KnP6Me
GwcvjrI9jBbCnwSt9Z7ZC+cZG8yoBnPw3aDevY2W8l0SlFvvQe/FReQgm1LN
eO24TbftMS+Bx0fVusdQDX/OmpsVuqN+eGpULXvN3MBeO2O3yszuo91uD+VS
8vE03FHU23SaHvuqoDfM37ImlIDfwEZPje54HbyA9ZZSjXmtPR91ljvohSgb
bst7th++X1Rt+B2PFFWDXotuYz5cFbXX77DeayPo7upRB5yMisVrfjLcEPQ2
+pma2X8eHwNJ5WAC3xeCenUz+jiohryW/A4a/TyoO6eeaYLb2HOvTDlZDK9j
7FfmBtBrUTnz3PmafUW90f5W+xsX4FNBteL/gJ6gN9Xf1svEuILvmVG1exEt
gB9GR3OK4XX4fNDb7G/aOfjFKN/eA94LdVF7vYYNfiWq1/0f8yqcCDqr39F6
jyXIt9ew1/LKqLfIfbrvDVG9dwKthc8V9G/xHJ6FN0bNeQ7WR71B/hZ5T4+G
R0W9vf7PmuD/u6C78n+W/7uuBf0r/I29Dv8PLvz6eA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.6039968389375375, 0.6893908694538315, 0.9619679901559367], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNWFlwnWUZ/pqWkLaxS0LO8f//74sj6YJJzUJTUluStramdE3rjAtYaSg0
pc4ALSg4dZlBB9Fb6o0zzqBj9cYLOwMuFy2EeqNThzCVmkBY1JYcCskQkIZE
ncTn8XmYcvHOe77t3bf/fPLQA5+/vyqE8Pi8EOYDP1kO4aeAbaUQegAbAN2A
mboQpgGXAF+NIWT1IQxErccAlwF3Yf0y8CHvv7QkhFeW6O0k4ECD7vKM+/xd
LA2hAvwOoBG/VywVrZm6a7R59wVAviCEMiAD/BXr44uwh/tNgInaEFYBN+Cs
BdC8QPQq5kG6XCfAGt8pAaaoD+RK9dfkoKyTRQgjoPmHQvRJe7VhhXmerw7h
ecBQtd5VrEMz9F8Het8x3gLYDGgErT/i7jN5CJtg672AYb+l3UYBSxbCBzUh
LAW+Cv2uAFqXhfAz7/Hs1kI6bAJ+BPAu7jwEvHih3tculJ1oL+5t9lk3cCNk
uhn0IvD7i0T3TeBHsxDuhjzfAE4468CdDPg3y8S/DbAD69PAu4Cvy0V/LpMd
M/vmA/CYha6/jHrH99SD7097TX/Qf/Qd73SYfnUuOvNzydjmM/qsUiubj9jP
9DffX67VeY4YvQFQD9iN+O0E7DLsLWtvDeTaivM+31sOWAa4UijGflvo/lrA
ZcTEvpLygPlwGPpEvP8mcBn3bgHP93y/028m8eYo8ATwWcAZwCDgF3gzjbe/
An6Hv7E3ESXXEUAf4ILvPg1YjfVF4Gbgp7z3LKAxKSfnJZ3xziggYl2HdZF0
n/HGuLvu49ARMGOaN5Ul1z/BuwW/m5Psdwz+uQQ8Pyn/q4D/FkWrFXhxrnxZ
lCu/Ss6f67FeDVyTy/drfPY43pwC/x8Bf9p7fNcfFGPnqpUnufOROcBcYD6d
9+/9gI+ZPvn0uhZtLClXVjgXzzkHSZu+2g74AmJyVZL+e4AfhRw9kOd7wPOj
3lUBP8IYxf6vC/mww35cBxptgM6SYpw5xfwZjvLFbuAawD14eyKqfrBGsoaM
us6xhtA3rwHay6oRw7DxeK3q25jrRR/k3gfYHSRjt+sFbcAa0WPY43qxx+tu
wAXQbQLfVYBDWN8JuAvQUq9YP2w4VC9Zewv5+rZCd6h7W71iq8d8d1se8jmc
iddAJt3yeuUA45cxNWXMGJtyDb1ap5p6MEg3ypT8jme7XEPao3h0W/d50KEK
MNeg/X2OgRbrcI/lfNp58l3XVtZa2oy1gjX2KecKdaFdaJ8bS7JHi/Udgt1e
YI4DXqyWnRmD7G+Ukbn9A+fsqSjg7//nsXvTlPsh77LPXXbf4BnjkbL3O6b5
m3tttnluW3e7LxCfdr3rdywxpmg7+pW23GwdWRe/Dzl+jvUPo/LpoO89CD8d
A344U3+O5vVQpvMHMsm03/bt91vS4D36ibxzy0ka+z8Sd4xZ9mHWb/YO9h32
pGOFeshkpjrNWjIGOI79cezfV6hXM/ZYbz5RiM6bhexOG/2lWm+TazrXI9U6
X+E6wfrPXkLe5HdvoX6yM6pPXvU+ZaJs7IP8zR7HN/TTJfuNtCnnxWrJOmIZ
Trifsq8+VqhPVYCbC/Xeb+WKmWHLt6UQnwcL9aQm96pJz0TMceY985+9nzXv
uO3AmDjn/XH3eerB3x3uuxctJ203ZruwhrAPTrietBTSsanQLEF7sUb2288f
5uJBryc957BWVeyrCdMeMn3CsPkssR2p57vufWXPMkOuv+OF7PuWbcYYoY9f
tJ2ox3O58CDwtz2HcB4Zc8x86IPzH5FjwvIV7heNjg/ep+wDnkUfjuq3z7o+
PMd+j1geLKuOs563uj/0uo/s8yyw1bWHNagG8HpUb30tql8Oun8u9vki0yL9
FsAdUbX+71E1h/vk32varD3b/Jv8SYs02fPnXENnG8R/zr+/lDSzfDGpV7N3
s+e3mifz/5L5kj/pcgZg7xuxLV4GfjWKzyvAt1uf0SgZuE89nyjLTm2mvcY9
pdV24/oJn7M3nnSPXA8Y8LxztHztjHe/wpkEfWEl8NEkuT4DvBbwY5zfkmR/
/iadm5PpJs1FpDngbxHe4d1/Qe7rgd+P6u0zth/PT5pOr+3d5llvm/3Mvs4+
zH7cad04o3ytLD6Uf7VtTFtvMC3SOeI7vDsG3hXQqBhTTsp7yn2WtK9aTspb
5ZlqQ5L9Bh2X7EkJEEvqLZyZV5Y0x2Y+25QURz1Jccf4IF3epf/pq/GoufMn
UX2yqyQ5mkyDfFbanzfaf5Sxy3ZZ7xy4PUnPA0lz9HLPyM9HyTgbZZPcPWJj
kp876duk+ak9Ka82+Ntxu2O+17ynreOcaZL2l5Pm312ebUmbPTCzLSjDmVx1
8mwueddZ/v9E3ftvFN1Z24Qz/WLn6UtR/vxUko1oq7eizmpsT9qS/mu1rVps
r66k+FvPHEyaD28CfiMqjv7hGb7P3xdt7rfUf8Jz/iRwQ1J92Qn8gXlP2V+M
1T77KnM8cD7JvfdeVD14O0rnw76/zD6inrOuIeS30XWAtud8uMq1aCbqzbRt
MOWcnfYsw7nnguci8v+c42CbvzWYO6xDT/q/AebzTutVl1R3z3iO7PeMzVk7
T5qztgJvT5L539jf4ZhemjQ/UhbKxLyu83dLl2OV8fzZJNm6EwdK5dGtSXYa
8iz3u0I96/fARzLNdfdmok16zN+Vrkt7k9bLzW/Ksxvnrq97juI8Rdr0A/Pp
tiR79ybZY62/GTgTcDYYAT4L3Q6CxjOsyZ57dhSq0+2uL4xv8uG9Lucf4/rP
UWd/cnzxG5Q8anN9W/G7v8N+aPf3Hn2dkurTEX/rXnFtYq1a4G9qflvzW7Xi
enXC3y+PRe2TF8+6bectSfEw5G+MA5aXct/nue7+Qns8G7XtZvz9c9Jz0jng
/wHawWnK
            "]], 
           PolygonBox[CompressedData["
1:eJwllUtsVVUUhndLW9pLU2rrbT337q1REx69SgABFSktPoAqaGKCStQIpQg4
KEUsGuMDVHxMxaEJaNSJA01UcEAJYEx0JEGRgogvTFup2hJeorZ+v//gT76z
z1p7r7X2Outc3bnx3u7yEEIvqkCjMYSyphDG8iGcgV9ACxtD2MtzvziFcKA5
hP0owGtY+64hhONoNfwHOo/tCBoWoxz7TUTn4Ecz9sC1Da2DtxRZz4XwQX0I
6+GnsImcl6GH4XFsCgSWoYpCCAOsDbD3KQnuwGcT/l/XhbAd/gSdgI+hYbiM
GBdy9irsv8R+kLVDdbYZggeK9tXaVfB72Fzk7GvweRu+Df9T5HoI3QoPsvZ7
3jEMwdtRF/ad6CW4l3jXkFsn2gzfhc89+K5DK+Gb0JvwTjQB7sLnXINzXht9
ps6OaBw+gQ5z1sfoKHwfPsuavecD8KusvYXvGLpA/GfQvMneU3t/EZ37I6gP
7oy+q6nYrIL/QRlnNaKv4IeSY31MZ8DHo+++D62EZ6IPuatWztsKJ2wasL0F
/8+ja6BavINegU9H99JF9Kd6JXqvafgcg0+iI3nn+D38WrSvcnoRfjc6N93J
y/DzqB2eTQzPRMes2OvRX3A3NV9N7XvQE5ljUmzqgSuJdQ/1OVobwmdVPMNj
0bVWDf6Ozkm5qee3RfeYeu0k+hXejM8o/XYW9cLTk3MpoZ95PxKdq74BfQt3
qz5XhFCJpsC/Fd2buqNRuIsYW4O/ibVwHz1+sMo9tI3nBnzKia0adcA/qoZ5
1+wH+GbWVmS+gwgvTz5rnPfL4I2cMUSsg6in6DW90555eH5yL2qPDbLP3Luq
oWr5OD61Nc75aXhyciyT0FJ4cTJfhpbAbdhcx7farGFCLvsKrrVy2guXoSbe
XY/K4X60szqEOs6YVnRNVVvNBM2GbjSccw7KRTay1UyoxHcpzz05z4Al8J3R
s0Q92hHdw+pl3cGDcCs2k2qc0yJ4feZZ9A3x7WC//ehIlfdcXHQOykU+7Tz/
FN0LuoNf4E9Z6691T+2Ga7Bvwb4kHzjDZla9c9jE+5HMd7GLnEs8V/K+1OgZ
Uq3eie5lzcwL8L7ob1czVrN2QsGzUDVULXMFn6Wa18KLkmfVYdSu3kSz4Dm6
YzhGfzuKKcHPormN/qb+/7aSfTXj2+AZrH2Ut81zcHn07JiCTqufomeTbL6F
FyT/G17XTIAPFlxb1fQAPJe1Hbx7A90Az0m21dpseEv07J+BnoQvRffW5egO
3v/Lc6HJM7nA88zk3DQT74evLbq26qkWuJozp1b4TnQ3tyfvpT2019nof5P+
efr3KSflpjsdgVuSv23VsATPS45dM/xGfc/R/zr9E/RveL/o2HWnutv/AMie
Cgw=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.7394486688024029, 0.7963821871772501, 0.9746649908316832], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
7M8038T3KEfs8zxdbDrOXJwf+N6AZaMu1KPHa+pM3Y9m1Y/Yk7d7XmXfPOK4
HExdzt0hy3jcvPnGXvd89mTakDN/PiZIx9lx0HlUYH5jCpU7+bzimnJ1p+Tz
M/7usdyU98pC6Zd1DeCdyL5a6vhlHFxp+h5DUqi9xG+Q/zOxfvM8HmuupYwr
Es39tDvzqdtysCY1mJ73PnM9/zwoXlmDGL8Vji/GWcr+oY/59hTAFYXKGe7R
/92OX8axzRDBHZf0neTfY4xV/kZkvez0jPMJYAPkmIbz5lixvNDx3OL5kHPi
Jv9WejFWjle4TjCXeJe14flYcjUBPwvI4nt1fNleU1xvhl3rxliuEp+RJuu4
6nfdfizW2R9i5RLjgPb9wL+lGGO3JJLpH1n9tmQMrU2kI/Wj3J2Wk/JOSfRb
rDzRm/Qh5Z9mOtKXmyZJ5BPKc871I+casj6Wbf8Ya4/25P3nrDtt8EnQnHJb
kC24v9G/U8r9u/qw5exwfFXYDh3eP+I3O/1uvXsQfdli/9D3x4PmkC7gX8eK
jwWOtbTtfdq50OVY5D2uN/u35Bb7vcG+b/BMze961zvmbM51c7Npmkx3wnHB
3lHlOac6iO8O0xf7N9oo/1ZnTHB9S1B/nxtEl9e7zfMtfZ2PG+pT7/rGPGmw
j5rcYxotE2sEa8Viz9NbrfMVzgvmxzrHLeP3U/8mYB6s9W/bp2K9y+/ItSbt
dYV7MnO9xH2MeTfgeKFMA/7faTDIdjXOrz73ta+C3p/o2vI/E6/gDw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVtsVUUUhif0lJ7YpAc9NLDPXlWJtiomxsRrlMQHFTHxRR98AIFogqVg
C6gIkYsmhosUi1igIl6IoC8GwgvY+KBiTEwkQRGC1wrYKCIlRbDlUqR+v38f
/uTbM2tm1qxZa+0JT817rG1USmkRKqA8T+lgTUr70WeVlHbz/XNdSt+gE/Dm
LKVbq1I6zHzGd0ektKuc0g60EJ7N/CT2uRc1w6vRKOyHOWQV3B62HYeeg1eg
J+FHSym9GN5Te8uHBngxY/cxdxuaBT8fXjsWzYfXYvNJbUrdqB1+gbEp2E5C
T8MPM9Z2RUqt6CF4QXhtHWqDN+JTBf9uQJvg1xjbzdwe9AZ8GfXB/Wg//Av6
uD6lA6gHvho1jUnpduaXhm1kO4CG4Quc+Sy+vIvNZL4H+Z7J91w0AB9H39XZ
xxXwmtx3+RJ1wIP4dBbfijzOELwu95z26IQ7Gbu+ym/SlXlP7T0b7YJPcuYB
fDmEzsDXMraz1jGbAB9jrIe79KLf4anop/qRMfhxbI7gW1eRGMF/KR7M9aPN
8JKKfXuf+YnMt47YH0UL4B+Yry7YRranWTPA2n34cwo+jc/bWHsS+/nYn9X5
zPUohvB1ufeWzc06X3vWOSf74Cr2HM/eORoND7NfoeAzq/m+zHeN5tAleBkq
EquxaB3czB69nP0bmgN/zppjo/Ef7a04J5QbivEG5Qo2+2ocQ8VSb6K76YzF
8A6tKfrNLmauIdWS1gT2U3Lnos6YDM/ABvy/Rl5S/qEr4Qa0FJ6KqpNtpsPT
Mtepxp6AbyFGdytfielh+JEwK0e/h7+o+C6qyU54Sea9lfPr4T9z17Zy8Bp4
HLqj5Bj/Db+cOVbyqQPeqhrgvB/Re/A/4dzSm+nt9AZ6C71BAX6bsYPMfYve
CteUaks9Yy08L1yLteh+ztumPeFzaHtY4n/RSrgLfQ1/hTbmziHlknK8H16P
usuu4ddV32gv/CnaAJ/J3Ut0R931w3Ct6kydvRptFaNX4InorrJjvBzeFD5b
e06Dx6ObqO0bUQVuy53LqgHVQmPu2lFONOn9sdkyxjFULC+hP8ruMUNwS+5c
1HrV3mC4FnoVE/h8mLXmAtw84p98yOGVmXttLe+1HD7PHgtL7kEX4Sxcm43Y
N+h8xlpKtjkFPxjuVfLxAXhZuLfpDMViS/gt9QZvynep3j3hBHw83Es0prlf
w73yEDoCt2f2TTW4Bj4anlPPUe9pQcNXUbdoDtwazg2NPRPu6ert+idMhzvD
b6s3v1O+h3NTOfcOPJS7F+qOuusH4VzSG5/j+yPdueR/xiLmyuG3VE+Ym/uf
pH+TbIpwhGOnnq/e3xj2VfHRW7wazh3901aFe6R6pXpen/zP/G+8B82C/wP5
jC3x
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.8542505228569386, 0.8866201951861383, 0.9859603715401809], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVmtolmUYfvULvjJin82s93ufkYecxVwyc7ZV7mC5pvuhqQRmWozCdKWN
FnSYFYkrnG6tOXdQpxNsKIWiPzRa5HT+aKw/igsssgNBfyIKHXlAui6ua9CP
+72ew33fz3167uedXrt5xaaJURRdAaVAS/BZCFoKunhnFI2Czpv60lobAZ0G
DYKakyg6CdyRaP6d9zszUfQ78DNgT4iiDuBe4LfmGQbtwnwr1juAr4Nyc6Oo
AVib0fguUCPGH2bEtw/0I+Qugzpw3g7MO8H/E+YXvL4cdj8DWpvSWbS3H3b/
kI2iSuARYDH2FoEqQS9Dz6VJUfQi8CXQKMYrgWch92Vavl0F3z+gKynx3o9z
Q0b6R+zPSuw9DVoFqgqy9Rr0/IJ5BfR03w75WPNDwE/A8w542oA7QEfh66dB
cR61P9dinf1brLWLjtvBWP71AR9yvAqAb+O8BoznY3w8LVtOAfeDbxnGe2LF
ZqXtXO7x+BrnK0DV3qc/p+3jMeg5AP3N0F8G/X/yrJwougnMT+TfLOBsUA/G
zwLXgy8P/LOAxUF5fCzoLJ5T5TPXeT4NMudwTha4BnxN4N8NbMC8DuO5GHcm
yncb8I7bouhv5+ZqojyMJaodxuQV0JwgLDROzdX+pqD6qg/KNf08kVYOmIud
wJ+hqx4yRRi/Cfoc6y3AN4L0NAO/Bs828DyBcQlzgPG8oNhccC4POe9/AWdi
bzV4hiB3xvU1AHweexNw/9YAb8by7RbwUlb1czArG5kH2lkH+e9Ri7nQlzjO
jHd3onvXlyivrIOjadUN64c1y5pgjr8y1nhMfvKytjKQP4xxbiLiOAe4Fjax
XzwXK8fM9YZEsWGOGK9lzilzy7uS5/vyEX3E2sexclHnfLwKuycCXwvin2aZ
FvDlgv8D4F77Rf/Yh/rdi846b7yrT2JvEvRsDupfZfaNNvFeMK/1RtpbgL2H
QXNALb7z2xPF6EhadX/SfWDAcWc8T/k8IuM2lFY/GQYOgspTWjvh2FPmmMcn
LLfK92yje856YCnmJbaHfYYxY46vuMZZ6+/H6tPrYvUs8j2QqGdX2Oe3YvHf
iHUufWH+Au8I8Jus7B+35ajtO2y7jrsW6BvjR592J+q9vYnq94WMYn3GsRl0
LAY9L3ePHY/NAsen3PpqvEZ7hm0Tx4l7wBnHdcj756x7yHuULbV8DJlCjLvh
75aM7mCja4s1xlyXmJ9yfIt2gbr4NvlNYb/Ox94s0IOgp4L2FgMXBOltD+pZ
S9wbZ4BmguZ6XOR5C3hbM+qVM7zPOqvP0TmX/S72Z/ROkr/DMrSdZ/FtKPMb
xZjNT+nd4rwNfgbgu8CxlHoL+++I65a5rLAM+f/webw/HT6P/nOdvvd43umY
tLnHdgF3x4pLB7AryMY9QbKUo973sHcLTaEp1t3pd81tx3wSZJtj9f4mv+PT
nWP2e9YRezV7cWes+LXH6gerXWNzfScYw8m+/3cDN8KOCdjfEKSHOshf5fzw
ndll++kH88F/BvZr9i3GrMJ1O+A7ne8csg66HBPmqRXyU7G2JZY9hbapEfMM
cGesuljqs7c6j6xDvgPMPfNeGRTriqC8VvqeVHjMnF93Xr/IiqfG61PdH3+F
748H6S7luxor5lOwfiDI3uogP4rsyzy/TY8ExaDZ9VZgP3g/7nEcZwedWW1/
tjluzF+J6/DRlGLI+PG/Ks93MPZ72OT/tny/d3z3Fieqmz2JYsI3knHZb5tp
O/UW2J6FQbVaHtTfymzPMb/1fPOvJ9Lxb6J/Eeq8keieF1vPvqBc9gLrXDO1
ifoj++RYrBgU/q9HLLJ8u/9rW4HZoJ58n+0s9h3rjVWTk31vzvv/baljyHq4
N+hdmxL0TzBs//8DDc2N8A==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtslVUUhU9bkpbeNNxwbeG/5xAsj4LRhhifBR+gvGYYHYFWY5UArbYS
amKhVYIBK/QBFvqklTKQQDA4Y2Tic9KEiQNJwIhiTJwQE0OLaEL4VtYdrPzr
7L3PPvvfr/qWjpfby0MIrWAeeD0LoYKvZM3wHlCHoBJ8Cu9MIRQKyMA++DFk
1ejuceFD+Glkp/IhjIJJeAeoxrYGtMPHsGnEfg0Yh7fEEMrQPYj9IvT3kM0n
kH/QfwDvRf9dZQg/gnr4VLLvc+Bz+N/Y/I7tHJiFF5BdrQ4hoS/Cq7jzUy6E
X8EIfAE4j68LoBb+AjYj2J4EG+Bzmd+eBf/Cn9M/ojsMvsb+j8y62+AOvA/Z
5ZxjVKwPY9+C7RugFv48GMjbxxn065PfkuzZ5BgUyzlwCH8rOF+r9j+8BX8T
bED3M+fW6JhmS//7X+YcKpfLwQh8R+balYHXMudkrvQ/d+ET+PiLeP8Ep+Gv
RPvWG9eLflNvS/Y2/DB3VnM3A8fhzyTn4hB4Al6fXDvVsFX/xp0b+P4FDMMX
J9diCYjwp8B+eCfoQv8o573wNsk4r0323Q3WwSfAYN49Na5cgou8dQn0wc8S
8/pK98Bt4nugFM9SUAdfmfy2ZIp1CPTAP1bN4WuS394NHlGtk3tbb7wPX5Vc
y+2gAf54cuyK+TfivQsmdV5APeDF6F6dAZeJ7ULRuVWM1+B70I9XWabargRj
VZatgn9ZdL0ka+B8M/pf1BM74Y3JsarHHtIsRPe2cq7cDyM7gq5POeM8B66g
+xYMwaPOvN3EG4vVT9Gxd4Jb8F5yWFbhHfAR/DH8deVdM9VuGlkzykv4qIv2
IV+a6SXwCfTb4C+BM/At3PlCtQMbk+/ormYwDx9JjlU1Hk3uMfVaAifgJ0r9
opo9qd2CrKHCPaneXIaPmZz/8Sv4UOZZkM1J+HR0r2vGNev9yPLoloLPMkO8
AAbgC7GfrvTO0O6Yiu5lzcym6H/SvykHZzPvRO1G7cCj8COZd2EN5z74wcy+
tUMH4Ufx8X3OO+MYvB98k7NsAD4YXSvJpNtNzOUFz1cb/N3SWTv1RdmX+lE5
Oq5ZSt612tHvwZuSZ0k1fBr+Q3Qvy4d870n2rfM7yTErdvXAJ5qn6N2knExx
/j+6V5Rz5X5r8i5WjVXr/uTZVEyKbVdpv2intMEPZK6tatAN35TcG5qhzapv
8myqh19NniHNkno2cf8+E9HlpQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9379130988418831, 0.9532162712910223, 0.9899811081901548], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVUlvjWEUfqPh0lvVSod89/0SQxrSICKIear6AwS91Ug6i2pvExYkbGwN
3ZSW9lbbRYUiadggpiDmsLBpLVRbuqrhVolE8Dx5jrA4ed7hnPOd9znDN6ci
sbVhknPuGCQNEvHOnYw4Nw1Ym+Vc/nTnYpBMSCP2eyF1oXM7gHuAzdA9FZFN
Ag6SwH3A97Bvz3RuAPgtw7lxSAryNXBuBPfdMeem4q4D+jOB43b+EVgBrIZU
pmldDqmCvPSK5wUwCjkO2wzgSNS5JqxHgdfg98QU5/qAPTjrjMjPQUhLRPH2
pztXHJFelde+Eng0kE2u1xuoT7tm7N/AdyuwLk13POe6wfbtgeJhXPxm0vjg
tzttnYW7UmCexfw5Kpt680N/ReD0C867oNMNn2W0DxRLa+Qf3822/467t9AZ
Bg4RIYPGX4XxVm55ZD7vwu8v5KEI+DtDa+amxmKlXbFXrq577emjlrmJKpcT
kN5AHFwI5It+7gDXhdLbCPwRKJaJQJyS2xnAV1419dzrjjqfgKlA8Q8Bq3F3
BHkZ8soNc1RgNZWEnDXhmrU4ajVAbrjn+fYsccTc8fxMpuxp98FLZxi4ArHu
h+5S4OxQdu+83lwCiUOeYZ+NmB97+Wr6r+YbjOsBi28EOOjVL8tCcVhrfnqs
HmuMO3J4GVgAvRLozwKetnpj3cVNlz5Sxj1zcBt3P4E3gU+8+vMR8IBXjy4J
1cOMMd3rHbsshvP43hj8n8P5SuhNhe2qUDXLfmStHfLihNwsD1Ura4ED6KvN
uL8I3OLFewdzG6h+LwXqT9bba/Z3oPrPwToX9rvhcwFwnr13vnFPbidD8kLl
KQd4w+u9Sa8eYC+0AfND5bAC5wtD1fXiUPel9saU1TXrstH88zusI/b94XT1
2Zj1YZnZkaNsm3XklFz+nX99NluuAFtsdnGGrQmVi9XATda/7GPWRcLmQ2Go
PlwUyq7VeC61/MZNL2nnMfs239Zu86KNdRHT7NqG9U6vd1zF2UMv/p6SK5u5
G/CtUuujuFeNNtg8rTfknrU8YrOIvUvOyUu/5bo3pnOe8W2FXnmcC//3vern
ntf/gL33wKvGE9YXeTb3umxGsd85s0atL1nrt7zytR4+/gCoXvcF
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElsjWEUhk8UV3p7r1tK89/vT0wNGkRMiXmI2liSKiVCY0g0hoQFCRtr
QyRC5ylRotiwMRPEmLCQSHWh2mKltEUiETxvzl28yfOdc77vnP+cc++kqv3r
9g0zs7VoOOrJmtWmzY7lm1UGszGoKWHWiArh9agM7sS/A54Xmx3MmI1Imc2F
m7F9TZr9LDC7BdegLs413Dmjt9CXpNvOwXfQP2L/oHtwKxrA9x3VwgXoRMLP
dfArlCVXMXoN96GGtNes2h9yHpXyep7A17EdpdaTI81uwIti9yvfEng5GoJ/
oRbibwf3KeYRvC34ffVjJ7yS+P6k17gKXhH7XdmWwbPQdvqxG82Er2U9t3r2
Dr4SmVXnmR1GHZH3TLUq30I4RY6zxJ5CCXg+tgMZ7/ERznM478m4rTt4T9Vb
zeg8vDj2+tXTBXC9epT0nq+BZ8dem944xPkmGiT2L3oAT8C/EV85mgi/Dd5r
fdN0zo3BZ6s7ZfAMbFsz7i+NPUYsWyn+abn3dB4X+ww1S+3IRb6/FVXSiy2o
LfKZy6+aG+CnKJ3ymb+BNwWfhWZSAV+mp6sT3t8uuAhbC9yOjke+s9pd2Zo4
jw7u20W+sfDS2HulHbjL+RkqTHnO5/A37nQT24suRC5xH/oB3w/eO72hXe7J
+XvQAFyFrY7d3MD3V5OrKPZdla0YfhF8/sr5Uvdz36eY8fh7eeNDntfwG74a
+e5oR7Qr+cF35TRKwx+Dz66R+5/hx8FzyzYl9h1Ur9SzTnhybn6aUQnclvVv
k/89XB/5bDaj5sjfKM/FT4U7cv3XnSH8JcH/GzQf/XYuYdub5zvfHnmNqlW/
6YbIZ6BZaAcycG/w2vWb/gT3R/62ejoI/weN2LQ5
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9742600326844013, 0.9803237550381304, 0.9284552299933647], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtk0tIlVEQx8dHCeKVVsH5zgXt1iIhaNW2VbtaSCCZyxYRFUV4NYhu1we2
Sci2obiJErWHj00PyhB7WZrX6CYRkakggZAhGD1/w8xi+J0zM2e+/5kz345j
Zw+fKRWRRqwMm48imZTItUSks0Ikh13E2glegZfgBrFTrH8n5utyf3W0fWW0
sx3YZSzFvoX47WC+Tq/Z5XH19RE7B/9Qc5B1lvU/1jdYX2Bd4jXasCzWvVWk
AK/CR8R+VYk8gcXEYndgRcpqamyKWDn7p7AW1mA7sSb2bZUii+TvTpvvHb56
LIu/Cf9osPuNw+vRNFfBXWmrlYF/E7tTKf5vwbQtw0b2eeocjKZH+6aa7hLL
kTMCNzl7At9P+NjvonfKE2/2+454/lgwTartEDk/2M/iH8K34HfXHiwQ28v3
3sPP2D7WH+Eytof1V/jB10W44vlf4LrrUV1v2Qf8z12Xate30XtoPzVPor3h
lmjvo7OiWmvT9t0aWIjW809wnLo96ByDD3xW+qP1TPXrfbRX5d6v43624G+4
zb+r38p7f7Tv2v8y2Mr+JHYeW6U/M3AJHvG3OArvJTY7/XAoWO4wPE0sRf39
sC7aPOhcHIj2L/TB7+S9IX8R3go2DzoXE9Fm9b6+tc+rzv66a1iDN4NpG4AN
xLZTfybafOW8d/rmra5f51Lnc4mcUe/bcGKzpf0qwkmfrYfRetHsZ+f87Z7B
3mD/ZrX3MuPzPx2tn6/grOt57drb/X976T15Af8DX/+cjw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk0tsTVEUhhe37kmrNzGSnLOb1GsiadKRqYiYMRAh1NBAGoRIrkga1SJM
SDDXdCKEerTVCRL1iLeqV1QrCErQxKBi0KjH91tr8CffXnud9drrzN+0Y832
mWa2DNWgl8msuWLWhF7BH5OzbJ/h34XZzsxsK/oJz8DWBlfR2dzsDucc37lo
HbygwWwevBAt5jyOz+OS2RD6Ajdyv6TiPovgt8lZtnfwOXx247sFnYJH0DN4
GH2Dh5Qj8g3D76P+/zGJ9z3yyf8HfIGaj5TNjqI+uA1bJ3ft6CL8KHks9fAE
Xok66syO4d+P/zjnTs5VNKb6Cr9TvN7CbbrTzD7Bb1Bj9Kfe1sb3irkBrkeH
mN1BNBteiiqR/2nyHlW7evgKd2M7kPk3pzlf5Zzh+6ve7Bp8A9VU3HZLjNoz
f6OT+A+gvSXPV+buXuSbgx7CN5OzbNvgS9Gf6l3PuSXmoR42wpfj/ZVjRfIe
FPswOqHZxzz1Rs/hrqhHPVyBP+S+C+pvEq7Ftg/ehTL4buyT6rkP9xQ+D73h
KDwS+6mZr4YfRP2awW14FtpPrj3oD/7dhb+VdmiCfKXkd6pJs1qefJfV03X4
eOG16w03ax6574pm2A+fz73WKjqT+04pvmY2AE+h1sxr0mx78eko+c5p914k
/zeUQ7usGIqlne+B65LPUjPRbP4WXp/+wS7uB5O/vWyq/XXy3dc/MApPF/6v
qoZJeFXsp95Pu1iO99KMDP4HuZKUsA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9902329126839654, 0.9902290726391945, 0.8115294434458064], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkjlL3VEQxSd56gPBD/Duv5Ao2ghWqSy0sTKuDw1aiRYGQojCA0Wxc4sh
uHwAsVAQRYhoIE3SWFiKEoyGuIHirohERVHjb5gphjP33Lkz587Mq+bW5MeX
IlKKxbD7IPI+LnIL5mJf0kS+J0RmsBT8i0hkFWvELwYXsWb8O2IHSTBC/Cew
Dr4Bfgk85e1PuHFivuJ343eBx9gq/gk4x11PhsgseO0aHsF5rBf+DXk646Zn
GMvg/Jm333g7mbC7NDhxXu/nE6ZpAazh3JEpUhZZnMbHwAvyN2ktYjY5F2aJ
rIEtWDX8KPfTrmECnMLayVMZmY4hbIAa9ZxT8LXgiOfU3HrfH7OYA2q8hT+G
LwmW/wAsxhaIK9L+YBXwu+AGuQrQ8xusiqyu1t/Gfw2/BU56387Ine318oL1
VHu7DuYEy5MkfoxzG/n/wx3hrxCz733SvqnWp2B60yObucarvpNgc78MNj+d
41zCtKrmPfAGe4f/D9zxuW+Bfb4bmv8w2G6cghPc/YDbAPNdv/7jg++V7teV
53zQnP537cG5v10Df0XW2+XIZqCzKHf9ql33Rmee8h2q9n1Yj+yv/f7/Ip9F
aTBONQ+6Pq2lNf/4nvwFnwGM9oQf
            "]], 
           PolygonBox[CompressedData["
1:eJwtkr1L11EUxk/+LEH4/QHfeyezWoImhyZbmnrThKJcIoeEiBKEJGjrPcTy
D4gGXYrA0sChWmuLNEylxKFSzIbo/c3q8/Tc4YHPvfecc8957m3pOdV1siEi
tqNG1JUjttYjBpoj9sNrKeJ4U0QfulFFTKArtYjL6B78gfMjnB1Gy/B6ci5x
dhUFvBud3xDRT71D2TnKPYvG4AE0BT9Dy/BnavRS6yi6Di+hTngvGoN3oolG
9/MLXkfNfvgMGiW/m73Tze6/k7PH2b2pxyn4b3Kucm4Tv8L6YJPv2AH/Lvdr
5i/we2LO0f8j+luEZ9DDmntW7/uy79N8T4hfqByrmBH4AboAX0SbOL9f2Rt5
OA7PlvkV/xaezp5V/RyDF1Bb3Xs6Gy5+qOfnrNuzZ+tBJ+CXaFvdOYvw0+xY
eXAguwf1MoSHW+DXybX/38H5i/L+qjGfvddW1q/gmVJfMRvJrWV7f416DXBL
Mg+iVvhmsh/y8C48kvwftB5NfsO+4vdPeDW5V/W8VLmm6ulP/eFsV/bbyvMO
+E5yLdUchz8leyFP3iV7Km/Vwyr8rfxnvfFXeK3yX1OOcvWGekvVuwXvyV7r
Pv2t78nxyv8IT1aeVX+ynfWbyn9Zb7oC/yj9KEe5m5O910zyarbMIz/n4H9J
aosP
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9944642886988501, 0.9905679982101347, 0.6388501711990108], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkc0rhFEUxk9M7JTl3HdjfO3ZyiisZAxToojyB7BU/gCKlJU1DcqKpCxm
wUKRKOIdC6+xwPgaRUSR8ruds3j6Pe99zz333OcmxiYy42Ui0oTK0YoTma4Q
ycJnNFIp8gETaC4m0gC34WxMv9v4TlPzBH/RJmudsBHN4+vhAZqhZ08g0mo1
zXAIXeB7YQfawo/CVZthEX6hS9a/YTEu0s9ZL/iIXkl8CtbZbH7GY1TN+hF8
t/lfYd7p3nt4iKrw+3ADdeOLMGkz7HBOAe0RSB4+oBx+0ntqBql/c7rf96mB
JVt/dJqXP/eP+gW74yf8sbv7nNKB7u2Ca5bPEhy2+w7AZdRCzanTXPxs7XDd
6n2uKcvh1ul8fs4Q1trekP+R3fEc3tl7FZzm7mebcvrP15zAvkAzzMAzp/1D
mKXvLv2v4/qu/n1z+MjWr+CN5VaC/3UBYrE=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkE8rRHEUhk9G7KYs53eLjPgAtgolGymZ0iiy8AHMt6DI1pqwsJOUhQVL
yUJhbK6xYfyZmbIQZeV5O2fx1vP+7j3nPecMrtYqa11m1o+60U4yW+8xuyyY
NUpmD+gcvkMd+cxsrNdsHOXwAP9vUriNRuB2yWvV4wD/hL8o+NszfM1bH7VF
dAU30Sw8hybgV7QQ/gWeRqf03kKT8Cg6hh/RMlyPPGXk8Ddv9/H9B/5Nzqr5
g8/45yT6DeG/0CJZK+gT/kierRma2jf5rtp5D65kPr98GV+N/spcgvfjfhvo
CB5OnqUb6Vad5FnKbMOt2Ff+DW5Evm6Sw7vJe6nnYfIbqJ92mILfY371qMMz
md9WM87Dt8lnlb+B/wExBE0i
            "]], 
           
           PolygonBox[{{6861, 1868, 6831, 6880, 6881}, {6881, 6880, 6883, 
            1854, 6865}, {6778, 1236, 6800, 6894, 6895}, {6895, 6894, 6653, 
            1886, 6897}, {6619, 959, 6563, 6616, 6617}, {6688, 1806, 6991, 
            6823, 6824}, {6824, 6823, 6990, 1671, 6822}, {6715, 6714, 6724, 
            1200, 6717}, {6617, 6616, 6637, 979, 6618}, {6722, 1202, 6718, 
            6714, 6715}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9909034214607293, 0.9809772459881381, 0.41916193942999375`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkU0rxFEUxg8Gqykr5a5YYjFlIy9TIl9ATZKXhQ9ACWEzO4mFjRQrFiQW
mi8wGyUzXsaQf3lJFGVB8g38TvdZPP2ee++Zc848/7bp2ZGZWjPrRHWoP5id
pswm4RpqqjfLw0V0z/0SvPT7RrMzeIHS+DIstZgd0+QN3nDu5b4Ej1BHg1kr
fOKtSM0jrKIT/DJc4C3FrDn4J/8LX9QzgVeaexvi773PM0w4N1P/BedRDX4T
VlGW+ne4rppV+Kq52/h97fkAD1A7e+7BHfkyteP676NwTN7zmEAJvgtOyedg
jzL0LIdQAT8Av7XbT4hnvx8OcT/f8xp+KPNP2Kc+g/BcOW/BO9VXQszIs1oJ
8c1ruuGuMs/AQ3n/DhXl6d8qq/4+J6+5G/AfCs9PJA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkD9LglEUh0/6plPgFNy7NeYSNAZ+CSEiMAc/gEK09AUkXNoENxtysKFv
0BIE/kF9ectFfc1BaNChb+BzOHd44Ln3nHvu796zWqNcz4iIhwjukHdkDlV8
C4VjkVOY4104z4kUoYfv4YhaBP94G96y1vOKN72d1RlP+K8T6VP/gA0+ZO8k
Tx3G+ACuwnqEf3pz7fnCL71l04wl/DqsE7jFn0MevbOFz8J5nfmC/4U82rPD
771l1/UD/ugsv2ac4jfeZusdFb0r5NeeFF+zl8ISVjB09natx872tJbAN1x4
+zvt6eALZ3+hM5f4T3h/CWJ86s11b4IfANBjP2k=
            "]], 
           
           PolygonBox[{{6776, 1235, 6747, 6736, 6737}, {6752, 6751, 6722, 
            1199, 6713}, {6721, 1201, 6723, 6751, 6752}, {6853, 6852, 6688, 
            1578, 6810}, {6868, 6867, 6861, 1853, 6866}, {6711, 1805, 6856, 
            6852, 6853}, {6737, 6736, 6778, 1284, 6773}, {6795, 1296, 6884, 
            6878, 6879}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9635156136821711, 0.8885917393879872, 0.3127654779638171], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkL9LAnEYh1+02hwd7rZcTZwkGhtDFw8cGpRoEEH0oh/QjdamoqNaf0PO
rhJJKXp6GLhENgr+ET1f7h0envfee7+f73t3fO069YiIJCAKgS2yPxBZ4ybE
D0W6+Aw29K+wqzM13IeTI5EkvoSAfgH/QoyzLdOzRIaEj/Adz0K/bYdZJvMc
Z+CD+gI/QJSZPPa0vjHvIcVdp/hFa9N71bpnh2fM/COeaOY7LsE3dRH/6G5m
xxx80nfwSvecYh/eqD0r3MnkZPFAvzeNK7CjX8ZPmtnAz/rfOviP82Nytnim
d33hqs6Y2bnetcQLzfTxvf6rW/wPBe090w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkLtKg0EQRgcT7SxT/NtZJ2KVQvARUv1gGQuLEBCNJLFIZdLkAkJKL29g
kdRpRYR4TfyJYBOwFXwIz8dOceDszOzs7OwcN9KzDTMLkIdT5A/5hTp+CBn+
BUd4CnP8Ccr4NexumZXgBn8MMaeaV3zl/bY3zdb4AUw5f8M+PoA+DGEEeyH2
Us87vBbiLOpXwX8Ss4ec2T0842NiBXobtPEOsQm5KXwmsUa1ii3wWRJzOr/j
L37Wm7fcX/p93XnDiz6PajL18/9rpg/8KsS3NcMJfg45n6eFNz2v2AVeDXGX
2oF2sfD/aUcZ3gtxVzo3fCfazSV04R9qs0GX
            "]], 
           
           PolygonBox[{{6805, 6804, 6711, 1581, 6811}, {6798, 1301, 6794, 
            6790, 6791}, {6742, 1234, 6745, 6774, 6775}, {6775, 6774, 6776, 
            1283, 6777}, {6784, 6783, 6795, 1293, 6786}, {6731, 1221, 6854, 
            6804, 6805}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9278788839143223, 0.7517708381971959, 0.2608278609785335], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6767, 1259, 6785}, {6791, 1295, 6798}, {6734, 1256, 
            6744}, {6775, 1282, 6742}, {6702, 1185, 6611}, {6786, 1292, 
            6784}, {6592, 921, 6590}, {6712, 1188, 6707}, {6777, 1282, 
            6775}, {6808, 1185, 6807}, {6756, 1256, 6734}, {6590, 921, 
            6586}, {6766, 1259, 6754}, {6603, 940, 6582}, {6789, 1295, 
            6781}, {6771, 1279, 6768}, {6760, 1256, 6765}, {6811, 1188, 
            6805}, {6793, 1295, 6791}, {6610, 921, 6699}, {6761, 1259, 
            6766}, {6604, 940, 6608}, {6782, 1292, 6780}, {6805, 1188, 
            6731}}], 
           
           PolygonBox[{{6784, 1292, 1295, 6793}, {6765, 1256, 1259, 6767}, {
            6699, 921, 1185, 6808}, {6759, 6758, 6732, 6733}, {6764, 6763, 
            6787, 6788}, {6710, 6709, 6729, 6730}, {6807, 1185, 1188, 6811}, {
            6768, 1279, 1282, 6777}, {6780, 1292, 1259, 6761}, {6585, 6584, 
            6605, 6606}, {6611, 1185, 921, 6592}, {6739, 6738, 6709, 6710}, {
            6797, 6796, 6763, 6764}, {6754, 1259, 1256, 6756}, {6781, 1295, 
            1292, 6782}, {6733, 6732, 6738, 6739}, {6707, 1188, 1185, 6702}, {
            6785, 1259, 1292, 6786}}], 
           
           PolygonBox[{{6730, 6729, 6731, 1188, 6712}, {6769, 1279, 6771, 
            6796, 6797}, {6606, 6605, 6608, 940, 6603}, {6744, 1256, 6760, 
            6758, 6759}, {6788, 6787, 6798, 1295, 6789}, {6586, 921, 6610, 
            6584, 6585}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8908302700625692, 0.597167578239898, 0.23061844015630784`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6603, 920, 6606}, {6740, 1223, 6753}, {6753, 1223, 
            6727}, {6712, 1187, 6730}, {6704, 1187, 6708}, {6782, 1291, 
            6781}, {6700, 1184, 6594}, {6585, 920, 6586}, {6597, 924, 6593}, {
            6702, 1184, 6707}, {6606, 920, 6585}, {6728, 1220, 6726}, {6797, 
            1300, 6769}, {6612, 943, 6588}, {919, 943, 920}, {6733, 1223, 
            6759}, {6710, 1220, 6739}, {6708, 1187, 6697}, {6599, 924, 
            6695}, {6789, 1294, 6788}, {6759, 1223, 6744}, {6764, 1300, 
            6797}, {6592, 924, 6611}, {6761, 1288, 6780}, {6695, 924, 6597}}], 
           
           PolygonBox[{{6757, 6756, 6734, 6735}, {6730, 1187, 1220, 6710}, {
            6727, 1223, 1220, 6728}, {6611, 924, 1184, 6702}, {6726, 1220, 
            1187, 6704}, {6766, 1258, 1288, 6761}, {6581, 920, 943, 6612}, {
            6739, 1220, 1223, 6733}, {6707, 1184, 1187, 6712}, {6781, 1291, 
            1294, 6789}, {6780, 1288, 1291, 6782}, {6755, 6754, 6756, 6757}, {
            6582, 919, 920, 6603}, {6788, 1294, 1300, 6764}, {6594, 1184, 924,
             6599}, {6697, 1187, 1184, 6700}}], 
           
           PolygonBox[{{6762, 1258, 6766, 6754, 6755}, {6591, 6590, 6586, 920,
             6581}, {6735, 6734, 6744, 1223, 6740}, {6593, 924, 6592, 6590, 
            6591}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8566837398625118, 0.43670164032226444`, 0.2019137193484561], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6589, 923, 6574}, {6581, 923, 6591}, {6740, 1222, 
            6735}, {6755, 1255, 6762}, {6612, 923, 6581}, {6728, 1219, 
            6727}, {6757, 1255, 6755}, {6591, 923, 6593}, {6704, 1216, 
            6726}}], 
           
           PolygonBox[{{6726, 1216, 1219, 6728}, {6698, 6697, 6700, 6701}, {
            6708, 1186, 1216, 6704}, {6753, 1252, 1222, 6740}, {6595, 6594, 
            6599, 6600}, {6574, 923, 922, 6596}, {6727, 1219, 1252, 6753}, {
            6600, 6599, 6695, 6696}, {6696, 6695, 6597, 6598}, {6588, 922, 
            923, 6612}, {6735, 1222, 1255, 6757}, {6701, 6700, 6594, 6595}}], 
           
           PolygonBox[{{6705, 1186, 6708, 6697, 6698}, {6598, 6597, 6593, 923,
             6589}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6600, 927, 6595}, {6596, 925, 6574}, {6701, 1183, 
            6698}, {6698, 1183, 6705}, {6589, 926, 6598}}], 
           
           PolygonBox[{{6574, 925, 926, 6589}, {6595, 927, 1183, 6701}, {6598,
             926, 1180, 6696}, {6696, 1180, 927, 6600}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6596, 6574, 6589, 6598, 6696, 6600, 6595, 6701, 6698, 
            6705}]}, "0.0000138`"], Annotation[#, 0.0000138, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6588, 6612, 6581, 6591, 6593, 6597, 6695, 6599, 6594, 
            6700, 6697, 6708, 6704, 6726, 6728, 6727, 6753, 6740, 6735, 6757, 
            6755, 6762}]}, "0.00001288`"], 
         Annotation[#, 0.00001288, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6582, 6603, 6606, 6585, 6586, 6590, 6592, 6611, 6702, 
            6707, 6712, 6730, 6710, 6739, 6733, 6759, 6744, 6734, 6756, 6754, 
            6766, 6761, 6780, 6782, 6781, 6789, 6788, 6764, 6797, 6769}]}, 
          "0.000011959999999999999`"], 
         Annotation[#, 0.000011959999999999999`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6604, 6608, 6605, 6584, 6610, 6699, 6808, 6807, 6811, 
            6805, 6731, 6729, 6709, 6738, 6732, 6758, 6760, 6765, 6767, 6785, 
            6786, 6784, 6793, 6791, 6798, 6787, 6763, 6796, 6771, 6768, 6777, 
            6775, 6742}]}, "0.00001104`"], 
         Annotation[#, 0.00001104, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6625, 6624, 6601, 6607, 6521, 6609, 6602, 6809, 6703, 
            6810, 6853, 6711, 6804, 6854, 6851, 6859, 6857, 6862, 6863, 6866, 
            6868, 6877, 6879, 6795, 6783, 6792, 6790, 6794, 6799, 6772, 6770, 
            6773, 6737, 6776, 6774, 6745, 6741, 6750, 6749, 6716, 6713, 6752, 
            6721}]}, "0.00001012`"], Annotation[#, 0.00001012, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6618, 6617, 6619, 6620, 6614, 6622, 6806, 6821, 6816, 
            6822, 6824, 6688, 6852, 6856, 6858, 6860, 6864, 6817, 6869, 6865, 
            6881, 6861, 6867, 6876, 6878, 6884, 6885, 6870, 6888, 6892, 6893, 
            6897, 6895, 6778, 6736, 6747, 6743, 6748, 6706, 6717, 6715, 6722, 
            6751, 6723, 6720, 6725}]}, "9.2`*^-6"], 
         Annotation[#, 9.2*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6587, 6692, 6694, 6687, 6693, 6689, 6691, 6583, 6718, 
            6714, 6724, 6907, 6906, 6903, 6902, 6900, 6800, 6894, 6653, 6899, 
            6890, 6896, 6887, 6891, 6630, 6889, 6719, 6886, 6831, 6880, 6883, 
            6989, 7132, 7125, 6690, 6994, 6993, 6986, 6991, 6823, 6990, 6855, 
            6825, 6819, 6820, 6636, 6623, 6621, 6563, 6616, 6637, 6613, 6519, 
            6631}]}, "8.28`*^-6"], Annotation[#, 8.28*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6576, 6522, 6575, 6577, 6579, 6578, 6580, 6918, 6912, 
            6917, 6910, 6914, 6915, 6916, 6564, 6913, 6570, 6911, 6557, 6909, 
            6901, 6908, 6898, 6904, 6905, 7106, 7020, 6974, 7121, 7110, 6997, 
            7118, 7123, 6801, 7014, 7122, 7133, 7134, 7135, 7131, 7129, 7126, 
            7128, 7127, 6992, 6746, 6988, 6996, 7000, 6987, 6834, 6828, 6832, 
            6815, 6635, 6629, 6615, 6634, 6633, 6628, 6632}]}, "7.36`*^-6"], 
         Annotation[#, 7.36*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6568, 6566, 6572, 6571, 6569, 6573, 6925, 6919, 6921, 
            6922, 6926, 6556, 6923, 6924, 7066, 6567, 7071, 7098, 7069, 6980, 
            7097, 7104, 6978, 7103, 7100, 7102, 7099, 7107, 7105, 7109, 7114, 
            7115, 7112, 7113, 7111, 7120, 7116, 7119, 7117, 7124, 7208, 6953, 
            7202, 7204, 7199, 7200, 7137, 7142, 7139, 7141, 7130, 7140, 6882, 
            7002, 7001, 6999, 6835, 6836, 6833, 6830, 6871, 6873, 6827, 6643, 
            6638, 6642, 6626, 6641}]}, "6.44`*^-6"], 
         Annotation[#, 6.44*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz71KAmAUgOHT1maZGmZLJEpURGXYfxl4A3kDYQlBUEtLq3cgRD8Y+QMt
3YNbV1FL1AW0FNLW0/Dwfudwlm+mfnF4PhIRNTrZiDZd+vTI5CLGmCBBmqZ9
Sh91XJOMckuLO665+b+hSpsH7ulxMB1RYZ8d9uja7+pAt3WNTbbYYJ0VVilz
5a6k77qsl7qkCywyxzxpihSY5cXdqZ5R957UFBk+zA2OyHPMCTXepiKeeaXP
t/8/8cUPv3wy5A9LCSyu
            "]]}, "5.52`*^-6"], Annotation[#, 5.52*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0MkuA1AUgOHrGWyqrUQleAMvYFxbWCgSNk2LliCRGDemztWJGl9AYmfp
iSwJ2ojP4st/FveexUms5uayfSGEQ5IDISyywBLLHHPBOUXOOKJAnksOqXBC
mStKHLBPjSqnNGnRoE6bDjcMxEIYJEKMt2gIcX3VqA6R4IIiBfKUKVGhzicf
vDBMlx7vfPHDN9PxEKaYZIZZnnjkgXvu6HDLNW2a/rY0+T/ToM44NapUKHFF
kTK7FNhmh022yJJjwt4NXSdNhgQjpIgRIUo/a96nyLBCmnnGGGGUZ7f7cdsv
Pumyxy89/gBlr02p
            "]]}, "4.6`*^-6"], Annotation[#, 4.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0bkuBFAUBuBrjTeQsUY0MhKPYUlUSolGxtIwFJZYC3ut0toatR4PQIfC
GsuYMZixC8E3xZe/OPee5JxT0xlv688LIQwRi4TQRTc99LJcFsIeu+zQWB5C
M020MEeCau5Isk2aFFlKeSZWoT+jdNDNMCNsqRfJEsaYY5YFlphhkQ/vNuQ8
66yxySp/7PPLNz8c8MVn7i/vvPHCK1meueeJBzI8kmaFFHckuSXBNTdcckU7
F5xzxiknHNHKIQ1MEWWSaSaoooJKIgyasY9+4gyQcYt6WUuUcbc4pi63N/mn
XiiLKSCPfP4B46JUbw==
            "]]}, "3.68`*^-6"], Annotation[#, 3.68*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwN0TkvA2AYwPFXO7gjkRhoSQzEsTTuo7RudSYSVxgcC0ubtJSY1IfCoN0k
fAPHZrWYJRK/4Zf/Mz1P8r6dJ7mtbFUI4Zpiawh5LsiSo8AlJcptITxRoSMW
wgP3PPLDN5F4CFGOOOGYUyqUeeGVqnY7eDa3a4w445wzQYQoY4wywiDDDDDE
JEkC06RIM8MUs8zRxp9b87rAr3lJF1mmiQzNrNDCGut0s0EXB2xyyD6r7LHD
Lgm26aGfPr7c6tV3/WSfD964o8QtCVbJsMKZ9yxySYErbsgzwxRpgv9IaZIG
cx311FJDNY38A31NOLQ=
            "]]}, "2.76`*^-6"], Annotation[#, 2.76*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0DkvA3AABfB/k7Kg2pBqHQmTCZG4fQaUUWgxEFcdE8Fg9S1MjgFxJRic
IXEkzo/j+Bl+63t5r25sbiAfCSHkmUmHMMksU0wzzwInlSGccco561UhHHHI
Md/88kOkWhhZhsgRZY9LrrjmhjtuueeBD1b44pN3NlhmnwMe2eKJZ16I8com
bxTVhFBMCTHiJCijnCQVpEiToZZx+plgkCw5RhlmhEaaaaCJegqJUsCF/l22
2WGRDH300vO/0U9rrLJEN6100Uk7HbTQRsLnpcRJkiZGij91CzvC
            "]]}, "1.84`*^-6"], Annotation[#, 1.84*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwN0LkuhFEYgOGjMdZgEDELGZRjvwRXYGYsiWUYJCo6JWKE6ESlQGHfxb5e
EwUX4CmevOf8/5eTk5MqLGYWSkIIS0w1h5CnwDQzrLMXC2GfA8bjIUwwSZ5l
Vljlzf9D/dRjPeKEojNOdVfPdINztrhgk0tKEyFE+LWu0HIq+bOv0mpurW+4
5p4x7vhmmx8Gze1oRrPkGGCYIUa454FHnnjmlQ/eeeOLdNI5ZMnRyjwzzPJi
Zk4LdNBOGykqKKOcCDdmr7hmlCi11FFD0Z3XWKeLfvrY8Z492ks3aTpp8T1J
EwnqidNIAzGi/AMa1j5J
            "]]}, "9.2`*^-7"], 
         Annotation[#, 9.2*^-7, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJwVV3k4Vd0bJaFEohAhpRQpKpTEajBkSGQsShFKZcj4K8NnipQSUpQhFZXM
Y3OUOfOYKVzjHc5BiD7xO98f57n3rOfeZ+/9vutda+1Nti4n7TnY2NiqqYed
ev77XnEr22vdaAVCD8drx9xuwdc1qn7qP1mwSVxIYo+qwoaNs2tFz7dCQYVP
zGeYhd85upXE/hrkLJwcSFJpQ4LVQFEeg4Wob3Fk90AttLuys7bwtoMrsNCE
NcnC9k6aSHVEHbqLeX1fD7TDLe3WxLY5FsoYioeK9jbA7cElXcXiDvTWnom0
XWQhc0mjwNi5EVzuFcJFdzqhO7lbLnE5geu37I9VHWnCEyPpITXbHygQ5qrs
4CGgvfZOj4ZIM/bs+ie3dF8XpA522QkKEBBMzHMtZDSjclWvvw5fN26fz2I7
LkKgT+bHcvkvLbAeVzWoG+zG75tBiWESBF7nLD1KjW3FVEWcqElJD+zemB8o
kybgdUBmp+ilNoQ//zXSGdmL+ia5jgVZAprfDErvqbdDMsio4KxdHw78XnTf
p0jArVdDY7CvHQc3HtwRPteHBkf+o2rKBIw+xWWnOnRASpz0Cr76E3N/1TOe
qRLYlUxI2REdWC6aWuY/+BObY6+s5dUgwPePdrS0VyemI+S4P+7oh4Hc4xse
RwgwziVxDP3thMPK5ZkHHPrh+aWa1qNNoObwrMfz0B/oCOs9WZLSj2TzOX0t
fQKvNhuOXODrgi5X8Zxydz+qmTIFmScIhHGkWWx90IX3IVFJ+UIDmAoyExc2
JeAw9LdqWLwbOzmcNHcbDUBcNCTE35I6b7nZgbTn3UgOPErPihiAVnYec8Sa
gHRaZoaDfA8E2CSi5MsH4KI1YHriPIFlYZwS2wp6EOQ/q/x6aQDx3fwfi+0J
9DueuTuq1ovphYbubQcGUeamsVXKierv3zNGbo29EA2f0Cz0GcT7P21qp1wI
3F7Izo/078NT+WQl28+DML6E7L1eBBL+ZRd5Lf8Tsk3Ht/Bz0TDa8XLzaj8C
GX9Mrld0/USu58LaDwY0+GkLxo0FU31faHZ20+zHAbEMjksxNKwtvLHyawR1
3oUbKQGP+1H26dQvoS4aXksP+ybeJ0D8u6U5cqof+nYraGVSQzgUbTjh/YiA
9791HE90B9DCXdzs4jiEdrYSu5PJBJb+eCm/ThmA1Rv7MvGsIVxx2dQhn0bV
+c9Gx5LfA6AZrcurnh7Csr4IPe5MAvx/qh5VGA7iykzZUy+1YTwymP44kE/g
4bxbTeuLQUzHu92XDhqGwvszuz+8IyA1L7YwuDAIXw2pwMaqYZTLVj6PKyXw
cu7rzkkTGjhp9a5+/COweqS43q2KQOTL5jHZdBpktY+VqBqP4Oqf2e0ajRQ/
LQee2f6hweBV6dJM9AgCrD+qruokYL5i4uzj40Nw5VXTyWsdQfSnYL3OnwTU
ShZFW1OGEOtScNdZeBTPpfSsXoxS+7nI18ZLnaekeWe7nOUoioLWXLlGEuBc
Lx6lpTOMHuV0idH4UVQPtfviNwF6pZy+f8Iw2OKl7J91j6JbOzGSd4lAg7cq
VzFrGNIL8W9sJMbAemmX9IOLRMG2Y6XkoRHo2Kyd3mAzhiUeuey01STiO8x9
t8eO4HLZHbXOlDEIXp347C5Mwj/Mft/50RHc28oVHDs4hi0NRY2HJEnY7vOY
ij8wivzwgBqjLeNQ2e03wCdD4thoUGZz5Cg6GHMCfA7jOBZzdKprJwkbazax
uM5RKD9UecZMGUfiYByPkDIJASXln5Ibx5DjYP7jTOc4Yl7mpHEeJFG2yul5
uv0Ydqh48Tfw0xHuXHNk9ggJD1rSJcU3Y0jjjNM6pEOHv9JQ34guiS3vW3a9
nRqDVFvhjVx/Ojz+/L3eYUSiPXrF9GHVcTx+3pa7uYiOS19ERKosSIQ5qb+t
CRiHsMfMaAyLDpubu/NLzpLYf+Sav0nFOKKOCklybmXAzED/xCt7EnTR9KM9
vHSsWqts6mXNgJ6gPSP+ConHk90r7E3ouDloGjEaw8ChTv+wCHcSx6vX1LPi
6WDP8/hiWcuAStIj6RvXSSymaMV49dPhGxg7W72MCfkLeZ8vB5LI8bluuSTD
wG+jAnm1A0xskvtuZR1OgnX/bOg2R+r/6Yp9rVeY6NPRud8QSeLorqeBdxMY
WORxuPn5AROyQqHzOlFUH2tofjN1DFQ4P971+hMT7oNl579EkyAcZK5bszNx
t7mxPXaUiU/ZbDX7H5DQ5Ljk9VWJCTMVroCANSys8NPYk/uQREJyxjW5i0xI
JKhtc1JlwUTPN0E2gQSpRjjff8zE8F/XBlNbFpJE3i1LfUJCq1Px8lw9E5nn
07xxm4Wxod9OYslUfTzcHW2WseBZ3r1RroCFvXnKLdFPSUyuKbKrUGbhoKxA
1bpeFvwC3NVWPSehkzlns/MSC8sjtV2XOAlUGeQ+C04j8URXzTr2CQvfJ26s
p+8isFaMXLXwksTUsJ/lvw0sxJrmfmm1IHBmVN7DI4PiYdAXU1sOAtYlIxc/
/0PNc4FTDzOTRHh+onKxKIGUsDO8jpQerba3yNxI1bly6LowL+UzQ+at2atT
CXgIafqftCXBLWz5+xzlA9tl9E2K8gh0lSueCKX4qaOj3FlI6fSVmdLZM18J
HPKSkCqh5uWmj+BbHncCud/2J3C2EkiT4ZmkTxCoeEXG29wiMBOTrZ45RIC3
Y7ZUopYAV/f36wWUzqnayQyYzhC4FkaLNnpBQIv3tdXKIgJ+exJDFjhJdO5r
tAsOIBCqHnbw7HcCpezrtj+n1tMY+6BUdIpAufMFifxBSieaImr1t5F4/ugV
5/heAstTDi9yzxPQTWF3+bWPBI9uXPuG1ZTvNEn+tOYncdfFR/DxMRKu80Hp
hmMshCxb+Jy7lUSzBll45BQ1P69cfALLWLDUZz+ctZfq81XN6D6qLkqr7BU4
blK5JVks2l+dhFHtitvTF0msLj97Sl6DhQfTe2mGOiROy9YF87iQGPe3DDab
ZUJJ97jSRmMS9mH3faU8SXzdfzLTP4uJlkSHUPI0tY9hM0+VGyQSp/Q70h2Y
cJsKaP98gcT1o2LOBtSceL/RYm+SZGKNTvy2KGcSoU/7HGzDSBg7YMefdgay
H+f5nPMhEbWUauNDzckOKVUz6XsMHJ+orVYMonh9xtHybgwJzq49AQY6DDA1
h8XY75B48X6H8fN4Ej9j5F95LtFxO37xchM1HzmiE7rvKB6/PS7TklRMhywh
8vEp9f7eu+BI4wsSMdxSfytd6Kg6snv1tVckytt81EYo/l0tFd02uY0Op/X+
lV051Pv/DNK4qM9FQ88D2a3jWDux29gjn4ThS40ZNQpfCo6Veug0jg+Vw118
RSQUOhQ13f7DS/K5AtjGcSE5/kJ6CYk1XNIxaf/hrGamQ9wY+LyPE4feU/Ok
JDTYTeFs0lPNhvJjKDJk9+n6SPXRjnu3QC6FWwq8VSkbhY1MIbvHFxL50fMB
2hTOHqmYLEn5DPfixdt8X0nEljLqb/yHl50I5SJGkNMmLpReTsJzolcil8KX
/Xa+TASP4FRmY9KhKhLmGxuvjFD4cvm7xu2iI1gWGrK9q4bEPsOy9xvyqDqf
z9z3KXsYr63357nXkVjvV8Bj/B8e910iTWsYJkpMNb5GEvMZaaduUjhXLYPj
bvcQFlallKc1k+jqevTy/X842yq6p9sQJHjl87yo30e9HZXteEMiWc5t8gad
BnXekiTtehLaj1Qypii9UDXrmAu0o+Esr+Zt4e8kFrxC5VdTutMcoM4W3jMI
f95G75FqErlmrZmyj0lcef2M+67ZIJJ5rS8UVZJwVJJW0KL6z9m2kj+2fgCf
eceMblJ1kFh7LefcPWrdJRfhBJ0B9PN6qJtTdWuZ/LLb9xblH3LtEilf+sHG
xyYnU0riViN//sNgal3Tg1vTVPuxie+O8OwnEsg+q5TvR83XouYpS/ufOMy3
nqPiA4mZyMzCem8SK00FLl6w6IMt33PywTsSGVcWVOhuJA6+6vVy1e1FEJ9i
jz3Fh3P6+iWclA+5LL4K9VXrwTO+D1XKFH+E5RJUNzmQSDXxig3f2Q0x12Kt
o68pvhpsFTTRoObAofe5nW8XPgbTI1wo3k9HGQpHUTrj3imgkjb/AzYPJRof
U7po1uYtVkfpjb6eduWY1w8syzASqqL2VyT6VJInlsqpH65b7pjuxItPwaen
qfVEztZs1rEisLAze/yqWyd0mouSpcxJ+KT+kgnZTKA1mXY9h8rl9OHxIQMt
Ej9GxHeUjrPwRmA976/LHYicF5f7nxIJtR3aCos5LIQHGyQqj7dDkc/I5YU0
5QMuLnvVfFg4N/PPLh+HdrRIBRc0CZL4m/9onw9Y2O9Y+PkdrQ2eSkXzf9lJ
nJ0rVSvkYkHgx7jR33NtWH9sXENuksDngwxM1TExric5iL5WvLcSDzHvp/JX
4DpNBcpPSz+cdA+yaoWewTbD5joCb8N84k6aMFHVxOa2lmxBwezAJlYxgW+C
J0OPLDEguzNV53B2CySfPpnhpvyjPnGHx54MBm6HH5V0cWlBuL5F9eY7BDq3
c9pttqB0hzY0/UShBVMzAonqVO6m5fcZC3IwYIibtTVkM6xTvrtaniPA0ig5
tCybjuyEbalz2c2o0AvTdNcjMFd9X2HqNB0Cs1U+Mq7NUJw5vP6uEnU/MLss
OchFxzVjpxOmis2Ujy8wXkpS955+Tb7mvHG0vlklEzTRBA694s9fVxAQuSy5
UHp2HMorMheyc5pwddotpm+Khc2zv+m5PON4aGfY0uvahI4kecf5HhbkA5t+
PC0aw9wn8tWq3U04rDt6YF0lC/t4M6ru247htNj9f1QnG5Hx6+lqhVwWDj8M
KQ5cPYb3nnssHHMbEWjg0Hg5gYXpPO53IdmjkOY5rnPsTiPMX8hFvwxmIb0+
4kOY0ShuJznuk3VshPwiYTJ8hQUrOt/niMkRTO0J2sZzpBHLLPKFNpuzsJrr
fmkklbdPVz4RYYg3oiPbu+MsxYPSTeu+Re0dQUixM/8jsgGZKw7GP97Ogof6
w4qY1mGY9j8jT71oQPB5NqtOARbkTolVx3kOY+vKHw0brBpw6t03caF/mej1
SKyNFx7G9O7VOb1rGqCw9laf8RATUVFS9U+Kh/Dt9NGo5Ip6cF45nnKX4pPm
m2eNyZZUrg/2cT3vW4+ubwK2tUVM/K6UaUmdp1H330wj6T31yJFol16RwsRr
2qu2Fwk07G0bVBwercNNr4RhzVtMnFmS73ypRsOyRRGB9MQ6CDQ8mMl1Z+IC
mbxBq2sQ55UO8veb1cE7/Y188VkmHlRHLGV6DyJ80uKJKX8degK+2n3QZaLi
mSdNWGgQ2VnustVV33HEsiuhlMp7v/3OVQbkDaDt8r0i9aDveKk42VSxkYnt
lvoZYycGsLA942ie2nesXrli5XceJk7tUblnzOrH5pGKRpmZWngMSB5qmmEg
gneT+7uIfug+GzzzOKsWXW+Vvdv7GXg/sspCens/XM8t0vkv1lL3PIOsbioH
dwayPNff/ok4CTGfkE21SHOyG+4vYuCAyld1enkfPnYpc8531YD36HXxkacM
PKE/4vzA1gfaQ+Poq7E1cNtw34Rxh4G/Sc51kdR9l8fs6sbB4zXo+JUeMeHN
gI2J5gMbrx7sFrz1xpy7BspMSfmh8wz4bMlQWPDqxpo6ocyrb6sRuMU8tUCX
gWUKSi67OLpgFxwSW21djTrryPWhuxmIVP2Yde5eJwpVf93YylYN0Qff7pqJ
MiCiqU1Eb+gA98R5u8BnVXCo+3e5DDsDqYYNO8vT23A6rVGvV7sK+Zx7b8yO
0aFyyvLq772tyLLGHlV6JZbUnSYrGun4YjfwRvZLM9jXZok+iKyEvtdTx4cl
dOg5OzGtDJpgUi3OPqlYiUdZnb2OKXS8nhyxEM9twIuA22MGrRUYGuE33R9O
x2eu+fZ/qr9jTvlPw0vvCihu1KlZ4UpH64ZV5sMD1dBjXixevqECvhb+h35Y
0EFXlGjT/VOBJ6kdSec+laP6XmHRK9CxqKVgmiX4DYSl9s0P58shVMWUv07l
l3VWh1sEd5TiMH/h1fWc5fg/r6eyag==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -98.23988734595761}, {
                    Rational[
                    15, 2], -98.23988734595761}}, {{-7.5, \
-98.23988734595761}, {7.5, -98.23988734595761}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -83.97977469191521}, {
                    Rational[
                    15, 2], -83.97977469191521}}, {{-7.5, \
-83.97977469191521}, {7.5, -83.97977469191521}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -69.71966203787282}, {
                    Rational[
                    15, 2], -69.71966203787282}}, {{-7.5, \
-69.71966203787282}, {7.5, -69.71966203787282}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -55.45954938383043}, {
                    Rational[
                    15, 2], -55.45954938383043}}, {{-7.5, \
-55.45954938383043}, {7.5, -55.45954938383043}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -41.19943672978803}, {
                    Rational[
                    15, 2], -41.19943672978803}}, {{-7.5, \
-41.19943672978803}, {7.5, -41.19943672978803}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -26.939324075745645`}, {
                    Rational[
                    15, 2], -26.939324075745645`}}, {{-7.5, \
-26.939324075745645`}, {7.5, -26.939324075745645`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.679211421703243`}, {
                    Rational[
                    15, 2], -12.679211421703243`}}, {{-7.5, \
-12.679211421703243`}, {7.5, -12.679211421703243`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 1.5809012323391443`}, {
                    Rational[15, 2], 1.5809012323391443`}}, {{-7.5, 
                  1.5809012323391443`}, {7.5, 1.5809012323391443`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 15.841013886381546`}, {
                    Rational[15, 2], 15.841013886381546`}}, {{-7.5, 
                  15.841013886381546`}, {7.5, 15.841013886381546`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.101126540423934`}, {
                    Rational[15, 2], 30.101126540423934`}}, {{-7.5, 
                  30.101126540423934`}, {7.5, 30.101126540423934`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 44.36123919446632}, {
                    Rational[15, 2], 44.36123919446632}}, {{-7.5, 
                  44.36123919446632}, {7.5, 44.36123919446632}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 58.62135184850871}, {
                    Rational[15, 2], 58.62135184850871}}, {{-7.5, 
                  58.62135184850871}, {7.5, 58.62135184850871}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 72.8814645025511}, {
                    Rational[15, 2], 72.8814645025511}}, {{-7.5, 
                  72.8814645025511}, {7.5, 72.8814645025511}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.14157715659351}, {
                    Rational[15, 2], 87.14157715659351}}, {{-7.5, 
                  87.14157715659351}, {7.5, 87.14157715659351}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 101.4016898106359}, {
                    Rational[15, 2], 101.4016898106359}}, {{-7.5, 
                  101.4016898106359}, {7.5, 101.4016898106359}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.49999999999999`}, {
                7.499999999999999, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -112.49999999999999`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -112.49999999999999`}]}, {{
                    7.499999999999999, -73.74969387488478}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -73.74969387488478}]}, {{
                    7.499999999999999, -34.99938774976959}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -34.99938774976959}]}, {{
                    7.499999999999999, 3.7509183753455915`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    3.7509183753455915`}]}, {{7.499999999999999, 
                    42.50122450046081}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    42.50122450046081}]}, {{7.499999999999999, 
                    81.251530625576}, 
                    Offset[{4., 0}, {7.499999999999999, 81.251530625576}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.499999999999999, -104.74993877497695`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -104.74993877497695`}]}, {{
                    7.499999999999999, -96.99987754995391}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -96.99987754995391}]}, {{
                    7.499999999999999, -89.24981632493086}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -89.24981632493086}]}, {{
                    7.499999999999999, -81.49975509990784}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -81.49975509990784}]}, {{
                    7.499999999999999, -65.99963264986175}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -65.99963264986175}]}, {{
                    7.499999999999999, -58.24957142483871}, 
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -58.24957142483871}]}, {{
                    7.499999999999999, -50.49951019981568}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -50.49951019981568}]}, {{
                    7.499999999999999, -42.74944897479264}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -42.74944897479264}]}, {{
                    7.499999999999999, -27.249326524746568`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -27.249326524746568`}]}, {{
                    7.499999999999999, -19.49926529972352}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -19.49926529972352}]}, {{
                    7.499999999999999, -11.749204074700497`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -11.749204074700497`}]}, {{
                    7.499999999999999, -3.999142849677445}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -3.999142849677445}]}, {{
                    7.499999999999999, 11.500979600368629`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    11.500979600368629`}]}, {{7.499999999999999, 
                    19.251040825391666`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    19.251040825391666`}]}, {{7.499999999999999, 
                    27.0011020504147}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    27.0011020504147}]}, {{7.499999999999999, 
                    34.751163275437754`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    34.751163275437754`}]}, {{7.499999999999999, 
                    50.251285725483825`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    50.251285725483825`}]}, {{7.499999999999999, 
                    58.00134695050685}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    58.00134695050685}]}, {{7.499999999999999, 
                    65.7514081755299}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    65.7514081755299}]}, {{7.499999999999999, 
                    73.50146940055295}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    73.50146940055295}]}, {{7.499999999999999, 
                    89.001591850599}, 
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    89.001591850599}]}, {{7.499999999999999, 
                    96.75165307562204}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    96.75165307562204}]}, {{7.499999999999999, 
                    104.50171430064509`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    104.50171430064509`}]}, {{7.499999999999999, 
                    112.25177552566815`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    112.25177552566815`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -112.49999999999999`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -73.74969387488478}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"5.0\"", 5., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -34.99938774976959}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox["\"7.5\"", 7.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    3.7509183753455915`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0000100\"", 0.00001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 7}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    42.50122450046081}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0000125\"", 0.0000125, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 7}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    81.251530625576}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.1322586906101123`*^-7"}], ",", 
                   "0.000014516014355701501`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"9.2`*^-7", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.84`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.76`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.68`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4.6`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.52`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"6.44`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"7.36`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"8.28`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"9.2`*^-6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001012`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001104`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.000011959999999999999`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.00001288`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0000138`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693271439075743*^9, 3.693271615655843*^9, 
  3.6932717815793333`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
k1PdLhyT7MCXEvHZR4rPyFHik3x/wGj+3EX4cx6Rf/8dkX//kKbej+er6/HL
WUuVDukxofX1yxyVec341h03Vzw0YIIOKf9+4cKlBldm1+MRCygOgwlKcO7L
/Po505vx7oBPA5QkpT/2k+Urvsupms6Co5Zz7y5F7fS4pFS54AITYpLeznFB
ccrez7eT2M/3bdbZb6/NWPC20eO7OCpXrBbAstN++r+3oXzSn/v5yN9vLCW9
3ya/34zYFvLjpo8SrHJ9w697pQFv9HojsQWVn0034zVTa/nj/fuxhbbXzqDy
Jffrh3RuN+CtXurr6HxMKDiQpn1Gu+WP55P8/JHjk/w+99DpW/Y5horguixv
ulVgA/7wrrTNyQmKUBKw9MfbzuY/3udWaT08e61MESxmu4wpiGrAnWO+ZYii
8hAlmidGqAWfRtJ7iKT3NUlvLfG+8ibxvhIGHJM1vsuDfvRQg9vrejzD/VLl
h355WDsn3LcyqvmP95Udj8M2dh1XgDGdzUeqtBrw65EekiVHFeBU4+eJS281
c95XdhB6DxN6FxJ6H5D0svvz7lH68xiiPzcn+vMEUr7gxqAvy2MiGCA8T+XL
U09+iPWKar1Ll4Fd472fOvvwc/IjqxD5glman9QvxTKgd0O5R8ISPqBP157A
M0YGSj2tJcRQ2Zvor1cT/TW5v79Meh7Z32/RiO+3MqPHDEztkwH9Q+EDOxPQ
+HFQ2ziuRwY0j/pJt65p5nz/kU98/xH6mLo38bAs1M1cdmnZqXrcvmeGnGu4
LKi4m9k/Wd3Med/dSrzvvpLhEC9TLAd+aiWb3c7V4yphBQef3JKDwf3JewrX
N3PedxsQ77tzr51VZrnLw+xFHhcai+vxpIVi+m6L5cFo1fGvpbub8RoiHm6R
4sGAiIfzRDwEEfFgSvp+LoRkvy3JfvL3N/I3LkXWactBsaUo5nGmHu9RdamK
VpeDV9PGvZ0R1IzP/Jd6vxF6xxDnb28Q52/ziftPphH3n5Dv72Cfv40hzt+2
Tuge2LqjHrf5dNzR56o0bLLMNjiB+rswc0cX81k0SCTOr/oR51f3XzpV57ao
GX/dvldtS640BOZVlb8ybcadlyruDbGmce4jYd+H8Tl2w4oNIvX4ywv5Qj2o
LDH2wbMfws34qpu3FjWupv9xHwnWGG8vPK4eN1gvoBdbR4PV2rSq1WrNuIfk
+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
4lPlmr+brE7kwb6cwupaJF/XMPzxhBs88HbfvlkHyS/FeNMsjDd1YVQPXc7i
wa6u7v4aJL/tx/O93/g8ML32TPfI2N/yOYT87j/In8P41OkYn8q2sY2b6cOF
QO1L5quQPOP5u6b2QC7MtJ8wIkKTP4BPnY3xpoXHq7WH13PAf53lmYZcPly7
/t2orZkDkykh1PAxfDAm+NtzrNoLYmhisNm9IG3vOz5YxyWblimKwV4ZR8Z2
K74IfzuTnbLd/3mvwC7y/nkD1B+sj00KUH/YK7jE9nFotuGL9M8Won+OwP3z
Hu6f+pjvs/gvfJ9qzPch6yu08vflt66ThwWhwbIUFhPyA88qf1kqDxpiTV0h
KUxoJvBV/W80W7+dVYCcjrlNUppMkJaHh18jFGCT25p9uXeZoEHwqyd1buNt
dpQAC6fnatI1fJhZefSm81IJmOam6Zo6jy/CJ5+9VO6jjL441DXP/2Bcx4fi
PHXxk5PEYYTVppnHzX7734Hwvyfh/33Y/0J8/1mM79dhZr44ifye/P3JiXnS
PLBXlvKdjOR0KxLXL5PiQTfBZzAKYL0wbeSDzGF7pf2oHfaMWmxmzgcP/4ZQ
DmoL+RuR/3b8EnwG1tFes0/ou4YtKHY9h/rhae+mGgHSJ30T5fv1VxwRPoOD
/kSmEZKv3he765sHF3wLtyZOQ/Jd5+wmBW/iitg7mbB3JbZ3KrY3h8Bf9oU5
20U3oH4W26PmkozWv0WRj/1N+dBqsXDe80S2CP5yf0TK4kLkd5ad3l1JEw7o
iL1/9hp9J0UTyXOFc37jL9dhe9l/sPcmtpfE/3mzZcfWv+TD5qaOuUX+LHj6
C3AxAz1/8Gyeki9LBH+ZU5FeOPM1Hx7M+Z7K5qJ9g9cmhS+z0bpi0Z7swRLF
m5L2ziLsJfGFYm//1/+zif6/Efd/El+4VRBMX/xCEQaXbfyQPIkJkxzWjPV4
pggSQ4q6HpUzB/CCbRgv2BLzVi+dogwyr1s+r5jOBNv00P2fOMowBG1PamqZ
A/UCfuJ6AV8Ou4lfuSsJ3qMYWz+hdaB5st3trFRJ+L4gZ4SpMZq3ifoI0Z1F
oQePDoLGog5T72o+ROz5YRAWPAi4v4BlJnwYicdvGx6/E4nxOwOPXz08foV4
qSMYLzXztYmquQD1K9Mp2TJuYpDRMKdXo54HDQW6xWt2iAGJD7M/VWlrZ8gD
lvj4tz9c+wTeaRGKnxt4MPW7mXLk7j7BUxwP+/4lHhbGn2R8TD4vHetTj/Uh
49G+cVuZ1H18MJm4f8KIc30C+bDtDc+C+WB059bB0fvEAIh6PfJEPZ4KXD/n
Mq6f857Aq/G6PyqWavHgUrmWZnmLBMzVHWx7rJIHHTJRk7O6JAbwasEYr7ZR
2ohJ0eXBNEPp9tZ4cehXShlnV8OD1oa1fmEZ4jCf8P8Mwv/phP9fYfxWCsZv
5TmX2A1T4oGB64J9mUFSMO56bm9YMdoPvBS0vvCWEsGrtU6onvJ9MJonn4S/
KNKVhKyOj+OOlPHgaduHw/OmSQ7g89z+YK8JtvcrtleoXx3Wj7SP9A/5PSKp
/e0FgXx4lbM0resOWifC94gn+fDB3nx+7d1+CZF6RsJ6RSW4XpEXrldTjevV
kO8j7RP6Jx37h3xfMmhZPN+O4orva/ePmSkJBm3PT/d58sFKv1o31EdqoD6O
8H3C+jdtuP7NU8y3bcd8W7L+yLU1Vk6rx8lAQM+xMbNqUb+tkkxzY8qAXuQT
v+Vo/ArrjyzD9UdeJk2eFPxDCnzDrUs5aPx2BqdMP9IgBZz2u5blaH74r/OJ
07+Ml3RwvETyc/6pi4nWjZ8jwrY23uJDjE6DfJo5B87S0t/zRvMH+DZdmG/j
0OC8cByal8WZw+c35fBh0O6dZTt+3Y/IrL99XoMPUwh+zp/k5bE8yc/55Kfl
a8tjQ1RB2hr3bD6Yr2+9Fq/Ghgzz41tCR/BhPubbNGO+jQ+vKyEUrUuXp3fs
6shE82VIyqFX+1ngdGDeCC91vgifh5TXIOQVCX5Od0t4bGgLE5gVsw3GpiL/
+6vOau5gQu9ZrUWjVfhgiPk2fphvsz1nXHToIibInX7XsSqJD0lee7922DFB
8RdvnMEf4PMI5bdheXksn4DllbE8yc/5qje+I+omAyZqDHnYe5YP3xKLVm4p
YkDe2kE6+uJ8EX7Oj+bAhRdVGbA0yTr2xBE+GDQOuv9lLAO++59sOvGJNyCf
8Qf5GYQ8yc+5HXpxqGAHHd6f1w9o34PGWV3LilnBdIieElBWU8Ub4OdkYH7L
Ae3iLy+e0cA7Um3lfDQug18/+Rz2hgaFQzIzh91D6wghH/o3eYIPMyPtzES9
sTQ40MQvjtiG5gHrnZeeTKDBYu8yBxrav5J8mE/TvDwiA6hwagprSpUXikt+
brel+1Nhk5yBjHje3+ULCHmSL6Rxsk/LKYECp4v6X+n484Fr/Exe6wQFlmZ9
20FF+pN8oU23qTtPLFGG0SEzdx3ei/pPRIatro4yFJ0e1Dq09N/L38XyZD2d
dQWPqqz5SqDtTkl8FYPm7aEF9wRditCZO3bVlzbeQD2dd7iejmP+fn1qjQLc
DtKpHIX6f9XV4klzsxRg5Gur57fpfOgj6u84EfLVWF4Dy5P1hqZE7ONduyEP
08UVXKYX8WGt63uDtgh5uDDVY3PeKP5AfSUdXG+o82fNj4X75WCc6cEfZmjf
XFfgMDfKTQ5GHDqknGPwW34SIT+WkFfH8ga4HtNWXI/JtnF90tIVskD7RYCo
4oOPuEyfOMhCIj3ZWMGQPzD/zyTmf39i/p+K538hPyce83POz0maK1+G9hPr
5PaYWjDB03Z97Sod1O9olvK3zZiwHfNzTDE/Z5HJnszOp3x4MetKk0wzEy70
LGfU6fFhDack/F0jcyA+d/iX8TnJZ053nTRzVCEfcr1dVpmgdpnXgppjaJ3I
CrlVyFYX5S8lLNl0h1uCvrtCffvcTAbErquu6dHiw62Fe9euz2CI8JdIe70I
e0n+9nnq7Fj1G2ieNA0fth61l7ppazgw0Ton905zLmqT/O1NlU5tF9A64V/n
U/DyAB2YHrniPUP4sGi1z7ZrqP1v7c3A9pL1CKz1dyg9QfPgee8xc17epoJD
UK7W+Y88qJ7rt66zgDpQj+A2rkfgPdLuxY5YPiTOnXxDHbWrt23TFEfzstqV
SaZnVvyuR8DH9p4l7F1C2EvWd3jodqIkfgcfxJZojfVnUuD+zSlfRqH4Jy5Y
inpOmiJSr4FqJdd6C8VnC6dNdQ/VoAJzSDfF+RUPuMH522PVResv/MneV9he
sp7FzFN+S/f58iH07ra0IZcUIXSPz1j3pzyYsz6y4kuEokg9i+LBU8NP7OTD
XWWrNrMaJdigN+hQyWMebN3x2KP4oRKYYHuN/2DvPcJeYb2PcFzv49kKo21d
aB2iqB20HmMiD9ejbNPEUDx7+kFg9cJp8nAT1/uYjOt9PGKFvstD8erCLRJS
F7wUYMXW223pyD9rXTJeDF2jANuwveXY3hnY3gPY3oOEvYq4Hootrocy7O3u
tgfo+Q+jl74Z2yID8TvvxYSheHq69synpU0yIIHroWzD9VDSg/RT3+7mg3vN
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
Hp+dQH12ReudCuIhwh92PHm+RQT+PwCYtSc=
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6730, 926, 6735}, {6735, 926, 6841}, {6729, 922, 
            6732}}], 
           PolygonBox[{{6732, 922, 925, 6725}, {6725, 925, 926, 6730}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.31518886822647263`, 0.44742248862979783`, 0.9413045338661862], 
         GraphicsGroupBox[{
           
           PolygonBox[{{919, 943, 920}, {6730, 923, 6725}, {6734, 927, 
            6843}, {923, 920, 943}, {6725, 923, 6732}, {6737, 927, 6734}, {
            6731, 923, 6733}, {940, 919, 920}, {6744, 920, 6726}, {6726, 920, 
            6728}, {6743, 940, 6745}}], 
           
           PolygonBox[{{6728, 920, 923, 6731}, {6732, 923, 943, 6729}, {6745, 
            940, 920, 6744}, {6840, 1180, 927, 6737}}], 
           
           PolygonBox[{{6736, 6735, 6841, 1180, 6840}, {6733, 923, 6730, 6735,
             6736}}]}]}, {
         EdgeForm[], 
         RGBColor[0.4231563211912719, 0.5409384697859354, 0.9481841244972331], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6736, 924, 6733}, {6737, 924, 6840}, {6731, 921, 
            6728}, {6749, 938, 6741}, {6746, 921, 6845}, {961, 938, 958}, {
            6842, 1183, 6849}, {6744, 941, 6745}, {6845, 921, 6742}, {6850, 
            1184, 6844}, {6752, 958, 6751}, {6754, 938, 6749}, {6846, 1184, 
            6850}, {937, 938, 961}, {6580, 941, 6739}, {941, 938, 937}, {6751,
             958, 6753}, {6840, 924, 6736}}], 
           
           PolygonBox[{{6733, 924, 921, 6731}, {6741, 938, 941, 6580}, {6742, 
            921, 924, 6747}, {6844, 1184, 1183, 6842}, {6747, 924, 1184, 
            6846}, {6745, 941, 937, 6743}, {6843, 1183, 1184, 6734}, {6734, 
            1184, 924, 6737}, {6753, 958, 938, 6754}}], 
           
           PolygonBox[{{6727, 6726, 6728, 921, 6746}, {6739, 941, 6744, 6726, 
            6727}}]}]}, {
         EdgeForm[], 
         RGBColor[0.555056105250241, 0.6496585770915568, 0.9581151963242581], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6938, 1188, 6867}, {6762, 976, 6490}, {6756, 960, 
            6769}, {6942, 1580, 6848}, {6769, 960, 6866}, {6848, 1580, 
            6943}, {6580, 939, 6741}, {6863, 1219, 6861}, {6767, 956, 6763}, {
            979, 956, 955}, {6746, 942, 6727}, {6861, 1219, 6895}, {6766, 976,
             6762}, {6944, 1188, 6938}, {6842, 1187, 6844}, {6754, 959, 
            6753}, {1187, 1186, 1216}, {6865, 1187, 6853}, {6747, 1185, 
            6742}, {6940, 939, 6847}, {6763, 956, 6750}, {6727, 942, 6739}, {
            6846, 1185, 6747}}], 
           PolygonBox[CompressedData["
1:eJwtkLkKwmAQhBcjPoLgxrP3abyKgFe0Ni/jC3h0gpWVRhMVO8HrhZxhtxj4
/mV2Z5JWnHQWBREpQ0VopCJpIJJBM/AQyv0dg6dqTM8YvKyInPyd4N0IRdol
kRWO1cA9zPaBzeqh7dD7gyZqHnq3UBN8VvNyJwL3oV1gHdjlp+bdQB/wQ41z
6Anueh53DugWQe/AOrJr5vfoYbeBWj4zmX3z+5xdwF//fu5U0S/1PHroZSaz
79ALfIXW3u+o9g8z7z8H/wEJ2DlW
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.6929799222210702, 0.7600804491723583, 0.9700334204475825], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkLsOgUEQhSeId7C/a4hbosCbiEqhQOn3JwoEncQTeBStKFwqcQ/RegNv
4JvsFifn7NkzszuT6QSNQUhEEiAM4p7IMipyNyJNUEJv4Rp+Bb1DD8GdsA+X
8Rf4Ob13Wr0CKKOLcNrVJuAnNceIyA+ucz6gq/AqJnKjZwsOjNXqXdB7Mif4
5fQVHoMzmb6x9drnY2xOMwc472aZoKfgS36kvY3NP4w9qz+H3+5v+seZ66/v
dMEG3TZ2Hp1rbew8OlcKTnp2V7oz3+0ni9dztdrjD22lNBE=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkLFKA1EQRQcVP0HwTVDWSILCNn6KZQoLEYQYdo2VEDvBL0obYuHabWC3
MKQVa78h5zKvOHDevjtz2Vfc17fVgZmdwBE0yewLaaDD3+D30KyFR3wGG7yD
Z3yaz7qv8H/4Y/YbtvjkNLLKKKsdbT4v8DtY4T084Zdu9n5s9gEj/DWFX8GF
R6bP/TW+hGvuSrjxyCirb2O8z/PaOceHHvPqLDz+ocv9L/hn3qcdZx4ZZTVf
4uceXcoou0vxVnqzH3ydYladA49OzWrHA74HrwU0uw==
            "]], 
           
           PolygonBox[{{6851, 1581, 6944, 6938, 6939}, {6864, 1220, 6863, 
            6861, 6862}, {6862, 6861, 6895, 1252, 6894}, {6939, 6938, 6867, 
            1221, 6963}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8236631691068343, 0.8622306695774048, 0.983042922433843], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFkT9LglEUhw8qCoHSfN9Jy9elMEqkoCEqv4CzU4uLlDiEkEWJ0CLUXNGn
6Bs02JRNSk2KQU0iYbX2HO6Bhh/Pec/93Xv+vOmDo/JhRERCFEVBIJJMiDw6
kSHqxUSm8AKNMJzBAXoi/wrT+K/iIktwGy1ytwC/OfvE8+u8NP6CE954R2MU
4utwdxnWOeuTq8Fi4N+fE98QpxLamEgOXeLPwFWrq/XXzfOAf5e4S34F3qPj
BWqSn6EP3vyBbefr73HesLpaf2rzPsM7620TbthOdDfZwPe/D0/xzYkrMM/3
Nf4duGax5rZsJ7qbqs3fgud2V9/I2FxN52trDy+wZLPoTCd2t2r/YRL9n0H5
5vycOu8tuT+EVkbA
            "]], 
           PolygonBox[CompressedData["
1:eJwtkrsuhFEUhXcQEsnI1PtUMoxLEPehU/ACapVK4ZIohiASItFIZmrEU3gD
BR2FEBqExJQuo/et7FOs5Puz9zl77XX+7uWNxfUWMyuhNjSUzE7azWpoBP51
s2sKDfQHV9Frq9kL2oEn6Sl2mN1Qn4bn0Qe1WzQAG+qiXkAVeIkzzXx+Bb70
qFc7zfqpz6AjZh+jKbiUwos8rdH74+HlE33Bqx6zNHPLQ+J3tAvvZ79v6BDu
yffX0WAKD/KingP4yWMX7TSWwoO8yN9Fikxq+fxoip20m/pn4WePWfLQm2In
ndUdffBcirPycA438zxlrKzPcr8yOYWvPO7X9zjf3x67K4N7D4/FnO9Eip3q
+f2G4W2P2ZpXTvEmykt5LqS4o5HnP8J3+b3l6cEjc/XqzCa855Gt8tK/8A98
DVNO
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9100799982288065, 0.931137103396928, 0.9912854367407107], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1krlKQ1EQhgcT770GLCw9x8bCQhCxMG5BTDAWttZWVjauCdiIccEFIQ/g
giBWItpZ+SLqG6iNZhESC/2GORbDNzPnzMx/z9z+pbWF1Q4RyWIpbM6LzMYi
g3A3I1LBStiVN2Zhgn2kRX6dyDB+NRIZgqfEdZqs4N+E+nlvpn53n8gm/lki
sgHvsRfy6/DTWc+as9mqoQgvvWnIwz3OmvRfhuPEPdwRb7HmF+EJFtPn2NkM
nVXypkm1PfWKfKfM15paoMb7zs52YIHe+dh0jFE7BUfhQ9Cs2ruY8xV6qOlc
zR1QH8EjWIytl/bJUfNGvhXO9e6/VuUhbId30De+xbaZdQ1ngoZnzge8aXvF
Tzrt/jvWdNa/7mxPuq8JmPZ2Lwq5csb2od+h+nR/d950VpzVa58GLIe8nj8S
5/Bb4Q20TvW1ibfgNJwMe9H9/Hib1YDn4c6Ft3rtU4Aj4f/R/+gPb7hb8A==

            "]], 
           PolygonBox[CompressedData["
1:eJwtkj0vg2EYhe8ofZsmho6ex2LoRMIgghJK/QGzyQ8o0SYWtAQRiR/gIxST
xWbyR7CasPioDgxcJ/c7nOSc5/489/sOLK8sVrvMrAi6QTWazSZmZVCH18Bx
zt8U2w9mWRITcABf5e0xb7YBbuB7wWOfGbNdeBu8oCepHyPeQb+i38A7vBF8
VgW0iD8Fn6WZ8+gpUEIXwAR8NHovvSl232f2xawOGIxeo1rpneA7aBflHMKn
ia/nvd8FvJz2V88Z+Gkar4Nn7YJupP6G4VepboLr6DnKrYFztEXvrR4n8Hb0
uPQPfDx6rnqcRe+p3kdZsxF4RR4Sv0ER/hf8Vrkevk/0nQup/7vgnuVVntfg
S7x9Z9zzZnCIf4AmfCt4vnK24XPRb6+ZC/DefvemnX/RD8Fvo29YQg9F31U1
qm2l9foHbuGXqR/5063+AXHdU/c=
            "]], 
           
           PolygonBox[{{6905, 1257, 6901, 6903, 6904}, {6904, 6903, 6898, 
            1259, 6906}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9611777109857953, 0.9705669809356459, 0.9506001882131443], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtUk0vQ1EQnbSv6cvTV90ovfMSsa5WSGxIiUQQu/oJfkAJEizEBhEbJNWG
ENTKRsTHyv9AbCS6tbSgBGcyszg592PuzJk5t2d2bqYSI6JxIA60R0R9IZEP
PnBEHR7RPrjFRL04/wB3Z4heAqI1wMd9wyc6BfojvSsj5gp4xP0Z630NuAAW
WNd51r2s67aX9UOOaNXp3T3OpoBSkmgIfMlad541r+RfR2wn1g466mAPSCWI
/nBeBbI43wWnoe04TZQB7zjVvQF+DbT+EXDHur8Bd3n6tgBUWftbBp8AI9Az
DS4gVxPxg5G+fwv0vW8zjIFrpkG0SI6Ep7VlTjK/Q2hi7OOAB0wgbwj9k6z6
JHbTqQ7JI36ID/lQa/wgrgj+BY+atjHW+6LFlM2zAei5YK3bAF9bv9J3zXqU
XredatkCL7H2VmHVJNpCcM5T3RI3bB49I/4TeMfZF/jeqY5T1jnJfMSzBPZt
yBOAV+wfiOdJ8y5lfuYsf8M0n4Nbll/qsMWIV03L/RTojJ29/Wb1PUTvt6ZD
fKtYX4vgPafx8o+KkeZoEw8j9ScVaQ/SS8l6z1rdf8zrYyM=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkj9PVFEUxE/gLSy4b9lGkr13E0MtATGx0YChIWrpR7BHBCFoQSiIYmzU
ZolEY2QrIBr/ZCu/hxIbE2gtbUAEf5PZYpI59943Z86cN3Zv4e79voi4Agpw
nCMmyojLoJsirlNPD0b85nJGPPtuHJzA34O14YifYBd+zje1SkQJqtRnPb0Z
NN7CP4AfvP0OPsJvg9d1a3TgjVbEm7r1h+AHyf31/c1sD/Ii/Tn4Nd4cDVtz
Av4v28ulRsQU9QD1hYo9FfCrLd+p5yS81jJXzzr8IW+2qxFbYBF+nNxPHm5Q
ryd7PwT71J+z3/6i/gT/ks11vwefzfauDJTtg54/+VUWK6CC/js02tk9pdcG
S/AFsAPvgEfZPaUtj8vwspeXZlCWm8l6BXgG3+IsFT5Tr29Na0tznvpp8tt+
sAEvs7NVXoPwF5yNctcEj5veqe6VyUmyhrSq1M+TZ5Y/7eQrvA9/k6XnP9Uu
Wp5dGWhXf7J3rRn+wrvZsyoDZbuanY16KItatjfttAK/08tX+7kFf5LsRfMq
i1fgYuEZ2skzaBZl8jL5H1N/eRyB/wd5RGR2
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9872108928858212, 0.9889793897902954, 0.8616121322375935], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkktL1WEQxic7cs7/nOM5f4jSzvsGuYg8FaWhWZZCF0K6GYF9gD5ArqJa
F+0iNTArrdZtuhER1ndpFYZtAt11+z3MLIbnvcw8M/PMDN6Yu3azx8xmse3Y
vWy2pzQ7By4ns4HC7Gly0/kLWGCtXrM2eAa/vfhvcJ7vmPVXzO7uNvtWN9vH
+wi2JH9ib4FHwv8o+KxltopdLz1GsY/geJ08/j04gl/m/w/nNhyvamab/E1m
5x4Gz2KznOvgZ/y2+D/B+TQ21me2DXwJbxf+ef6Pce/iPw62s9dQgAf5H8IO
YA/xq5FvETyevZdRcIr7parZBLhBnh/YeuBWnH/GXf+qW/U3iO1VD+jWTK6F
NHkCHqp4LtXXDzYK1/pD6CA9VrFRevkLvovcH5P7iqdZeB71NVS6Vr/q/j4c
Wp3Mzq980noX8VfpZQZ8G5zilr6KFcfX5Oc18Ao2g/9O0LLX8y85Zy14FasZ
rYcem6HJYui5AO4PjaX1m6hBtUxW/E/v0lC9q+61qOFT8t1Uj+pVc1A9ileM
5icNtU+aqXbiIjElmu8AX3Q8x3OwGu994Ar3U7wvd3wPFFsKw19x0ll9Srfz
sQNTMbtu5F7qOC6ArdjvZnZu9SWuw9nnMwY2Yh9K8HfyXe3JPrOB2IPLVc+l
HjXndsxa+y19J8D72Xv+DseDOOttLvksboPTybkuJN97afgYvBM+8v0Pvvxx
Ng==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkstqlFEQhNvgMDP/JJMBkcj0EXQhJF6JJhKiWXhBxVtU0AfIA+hSXQvu
xARjDJFBH0BQvAv6Lq5EiRvB4EbUr6x/UVB9Tp/uqj69c+HGletDETEDNoOq
RFztRUyPRByDD2fEaCOiB5rwWXC+GXEBnIFPkzNO/i6wD/6es59VxAb4AD+b
zp2i3gD+N811tgE/yJsdvN0OLhM/AN94+x0c4m6quLZ6/Er3UPyZ+1fpHOVO
cjYHH0lrnaf+afimYi/qGfAvnF3r2eMJ4nfEPyprlvb1tJ61bsQz+FI/Yg+D
2Q0ewnu8GXR934XfJOdpixm1I5bhQ3U/1W/BTxZ7U83j8A4otZ/9xZ51r7NJ
4vv0GKPXXrAMP1LsTZ5n4PPkX2ra30XNi7OJen53imeq2SrneXpm6qWcw8Wa
pE0eRuEV992G/7gBf6QYLx0wBr+Nhq+VPd5Ka5I2zWQFvjWtRTM/Bx8uno38
HoDPFu+C/lR/+1Y5bc/8k/rJL/E2sKq/q/dNmtrwj+k7vdHb1+n/Xgcv0jPX
7KV5Bb5KvaNomwODvj3890K8SLwGxuET4EnfOyL92ulT6T+Xfu3IXbQvEbfa
1iitb9K9NRPN5nHfvVRTtRfTtfXmHvxlelelWdr/1PuvHfkN31Lvqzx34P8A
AuRljQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9952291293396038, 0.9922039150034565, 0.7220983548957787], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1VFlLFFAY/bSxZpRiculh7qWcCXpMSE3TDFsoahZFSJQ27QfUQ9AfCEqJ
FrN0KKI3ow19qSZoo6If0kMvPRRBC6YzncP5fPg4dzn3u+db7s2ePT9yrt7M
LsDWwQZbzLpg3bDvwSy30ew3sB24DbYdVsJ8dIPZEHC50SzbZJZKmZWDcD5j
9jRtVsXeT9hENHuO+UlgKWFWgOUT8pdzn+QvwpacR/4J4DX4bIDPm0Gcivs9
iL1xjL9i/SHum4C/Rxmdy0HPP3CepXWGPm+At5o0exsU3y6s7YCdho2lFd+p
qDN7gb1RnP6oeBjXDDXA6nD+G/ADbCvueg8chh1HTopAi/JXBxyGriFYH2wT
9loboB/+mjFuw3gzcD4q37ei9FHnJ+Bd8Pbh3D3g7ii9f6gB8yLWp4NySf9r
c+LVoHuLvveCPpGP18CPrpnaubfHtZWcS39vnM9zP7zWI16HWlKaLkFPDzTP
Ar9g7wy0TWE8ANuJcSewzDk4c15P1qTiMTCWLqwXmGtwPgMXg3riV1ANWIs7
nkNq7E/oDt51LIpHfs1jKXk89fBXa1adLkch62aun3G0e9+x/keixn+D+pI5
mEyoDitJnRnzXuHdcx7X7ai+yzufeSGXOh9ntLaQ0ZvqSKufrkTpu+h9OOi9
+MBrzZrfzyjeMjDvfdUGnA3KbR98HIBVEeOhqPdQ8fx2eL/zLe2P0t0YdVeP
v+sB18O7yaNPzpkz1oJ+6ZP+2AcLHssTYAEatqBvW4EzUWemo/4B8vn2ev2u
qvvr9vmroP+gEqSLuRz3N813ynqvup+1f4W9uj6lfZ6lXs5ZS9bxXdCdk9DQ
5NpavMfJIfdoVO0OR9WGNWVPTQWNrwdpov+X/MP8baa9Z1a9Bzq9t1mHrOvi
v7DiNSen6n3HvJCz7Dlhzpc8z/8B1TazVA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk0tvzGEUxk+bFjOTMqY1i3nfoJVYIlJ6Q9xCMKgmFSKq9QHY+QCI+61F
jLhtXVMbQRCE+CAWNhbEQkQovyfPLJ7k917O+Z9z3uffffjoyJHWiFiD2tC8
FNHVHrEAFeD5yay9ufDxHLG/HHEIfWZ9Hu0kcBhdgK9xvrYzYr0Ej7C3d3bE
KBqGJ9jrKUU8I34cPolauduCTsFTaBXcj+rwHvS07JwN+Evy9xWj2CnWswoR
7egiPMDeNOc/ihEvWR9LvqsY1X6J9Z85EX/RZdWeXFuV/urwT9TT4Zq/J/eg
XlTTDbgFLeZ8H/k2wH2ol7OlrFfD5ea8lK8EH8ju9QUag78m9zpTidjI+j3r
7pJn8hZu1CIGmeUAug1fSe5tHet7rHuzv7US9cMP2BvnbAI9hH9xf0mHe/gG
b+HOWNl7W+Fidu2axyZ4KDvXcrQCvlXzt4bQXfg+qrf5jR/Dm7Nr76OHE9kx
il2mN4LP8c2g3oX08wE+y96/it/gNPyo5lqVU7l3N/2heqvwx+S3UQ7lepec
SzPSrF7rnLf9jW7Cr9BM0Xtv4O3Z3lTP27Lv6G6BfA34ebI3FKNYeVbelSfO
wFeze9Ob6m2rTT8sQtPwYHav8pi8phlpVnqzO/B19p6U7Vl5dzL52/KovCoP
yAu6cxDuTPaKPLhD3mn6UTPZBX/K/hc0w0nNMrkWeTBYdzXj5bkK/B/V/nP/

            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9931537513148884, 0.9877648912614957, 0.49620626465400586`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVctL1GEU/XTGGhoUa5yK+X4Q7fsXslqkaYmmREU4ky4MWzQ6ai2KFpWY
j4oiyT/BXuYjlEDw0WiT9qBFf0ARLRTtoVi7Oqd7IBeXM9/r3nPvufc3exvT
tRfynXMDsBCsJezcVVgGdiBwbn+xc6XAvALnkludOwU7i/UC9huA56LOzRTb
PWIWNgc7irMG4OHA9nh2Pmpns1rX4+wFMAmc8s7toS9vZ/TL+6tY7yx07ifw
IO4dijl3H9gFi+J3N/AubDzu3DxwNeLcOiwTNY6L4nQcZxW43w8sBVbGbD0V
tzX9NismY28pca4aezUxy5v5h2Ep1YB7jLWmeEPwG8Kbp8JZ1eG7+G8A67z5
CAFrY5Z7Wczy5+8zwBPefHcnnDutWIw5GTfO5Foes/d8S47kyjxHFZtcqnWn
DvYNPneBw2/gS2959gCP4d4Y/N4LjGtW9WL+1LMtarHKVK8ZacezK+iPy7B0
2Gr4HDYNK4qZLttgRwKLu4ZY5eqHssB0zqofRhLmaxjYiXtfUMvd3mJWKO4D
6U79P3vzfS2wHm0LW88+wftG4CAwCWzX2UesQ6h5Pt6NKz/2xaDuPwb2wVch
fHYC37IWyOMN8Kt+c69IORUqNn9fZA29aVTlrdasF98MqN/Yd2nNFHkuqM6s
wXucTeBuL/Am3m8g9z71BrmyJ8qlIfeGVatR4CPl+TBhvc+a01cPfDXiXZW0
pTas3UrE8mW/1qmv2SP93vrrpLd+ToPXcsT63annu7ztzQPvwH7h921v78mT
3OibMVJh87GqGWyKGq5vWrO/wuDXAtwXmA/6ojZF3uJuV8ylyH+/1JQ596iH
s978sm7ktBBYD34ITPM/uJtfYO/JZ1m4ormt8TZjtcBX0viWviXsZ9ZvQrXl
WUbcORfs01ZxGkvY7xveeJIz9yfkh/5y3vJl3rm49Qi1nZRG5M3Z5Rxynnd4
06AE+E5vLgkr9Y61bBYn1iwkvcYUl36nAtN6MbD1pL535NeqGUkKO2A/1A/s
izxv9fuUsJotSYcW3ef765pZzm4qsO/DCOdG+eak0Zp0mtMMMseQeow6DSXs
e/IsYXPdsYlTvTiuS+cmfZdYh5z0Zv1eB/b/wdma9jZLjNnrbQbJ+9+3RjVh
bSo0L5WB9W1G+tLIPy2t26XrXxSXBj8=
            "]], 
           PolygonBox[CompressedData["
1:eJwtk0tLlVEUhpfnnFI6KF1OF85eEM37CV1s0MVSECUqUk+dQVCDLAIb1KyL
ml0ouv2CohulhiGEimWWRTXpD0QFFXQTrFH1vKxv8MCz9/72Xmvtvb5V1e62
gzkza4QCvHWzh0vNHsEbfKhsdpyFQ3APvwVdeCfcxP/CP22cZ9aQzD7Drlqz
CvzEz8PvOrM56MP7OLN+idkCeM/4FeMpYj2H1/glGMY3sH4Nb4HqQrO9sA1/
Ca2stcNH/KjH3sc6wwP5BMzgmzz26owmvB+K7B1h/aLG5DBLblVquEstpxl/
YfwVevE8FKgtD+9Y70mRu87oZf99mF+KnB7gaxQTHyVeJ741y181q/YBj7tt
YDztcae628MwjF9lbh1rTXAdX0G8D3WRk3J75pG77qhZ8dlzrBBvNIjv9og9
Ah14LkXuOajBT6aIpTNP4NPQXSQHmNL5KWrXnNYm4QC+H57gE7CyGHNaW+2x
9wjk8cseb6caVMup7L11B2fwcx61a+6s6od8Ke5Qd6kzdNZavl/vUYNqmYE9
eksPVw7jxP8Dy+vjjTfr7jz2TkIFf+HRC+pp9fZs9v0y+IbvSNGrXbAdb8v6
V+s/8IEUvaseUa8sStHrNbA4RQ+qF9XDn/AbvEGlEP/IbfxpirvbB2MpkOuf
uIDfKUfvaY/2tjC3szZyaMUHPWrRHQ3hpRSx9U0zvjHrb9W0BZ9LkbvG3/H+
ctSmHm5nfMWjt9Sj6tVf2feKp3/3P4Cgkt0=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9737711324299798, 0.923186012234659, 0.35260623170684324`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1Vk1PXVUUPeU9Awk8ehG4j3fvuQMGWlP8BTXB1MSExqhJW1peISUwqAVa
GBkxtioIGr/HTvyMQ4JtdaiJg36psfp4mBI6sE2eba3VqH/AtVyLwc46b999
9tkfa5/zBqcXDs63hRAuQkqQT7MQRsohfAzs6gvhsSSE4UTI3wOQBLIbUoa8
modwrSOE92vS0Yb2r0F/E/oVYL/31SC34HcD/m8D7+JbrRLCP8CRGMJz2Pck
cBB21UT7/sS3DDb/ApchG/DZzGU7C5mD1OFvoqw4Tib6Rv1iJ86DrgVpwG+1
N4SPgPchk2kIPUUIY8BL/fABfAv6XtisArex5wZkq0P7mrDpA2aJYkshP8Lu
KvQ/AJc6Zb8CHEN8U+0hHHbu3PN//onW3HsO+Z9GzOvAX2A33BXCJrAd35bh
owI8az2/dyf6Rv0qvr8ISRIh/XHdY2R8rGGP1z3ex2+PI9Z9wFJUf5jnWcTx
O86ooM5/AF/PVbOBXD1j7BX3L+1TTl8j70eqyv9v95H9bEGmkXsdeD6KE+d8
JjlUM+4zr9jbWffsqaj+PR0VH20eBT6BGuzvUo0pXLPWDcj1DnHiu6iYrkTp
tqzf9pq6n/CtAZurwMuQn7F+O6qv7C9/J851h/uZY6afm+YE8ZbXFdeH9jes
JwfII/KGvplT2ivddcc9h5q/4tnhDJG/1O3kxPU85C/OBbh5z/ylD/r6LYq7
raj+Mb5579m2j/ei5uCQc93sV/5DVfVuL+TzTPPzcq55WfHMHIzqyzNRevLh
pU6tiWfcC9qTj5dz6S8B91R1Fv3vxoydAt62P/a7G/JsFN63fcPxDUVx/fko
7rN3+93/Lde8y/cPe9WM6t1GVL8GPG+s64TruexYGec1c4BcSBHbEs7uK5TX
Gc/VFXPphSiuV82DpmNkLR+Omsc9wIvOnTU46buHPbrn3t0BnkAs45AxyBR0
05DjqeJifOQ49e04bzRVTdgjxsE86t7Pu4r1rHv/bKo6HDfyTqaO55KbR1L5
pc8jiK8JH3fQ861cZz6E2D7D7wPQf5Jpjivu0bjPZcz0V/NsvOOZeTcqD/rn
OextzXs/jKrBA8ALmTi65nMOQ46WFRM5zFy+jbpb7trnpPP7FXsasG0BL9iG
tqc9L7Nl9Y997C/k94Rjrhby9U2Ur8mdehWagVKhek35rAOOi3u/iOrFehQv
Ut+17MmC77268x713hHnRpsh2824b8fKsmec3LNu/2tRduwpe8t8TpWV34Tz
m/N63L/f8P3Me/qQ35o3M8VZ8/sy7330s2ik39RvAt+CGevoc8WzzRz5LrJW
Dxbi5qrfo1Hf7Udz5b/gmGnDWSCfWr6Xvo/iSmI+7rxbPLfdNWftdxW6J0Ih
zu817yej3odh4K5c/xnacr1l3X7P1syr85l4Mei3qeT+thWq2YxzXPLcsNYb
fhd4x3xgXnIOvvT/j6+i7iCetRhVl1Xfd5uZ5qiUi2vH3Jv/ALudH8g=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlMtLVGEYh1+nCYVST43ONOd8s3BRQvYXtJgoCIqoQNPGlTSbwkqXCWZh
JdF91aJNF6hl5qWW1aqL3cQZhdqlYFqoUf0DPT9eFz94znd5v/d6Wsr97X0p
MzuA0uhYYnai1myWjy74czB722xWypr9gB/GnGXvILoHz7DWmjN7yZkP8JwE
z0rwGso3mZ3k/m94BJsLdWbz6DL8MbjtTvQafs/a+U1mg+gNnELVtPszx3uP
Yn+7hB7DN7gzw1sVNA1PBWf5JN+W0Bm4HzUUzDKoi7eG+c7C54L7PoW+wBPY
HMJ2HxqDt/H+Yp37LN//obieeCLywPnD6BScyZhdh1fZb2C/Hv2C04o/8pgU
20rie2VyvAgfYb838jtH4bvr+3n0B37BWgv5y6JJ+BZqynjM7+BdaHfkb+it
VlQre6gN3pB47lTTDng7a/s2+5kdqhVrRb73oq/wMKoQaxVdgpeD164XrcDd
ifsueyX4qd7DtzQahY+v7ysGxaKcK/dtKILnyWkl7TWtkW+JvyUfhuCB4L5v
QYPBfZJv8vlb4j7Ilx60Cl9grRtb09i4mHjNVLuzaBwucqYYeY72BO8Z9Y7u
PIGrwXs1R04r8P7gtVVND8E/g+dePaxelk/yTTV5DqcKHttOVAO/Yq2c9R5T
r1nB9zQTmo2tBfddZ3Jwc8F7UT3aCC/Fnhvl6DvcwZ3TkfdIe/AZ0awo52Pw
RvmX8TO34QfBY9HafXg59vrL5gJ8LfbaqUad5Otv4r2mnl5LvIaqZSOagD8F
nw39A/QvuJP3XKtH1CtXEp9lzcwktseD31XOe/TvSHyWNUNX4ZHgs6Ievgk/
i71WA2gU/g94daOV
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9425402216817904, 0.8098981568440182, 0.27262471749206685`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
qw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtIVVEUhld2xVspXvW+vGefSiWjIshZWWaZ10CjwBcWNQkiSSojgtSy
cBAkYVCjJqZXIoiCwEcmETQJamS+yppEaZolRVHjvsVq8MO391577bX/dfYp
OH629kyaiNShAFpwIq0xkdMo2xcZZlwYFlmLhuAc5jpYa4mKLDNe9ETSs9iL
5uCLzmI3owvwjYRILonzUGe+yAbmAiGR8kyRWeKXUQ57W5k75GyP7g0y3gI3
ona4DTXAG52taY5i+KCzvedQLbwefc0mLyqA65ytPcwT6YGnPTu7Bs14JuVq
dBme8ozHgyJd8DgahkfRG8+kvImYDviFnh81jwb1bHQ+anO6thW/mvBrMC5S
Cf9mroe1LjQCh5nrYr0TReGfztauoV9wum9cynoAXnTmfTP6Bt/Mt1pfo6vU
s+BZL1oyRMbgW/hfiPdF6Db8nblQlnm+pL1z5s0j1AvXO/Nae6q9rUcnydWM
muABcuwnVxW6A7d5lnuI808wjmv/Mq0H6+C7znK/j4hMOKtZa1ePfsAL7Jlh
/1v0Ce5J2LeiNWvtO7lzN95dR1nwPtQQM0/V27/kKAmbp8/gATTCecMoBS+h
CmKrUJD4GcafIxajsZPOavuApuBZNBexmHdwJTWc4u6PqecId2337K76TVyC
j3nmtcYchRcTdhf1rJHxE3LsoL4yNAp3MveKvdXE3CM2n3EybDEaqz3UXmrM
FbgvYV4nUQqe8OzbU48n4afOvnXNMQbPEzMdME8/wl/++6tzc3B/ws7WHmov
Xybsbhqjsf3OvNM31wevxLOSmP0TQvBqdACuQWvg7b55qz1JwsXoAb3qRWXw
c2ffdjeKMU5D22KWU3P/ceaN9lB7WcRcKm493+Vbz7X3emapbzk1t8bshsvR
/biduRfO8O2taM+196t8q1V7qr3N9a0W/Yfpvyzi279O36C+RfHtW9AaV8AV
vr1dPWMPfNizt6BvaB7+Bzg1vSQ=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9039403815060328, 0.6566975323603451, 0.24155783850297163`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNWH1s1tUVvtICL/DS79KX93d/BWqxIKIwWRkOJpbPSQZOymQwGBgpa2FF
BCRC+VDBjGSbgH+s4hbdnBsGA5kugAbmJBHMxubclgEKiImBgWKbGcgAhT3P
nofoHyf393Huueeej+ecewfcv+Te1i4hhHM3hFCA8duVISzKhXC2Twg1fUMY
BDqM9+n4/pOyEB4F7cD7KdB20PyKEOaA5oFKYwgXi0Iow/hH0D2Ycxljr+IQ
bgENBY0D33OQ/TxobCoZDRgbwDsBNKVS87gedRmQDaEuq/mnqRdoKOhFzN9Y
HsIT5eJtNP/y7iEsA60C3Qa5w8B7K8YRpSHcDhpZqr3dY37yPmL+DPjGVcEW
0Hmi9aS+JOo7DeOMCq3N9+nWlXaJmRCqQf1AA7FGX9BM8NZi/aOgatDPMKcd
dAe+P433p0DtOdmF+7sNNNg2X5XT+zDbbbD9wH9jIHssqBlyDlr+EdBe2OJ1
0Kvl0vUZjFMxrs5pPmW+hW8HQIdALdhrE6gZtAf/fg/aDZqMPU0C3Q3agL0t
KdPzZNuZ/2iHmbYF7TS3QrFw0Lpwbz2gdwGoC2hhldbjfts9Z6LtSVty7rPe
C+OLczLFknFXqm93YhwN2oznGzGuxbgvp/21WwfKHQ3b3GkbzXN80u8POjYY
Iy1RfvohxhNJCPV4ronipZyWCsUX98d9Lsa/GvAscmzQh1zzMGzzMPhaQRtL
QriGWP00Kx81gech/L8Ee5VCx4sYr+Lflax0qICsCL6FGAchbnaAXsrIZish
LxRL/uUirXEk0b5uBP8/eoaQhZx/9tSan1nu+4lieR7GgZBVl5HsBNRZoBit
AF9RVrHaBFklkLkA45ZyrU2bL/KeuC6fW/zeJ6NY74X5P4/69gzGXYUh7AQd
LZRdabP7QI32Mf1Lvan/sijdaq3fYLw/jn3eHLV/2mFnRr56BfJ+DJqbKE9n
Y9wHvidh+4sY6xFTc0FzqmSHq7b/Cez1PdC7oO9hzlLMnWMZlEuZ/He8QLwf
g86DThZI51tLpT9jgHthPh/Hehfgw3cxdpif82Z4r+Rrduw0Oe5GGHOIPSMc
k/TBQGMF1/7IcsY6bsmbLZY/6Is2xFWmt3xM25RC9wrQd6NibmYUThJnq7PC
SeLen0H7c3ofjvz/TxTGdjJ+EuHq3zHeAFnXsP5V0JqcMJC5NSFVfn0t1Xfi
B21diXnXEJPFWdl9NmgW6GX7/3egkZizAvz1nst5I0HPR+HTvzA258Tzg5xq
zdsY+/VVfj8J2poTbrT7eavxktjSBr13wRaruA+8f+CaNMyYT+yfVqU5lEX7
3ORaMiYV1tyU6juxl7YrxPsozOmK8RvmIS/rIWsF99joke/cE20y2+tQr83G
euIYsZA22WW7DE6l6yCM5zH/Y/oClMsK72hX5ibf+fxhXnNP5/W9yv+K/J/2
Z77QDv2zin/Gw2MlmsO5BzEeyssnf8pLR9aeN3PCfeIScbkbxjJQV1DqtQYZ
j1I/H4XPzkDfY1FzSj2Ha6fW5aqxjRhUZn+Rt3+qNapTyapznvdLteZ/o/Br
qfGZ2NbLe/yVY4axw9xiHWX+Mz9WGrO6eV9l9nV/+5v2eMI26ahUfWT94z5O
2wesicxr/j/jb/TPS8Yh2pf1j3WwwTI6zDfPGEd8Yxwszik+yEvsv6tSOcTa
yhpL/2VcE1mTh7uu17mvOetYPuta/KbjiH6blOp9omNylteb4tpMHWmDbp63
37WR64+vlO7UZ791IS5M8Hf+3x01fhqVOwsd11NS5eY3U+2ddqM/Sh1DrGvj
U+1xKMaTUTXvRFTuM++JKYx18nJOD9d35h3rSZH9fdHYfiGKn3ambxjLzKVX
TC+7Liw03nLObNcB5iVjjDFMnGXOzjFGnbb/6DviDu3YbGxjb0UZ892TsJfo
cI6S/45UWNLb9ud89pLtjjvafmqVYod9Vb31oW/OuZdjT9dkHtrhfduKNutq
ObTrrET9yvi8epPrNWSU5VJmtTGfdqSd19rfrG8PunZOcVzQx7TVeMfAJtjg
R6C2cvUz7HEbQHvysuvuvPpH6jzVtazZ9Wy+eyR+Y5/JHpy8W/OqSz/Ni4/8
rGl93H/Qz/9OVMsaeS5IZa+eGJ/yXMqgfswd1lD2vlnHyVr4p4R+N0+Dc5L9
OuOreyrbMm4p9968avzyvGRx/5xHnad6z8zdIaWq942u46zn9FeD+V6Dzt2h
85lEucm85LmFuMMejbWQmLXUdv9Nor5sO8ZlWPsYdGjGeCkqXq7Y1/Qzfc9a
8az75gFRa/eP6snYmzVHxfB0996M18WO1ypjL2OBOlKHK36+4r5wmvt0+mme
98u97onqY/sm+rfJfnwtau+vYvzQ/qLfuN5i17u9nksZrN2s29RrnG3W4B5o
jOOg2D3DpSLFFNfZ5vhjHHKfxOU/gN4oFxawBrDPrXTNYw1sNNYxr+6POsf8
JZGMTT4PUu4axqO/tfmdeLvavRDj4pj7P9aR9a4l7JkOm4ff1rn3fSGqTvw6
Cj+HW9ZCn6FY4+gfno/powPeB/XrZ3xj/F8wBhJTGDuXbZMq7494tTQqHpdE
2eOAz3UvJLLHbxPpSR2I4TOIs6hv37Evmh0bqxPVwHcSnTNoI/az3cG3lOeW
qNp4yLqSHne97BeFVbko7Bnis9Re++h1j+R/wz7kGvQj7c6cpR86jXPEO/r9
nPGE8zifepNvqPFxeRTe8Uy2xr6jD56LWvuXUX1DnfvgB6L+/yLK19scw4vs
0xZ/y/ocvcmxsM08K83H/p76b/T/9Y6fdX6+Hk9bLGuj98x42+lehvjFHnSH
+79697ysR6f8jfcBlRmdHRLHRbFrX5dC7YvnIvbjtT6zkbez4IszXK3vGva5
jjMemSuMI96/1H2pj+C3y/5OmVyD81fkdT56IBFGsD/iOYO6lWV0DjrrHoFr
fCtVjn8l1Z0Az2utZeJ7z2eo67p2eO4eY+VV96bEo6a85DclIj4vSLQu98da
Uen1z/u8Gv1vRKq4vz3VmuThfGLMaJ+tertGfz1VLlX4nLsq6p5mbdQavYwt
1bY3eWvci73tvmCxe4PHnBOM2Q8SnS9PYdwWFV9PR/mNtmVMLvJdwXHw1DrX
mHPsKV70PdIWx9P/Y9S1lfWU++B+WP82+L6Ntp7r+wb2vq2+k+H/KmM/+8qb
fY5ui/IpcZt1gLKoA2VPdX2c5h611X3qUPdv41LVyaaKL3rtFtf7h8xPWe8Y
W/6W6Nz4OS8PC/XMkWfKSb4/Yv+Ruidnb77Z/ewRxyhrKfODNhvoc/dK5+fD
puA7kWGOSfbK90X5gj4p8ZrFhfIDY53vdztuGb/bXZf/mkifAbbdgrxy+JFE
/T+xinY65vNOj1QY/Jb7/g3GePrmlHOaOdfp2KcNcpbN3ow4MMpY8H3fQfA+
o9g5y9xlbK1xDk72PSjnrHZvyv6O+wne415jJzG01HumDT5zrjFmT37pbqPD
4yemz/3thGvgR6ZPzLfW+bImSj/iB21X4rWoS419xVrVGtWfnnQ8dHiNLu6P
Kt2rZn2/RJ8Sl4LvCMlD3uGp+uqvYnw06v5rfRQfbXXNONZpO9+SKhaG8Gyd
yhcDMdakOofXYlxnOZTX5rMg7c24WOEc/x/zNQiT
            "]], 
           PolygonBox[CompressedData["
1:eJwllVlslUUYhr9IaY+Itqct5fT8M3SxbIKIolaQiELBBaOEuKJGg0Ar0QIK
JsUCGqM3ipB4YdziElETE4hLEJELLxQwohgxVhHFRCLRKxVBwcT4vHkv3uSZ
f2a++baZv2PxioX9p0VEP6pBL6aIDU0Rg+hu+D40thzRie6FG9GJsyJOoSb4
4hyxphLR1hpxDXw6Ojoq4rrREWfAPxURx0ZG/Id+hv9mzzMtETOaI3bAF7Gm
r2Ib3fAAa7aWIppx5ulqxKfoXXhlXcQi5jYyLjNuQOs5cy/jd+C30R54P2va
OWsbNgbhr9B4xuPQQ3AfamHuwIiILfAbhflr9Dp8B1rFWXVnRuyE1xa2JZ+W
Yn832lZjn+TbbcwPsP5Jxu8z7mU8quQzdNY/xDic2E6Sk8PwJGI8l/F4NBGe
kM1d+gZfijbBm9FM+Hn29FOL5eg5+B7UQC0SaoaXckZjyWfq7Lvkc519urNw
DVVL7VkGf1k4F8qRcnV29llD6Fp4e9WxKKfK7cdoa41jPlJ1DVVLnXEYniD/
GiMeRRPhPtRads8shyvovPqIyWh0ssSqyQH2Hy2c6xI6Av+QnKsT6Hv4FvRY
g3voZrgWzcT2Ks7rgsfgc23FOW6DH0yek0/y7WG0r9E5fAFehB5vsM1b4Tr2
zKFXu1Et/FTVvaceU6/pm+amoxp4Nd8ODsM3tAZuLdzL89CH2LshOZZB7C+A
29Fv9c5BG/wAmlV2DIpFa7R2HboR/gDNbvaeDnhJ4bNU42WqTdW9X4+egP9g
zXxyNRf9CX8jG8T6C+OhZIl1J79V/7Dnu2GOYSE8Nrv3xqDO7Jwr98fRIXhE
9l2+Ho2Ee5N7TzVWrf9Cvfi7iTu9KzkHyoVi2Al3sGc3tj9BV8LPJvey3pgl
cE/Vd1t37nZi/aLwXdQbU2b+X/Rri9+I89n/e3KsPWh7sk/yTXdmBvw5+/c0
ucaq9Y+Mp5Wd8yF4eHYtlTPlbjrj9RX3QAlex7eN9MsC5j+CDybnYi82t8Cn
kufk00n4WLIvyoFycajwWzlFPcr4puTa7mD/y/AczniP83ahufAl2Swf5Mu8
7Fypp9vhq9F+eB+6Cr4g+63Vt/nZ3zT3GboQPp5cC72xemun8G1qxW/OZHgc
egl+C10BDybf3UfQALwi2fdJaCU8Ldu2bEzNfiP0VsjGZdn/AP0LdMc2wK8k
x6oefBXu1D+i7Br0J9uU7W50f7LEWrM62Qf5ohqshbuye1M9pF46R29UxTns
gWdlx/Imuhyenc1ao7WvJddOPbEY/h9d5/Jh
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.8697201685342746, 0.5013115375893873, 0.2130036539851597], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
oX1mmuFdPsNvw+U5fAjYQyb6jF9hvM/XlqV/Yc/A+0vOCI1px8ducn6sxzHm
U+5w7cKlPYfwMfWj0epIv7Ed2ptov9hjLm2ZchX5eqnnCezy5+s7qGzMc8YI
7bmTkZ8Bf2mdfTOOMeI83nZvckzXWoe1xdlkoHOHLwKb+kXlaVefGW19wpkx
wkfK82x2l7yNLjvSMxrzO04eukl63mV8mnafiZa53nMe571Rni9ZHxOtO96y
4y2/EbpobeprC1wvrK9HyxOnxw3p72FxvNP4as5k8k2p3GPWvbtZfL7tPGEe
z/hDZ1ekzxZ7HetpbUXqX9+6v1wgndBpJymX3m2Va2OqMmpEwPCAa9V10Y/R
d1+Mcq8FvNAqy4y03Kmx/j8Lnl5eTFvDdtpZ0O3R09ERxilv0JXRFW4x/U+2
MVI9+2blJumXB1wWcHznfB7UOflvtDi+G2N7uyJtsMPE8zrzwP0K9aV71JmG
2+5ljoeyV5RvqMPzX8QNHNk3Zik3y9rHWOpjXwnYN8bYJ+CfxdRz0DHQJS9z
P/uz6eg+nAludR+4WR3uAXXN0pkBeUGcsxv65CjbIA8daqhtj5SO1Pub+0rJ
v3ibZw3GzTixD+BnGym9rjH9MmGsNg1oDr2Z59HOA7QYIQ70iT/plqr0L2H/
RF9Hd3+0Mds5pnP2jfzl3MNeg//9p0Ke6Vif8N0A85G3+J3wIR6hvD5Z+T1R
WcNcvhs03qs6zx6XyLdnCDyzR+D34qy4f8DMyvQP4PMYrJw/ybaH2C84/F2e
ONm+TxKvEy17kW1fbPwk6x8q3gOF/sqggbbb3+djjVP2cOP46fDZ4Uvm3Hil
NNlXu81++pj2N76l+yr76wTpwRxht+Tcf3Jl1r/ENUqb8PTl8v3lxrHvwRMj
m5W7wPRRlkPWvOo+dZllLpfOZ9rHNbZBW8g67ON32MZllme/vLE8ZeAVlqWf
PwSuRwUcWZlt3KDdkT2U/fQFy5Vw7+vZH5pM9qw4RX/BAu1Wj2vzZ18ZH7L+
hoCxAV9UpO6DDoT8+YXn1m0Dtg7YKmCh9ymw8e4c8Z3M+63+zd0tt7V5e1an
jbCra35BMWUAOtviCJcH/Lsyn1+zDnYu2hgY6+YPAb+vSnvYu83O0lvYJrKE
9vpWpn2jmzaOpbF+3w5YFvAFZwR957QP3vhj9xBf8OYuA3caPqpMm8/AypTJ
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
wf9uxwcdn3FMsxzHsz5fqc+u5Lt7qX7DWeKlZv09a/zYgI6B42n1G+zOzBVn
YHABp9I/D85okTCwRaZxh36Q743wnfnBLfJ/Ase3yPKl58EtNrzbdqJx2jne
+gON0x737rl/z73zM2znePPOsPxGvj/bpiz/KfFJwLfF/EbHqoBlxUxfZR7p
nxofZL/gsdJ6fJ+U9814D/Dn9898P5Hv2/Ctbt6tXe77gj1NX2WbtN/TsQ32
+1izCvlNtsH2BR2YyyWeo+9ynonv4T0XfOHQmrPx+565l6r/FfVbYOMm71Zt
Feepp62y3SXWWaoNg7rPaZ9nLcLj33v2K+ma6Ib36re6j7Oneijp7G0j3Mvu
UC9ALqO3nWe/91kX39cD+iOw+3+mfkcZ8mkXXRd7MPkP6ndYZd4H4rzCtcka
Y33Nks9La46QceB3Wt0u/WdV+gewPeNvGKg85E4Bdu63tJe302beVj8Ffh3K
UqdbhAd4f4l7TPjZXnItcl9rZ8+6m3dJH8KWXdKfsIN5b+nrLMkdwv+1Tzs5
PpT5+lWe1G+6VF8ePr1BMYat2udaxD7EXONDpS72dZ7hAdr7j/6qd5rxBnxB
Hu0ttt9G7fzoxzXeDUSWsbeg/3J2xIf7Wrv0hSytS9n9sn5ZZD5yHL/qq5H3
74C36/KZOtgrsVu+bF3C921jvnvAUuuU0v5lf6/Z5pvtcs8e5x6PrwZc27XP
fPp+U78u/XN3eaE+q0X6Z97U54t9lXKUWaL/hnF94rnh43YJPHOvFtveD9r3
3nOc9PG+7b1nG/SFv+gz5QpygPneQX441rlDhrIXcVahT+ziyOvj3J8Hute2
9l5MC3mOfZx94R3LU+8Yy5bqECe9m2WJ40Pe2HMxz3OV65O0US1xr3vRvYRw
tLajLW1nK9tib3rDPOxLr6g7vKPdjPartN/QPrKsVG6i8fn6ANEJjrF92j3N
M+4ax9PNPpfId2/Ka/ATPNQoz6IXtZcXOsm78PAe8kh74+gL+F3RpdY1pVz4
oSnT8HfRHjoE+dwXwA+6SN9no/pXF+evk/11dv2QvpX3Ycnf3jln7n+r7w4f
Xmf9v9zlKH0ngrPDJ/oUkVM7WR/dopt+y1LbWxnfQ95obR8PqSuVdCP0oW6W
R2awR/J+MHsm38FlTx7oe2v93Vd//i5rwf9lVeT76qU4/5Yinzvwr1VkPs+v
Gif8t89rC/m8upDvcr5mHv+oeq2Q30952TTq8Y4vtv7nTFtrvRfNoyz/Wygv
y3dJeEeFfy+08LmF6Xx3spffbuM7LS8U8nu6fOO9rkW+j899H95d43vvHzvO
1wT6JK2sRb6PxXd7H/U9fuo/LY74GbhD8W0h/6X6mGcp3lnne8O8w1eiNe9l
Q9+bCvkPhvGFfIcB/HingXy+SUyZnuoB6EerLUNZ8CmIE3gQL31XmJA4bdAW
743yDhf38LmP//O8FfJ/MYx1qfP2mPg+Ie73G3/OuWCML0t/5hHfSKU2Xugw
z7LP+Vz6ny0hdCHtadufbViqB+2eddz3Ona+BcJ37f5bTF2NuUZ3a++3K/gv
wkB5lTrjpSf/s6g2n7vwPDcY5/t3fGuMdts5/3yXoZN35ilfkJ68f8q/gTo6
V23Mr1F3rLXtNqbxDwDmmHcpv3K+v3POG03rbHvEeWd0pe+Zofd9qC0Rm+Jb
Dfkv1S8bctxtbJ9++BYSz0P9ZgrfH3y7Id91Hd6Q/MDY+B8R32SFr1+QX+sd
F7on30/8WvhEfZRvDo7yu4v/dU39WMzvsPA9ljecj/XmEfL9wR/EaR/f7WKe
WIMbO28tTPuf9b+wXLnjYl8c6Ddp1vne2Y+2zXzxfb/WrlHGVO4cMaZq5wUa
feG4+IYM70fM8x2JdbYHnmvtv4QHZcELOvLMd0E7yg/wRTv3jAH1uY5Huq7g
f94v431Q3rd8rpj/7EDP55udfBuEbxxxJ+pl4/+0HO/u8A15viX/XjHPCcs8
R3AW4J9WnBv4zw805/1a3qll/viOHt/T28V1wDdsdvOdT/q/UBz4Rgnfx+Gf
NXwfgO8EPFnMfwqSx/dU+a4u3+98ynIPigP988/NTXxPqvRdN76NMtN+Xinm
+6LPOzbGxXdD6YtyvIfOt574RghnowNts6ft9/KdY9YEa4X3hsvlUcZbqVzm
Wx38A4x3jfkGB3HePSbcybx9PH/tLXS3r2q/KUI7Z7q3DbTezi02/DuUsvxL
jW++lP5tVXCt7CaU+pzsvPEO7BfK5MOcz3mFfB/7U8vxruwc//+1q2WYe94D
PsyQNr70n2kl2hDyfzP6edb3bUt1Sv3wzF72sLwO3siGGr+3xr/RGBNjWyu/
/yj/fyXvP+r7vODKNy751iX/qHtd3n1D/l0iL75p+Jq8xTd/+c4g+zjvM69w
j13tvo5s43093lPjPVz+C8Q37JepO3yoDsBeRPml6hHkQaexvgfYze8Z8F2D
cb77xju6H9on7a0Wh499XmO81McK213mnsf3bBfJx4sNn5OnT5PHWZfLXZtd
/N4N/9gh/T3pgFw8Xtl4R0Omv9KQ7S20vaek1WzlzP8pa/hfzVDX5RzzSzTF
VkAaa6+Ld5Ne9D1+3sd/zbl4X7myuJkMes7x8F9evhXNP5IXmrZI+TNJGr4l
noucZ55Jgy9mNePlKZafZJxnvsG2nzYNzkf4R1aql7/rWajadw24s8U3VbD7
D8PnGjAn4PGASwIuNo0z5laeM6/UPzBMX+WD2lqHGx9l+Ue0Hz/veYCzAH6J
7+ry3gxlh9vOTO22POMj4RsD+D65z867wNzxQFfeRN1/bbvEhzKve/5kfOui
/k72wX177mnwrkiF5zNsd/1M+4PAPQ7u2NMm7Q21Hnf1LxUH2gIPzpo9PW9W
2BY2Rfwh3OdZ6Tl8lLTgThH+Du4d8T077gbxvsVJhhX1eUeD88Xe3hPqZx5p
Z3nuYC4u/f/Vpyx+be5LcC/kDNsonVWoi9+DPo62LvcxuHsxxfbpm3si53mP
mzawyc+s3jDHzEtpLEP1D/F8g/HnbZM7I9z1oI9b6vI8zt2oXvV5TwsbPr6o
66QPdPq2Lv1EzNtW2siZgyvkiWH2Q71p1id+veO5UD6Fn5j3XQWe4VN4EF6k
L+wJ8B9lB2knHVifNgPuRWIn4E4AfrOVtvmd/EQcnybzfGp92lb729dutvmV
48H/Rvvcx9vCPnhv43jTBplGeXxf1OEOPHfUT7C/ddJ5O/1o30rzy6QVdhfs
MPA9dSs8b7OednXsz2uXwvbD3XnOytyfh/bMwQH286Nt0+9lrm/Sv7NfZMgq
7S79HDd6F3Tg/ZSBhsRZR/0NiXMXgjtpV1lmhOWZh6/tgztxxPd0bY0SN9JW
OR+0w30K3rtZ5VxiF9rNOejpPPSU3/hOCXIE3/nz+l1/5itly+XOKWuWOR9t
Wdof4BhPc4wD5ZVjm6X1lNbgSlvUp218DdxV4p7S5bZJ3v95/5/3AK6TF0bo
+4QP8G9+7ViJY2fD9rakLv2eq8UVWYxMnmO51dbdSTsD9oYf5Rt8rHzr4AnL
z7Eu98ieNOT+6uPmUQ7/7EOur1bq1+jZfC+BO2a8K4HPFH/pnuLzuHhyD22G
ZdaI21fW477v7cqJ55U/3bR5bCH/sp7h4enWudOyRzSrT8gd0lp9zZSZpH8Q
vJ9ybIyLMuTfLp99LT8jt1u5H7T2mTFyX4H38bnnyVrBJ9XZNcvdxK7uO9h+
sAF10oaEvYd5514utiD227WW6aj96TTTt7IN9pI+7kP01bFZf5top4Kf6At+
ha6b6rvmvgQ2LvBhP+trO+wJ0LFMWVDuM3K4V/2G+xasY2ya72ljLeUfaBnm
d7pzeal8+LIy4GN1iY8c30ptxJSDF/Cxfep9Pdp5Tf5YLU2GinNpT35bmr/q
mv/IPtaJG2v6SXkK/qS9N+W3553vKc7Zm+bT3r9t80l5G15fqaxZZN07rE/5
f1nnX+bz3Mt1Dl1YN+wz7De8S8Y+xx4HcB/zePfgiy3DfnuMz8xLmbL9X+LK
3Qls0PO1mcJjyAX4bKrtTjGcah88/8V02mvjngG+i8W5n3SFvk+4VqH/fc7n
nY737WZ0fFy60RY6wwnSZWoz2pK/p2uOdcUdjzL9ofD9Jc7/pfLAJ/pdBygz
WQPvW4Y+n9Tvy32bedLtAvGnDmvyTfFEFtJHubbWJeJO+v8DYTxGJQ==
            "]], 
           PolygonBox[CompressedData["
1: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
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8173190000000001, 0.13412700000000055`, 0.16421800000000006`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
M/Rz8HeO0Pagry/IS8bd50vnLP2z/V071nCP+oheXqc/gy+5RN6in8jAvtq3
O/Sd7iqmHCPP+HFfK6TPu59tv2b+fPUOPa7VVu5n21rzHaUHedylP4Bf8JX4
viPy50T+i4Cxkf8UH62YPh5+4pWW/z3Sz8zT9i/uce8VUz7mq+P/Kj3Q9Z5t
OD9xjv69b0ZbSml7scHvetb+71LqPLp/aaQlaYPGr5tvRD5LaV+KpXxryxmq
byl9SnxLfPy+nq04Y10qTnzkN537G8WkdbF2qkl5Lyn7HfzeXz4jQ9BL/Au/
fJGyjV0s70/I6y+07ZwR8T3wjYhnzFFu5xVT1zur7/he+GAMPFKbNqKYfvwf
tYX/pJzy5hTdqlOeexv3I563Rtv+02LKbqWy3OicmMsSde3FYsoWMnZnMWOW
vCMhnvhb9y/2scs9F2HbKkq5D7If7qtMIav4zdiNT9S1WnlWdFzGx6fHt7+m
mP1q7DtPnmDbGl1f1vziYu7p7O0POi/2rg7GPIh97NaG4IN0Mj5C7OSntqff
32yDH8ceNs/7ox+o0/i13yylHTu3mD4sfhh+7C7f13O/Msjz+3khJE9V5T8q
T1clcG56vipjUdzVEvPeYz/uZ7hrYN3K/Z7ymzYf+69Dc33+u8A3aX/zw71X
Lf+DQTvKO/v+mW8EFX8Yv3iwMsKYexyf9uuNwfDGjHclvBfZ5Ps5xiL2Mcj7
fd7EPuXcVjmvd6pybu96l/2Od9LEkA/TN/9r1V7/nHydcamPjE1x//2q/Sj/
2LpRHVP+8HnZI87vmPsEbV+x/bnGuZHPLo71jv2ZP3Ey3gfs9B3kM9L+tO2a
PDu86T38ny1/y3kx1jbHg5fE1hlvYsPedzotvrfgPUVn1+FvvlvkLSIxpLdM
iTPt9j0jb9Z41/Ky/7fsNt9qX97b0a7KvfidYsrOHvHuFgfvRj9VJrn726WM
0YZ3hLw9LSoPrAF60k7ZoGygZ3x4sti3KAv83+Y1aQJ42/SqeP9kvGyj7Xjv
xP8pL1SlzCNnT3mXtsqU75I8Os63/PxfAm0fOJ9WU+bEmEXfujEP/M+h/rN2
rW+DeXM8UD0pCs3qwMfK0x51sb/6yBzn+W6n1TnyRof7IuR8YIecB+coYpQ7
XY9dznWj73Y2+u/MljbfW327ttVv8vN8P4Y81+jrwPePlKePlHnyZ/rejTc4
vP3mLTLvkHk7PMe3irwx5+6nj+/dJ9iW+C5xXuLk3AvRhvusYb5f5m0ibxS5
z+WtBPFZ7gGoX+1b4kd9d8g7vrNt073NfQH5M+X9d/2HcE1TvlFe25QxEv5Z
eNy3iBt887HaO0HiJ+f51oV3ZsyP+fTx3f5o53aGPIAXS3wHC1289eatO+vP
+8I7fbu53TgtNov3plvU236+DezjO9QF1i33fhJ7sNA64vK8cef9eFNzrvmL
vn1mfP7HwF7e4ttV3nIPN849zPQc36zS/iFphndHyuel8oY5DbffGNsvcQze
Tt7jG1rwLatNPsA73pzC67uU4dm+i17vO1LsLraqtynf2LRnfe9MW8Z4wbn0
8K7vparUj6Pb6DBpue3mqr17xUttbOI2vxu079j23e4Hf9UOY4NrtC/Py/Pd
1n9oPfoADt6K886J9+E9pGuz+N6xzyuOCd1rxfe8+tpDncV+8Y6Ud5fYA2zE
t3yjucg6+McbIezAfN/hbbUPfF1sPW+JeNN2n29D7/WtXU/frbGevIVlfcAz
vXbvW0/ei4JrrrgYk3e4u91PNjsX+DpXmu5y7Nl+P+z7D96FUHefb6aon+q7
VN45Ucb5k3sG3hK9Xpv/+RzjP1TfU18Hew/PfRt3stwPcueG3s1SF1hX7CBv
O7jv7e+9PXe0PezfR1s81P8++tv+GOt6epfH/yDYKP5vQc7X628M9X8p+uL7
81aY+8H5Tflvx7805T8f2Bnszbim9O3x8Y/2vQm09XbsAdpuyrDlA6Sjt/5L
+b3APzfluD9vyvf407Un2JvynSd3mrwb4F4P3wL7jC8y2DtV5r1CO8q7nLJt
pYz3rI3+67axNv+14V8Y/h3CJvK/6SPeGfIu4STXhHlil5BnbAFvh172nd53
bXOa/OZcAi8GOrdBli/0zDLQshPE+bi29wTX52hhoG2gq/xvEz79Uuk7QF5Q
NsJz73meh4fqJxMTPkH/mLdea3w3RexmnWdvYrVjjafwXwq+3AWmfPPvyo88
E3E2Ik+MFr+bvqPsP1z/fKRtKDvfsc+Ulun6hNzjnW8b+l/smZ2Y8urmfJu2
sDlxDWtTx/yI62OLyv+s4DuOb0Mz/ugFvhl9wLMr/6AsbnPH2M97Ruoe8mz7
kG2XWcb9drm8fIdPPIM77yOqk/cl8w+oI793XN4McA7bIS3QhH8xquPe9yaj
Ou79P/hc/WT+v8Ce8g/Gdn3jrfY7RD97q3MG93jX6AJxjZIHTyjL+BOcIas8
0/Gv1rbalP0rzVN2uff/jzh38vAI/aAt/xYwzxbnTb/tvpvbpi5s1661+v2E
Ooje4fscof/ziGVfvpmryfE32mebdPFm+jz9kB3azV3mZ3s/zjo+JJ2cCfhH
5HV9IOwFtmKnNE3XB2N86jbJA8ZjD2cvh66e+rT4qou09ew90IZv87r2nj60
f9i44v3amRX6HQ97Z/+cdmW9/hZvTLgD/4l97xfXo34vk95p2r6X5cc0ebSp
zVr0dD0udR9kD+rpfyiDbYfN+PJfyNqkY43rMs6yHa4XY7JPLZEO9oUprs0y
6TxL/jE2OnC/+y18vdr9lH31c+fIXOHrcHl7r3gYAz1Ep1jDcdpf6Pl/eKsu
gw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFlIVVEUhpfXKCXBh+t09jnXUimbZ4smGiCoHst6K00rKiNpIKGniIig
wYaHiJCiLMVsfKuIQiu4FaUSBGqYeknxoaKBsjT7Fus8/PCtfdbee+29/n3y
yirX7YmIyEY0Cr3xRIoYKEwSuQD/RduId6A/8BH0g7z1xB3wS1+keazIMxSH
BxhbzLd05p+FbwYiv6MiP1EDfJyxfuYfImcr3IPmRGzPPriMNR6NEXmAljrL
0dwq9Bm+jypZuxw1wh3kvKbwt6gL7mD+yTSRDSkitXARY1+Y+xVNgXupIT9L
pAAl4Fe+1V6Szjrwx8Bq1Zwe+B9KyxapzuSccHd4Hz2c4QT8nLFzfLuaIfIY
rmLsIbXF0Qt4BXuuSRZZi1bCnYxlML8AdcHNnrGOnYcrqKGY2muId8IuJtLG
/i3IgxvIKU2yO9C7mMuabeR+QvPgb571RnvUDjdS06+o9UB7Ue7b3WrPlpF/
I7Cz6Rma4EHPel2BRjy7M727bjQDnob64ASapfPDfmhNcTiVsTq+1aL9xAPa
E3ozhIbhSegd31rRPr4vIv4esR4tgGc7O4vuoXuNdtZ79UAKXOOZN9UzCXi3
b73WO9vl2566910UJf+iZ15UT7bC11Ex8Sp0Be4OzAt6x3rXQ8Sp2dbzEbiM
nNNi9RWyXh66B99G+XBOzHrTiQK4P/SrevwY7AfmrVLk4BjqhU/h0Ux4CzWv
TjbPq/f9mK2lNQwH5hn1juYsh2c6uzvtufZ+M3u8h5+gGHEL8fbwfVzT3nh2
Vj3zZXh++B70TBXEBzzL1R7Ww8nOvK0ejzhbU9fWnu3le7tvtesbywrM8+r9
BGc6Aw+F/tH5+lbUM+qdD2gqXB1Yrt5BLrzEmZcG0XT4VliPnuEO7Dl7C/Vo
PFzgrLfaA+1FNIwbqfkg+SWesY5prs7RuerJXHihs73Uc+q93NCvl1COs55q
b5vQRHiTZ980ZxyxOHsbesajfJvgLFd7MBk+7Nnb13/AU7gusN7rG9S3+B+v
+M8M
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0TdOA0EYgNFBoqEGLHsdwOScg0BkbkBNEHaBMElgQUFPDYdA5CvQEArC
CaAhHYP0XDx9o392R7PabG5rbrMshFDkgI1ECO1RCF20MUgzOfM8BdYYMhtm
lBE6GaOHDnppoI95zw9oP92k2DFr0W1N66K2aiNVNFFHlnqW7O+zywp7VJoX
tUJrWLAu14gYcTLUkiDJatL9KbDOMa/EUiG8aLWmyXDIEdfcc8cNJ9zyyx/f
/JBMe5cUcRJEvNv74pMP3jjnjAsuueKUFFHpLBI8u9MTDzwy6RvyOl76J7rM
rPUUM0wzwT8BoDiB
            "]], 
           LineBox[{6859, 6892, 6893}], 
           LineBox[{6876, 6877, 6875, 6879, 6878, 6907}], 
           LineBox[{6891, 6909, 6890, 6889, 6908}], 
           LineBox[{6564, 6605, 6607, 6600, 6610, 6512, 6564}], 
           LineBox[{6496, 6559, 6511, 6589, 6561, 6562, 6560, 6565, 6569, 
            6567, 6496}], 
           
           LineBox[{6491, 6577, 6576, 6570, 6578, 6572, 6573, 6575, 6571, 
            6574, 6608, 6563, 6516, 6568, 6566, 6601, 6491}], 
           LineBox[{6624, 6595, 6547, 6622, 6612, 6620, 6623, 6621, 6624}], 
           LineBox[{6661, 6679, 6508, 6524, 6525, 6661}], 
           
           LineBox[{6625, 6539, 6531, 6535, 6659, 6658, 6616, 6651, 6650, 
            6654, 6649, 6655, 6653, 6656, 6532, 6652, 6625}], 
           
           LineBox[{6628, 6557, 6558, 6555, 6551, 6606, 6630, 6631, 6626, 
            6629, 6627, 6628}], 
           LineBox[{6510, 6502, 6504, 6505, 6712, 6715, 6510}], 
           LineBox[{6591, 6581, 6519, 6598, 6597, 6596, 6528, 6592, 6591}], 
           LineBox[{6527, 6588, 6613, 6541, 6611, 6614, 6527}], 
           LineBox[{6647, 6677, 6671, 6670, 6669, 6497, 6647}], 
           
           LineBox[{6529, 6638, 6500, 6536, 6533, 6537, 6534, 6632, 6663, 
            6617, 6664, 6662, 6668, 6667, 6529}], 
           LineBox[{6672, 6666, 6674, 6673, 6657, 6672}], 
           
           LineBox[{6618, 6544, 6540, 6538, 6530, 6619, 6648, 6643, 6641, 
            6642, 6618}], 
           LineBox[{6637, 6615, 6554, 6550, 6542, 6549, 6501, 6637}], 
           
           LineBox[{6609, 6553, 6552, 6546, 6556, 6545, 6634, 6633, 6636, 
            6635, 6609}], 
           LineBox[{6599, 6602, 6603, 6604, 6599}], 
           LineBox[{6579, 6593, 6520, 6590, 6594, 6579}], 
           LineBox[{6585, 6586, 6582, 6583, 6584, 6523, 6585}], 
           LineBox[{6645, 6639, 6644, 6640, 6646, 6645}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0ccuBFAUBuBrw1pZ6aPEDKKXN1BjY6MliDJ6HSREfQxtpz0BWzsiYSvR
xUsoG98svvwnZ3Fv/pzIyEL3fEoIYYtEdghTdLPCKmM5IcRlXI4zwSSnnHPG
BQ+k54aQQSY77LHLEYccsM8Yx4wSZ5wpsphgkmnmmGWGF+8vyQUWWWaFV/si
Oc+b+ZFic4JUSkhjjSgxytlknQ222eKaX374ozYvhEaaaaKDLuropJ02Gqin
hmqqqKSCGFHKKKWIEiK00kIh+RTw7d/3ZJdkN56T3XnilBNGuNezX/bRSw+f
dh988c4wQwwywJU7XnLLDXf8AyibR2w=
            "]]}, 
          RowBox[{"-", "1.6`*^-6"}]], Annotation[#, -1.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwN0LkuBFAUgOEjsS81YwgTiUKiH8uMwegUIijENBIttSFewFLwApZ3sAyl
SFS2xNJPEJVd6yu+/MnNSU7OTc0vTS5WRESB9daIDdYSEZu6xTY7LCcjFrSo
q1xxzQ0r3HJHc1tECx10kuKEEqckzBzpMX/88MsZ33xxyDuffFDVHlFJNTW8
eavVPtKMMUoveXoYIccQw3STIcs4XQwyQBP9NFJPA3U82fPIA/ccsM8eu8ww
zQRTvLqtzAslCsyR92+zeqkXPFPmnH8Fgjli
            "]]}, 
          RowBox[{"-", "3.2`*^-6"}]], Annotation[#, -3.2*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0L9KAgAQB+AzaTUrLbIcGqqhd1HQCF17AJ2CILQ/D1BzS2XmE1Rr0CuU
im0SiGZWr9DX8PHj7oY7bvOgXqolIqLAXS7ilivatLinQ3M94oRTLtcizuQ5
XRr06THgna2NiG122OWQI4555IkHXvjkh1++mDDjm8V8xBKrPKuX5QoZsiww
1k/JNEnmSBD0zLq88coN18xzQZkSBYr/O90+ZcaIKhX22GfiFx+MGTLiD5fw
NB8=
            "]]}, 
          RowBox[{"-", "4.8`*^-6"}]], Annotation[#, -4.8*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6830, 6831, 6833, 6832, 6834, 6829, 6835, 7044, 7043, 
            7045, 6936, 7046, 7047, 7110, 7111, 7109, 7112, 7172, 7212, 7171, 
            7231, 7230, 7263, 7345, 7346, 7342, 7341, 7343, 7344, 7359, 7371, 
            7397, 7398, 7373, 7372, 7374, 7287, 7368, 7370, 7377, 7369, 7376, 
            7375, 7307, 7367, 7309, 7308, 7301, 7306, 7245, 7243, 7237, 7240, 
            7155, 7150, 7154, 7145, 7153, 7061, 6999, 6997, 6793, 6995, 6915, 
            6869, 6914, 6913, 6881}]}, 
          RowBox[{"-", "6.4`*^-6"}]], Annotation[#, -6.4*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6823, 6825, 6826, 6822, 6827, 6824, 6828, 7049, 7051, 
            7052, 7048, 7054, 7055, 7102, 7108, 7050, 7107, 7106, 7104, 7105, 
            7103, 7265, 7264, 7260, 7259, 7262, 7261, 7228, 7317, 7249, 7320, 
            7318, 7316, 7232, 7319, 7314, 7244, 7366, 7313, 7305, 7303, 7030, 
            7298, 7138, 7304, 7242, 7241, 7238, 7239, 7160, 7151, 7158, 7152, 
            6994, 6992, 6989, 6988, 6932, 6930, 6929, 6926, 6910}]}, 
          RowBox[{"-", "8.`*^-6"}]], Annotation[#, -8.*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6812, 6808, 6813, 6814, 6811, 6810, 6815, 7056, 7053, 
            7058, 7057, 6807, 7064, 7065, 7100, 7094, 7101, 7099, 7095, 7096, 
            7097, 7225, 7226, 7059, 7219, 7229, 7216, 7227, 7224, 7220, 7159, 
            7222, 7223, 7315, 7299, 7236, 7234, 7147, 7084, 7302, 7300, 7142, 
            7235, 7178, 7233, 7169, 7168, 7167, 7157, 7087, 6934, 6991, 6990, 
            6933, 6987, 6931, 6923, 6928, 6921, 6927}]}, 
          RowBox[{"-", "9.6`*^-6"}]], Annotation[#, -9.6*^-6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6805, 6801, 6806, 6804, 6799, 6521, 6800, 6935, 7063, 
            7029, 7062, 7060, 7031, 7023, 7032, 6777, 7093, 7089, 7088, 7092, 
            7090, 7082, 7091, 7213, 7221, 7214, 7179, 7165, 7217, 6993, 7218, 
            7215, 7180, 7182, 7184, 7177, 7183, 7176, 7170, 7164, 7166, 7069, 
            6986, 6984, 6970, 6974, 6982, 6983, 6925, 6919, 6924, 6917, 
            6922}]}, 
          RowBox[{"-", "0.0000112`"}]], 
         Annotation[#, -0.0000112, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6787, 6790, 6792, 6791, 6789, 6788, 6794, 7021, 6587, 
            6955, 7026, 7025, 7027, 7022, 7028, 7083, 6783, 7072, 7086, 7085, 
            7024, 7081, 7073, 7074, 7075, 6985, 7181, 7163, 7156, 7162, 6973, 
            7071, 6837, 7161, 6977, 6975, 6872, 6971, 6905, 6904, 6906, 6920, 
            6911, 6916, 6918}]}, 
          RowBox[{"-", "0.0000128`"}]], 
         Annotation[#, -0.0000128, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6784, 6781, 6748, 6760, 6785, 6782, 6786, 6979, 6874, 
            6949, 6980, 6953, 6981, 6978, 6956, 6958, 6960, 6959, 6976, 7068, 
            6968, 6965, 7070, 6883, 7067, 7066, 6912, 6967, 6969, 6972, 6964, 
            6966, 6900, 6899, 6901, 6903, 6898, 6896, 6902}]}, 
          RowBox[{"-", "0.0000144`"}]], 
         Annotation[#, -0.0000144, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6778, 6774, 6780, 6759, 6779, 6775, 6764, 6768, 6770, 
            6765, 6947, 6945, 6957, 6954, 6948, 6950, 6776, 6946, 6951, 6952, 
            6836, 6962, 6851, 6939, 6963, 6961, 6873, 6870, 6864, 6862, 6894, 
            6871, 6868, 6897}]}, 
          RowBox[{"-", "0.000016`"}]], Annotation[#, -0.000016, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6766, 6762, 6490, 6548, 6767, 6763, 6750, 6755, 6756, 
            6769, 6866, 6940, 6847, 6740, 6942, 6848, 6943, 6941, 6944, 6938, 
            6867, 6865, 6853, 6860, 6863, 6861, 6895}]}, 
          RowBox[{"-", "0.0000176`"}]], 
         Annotation[#, -0.0000176, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6752, 6751, 6753, 6754, 6749, 6741, 6580, 6739, 6727, 
            6746, 6845, 6742, 6747, 6846, 6850, 6844, 6842, 6849}]}, 
          RowBox[{"-", "0.0000192`"}]], 
         Annotation[#, -0.0000192, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6743, 6745, 6744, 6726, 6728, 6731, 6733, 6736, 6840, 
            6737, 6734, 6843}]}, 
          RowBox[{"-", "0.000020799999999999997`"}]], 
         Annotation[#, -0.000020799999999999997`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6729, 6732, 6725, 6730, 6735, 6841}]}, 
          RowBox[{"-", "0.0000224`"}]], 
         Annotation[#, -0.0000224, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
w4HM0a00afWv2Cr51k1epAz/A4fEuy8=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -99.91572429169295}, {
                    Rational[
                    15, 2], -99.91572429169295}}, {{-7.5, \
-99.91572429169295}, {7.5, -99.91572429169295}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -85.91308378668515}, {
                    Rational[
                    15, 2], -85.91308378668515}}, {{-7.5, \
-85.91308378668515}, {7.5, -85.91308378668515}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.91044328167737}, {
                    Rational[
                    15, 2], -71.91044328167737}}, {{-7.5, \
-71.91044328167737}, {7.5, -71.91044328167737}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -57.9078027766696}, {
                    Rational[
                    15, 2], -57.9078027766696}}, {{-7.5, -57.9078027766696}, {
                  7.5, -57.9078027766696}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -43.905162271661766`}, {
                    Rational[
                    15, 2], -43.905162271661766`}}, {{-7.5, \
-43.905162271661766`}, {7.5, -43.905162271661766`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -29.90252176665399}, {
                    Rational[
                    15, 2], -29.90252176665399}}, {{-7.5, \
-29.90252176665399}, {7.5, -29.90252176665399}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -15.899881261646186`}, {
                    Rational[
                    15, 2], -15.899881261646186`}}, {{-7.5, \
-15.899881261646186`}, {7.5, -15.899881261646186`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -1.8972407566383964`}, {
                    Rational[
                    15, 2], -1.8972407566383964`}}, {{-7.5, \
-1.8972407566383964`}, {7.5, -1.8972407566383964`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.105399748369393`}, {
                    Rational[15, 2], 12.105399748369393`}}, {{-7.5, 
                  12.105399748369393`}, {7.5, 12.105399748369393`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 26.108040253377197`}, {
                    Rational[15, 2], 26.108040253377197`}}, {{-7.5, 
                  26.108040253377197`}, {7.5, 26.108040253377197`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 40.11068075838499}, {
                    Rational[15, 2], 40.11068075838499}}, {{-7.5, 
                  40.11068075838499}, {7.5, 40.11068075838499}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 54.11332126339278}, {
                    Rational[15, 2], 54.11332126339278}}, {{-7.5, 
                  54.11332126339278}, {7.5, 54.11332126339278}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 68.11596176840058}, {
                    Rational[15, 2], 68.11596176840058}}, {{-7.5, 
                  68.11596176840058}, {7.5, 68.11596176840058}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 82.11860227340837}, {
                    Rational[15, 2], 82.11860227340837}}, {{-7.5, 
                  82.11860227340837}, {7.5, 82.11860227340837}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 96.12124277841616}, {
                    Rational[15, 2], 96.12124277841616}}, {{-7.5, 
                  96.12124277841616}, {7.5, 96.12124277841616}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -78.91176353418129}, 
                    Offset[{4., 0}, {7.5, -78.91176353418129}]}, {{
                    7.5, -35.153511956031906`}, 
                    Offset[{4., 0}, {7.5, -35.153511956031906`}]}, {{7.5, 
                    8.604739622117437}, 
                    Offset[{4., 0}, {7.5, 8.604739622117437}]}, {{7.5, 
                    52.362991200266805`}, 
                    Offset[{4., 0}, {7.5, 52.362991200266805`}]}, {{7.5, 
                    96.12124277841616}, 
                    Offset[{4., 0}, {7.5, 96.12124277841616}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -105.16671448107088`}, 
                    Offset[{2.5, 0.}, {7.5, -105.16671448107088`}]}, {{
                    7.5, -96.415064165441}, 
                    Offset[{2.5, 0.}, {7.5, -96.415064165441}]}, {{
                    7.5, -87.66341384981114}, 
                    Offset[{2.5, 0.}, {7.5, -87.66341384981114}]}, {{
                    7.5, -70.1601132185514}, 
                    Offset[{2.5, 0.}, {7.5, -70.1601132185514}]}, {{
                    7.5, -61.408462902921514`}, 
                    Offset[{2.5, 0.}, {7.5, -61.408462902921514`}]}, {{
                    7.5, -52.65681258729165}, 
                    Offset[{2.5, 0.}, {7.5, -52.65681258729165}]}, {{
                    7.5, -43.90516227166178}, 
                    Offset[{2.5, 0.}, {7.5, -43.90516227166178}]}, {{
                    7.5, -26.40186164040204}, 
                    Offset[{2.5, 0.}, {7.5, -26.40186164040204}]}, {{
                    7.5, -17.650211324772155`}, 
                    Offset[{2.5, 0.}, {7.5, -17.650211324772155`}]}, {{
                    7.5, -8.8985610091423}, 
                    Offset[{2.5, 0.}, {7.5, -8.8985610091423}]}, {{
                    7.5, -0.14691069351241462`}, 
                    Offset[{2.5, 0.}, {7.5, -0.14691069351241462`}]}, {{7.5, 
                    17.356389937747323`}, 
                    Offset[{2.5, 0.}, {7.5, 17.356389937747323`}]}, {{7.5, 
                    26.108040253377194`}, 
                    Offset[{2.5, 0.}, {7.5, 26.108040253377194`}]}, {{7.5, 
                    34.859690569007064`}, 
                    Offset[{2.5, 0.}, {7.5, 34.859690569007064`}]}, {{7.5, 
                    43.61134088463693}, 
                    Offset[{2.5, 0.}, {7.5, 43.61134088463693}]}, {{7.5, 
                    61.11464151589668}, 
                    Offset[{2.5, 0.}, {7.5, 61.11464151589668}]}, {{7.5, 
                    69.86629183152655}, 
                    Offset[{2.5, 0.}, {7.5, 69.86629183152655}]}, {{7.5, 
                    78.61794214715643}, 
                    Offset[{2.5, 0.}, {7.5, 78.61794214715643}]}, {{7.5, 
                    87.3695924627863}, 
                    Offset[{2.5, 0.}, {7.5, 87.3695924627863}]}, {{7.5, 
                    104.87289309404603`}, 
                    Offset[{2.5, 0.}, {7.5, 104.87289309404603`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000020\"", -0.00002, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -78.91176353418129}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000015\"", -0.000015, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -35.153511956031906`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-0.000010\"", -0.00001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 6}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 8.604739622117437}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    RowBox[{"-", "0.5`"}], 
                    TemplateBox[{"10", 
                    RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 52.362991200266805`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 96.12124277841616}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.00002383793173338203`"}], ",", 
                   "1.871504988302885`*^-6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000224`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.000020799999999999997`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000192`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000176`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.000016`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000144`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000128`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "0.0000112`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "9.6`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "8.`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "6.4`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.8`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.2`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1.6`*^-6"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693271439075743*^9, 3.693271615655843*^9, 
  3.6932717860835905`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
Gq2kYXrOqoWaiFefVG8m6yANbuvzTjq+Q+f8u193rnRm57PiP+afGL/JX+KP
LN65Wf4BJ3ClbArSR7wAw0Twcw0nhO6fweGD+L07BS/db+TEn/uj8dl6Cq3/
XLB+Rt2uITTfqq2jytU4uWHl+aFvfWi+fSl8X1MhzM3qX+/+zEtFhyTBZm58
q+JWtO9fspHRHSYJVIue4nndaP1pSbggeUGSxRtcNEHLiRRQ7FbrvUP58Tru
vVttshSoJOevr0H5lJgPuk3T2fmcheffGc+/LJ5/PTz//oT8n8Xj30CIfxUe
fz8h/osa6YK9qjywcsVi7wTETzGIWrdgOg8YdfY/m4/4xFdPymON2OfG5FcP
HBwceMFyX9VKa8QfUYoScF/DC3Td3pyzaH2zH7tZ6O/DPpdqk+URTwOh4Fkx
9mh8k5pqYsRcaEAT22J4FZ2j6MmHOx6sp7F4nQ/quwR7aZDWtvHObKS3e/eA
0+5BGjjef7l7K5o/miZU+MTJzufMv+TfmJD/JEL8h/H45SeIv3DoWHzRIT7w
POBx+tf9LsjN/aF8FB9U8VRO+XW/m181t3/XJeb3n8z1mR+Gl6TWHED8rsSZ
Ic/K+KE/0f4SL8rnjPMPJh9+xs+63uP+yT8VQldA9iO03h6+1n1gkTYVZG4E
uZ9G623797qR64bsfXYC923tS0VUsOozShFH+Txd+kpc6wEVzrTusFH4dc63
Teu7VUNl9a9FyP/lv+S/DI9/CI9/Nx5/Hx6/Hh7/n+unAFCOb9E+jvhs27Ua
2l8FQEWyy1kS8ddTsqRr+Njn0t/roRBolhmdjPq1f3Cf9eCoqhC03n4sNxnx
kjZfhOQMhVj87/lMARu/AonFKD9rBnnUSn9SgHKdoR7XwQCNHVtPcgqyzxUX
Fl9qNzwpARqVS9tDEZ+e99j+aLQEND78fl8G5dPSzub+i3g2P1H+pSfIf81/
jP95RR+6PwqD9qk32e8RP1TVW5CyTBic1Us96hEvW9ud0LeBfc5/9c/6LwK6
7kdeYL/Wc72EtPJf7wkrRDL2ofVKpHeWUXks+1z9e30jw0s7w0Q3dI59+WFs
WkMNGW6k+JndR+fYKxYv3kc1ss+lpy8ER9c4U8C2orqpAe1/1ginXV20ngLx
4bF5WW8YkLRwd+GjzRTWfGbmfzEh/7QJ8t+Exz+DEL/nBPEPRFet074kCsYv
1c0+Iz45U/rM7VxR6N87GtpWj/YbD93LFlaxnzt8/2c/LwZ3ZbfdTED7f0fN
sH2Zb8Vg78yPGxag/X/S5TDrh8NiLJ67UQTtP0nQpd30QQedYxs1Hz4Qv0SC
apfcF2vQOTZz32Ev71T2OZwvR8Z6vTYZWouPPXiI9s8rRDqGvxiS4d5BibAo
dA5Pc0+/us+Enc8IQv4b8Pxn4/lPJuR/5C/xJxLi//2bBHaqV2u80P787kIG
z4AgCZItl16qR+devtJw/ncS7Ph5/qXemYT6ImJ9ErG+6ff5mc1/S1FevLmC
BiM1FpSpW0qwlNyqGloZDW5lrZaYuqUOW/fPeZS57oYXdlJuB1xYIwlTGpwa
bFxKMM+74gdrVkuC96DlCxuXOkz3j3gUoWXPpAHKHBo4vCxYU/JrH1QhcbPf
hAbK+xTKDqF58We9lCII9Hfs94inwg6LpUf1UV4DLXU2TE+hQn9kEsnnKfN8
x+Z1Cc8rXhKeV/zun11H+81W68mu83RQ7dGMMDUsxZrnSPE4X6CDh7BsuKlh
Pfa7Xov9fMF085TyPNSGw1yzC2eWYk1tWx2N9ND5NOmTYeHMeqz6j/N5UCHx
eUMz4XnCY8J5nvg8gHie/TMeRcCC42aF6zOAYZwv64T4kpSb0DuLAWXXy/Ru
If7CH3oVwfBlr218LDoXql/RS0K8s/UZ/hR0TpSnj3iZo7g8/xhfDg7m+E4l
jO9GfHx/U+w6vGCZOU69PySB3I9Vz1lVgp3xfFTQOMhs12G/42Hz6oq3F2Bn
pGBQWLlMfXkJNrdR53NHpBTk9ujdV19OnG/oHHM148UxH0kIeXFt7yo0vuWK
i8yvB0iCRMby0Vw0H6r+mM+KEHM9ysPmKQ02Nej2iSF+48mVY0+aaNCS6dFK
f8rM5/j5aU+Yn4r4/PT4Jx52nbHt6DzNHNTWnmbO26JUis0+Re/nXCcPH0VX
8bUoMZ+3sOu8J03OH41G7dTQ2ZWkaaWYmY3fD21OZrseO/fHeKHrcYL56YnP
z/N/Gd/VhPH9Mx5FWOTDY6zNQ4cjBf46OxF/vlFgp7MAHUS2vHUdqGLOB/Zz
iMbH5Rp3NsiDyd6IqbaIb1i/q4e2SR5GKqqXxyP+3B/jG1Q4GR/fIXx8jfHx
vYmP7+/1gV33+e1qQPEUHWk43lftqO9cgpnYCy1WniYNVeKFy/Wd67Df48vm
78/QMpZ8JA0JEss+mHqUYGbV7WkuD6ShTde029SjDs8Pex+9j7YngnJRCmxK
5mSsQ/PBPcL12PEkKYg5tM35CWs9YfM+O0DPhk8Keqq+nFmD+CV3Nb1iRKSg
4VzXtNKnxOtFEWoJ87MMn59UfH7+nm/sum0Txyfz9qL2uwdlh28JlWJL9njb
PmS163G9bP5hqoCBzGM5CN15ZIG1ZClWfnT+JQ9Wux7znGB+6kwwP9f9x/Gt
/iMedN+zFRNeWSsHPskaFzevQ+eMZ4stup7JQaO13dz2agZ+P2LzjKcOPV8N
5OBsdTHl1z5LYOv2y/lGcqATe1BVrZZ5/TLHN7zwb+P7Wy+7jvnVi9HZCe4y
oN0c5aUdVII9os0jtbgx28z1SpbVv7f5jllaP2WgMKm2S/ZCCfY8vN9/9Riz
TeSDjDb+hf8939h153IbbIyXofYph/yb3XUlGJU/4w0FtZfqV+Z219Vhen+Z
D0sJ86H6j/woQsr00P1n6qRhY5R5qgCabwfOWOm7NkiDzRcjBzJrvrF5xyKt
Y08NpUGGLD3NEPFfJJ6/3jpXGm45HFrh95R5f5z4evEkXC+6hPGVx8c3Gh9f
Pnx8tfDx/TM/ikA628a7MU4W1HyXt1LQekt6tG/z3ERZsG5Ov6dax7we2Xxo
WCmjjUcWbor2Xo9EvLRCsHGZoCxskGtcpVr/d16WwP85fxTBebh2caG3DETU
yKY9Rnz1yvezKJtlQPnSTMcL9cz5z87nFTz/PoT82+L5T5NbWrBQlgrrrvt1
dCwVB9+t0lIGk6lgorFlWf4qccjnmhGgpkcFHRHGg+Pu4hBn16h5hU6Fawpj
YtzG4rBw58fwJE0qXMg8P7vWTBw8fdK/xs+hwvF5Bp4XbcUh/LhbvIASFbi+
zzBUmiwOZ638hCm6VBgwKGF0TxeHeOG9gXKmVOgKtOW9YcTmOQh8P4HvxHlf
hrNJ5SQq5L8+elxbRBzI2ucCLhugv/+qpN1PWhxysKfJ+6yoYB1gb5ytIg7W
WSs6TqhRwbf8VYvxZzGgmEm+MjT+VT8nlzo4Jga2KXuft9tRoayBIyAL9WeF
837/kr+3MaM0XoMKh+QtE/NrxcCi0Ch2qgkVdvW1SS5rEYNVGCMwdyUV/Mt2
hXzpFoPUgczEGyh/Z/1z183IFgMBz7zVjIVIX1nqwZwiMVj/ooh2bA0VFDO/
xc98ODH/FufXEfhPlM7gVehcGWl/4kdbqBjwzM6ZP9eSCmu7+wQcosVAZs0B
TiUPKph3jVAfXBID/elyG7lRvo/ru4dFrkPnAbEsTedFVPgS+Dr0q58YODAu
9OSvp4IPg/uY404x0CPwP0X/5O0J/LadnwqcZlLhGb/2IjsjMTgUeBZW2VKh
1viD7LSFYiCbfLrc0ZsKj7ekvONbKgbzB6X489E5mPHyuxCVLAYRlKd2jijf
sbE2qe50MWidFh4/5EMFWbdEi5saYmCC8woEPmYCnspPEalG4ykZo7lrRoso
DG10Mbyzigoam83cCntFwe6io0f6DioYmblaLBhl1/uJ4PV+Lg+65VXcqZDw
6rQc9Y4olJOUprgfRvOtNMDyWc1/5+/h9YGdeH1gacetropNaHxmalGjg0TB
aLHcCuXTVEh1OVnKe3p8feBkruPZPruo0KjKEJM1FYXME7SjrUlUEBhJMdJf
weaLCXwzzmfhvCDOE+sn8zYdpMoFo/XCZpFh6mcR6O02elCfQwWZ8jEtUz5R
CCTUTz4h1WytiKRCm/jTtbPjRUDD3J3vQRkVpoQ7KNneGF9vSeSn4PxUnJ9E
qC89knmGknOBChnGjt6PTUXgvcXACdMaKlQcfGQF9iJQg9eXRuD1pca2ThkX
kb71PHoBrl3CoLevgXqviQpLSdHbdL4KwxNCPaoRzm/AeV0CT6y/jR023H8k
lQql08Zmu4YKg6t75r4prVQIxO4VvY4ThjeE+tuxJKqdTyYV5JdXcLpOFwbp
Pc3vT3WgfPi+5w4zF4b2v/AyBJ5Ynzztkd2XK8+p0P6Jv/ZUsxD0+NR0q9Fp
sPrgIQsfQWFWffIyvD65Q7krsmMEza+jC+MfBguB/lS/nnwHGohN3xZu9Wh8
PfNEvDjOM+u3E/D67SOdMvsqyTTYc2T/kFCzIHT27C718afBhpPqZSdFhFj1
2714/bZ6qrV3thoNbA/dtrXWEQSRXTMvKIfRoOzDy8Fam/H13n/jifXtIfxL
p3fp0WBKSZjbum0CcCn+S9yXeBo8L3VqOXtCgFXfPhOvb+9xXz4oZ0oD6XUi
Ww7c4Ye0SKfEsmwaDHOFlLpU8UM8oR6eyKcTeFVC/b/Hjy9vpJbSINgyJe78
Vz7QWpJ0VrycBs8+NW0R5eRn+R3Y4PX/nvc7KiXW0EDodHdFtiYfqDSfObny
JQ2ym6ep3P4ffgHrCbwazmfivDLBH+Ggyaa8BZtpEKLVeLXRkhdWn42T+PQR
nUcZaSun2fHCeYIfhGTo5cRt+2kgr+1/jMuLB07ZJ589yCMJs4f2R1704wGi
f0rVJJVte+7SICI9OfnmnjbsxgpXh5ZlkhA6S+nFsF/bOL+Y2T5DiQ+LaeDL
76BjldeE2aq1eb9YIQkmN8tNEuKbMBfC86MrhOdDxOcDjYTnHc2E5yXE8yzx
+4NvMm/rTWYyoC7ZPLyxsBmL06dtOhxDh37PKKnJlc2s7w+Y7+9JS+wXW+gz
IOJpzZYRpXbMdbpEYxo6D8fVitvyardjzO9Zs/DvWZnfww7h38MSvy8l+tMl
ur09fe96E6aitcpswWIG1FuWP2/Y2YY5Xt5+uN6WwfKn08H93eIoPVVDYU1Y
A29at8JdOtxbUR/82b0NO7hq5osDxaj9X+PHvz9YjH9/UC2S+fA74q+/0q6a
1tqFnTLN+SAdRwdhV7dXoR+6xr2/D60Qnp9qwACN5dKqLnE92NJjV0cOIb7B
ea439cp4f5/Wk2qPnxXQQNbmZl/cnQ+YUMsmQ/nFktAmFrNPJ/XDOH+fZStU
E64W0uBwbr/VFEYX1iL3zmx0qSToJzlfOy3ahTnh83OAMD/DJ5ifRL+/ifJ5
AM+nHe6X9x73yzuhpvXzmW8Tlp3uJH9Ciw4dr19mKdq1Ybv2Fq17qEMHDYJf
XuEKJ50bi5qw0OXiNsOx8nDl67KmxfPasB6fz0Pi8fLjvp/Il3ufVTePAadM
lxQ7oXGqLCtXKLhGh6j4d4sd0Dxlfr+yH/9+5fvCy99fGzPgXYvrD2HUrvHl
oWYm/8p/f3O13vjvV4jP85wIz3OI5/nQ3ft+FqHz/EbHN9yaN5qxFvc3IjtR
++k8Y05j5fZxz5tOr7DMu4TaGS63TmjcbcY63FW2SHDRoeBYsvol9fZx1yfx
+iPOT+LzixMX71hn6cqB45rceWZ+zdjDYrLFuelyUObj9PNdd9u45xd1kx9e
zquSA5NFDpMKIpox+6jvqYKoPSIeyRHF147NIeg9QdD7mqC3AT+fF+Hncxiy
TVD9IQPakSPNzq+bsFSXjNqPgzKweXHI+tqItnHn867K4G0fzsjCpO62sLrJ
zditcFfRslOycL7lywynO22s83kXrvckrncFrreCoJe5nvdMsJ5H4ev5XHw9
jyX4+7T4f10bFUoDfjvFr0/cuCHaPaKjWEISDkzzeGLvyc3yM1LE/X0Yap9V
MqJp0B9Y7Rq7mgsk5qlP55gkCeVu5iJCqO2Br9e++HpNXO+zCdcj83kuBX+e
mxY5aWj2gCRonwgZ2h+L7h/H1Q0u9EmC2qkN5I5Nbaznffn4876gStLhuJNS
0LhgTcaa802Ydd98accQKVB0MbZ+7NvGer7TgT/fuZFqEyNZKg0blMt2OF9p
whSDC44/viMNw0cTDhVubWM939HBn+/czLuswHCRgUUrXa+1lDZh8SuEtJ1X
ycDMjWe+lR9sw17g8+EOYT7o4PPhKj4f/PH5YER4Hr2PEL8lIX7i80qZ2xnh
jerSUGoqSHW91IT1KTnURapIw6s5U9/N92/DFvxLvd9xvZPwerPbeL1ZPu5X
Ogf3KyX6bTLrzaLwerOO6T1Du/Y2YRafz9h65pBhu2mmzlm03gXPtXWYu5AC
cXi91ga8XutoxvlG55Vt2OvOw8o7b5LBL7eu+pVRG2bvJHd4nzmF5R/K9K/8
Eh24LlCgCXt5LZ+vD7VFplQ8/cnfhm0surOyxVdinH8otSXGmn9qE6azlUcr
upECvuqUOl/lNsxVtPdT+i//UYJ/6zZCvJsJ8dQSvt9KX/rN54s5A8w9S59u
DZAHarjC3c85dHDeUUC33yrP+n6uA/9+brDmnPjaBQz4aC9U+R61N03Zsskh
kw5DIrW5T1H78l/W/yp8/Y/E1/+LhO/VKL1k/tVLGLDPxi1UYZEcjPIkPl2G
7mMlF35UPbMZ/71a0iytW5PRvmNtY2Tmo1Y5sHY/bqFyC/0dv8yv1Da5cd+r
MfUunECvBr4+yOPrAx1fH/rw9YFCWB+Ifmc2qio2Y7HofJGUdbzZhBNiQh+c
HZ0iCc/rd8gumcvJ8jubgvud7VNZvm1REtoP153KldPggNgkCucPXUl4N/+a
+llFDjDG/T2tcX/PRZ5+ChntjdjuY6qJdegc/stO52LPG2yGvaKYTzQVOgj+
qor7tpRSvjVim/TO2b/hpEI6ZAYvHn6DPTm6KUeVm8ryVzUjzM/GCeZnMMFP
M/HxyrrY5kasMfvODscitC+/8ko0oPcNVvFZcDj43ng/03Maq7ertTZinwzk
T55G++rtC78lCiJ+VJl2aBjtm40JfqYT6dXD9YYS/CupZ+9/b6hvxNaOdLve
aJOERdY/RMpR/zwB9OzzbyVBCPcPfYz7h+4uOeIxp6ERi3th38trKwmDxZNF
YxH/NltiGdlOkuXf2o3rTcL1viToLcf1Ev09pT9GCBVUNmK6kY1SFAFpSOjw
jEn79Aazq/1aEyQkDXMJfp15SxM4Hz5pxKweuBW6bZWC7dJZ9gUf32B+hTOK
RbdLsfQaEvS6E/Ty4nqZfqaWuJ9pTfCsWrPXjRglRGBls5YMLPvGsyJn6A22
VPhD10MdmXF+pgO33vbue9aIOQcsnLXtgjTs7r25U2fgDSZ5VHb15Vi2n2nI
X/Ta43qJ/rl8Wxeprh5qxELl8+osHWRhtUH5I4y3Dfus+PDj8HLZcf6z3ntN
d9V+aMSovYJnJEpk4OWZt+ThsTeYsuRKb7cydB/7l3ptcb1Ev+C+kOAH7UpN
WMlXnccvdsiB9Ip1BSUqbRhH2EPn8l1y0ErwC17V9+WbgmgTNllwYHFElyx4
B60y4aS1YUPLHya3vmf7BWf+RW8frpfoT03cb6cQ9ttEf+dl/v27Kg2aMG+w
FH0vLA+uk10sBWe0YYF7X039ICrP8ncWm0CvDEEv0Y8yiLBeXSSsV7kEP8pZ
0Z7ty1Jo8M++R2AMK5ysfsVBXxL4h+UUvvSPsvwoU3A/yn7BwMWuqTQ4BNvH
xu78wJpTjRdnzpIEbMObnptJPzBhgn8lkW/CecD5hbhfpxbu15m5KCDlcBoN
3vQeVDnv8x0Lu12dImQsCacu+A5rL/+OHSH4k3Y4MTiupdNg7oUwy5nyg1jV
zxs/3UESeqp+8KcKDv5rvhvnewl+puUCEiICWTTICp85zF05gEkd4/yeYSoJ
XBpZ3rtuD4zzb1UMuiHtcQOtO/khaXU7+rGeBYmfh80kQfaw5xNrn37sFc6/
JfA/837zH3BeBueJfq/zlaL9Y3NpkLsujxKh2YcNRwieFraSBOeEwmBdpT5M
Gz//2k9w/hXEz7+t+PmXeB4jnucqCfsB4vv1K8eC5hiI0cHkYBvnfHQezDUc
GhGn0mF71OuEKLSfeIG/fx3G378GJY243UH38bSUOrUCxF9K02j03C0Pzkee
f61F+xGmX8BGwv6tdYL9G7HePhVztL432omN2R5Y45NLhuOCw4krXnViDYmp
76IsKLCUUK8+BS7eUbr0AZO/vTfeNY8MSauVdjzb8wF7mvvW+oolBWxw3uNf
8umE+nZfvznRy9C4wL2YWuN8MmjZrJXmFu3DVhpNPliG+Ai8PnwzXh8+OOS9
WN6/H3O/f4tLroAMhsk7A+RW9WNtxesLWhHPrCf3xfkhnF+L87NxvhXnifXk
1zyr3wyWDGBdxQfizVE8d+Z2ad6+OoCleXW21aH8lBDqww8k7N9cLzGIvQn5
NjcQ6VUU5H63cugbFkh2F7mP8k+sPyfyCji/DeeJ9eTvvV4WHXNB1/WcFW7W
aP8Pmcsl7Y2/Y7Lzn7fGmVIAI9ST206fLgTXfmCX8tcdUc4gw5rlafMXHfiB
LUiNydk+lwLP8fn2gzDfruPzLQGfby74fCO+7/eTSaipb5aDRJr3cIcBms9O
A8vvtcvBxpYDuZ3xdOAnvA9+V3zB+L2pHIjbZlSTZjNgXtOG5zJon9zH1bTt
RwJ93Pf0jhduPuJyZABpnk6CuRq6nyw6VV1bQQc9W92Y11PG1zNsTp3llWHP
AG6ti1I5BbJAvXphCbWMDgbNPTmNhbKs/flswv58L74/HyHszwX+Ej8Q4ie+
zz6S7pHenioLymfuX7OYw4CRSKsPR7NlIeigzhmfJLSOEN5Pq1zQVmghy0KR
uM7RA0Zony/VwDEkIwskniM5ry/TQYbATyLw0wj8Y8L7bNX5M7Tit8tAR3PH
3RXGDNgzbY+yVpAMaFm/U5NOocN+wvvsyb36xm6vpUE49dygzlwGPDZVnu/e
KQ1lrt/O2V5h84sJvBCBv4/zxO8PGn6GUksWSMPUO5f6XiK+6IOphdgiaYhR
uxtsepUOHoTvD45R2j8opUmBdd3V9wcwBvz63Cv/hhSMKDQH6KeO50MIfAaB
J37fI7C4z9OPKgXTcvk1IhCvf83FY768FByom6zigvj7hO97xpZfbbuzWxLE
znusv4h4gzDePTWHJCE8/0FdMOLLCN+rEXl9nI/Eeeb3aq3492qTP8cHWnXQ
IOimOIOC+Da7ro/lPTRQvFWwig/xxO8pbUPOCjVY0WBDrMfTQyifodIPXYvs
aZB9+1rHoat/50/gfCbOE7+/bA1onm2RSQWvazeeT0bxlHjriawpoMKycN/Y
NsQT60XfTa3yvkWlQuvh6y8fIX7ozsU8HgYVjpw97ACp/51n1pd+x+tLv/xI
pMrslIA1WnUr4oEB7fWhjQYHJGCJzC4+DN2HifW0Y5W7ira9psAGIauXW9E5
3lG+emRDJwXkz/vlGaf9dz6WUH/7o+3m3c0LKBC7qOPZLhMG1NZ2zBtD95WY
ORKjNtfprPrbQ3j9rV/5hRLva2SoCd9Tt9+UAXW3Fh+JQOv0qatrTF3T6SBK
qNdl8tU4X4/zkTjPrE+OxuuTq6p5E96SyLDkZtm6uQsYkGjyefYiKhlOnzn3
ITqTPq4+Wf3Fpv0ugSRYLeo6MmyG9Ix2fhTYQYIzB2ujnmTTx9VvE/kRAs+s
3/bC67c/HHsio35bHBTDT1+NskD3G9NF5+COOLgEjF5bnUsfV78dMCapG3FM
DDoolcs0rdF8mKSybFOIGKh7aJS9L6DDZ5xXn4AfJPDE+nZeH53mOtT+kr8v
+rUNA7Yf18voR+2xhn1D9kV0WE6ob79i0n+IitpcLnoNkei+8b1/vkCgkgiY
yxyYdu8efVw9PJEfwnlLnCfW/4OWwayhz0LQufvRqYN2DHCSMrLf+An9u8m3
j4tK6dCM1/+T8Pr/BpndvU3FgmCyTmRpgAO6HufMiHcrEoQRA8mspvt0aPqX
/DDOE/0RvHZp6R4OE4DVqdQZV5cx4NvaHCH/EAHYcPClqtoDOtzC/RFCcH+E
4ebWQC0nfgjslae2LGeARujMrfuX84ML1+dzfui+TfSPYPLbcH4KzrvhPNM/
go77R6yg5vuUa/HB1ZidjwHxN2bMmbdkMh/cYbz5eBzFQ/SPyLcKc3fm4AWP
fZpHElH8NibvhZUGeUB+Tq1pSjkdlHFelcC7E3g5nCf6a4S2BzIqa7nha5ml
wWLENw+086VXcMMt06cnNRFP9Nfwb+N7YZDIBUeEvN4No/zvFgvmmHOeCxyt
X7zMuv/v+RU4z/QfUcT9R3bGjkq+2MYJMUPiJ8fQPkj3+I0z93w4QXpvD28t
2gcx/Ue4cP8Rv89WjoHWHJDdmTuDC/HDvkenms3jgLXtDtP7Sifmswi8G84n
EvxZXlgr8SRgY5jl+lLzKjSfhT1Tdp5QH8MeWhbWcqJ4luH+LAzcnyX13YqV
yzt/YO3vnzidQfyYQm/8yeofmG62sr8E4h1wnv4veaJ/zUc9nhO3Ir9jLq2e
GWaIF1U8fX/z3u/YAY2CHedQ/ES/Ht396Xfp2CDW9HyUY3ApA+QVjbvt0bm4
Ln7xfoV/wdMJPNPf5wju76O94XmsVM8AttVWSzcZrQ8CHD7akU0DmPuJA99P
ltDH+RkJHL6+l3yuHzs3mu3mYIvuF2TrbU+O9mMDO25uHitG8RD8iRzrHtZ7
o3Ot+oqzT7hR/6EbXx3Tv/cBU0mU116C4mH6MU3D/Zg8l3E7KE/uwnjO6aZ+
QP2rrW0QOEXpwux+qnNvQPEEE96XPyW8Dy8hvJ9lxn8Dj18Ij/8sIf5+PP49
BD+m0bdp2Wvn9WGu11TPpSF+z5zFTlv1+jBbdYmaFBTPpL/oPY7rVcb13p/g
/bg6/n7cjvB+3IJQ3/5xwxX+24g/qNl/1Ol6Hxa11sXvWdyvfWS39aPsPsyE
UB9uK7qgshLx+scVdh8X/oI5b/ZqV71Ih46KeM8Q8hdsPqEefiK+DedFCfXk
EQvOb+c3RHkS+SJ22OsrRnuqvL4XxROWxJ+92vcrqx77Fl6PXbfnk6op4t+t
lrq498EgtmyDTk8O4o2CfEe1Kgcn5N8T+Nk4v4hQv50ct3+9NOIl7haVH5sy
jG2rTigwQ7wbR37Zcs1hrASvf6bh9c/9x+9e60V6jZXcP55CbUVPryMNsWje
ZGeeDELtMkK9NJM3IvAeOE+sly55rjs7BsXjZh29xPfLGFZVv+1ICYrn/s9L
xxZ8G8OI9cayDsMPLGcx4HmC6MvENA7YPu/IkTSU/8hkC5PDGRwTnq/jCefr
+fj5muiX51E82ZLj2yj2UwAz34/2cfKLtz+YXjmKOU71LK+fRRnnl1ekLr7A
VZEDnFdICrWifeDGScqqwkIcMPD64Autmf+dJ/obWs/LUOsx44T8Cmfv8iQy
JEjuklTS4QTSriB/Hl3KOH/Dh/3Jgtt9uCDG+0dl2iUyNAg+5TdYxgWakntE
G7X+O0/0oxS6G3nj4Slu+MkLHWbxZDgT9nhSwS5u0BQrMbiiSYEZuB+lKO5H
aXV8r5NcIQ+4xR8aaY1D+d29ae6cSzyQN2vVmsApFJZ/pdgEvDvO5+P8V9w/
1BT3D+3LW5Cd2sYLd7+XHu6PIcMH3vyDh2t5YY4LxjdJgzLOP/TgHneB2YL8
IG/HLc5zgQyu6o6PnnDyg/6SJ9eeTKZAEoE/8Bee6a8qjPurFirkucydJQDU
JUYjm06RgU/6fbDgEgE4tYe+YqsSZZyf7LdiwTwTL0E4JKfU3XSCDOn8OxeY
xgvChkApfjm5/85fIvjPbrt/aF+6hhAM9997UutEBhdDpTtO5kJQc8Owq+YJ
meW3q4v7zwrpXDGT7RYCv0euNx9MIwPJq0J/e58QZBbxVhw5RAbpf8ln4Pxs
3J93FPfn5ZiV2DI7SRg8liYvmKNLhvK6sIt9ccKw7GPlrR9hZLDA/XkB9+dt
a/y6bZWzCLSJwrN0fTLsNlou4LVIBEYYkdf90HiYE/h2Ar8H50dxnuhfHG5O
p3VOEYUdpnndu/XIsEHhzQa7SaLguC2slec8meXXPIj7Fy+m92b6DYrC2bQD
Py1R/Mu5vB8bfxcFI+43lHNnySy/428T8I4EnunvfBv3d46t9+25d0cM1mqI
bXNVI4OXYUpI+BMxOF0d1rDkGJnlZ30A93ce7TurRj4iDvkve3u3ovVlp2/7
wvbL4tB3bm6c0E40fwl+0CMT8J9wnuh/rRkaZL1WFo2DUUuzGZp/1TxP37ZM
J8HuPZ/WuSwjs/yvt+L+140Xc3jvbCbBoY07q6Q6SfCS4aZeFU6CqFMDOjm6
5HH+4Ez+IM434Hwkzk/H/cFTcX/wl4bH0zZlkODe4RS6QjEJ9hsaJq95QoLn
Z3SXJ46x/cFX4P7gDbVr7JR6UXzeQZvUYkiQfdht0iA6f0d4yO+NfDTeP/05
zgfifBbOR+L8Qdw/fQvunz5FufnBXrSOdnl5rAvcSYJV342yqGje1e/dcjby
3Hi/eKIf/EmC3zvRj6Nkc18e90p0PzWRYiz4IQ3faINrblbR4XlbgNhWrvF+
KCf47OZxr2BAcvGk1vJwGQjPWnC29BEdivdddUg9I/PX57dTCM9vZxL8Lx7K
lZIGV6P9yf58KKyVAic9TkpYDR1Wq2EFDY1S4/xHystXuO9ZxQBK27qMIE9p
mKI6Miuhmg7neRrbk32lIYygt5Sgd5Cgl7kf4Mf3A3J/2Q8w/Uf24P4ja7xM
/fvQfkOsuKruagsnWsftOrYgPsvXkPtkGyfLv4PpP5KyJ1T+DOJXmulVZpC4
4YuroskcxN97svf+Gdp4vxImvwLnB3D+Ls4z/T6ScL+PpJGkxhS0X+oVzFPy
NuEBEYnlr4XQ/kdfP263oTnPOL+MS7uKzhboM2D/41nb1QJ4IX3oza7GGDqk
xxTNaNzJ9tdw+At/HeeJ/hpJLuTsNsTn3B19dOoKH/B8vGb4DfEUa+rl6xl8
8Jngr5Fi6lEpjOJ/ZimjwP2KH95KPhogo/3eth8bJPd3sP0smHzyX3imn0U6
7mexXjLi2w7EB/74aKNKEgQ9y7ATrxA/d7Hm4Z0ygvCa4Acx5X2h0jvES6WV
7V1oKgQjFhyTr6J8Sgud6d9iM94/4m880T+Crpri9B6Nb6sdyXcoUBialY47
/ETjm2/cYsBxUJjlHyGM+y+Q1kSc60bz87Ybz+qrqSJw6zvtkMMlOng3VO8K
zRMBDwJPJvBFBP4zwa/hvIJnVeYcBgR/LPPf+FIUKr8oC+9LpEOuhKpSRKco
7MH9Di7jfgfXyGFjgcYMsNt5+Ji2gDi87NWOvHKZDpyLd5Wfpon/Z57ojxCc
8V5xBjBg66LIITU5EvQtfHYx8io6T72Ieu+hzPZHyML9ET4EnTX5ZMIAw1TR
afrZJBBI2Hl993V0vTw93ceB7ldVOJ+N890T8HdwnukfcR33j3ikr/VBaiED
HrhdsNezJIMTPdYsJhvl81Tz2LslbP8Ipn+HrqJ0FFih8bXZs0u3jQxGVRKv
b+eh+WA/SbT2/Xi/DyI/B+dlcD6O4PfhrFrGec4GnceCTw8v3EEBxq1uq6Db
dJhSkW54P4gCVNzvQx33+6A4l236jM7JgQOcO5xIEhDSRMuff5cOc4xmuxdI
SYzzB5HA+W0E3hjnmwj+LI3BZctm2KHxnXNMQ/SKBLxcENZljc75HcukT5hk
SIAswZ9F46208VZ7BuTddH9ZiFEhq321pAM6t3PPTcitNGP76bThvDrO5xJ4
LpyPJvjpuNw6mHfcAZ03yWMqJS8Q/+CNwlAZHXbWLV7xsIUKkgQ/HUapyfSE
ZQwo2xjt92ATDbKveWpcKEfjO+PqSHkgbZw/VHGU7cv/Q9mbx1PZfW/A5plz
nHOM5xBKSZJKmuhelWYVjaJUMoUmoZKEaEQlU0KimVLJkExFhYqiJFMDkSEk
QpJ3P9/fPryffV5vz/Pn/nQ57ese9l7r3uu6lj7aj3riCkWnxclDw80t38eh
/eWefcfe1TfkefyhnrwT75ZD+91UnZb43pkKUPNWxNcS7V/PP86Vl5837M9F
7o+NeH+0IvZHFp4/5y/zd8Tz30D4Me1OWOLfgvbrmmN6hn/E5OHY2QeBWwtV
UNxgMkOazuuH9Rjz/Yn5fiX4kv3kOh1+a64rYMI00fFdr1l02L3yhtvpIiZE
2d+LTUTvsyjRP6+kVWiBUTET0vaeHL0Evf+jRnnLz3/FhH4z1XFhSsP987xw
/7zE3dI2Y94wISkxfHWuLB1eta1L+/mWCZ931SYeVuDtJ/dKNujcpQwmJMw2
73FXpIPdqo3pallMsF5Z8dpDjbd/3lajJ9UHHzFh96Vct8vydEhqTpSvyGNC
xtwLD5iqvP3z/saX208uBfeTs7NWmW2XyITgCZMqzqJ/v22UJ/IavScNxSZ6
UaN5++dxMtY2HklmQkxynr0QiqMlCk5/2J/KhDGnGT6SGsN8nTDfUsz3Jubr
QPAl++ftD1sS9xq9xwWv1wkd0aJDg/GBtnU30O//vmxUaoDiYKJ/3i7P5LYL
V5nQVB+xUwL9//7jun6dQ3z8vvQaTJ+I4myif97f+JL95IL0N3Vl+KJ1qVCu
Yd0kOvQW3a8POsqE8GshqxnA2z9v0eGBpU/PMmHXcoPu1gl0SFaf29QZzgSl
9M7FLrPpEDIC30KC72jMl+wnZ3EobY+LDRMmJl4cN1UPPR8CJqvrbJkgOx96
JwFv/7wuc4nksL1MsHvjJ/IEzT/Rjo8z050Ja9yaNdXhv/ONIPrJ/dPmVXQJ
Ex5WxkeKILzf/YDuE8uYEOHMLjpgyNs/r09VOCNzHRNm1jz/GIXwM9zkL6ea
MyHy+7uPa+ag/AnzXTICX2uC7yjcT2467ifnbfAyTFQPvY8uug3b0O9ZvPWx
Vp7BhLuTBHo/rR7unyeJ++c9+/TF5JghEzwAvRPoet+zujuhdC56nhrTP05c
zNs/7298yX5yGxTSXvOJMMEktbV89SI6WAkpzZ8sxYQXiucy521B+S7RP+8O
tE4VYqP1JSSwtmoeuv/OL0s1NdD8TsZaMCx4++cdxnzvYL7mBF+yf55ksL3O
m7cMmKJg3PB4JXp/1ucI6VcyIGqqtOlsZ97+ee47H3g1f2NAjl2E1alldNBg
zbs85QcDdkldFaHs/jtfsn+eS/V4lcSLDLAzGF0bivLHuI0aejPjGOCbWGCz
eD9v/zyPaFXN3Az0/12daq2zBsVLlbsjDbIZsKQ8t3KuCx2uEnwlCL47Md9I
zPch0U+uOHeqfYwNA44HVEv7bKbDx/m7+y7YMSC+X83B3IsOebh/nh3un2fz
tWKupi8D9n0adJPcSAdPg1Ghjn4MYLxxtTM9+He+sQRfsp/c1pB1U1K1GXC1
zsL3qRPiI3Il7ow+A26L6Hkd8uftnxeu/cTk5iIGKKSzC+Jt6dB9WWJF2HIG
2Nh7/Wj2Ge6f14v5vvwLX24/uam4n9yjzBKJXe2ycFSgRO1eHB32GBdPnCXP
ANNTRqfoubz9885qnYthSDNg1ftmM8NjdDC6MtPBVpMBgwWpQs/Q3z/AfC+O
wFec4Mv9vnASf1/gfp8oxd8nuN9DgvD3DbJ/nvbom8++OsqCjSswfqbQYUn3
h4N2KK52OEe193bRgUH0z+szUajNvCgLP7dLB2wopYNjxN2yt+6ykBoos3Xz
KFmoxN93zuLvO6FL5RT/+Q63OWurdM1ZWSiY5yrGQfNJVRrdJPxdluf7jvZR
06W3xGRh/ONfA47zUTwvmvWtd64sdD7YeWXKcdkhPmcwH+58t+P5OuD5pOH5
yOD5T8Pz7yXmT+JziftZmRolvrZMFhZc85y39ivaP+5sF5udJgtCJto2vRNl
YTdxvzPVNKZ9E2FASH1LryniIzbgZhjbIwsVRpF2Zw1leZ7XOcT9dyF+j3xe
cyZOj9JYwIBs9Rzjmng6nEjd1nzbkAGK1YOhJU+Gn9c4/LxCqv6rD+h5PuTx
zO/HZfR+afVdHb2NAR91HscGPR8Z7zkCnnyf9yrJpMYcZUBQeOHz7kt0+Fxw
/V3pcQacC3LRu1DA+z6rLjkXtek6A7S+jmL0xtBhzHZzMd/bDCgevS/n2pP/
jifXu89zzDY1PWXA3CzXttdhdFjwzn9UVAkD7ux+I2D9cHi9O4/Xu6v6NFW3
LwywCC4sSgiiQ63s5umpHQw4mzV5Iecu7/o4Ej4Y48n9oH5d+e7dAwyoFdmb
J+aH/v68o9FtUSYs5wfv0kvD+8FLvB9oHIjOc5JD8fft3Q9tD6D455u68VVV
JpzdH/fgeDDv/jES/gzGk/vl/Wd3Jnmh/dK332bms910EGynAst1mCAw862i
57Hh/fIO3i8zP++KOjMTxYcs4XQttL6odWwqF5nNhN86G/ft8uTd78l4gfy9
6Ti+OY/jmwc7PsT/WcWEEx0JSzSW02G23fX4hcvRfEa/udtuyRvf5HpKcyag
+Cf5H8NrtD6q9RTXu1gzYa38VaeBbcN4+gh4VYxfg/Fk/Ec/iCLMfSieXzR4
8xqar+vp1Nkp+5mwpSFHT9d+OP6LwPFfc+LArLyTTOCflHZ5xloU/1p2nu0J
YoJj6vtuK8fhfGYrju/fqTxRrEb5zM15Y3LWjqdDdsr7A+GPmfBj2u5EvSko
/ibymSXzV4eLPWOCTrm0fS6Kz5xLlivMRPlLjKM3aweK53fhfOYCzmceOnyS
m4bytenRy2QmoPj/bMqOlMrXTCgrrT94Q2s4/+HiMzHeAOPPYPxrjFcj8j0B
Jdke1TIm5K4LXDEBxdMbPyyv+IXyO9ppU7fcMcP5Xh3O93JDWyvEKphQOn90
0ASUD2iJ6/YrVzLhkYLDrnfoehQT+eHf8LMKp51wrGKC/xKTBE+U7/hG3vrD
V8sEhwWmUv2IT5GTpmv4RyY8lubbeQDFp5fjWZa1aHxnncyNA3J0ML64c0xf
HRP+LDx0sgjhP0cWfGM2IrwgeoIR/6sEfgGBryfwZUZztq3/wgT4vf7uapRP
MTfqfbL9yoRZf/SPTEH53WoPjc2uLeh+v8haK6uCrl+FvdOrJsTv0qUHE1H+
uOFLdExpKxPcU1oPRqL8dNZYrddv2pnALpw+RxT9fQ5Rz6FJ1IOcIupJSL39
q+ijTxV/NVBFy+J3Sk1RgUzLqVX0Sy2UktIJt5VTVYb09i1Y/8N2SDgS/amB
SrcprLx9iQNBlYMTWnxaKH/LS5nL43n1+coj4P0wntQLFTfe+P32ZQNl3Cxp
GUzjgOH1rttxDi3USY2GkzNlOTz6KF/7624yGQ3UYsNfVW6H2NDs1jTZYmUL
FdSkvUHzMBuYhN6y3urE2w1qKrCD/1J3BxpP+BXT+ugUB7rW6hcHunN49KXi
98Ka9JVVYO9SMHksrgITdshsY/lxoO1Y0qckCRUePQlXL3IA60W4epAtuD6f
1JeqPbKR+z1BBTjTVs4PMmXDgyWl6y5FcIBfoCd94So2LCf0pQL0fd3aY9G8
pmlEUXVsSHtofWlyMAeyn1DzHetH5ruT4NuN+ZLnf/N+Vec4vKXBaYFNVhOb
ZEF0fgt7nwDKi6aPG2VqzoBXxPlfVR2/4RsUx/ds/jDNP0sWGh5PCi5E+0Sz
zEGhhDGMofO/4BHivUIi3uOej87C56OGIQan435Jw9rkmSGPpVBeEnhzpehv
aegNa2C1ejOGzkdD8Plowa+aq8JfZaDTYllfzy9ZkFvnnO/BRwPTRhHlGGcG
D18g+AoRfLnnx3/w+fHj67V9hUpSEPpP/IbiODE5uxbtBklIrzk/f/IeBs/5
8eGYk8YGEtKQ8cXw6QlxFKf7VXOUvksBZ01zgswBBs/58d/4kufrW/B5/mt8
ns+tB9iO6wHI8/WzHYNVzMmSMNWE0UFvkYWNMrsVp+dJAP2muebYhYyh8/WB
v/BNw3xJ/RJXL74Z68VJPS+pX9pfeeHspdwGyjV3/qllNQywTTA63BTfQEXQ
J08U3MOEq4QeyTdA0+yNVQt1Ym/k2K+1KM7VSR5fRrVQoLeST2svE1YQet14
8dVyL443UG/HFyrJRLBgvU54R++YFmrf4B7NpIhhffIrrE/2s1hcZBHWQO0V
LIs/LsQCC9ePUnZTWih5L4NzLcIskCT4cOd7Hs+XOx8Kz4f0v/CumFZsY8+B
+0f0xPIqGqlwRYMzKx04oL82UmbJ6dYhv48M7PchIdNdnY3Gdx74dY773Eil
NystdBRUARGL1szbF1qprYTfB9dvRgr7zZgR9XKmeFyOx+TvhRHzCSHq5+oS
fqeaInzlUuXtRTc7qCld5weeIz7bypf4F8V18NTDyez4MG46wt91yN6bJfqD
Whx1w2kxwlvOOnWkY6BzRPwdjF+I8RswXh7XzwXh+rkLi1zSfqDr0zKnd7qw
bTcVcWyH6C90vRe//5p1y7Kbp34utu3OojsIv7TOt8/kcQ/letU/LgHh1y8M
73Z80EONJc6/4x651Y6fpgLNRq5PUiYoA8dgfZsP2sfiJqS2ndJRBgbWLxlg
/dLWud/6gtG+euTBViGNbGW4835OnGw0B16Fla/enqPMo18i1/90Yv3vJc6/
MxYI//g9SwVuigsr5QgpgZcb08/4Bge89EJHi4sOn/fn4vP+pCNZDswZKlAU
b7hrVoQSFK+dNnPbFfQ8Pis5XnReiee8/zLBVxXzjcV8N+LzDAt8nuEhFTve
fw6KE06oyHrWKMA/x2EHEzng/ODa9lEfFYbO+8/j837lG6tkHhmqwI0lsqEq
exTh3JaBTx9ucmCyZdfCkL289Q1/48s9v7mLzzNExpgm/5ypAtP6jDgoVIax
0ZTbk2scSD95Kt/7jjzUEuc3oLi/zQjNZ9ejW/JTFyhAnEWThRqaDzNOScF0
scIQX0uC7w3MVx3z3Yn53sXnN874/MZHvDrjAoqj1A+1bb7vIQeVkVeWRaG4
aMW5D3mXvOR4zm/y5OWnFxqoQPuaXKMSpjwMXnD5qHeZAwXXP8w/qzB8XpWM
+QoTfMcQfEl9LMMlqq67UR5ileL7Am60UKdLXU+XeCsA3321vU3XW3j8oRwj
pAIXt8oD8/Rz/3SpRmrnp+qyc/4KcEY8aXOVZCOPHw3pN0P6sbQSemChgqT4
yA/ysHE/R8ZmdyelujRz7az9ChDtVGpycG/nkB54E9YDLxT8Pb+gTh6kSzQW
hmp0UMGubZ1+ngqQ1X9cqHd0ByVG8KUTfIMIvqReWtn2puqMCnnY8lg6er5M
D2VXFGskuVsBytNGTalh9PDopU/LT9zaVCUPViqhb1fndFGHdgsVabgqQIbs
AUonr2tI/6w8Al8VzDcG871DnI9KKx67JqerAnUuP29ZLGVB52HhGeVofci/
tvRK03IW3MHnowfx+eipm1V3KtD6I7C/8+ixzyywC3w790EUB06ohN5f0IDw
xPni355Prh647C/7L3e/I/XA5ffo+x/2tVP70zPaLRD+zsz6nN3v2ylp/l8b
v6P9kqsH/oD1vaGth1aaLe2k7Acq01+ieKBjio/2sZmdlK1wX3rGbpRHE/4X
XrdktNN9G6hFd16k6qJx9LzUBb8VWqg5s2e7vs3h9fs4W3Vn1GP/BmppWayD
qo4cLB38FOmh2kKppXmbzENj0t/k8gjxgzuOH0j/rDOOYWVpk9jgujnA1D+u
kfq0cNem8ols8HtkHKdu0crjn3VcvcE06DkbQvZY6VzOaqQyk0p/MtBYp0zb
PMW1lcc/62/xw03CL+n+63KWRLcSqC2e5HNubiOVPf/Pes1OJdj5aun5td9b
qAfYP+sC9s9qSPv4Y0uwMhSV1ThIuTRSJxOkqgZOK0NfwbPoh5qtPP5ZJN+P
BF/y/Xcm1g/u+ziY/H/vI9ePqRr7Ma082a9/Tk0RDMxkCy7JNVK3Oy+Fn+Mo
whm7nmt/0luG/Jh6sR/TlKnKYcEP0d9H7NVzGNVIvWCUXFyfrgiqSsXVzMIW
Sp3wqyLxLzFeDeNJv6q9vvvXrjBXghXpARWH9BqphQkNB+esVYJnrlIP9Wta
qETCv2yk678LX/9XhD4k/ejT12M8OqmIC9PO70D5eHQ/6Hg4dVL3Tmx9VB3H
AU9CXxEwMzpmnWYHFQIpx2oRPmp6y4fp8h3UloCEOXIovz5J5P/c/F4R5/cB
RD5+HNeLGOJ6kb02ix97jleBbScbcmgcJmz85vHi/jn0uxXBbDs13noRyG7U
L0TxjENEhMG0ZCZcMwDfBWEcaH2v+HFcGhP+6/o2m6i/2fLy0JJQVRVo3NDA
J/hNFn5Hnru/058DqZtvdOl3yPLU0zQr1gmLj1EBTRe7LSf8GKBjfCz3bAAH
1Diqx5cfZwzVx3D5uv6FL1lvdJ8dU9nBQPHnyzGPjmahvLdATtR2PweCzm0O
lnpE56k3elq5jZGnqAJjPCw/Ga+VhfTnXjVNXhyo2VyZF2s+XG+k8Be+KZhv
Ba7H4sP1WPrsGCO2hApM2dJ/eocKDYIWSzUF7uSAzZ6DGxZo0njqsWZMK5A8
KqMCczQb81XH0sFb4+G+A3s5oH416OK78XQQ/Y98ufqrN1hPlfYg4GeZcg8V
5NUso4iez1WrqwVWi6J/P/3+Ah3FlaSeaoloqbVnURdVMTajbB7Cn5SZHmb3
oIvKD4i+/RPhuXqknyO8LzHE+8LVm03FejNvrYjJwg/7Ke+TczxU0fNfa92Z
f/BaP1VsbeE7HuFJvZmEhGNoq2MftSxmjvEF9Pv/881d30cFfNhFi0bzIfVm
6QTfNQRfUo8HAcX8Fwz44EdNz4MWhHed5/y+fQIf+FWcn9eI8Fw9XhHW4+2c
2XlBhfWHmqnPVhZG8++uDMy4NThAXVfxsBb7f/GdQvA9TPB9gfl6EfpGP9Os
B1/PCsCR0dMPeE9WgRPBP1zCTgjADN0WhZUojyH1ihUZe2rn2vDDQ+9wJQM0
f6/mSWPzLPjB6si8iRcucqDvL3xdCL4rCT3n/77DdQjBw2ePr0Sj+dyfs3XL
8WYhsFxzXzQExTU1hJ5zkfWFNKtHglBVVUo7jfAXHW5up2UIgt81zTPfEf4Q
5rse8/Ul+B7HfKdjvlpY77oF611dr8Uc6EHjcS77Aj7pozzusajXDnNR2C+3
ymsVmj+pd82VDlCwGyMCqQbPIih0/R9667d7qIvAGPaG+T9iODz61ZH4bsR8
ST2w9fsX6jfQ2PdwdM0qhBfYZxffjsYSz8ZIFCE8qQd2zk1Z/gqN3+6XmKaM
5vOZk3ZG95QYwM7ZxjIXefm6Y75aI/Al9dLmFy88X4TGlIBR9Tht9D4s6wxS
QmP9lp6Tp9E6ytVL22O9dMMuMff9aHzFInxj1kQV2LRV57wfGte5zCjSiRjm
2/8XvuKYL6knVwwab+oSIAMTvjo2vVdXAa2zR5e5BcnAlenmtKITHB49ud62
IJmaddLwS8brM99YFei7dMb52XppcJbVepkYhN5fzHfJCHzTCL5cvX0E1tvP
6dnjvs2TDi+tZNePR/uAT8fvgazDdBCaZaZ85BCHR2+/LPtoTNRjGqSLh8Ty
q6iA/Mzc+N6nNDhf6hVy9QiaD+arjfkqE3y1Md/LmO9b7EdwDvsRXDa/4y+a
Kgs0j4y6z2hd3/uT7n8oUxZOLWX62e7jwGXCj+D7OFmvaUqysLPVVuWoHOIj
PfmRiqosLJo3ZaWrxzDf8BH4emO+gpgv6deg2bh4vVc7AxZV2CyzQvPpvJt3
92wvA5o+C330QvtMKeHXUH/Rs+3xKgbYnf4SHovwP3ewLhyzYECGvNSUTjT/
N4RfQzzB14Xgy/X/MsJ+XsY6S2Y/eiUPmbkuV5Rv9VP6n66PLbVXgM1f1lge
Tunn8fO6XdCX6PkG5ZvXv45K2tRHvXw75l6bkwKcaJRdrGvTx5NvKhL55jYi
37xA+J3phMuKxhTKw9bm6FztiXwwP8tGau4WBag6fcY8ayYfkH5nngffxU56
KQ+5S9cz0wX/UIYlR8+L2yhA1PY6oUNoH6kk/Mu4fLMJvlsxX+73tNkjfE/b
i7+nbcDf00h96bfe7Q8DEb5Ex9lDZswvqnWdf+Ybu3/OgfZMfML+xaMXfWyw
T9cJ4de4r+0v8f9N2Yr6lw8g/PxZv+xHef1/6FEJvD3Gz8N4Ul/axBoQykf4
NwzbFey2P9QhDV2/Jwgv1rWf/v3LH8qd0JMczdGt5giqwM31GaZTE/hAZc+E
yYH/5Ge7yjZ9usqrPyHxHAJP6k9UWGomvmg+C3usa89/4AeP+Ij7Z2w58K1h
WvqVav4hPUk21pNoT8vKbORH63iYpDMfSxC2iFtMD7HhgJBVBMORIfif8aT+
ZBfdqS+SD+2rrLkzN6Hxkkpt1oRt6L3trOv2QWNSf3K/RdFgxSAHEs+6i2R4
CsOUhP6OR1vR+Oik9+e9ePUqXPztEfDChP7kduWuFwZoPoc5DboGySJQcu7D
ln1oPpX+tIzsVBGox3qS/VhPcr3wqfUoxBfglvm9JlFw8sx7pYOup4R/e2Rd
m+gQft9f8OIYP43Qn0Tb5QVvQPcr/seridpq4hCYuiz87T/PT4Rb+fux4kN6
EgWsJ1Geznp8Dj0PijLR/HHrJOBWR9kmL5S/KzEu019ZSUA21ns4Yr3HrDMP
x28VVgHP5oclSVlSABYpxc7bUbz9+/rosjwpHr1H2tvEqdmiaF+6UpUU9E0a
JrSctBxwQvuEQfCcgC5pqMT5ggCRL+gT+YIdzhf+EHoYcv638fwV8fxrCT3M
zbpGNw8htD54Jn7VOikJ7leMw7oRvmh1aaTZWckhfctIfCmC70zCD477vcgO
fy/6jr8X2eHvRaQfXNumI9ldYV3U+hiFDb1VDFA9NMpU16+LEihbXKKykznk
78b1g1tUcnxiRN1P6pXL9V6NSgbsCpXZ+7b4JxUbG/HF24kJqhi/H+MXEvid
BJ70gxO5k8Q4PBaNH09+HvOGAR2HzKVu0tAYAlNibJlgTejVm63Gddtu76da
jWnRyiUMcLGLu+Jl2k+FfPDxz9z83/Gkvv3671uhaXcGqKIlba/DCxmgf7Nu
m1HYAGXo4F5juYEJToRe3S5S30C8d5C6vuKliFw+A35+G6Pxu2qQ2pglb9C/
ismjb7cl8D8IPKlvF16c/uCpOj8M7LXr/pbLAIcD3RudmfzgGhu7791KJo9e
vWLeuorjiwSg+sXquqdZDCg/WHG9coYABBzRfpBsMoyfMAK+AuMDMZ7UtzuN
az+e5CQI49zcO9iZDIAcetsVS0HQqNa+cXoZc0ivztW3y+zVm1F+WghcVM4P
7M5A11dgydQ9XkIwkf/deaelvHjaCHgdjCf17adtjymFZQtDgNBVuXcP0fOn
M3jraoIw2NZsGXNqBROsCL26es7RvrXfREB3lOhEI8S3fm2KVnWFCET9058V
XX+uvn36CPjPGB+N8aKEvv3k8jVCLnpi8HzsNebGbAZIH8nxrqSJwYGo6uJ5
lsyh82knfD79o0qdFrRXHD7+6vzlkcOAGXcKKyoWisPaw8VtlduYQ/74T7D/
ta+ZHt/HVHmQot66HnYTgO269SU5SxVgNdu6pitIYMj/+h32v17fFStI5aL4
pkBaea0ZP0SeLt7hvVYBwtf2KW9AeSvX/7qJiK+24PhqARFfcfsBGOF+AOv2
Fn27floerLdcGkyOEAKl4LZ5xcoK4L5VcWdBrtBQPwAf3A/A2XrA3TheHtJW
zs5QOiYIc7dsF382RQG+7ZG9UntN8F/zXYP5cvvZJON+NisuzvFaaCoPf3bK
jfplJgLu1g07pjyTB4PINeyZO0WG+tnw4342q04Ipfbskoc79pa09W7CsNjD
0ZzvuzwsX2r9xDtceKifzUh8lQm+t3C/nx7c70eQefqn8Hh5SHQz0pmE9tdX
m52XLrooD3tWnj/3p190qN/PG9zvR+u93ayrhvLwYs7aqyy2KGhsHV9tmCwP
b7rc37GniYIm5nsX812O+f4m+E7DfMl+SCHsR9HuAvLgW6HZWrZbHJQzTWKL
3ORBx6rw09tgcZ5+SMsUtJZmy8lD0N6aAJ+bYtAduLH7+El52HBSeJbjMzGe
fkgCBN9izNcF8+X2i6LjflECesriF0vkQOZodj2rRwKK9fM1/ZfIg0SV8Mza
0ZI8/aKeX9lRJtEkB9n9Ktu7pkrAjOB7n69tlgfNVw+lLCwlQOYvfDkE3xWE
X3l2zwohTe8GSqriy9MMNA5i6vw+wmihmIa3qyrRuJfwK48p1Q3f6dNA2WpP
yulaJQ/GddPUQa6F+nJpqVYFGnP9yp8Q5zULRziv4fp3r8L+3ZONqlbO8Gqg
LHQOR4+SVITc0JWC+VItVMXq+47ZaEz6le9Tlrupe7iBmuo7ZcoONC4PEOC7
TGuhfi6aHP8CjUl/9qwR+DIwX9KvvH126dr8wAZqTn9VkslkJfj6XWv1G40W
akLLi30laMz1K1fAfuU5ruzVf/wbqLO31o81iFGE+FM92i8QX9+L8P1pDK9f
OZfvRoJvFeY7Uv3bwhHq30h/8A+J207eSGygQKt8YUGzMqx+71RqZtxCHe/9
3JDUogwWhD94tU9ojPHFBmoW695dZXNlyDRsc1kyE81f9ILrLPNhP/FOjK8h
8NkY74fxldg/XR37pzfUTvXwC2ugvNX33ElG41XhknUyui3U+r6pP4We8PrF
j3T9dfD15/pRHsN+lNsD1ZQujGNB8vzfeWGMf/owLz84eTILPra5TPnmweHx
o1yUoZ8ecIoJA4F3jnkgvPqO42GfQpigVnJWPPXA8PcKlRG+V3zH3yu+4u8V
XL/OJOzXeVZ81iobKzk4f8z4eAFLBUJ/3Zwv6SAHR1bXTJDy5vD4dR5aditl
8DELPi9zv5rEVIEZE8ZujnnBgp2iXkmehzg8/pt/48v1Mz2L/UztvVh9qmg9
Pys25dpuORVQu7TPdcd5NDaPOrgBzYf0M/09/9qVRz/lwExXNoKD8PL69hsz
+dB6VZ5ZNgXhg/7CN4TgS/q9evy5bxadrQDyE8zOOSO+xtuF1voWKoCewdO7
cZ4cHr/XaRUymrVjFaDs/Nzonej39YWz6/dNVoCoiaIKXl4cHr9XB8z3DMH3
DOZbTPjnulz3tOzsUAT3c5Mv/ZRVgTiY4OLdrwhaT52vRx3k8PjhupdFlD9b
rwg+C8Ij76Lrn942d5uPtSJ0hOcljkLzv/0XvgsJvrrYL5iG/YIv62e+XTpa
GRrC951yp6mA8qrYm9E6yjCtl7VNGj2fXL/gSdgv+NTOqAjVk0rQfPBmWCpd
BTTqaDK0ECXQ/ZArvBY9Dy/+wjeW4Ev6TesQ9bATcX3pD1xfmkL4TRsmLjKR
b2WDoYhbVYmkCsx6tnCucxcbpHTt+R4gPOnXnJ+mY6C4hg0CZg1v26VU4PWz
eaHym9ho31kwtf5f4MsIPOnv3Hc6xv/uQ2Vw67qtN1VGBX4GfB9Vma8MjrYT
n/fuG77+ssT1/4qvP4e4/k3JzfRTDBbKd/XUX3bTQPncz2+PFFgw9uXbBbmD
NFjmIvC8l8MCgdNGKe+F6PBl5xVZhhwLVgp+mZXaQoNT25c91mazwM4weofd
DxpMtvnuMl+dBYfc1sbK99PAcdN92fPo99acPL/m4ica+O/tCj2H3v+rCTah
Uo00iD2hrxykyYKfLyaVH2ilwfbXyqLHtFiQYXHBr9KbBkJSebrj9FjQ4cxU
kDtFAwWmwvpn09H8Dp+6sTKUBm8EzbLW6bLALblaM9mFBpyIh8qF6N9TKd/r
nMM0qO59vX/2XBb0PB834Sj6+zSiX7L+mPsiThQLPBnfZ47ZS4PxjE/nk5ay
oEAxPzHTh7e/MonXwvgijCf7K3/QP+Seu4QFmYmtkw5so4H572U9H9azYNBr
ae8qd95+yScXLGyQW8OC3wu/ahavpsE/toZ0WxaM8dJa0ORIg4t/wf8h8MlE
f2U75hbzP1tYULFBpdhgDg2UGlvED7mzwIZqsHq4njbUL/kx7pc879OBooYd
LLjvvMr9ohYNEhvVcpqOsSDkfP+BQGMaT3/lv+HJ/so+Ow/8vLoPXY8xGXNq
+WlwLfqNe3gICy62xn4vUKQN9VfWwP2Sc/v3a9j7sGCjcZGwSpUMKKnpT1pw
iQURFdGOQt9kwA7jR2F8DoFXxPjzGM/tr7wQ91fmyFzNvHuEBTdKap7pJ8nA
qIeF++bFsUAqPdsjLnO4X7IT7pd8QK1s3W9/9PxafD9hckQGYjQkH1HxLDj7
59gJCBjGOxP4HgIfjPFkf2Wra60rjRD+ku2f5YMbZUC7OrxC/SKKF7IH7vbY
8/ZLfr7VYrGXHws2vUum3zOQgdTQMR2CF1hw5gv7/e35f8enY/xpjCf7KwdI
zXB+d44FCeMFG64wZWD5LScXvtvo96Sv+opoy0AB7pe8DPdLftu8/bQe4td3
cNXD8x3SUJ9/r+t3LgvSL1RoW9GH8Ysxvhzjewl8KsaT/ZUDpoWd1kLxh9z9
w2sOPJCG1V8zn+rWsMBbbM+X1hppuIf7JYvgfskZJjvPqJWwYEpr4jdzX2kw
odgRW/pYYFl9N+ZgwjBe7C/4jRjfhvsrK+P+yqx5opsef2GBvaGlWchEaZh1
/nXnHXk5uH8vbe+XNdI8/ZIbBE20bX6zICpAPKWkQgq0fxxbzq8vB9Inshav
/CMF44h+zPUEXgvjZTCe21/5Ge6vzLnycdtpKTn40ztf+d4OKXg3VX1m1WI5
mLYz6+voY1JD/ZJX437J1QcKozI4crDyz1vvEAEpOOqaMSZlkxwsa2Wd7KVJ
DfVjNvuXeGuiv7JapUb+P/1glku//8J3VBJqV4aKpW2QgzFV36U1dkiCMu6X
HIH7JXP7IW/C/ZDJfJTcn7bA9mPzUTx5UvBq1QQJOrjLvJofhOLJk8YZAl40
+tD+5IX3p1GWOboD2iyYFNq0qYafDv6qM1tS0Xr/z7HvJBE6XMT7Uy/en2rd
5MpT0X4T0XD3kQra70J044I/oP3GxL464VEfbQjfQ+DDMD4U45difOv3W28p
tN/VNvY67KmlgU7Wvc9H0Xx/Fy9u3F1Hg/o12zpezkLPV2qE7e6vNMgNPHjm
O5pvvsDjfodXNPAQMm1fh+a7wnS6TH4ZWm8XvVqRacSC99GJaqPe/Xt8BcaP
2ZHxSkOHBVY+2nZOj2lQvv3lmDHTWLCFcf6wXD4Njtt93K85hwXW8aLnc56g
/Ubxiuyaieh9sZ9dsuM+Da5fQCshwru8+dVhh8aVZlHxQQjfet1adgsamxD3
a3v06PR7iixgXEhvdpWkw2BIxxVnFlrvr01VozN47+fUB0di2tTQ/CVj6V9l
6SAyJSblvDL6e2bkgstKvPfbX2yGn/Z4FvAvnjrdUpEOoQKx+U/R3+9flug0
Q31Y/xhG6B/5CP2jA9Y/cv0+FLHfh33YwvyDF5ngsmBycKwpHdiSJheFrjHh
RemuqmJbXr+PjSazV+jfZ0K9ZcJhMRM0PmZ2SzaHCTrtwo/mbB3Wlyb9Ra86
gPWqhoS+9FDxn0xvNM5fLNLyZA8dsg3Wlmeg8Z9Z9WOijvHqRedkBNbs3sqE
nUuSVbcdRPM5ZFK+cwvCL3YuLQjm1aOOhB/EeFJfev7tod6PHojfstXHd/vQ
YdrXjhSpQ0zoTWr4cO8Cr760q2MH0wzlr80mP74fQvOVWR0aevM8Ezrlt36L
ukznWV/uZcl31abLQWPQqKtrTKT+T5fMkocjk7Uf3zkuxbO+yG1q+zMnXw6+
lys/vX9JEsqjL3Q91ZWH7NL5XovKJXn6o3O/d0kT37sk8feu7YRfAKnvJ/0B
SL29s2VKo3ikLPxjQx4UJAsbSxOfVXjKgtXcgarR7bIgSujtDybd+qTcKQu7
y9Ijm0JkoWPrl6OhrbIgsv1d8dxvw/p9M0K/H4r1+9zfq8S/x9XbK2G9vVRr
wNIFBgyQOLlBZj8/+v/btiZUTWJA//Tko2pGskP6+U9YP//mSPyWaFsGHJ70
bPRFIVnwSuhTVnBgwFVbtatJCB+D8Z8xvhTjvTH+IMZfx3iu3j4E6+0tM2VO
iQYzIO9B0/y3g+j/S3KdY3iBAZ31W9bTpsuCBqGfr/+nMDWbASLGUjaS/XS4
7H3BemsxAwrCu0V36cnCaIx/OQL+CsY/w3hSb58c0XdywWcG/I70UChuooO6
xY6fbV0MeNXrOmGWoiyPfr5PTHOrkgh6fr9/LTpTQQcWX8tJTzYTVo2NXSnM
NzL+O4E3xfhrhN7+U0fN3EWqTIhSb96f8JgO51gDCz/qM2GbDLj41fHq5+de
mTfazYAJi8xaxj5NpANzPE3QeAV638frhwg+o8NXjD+N8fMwfiHGszB+AOOF
CL09X9vz3wrzmKDxtFFzciQdfreud96wngnzVv+a0pA4vH79wesXuT6R6w+p
L3KX2pTXIsABd6c5q9egsV5J4ySDHWxofeP/besqXn1pRZOZQGI/G/6xzzyK
xj7LQq3H2rIhv8yWHo/GOkT+T+b3r3A+HoXz8fE43pLC8Vbi4aez3d3l4LLr
aEnOEmlIozaMb0Hr0fJnk198PSc9FG/p43grKaYt/Ga4HKxI6V6fXiQFNCP6
zwMNcuDwe+IzExnpofXNhFjfvo6wvi0j4tc2xZuXF45G8VGuR+SFXmlQGht4
R2e5HCQbXgh/uECGJx6Vtfu8q9ZEDiyUS0qrYqXh65QfrZJH5IDPt2Fyaav0
EF/pf8n3MxGvn9lcLxHylgWz3E1PtCxG8fsvOfUJzSgfNi1o3O8jMxSv++B4
nTJ8tn4Him81L3w5m6cmg+Lk118T2HKQ9vQuFYkeam78bTECX2XM9x7my81/
gnA+w82fjuL8iZt/ncH5lwmRz9SoZH+3yGBB8/L+qD3mMrAziL4n5SkLro27
nl59VIYnnyH5ziH4VlTFvl3+C8VTrT3xOhwaeq/uHjTsRPlJy6mnpcXD+CyM
7z3k6Fv4kgWen5ceixCiQc9F+wNUEQtOmF2JzXgyPJ/reD4KRH6rRuSv0US+
ya0/vo/rjw09nrfpWHVSpzadXcGkcyBVW/j+B9NOymbyo6olh9g89foB6xNH
U+IdlETuQ+erCO85MeVFQG87ZThOLXK6F5tHP8/Vx5/A+vgm4vs/t/64DNcf
V5x3srPn66EczoxrU5HhwAzGzRcH+35SLpvU5044yB6qt87D9dYSJy9oL03q
ovrcN8Yo0jhgNz3p0cQrXdSkreygWZ7sIb53Cb4nCb7WmC9XH3IE60OCH2hP
b9Nhwz/2DIJHOyhjnQa6CBp/PRM8tqe2k3pI6GFUjdKVNxUhXswJYB/SQfkU
Rc+5VsiGZJO0sr1tnUP61alYD0PqU7l60o1YT8odW+CxL/69e/j3FuD5NOL5
kPrS0RW/lPUQPuyoSY7t0m5Ks3vqJLsJaH203ZynMrObcsH1cOa4Hs7wnmBv
egEbPHI/3Vx/tYcSyfZZ/lSbDdGzdLYYn+v51/gojCfr58SEt5kw0Xz+179b
5Bc1JhmqzdB8+PLCdbd/76PscD2cMa6He7P+cewOhH9sWZ5cbvebmnd90LEG
4eHQvcHAlb//ip9L4Mn6OeOB1pX9aP56ky7qmZX+oSQrEtiTEd7c8Ynp3ew/
FFk/dz9OYfA4whtFSlZ8ieGDN6LmL/wQ36v581c1h/HW2/0NT9bPranqNKh6
woZVJ1tWCZTzw5UPvQ80x7KhMGRJq1UJP2zF9XDCuB7O+eOBXRPz2HDg094X
qtKCsD/t/LWn6myoGrh6rExUkKdeQfH+LpevHhLQXF+qFILi9nrTHdK9tyXh
8NJ3xssDUdyC6x0+4HqHmZ92PaFdlIC5n6hRmz6gOK4h6+DZIklgh8wwpgYZ
kEjo+S0Ivb4Ioccnz//I9SONeB/J87+eML04kYZ2qsx/ersWGmf76KTXzO+k
VJkBPZeaec/zXPgS93mXtVOO9SuM/znvi5MQzKky6KRMHwmw/jkPzML4Ixi/
h8BfwngzjCfP/yph/e2+wnaKf5GEl1e+EuRGXzTqnNJJJYR8FO7NU4JG4vz1
0vdTX1xy26mIG0/SPuspQa2eYabYpE5K2CG7p3uSEljj+ytI3N/9xP2txPd3
KVHvaPjSfb7GYzZceELLfrJACK4G7NyrhPDtg3V+4vOFhuoXb+L6Rb+joxQV
HrGhmL7mtjMal2+dTzmrseF75P4jFBqTeowNz12VJ8X0U2f6qvreo/X2ju1V
l88h/VRN3t3dJ9H9IvUnR58/m7tsZR/1O5+/qx+t5yLxpqqTFvVRzjfPVVig
9ZnU27wbYf3fi9d/rv7kCNZj1K6+fHyiOh+k7hJdnoPwi22rpzvJ88HmMjXz
cIQn9Sf7VhkoLOgYoOLv74k3QfNXjZi0p/rjABWzbHv9GTQfLt+XI/C9R/Al
9Scr1Mr2SRwUgOInqfvKRDgwRs7yoJezAHSeKS9fv5s9pD/ZiPUnMd9OD7JX
8MMfvhTrQgkOJJ5YVOk6lx+07h0M73Fj8+htSL6LMN8tmC+pP/m4+FHJ6U9C
YC/7xY4pyoFfLfshvEIIBvgdnwTvYfPoT8L1i0Yvvy0IW4R7d/5A8z/N11xz
Mk4Q7k1yX9GN5n+S0J9w+ZYQfL9jvqQeI0xm/GKbFaIgLyqgbSSJ9rUfl5iW
xqIAOiJvxyG+mYT+ZGpvrNQvBRGgAvYu1hJHz+0uae0DMiJgMRC4fNNeNo/+
hMvXgeD7B/Pl6jHEsB7j6Lst1w4ki0OMnXnPWjR/iRmWCYI3xGGqSED9p11s
Hv1JxFilnjZvMag0uHWmUIwDswtLrZLcxcB1ULXGz4UNuZiv+1/4UpgvV48x
FesxKuf/aNxPl4Kgy3qTg1BeMjC7CyoGJaFp0/Z3AWvZPPqTmXP/LOz7JAFh
/sYslwE2CGaM+7njjQQsiTC1SrNGY0J/QvIVJ/iSeozbj/a5pPvJQOnDOSH1
KH+a0ulwvt9DBvhAU2mQYkMvoT/J9512K2KpNOjdSbN+0MqG2CLf1u1G0tC1
YlHvk6VsSCX0JyTf35jvV8w3h9BvbyT8TswJv5QkQr+9eNx+3cNF7dTvNQZa
e4RY8IklFR34sJ3a6qba1RHG4tFvL71iomUyuZMy7/2U9VOABZcVFMfKju+k
3qqOejwllAUxuB4IcD3Q61NPlYxvtVP1inZdX7LkIP9ERfcC9U7q+M8zrj8f
8uq3N5hur3K4305pLJrn6qSN8jLT3sAJmp3UbQnzCyFacjz+L9z5bsHz5c6n
DM8nkKh/Sn7yinHrZjslc+Vl/PV6ecgSdGc5ofmIy3xzcq8brn+qx/VPj68v
C+tNaKf6apVMFpnJw6OF4/zNEV6G07QrdaX8UP3Tv+XbRNS7xI2w3wnh/Y6s
N7IYH7itMa2dMtbMOX0/WvH/8lGdTup07dmJcVHD9UaVuN6IsTXok2VSO+Xx
Rsr+qIQiuKaU1fZpdVJn1GVtVogrQs5/xHPrsXpwPda2c5M8hBBfvtF5/uH7
FOB89eUDU9D9Cp58w97aXYGnHuv+CNdfAl//DqL+e6Tn7Q2+v9z6b0Fc/z1L
7N0kZY8uaopZwAIDPhasOxdEE9ndRVVcOJi5IpgFu4l6bm2nrdO/Pv5J+bp/
fuk2wAQxmnDfr9SflI2JTqrj6f+OJ+u/Jy5xcy4S6aNm3bc1EexhgiMr+EXz
QC9loTWnzv44i6eeW2rDjMuJS/up/30f62DC1WXFcZXG/ZSpkCnd1mcYfw7j
pTH+O8Zfx/iVGE/Wf1d8EXuXcHaAEhCyWG/ezARPdd2lyoEDVMFFo9drDrKg
B9dzW+J67niX9+IJFYPUyc/u9aPqmbCyJ/D7hreD1APRd8HGbizowngLbv33
CPh0jN9O1H+Hyx/wDZbih+3ftK0/1jLhSfLva+nC/PB1h7hJ0w4WvCPqv9sr
b3mV6AjAqwlTP8S+Z0J3aeXafDUBkH8zWzjIjgWVBL4D40sx/ieBJ+u/VZiT
50wyE4QJCwxHW1YxoWnw+un0hYKQ+elS1Fgn1lA9ty6u555VLzkY5CYEflYL
7OVqmFD0pLgo0VkIKh8m6+fs+jv+BYEn678fePZfkYwThk/2Ux/U1jHBSD82
aneEMGzqFF4x5QBrqP47Btdzz5BrMTleLAIFl90krqP7Gzu7cJd+vgg4bky0
u+LLi59O4GMIPLf+2wPXf591MOxI4RODVfVRylu6mSDYSN969rsoxPWK2R9C
z/9MIp96v+ZLSN0Ucagena+tiN5Hjz4+szZVcagKsbVfG8WCqYRe6AgRb7/F
8XYHjrdJvdCX3C9nzFH8b3jWfKYZGu/JCH80czQbkgSXptWliMAOrP8Rw/qf
rGfrJSJR/pixXzhvGhrTmK3zRVH+aCG8t/XYN1FwJvCZGP8Q46Ux3hLjSb2Q
4Ip5E7SesYHKH6dEH4PGSoHZHuPY4N7x3nKhujiP3qZU1GdZKsp/37p37mje
IAE7W97PbNNiQ3AVPBdaO6wvUibw5QQ+BONJfY4CK37WZoQfdKA1GAZIQrov
/4cCNB99L5PJWsckefRIG9WejBdDeC1LHavT2VKwv+GNXzzi+waFz8seSMEc
jA/EeEsC707gtQn90raalb1Tithw/Nv9dXrfpWGM4PYQBzR/IaNJu998k+bx
O3CKrHy66QXiqxhq+no0DRa3Xr88UZsNi3NvL9qkwat34uLfEfilGM/1R9DA
/ggL3zaNKihFedaSaO+x2nSQOq5YID+FDb6tCVvdtHn9Ef63v71nwwyRDnOb
x3RY3DG1dXAmG5wS36hm5v17vCPGk/4RE5tOTd75mQ2h6y13xVvIQpzIef/O
BWzIYx9nX90oCwOEX8aMx6rNN1rY4ODmcvRzpyzsbbox6osZGzinZiue6ZYd
8jvj+n89XfUgT1iKA5wcm0tX0Pjr7GfnT7izIWIVc02ODq/fWaXcp7z9KE9Y
Emr2yxONA/3f1X9AecLjcy9iz6BxBj6P4BvhPGIKcR5xGPt/Hcb+X4MTwzZe
ZnFgzbUFbupo7NugOE3Imw2Xmi89m4nGLwm/s2254+hr6RxwVUo4VYfGfdrK
jQtRXhcdUxn4G41VCX+3ZwTfZoKvOuF3Vv55NV+AAgfGrm+Jf/dBAQJvsXKj
fNH11TpScxqNSb8zJzE3XUV5DhywbQvwROPndeBh6sOGJfGGpTZoTPqd8en+
//Ml/UHI++tK3F/SD+U3FK7c3cmGL9kvC7VOMuCFkeSHFebofQ99LSEUwBjy
QzmB/VByc/amGPSx0XU5JLVLnQlRVooX063Q/XVi/tmnwQSun1cU9rdyLDg7
uYWpCJzBRTGlXp1U6kJ76agkRYgKzmoff7KTx8+rIK/dhlJUhIA1k3uvT+yg
/jC+l/clK8L0D8fbNkzvoM4Q/kFJhD9QMfbzUcd+PqSfV9HqBwN3pBVByZQV
aDG2h9KteZ21LkERvFM3fHk3s4fHz0s56IpCMV0RLoy7HRpW2kVN3N9pe+CW
Inga1bXwfe4a8i+LIfiqjMD3FVGfSp6ncZ//b/j559anbsf1qXVG1ivDXirD
7ZvLV638woYNGuO8VpUrw4/2He+vIDy3PtgA16e+3HZktoiBMkT4TAvpR3iJ
GxnPd6Joc+87/qdNCK+I8foY/wLjwzBeDON3YzxZT2zz0vhrabQSWHc7jG1v
YINey8tHYdeUIExSdtGJ1WyeeuLfBiKhF4WVIDWqI+1zIxvWT/yUlk1TgkxK
rUBrzd/x6wg8WW/tsPVEg7+zIshNXcjS+op+T1Rz+0l3RZhVXHBQD+HJeus3
p6RmOJcpgGvhhd07EN76Nou9rkYB5p15ojsD4RcR+LcY74bxNgSerEePo9In
nJilAL/uzQhQaGLDsYVWeyPnK4D5DEf+u+j6aBD16I05NLWrl+ThcNTba48Q
3oDxu6j2hjz8ZG4rG4/w6iPgvUfAKxD1+qWfnVbbiqO8VKgwDBBe2IqzTIaB
8qhBb4sV6P5y9Ql+uF5/WuneY2P2yIHHTIejOYivifvX50YectDcEvPJBa0r
ZH2/PoFfivGNGM/VM+zAeoZLuWH37MtZQI8NdVz7z/O5TlRk8kcWJM+4pam7
nM2jZ5BJelBzczYLdGcprGj5xAYQKIUxC1ng6f9we9Piv+PnYvwhjCf1Hicj
guimF1FcD7PTZtew4WDP1xPZN5igfLfe5hGwh/QejVjvEZSSNq9bgAkhB5JH
BVSwQedBQpm5NBNSq6W3nJ8xjG8i8KEYPwHj0zCe9LMIWDWLst7GgAPn+O56
vkHPy/QtdYbODJhB754kOpnN42fBn+lgWJInC5tuLZ+34xUbzvjk/lB7LgsP
5lcPuo5nD/mPcP04iqfOmPfNmw43G5fMYZejOHL+qGMcXzo83dpmnazL5vEf
ucJyPbgkjwa/pkc2HUbXR79j3OrIHBrUvxKfs2E6m8dv5W/fu1yJ+QsQ8w8m
5s/1H1mM/Ue+7jOlrDTQuL6bMi5D+M+7smLGykLuKtvJLB0UlxF+K1y+CQTf
AsyX9NNMjKJNMWJyQCI30irrrjw8LJnadt+LDRu7b/T23ZPn8Q/1f18VYSPH
gU2a37yL0NjBvLj8OtqvVd2cW4yXKMAowj+UGz9o4fghAMcPjjh+IP0Z5+pt
0fGW5ECI+vyY095yoBb8VNoGxSdb637tO+QrB38I/1D3hulJVjQOnJNQ8hqr
JA9tegOHAjzYYOW8Kv2hsjyMJvgmjMDXEvPlxgOniHiglYgH8nE8QPrB6c6J
C80aQM9V6YSkq+lMSFkgdGMa2v/Swpq9NDOYPH5wUZmv3IxRfJiuf3RV7UoW
FOt03LvnxIbER48GS814/eMujIBPwHjSH/Pmxp1mn0U40Jwv02vwlQXumy23
SKJ4dZnz8dlazayh67/yL9ffGl9/0h+ce77Hwed7Dfh80BufD5L+4ElmcyW1
G1Ae5OS74LUwE9JVr/bNqpKCGb7KH84FM3n8wWsz8yMf88vAjHkvFm6TYsLJ
1tovh0RloP3BpgOV4UzQ+5f4NoxnEf7pViHHNPQUaTCpIMk34BcDrpfGeX+Z
RAOZG+YtHseZQ/7p17F/evs0zbcrFOhw26cxK+UrA7ZtTA4cq0MH3YjVm9gH
mDx+6x0Yn4TxNhg/CeNJf3mxc4Kdv2PpIPGpedu9DAZob3tnppdBh7jDIvkP
TJk89YJqHZ9kErRlwRbaxJNQPNuxvV9u1mJZCJhqO8FciwkG2O9mC/a78c8Y
pdEvrAg1e0+k733VT5WfC1MZcxnF5a9kmA4t/Tz+Ptt2zKOXiyuC9JJ96vYH
+yifGfd3ZF1ThB3VpwYuBvfxxJ+Ff4k/iwk/SjL+TcfxZDSOJxcQfpSMWO0S
MzMlyJigemrCwg7KvuCxuu1yJfDcNzUzM7pzyI9yN/ajHDvR5tmNNiVQummt
PbAGxdfy/3RQVQIv7V/+K+92Upn/EU/6h27cu2jweaAyzK3ffNZ7RwelO9t3
dOQpZcjPb1szuqCTxz90pPoQbj0G6X905Pm70dUDCpB695PA1GV8YCJ9cda+
C4oQXDbl1vWNfGBE+B8VVl+Ja+FXhCtOYz84T/1DvUjdnfjyoiK8np2RunHV
nyH/I/J5qB3heXAg/Ah2nD640OYrWvfnZx7alSoAzZnZWWJHFcFRaOeo5hoB
Hj+C/bfGT1P7oQCKuvHUa29+WPfc73fOGUU4dvGy7ZJofjD+j3wVsT5/P9bn
e+yS4s9NUYAQj/old8cJQ6WJds5dU0VIPndHMzJIGAD7EbRhP4KkL0pjGCUK
8Mfq1TZ6uyCoOhXN2eSkCDImpzXmGQiBHeFH4Ezw/Yr5OmG+pB/BbX7PQ8Xj
FYB/z1mLxLMi8DVWNtAxQAFeLCo+PypFBBZhPwIT7EfwSjWSerZLAYq6Z5Xe
rhaGTz9Vxga1KcDiS8wP1eoiPH4EXL7nMN9qzPcO5ltC6POjliy2NpNXgPbF
CfQFNDHosNt/wDJQATxv2Aac0hDj8SPYTgW009QUYNf4pan7TUXhjkq7QB2a
P+fJk3NvnUTB9S98GzHfIsyXTejzxcwaR6X9lId5ozrTHqSLg9O9ibHx+9D1
/qgcFF0rPuRHYI79CAKTd8z1E1GAS41x2wbrxOCWVFnAYV8FaDaGwBA+cR4/
gkjMtwPzbSP4lhD12WdiPR1PFqF9/0GbYr29JBRWfEw6vUwBIvUm/WpKkIRZ
hB/Bi97JT2I/ysPTGZymFWckwGrz3Wvnt6LnUUwzf/4TiSE/gokj8HXGfNdh
vtz+Q6W4/1ARda1W4z0TRKzuJkno0sEzLEDM6SMTZjUdqnOaytt/SMQwc3xN
NRPqUypkHo+jw50I7YM5dUyYT0+5lqc93E/oMe4nRPYLIvv7cPszdeH+TCFC
4YeknzMhclu36nlDOmxfvcbnSBkTivKLz/Av4u3P9L/vP6VMeLVldaPZNDr8
cO0w7kF8BNaPzTAwGu639OZf8q3/l/qIiVgfserQeP2elH/6e0q4+ejTwWje
uS+x6N+PHPhVbGpMh5iy6+FLC5nQv6FZS20Nbz8qkq8j5luI+dYR14u83uT8
t3Uk3u9pR/nXKS+v8Zp0mL7598UT35jgUsZcsxHx9YnsOcVuYYLJygGt09PR
7y84e7CqF13/WvrZ6ej6ZGsW56/uYcL4oqeDXZPpQC9NlXnRja6fj9aue7Pp
Q/rSQqwvjbpiM1McxYH5JY8m6J2nQYSzYYX1ehbcGqWQGH+HV1/qsLbEZedW
FqxZu4hxK5gGAp+vfvvtyIKHwa3aoknDetHRWC+qLzwrsWwPC37OdesZH0AD
x/WyguFeLEiLUUpwvMWrLx0Jn47xXH2pLdaXepTK3aYCWGAdN1cixpcGVVnU
KoE4FmwWjk7xvjWsFw3FetHci9+TEq6iOFhARoVxgAZLx+y8tOMJC7qF9j8K
Q3hFrAfWxHpgj3sbBrRRvhy86Hn1u8s0qMb6o29Yf8TVA/diPXDJAnG2Msqn
E04tFBK6SIOZm1uzetH1NqnPrPW5RwNtQt870vVPxNf/N+1XnagUCwrcPuw1
R/e361WL9FNxFqzILzH6MYoO7k8mT/cTZYHVQpZoEIobJ5xl39kjgK6/sYbA
YoQfveaSw0N+FnwR0fZO+ad/cl2pujAa6w34D2goofcFPz8/8fNTFC+Qf6eP
CZ5L/B7vQ+/7PX5XqaO/0Pt4v+dHmjId3Ag9lB/WQwlgPVQIoYe6cd/sg/Y8
Fgh/27pHTx79+3T20eZp6H566R8cg96Hwxn1OjfR3zvRRf0V0fNdZVHm8WwV
C7xDxT9+5tBBJ3LVsZvo7xt8PuV8m4D4XzkUEjiFBW8uSV/sncX7//m1x62x
l2eBza9duwrQese9fk/x9SP/v3w+6c1dbBYY+OZoqqP3xYf56ewcGRacGvfi
yXi0HnQS/59nrYajjzp6Hoy2VR1A65OIQgHlRmeB6ft0hX5q+Hp24+uZRbyP
NPw+luH3UQffLw18v6p8b00oROPK/YXWNLQenHSlrqkJov/v1u68cvT/DWA+
zzAfcr7c+azE8+Hq107g+3UT3w8hfD8qievN1SsqYr2iw7ZLt1LQ8/1stn7z
eEk6PHJN2X1/BcoLZ7McxtDR80ToD2NqozwB4RnZFtaj+ehwNSjc7hJ63n+y
9rbbCtKH9I0j4a8TeFKvKGkQE71wAQvyJudNzGyjQebSiUtzUF7rzQrrEu3m
1SsKPPqRZbIEzXfFgdDJNTR4JZI3sWYNC/gjoiWN64bHfHh8/8GggNo69H5p
Ha3+Ucj7PpK/t+HngmwNNN+tSuyM989433dSD0nqHUk9I7lfbrtuvisZ7Q/W
i0utGMvpUFYoZlWH9gO/wfE6o1fz7pcu6tcPNX5hwrvnjXmm8+jw/eXm1Hff
mZAIN146ot87ROw35H5CI/YLUk/4fHly/o8SJsjv9rcLtKHD40Xbq96i39uf
dUeq2p53v1z1yTJydQUTDKsTPpeYo+ezXSZ6I9oPD1ntiDq8aXi/HInvG8zX
F/Pl6vuc/6W+j9RP2vKNualxmwmqEcEXwn1Qnt3dfx/Q/r97U4rlluhhvrqY
bzmtErqeMWFV3eQFdw+i9+V5aln5K8T33abC0WHD+qIBrC8i9UmkHsqA0Csm
WpyZZujJhHHdBeesc+ig8XJSitNBJqyblbCIUYfuB+bzHfPZWFDwR/USE0KK
Wn7Uvkbvs9Fv+3PXmTDDy/2X2iAdTIj9jOF97GHNBxbc7E2798mGxqMX4e6H
L/F+WC2je35WBgs4VMWqt3NoPHoR0n/hKvZXiMH+CgqEfwL5/pDvF/k+cuOJ
DBxPfGUXvoizZ0F2sl1fVwmKR05QCYttWPD4zcdnnzt444PLdxtCNQ+wQLUi
RuHnWxqsrbAff38vC47IjvHz+UODdXjsi8fk73Hn8yf8/+ZjlfzstdE2FqiX
SL+WlaGD9OFfgV4bWHDHOfHLUiH60PrjhdefamI9fUysl9z1rQuvb07E/K8S
8yfny41vrHB8U179y+tyOAueOAlyGtF8FxVsTVwYyAL5Jv1HY6XpsAw/D134
eRARozmMTmXBxogc9YrvNJiRbjnpPbr/ToXrc6XYw/2YKwl96B6sD23D+lAx
rA8VIfSckxbnivPrM2Csp9+bF0Gy8PGti/3YGQwoCOAffeAjr56z7mPp5EY3
Bqz+3i9z57gsLJZPXJx2hAF/PN/tu1M2rOfk4j9j/CoCP4jxbwk9JyMg6qv9
HQacHlh+WdJbFiouKAafe8IAHfnZ30ULZXn0nEWOGTFfmxmwxqhrhv0+WXBQ
96/aJcqEDUkxjpuzZXn0lqbjLyZT85ngGK/uPW4quh6jBqsFnNB6pRZ/Z4md
LI9+0m1r1v21m5lw+fiZOo6kLKy/fUjj+QkmbCwJWJsyBc2XWC/I9eA6ft+n
4/f9b/O3w/M3x/NXI/SlS+74jmcpoPyl/OPGRWtl4dfMVsuZM5nwrTE2cE3w
yHwdMF8hzNcb863BekIfrCfc6Hhr4J2fPLRtn/Yo76cUmEWem3GtG+XPcZBb
biPNo5e+2+Kof/eaPKjUZn1bPUkKAmbOcr2ghvLxpumbtqDfI/XSZD5eQOTj
Rlj/9hDr37j6OCGsj+Ouh5vxekjqA1E23FYwWQ62X3Kuu4fwGefTO78skoOJ
dSX+z2fShvSQXH2g/BW/LWv3yEFtdvefYIRnjfGke4XKwa/31+wdUb6SjvWN
K7C+MaL7iAFdWB5O7rCYd4khAx4Jt+dPM5OHp8wj6RvOyvDoOQ3Cdip3GctD
Zsszn3t+0vBFQ33Oznh5oFdtNVTslx7Sc/qOcP1NieuvTOg5R5p/H54/qefk
2Os+n/JQDhI+r1aP3C0DT+3lbm74ga7Xze006y6Z/8x3pO/VNvh7dRv+Xn0S
f68m9e1t+QrJC6NlIUpFaL8dWie803xj7mfJgvXEzcwb/YwhfTt3/TJ+eWnd
ZxoDNuru/KJixYD/h7I3D6ux+x7/m+c685QmSSJDmiWdJSqKBslUEkIhKklK
JZIiqVAJGTIkRCQNpBKSoTKlVKZUCEkald/2fPbJ9d3n53qet//2ZXXutfa9
h7XWfq190yXlRk0woIPpqIX9vWhekbwsyVOTfDLJyx60y8w9hNqdZ4vsrUay
IM9oo8dEv05+dOSFN5NRvwj41+WYf10UJP9W/noX32zmSLGu4SzIfEO7r1LS
xd9Jr7CPyGFBEeZ9ZTDvO21r6V6NkE4+O1OvvfANG8p/Ksk/f9rFP0jX2Cj6
Wpi3pliWdekEdvIdOF9b+2exYdLvC84ruvjx9B9Lp9qyh+yJwvZcI/QV6BON
9RmH8/XhOF9/xXyf9gZbHuQ8marlOaubb3Z47t69H3igdDPYo929mz+e4EXu
tW7VarPjQcopM1/qj06+50LKO/ePPDQv335Tl/kxxIsI8vtk/n4vkW+PI9rk
7wnpQ+Tfrc4Mj3m7SxkK83tepmn84LsxSr6MQe1nW5w9lDd3C9VnauN6x1Jc
7yhD1DM+I/LjWxeuOuJjxYOEtDT7pl/9/Jw5sSrXmnlQbha+04P5U+i8pNHz
zNJ2Gx6MmOQ7Set0L//yYut5I1p5UHtg7saM/F7+OOK8JAf3/1Xc/+aEvQL7
Kbgt+L0X+PeuYH3uYX1csf1Psf1roqcdLIhRhrB9aVXRz3r5IQO3p9mitkR9
yrTuiT+F6jnJ+kvA9ZJTcb3kBoKPV7p7NtZoWyffWa/G4wNqPzhdZeL3sosf
Jz/TPVKOCykEH58xwljpXFgn3+jz9ozHGzmQt/ruiREvuvgvMtw/WKJ2IZ4v
Cni+WOL5wsHz5Q6eL6l4vgjqB6Rw/YBH5s9XldGdfHdJkdeT9XlQ5LJWKvlt
F7/gxNTyCEPeUP1APK4fuGbqnLttRye/NnXNMXoaF6zC1NQlXnXxNedbMbYf
/VMPkEjYO5ewNx7bS9anmfYcn1fyuYvvOOFISM4HZTBtPPhaCukzXpSXO2WB
slB9cr/5qp2VKZ38DTs/TtL9qAw+AY8c/GI7+fw3iu+HIXlBffJyXA9J1jse
I+oZyfZa/HuAf4/Uh6xX/Oc7JbvQ+vM96q3ubR4oROh22CP5707jbi65w/vX
/i/G/Z+H+5+sD/wQFepzK6af/7hzxN5vSH/NjLleJ8P6+eUjky4sQPqQ9YHp
2nkepZN7+bODciWdkTxkqqe76PXyczeP07f7bc//2P8kHzmvza+m97UyNC+Y
urUCtW8fVmGttlMGwyXrzz8bK8yDqhwPHHP6JerXkzVj81BbM6bEd62VMsRF
xOW/Qm1DggddhHm3Dsy7yRN8mhCvRvzeLUIfkleTbe2xWX6BB9HXy+obkfzb
phGPJlzhQbBPkL8hkl+A+bMCzJ95MerVF7F4sK2771cDkt/U+3znD2Ue2F58
ZrJP94/8dUJ++1/kj2NebTLm1dgubhkWW7gQoXfaYSmSZzxvae6I4ILFkgla
iWOUh3i1aZg/K0uq1xvxjgPh3k5Hm4qU4eLlHqv2Vg4YUGKoCaOVwZqo55zu
3FFyhCYC/j4lV3e2KMPcjEu2VQoisFN6GSPIWVmonjOfnR0U/nyA755cfsIc
jYe5B/S3aj4Y4J9mb/FodVEWGp8fifGphcfnXTw+zTD/P+9f+P96zP+T9dZt
ytHFbd5yMCs2SobCYkJxxDGlbwvkQFukuTsmmwmtBG/x6/WYth/H5OF654xm
yTFMkJKDB98T5cF3zcroojtM0CbqLfW7NvH8l4mBo+dzDakGZbCo2X9txQIx
mLRmzOqcmcpC9aXTFsh+ljYThbetdp+s3yrDvZuaoof0RUHL2dciyf5P/3sQ
/R9A9H807n8B73sM876GzPwXh1C/X+qpPjhTigdLlCRDDZCcyZMLaxdK8qCP
4JuttrJe2L5XBum9SxR3oXb8M+o9ewdl8AtviuWgtoDnTv6v85fgm1n7B+y/
oPcaP+ve6uNoHKYFNzfwkT65vpSeyy85Qnyzh9lEphWSr49O3/bDjwuhZRsv
TELy3cfd9aN8uUL2GhD2Lsb2GmN7rxM81mD8CvfUJjTO0vs1vC6h/W9O8qNw
W2Voc5w98/kFthCPtSsxe14Z6neWu+kdCRsOGIp8ePYKvScFG4njZdP/8Fje
2F72X+y9hu0leaBgtozuu1pl8G/unHE7nAVPfx/ATkG/rzqNpxjKEuKxrj/J
LbN4pQz3p/fksLkobgj0lf82De0rjh2X/FjC/Blp71TCXpI3Ennzf+O/kBj/
6/H4J3mjjfwo+rwXCqBatf7TJX0m6Hus1PV7pgBiare7Hz5mDvFD7Zgf+njk
jWkuRQmkX3386jqZCW65sbu+cJRADYUnDY3Mofrhn7h++NveNaJn70hA8CjG
xi9oH2g1cC8tyJGAnlnXtWyt0bpN1Eundt2O3bNfHN7f7rQNrleGxB295vFR
4sD9DZrYKMNIPH/b8fydSMzfKXj+muL5K+An9mF+wuKVjYoDH40rW6NC6TUi
kNc0fUD7HQ+aSkzurdwsAiQvsuRwjZu7JQ9YouPe9K4e5AdfTVT42sQD4x57
peTtg/yn2B8O/Rd/WOB/kv4x+Xu5WJ93WB/SHx0cu5FJjVYGm4m7JmgdH+TL
xQc1PYtSBqtbN/boRIsAEPd3yBH3czzB92mcwfdpfCD4FV7fZ4XK8Tw4/Xj8
mMcfxWCGiarbgRoedEqnGBR0iw3xK1GYX1kvZcWkmPBgkqVUR1umKPxSzB7r
3sCDtqZVYfF5omBH9P8Uov9zif5/iXmObMxz3FxR4T5ckQfmq2dF50dKwtjL
RQPx91A8UMtvexEsKcSvtE2oN+pRRetkdcKL2yYSUND5eey+Kh48bf+0d+Yk
iSFeZ81f7LXB9n7H9gr0e4v1I+0j+4d8H8nUXx0lEcrw8vqCq9230D6RsEM0
a4syLHGwa7zzS0zofhPB/SUV+P6SQHx/RT2+v4J8HmmfoH9ycf+Qz7sE4x2f
ByG/omfVrtEWEmDe/jxtMEAZnM3qTWK3SA7dlyF4nuA+jHZ8H8ZTXH/Xgevv
yPsILq509lw+Vhq29h8YPbURjds6iatrmNJgmlwdtgjNX8F9BAvxfQS1WQb6
Ub2SEJowt5KD5m9XVPbkfU2SwOm44/QYrQ//63ri+R/9JUPsL5G8/j/35KF9
46dW/Mb3N5ThiGGT3FUHDhyj5X7g6SgP8ffdmL/3aFoxeyxal0WZI+yaryuD
+PaQqs2/v+/CfFd6QlsZjAhe/2/yclie5PW/hI0PdeOxIaXk6kqfQmVwWNt2
MVODDXkOSRtitZTBDvP3rZi/38LrPh+L9qUzkzu3deaj9TImO+7lLhZ47p6p
FaipLMT3k/LahLwCwev3fUxIj/3IBOaTaea6Oaj/w1WmtnYyYeDY+Dk6w5TB
EvP3YZi/D7o+NjV2DhNk01o6l2YpQ1bgzu+d7kxQ+F1HylAe4vsF8puwvByW
P4/llbA8yet/Nx3XmXKNARO11R4MHFOGHxduL95wmwE3V4kbmokqC/H6va0R
s0+pMGBB1tz0g/uUwfy9ePk3XQb0hB9qPviFNySf9xf5KYQ8yeuXxp5S52+m
w4cTZls7dqB59vaj69QoOqQaba1qqOMN8fp5mHffrXfv24tnNAhO1lhsh+Zl
1Kvqr/GvaVCmlp8//C7aRwj52H+TJ/j4KVePTjTVpcHuZuV7iZvQOjA35HT1
BBrMC67yoKH4leTjv0wK9EveSoXDRiyjukDkl/wMcqOHU8FX1lxa9Oa/y5cQ
8mT9gPahwfGe5ymQdvvXS8NwZeBaP5Mbf5ACCwp+bKYi/cn6Ad9SasjB+Uqg
E2Oxbe9ONH4S89xMDJXgdpp4m3rlf5e/g+XJ+zW8Sx7WzVVWBD0fyoWXR9C6
rV5yl9+tAF1Fuku/tfOG7tdowfdrLCveZUZtkIfSSMOaUWj81527pz+jQB5G
vnJ+XkpXhkHiPg5PQr4ey2tjefL+EaPEaN7FK3IwWVTea/JtZVi1+oN5e6Ic
nDT28785SnnovhVDfP9I18+G3tm7ZGGs7Z5eexQ3vy3xmJGyRha04uKUrpv/
kdcn5HUJeU0sb47vZ9mI72dxe782a4GrDNB+A9F1yrBFVHpQFGTgAv2Stbyl
8tD6b0Gs/+HE+m+M138Br5+Jef0T07NmyFWheMJbdoetIxMC3NY2LjVE447m
JFdqz4QgzOvbYl5/js2O/K6nyvBi6tlm6VYmnOxfxHhrqgwrORUJLe+ZQ/65
x3/0z8n6xtzV+hajypShKNhrqQ1qVwXOajiA9omCmBtlbE3heobz831vcSvQ
e5d/1zEjnwHp3vUN/eOV4cbsnavW5jGE6hlIewMJe8l6zhPUaemaV9A6aZsw
fC1qL1ijp+3BRPucbMuYGahN1nP61ni2n0T7RPjbLSW1u+nA9CsS7VdThjnL
t2y6iNr/1d48bC9ZnzzXbLNiNVoHTwSPnl5bSgWPyKLxJz7zoH5GmHdXCXWo
PrkU1ycHj3R/sTldGS7MMLiiidr1mzaNEUXrssZZfdujrn/qk5WxvccIe+cT
9pL13g/WHKzI3KwMIvPH64YzKVB+zejbKOT/ZERJUo9LUYTqt6nOsm03kH82
e5KxT6w2FZhqfZQVL3nAjSoOStcUrsf+m70vsb1kfbvF4bAF0aHKEHtn01W1
0woQu2OLrs9THkxfm/zkW6KCUH37PVXjhIMhynBHybndvkERfn82tuIRDzZu
fuR374Ei2GB7rf9i713CXkH9fwKu/3/marWpG+1DFI09c0fbyMHlFLerIsif
TbsfUT97khxcw/X/Brj+/yErtuUm8ldnbxCTPBkoD64bS9tzUf+s8sp7ob5S
HjZhex9je6dge3dje/cQ9irg+xHc8P0Iw99sb7+Pfv9B6oLXuh+lITPk7pF4
5E9P1rN4WtksDWL4foRN+H6E3EiznDfblcGnwT81kysLq9tbzs54jfpnYk6N
ElUW1hL3IwjsVSLsPYTtfUrcHyHwf+dg/1fgP+dg/5m8PyLL64LNCvS+9q5W
VnC7IgWf2Lcexj/hQYTpviVPL0mBEnEfhMa/2Evy2VLVGtqL6VzI+FTfZSQr
A/ulNz5xT+bC03Fzl77+KsyjT7DdeHqjCBeCrHtWx7CkwSTTYaZMABdueWyb
NuWmFDQT/P1rgq8X1AtcxvHWaoLPlnuvq7Zalgv7E5/2TO6ThfOcMYf1UDzX
dM54WR1LTohHnz51y4l3ilxQu/miO09UFjzPbr5mc5ALcyb5LWsQkxXi7//N
XgGPfgiff+fH3zIJf8MBZY5flnqfPAxnzSlet4kLqb8/BDNDQYhHVzs++1zA
Dw7UPD3xZFyfHKxkW2Q5xHDBRubeG84EeSEeXf5f7BWcby7D55sL/3K+GYXP
E8n7fXJ+eYqslOrlu/ziDq8dxoLBjyaGb5R6+Y7Pv7vbXmQN3ddjj+/r+ZTn
M7zYsZ/ve1UBrrNYMF5b8dgpt35+/Mp76xmZf+Qd/0U+AcuH4Pt97uH7fey3
XE03TR7gf4iQj2mmsGB4jfnAvOMD/H3J4yDoJAvsift9svkDI7MbfvGX2cs9
psqxgBm9dpFM8y/+/vIEakMaC5ywfAGWv4zlPbE8A8snYXnyfp9KN/q4VDlR
kFA5ddNFjAW1kjqXQyiioFEBBqVJLKH7em7ztO+6aouBSu6nC6l9TNjv4Wf6
XVcMMu9/dTkTxxK6D4iUP0DIk/f7bJpsz8hC7bjke/d/DDCB03joQDpqe8z+
1lcWz4L7xH09oxcHLhFZJQFBVs4fHUVZsLNTtdN5qQSwKzuOvk1kDd0H9PIv
8tGEPHm/z7bfF1HslYSWXtZyGwXUP+G5pjVRkvDhYXWQ21GW0H09L7+abLLJ
k4JHwZH1UzgsGCvvELrovBRcf3DJ6fk5Yfk6Qn4MIS9G3O/jszX6VvQ7aYgf
ZBiMG8WCssvzR219Jg1hv0GaItZQfr8O5/fbzurRKpRkodzeYZeKCQt8S2Sq
Tg3KwFWZSRfeVbOE6hUF+UYpIt+ogvONgnpFCq5XPOo3fY24AwUCPNNDvv7+
rgi12WX4OgrUqn+R93zGFKpX1Fwf7qBjQ4XVqpektmsy4XWEHW3MMiqorM+7
9PE+E5Zh+XFYfjgh30jIj8b1isdwveKZJW4xZe+pUN/35pFmPwOO6OwpWUCj
ATfwRu3uU8wh/iMG8x+nVN7f8oikgf0LRnLpEwYsqnzkt7OYBvTQUrFx4Uxw
Jeo9SJ6zFvOcmzDPWYH5Vg7mW0PLj1Q41jFgiWvTtB+bqKA3LbrqQhPS03ra
8MW7hflXrYilcy+0MWDtkyTLSQFUUPpy4UFkDwM8PmwJSkJxXwmW3/wXeQoh
L+BlwzAvu+TIkU/hPxgQX2ZziIX+Xo/7wixdHPnJYzRTz/lS4THmZbdjXjY1
v3bbnEEGmH+Y9f3bQiq82Dgvo0SJCeuODiss9hDmfUle+AnxeySPTk9WOJAv
woRV991dm+yEnyfg0e0xj27gkb/hEIUJmvOYHxY7/tHHB+sjSfD0hlh+BCEv
0J/k8Sf+nPtkYCQT7kWFa3rMoYJbs/6U4DFMiBFv97JG/fWd4PnHp7Tre5gz
ofujheuyuVR4PY/yWN+aCcMMfTkPfIT5/3+TJ+sVspxuT3uE4pitSszOL5bo
fcmainR4MCFhVYdO+0Jh/n68fOpc81VMCB/cvydkIhW2FnqMz0b7TvgqjclM
6z885/e/8JwmmOdci3lOObeIA6L9TCgO3bpM8zMFLE+f2vnyNZq3HIY/lU0F
MS21zb/ve3/d/v7yXiMqWHrArgN6LJgeUiY6H/2/TFD86X3yLEhcbv3E0IAK
091ibyU0I3m78pN0xz/yVlh+jKX7Q9nlLLD0SjFSKKUAneDfBPrcxPqovfEv
24D8gEA9nc7AfRQhvo7kV0meuYbgmQX87TbcnxNwf4bh/tyG+3Mr7s/FBN8b
Lq6zdWowE6TqCkY5qVPhuHP0eKsEJmzkXg+N16MO8biRmMcleVtTov9J3szq
X3gzkpc9J35Se68LHR6+3uA4fwodAic+e9/tj/7eyyzUKJUOtgQvSzM73TX5
EB0s9m0ujFehg+OYWaeKL9Mh7OywX74r6EO8rEjo/ysPf5EnedkSflGL4Wc6
bBwZdviQDh1+X4/4nMkAY1GfGROi6UO87CLMm/pZPX8xjo/2jcjxYacN6bDF
e9TzT4EMaFtQlPA584/8gr/IhxDyJJ/6oGlpaRPaZ4L9x25495UGaXtrdOIL
0Hp5b/lC/9n0IT5VwOOOivx87lAOA2zHPffSOIfsubozxBCtV6k+izW60d9n
EDz9BSvG1F8PGVBrYbOA3kqFy7PHKK/5zgAJg7VXxaup4Erw+FlHpPuPljDg
w6qMhfko/hXdYN2t8ZYBFpIrbu678qc+QcDzC+oP1uP6gzpiPxIn9Ncm9C8m
9Cd54tRz5+NSHjCAsert2Zh1NFhVP6FvBVpPp95/N7g4kwZnsb3G2N4kqWLf
A2h/m+uT+qljIg0iK7dvTtZggr9bUX2ZJw0+4/13N95/T+L914HYfxl4/yX5
S9UaA0sbGTqIj2ySrtnDgGljJr2vnUNHv+P9UwI9RzAfJuH5oHb7+c1xsXS4
5pcT9MmGASecHBaOfU8Ho+uUrvpixv8sv5GYP55zjwxGVKF5lR/vodhKB+dN
KzgK49H+Ktcy7b0RY2g+hOP5IBjvRni8C8bzJzw+BfFXCo6/4jC/HIz5ZWeC
vy3A8RkPx2dZZS7lsvkc0Hb09mYoKCK/sWXB/ngOaGjmj5RWUwINHL+l4Pjt
kYOfSpATF4ocOgLv7FWELbvigyJ0ufBDpi7GpEaYr91G+a6efZYN3H3pp5Kt
KCAG736OFeOAN70s8VkvZYgnpmOemB7pc11TlQOHF2WtqMxWAv77fLOaJKRf
XV9clBdFiCcm9SX1oRM8cUXXEWPWSxawFE+Z8n9SoO/AmsXnNdjA06iW2IX2
FwFP7IV54mXeabrLLdlwdHvQuk/HKDC4etSFtQlsWJN1a2WBNnXI3rv/0d5J
mN8ah/ktkv8i+RxFzKt1YF7NN99lzfUJvXxV20E/BdR+8i28aXRoP3+GZaVW
/m0e3MS82jXMq/1zvobkI5Ursx8a8OC07M/FF0P6+ffcZQ7zUPsswdcK+NwE
zOfeJXhFQTzshONh77ovVyS4vXwfp4+F7VZseHrvlIHO8F4+XcSIm1zPFoqH
N27a8ouyop8/M/4V69hUNjQmmbsF+/Tzd32eWTi2Vlg+4F/kNXA8nIjj4azj
SnKPzg7wXVNz69TM2WC+9jXb6vIA/597hZ6wheLhsgEHTuyXX/z3vpOOHTFm
Q8rUyGpK9y9+0SyjCe6P2EL8n6A/d+D+zCD6k+Qv1b4ezRun28s/TZuV0nCE
C8PG+zvM39TPz/l1WsX0sDBvepiVM8V0FOpfc9Wwz9JciJ/TCr/8+/ksn29H
5kn+kY8l5B0JeSaWJ/nUvK/nTfW00PuSCLez9EftgMRH5r79/N37vp+fup4z
xHML3jf5Pl8T/S+IVwtx/DnjQdO2qlNS8MZsjdvJKWwI6tTcaX1UCqTPjlzl
X8keij9DcfwZz7E/G1ouDU1GHw4Yo3lkyzo8NqRQGuxWXRkb/449FH/m4vjz
Tr9S9ZhPMuA+QK8q92SD3pEbVRdrZECqo63jQjdbKF5d2Sml4KgvB1KqyxvG
d7DAtthtZt8KeXCZuEcxmM4Wind37fy155iVHCzKsF9d78QCnRWP5DZtkQfP
R722h9eyYDNxHy7Ju0kSPI8gX8DE+YK0sv1SUSskYHZpWq2mLhtOjFuunOct
AYMRXYzlt9jwgsgXfNzvZXVuhyQ8aVp0aLkhGxRotxzDIyXBeoLpjdX3/nv/
y+D+p+PxfwCP/1t4/Df/ZfyT+R1b1UzbGoYo2L11qhw1gQ2PDj19o88VhcC+
ZWv23GUP5XcycL7m8uTzMV56YqCjwf6VPYoNleyWugZDMUgPMM+4XsyGJCK/
k0PIV2H5U1iezO9kXwmw6bYVh8D5l9auHs2GSZqn+mwdxIF94FYDpZT91/6f
RfT/T9z/bgTP99xcbcWuAh4kHmsvPiLOA8c1JrPfDOfBMrNXrLeiwjwft7uL
15DLg6k+csofknmgM2vi6jVqPDgUF3m6IAmtH5jnM8A8H8m3BhI86lGC53N3
P/vzVB4PqM52MvEvOKBuuXaYAvr9Dq+XHJ9nnCGerwvzfM+vTJqYks8Dhdff
m9jruHDtuVNOlzoPMp0aks6s4Q7xfKZ/sdcJ2+uJ7SX5tvOHb5/UzOTBY511
2u0ZaN9r+R58W5YHeg/NJOROsoV4vpLlik6e2Tz4dsONUwwceN63434rAz3X
8OqeQnNhfvHf7CX7S9Dfqbi/Be9rOdafTvC7rLYkB5UdXOjmBZvyD6D3J2ad
ZxXNBZ3jvrPbfnEhC/Mo+phH2XXT0fDhJw7MPbW+4tY+HjSmzB2R+YUDn6XF
dnQNcIf4lb/JN2D5Niwv4FeOYn4lP/sSPd+JA1Pl9ziKJvLAfVk174YzBxZW
U/Ja+7kgQfAr/5wnXkP7pl/mc4t4HtTr2lOr8pD/lar6qa6XK8S7COTHYflG
Qt6R4FfqfjtQmmxo1jv7KTUOjYN81xmBI9A+Sr++/GwPV4hfmW7/TnpLLAuO
tp8R6Y7lQZu191YVNK/rXKQaNnVzQet/lCf5lUmjvZ3e/GRCegXltWoUDxhS
ckvrJFgw83dh9jcuZBI8yniJr6nWPkw4c3LTzenhPLicMM8yBcXjcGfCYNZH
rhC/IpDPIOQtsbyAXynG/Er+Dv3Q6XUMMDgfvpy2nAfSCd8Psb4yQO3GmX2t
ZWicYR6lD/MoD8wq3C1RnFB0Zad0ozUPnrqZdyUuY0BkywYdTeQvmP+P8iS/
Emg6X+N6Gh3sZze0s0fwQMx1/Xvja3QQW2FGc0TzXcCj3ME8ioZx0xujLho0
NuvXOaDxXhDb9aROng5b34r0hZpwhfgVgXwDIR+G5Ul+pUX2iJn4JBosWBj0
8UkXF97vXl1paEmDRaYaAUljuFBK8ChZDS77qkKo8OT+jb75X7hA291YERdE
haKSfZ+zVLlD/Ioflr9AyFMJeQG/Mh/zK+0ZF1qnrqKA+btsF9N2LuSebLjr
YkSBgy94+h48rhCPEpV0MfPtc0VQveuUze3gwiyDwd49mxUh4OvRQBqLCxew
fDkhr0bIb8TyJL8yumh9bkq6AohER1Tu1ueBetmd9G8OChChut1CO4A7xK8I
eJTGWS+K7X3lYdHvDwH78+D152Z7F215kOLSpSc/4Q7xK1r/UZ7kV8qMmRKX
XOTAzm7hdBU0H/VXt9xbz5WDjiVT2ZtRf5H8SqaGow1tsiyU5Zw9OOkUDyKb
W6bvkpOFxjO+I68poucR/IpA/jaW307Ik/wKbc3cuYVsGXhnFtk7/SyKX54e
zwz4LA3Hk86fC6PyQJzgV7zsLy1b0SEFMZ2XFzheQOvhaAnKkiopqHfar2+N
9hmSdxHI7/qLvIB35GLecc7k+1av7knCtT530blZaLx+bXLQvSgJjypPZD9j
8YR4x7ElU8YsPC4Bbg9zM+dfRPGbvWpi9x4JKJ6drbeCyxuqN4jC9Qa/r612
lxGBtBS2H62IB9ftDRd+FheBnNH3H2Xq8IbqPc7geo9WaCz7fmeAbyJ9xPZ9
CQ+OFdRJ3S4Z4PPLvI3ejuPBCBxP3sHx5GMiXhTEg+U4fiH57Eqd6Yu7HcVg
0CN0r3kODxwYdhIxM8WgbF5VThnaZ8n6ilWm3zjnxorCo58zRUYhv0My++b4
Qm1REKnbVHINrUcu/2JvIWFvy//YnySPPtBZPE1nszh06JWpVCC/w8sz2rZ4
jThMf1zcsX8YDyZje82wvY+wvSJL/89ee2zvHWwvySctMHyV33iIBwHaF+8U
b2JB48MAXdc+NA8nDAsI8GfBbqJ+YLvXnIsi6TxIPxMXuIDKhpBFhs5UMbRu
DI4x58sL10tk/cW/moD9K5JPqp8+b9Yr5DecP7vXMHAm2rfGQYEb2hdTpj5y
HzNdmMdKva4svgT5qVSvo6GHXjMhPrSu4+UPtK7nBXg7vGT+q731hL3VBJ+0
IHjFbcWdPFi5/YP0NVUGzLMdk7WjiQu7ZpbYzecJ81jPbhvEdKF1JybJPC3p
CgMSXF4ZfEP77sNzR54VZzGE+LM6wt6p2N4kbC/JYzXJ3/AP8ePB3cf3bINR
u+/VkaKkR1zIqRRZfR61BTyWM+axFo1edXj6Fh5wzi08mxJDBx2Wp3FcLRd+
f9YyYid9iMfKJ+xdRdgbi+0V8El1mE96tHCYWYYlD5aEaI3LKqPC7WUPpmcl
c+HdhYr2FXepQjxWrf7a57RFyO8Z1T2ZuZgGHsOvRmhe4YLUqcJxMe40WPgf
7b2C7RXwSWcwn9RstidnLnqf1vsPzW77ogQhOJ/WifNpJI+VpJe5KQzNiyjz
9NF0NSocC8xqTF7KhTU3J77cyqPC0v9obxO29w7JS2HeKhDzViSv1ULou2hM
vMtwtC+kenp02mQpwvzZLT8+j+TBF8ORh9J9FIbygwJ7yHymJs53HsT5zjj8
vGn4eW4Eb3UF80tHML9EPu/UkjEO29G+Pj8PGg7ZysN3P58MLp8HxZPd1PeP
khviYwTPI/kXAd/yDvMtJO9C/t5lQh8B3+OM+Z5zzYv0ys158DKiSDVQVpjX
EvA9NZjvWe46I2+TGQ/kJtxTXvDpDx9lgfmoeqIehOSbSF6IrBd5aP1q9wO0
L5x4sKtaJk9q6Hky+HnjiXoSkucS6GOO9SHrCcn8jSD/swDnf/SIeiput/8b
07sK8GP25h7XSBaIxIUni+QrwBLb2t4PRmyheiqZGE5eH00JBg+ePD3sMAty
XU+8l1JQAq/lI5sXLmTDYiyvjuXlCPkcLL8Ky5M8xNTZ0Uz3HRRI9JB01kll
QVvMmCephylgd1wltc2dDa8w36CG+QZDF518jy1U0B618pdhCgtobgs9kpOo
oPeKYR/uyR7iJ1T/Ik8n5Eke4n2giRd9Ng2MmdGtw7ey4GTCHsqDaBrMvTyn
+9oiZC9xHqO0ooNTpkoHa9HMaiUvFtzsYxWJhNCh3WnK8XZHttD9VuT51SV8
/iWFz79IHuL7pPwavR4GnGtb0GOeToVcvY+NV+SZMGqJcpVKIRWoBN/wXmRs
Hiihfe5Yz8TmRCoUMDLTf45ggu3u8o9Gp/7cb2XyH8+nsojzugVhtGH3BtDf
Z9SXr0D9JnaN8iNxHBMUGlXN8s1oQ+d5ktiexFKlOz/ZTEi8WHH6RTsV+lbb
+MWZofhzSWjyBSpNSP9mQv9CQv8JBJ+xYs/C4MUq6PlzAmazQ6lAr4wq4Bgx
4YuVv2hEjDAPIeAXojG/8IrgDcjzetvCe/MMF7LA0izs2K3ZVJjDdh7xJIIF
0GvC19shfD5vfVP2rhYax7rB9LRvI6mwzPxqMb+aBRdiJTQbVlOHzmu6/+W8
hovPawR8wCvMB1xeujdixCATyjK6k1ZvpEKygQVcZbFA/fHjmNJUYb4gLG5s
2zldNC5rqCrJS6nQebJ8YpkdCwLCJ3j27v3f7Y0g+Al6flq77gEmDF5Teh+4
mAonc+svn85C64a5U1xtgPB5/525hlfbLzBh/dw+u+0zqbAxxnDy4QomfL8V
ywtcRhW6P4vkKQT90Yj7g+RFVnZHmDSvYAIcaKr4uJMKnp7HjhzcgfzGUolw
2RNUmIh5kUTMiwRZrGTGhDLh2Onemkv+VJh5pnWURioTst6L7PTbLcw3COwV
yfv/t3cCka8/+azO6u1XWfDvn1FUNYIDuhuP5TNl5KFR4lTMdweOUL5f8n27
Do8mB+YKzx/+2sWG6Y8eb5U2kQflYQfvG2cLnxf8Lf8/D6//gvjqKo435jss
CowXEYHMK89HfUpA++xRkVGr+n7xT0x5u1W3nwPHifjKcyVDzfz6AP/Tzf0n
aGifG0WfZXQld4CfXHiTMlWEOxRfVeD4Spk4/4kjzncScZuN2zr491Lw7wn0
OYn1EZzfxOLzG30+W3tLzgDf/Xy4pfhqDpyXTQ0t7PnF17st/6LMkyN0fkOe
jwny/zdx/p/Md5P5YzWcj23H+VgyfzpuG9dOcjsXhhUH3HjjxYUKI35DWSgX
lF4Fjaup5gzlT7/gfKjuUoM3jGYOxI5XaBq2kgtBo+lHQxs4MNaFPW3qoz/y
gvzpGEI+kJAn86d3RW2mj57BgdqUGtpOTxTnPKWuO2DOgTf7vq8e+ZAjlD9t
e5Z12iITxWHG3RYdy7jgP6twyoVDaJ9+XJUo+4AzdL7rhc93Z32VD/1owAHt
yb4XgjdTISXNcODMCtQvPmEJcl1UAOI8u3DWznElFRxQ5PTfCkXzPWuryPBz
gxwI26M1Na+ROuSvdmF/VeBfr8X+dRn2n99j/7mM8KfJ3yP1EcQP0jh+6B/b
quHG4cKcs1GF21bTIMl0WPGBEA4cueA0c0ugcLw0o7ZSQ1GPC9q3W41md9Fg
/2PR7dsTOKD5RUv0y++84v/Yn2R+WWpJf2AVkw3d25pqvqD3q2/69eQYKTYs
G7XUzhCNNzJfnDnssPWycLQeV1b7flrNBa/2RwoZviyYsOWb+JJGjpD+1v+i
PxnvWXJjlJNMueBzlx18bjsdmuzFBo8kc2BnpS33WTh9KN7bjeO9O7uSGOpT
uWA+kHJDlsYA4/tim/OOIDtDVfSuyzDgJ8EfjM/8uKtoGlrXnJNldC9R4eO3
G9eqVrKheY6s4gMKTYg/uDGrf/vTQjYY3RV/+Xg/Gi/jKxeZN7Ph16tpDp/E
aCD6P47PT/+xP/Vwf5L59waPnVeHo/anjudxKigOOFMoIectzgLJIq9LI7s5
Qvl06ml/rTfRyE98t/PCbLQuNEWZSY9JYoKngaFbG4ULPJzvmIjzHVkzDT4/
ROO/enzAkgtpbHj06o7783wO+MVfKHA8yBY6T7rBn7Ti3noutEcFWluacuBk
ZNvg2fsckKs1+VWO+kEDr1/f8fr1AK9PFLw+bcbriS5eT+YS+Yu/vd9l+P2S
+YuokLAQu2lcOKf6MFP/JAMknvmVnjrEgd/HuicPMgCI/MWjowVvN1lx4YSf
S7KrCRMW0Y3k9x3kgOEzvcpY5KeR+SZLmVlVnbO4sPSrU0kt8rfHB24KiDvK
geasaCX+EhYEE/mm66Xe7kvno/emoxh/S5wNg2OOel8+j/YN9UNNNj9ZQud5
f+t/f9z/gnxTMta/ktDfldCfzDfJzN2+0HgmFyIuOZ9XrkJ+xZixxfGHOTAj
Q//r+zImNGB7X2J7p2J7PQh7m7C9LyNDVjSekALn452e29C+UR/JnTxilyQU
ZHptD2vjwH1VRbqXnwRktugdD/7IAdcafkFavhQkby6za9rKBauCMKszhyXh
92eqx0RwQdWY9fhiuAS0i9h8WI/aL4l8MZkPXk/kJ9fhdgluqxC/V4H1OYv1
EeQrp+F85egp8yP1lorDx0U3CrdEojg9K/TmsXnikPAuP9LzM2coX3kb5ys1
G9pNsi3FYFHEq7iYnWh+8b+srZ0sBptfWXrZt3PgHfYnjmF/Yhnz3dYoFVGI
jUvsvP6DMyQfiOVJf4L7wjXbTVkUbmQ66p1y58Cicx/TXU3FwDb+QPSOBRw4
SPAEJC8gON8/ic/3Bc8Lws8T2BeP7RP0TwbuH8Hz7PDzor1oDT/miMPeE/sn
FsznQO5IU3a8jwQ8ydlX92UeZ+h5p/HzSF6A5DEE7QHcJn/vPvG+SD5jTfJB
a6edkiDi43isc5Hw+NtE8DEasv2B9ONSMG6k4so+99/y/+/4bSDGWwZxHhJF
nKcIxnMKHs8B07dMqHkoDdYqBR3X0fgJsaWepryVgbW7XVMPIL+tgXie3uys
q5OypOHT8buT+ns4EMl6I3kgXwb611lTAsS5QnzPv+lP8j1TJo70q8uRhkOR
U65YrRN+Hsn3LFrosOZEuQxsvcQTTQj9o08f1kdwviWJz7ceWl5bd/W6HNQV
H3/d7ceFDL1Xe1nOcnDRe2JBDpUrdL518s7yXcsqZaH1ps4Na7QPsEe8tnWJ
koV5bYWeTDmu0PkW2X+kPjuItuD3XPDvncX6XML6kPY1X8y+O6xQFt5t2JbQ
gfxGfymm1oELcmBt8mn43Eucv8ZTfkQ8VY/jKUH/SOP+UcPnjdvweSN5Xkn2
X/HEg563wuTBc4yJ3hQ6F27vHLGwGhTgy74H4dsuc4T6l9R3LNanAeszhtCv
DP/eZ/x7tsR5Kxnvvd3l1NO6RQG0vz42N+5kw1abqvUVpYqgf0shy8iEMxTv
zcXxHpnPyyHydeT5Lnk+TJ4vk89z4kTO7kF+fYf5sJXayP/4jQPsQ3G2+cdQ
Vc5UDlzFz1uJn0fm88j8G514XjNxfn6dOH9PJJ4Xo6O9fusKGszfmG90xpID
WxdfKveZRgd/kR+zTaZzhJ5H5vOKiHwdyR9s/e3AHGGAtQU9/ZQUF8ae9/n8
7QUDti51UxuN5rOAPxDB/IFItqVqSjsdUnbUBq07xYGNT0pcekczIK/2wavY
V+whniAc20PqK9DnG9ZH4E9O/Ys/+Z7wJ0k+Y3vh5vtODCZkUmdn9CI/Lpo3
t28P8lOMPTuuy93kwGNs73Zsbxhh7xjCXleiHkyByH/eIPrTkuDRXwa8bI94
Tgdx60tPR31iws+O6v7RixiwbH33edtcFhwn+PLMyLJ7/L0MsC2Sq4F1TMi+
NsnMeRITnsVm550cxhri0Y3/In8Zyz/F8nMxj56AefTYFYsdjzxmQH/XtNOu
pQwoc3aJGb+JCSveHZN5bM8Uqq94Tz9R08diwvkJoRsD2Qywv65SK3uVCaul
zBf+imAIyTcT8o5Yfi2WJ+srLFbOO/VuFhMOLNl1qPUgirdkIzRNXjFhRKlb
o3szXag+QSkqd8OD7Uzocp1Wugi9B7d579d4yrKgPjR0eZEtfageI4WQ78Ty
rli+DsuT9QwSo62rNm1gQtxIHRfFBzTQPXvpVEwNGm9XijOvf6bBdiJf3Hf/
2dgRy5lwSXNpy81gGviVj3qd9bvOsFW8oyCeNpSPnonzuUGs0b80pjEhpTW8
X/8mFc6/c3a1WsaE9Zt3y+vVCudz10e5HNo+lwltFvrv4tKp8GCK1pavSL+P
Jh1lh2/893xgA84HXiLqT+JxvjoB56t7iHy1IP+ug/Pv8PjbW6VxTGDNGlkt
+YIKc87MbvZG4yZ2bWT1l84/+Xc7wt6DhL1+2N7TOJ8ojfOJFuc3R82/hcYh
q/2I+y4qvDjOXiTzggkhmu/OvzsqnD819FkUeeM1EzRebUhtCkfxcuTTB41d
TJjdt2iY85F/zyenEPnkFbi/GnF/Xe/WNp9/mglad0RuVedTgbH7Qh3zLhpP
Px2lUquF86cDTo5La3KYUOUTpMdFf5/981pqXCUTOn58rS3Ko8IpIn9K2luD
7Q3G9v6v4408n6hoDbqS7sGEXNjlTHWkQaLyW7+cfUzwSO9auwrtI4L3fRq/
b9rju2Za7ky47n7lpsdIGoyZNEOiIALFqQlTWhjo9wT5cUucH9eUtvB2SWBB
Rr3ctmn3qfCtW+dizTEWUIobyubRaELnAWv9i3pjPrJg4uBpq2to/H4O2GDw
FMWp/PQjXgno+X/Ln1gS+ZMmnD9Jwu9PA7+/3Jpzi2fzWKBWl+XTcJcKVSG8
kPcqLNifZTynB43PH8R5gJ6s+nInFxaklegHxd+jwptJww80urPAyWTX7lHi
/25vO7aXiu1tJfI7fXTNuxt82HA4Q2RDdAgNFAyjnrMD2DB3sPvF9BbaUH5H
5PX/5XckYjtvRSK/5830J4vFNtMg9gNv3EMxDpgFKvnw0HomyO8o4/yOIJ+X
hvN5ZL6LzLeeIPIlD4h8C5k/VTVdNd0b+Z0tiU0pl/TR31XSlKfIceBzwrM7
k1PYQvm+lE9vYnRC2GDOm2KQMpED1kVuz9KR3/Fmydkn2sls2IDlk/8iP4OQ
J/ODvw7t+8KrYcG0FqbXMT4H5hnEmshmsEDrTHmkQiYbvIn84MpZVs7yBiwo
jUg5kjGbA20vKQfX/UDrYcE+447rbFiN5cf/R3ky/1X4IPD0LLS/mSw8dGFh
FAdsMvdP01uF1qdRmpl7WMjfx/7KMuyvkP4I6V+NJfI7KxMKLQcb2FBjM+uH
7O/6hdfO1HUqbCh/Tal/askSyu8EJF3PUkXj520btfFEJwv8jcZ/j57MBm5B
VM1AG0vofZPvU9D/r3D/u+H8jhHO77h77bm9pIkNR7X6ZH5/N8yj6H342Als
SDzDsfz6jTGU35mJ8ztqy4MlJrxhwy+Hh4PpF5kwvVJlxsORbBhXxqAsQ+um
3n+0twLbS+ojyLdRcb7NiMjHkvqe0+1La/vMBo9dpkX+W5C+moWbNqM4a3h7
4IYzH+mwjLBnzrZtIQbABtMdAT9hCQOmWqtvMnNC/bOsOjfxAR324fmmgefb
LmK+KhLz/T3OL0fh/PLUtcVzRgywoeNB2/rXa+kw6sbj0xnL2OBeEXf300L6
UP5xObaH1BcIfcjxNIMYj+R4DiT89ZVei9UvvGbAufuxum0r2PDo3skPHslo
v9/Vs8kOjR8yfhD4s8uxP3uZ8FfdCH/rsmWBD8+GBW9+JfEO9tBAasLe9Y8i
WdAacalyw2m03xD+VumTb/l75Vngqx+xJzsHxUmD+o8O8FnQEfrZ9zRaT32J
/e+x52gpqSombJzIEavwpcG5h8/HLu5jwo4LYbRatP+R41swP3h4fmjj8XYP
j7e5eH3RxOvLsXDvLwHeLOCcuHnmJJJvu2996vUYtL9UyVWYT2AJ9S/Zf6Q/
T85ncn4I5lcCHo/k8yJp+a2h9iy451wnnxrAhH0jasYO80frwvOzs7vzGULx
AOnvC/z5Ndg/t8TjqRGPJ4bXWD+HC+g9+o7ak7GbLvQ+nYj5oXR+vsPVvSz4
EFP0uVKTAS7Yn9fE/jy5XpD62hPxAul/dCbPmLD7ABNM2+48LR6B3ueYIwvd
ziL/k/Gz1EdR2H/xmrRxV58fE44khjyZr0ADY59HdVXIvwu7M63F/vsfPkPg
/8wl/Nks7K/6Yn/VhnjehUUjU03zmMCPPt20/auwf0g+b/PlYHkm2g+crDVd
4p8L+5fniec9xP7+J+zvk+f7NYR/TPqbAn2+Y31I/9jg48SfPp3IH/WqHGFf
TIUN29+NGfjGhFvPpo2d+Y465F8J/OOrhH/1GPtX+7B/NZPoH+O3e2/VV6Pn
Bbd4j5hAgyxiPmYR/XfwwbuutjdMmBa3xs5YlgaRFiecj6P5X3U3MrtVkwYs
bE8HtieA0PcpoY8/Xh++4vXhKV4fAvH6INAnCutD+seeg3mp5ZeZUKO0fo2V
7R977LE9gvHp+h/H52PCHyXtI/vnLeGPqqlkTjRz+M1BvB9YyRdeDzsIfxTG
SVGeJLLgp4aN7XtXGsgQ620H4a9b/kX+A5YX+OsW2F9X02CuGSHChgdN6Y25
a2hwO9kj3R/5IYu0M+fW36EJ+ev/5g9L4+e14OcJ9ovXeL9YTKw/5PPawq3l
3jxF4/V9oq/laOH1S554njax3wr299d4/SO/11yjeptbf5MBmZZaN11Go3h7
jluexg0GLHV4UR2s8ed70HL4e9D+16NkTXMZwNmvFGKtSwW58r2vglBbay89
Ql6TCu+J703vGNXZt+88AyLf9xibjKPChSm3pKovMuD9o1l6h0dQwUxbp/rp
VwYo3zOxkOZSwTlYc0nAJ6TPgxsuNFXh72vr9Y1YP+4HA+KKOAeX8KigtDcx
IbGDATVa93dPVxf+XvQl4nu994jv+b4jvve7kfh+MPl94Z/E92YHrSev61Fk
ws/6XkYlE61HorffTKCjePZTTsl9FeHv7w7ubz+1lon2jzMGGlQ6FST0064e
VGYCnZFqdRLZcwB/v3cz/n5vMz7/SsfnXwsw/3Me8z83MB+Ui/kgwfnYHnw+
NiVpZM2x4aJgYyjpWhDLHap3EMX1DuR5G3keZ0/UU8xWqm1c9zOTH3QINhrm
0mDftCmP/Zft56dqXBKZrUWDnbPKNlXcL+WX1j4SnShChee3jzuG3PEwX51j
TOltpMIw/4KVuQ2lfLnhw2t2o/+/m7/CPnQ1Eyb5cj6s0ejlu2Wd//XrFwPE
88cfHJEz0eLWlZFv1USv8lPOVVzsc6JCuvvnuxlZHtdHP2/VkLJG+9G31H/k
799NP8keY2zRtPn6P+2sBe6NGU90LV5bhr+LW3SLP85/M+d0DwXoNq3TJF+X
8kX++UcFSReDtpqcHP7hl6LPP65QBVv7OR4/gjL4z7h25l/n0sCqu3Rs+pML
fCiYlCv9kg6GLxesHhbKgKoF2Xd0Wvr5cxMcF+2MloKxfa+uhaQowQK/UUdV
ai/zTY0PUhhidBhzNXE7WzGTr+HtuWffDDqIVQ73TvAXB4tM8RrJn/Igyl3z
j77X3Wx7w4osLYYt5MVnfUrgT3IpOVO4VQXYHxOePHucwY/d/CldsVMFRNwe
h3nVZ/Mr7orxg7RV4U5Yhvi1xQyQOqqvGX1XFDZuaYlVUInkWzZWxKYlqsDl
Av/IHcUMmPj1llXgiC6+YUfLioZpkqCUlnN+fIQiVL3r65pw5BJ/9nfNsB9o
PaEvnRG8WDOHP28U1yjShwEbLks0hlKYkPY4cu9Nqe/89qWayaqB6HmvMpY4
mQ3yRSKOVPvulIJrO+bPS7+oBAcCjDPvrM3hd69r0TYaz4AfnKedot45fBWf
3uN1F4fBLJWytPPyOfwNt7fOKhZTgXty++u+PMrhG0T3FRdPYcLwtEbto0FX
+Qt0X58fxhsGG8ZqGVbcy+Evji8MPus7DAZG6xo/jkTryXN2XMRuSciYnOfo
Wn+Nzygzr/2cyITbBi1ck+8MqIfgkmfxFGiInmORVJnDH5gc/fAwWve0fKzW
VDle4NfmqIpriDDhxst870drGXA04PFZlyfikHbgkKfLrcv84mdKruYJylDH
Wnf1ntpl/in/ZaM+NCjDnk7Nt+3jcvgOu1p29fbwwMl9v9f0NVf48kFlkVft
lOHw13K9wpTL/HvdtcuOr+UBrbr/y6ZbJ/klP9j6VbEseLZTqrlaLINvuvR8
gPc1Fhxb2Ttz248kflLJz1oHRRYsWdqy4vvYg3x5hrbxQy0WNN6INxN9z4CY
GdJRm7qkIej7+F1PmrP5o0eHrOTk86Biq+XoxVVovRyxXjs1gwKsG0aiZb+u
8HfbKN0a95QL87ZdfXZxzhV+iMp4nRptHojgf5eUyjV3f2DB3gjF+yNZ2fyL
vtWtNQUccL9/SatM8RLfpCZ4kZ0TF/JlEn/myV/kn6StzK7axwVV7xfrnpZf
4tMO+FS6iHLBo5fhcG2n7vXGOxnnT/lxoCAs7p/xLLO/Y7N8/iSLbQN1/7TP
lSZ3JB9Stag6PfH2xBti0Pna74CFmChcnRP4z/8nWI3ctzEXLHav3/5P229f
8j0fgykWjoOv6TbHGLBof8ypPAoFig6fOK2tyACbLdd8V9ZR4PHk4ozt8kzo
75H/+ulOB79b4f1U71QpCJ82efhnBTGwfdf47dtYBkSIMM/SmylwUgwyBhcg
/6lYa9Xb5d14HWBCTEcIt2pJB9+/8UmCYREDuFmGOfVqXfzyudKyDfslgKFi
cddujCI8UpJOCkV+fkGFyHAn0e/8nMlfYkb8FIeYsa4hp1MVIHf6hdrtyxng
yVsdejtUBIzke4+qNEkD9amBbelaCkio1jU4o3jlq4eS6065n/zAaos9VtZM
CLqZP9XOtIs/T31CwHZDJmRJabHiWT/4J19ElFoHMmHiuRGulIx+Ptv3x7uz
yP8fYTx5ZF5OL3/XjmfrytOY4CzZMhg+SwQqzb/J9d1Sh52e50fuzeNAtCqD
HriKAS0jNUqaysVA0mzd+J97mWDp+P15ytJB/rk5vI+LY5kwbILaypmDA/xM
vQV7jqL/3/NtMe2U0yB/v537zrzDTDAQVwpu9hMBd2+fBX7+yN/kLHxtFyoB
dzJDZO/HMeH5pzS5iWFi8KHy2wfzPQyY4NBofXSNJAyfevlyOZqXbmLsxIch
ovApCCTCkT9a1JJbrrBSFCL3lmcrbmVCiaWZtUmYOLCTJoyu3YPm5QOrxW/2
iEHg46lvAmYywSiz6JLXZCmounb+aNdtdZAreqSu+3IYqL483nMmkwELFkXG
9bRJwdLwc+dVUHzB6bn1M26FBCiYZIbv2s4E8dqLw+aCOETPzNC43a8Oj+13
Hn3qW8oPC3zWMPI4AwKvyUzdaywFyj6v+HpIn+oWm4I1m8Xh186dM3NR/DUt
e/Mpl7GS8EbJQqJrIRPyFLctC1wsCam7xzLHspgwehg72b5IGjLCrAaLKtSB
snbG9j18VYjeY9W3ZRaKF5rYnG3tkvBae6mtL3o/4SUHZdoaVOGk7OKHNWj+
ti6x1lnnKQ1KTJUYUfR+t0s8nXAA9e/46iQXbVMm9KydtyDoqBQE556TvauD
+uPiZ/ftg8heicjcqchfuBqgct7VTBrcfhjfvtyqDvYSNIPV0dX8yrFFtW/R
/IiZybfuRfptPN6Su0OCCVLM1M4PMerwobRIOlAMrbsd50qu31QH96YDC1ai
+WBedSNu7w91EMyPs5YaJbEUGajSUlZYKoP8eZ0v5xY/lAZP4zv6jm/UIVZ3
yTTmrWZ+6OdvSZvQ/kBd7+4X706BcPl9+xqQP0hNlknfeZECh0OO3WlAz3M4
Se0UZ1GgeufLE1mX1cGrZ05D4XAViDGcmWCC1mNXVY1nXmnqUL7i8BaVOXTw
en2n+n64OtDmyzBumLbxI8olB8d3qoPujpkGe5F+Sa8WfwiMooAJ7J9fPMCA
YdV5Mpk7KfBk1D5du7sMEOz3Bxb+UHJH/qTNp7lSk1Mo0Hvo1+Seh2g/8912
6ms3BS5drKdWov7x/0R7PzeCguLtBYGL0d+ff84MeUKjwi3xD8mXUDt/y7E3
q8WpUOg+OCP+AgO2SXw0d6mmgNaqHBW/rt/fX3e3qZxPgdnuX8Vkyxmwe/3c
G0VSVJAu3W+8GbWXGKb5RspR4eNY64v3UHtKfKxhjCLyl7Ou1nDixGD+pshW
uQ3qIBbK3d59GelLm96jXkgBBYVrOduRvyrKPLnR1oECG5hrbaxeMiD+akbJ
I7S+dbnd0dyD3o9VU6HG9i0UYK8cfO3dxIDDIk+lc5SooNFSV55cy4C9P0UX
FMlSYXv1uXjVWwxostILO8CgwtdfJ6Kzuxnw6cenKVZxFEgDbyUf5G8nnaKe
GB9DgQnVE2w93zHALEjFkLmfAhkJqRkLPzLAMI3hFH6QAqe+n7gdhMbjJdfx
omnaSN+3zbEtaH5+1rWbs1icAovpoot+798+HpKp55wo4GjLY1aIMCC1rrV+
DopH9HSS/Krnofl4+1h3HHo/+2dPlaN8oaOZe+7UMtT/cb39HTV27/lNB79Z
5WWrw7xO6YUmv+jgPHrP2wIUTwxTjxnBMGCAyr0Zu0+eoYDiraLKZnEG7Cyc
n/EMxR89fQWUK3MZMPNEsfyPTRSojBkUG/aWPjQ+uk8V3FFuo8PLbfaOS35Q
YK9exyLTTjoE3lo5owTFA2/0NqhubaHDm3GKkbdR/31z8Y46hPp3Q7arTeF3
adAV/XLRG8U7Ui8nvtzaKQVHxw+znBeN9u9rYv4u+yUh2MbbyfiyFDT96FIL
foniG0fnl2kJDDCmzIx74CcJO0oHwkWny0DhzOasqSjeWnE1derjDQy4dDMi
j5EhAbdeWnwZg+IdBYt86pOX0iB1ZOHiqKUMuBGXtd23RAy0j4aZt6H5s8dt
30gu8mdypE++5VQy4NewZVcsl0rDhBGHdGd6M6DHjVPM2SECHUqu1XpbZEBD
qyfP7CEFHnV6Xj95hAFFw1T19PWkYHPF6zQt9P4qdnQN9HyWgvX5bt1lbgw4
dETa1HaTCAwqHD00X18axk10zV7EocCmh2v0coIY0OEzOibuogQYPI8t7NzE
AMt18+yuvuzn71Eo9d37QhLGTfj14aKxEtDPP4ibhPYnLf3WX0UV4pDlqbrd
4IM0mJRfM+LMp8KZpbuHTUH+q+SsAulDWl38+FUiAWHjJWHZkcCo8iRF6PVe
ElEeJgM7g02uPEDx3YKRPnqHWBLw0/1zz11nBbhbfzV/9kxpCNdcc4C1nwol
jjpOkrrSMD/W+7DsMSqM/pUoMvO6DPz65x8aLxTb8sD5DHiTkt6zuUgUyn9F
fSwMkYF3nbExFmh+B3BeZ7PXSENX+3Nl1ygqTHeeNvzZWikwztW9d+m1GCw9
edBhZpsCFIYP2/F9lyokNNmXhIWg/kr42nBq+iA/0laq/auRNGxX/GbohebD
5+RWnSd+UvCS35d+gkKDcOfMSeEG4pD/2HjLz1o5uGi0yqZyjziUujoW3L4g
Dxd1rk3/kMIAdTURLZZqL/9ogZI345UkPHgW5PGDoQSZXob3+pUkYB6zZdOl
c5JgthnsWndJQNxKz+W2nZKw++gX5Q8/xCBlX/rZWEd5OP523cYu5M8cs5/g
5CL2nf95U3XU6xMScHgrz3BppwKcu5XXNfkAGn/jbbukmL183sApzu5JkvC1
9JOUfJYiiC3+tWvRNgmoia6oaf0pCXURSQH70sThm0GfbDlVBpaXq465KSMO
Bnb+kSbKcuA6P3GbX7w4nM2Rc1I9Jw82FQePBtMk4ItSZ0HHfAUwzEhbFbJM
HIoqa3YOBEnDOv0t/HwpcVjmIzlrZrcMbPjw4LKSmzjsGv7oh9s2WXj7YMUr
yYZW/oCo/Mctz9TBiHdW9+nzT9iv04DMkimpGpta+D2Nyo1JJeqgJZYu/fRu
29D/T+4fYW5u/qetFvVt5qaNbfxyi/Nib3rUYYeWUfST/WIg+H/3BRE1CYli
8Gn/M9MUtH8Gb5gZoof8FHvOgMm9H2qQbWcw50eMGDgcqnsyolkN7t6JTHL6
fY7qRZd8pq8GSW5rcnKGK8Dx9So0yT5VuGaa71ZnSweNfsVBRrYq6B406nBu
kIWMnBXKk6rVwdnt262yEDm4mstK3qauDtGFuyodW1hgoaPoPCCrBg4Hd81j
6MjB2FoV/fn+6nB12qr9cy7Jwb51B5okm9Rg94U03vfDskP6u5g/ehT4UhaO
3TQ+yCxSB6s9u0/UXGFCa3tM3h0JNTj2wCDv7VYG6Fcciy+9pQo/KnU9c1Wo
cE1lsOA18rvCJnxop12kAV2j86ZdsSpUTR7vexOth+MmNkVlH0DtyMhDOwKo
YCpxV0RGEem7Myx4D9r3BM+fWyOtyLGgQs6hAKU3PurwmWu1UNGeBUa3v9pG
89Rgiw4j8W4MFWTXc6f21KnB16PHDNse00GF5Zr6uE8dTmvKbZi0gA7Nkp6P
Tn1VQ+NoTolpGvLvjW8lRompQ2Wu4klNtL9rH9CMb7JThysr8r6oWtChtoKr
m7FKHbLeG41SRO2O+olZXWvVYd007pMRU+hgJr1v2LM16hCnrRY2C7U33jIp
Z6L24irftmAu8ldcqeIrxdVgxbj+TLGldOBqJ8/0r1GDT9nrfrq9V4ePPXJh
V6rr+Fm9N1+wkT+SHLRu3bkBdXiTwa3TlWOCTt6lq15dasCwGfdKRpoJs76k
dzrMQP7Nnis8eK4OSz7GjQi/+IYvFfr90M4XdLweqYMo9r8E/SdCtPvyjVM6
jZG/Mdj+Uh3puyfqW5o5nwGK61NOV5qrg0aS6mSzBwzI6Dwz7f5qdXBcd7NG
az1an8/bMpNN1aEl6/uL+SkCP0/wTwOSFU4YdTxIG5oXEzf+ZCkeLOW/Cs2t
qBiP7LucO/lcjxocjZm+ZV4Uir8Ku+R1HdWBy6dbqnSgft8xOXpabynf6qB3
aXaDOqhMmOo9e+Axf3G6jIsb8vfipiomBFSqQXcVzOCuYsG1zgaDTvR7Kk82
723PYMG8RFHXkVOQn/5g63WoR/P67q8ztCo0PhT1vg9q/7F/98nEY4vs/7RT
J/+YnbvxT3tctSSlAL13C6kRMrXe/19R3x1Phf/9b0T2vdx7cbkj2RKyVTih
okhklIgyKiqjVJJkZMvISBKiRZJKZSUjyohIUUJRJNkjWd/T7/F7vD9/9The
67zO65zneT65gnxXQl6I9JAJHuwGe57h19tz9LbnHGbAxR5xn5j/4rAGZPy6
IirPM2Hf9wNze/oYUH2jvl//DBPqKmUXe0f/N89ONfmWFd4jK83ibq3n/75+
pMK8InS2TT+p3iY5uZEJwettTakdw//FM2ahkMOgvFM/1FA2wKaCCdInJrNX
BXbrP0hpD195iXxaZVdQ8+I3fX3ejt3qOG6dnRV0OYsOp8vO3uitZsKvlxSm
jy8DxDL5c563MqHyumSehTbmY8IHJa4TTCitloW/TkxQe2uYw9eEddPnyFFa
Mqjf+cVQ4tpt5M27fnoQz4/ov7Ip9K7HuAaYNw16HxvRz72YNWmH91V2mV7s
TRzRX5A7uYHZxYTumapTxwKosP6XlGIB+uNQfGVSxYcGdhoZK6WfmCA5mcHx
8rso7Ir1XHqK+qagc+NrtkYcDxvudkU9NBcsGOPCTYciy4+UvYhrXWRljkq8
D+v/j8d1EdfhedVR/TNBJ27WfMF7uWpGd/wd0Qd3vYfy7xjwibb92M874/rB
hk9bf5Yz4X3PrPGGJTEQlTulvxfH2WIkN73KG9enzGuY7FVhgvJ3++kmlin9
yg336cGhTOhJo393TKKCXy+v5WgPE/Yn0Oyq26b1Vx+Saah4jjx77QWKU7w4
fGsW4yRjvDhfnOTiMBKHCatC4fBaJmidq2CXwft21slH+eJ6nsAYbh/luf/e
0y+gYXhGYUa/f6XkkoMSE67ft6i4e2Za3y2ubFtCH77XuW0rIzYz+uSxsN+l
GO8S50pPF7Zp/f15Z2+w436ilc1lQ8Vz+iuy73PFUU8JXutKu3B1Xt9HYbq2
/C4TlNR7c6Z3i8EjicHJ12hLLJu0R4qIAXOPMcP+AhXeHrjKbdZIB9oOEb0N
GH/m4dtSOgVisGxibev4jQkb33muoVL+6ldbkeitP5igHcPlelhgUd9ijc+5
p4NM4HNc2sBxalG/yYfzglU/E0zFbU5zOC3rn33t/2CGVxRG3yuHUPUZIB2j
l1F/SwSCnB58CylnwKqX2qY3bJng5P7uaZgbFbQIlLc5qFs4V+98uN6KCtW/
jyQaDzLg2t1XzVGWVFhjnt4+ifvH0zPKEtqX9d96ZF7RwPNzDVqcJQ6zwKxJ
zMNfaKenm7ZIp7HAmw7CD4F5zJ+xxUt3n4jADcqNeS3UfYf8aH79+qLAYvgr
7ckYxvv5Vr5RU9H/6u+NU4X25X5RyFkWsG37yQR29c3jM02iYPa9JTFlAOuB
/6lTcAIrZFHqdMvQTm40j+l/zQpPhA5fdPnnz2uWrvQ6Njil/lCrA21Shrm5
9h82EDi6YjWM80fsG8c8Jtjhh1k3D6OHBPoH9xdGE4mw8DtJaqaFCfPSiprp
EcJgsjOyxPUt4l10whf9YWFQ6LyzXI/1YCB+80jUGhG4F/pu9eY3TDC+Fj+d
fV4EEh93vFqF/ST+7XjlpOwqmCxTd6/GejkacmkPm40w+F1ds04K86l9X2nC
F1sOsLyVwxBFvX+Q8KtyE9o+Pyy5iNino06LHPGeoMCup/IcAQ+YcP7Lx3AG
OwWK8i/Fr0H7uZu6zLIdBZI/Ghx5g/Np2TkCxo8o0HRf/qnzMhM6XeObe0KF
4arSToncXiaE5XGd+y7MAewPlYtW43m/b+Zt9wlbDb9lzl+twvfcHv7LPHAX
JxCjWSc2Y3y8aKvdHMM5wVy1fKkW50u4pM49eboaWqqzePrrmfDu77XkE1Vk
aNAQfm6FtsHz8b/BoWQIXa/36uF9JrwV0A0ltJHAuj8jO7mACT4ZgkS3dWT4
1D/f8WAEcVj2d2bIKDf8upktScbz4hU3xBY/4IKnblPwrx//2R3HcvcHF9Rv
2ywPuH5cNTbfPBf7+o0kSvVvJsTtiDNQo/DAOjtNgcY67L/3xf2foC4kfy5z
VylEnrAp3KlhQQjeWxU6abxmQp7rgYUB1Gk8eSwK7Ih3E2tNtTNFeECrxncn
E++v5dtexsfHC4fPfnq/Dc93cls0m9nKC8yzGg66nzG+8ab2Umf4IIL1gmPu
OBPsWvk+rDrFB1Rvtw8lmA87T7s4PGoQBJfP6ZkNj7FfhJ0I120SBMuckamf
+D6BpnwnG6SFoLqD+y8f+nNeu3Pm0iEheKHZfiizE+P9bC3HkiwfcNWMGlzD
eDwS0CrhOcEPJ642vFnEeu/dUNRXl8sPb1Z9UfmB972Qbq7czk6Es8p09u0T
TJiuJOmNPxGACxwJK5ewf4sbf1i+0CYAHd5hx9MRbzNntKyOoh57X+Zotgb7
0+aEnS6V6UTo7egNuIL96MfVm39hmggCMlGlV9Ffa2nTo9pqgiB7WttRBf19
ysY60RkvCIcHVrY9Qd65e/na49YuAZDI5IghIF5lJuj8fBdDAHpHq3UL1suj
HuPD764RQe7a2r2ni8lQkNU/9ySQCbembItPtZPB7Z3tQfMbTFhrFit0coIM
TLamhn99IfN2tac3gQJdqqAe+i/uybeyVm2kgITgiu1QABMih89uddGmQBWP
ys3x60yY1TcdrtGkwMFVB0f+lCGuJDPjJDUowLqcoMmK67eZSqX5vyKDmWif
K/sUA0LqqrdG0SigGjY5NrID+T8bLbrqFhne5KwPFp1mQIXjlE5WNhluu2oG
McyR/zqe3SvzQxw8RJvnWU7TIePxK7X7QIEPHrqGY8sM5L2TtPDNFNgmluDM
sYsJHzYZH3qPfPNkMjv/HPo7qRLoXalDhv1MqR71TCbG9+nFPDsyGN4zKvTB
d1AQ/x2X7E8GRTXXiw+xbwwfg3z7TDJYMwaBPYgJRmKsqf0ZZDgqmprpl82E
G/VVwe7XyRAgtH15DPXQn1PBJyaukSGBb87eDftEaoeD1Yw/6T8cfTagqeKd
/j/74xSB73fp/+w5tp+DRz79zxYRqq4ZmP+ffVCyb29BOAlslq0enr6EeqPe
3m1fAQneknbLvc9ngrxH10mOdhJsld+ZtaEN+xDBJqjoDwkq9LaJxqH+2vU2
IdcJ+ZVw8oNpUdQL/N9OcOj30qF268LCr3tMMGx3M8nWYMDTQP70lXgmDCk+
jipJp8PF4RA7Qazj3wv9kQNJwmDRsme4DfXZyYldWo9wXC6w01kOeaAt3Zpz
u4cwjE/GqlalIX8+6KZ377AwSLyu2xKPdVzEJbnx6APh/+6TGPe1aWmGAiWt
z8zFUX8cILp8mTQVBnhuxFuNfP7XhhC247jfj7Tzv3JTECeUahd4jwiDTF3p
oXPIg12z3X/cPCkM7YYO0uHDDNC7L31YzVMYVqkMBgZvZ8Kzwodv7n6iAPs7
9QaZX5hv6+9pvf9AAZGQU9vztJjwcrf6NzpJDM5WKj0zlmaAxJ8/n90Rx7tW
a/cJRTGBN5V3W1EUBVrTQhQ6MZ+nNRgP50op8Hpdy6kMxD2ZCrMW51X/uw//
jd1u9u0UaB7V+zuOfDeJrzQstZUCiSZWslueIA74S95pa0Y+nnvUKuEXxmM+
ufyZDgWqX686nRPChI4zXNNZWhTYdOTw4UB8z/mZc+uisH6erG7Yu7+dCfRT
vw+dVKPA+juKO7QWmBAwtju1eiflv/M32fdx/nSjw/Aw//Nh5Mksv54/TaLR
/xsvfOAjHDUtDtwiDvd9o5lw5ts1+zIFEcgI8fx+MA77JmMLO/uoyH/zeTff
8xr0FIG9S792aG7E+qEmz0SI0iAzT8v0lxvWQxZ9/nu6CHhOK55RxPyXMSkT
OpyFfbjLtJ53G+JYVJcaP48IuBjFrrsgiLil7ujdVy0MqeV3U2JwvsWsndrE
jv+dx/bI+PvHDmFgP7h4xxH1VcTC48EsDhGgPKt76H0O73OIVFDBKgITch8/
PESdV9iU96oV+3KUVa3x3gjk4W9fhm8xFoYrTzZ9JWD9lsixRUo/ZsCt0wPr
HnNO6W+YiRFIqRCHlJT05EvYN37yZHZzvhWHxpLor19xv072jvpta2mw0Sbs
ZAoN6+eWatqCAQ3OHmlg397MgK/XC611nov/56+WrPP1swbU/+w0gy5RzhYx
6Ius8Rg+grxn7oSfT5sovCmS2vIA623rF32Nis2ikPXhhsMm1NeF/Gu82FP+
x7MCh74o/e7BePkdm96D9w+g3e30eysKL4Zix7jRHvs68OiKpij8MDCqlkfd
wVd3vdQd51t02OTmv2fA8qvdO5+9EoOmR1TXMazfJC71UZbXYv/t/2lXqhZv
jhhwLl1iHu1kgG7u55omJTG4/eWn0/bNDFiRIAfv/0aFlCr7jD8YP3/+eZsI
TyrIvClU+4X4mj9Xzn4oSwysrS6EKrQx4MKLnaaXx/93f8VnI993VlOBo1LR
6j7qw5a/o3r7MT7iiXNele0M4Ngev63jCwlk5nndzASIULhFeZd1MeLVoXVr
3z8kAIk2M528TALuPN8PveoE2KC6xJZ5mwS3Mu9MV5cRYDf7qiMuiIdzN59/
LtMmwMYbUXRlxFOZzYRbm54TwDPv8MWjuD7y2ofBOyIEmL9hu/WkOhns7hxu
55ElgJmd+DEuEhn7VNW+IwoCEPHz1lk2RTKQlSZefJcgwGFG2YDmWjLUaGgW
XRMnQPbyn2jQI8MfT85+m/UEmD2aYvlgG/ajqBbaOVUC7Cnt/vHv51Vsl9+p
xa0RAHGXDbHX6WSYXOHjUVQTgP4NWexeTDJQcor0gmkC4Pir3OLIOTL81tE6
cHeLAFyd3+Z0FPe/Ry/qsLYTgCmdXSvx//6fQ9acQTUnAZDSZH99VI0M7Hw9
wqHWArBVOvg9fR/6oxG55YOLABzivmJfdhT3Oyev+MFdANhlZidiUA8dfsXq
O4H6LvrulpkXiPegdzN1T8yIvvcou3r/WwZo7dUmv0ka0U/1H62Oxfkjy8cf
3sb5pRKLCa6Y5+y35QZTvFBfZHur3zehQUl3re0+TQaYcsz82qtHg0/3fS2I
6QzIabxd6yJOg8P6ehszu+hw8+np686cNMj/kdp+HPVo5acjNrREMeg/cogc
8pIBnY/7AlO/UmFn9qq7KzwMkI9K2NfwWRSe1ZCceaIZQL0amH7fVRT8N3gY
Wzsy4HHG76fxBSJgkj59wUKSATH5lTovpKmg8lxnoOUOHZyiIwSnjERhb7OD
wXFzBlDsOR4NCovAsbshjglEBgxcUtv0LlIE7G0VZSVKGLAzv7h3KBD7UWx7
oRwHAxrOEh1jCKiDKnWT668zQJLsqJnzThg+JF8+n5XKAIGMb9J6cSJwpKVs
OU6CAc4dyxE0P2F49Lp7bV0w6re2thtfZYXhsG3cR8YlBiw8PZCl/EMY3mQ8
004kMKAoJoJ0Nx/5gPtzHVm8n1Lpy2qJPgpw5ASxaEcwYPzw8pk7qRTgqmUX
2xmL/WleaivbVmE41tza9wT9Y12vOZVHwPx91R2tn8CAM3sVOzW3UYBv7PFi
C/prdPdXwFYuCjwOGrSWv4q6fft45eliCkwom6QbCzBAvILfjOc0CQaXlzq3
4vkTCW75fxgUeEp5YreA8Rn2kmrXPUiGtbm6Zl54flBTqcvTbiEo5XwcmHGe
AeQz/fGDXmT4bjL3IHuZDqR75W/ePSZBdJimc6E/A4aIwdlbyILQd/XQZmkv
GqRo2T3/IkiCY0uqknGnGOBpINWoi/zkuMIbrp4PqKf/aj9JyRQCN8N3k7sz
GKC8uumuqyIJ8oWaLRrz6ZAluHTSxUwIFE8d6npcSAfHpn13HR2E4O3+n/lK
BXQ4t0Y3Yku5IPQvv5j6WUqHnAMp3wmlRJjlb1/7BuO5tDt0LH2OCPRXG+XD
tzJgxiJMdsZaEIKb/YSPjdMBCllrm1cJwn67cq1kHcyXjMYL+VM8EH5qyq0Z
+8REjrDowUBe8OVYSrtuyYBt1udHuWz5oCU3wcwb8/v3rg82bXq8IEO87BVz
Bs/LWH+7JooPkphyx5Ir6dCWWzdEruaF4jgzG27kE0OWa/ul7rJB1mYBT8It
Bvifd76yrYkNaCC0j9OGAYOXKUtx3WxgzZYi9RX9SQ9k2DxjskPdwm/WoVdY
T4pxu/4+xzxzXVtteW9S/2lH6AH5cHa4s+ujRd0uOhjXecc5OXCCYfWbCKnr
ghDS4b/x+RlO6L8/diHQUhCK5ARMo85zQmNuzkH7QUH41mf1wj+eExI6BgR2
yQlB4Ikn1qxqDHj11UhFx50K8Pdb5eF9yOvSLDw22FBBZH2qxMVGOvzcy702
4gAVBI9KadqmUKF54nJQvy0N6v8s3mnrJ8G6rbyPGxSIsNb7wLbkQRLUHdht
rahIhICflQO2v0hw6GzyXOx6IqS8q3jaQBKFVmfPKM7jdDgkUxaqryECCqFX
2LQwKqELIjFVL0mwzdJhbb8cEdQKDXwu/rN/Jup2ixKBmyaW8q6SBPE3Ge8o
IkQQ+e6V0o7jr08uHkkkE+HRrRBZySoS9KaWUjLWEuFUxIGfzdUkuJ30ZtKH
QYT7o4Pt19eToEZGoGBaiwgXkm7ki6Le8XNtnyYZ0mE0vtZvSI0EP7ZdEH5m
TITr1vr1k3+EYPT3g+ArOkQ42e7b/34DCaqGWJ4e1CdC23PPyQW0+3vf2qvo
EmHpdij7PgUSuHywOPbchAjz5+hLsvNCsNw0KnnSHvWcxeKHURy3mdjv4Ifr
w8+termZjwSuxoKrDzkRofygg/7ymBAYBNdf5bVBffirR+fOdyGwFPtUuGRK
hG3N+9J2jAjBz337PloZEsHe4yCk8ZBARSvJOxfXzzpbJN17RYCkivWbi4po
cPLrPn3PKGFwe6xtv2kf1oustSYDzytY/eK3F87fkr8+YkqPBBOGfb0zMURg
/ft0y99tJBiSMnK8EkKEX4Yh98bWkGDx3CXJPReJ0Lgo+/2lBAlaXvouhJzE
+J+tuL0YQQJJfoc5E/TveUaQZKU0Cd7HvfzIGkuEeFJ6nqQ7CTwHC2oSLYnQ
HHOVl9uQBLMsGXUlx4gwY7vE9hrxqUC2b+wHxpvz+dwXBzMSFHdl3cpzwXiy
RSUQD5HAT6enbxDnJ/oPPHA7SoKHG/nEUg4QgW02JuxSAAmIa+6vatpJBJ2X
34+/9kC9M3NpZI8rEcyNfeMJ8SSQO3jj5JcdRDD6uqH6DfIF3jvmGrrbiFAW
0khvQ731OI8/4ybmC3PIYE/+GxI4Sg/OiGD+Dp660J/bSIKRXOs/kWhf6ix+
FdmJfIU79dAuOhG0vvS3V6IdpVFvHrqGCDtO0dhVuMjw633L1RYKEdiH6rml
u0gwtkMv+qUEEdrruN5tHiDB/bw0T2d+PI9DxpOI41bUfptGDiIoHtjxwuAz
CZbc/951YxKhoWDSoQNtx1nBq2y4nn2lL9RyiASJlm83G2A9dDvsdw9CO199
n/MBtBOlk+Z3I38Z1TjOfmmFAJ/CVe5clyJDlbSuTuoqrM/hJqshGTJEP6wZ
9+DGfDn4vMYA18+pbH0njestf1DMArGeDRLCvDSxnlKHXyqumiLBTaM5RWk+
Irzwldh4ioMMXFXxhwlsROiUZK+w+UmCvxcPNUSQiLDpdK7qfax/D5oZj4YQ
EfSv/Uj9hvUv9XhYPxLHo0Y8Eyd/k2DDdrUgVTF8/5TbVUcwXg53etmdcf+r
jXfZVw2JQlj367NKCXR4Smx55pZBh8F2hmPWESpIiUxqv+elg9SpbqaeBxV0
nSID5HTocFr9c5r7QSr0bL25oeQ2DUQMs2WNDlOBkbzWa1+JCPwqPaRiak+H
uhiixXCrMLyK+8z3xY4O9qL3ddU3CIOwSkVAiiUdTt0rIhmJksHE1zJ9LSfi
h8FEeYU2GQ7Fm1iXriZC/w+pNUMYX5mgDy4xiwTQVxx3DMB4/vV/ZF+G8b7m
XZYppECGw5u2K/iyEuGdTZUApyQFrnF675Fb5Iedzme2c19jhyTxqnWxG5Af
Sce1KGusgkcpShWN12nQQZDbf6WSHXas+/GGxE+H27SRlZMDq+BTKHu1gRYN
uv32Gjle5wdIleU5sZ0ODyt3OgTY8MNiUq1sgzMduCODr6jZCICEddjlxdV0
kK2NzOdhEmBdbVdT91saKOtOKs7FCIAuW/KLG39pwO1ovnCdUwA++fV43pKk
Q8Z++b2b8F3Pl90IDsmmAZXD2PHnacThUZ+fnwNoYOFCGPRpFYLbcKLkUDId
NhcaPgAXIciMlT7HGUwD7x5z2ZFZIQgi7v15NIkGJ8qOnnXbh/o2Tr7m8UE6
VJcrx3LZCcGGy8ai74No4PDr7SplGVyv55NWc4YGk3y8Vm2XOOHXx90V1eVC
8Py2n1tjOCe0+nechwgh6MldNU09ywlrKuOM5xgkeEE3zejz5oRMwU+NWyxI
sHab3lQG8m3PhZwuQx46lMptiByVJcPC7vHeExjPCd2/kk83k6Fy/8p4Xps4
CKUq3JuWIcGVU+MpIvdoEBbcHmARRwL6pjr66/eo+0Jen+zNpIDP5N1ud8TP
wBvXHla9JANE6ck+0qSD4PvhwiktMszfnTR/IoT5RbFisVgrAuff7Zh8a4V8
JljpfeFhEYjed1XGHteTVQRNkyYpsEBvSvDeQ4fz6jdX05pFAWpZdRpi6SA0
32AnYoF6cFKvO92LDls+8txjmReHpkFbFqVgKoj279aYtRYH97WXFd/8poHN
az12BylxSN3Nf970M+YPm/sAR6A4vDk7EHiDjw6XwPfFZX0x+Pl27M/wWRp0
Klie66oSgwmh8B5tvO+hjnWuGTMkmG4NeKaDeOVpq6X2VoQMxbKF9KQPBHBd
unA2mUqGiyW7pCfPEJBf8hdFiJPBaU97UgHi143R0zaPUf/47onyaV8gwFmL
Q8VTf0jg/OBbaiXildvtW6PnZ0kwf6vWoBDx1WphSJZzmgRxGbd/35DE/rNb
8WDcBAmkkyOuXpbCflsTed8D3yvd8u5p4wACqFF8GJroT1Wp7qGL0wQI6tr1
//xTetyxTn6MAE20tC0IVCC87rDg70cEEDBxuKeB9Sq9nzB7u4AAFr4Sggs6
ZFCPfvbJ6S4BrNicX95C/88mBv1Z1UOAG3kempVY77d/qZzeO0iAxGdWRy7j
fUcM/ipL9xNA2bipfVCMDGb6EneW+vD+/mLdaYZksBeaz2g6RgCbm47acSZk
uLTvZFeNMwHCcqJDJpTJkNEg1WwYQYBNf0rqPHA/o9LLuWofUS/KH489Lof6
Uu12NvcFAgzdSTy6okKGaW7XuarIf5+fMttSiucdfc5N7+kmwPjuH/bH5cnw
+onuTY1vBLDbyyN9Zx0ZHlfzFez5SYBaR6XffevJcKP18zPvcQKE3hPUTd1J
ho18Ti6FTgToI7/WuITrrxf1+Hjieb36tifqMV9DZCOo65IIsCtd45YexuvO
gKzMe7RpHgQvcyBDYu0UsdeGAGmvOfv+fV7UoeLXTjLery37tdPDTWTghrsG
bYgTuxNLDqzdSgYWczZquDEBNINeXUjH+bTEoNPZhwgwc2vNR1a0nadaQ0qN
CCBznG5ovgPvY6kaEe1LgLjhkt+1OM4msvCF24UAFa0tflPmZDgxNWKmhO8f
VX3we7AtGQac3gXlnMb4zEoen7IhA++btZpDxwlwnk85Ytt+MrxLbbx58CQB
yPKVB6RUKfDp4jmWeZIArLsvRyz1J0OEtkLE3F4B+HrigXEI2h+flNqGbhAA
GG6p+xJIBqm9Qr8ZDAEYfKu8K/gyGYb8bikJEwRApo+buvsRGYIEP7XebuCH
bs986oUMMhy3PD8YNswPu/6aVWfEo7+jQmrlqwTAeMOVCrlsMoRnBPUe6OeH
APuzErOfMF+sLtSuX+IHVomvJ4+WkeF+t22Rfxs/7N/3ZT6hkQyTYxuDPXHc
RXGt8CCDDFr1cVu6kA9IPFLVf439Zr1yyLNP2H96tAyP3MN+I5l6en039m/D
Wcm1R9EW0yqVksT3d9inUOKF+RVveDK37Q8BzpSr7D6L/YhdTlioioUIx+sK
5aU2oH8Dx4VTvxMga//6NAbmn+UfoUbjXwRoH8/jomL+0vmeB/7F/bSPmQSM
4f6hznY8534TQPieWrMG7qdntdDShfU39Z1OP4/598foerLOJAHExKK8Tqhi
flonUzN/ECCW4Drerk4GCfdAMz6cz8oBXjqYf3EXjgb5zWH+xYk+Dt5IhiRv
2RHFYQLExKq67MN6/RqYdJp7ggAN0aYUFcxP5cusrD9w/lOP98sLpmS4rDCb
oxNFgImhJ73Gu5FviYq0Hk0hQLiI+QifExkIViv6SZcJ8PfIM0ELrPeGnVIn
+rsIUF5OPCyij/Uh/CX/ZAcBVL4nqQgYkcH1Svc9mxYC5PJT/67CfEwgdt/R
eUOAYnNGuCjaxbELpQPRBBDdup+tdRvyJ0q7/LlrBDjuG7SOC/eTig1g43pM
gJC4WmMRAzLwz0otHsgjwNV7q91ksD5mDzTNFGfjeVrPusv+4emFF4TP+H7K
f8aD/PB9Q8v6cjmIRGBJnXB6hHxNiVhxfxfia6vGpP4vjH+nS9qTVB4iPLSw
XZpDvIrX2/cgB/VP8JLzw7t4v0kj8+k/gsinalX39+L75xltqFEQxv2dJo3W
oH2hsKAnDfc/slCkdBDx1VJM4S8XL+YTc7HrK/K1MbtAlUOIz19e/lo1PkyC
tH3yCycQn78c/Ky8jHzNcG/7K3/EZ/7VOqwX8f3DT/u7T+L+Rf4f1Qbw/bPK
lhkOyO+sx33djDG/nrMEt9cTkJ/GBir43SKB0zGlZxNABJ4TAuqXHuB54VfS
x9BWCN6Tpoh6LaRtZm/3RtRnPFXzs65kWKk9PKQpQ4T9WR8/PEN+utn6i4CI
F/LV1y5Hg1GflNXxC7f4EuGs1KMjDHvs1ywB1bJHiCAppLSbrYAE13SzZjcE
EKHromKb8UMSKKzdWnge7diqPemLGM/aG5O1AdifWtpuLQeokeHK2OhRbrx/
iJnnlSn0/8velzbKGM+9eqT4wxokeOe7qMQZR4SfhlMrUmYUKLiY9ilcQwBG
Ff3+2iyQYfxz95/JWX5g6zMJ57WiwMq7jmqXjQKgWv9mKjiRDHLvL2d06RHB
32Nx5scozm9AesEuANY7W2WSJSiYbwUP9v/lB8O/pK8y1mTwMpHgS8H69Da4
DpOIfwpmVSXiyDcbvP1Hfm7ngLen9ovXrKbByEOLozEpnPDE+/1tmVPi8PEv
3bxLkBN8Cia+J9wVh1OyEWn9eO/vYS/mbvrTIPEqOYXlDifYaLd5z6COitx6
o1/7AyfkJ66JPe+HcT7O8jlo02roqVT95K0rDjIP8jiKvVdDSIOn6ods1D2R
o+rdJC7w4dlT8X6EhLjw1/AcGxd8+pxw9d/nmA8OUt/tlOaG70KjxCB3xK3X
d+ePKHMBgX1nDtscCZ5srlJ3KOMCuvjGLZ4aZNDYJvd8LcbrvNnlMW9jAWBh
KTwyE0iD7Ju6M19OUuGwUHu5X7MIOB+/5m2zhQZWLLZrNwjS4N7ITGLGeSqo
qeR7lPmLA+FHxcWBaCrUpFYKF3mKg+UFexfdy1SQDKLM57iJAl/Ax9u8+jQo
aqjN9JIWA2f79thibxpM1fik8K4XAy/Dj5K2PjRwd3rcNulJBa03LWfUrWnQ
uqHCYduKKFiOyI1HGdHAw8vVaLBOFGq6H3x12EqDr4v5IYnyohCuOtBlh/69
r4i6vfq6MBzw4b76YDcNFJ8IyWbGi8AdeLX0G8e3RQux880LQ+2Pe8ekcL/c
fAemjKsw+LFZZgeZ0ECsfmJo6j0ZBIRkX/xcEIfKdw/nylYJg3bbSXrQRhqI
Ek5FGlRQwCqxt2G1Dg0EaXxPTywi3knycJXx02DWYU5E5BgFxlNkCmo20yBr
y0rPUx8y/GZ/aLi2XxxOHzxHUblNAutyUrbYaXEQbuze7UIjw+b1tAinSnFY
fa/S4Q+ZBFnnImVWtMXB9vZRjcAKQfA3PDZ/wokGKXWsrVa3BYHx7v2pJkca
0EZunXVgCMKWltbxPC8a9LhEjlUFEsHH6HWbNebbB9nt9sOZJLirE6Ud20AE
e4WkwhJ/Eqg4epUZ9GP/Ejb83TyKuDRhc8LijBg0dFLvEVBv569KMjBSIsKa
gROamah/n83aNfcpE4HjoXxVP+bZ0Z6BHzXqRAifrZ5LQ3wosVvdmqJJhBGh
6aAQHOd+XHzFcR0RziiIpts3kKBxKSyxdisRfis/dTJ5T4J1puTiv5uJYPr+
xKwQ6n9B3qrRM7pEkDFXorR2k4A2oVk9bIh43PBbLbaXBDIf7yc7/Pv+QZj9
n17U696ibEMmeP4179Qj0ESCTx793/dvIsIFGTInfCMBwX0701WbCBP99Lhy
1Pu7BLI1pfWJ4ML5XZSO63dH7P4YhHjg513Q+BbPv609nDWG61sWFIPi/v08
93eaIB/ep/iz5faYIhK46HhsJG0gQkefX925chJoqvZnm6sR4a3KxJU1r0gQ
fUC+Ow3x1O2Xt/WntyTw3+c6uGhKBF12Q18HrNObZ646P2YQYcfE1tkSxPOr
JcEnpRD/bHuNzwiPkeDywrGQZMT7+qAllnAhxMejqq+96ETIE/+Rsp6M/dZD
QDdhDREuF79VfI983/b4cFERznfs2fzpA8ZbsfzZ+HMFIgj6XZU4hu+x3seT
J1OOCDWk6SOseJ6SnKzUJcRzB7Pui//+vkb+6oaLrXgfpfOKc5ux37j/aJO5
ie+bsfp+CVcnCQ7d2tJJMSFC8iOlRMkejM8Vt0cDO4mwiVeizUmSDLKfo/WX
sB8Za6Ry3MD+xl6xiZykSAS7zZfqZZpJcJ/4StHKmgihM4rdX5APlIvIXfyR
SACzrOkhc+zXRkN9MreKCeBLSDJdj/1/aNr2Z3sFATIuqD3kwX4fzdqSz1ZH
gK/8lJJmHL90fZ1SI/Ihkcnlsz+wv1/pmdMRmSfAhS/Ku6pw/x3aa8KKkD+/
Sxc0TzxEhqjhFePnhciXxfhOuiP/uf+k612JABEaTT+84Md+c1Vp43VR7MfS
qh1xG9GfgiSjq/1XCPCdNre+CfXpTu0nQjw3CFDv8XXhgB4ZnvUbF1xCfpHZ
2zu4Thf99fb34HxAgNN7etr/IB8XY3kgH476hpYlv7PhH78ieag6JBNg7ecH
NAHkU3Jiwuvk0wkgK6w+aoF8q3pNleRMFsYjaDKNhnpGoIlnjhfPP7E7wMMF
+YripdMNitcJ0JUYUGmH/k2v2rR/yxMCyF+9NB+A8ciR9vP1R3/8MmLVsjFe
ltuexRWj/lJ6GUY8jvp7ffF3jgJpIuLZ67EniC/LrPXNt7CeHVw/SDjxkiH/
2/M+MXkinCsKzJHhIoPq8VOpH/H9UpfkpH+vQv4wp7wrSYUIZePFkZ4LJNA5
uW3JT5wIJm5RpkRWMhTGPTKTxXy8SolNLF1Nhlcj3Wp7RYnwKrMOhHDc+MiR
O1sx/wwfDG2aWiLBLSMBM0C7qpxH6/2/31+XeDK5Ee187TufKxaxby34l33E
fI4N/1j9g4MMY4E399LEkH/b+Lik4X42jg/LdzKJcLO4e6vlPOLJpSnnHVTM
39f31p9cIUF9mXX2CPojb3c4KAvHh1ja/BewvqzpMlvc0f6gmPfnEe4f1DfA
oo527d5gX3eMT0FOzssl1MuPQu0mJWSJcFfGV3Q7jusrffM6gfd9OryyTQ79
U+GVpluiP2XiDnMO6L8uB/PeIo5/XbPktkcR9VXynOBrHE9gvTa0H/PtxL7B
sEn0Z0Wz3OHtQTJsC95LXoXxfdHPtu6xGfIJ0va3RYh/LoPZfTPXyPCm44/i
CuLVZKjO9AKdDJ9aykfWIx+yDQiKt0e+mdvNNKFhvQ2tV3P9zEcGnfT4FgLG
bzBDTXaESAbDQ/L2eVjf3/nVfy4iXpjJVw8Z4f1oLKv9/uL6g8yaa5OIJ7kX
X1wRRP2+/+jMuVUYj8dbHZo1cL/fob5xZpgPhRvSn4vwo15dtM9nx3zJo3fl
zKNtesqovkQV36vs8IV//UGuOFo4YC8RPoUPUC6woZ6bTeNvwfVrCuu3XkN7
cH5hjfF6xMMPeb5P0Z5bdFCvwnyaymOOSWM99WjVujGWsZ6NHvfdR75lbOVy
cQH1/o8yjaEYB7wfoVVrHPVIUFkp3xWsr5ss0TImqI+640JGM3A984LSu4hZ
1KM+R7WGsV5izzzfk456pZx/Z1qAMRnmB4J2Ki0R4NU8fRlQzzqbcfi+wPkL
H5UDS1G/iNq+JIesoF5JD3h8D/cryVmq//CKABr2lxvfYT1a+vFveoH4M0DL
7J/H/YZ30R/cqifAOmd3b9e9ZJgYfbOxrAH1UEftmXWop/njo736PxOg8BJ3
gADqobiUyAiBdgLc09gVPIH3E8wIz9LB+Uere2tGrFD/ZF5X4v1GAB6Rb/yh
OB51fb2T0gcC5HkM2Iqjvv6c9iLBAuezPGiMFMd4HNAyDckrQz1U5yVkh/X+
PVRF7wuep1+rZfQEbWPvgCM9bQR4XbXsK4D+3HdoSOxF/TTVxJK1sYMExRfr
ZOzMiNDZNXsv+iMJtNNeKY0gPp/pcT0oi/0vWNfTZCf237rLz4/9RLx3JoQ3
78F+SdHnPZuP/cXo6w0L+y2IJ8ymjqfYz/0CoDTMGfFkh41DYx0JVC2exeie
xXx4F6ZEKvz3+82vgremod5t2ay3fJcE/D5WHrXBRLhlwoA7P0jAFaI04IP6
IShZ//sX1AcP9+r9CLtBhAfHuEY3Yn8S1dnIGhaF/cdRLef2BAni1HVeuPsR
8d8nOTfD0b+tTcrUV8hn7jy/1ldMQn31mNlbQoTy7Ja8p8hv9GRiyOPf8Lzr
L3Z9w/hKv8j00cJ428ZITr92JANbqeUurk7E422xkx34XgfvsS5oor7N7Cyw
O4Lx10lq3arKSgSVeKYhxQz1jN+P1c36gvDTczBowz68r0vYIrsa8rK9XnLP
PEkgW/uq/AQXjnfEFuscJwGDeElEUFQQbLZNp9kYkqBIzPyi/gFB4L7+ZKER
bQObgk1/IwShNXzl6foACrjbDDxxWxCAAd4Da3UuUcCccPaCugXmrwzlxoHT
FHjpcqdZ4bUAeDg4C1+YEIN9n/2DBm9RYTq3USV9SARcr19SYqqKwdm9fC/W
jYsAOZXMN6IiBsfV3gmkCovCj+q2mi/yYtDOH3HA2VwEVGTcfVeUxaBi5P4p
MXtu2KIzpmkdgnWm4Z3dcZsATi6JDydMxICSm3zNcYUbdLfbhQfkIw44ppzu
7hYAp0iWrzzpFEg6Wlj4fYwKj8wozsLvqGDwW+t2nBfyec0y0ZZSKvDRnnPH
6ohDxeckp4Y0Ktx7lf22b0AMTictn8i/QwXu0cFAh11ioNv4ueBzORUiHRVf
BASLws/BvrFpohi0hh1UJvGi3onziP/IKQ6vYh3Uj9mKwA7qPtoy+h8sOx7t
WSwMpzv/tp7QFwND365dEk3CUNKn8Kd/sxhchMHp77bCYJFb62WBuiMupMU+
hx/1tLx5oK+GOCwohIVxIz+Xka/Z0m1GhU3r1Z3DvIXAvlObLfCXGMyIFG8Z
5iKBSGZYFaiJQ1pWnw2rsBDMsUT7iNWLgRqrk0FlmyBs8D55LzJfDO6Pfo3d
vVEQbjH+hjhEiEEHry3jk4IghAqZNSxfEgOl8oHFcKyLzKXeG4YOGP90lxqz
i0TYvDgSwW0lBs/q5BrHEVeLSOaKErvFQPboqbvvtgvA9quuPWYaYmCytm37
QBMfZMfoQ4IuBTLd2V8sNwvAx+jJmIeA9xspnNl1hx+8OJuq1fD+HzuXzfW4
+aFT9IH+TXzP374TMTuN+CC3nHB+B9pUQWnOunpe+Lpax9/BQgwiQ58upmry
wsPOpmN2x1EPDL0u2H6bB1JdBRJqQ8WgOjLkmJI6Dzx4a3xHOV4MuPQmTQ8G
c8NS1avRggdicBI2PlJDfbnUrW7I2SUGCzz+r78e4IL10WXqf36LwVhvnKDd
Nh5wXHG1I5RgH0jkqxr/SgKLNfY/u2KIML6/zGAE+bBmoHW9sycRmJuMzesQ
DwS1ywyEo4mgcPWjcj3y1TbCzdpniAdaHxySdb6TIDnho6Ygjvs86o1zlycD
y7HKYqtDyAdCAvvKJkmQdirc1OQk4oW/yFSmBPKLsO+qG1yJcMjiu3E74v0t
F2XTu4eJwN2r0PZxJxloZ7/MvtlOhG09W9oslMmQeVxc+N/f8XtL+Lr3HOLt
msvKb1uQ7+8Z6El/gucPqNg+uIH+zw7FqT5CvDYQarrLhf1uh0MfewjuF9g6
2/HABu9n2RkJqBcD2gbqAftRTfH1jyP3yOCU8FlGA/n3kRXva1qsFDjzs0H9
3/fbveqLLO5LUeB95Kc6EvK/r3a/Jl3ayUC15bunLYL9+6uPRcgHMkh5s39n
JaAe8D/ZafGMDKNNgeerkB+8nFve5T5FhpS+G/0e2O/qTc/lacWTwFRn9dUX
HYJgepClVRz1/+z1njOiZwigvLpyrEiTAsvaX0/F3iQgX4DwmnNkcJOkHuLE
fh4fZHQ89DgZjvocKfZHfZfepmjkEEWGsAfv1U5qESE7Ns/X14cEL77oK3Rk
CMKuZ0rEJ+8QP49k6dvWCUL3Qbl9SfieqyZePh7FeHksGKqGIP94ohEXx/dU
EOa/fsy1ECOD9byooVyuIMw27na/KsMLTpx7Ps3hPRwO/Vy8ZssDRRUc+7PL
yXBuU4FATCQv8Nz1WqHzUYDIaL98lMYHsapFEabSFFhHd7mo50UFzs7IkIkh
KqySXpO8uZgKZIWHReFdVKjLaVFXoFHhSDyX1NM5KuxccKjt/i0KCms1gqyX
qVDIyi1oEk0BxtnUvzILVBBQoofyHxeFmoQi42SKGNx59jmQQ1kYqFOdZT7C
YnBjftC9c40wuM4QDhwSFAPWCr9XXfcpEDrK9lKbVQxiiWHybqYUkC8+v5by
hgpxhi0CdMyHS5KVt3ySqLC8WlXkWhcZklIuqHqGUsGa+0KoMeqF1RTlsx7i
VJAhT1Xpop7rzCqO+tkmCiyr/uR+wXguypubtTWJggMpSmcc+3Gkz+Nkeqko
TNvtzxZczw/kTBNhM0sK8KevlRUlCYDMwNSfu2cpILnK7e5WawJczlbsDXtE
gQq5tPu6kchTTmzuni6lwKaeUnlOfFdnl/ufnQYpIJrhHsSK77bh9ogri5Aw
vGiR+1j+Ughisk+dXaoRgVjfrILt9URgEwjpj5cVhuB801IqiyDUDBq+3ewk
DBT3koMeOsjHFbqLfFVFob/mTNlLVTIUwffwmSAiaFMfGidpkCFSuWlqwUEQ
aKpZ1EZZMnSfYJ465oH8kd1T3Qr11JqbF07lIp/YjaLKBuvxZfJeq/Ec1P+2
cUqsqL92ddaKeEciH9jyOndPBAmsGockN0eLAuPMzWGV84KgbZm/83KBMFi5
uO731RaChzE9YZJGIuA84jQjZyAEie+tN70yEYFcfb7WEcznfha7PFZfUVjH
HRn2p1cIGncru1X3iMCgqvriG+TbmqU1YUr3BcEqfN/MQeSTvwgz0+knBEG6
3wOuaJNBq3a1nCXyh+ZzqVOCW8iQHvFiZnIK/Q3PE/6F/HYm53KUEvIX0Tva
73fhe9+gVgSu0RCE4Ib8w3vRPmEUtvw5lgjKi+5Jwzi/a3OF8L5O1N/9Lzjb
/v086QoP969G5Dv7ako2/9PHX9NIB4eJYDQddSMH57+zyDdXIAjCgsOp5tto
b/yzu2C3oCC4KxncpzwlgfKLsSkFxCsXb06X5ikSTC65cqxGfWXydeRj8fi/
zw+sFLYJE4H1U/PJpGkSuBS2VZWg3pndqbTgj/iqHjh25wzqMzmLTyaNyNcW
SkbOrEb9tc8m7KoY2tXTP7enop6J3q86eBT3i1AeFJFFPfPgNEEkFe3BOLui
OwwiNBO+tjagHo27mirEjvi2QH3VRUV7tn1f2Ee0DZ7X7eRD/SJ6L0NrHs//
P5CHW0Q=
      "], {{{
         EdgeForm[], 
         RGBColor[0.17892700000000009`, 0.30539400000000005`, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{7169, 5944, 7171}, {6653, 2311, 6652}, {6652, 2311, 
            6654}, {6955, 5944, 7170}, {6654, 2311, 6712}, {6963, 4032, 
            6946}, {7170, 5944, 7169}, {6712, 2311, 6650}, {6639, 2311, 
            6123}, {6946, 4032, 6962}, {6650, 2311, 6639}, {6961, 4032, 
            6963}, {6123, 2311, 6653}}], 
           
           PolygonBox[{{6962, 4032, 5944, 6955}, {7171, 5944, 4032, 
            6961}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.32743100484613835`, 0.45802601206207494`, 0.9420845919862949], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6648, 2309, 6643}, {6948, 4026, 7178}, {7178, 4026, 
            7177}, {6337, 2308, 6649}, {7177, 4026, 6637}, {6957, 4031, 
            6952}, {6955, 4029, 6962}, {6953, 4026, 6948}, {6643, 2309, 
            6644}, {6717, 4031, 6957}, {6961, 5945, 7171}, {6632, 2295, 
            6642}, {6641, 2295, 6635}, {7176, 5945, 7172}, {6636, 2295, 
            6638}, {6635, 2295, 6636}, {6952, 4031, 6956}, {2309, 2312, 
            2313}, {6495, 2308, 6337}, {6638, 2295, 6632}, {6642, 2295, 
            6641}}], 
           
           PolygonBox[{{6649, 2308, 2309, 6648}, {6651, 6650, 6639, 6640}, {
            6644, 2309, 2313, 6655}, {6652, 2309, 2308, 6653}, {7170, 2312, 
            4029, 6955}, {7171, 5945, 2313, 7169}, {6963, 4031, 5945, 6961}, {
            6712, 4029, 2312, 6654}, {6655, 2313, 5945, 7176}, {6954, 4029, 
            4026, 6953}, {6640, 6639, 6123, 6124}, {6637, 4026, 4029, 6656}, {
            7169, 2313, 2312, 7170}, {7172, 5945, 4031, 6717}, {6654, 2312, 
            2309, 6652}}], 
           
           PolygonBox[{{6656, 4029, 6712, 6650, 6651}, {6956, 4031, 6963, 
            6946, 6947}, {6947, 6946, 6962, 4029, 6954}, {6124, 6123, 6653, 
            2308, 6495}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.43440016672855464`, 0.5506773236582211, 0.9489005723923267], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNU01LlFEYfaYgRkZ4IxmH997JMaSF0h8IW6gEZYvAoHXSNqm9UEtburAf
U+TGrF8hgtGn4quBQySj83YO50gtHs699/k4z9e98fTFo+eXIuIx5DLkfRGx
CXkH+VhG5GbENnA6630G+BtvJ5AxyM8U8Rrvy3i/j/N+K2IR+Ak+B9BvAa/Z
9iqka6RuyjFvZelp14Y8gU+vEXHYiZhs6P06cAH3ecjKaETlOPS7A74v4F0A
DprKbxxyBOlDVsHxw3keAwtz0Z/x277/Ae8QeAo8B8ZIxKtCtVbm2nJd+6U4
6DtwPZU5yUfel8bK/epbzzvjUk+e06TaWl1xjP9Xw5g5CveAeW6W8j9Lyrft
Osi7Vojjc9L5MMl21XzsK20Z62bWvO8CJxrSdSHf7EOet4VsuA+0+d5Sr5+N
ag6cx5rn/tBIG9rOJtmtAx9Ydy9JeF5Kmgfnwj3aRawMvx3gmXvA3q47zgiw
l5XTXFZPuE/c0Y2kfN4k5XSR44Rryp7z0DHZd3LUTe0uc/jFPerI/iuw6ig2
/0ENuYJ96Jf/6rwNDO9eVSru0HGbXdnX7iH7xxlzp8hJ3aCUL2PMua7ZrPqZ
715HPSIXe7zoM3tZm4d8M/5HU+7JxT878LlyvbV3etv/+kOpWnveh78m8ZTV

            "]], 
           PolygonBox[CompressedData["
1:eJwtks0uQ1EUhXel5F5t0mH13lISAwRzKRJlYOwFJKaEuYQhD8DAoxAmJLyF
+Kmi2krRNBr1861sg5W77jlr76y91xlZ21rZ7DGzCZAEjZxZOWW2kDUL82a9
IAnmIrN5UOV8KGEWg2t4DX07MOuCN/iMNCnXSJuitsR3I212wN1obHaSMTsD
47H3VO8p+DSooy0kvL5JvyuQp/cLuIRXc85fdQZ/Bjv0aukM/kB9ntpBUIHf
Zt2rzsrwDpoftMP8nw+4Z3n/Bu/wD/AbuOYTvoSnU/ofgwI8xOt62nc0Cy9F
zh/BIvyCmjhwz/Je52yP2n3wBL8H2/BdUIl8Bs0izR3/3cjvLDQ7irynemun
y/AW+r7QPcqrdqRdycNXzmtUK0078pk0m3akXdX+/ciDvEzGnoVmHIM3I/cq
jbSHkWenmYvw/v88laGyLMa+G511uL/hmwl8Bw14XTsN/I3orehN6W1Jr17K
QFko89WcZ6gsVaNaZags1VO9/wA7kW/b
            "]], 
           
           PolygonBox[{{6902, 2310, 7176, 7172, 7173}, {6958, 6957, 6952, 
            4027, 6949}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5684530967818566, 0.660534858344513, 0.9591698565724238], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlntolmUYxp/XMj/dqDDked93kUklUaRCUiyHWijZqKWjWrmKeUiTwmkE
SiAERdZfFSXZSYKZdlDKysrKaqmZ1nS5/jBdHnD5ubl51tDs8Lu43j8uuN77
ue/7uZ/79H3DpjfXz+0XQngeXAhuyUOoBt0xhB4wsSqECWAouBKcRzYrCaEB
vAl/Ed0/K0KYWxnCGHhnFsLoUgg3g4PwD9H5Er9rwZA0hP3IfuesEyxHvz+y
Ns6+BQvRvZU7xoMxoAZcy/kbnK0Al6WOYWihI91BqX1vBIuw/xn/9fi+G2yB
H0VWTazXgePRMp01gjZ4wP5xzprAX5z/gmxKyT7kaxtogN8PfoM/hc4NiX3K
9z6QwVOwW2f4exm3b4NlfLdntt0OdmeGeDvYBd8jGXw82Ac/QU5GwEdhGy4P
4VdkM0qOQbF0c34INPH2aWAzsgcSx6zYN4AUPhzZRvjpaFv52Mr3XrCj5Bqo
Fn9z/khiHek24rP3EvxTz8W5Y1Ashzg/yfd2bKaWfKfurkX/IXS7sRkEr0en
ke8HwYLcb9Lb1BNdqn10rq4Gu+BH0XkW22dAGf5B7tx0gJ3on0FnauKeU+81
IRsHrwHTM9dQtVRMiu0q8t9C2B+BS+EXpO6treDi1Hfq7mHgCPyx6Fqpx0am
7iH1UisYkFpHuqq5aj+PN/YQax9YQ6xdyPLEPXCgmBnNzh9gT3TPqfduAp3w
sdg3k5snQDX8zirnTj7r4KvR+Tj4Dcvh58CMoj+XwlcU8arHmuEV6gfm7zB4
Ev5e9KzoPffC54BVwTM4MLXPlmKeVkbXWLWeBSZzf0vu3KtH1CvHomO/EbwQ
HYNi0cz8G91j6jXloI/vn0AHvjcL8E3FdztIVIsiv5+Dr+HfR9dGNfoOvr74
lv06+KncvaEeOZh7RnX/NPAf/J3cvSkd6a7Mndv5YDTvaahyrdTT98A/w2Yd
vlerR5Tr6Lu1g36Ev6adp3kCp6J3nHadaqBa7I/OhXqwDD8JJiW2kW1HdG9K
NpPcLI5++15Q4v3vR9+tGq/Svoo+k04rfHDq3lM8n/D9au7dqp55Bb4DWV3i
mdBsqGaq3RwwAL4o9+xpJp+GHwfXl7xTtFsOZN692jnaPa2gDM/AJvjt6Dxc
6Rmuhd8F+uitXnAfvLeox2Htj9wxK3bVeAu8X+ra6bsidQ6VS8Ws2F/HZik4
o1qCf8D5QqazHzLHoh2mXTacN11T/Abpt6g7892KWbG/Fd3rmol3o33Kd3/2
1kVgHHysdiq2I8F6bL7JfKfulo50pSNd6Ywo7tTddbnfPpt8PAc/G9172pna
nZLpbCaYAm8ARyqcs8nwCeDRSsuG4K+c+bdRNVnG2eAq10460l0TPRvq0U+j
fwP1W3iWs3NgfvF7q5k/rd+j3LOvemn31hb7twfZHZrtYh9o5ufB10b3l2ZQ
s/hFdL00cxvgt2FTxrYL1MArU+9S7ZArUs9IW7Efv4K/VPSnYlJsulN3y8ck
+JLcsygd6Q7M7Vv6+u+gnCl36jn13v+56VXA
            "]], 
           
           PolygonBox[{{6721, 3052, 6734, 6713, 6714}, {7009, 7008, 6896, 
            3963, 6893}, {6906, 6905, 7179, 3183, 6974}, {6911, 3963, 6885, 
            6588, 6589}, {6913, 3972, 6895, 6888, 6889}, {6110, 6109, 6107, 
            280, 6105}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7043413556697558, 0.7689560873325638, 0.9711658219551154], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
3hm0vBThAtPmSxO0cTcCwFYgDnyfWNdN6u/37OOv7XvG6mrl/zPliLgVjgPy
X6sN8pVjhfyrAiqCjk+C9g1aZdlPbMP7fpPnFe8sv9wqeYmdgz0CnRtK62zn
Cu4hvKE+RI893JiyMLIx5eg1ZYI2w1fuivJNiGxRF+f9me/AxT0IcL+j/4AN
9IL5WYvBF8PHZz1lsbqbfqXf4Pl7hayPvNSPXCGnbys/z+pjvKAMLhDmK+uv
OQYZiwu1ISm32Hr+qy5jjmBt65ti6j7kBb1+vXYM6yb0+22G/EaHIdM9o3C/
gBnVuX41S902Rv1GPkLuQzxcnWtUM/wmD7/vNh3cFwYN+wU9FxQzH+ngxfb6
Ivj6VHXWwZrVXMNb/Ia+W6WP38Rjuz0oDQ8L04x72HjomObvGeKnznV1IOvU
ix1TyjWIV0q5Jsx+UPO+EHMRe0OsD7A2wFoAa4usMX5tuMbvbwzJxzrznMrc
PztFv5L1hWdD5vpFuLAx1/i+MT+28Sjt51tqcn2eddX/lbL+z0u5xsqaPb75
JHUDcxJ4W7m+zV1xfPgfq9PfxJfnd4Vxzd8F8UAX+ShHOnj45m4u6+ucGyEf
9jr1X1uT+1QTa3K+fkQ+Xa9fz13bhaVcF321lLigj3q4k8laO2vulyoj2K/I
FWsx9AHl8JdZex3v2sL5xTxHw/l+6qA8ewYrtOGRoaeUi/uVjVnKCvc9Trct
rC9j07DO36VN2ujQtKXz+avO6XPF94Q45vkbXwH87B2w/wVP4A0yQ7vgA/sD
rMF+oP13q/LL99/Xk2PWJ1l74nuIYwV8+EPXCHxPdNwNkUczGzP+jAgfb8z0
GY3ZF4tswx4xbndrnfMW9bGuRH3cs2XNeLX8e1vaKfeafXO39Iy2vxYZj73/
Zqt8K4L2vyA/sGUbbdvM9cYZaQvtm2mOIWRlmHs27HtxN+uygAlV+c3dlsuM
w/aaZPz4Ku88q7uYF7ctpW+6VYRLoy8X059t0j67QJyTtNf4Psm7NidH2LWU
/m1n/KeAT0MvTijlWiNrjrxtwD0c1odZx5pmu2jfqY2J/zTD8eIfHr8vjHBE
Y9I8wbQLpWei7arXrkQ3PKks/c117c1LaStgMyxzTnjSeeGiSPs46JxXzHlw
lXPp2g3ST8BH2LqUOmSbUt4P5H4PcxV38R513prj/D4oZONj7xFjz57LffXA
MbaU57PACe5r9ftYPzjU7yPYa458FdjmxbQzmPuxTzbTt924MvORH9/x2lLe
/bnOkLtAtQEj4vfnUc/F1kudvFHyonvxLzem/Dwiv04PXDuhK4u5FsH8N78y
933Y6/pc3ThBfqOv0cnoE/KzvsL6BXsl6A/GKusTrFPUaW9id2KDnRF17Bp1
jSxmPQusa6j7UOxHrXAvjj05xv4vHP+cG2k+M/KCOh/df597YuzVPteYbxR8
WUwd+YP690vfLuANA/ZTOQMytU3uIc5RZla737e0mHP/AnmxopD3zLmTjw5i
rH+qPlpV/fN+/Gp1wdXqBfa32D/70TlmpfxZJe/WWO4VdQz6cqX7iStKuVZ0
netFJzpXfm3dq50j31H3N9/7X6Ee4lwh9HKGcJW0Uv9r2k70BTbwufoqnEfk
riT3kcdE+7eM+JOLuQY0X15wTqhruzxXtJHnJ7lLQNyx4XfvEuEudemLPFCf
942xN7+vyT5kv3TjVrmes71rOnwvcr7gDvAh2qr4Awe3Tp+h0T1ndOdnNWnH
ci/4M0N8xW8C1tbkfen3TCP+Y/NQ5intkz3a5j4h+4XP1uS6wVrXDr4X13cC
tNCGtcaTzn3j7/y9hXvinRzztKtLwLb+7qL80gb6Cn+N9414w6ZenjSn/0L+
PFif/OsUebcImjavzXsjD0kr98G7encQO71TU9Qbv38Z4cjIN70m/ZUtxcu+
PeMYuflcnm8p3eiqhcoevB7QOu1j8jP+O0pTk7j+F+mftc6zQx2kv1789dbB
+tZy+Y4sdFIePpafh8i/P9rXM33TBT+H+5wzvItKfvLu6rrUdPPdrW+L/4r/
QxzrGZ3q8h7luNrUn/fLh8ctCw7eteF9G9ZqmGexWVlD+kbZYV18gfvIz3qH
uWPgbRfQPb5bR9iyLnE86r3Zhe6RY3feFTrlTs6MBNwS0CvaPak+fWxsCGiH
Fvrp3Nq8f00f4r9W2GZklfut4B+rXCJ/Z9Sm7CDfrJEcpxwRt73jCjn8VLln
zY81FN5UWGm+5nLL/QZXJ+UUHLNbJf+549zDc9T4t6Oi7vOk+eyAX9Ylv1lf
uM2+eEM/lL6Z4viabJ/RZt7vIR+8gA/Mt9x9vd0+mG29Dzke6b8+ITt7t807
6vAKPvWryfsYu3ufijnyQX1z/O75rdI2nK0vMqdVxjf7ZKSRp8lwrt+8SbY8
YFmrpHmNvvcMccyUP3PFO9e60CkLrQN/f7O6XFehrczhU5U90vDd8H1f8Rvf
injoukfbblWr9N/mi7cZP/nwzfElWTvBn5xvvQttM23kN29PkIe83yjX6C3O
dNxZk/PSnfYP8+MTtp+2v6zuRRew/tLXfRrs1WnabK/aBvz3A/RroWeq+om+
g5dvinOh4+M77V5wLLM9L62HC35Mkwfopg9aJZ1TpBUaoRXf4U5pZ36lnjes
i7fkOFvIGcKhTemXnNKUZVfax89oS1PPpiFDx4WMHds2dTa6GztuSLRnaMDx
rXOtAL3YXxvvA+k7Ovr5GO6J1SUucBKPDLO2B99ZP+sSsH3b5NN+rZOn+KSc
s8EvXSXOLwN6xu992qbsoxt28X0GYCfvjV9dk+XxZ7cznjlgRW3Ox79t5z3D
2rzT9oVthwfw7gu/V1knv3v6pgL9uch1OfbobpRGaGVd9BLXfbq7Rkrc5nUp
9+iFHuq5PZSJ3uI92nsr3F9BLvspX8g3cczLvaP8gQG96lKG+yjH+8Tv3cFd
l3ipu4fl+8lP+nGT2pwzu+uv8U4Ed356qC+O8M0c3s6hbQfb1t7i7GP/9JMP
u8pbeE+f0Dfo/2edG9H7zIWfts6zsv9zbuR8bVVT+vQbRNgi4OL4rozw0KbM
v3+E+8fcsF/AAQFnhpyODji9Tfpflwe83ibXOC9uk+f+enpuhXRwg7N5/eBq
5aGb65Ho7UFN6S+d0ph+OmMBf2+dP2z+Na2T7i+c2z+1DcStMY51iquUA8Yd
Yw65GKGPRj1XSC90nxY8Or4+xw7n156KuDltMuT3As9EEscZyacDnuUNyPr8
ftL8xI23/ZQ519+nRn07RHhyU/KHcuTBpulbm3Pa0+vV+bQh+Lgf9E5AV+z/
pvyulf4z6rMN481LncfWZzzp7+kTLxbPIuMGOxczt/aozfvE3AEm36goe159
9s819lcf8/QMOD5gUMCfa3O9nbX2Xdtm22jjA03Zl8zF9O3hrVPvoHPQUfid
+J9D1FX8vskz7ZyZJb6/uox7ltzZhEfnN2WfD2zKeXiV68XttMGwxU7DVqnJ
9xYvNj/l2O9iD4z9L94oGes3/jPz+a3Oj7Od2+doV/CbcmPEu0g+9rCPx3u2
9Wr5dExtyhyyhg/V33npyIBDoN0xPNB4vt+tTV31XoT9atN2PSXCE5tyneOE
pnwTjTOonEUdaLuOaso66Qvqvdu7Dvg7x9r/yDT1wvsT6pKeI+XteOXz/DZJ
S39tafTvDt4rXmA/0V8DLUtedNHhtgkdhA7c27jD1G8TxY1vzJ4jNuw2bfN8
8WzPAU/3vPHjbdLH5fdDbfLs8XOOtzv1fbFRZ3h2mDLIys3areThDDQ+9QOe
R77TtJvMO1981Lt3fdq+feozDT8dXAeo36ABv360euxJaWTs489TF/79YMcQ
5/oot0994ry/2V+3Pff7PV6ewJtt69I/w1+bbjrtul0bFZnET3iyJuUdexR7
9knj8B2IZz6kv5gvdw6cOwR0qUvZXqV8bxK/t+Q+TPu0d5nvmBPvsC3wY9vo
m85ts68mSwNl4SV8nyqfH/X7ZnlA2aelCXr3Uw6QAWyXrWrT3jlY2UBmGLdP
2a7t6tJex1+gXux06r6DcYs+Kyf/Z6ofeXe30T3E6fKE+rF3sVnwdYruM3by
jV7KwBvihjmW8S/A02A+0rZom2mM9y2MG+n3Fu6bb2kd1IU8byvP+EZvoA+h
pZNlOgtbmG977SvyY5fvajlwbuM4mSme7cW/jWXg/13KeqNtgUbOt3xUm28M
wC/4dkw51zi29l7Vht4b4w4/43hw8GNEXcripevNWc8690x07DIOzlFuzzX9
Yuewwco+e4LIwRTpQ/cwr17dJu/dc3+Qe978HqTev0Wdh+5Dd23j/S1shqXq
2KvFs+78a/t8L6FX+xwnMx2TvU0n31j1O/4o+myItvAybXhs8QnlrOeCcurP
i9Wh/+fcxry2zh5onfz5jXbpDupZ8rJ+1FvbChtrnLLLGEB3n6ouv0U7h3Lz
mrKOHSP8qjbXIrDJyHuA+fGdR3omBHsaWxr/8emmpGtuU+J6T9zHSws0/buc
d9/Gl7NNfzYePOCAzr210/cRejX7q9qzeyqTexj3gb5F99r02bB7F2grY+Ni
s+5p2d9Zvptlf1+XebCBB7ZN3wk/jDaOsp09tJN/W5f29kD9mt/5TVxNXdIK
rynP/sMm0gNO8uFDrJAXzEXMSb2slzLgXGje363nn8OLM6QHum6vz/WCO+qz
X07xTYy3g+/FiDupnHZQD22hfvYd9kkf43rXpr29tvbn9ahTnNevUKaZl5EB
3pcYZtne2jqdtAn5zdjpY3wffQTaxdrm7/SbmDuOdM7a3zmIueg2dSl+zrC6
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
WNcb5HtzvI+9iW9k0054BS3jfStwN+kibjfT6WfeeuXt4l/Le/qpm+9Tsj7B
OsU7vpG4v+8krtXWxa7f1zTeUZxdzvxPlPM9VHQyax97uGbCe1F9fcONd6sY
Ey2sn/fWlrfPPqQ9g3xDb4T9STr9cr7jmjh+w0v4MKzjzzLBW33ICHi3d+w1
y1Zn2w8faPsXTWkz3RrhSr+J+7V5KTPBt6Ob34a+wL5+wbeUr7d/6duR9t85
xjGHVjj2eZ/55oC/+9Ynb2zeLfzdtGkN+R7oG743R7/T/09Y38SGn39PND9v
sj7sW2OkISfNNEEHb+u96Pt61xtHO3hDmnFTG7BRyM6CiKsy5J31eQ35Rjlv
q/LWNm+cH9+Q72xSH+/y3SPtvEt2m3S/3ZDvfY+QrtPk04vmuc3x1MyLYb5r
9lfx8M7ZIvE086mvb+M9LF7kEx2CjoTHyD800w7eST8h4EjruE8eH28bBjfk
O5rYvdi/Q817gvykDVsVc+z2d8xXqjt5Q5B39hiXZzluj/EdvB98B4/38PBZ
GCvYYnMb8q3TbaWDtyP/bttP8Q2+v9pu5GfTYtb/lLRQFhwby1f48itlGxnv
qDzQ/7zTe2rDz++Nd1f/Xq68TJLeQdI83LzbOeb7yuN9XVdgzP9Z/4j2XFRO
331MhLuW0+aYVs75hHmFcXYf70myFlbOdaI7kf32Oe/uqJ3ZUXp573FiOd/w
e7mceVlPAt+d5bTPF/pu38G+5Xiz+Pi+sxR1VkZdpYwjjTrL1sv3LuW0ix4t
Zx7ief+vv/ppgHHUyTz0lmcFuDf2D+si/3WOb/T0GPlwYTn1HXpvVjnf2T5Y
nOdJP+1YUM5x9q9ypqEf1+VtlzTTFt5276JOvKOU57mnlFIXNcqrqzz7zRnw
W0t51vv2CA9syvMXhzXl/z3wxsKWpfzfF+5g7hHfuwXsH9/deUM14M34Hsd5
dd88faSU7y7xztHyCG8o5Tnxv/FOUlPO6e9z36GU7+C8Xcq3ltij4h2m25qS
z/D7ec9dz2/M+/nc09+lMX8T/+8IBzflHZohTXknh3jKHe99Af6jY3Rj3ik7
nTPpxXw/gPfzvvQdOd6Te7eUd1reibAx8i2L7xJvRpXyzPbHpXybiTPbezVl
PvK/EeEa39njvT3e1uZd7e0bUqaR7YcinFfOd4afKucbmOyDdQt4rZz2yX/L
6fPj+/POJGcOOUvEOaKl5VwHvaKc69LEbWHYze999ckZb90sh5/+U5T5v6Bl
bTl/d7fMS+V8h/FF46lrkr49Pn53897gWgQ27r7O0TPK+b56t3KWQw/iPyGL
Q/RTeV8YvYjt8Fw5/eTnI5ztGiBrgbWehzmuKfH+yXrGW3ZrfxMPzsOkB/p+
6ZrqdPeZsRPx9ffVxsCeeMc3ad/1rU7GJ2NzdDltgjPK+ftex+bTjnFk8Mly
2hJz7Z83tSHRTZdqN5+lX4x/PFW/Ff/1HnXXkAgfNp70+cY/Aj1+z1cu8LcW
WYZ40t8v57r25xH+gO8d/fh1OflwsHyhb5AX9laXlfM90uXKUi/78GD7lj4i
H/sdpL1XzjXz/0X4ZTll9tly2u+snaBfmNurOqS9+1k537ldU84+Yj1ltLYh
9tJZzun3aH/wjjbzPHMm9lsPbbj52gVdhHnOa3MN+c3/q7Qp5n+sMCc/ZfxT
5pvn/N/knMZ/siDnexr/omlHiIc6FzmXv2Z+8u6IfRKwJmD/hszXxXIXOt9h
MzGfnuacTt79zD/NONJK2g3Y0HONf8P6bpOmkyIu2Fk4ppjlv7N+0q6xLvDv
bB0dTXtCnhSK2Z6NtFUWWB//7cL/fKw03wcNP9thlDm/lHdzLimlf93DNbXH
fdOJt5020B7AztzJ/Un2Zj/1rgr/yzRQ3xxfHDyP6nuytsx65RXK15V+41+P
05Y52/VM8q0RJ7g/kGb6pLvzy+6lXOf4rXLztjJ1n322s3zqrH3TyXaCZ6V9
fZ/9/ZZ18cbexto+pJ9mv2LrLDXPEulZY78sMR4cQwO2iGoGFfOs1k7un81V
Lulv3oxj3Y/1v4N8A/BPxTxLx9uEnJXknB1nI7nHyDnJ27zTyF4sPjh7oJy/
46wa5wYpw//Dcf97L89W7O45i0X+5r/b+P85/q+NvFPN/4R3xvqav7dnLci/
r7+v9gwGZzuWug6z2LqhC9rZc2RvmTMQnNHg/B1vUozzvM2Z+vD8Vx7rtszz
K7xX1V1c4GE9eJBrwuQ9zW9o6Ss9nAMZJ07uR3L29BrLDTb/DtIG3jneh+sr
jn1td095s5f072IbKos5NpCXbxtSP33nWJqvHA02jrQDGzLf/o4p0hh/peLP
vgK2J+8u8y4yv492XPZwHKH3HvVNY95NHhxpm0ZVxxdTXpE16KqUrpXWgT8B
Pvqrp21p3mPjHDW/6eteth0+XKUs9DLtH9qG2KC7OqbhBe04wXpWu4/dQ/3c
Rjr+4vcRtr1yPd4MlmbsD2wK9iH7uaY2xjH7huN2leOWsYWfNNB2fSsueMs7
0Lw7zTrjAnX8fPUa/Fz3P0eG/D5VHpPO+++shRyp7kaHM5/9n3X/xbpXqx8G
SgdlKpzfqlwjYA2HuZ//BOG/ofBbD1Af8z9W+ykT+0s/efYxz4ENP6cfYNr/
Wf/h6pUP5AX//8AcuY/l+xjX7Mdeo55rrpO8366XF7rwq4+wreAfp57FJviL
vDh8vTbwvxCt9de3UG/iM/CN38B3o3Xyf0z8J9bO0st/SFAO+5b/3sDnO9X+
oQzzLf5Flf7HujWThszPvM56y9u+i089G1sX+Vtb5hHtH/y/vaWX9YOvtX9+
LCdve60nO8jgavlzvPH9fNccWdrS9kF7J+ttrr9JGh5WTpnPvyonzz4op4zg
2yNfpylz+LvMx8zLL9gfveyTTfW5kcsJvAfHe1nF3FcZ5dwHPsYd46eb69ms
a18S+Q7nTY1izqnHOseeHb/35p2sYp5TmCCuc+N3H97eKuYaMPsAzMvgG7je
HM08zzw9IvL9JvIPj7C1b05tUMq8J4nzIkN+02ed7esrpH2C8ztjHRuS+KM9
Q/O9bwjwRuCNfhM3xj1WZPLlYt51vrCU+EaJE+AcxhV+X+TvyyP/8UHzJG2P
Adoff/Zu8qHaLRXaqfhN7KvuqD7qph28uesVvMP/b/1E7vX+Rzr5X27keyfH
HD79MG1g1gj7uG64qWukyEFr68RGPlt7B7vnaeyuoG16MfexsXnYa5hWzDdl
Hipm3r08d0Qe7LGR9tso2/lsMf/vnv+9/38QuCVP
            "]], 
           PolygonBox[CompressedData["
1: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

            "]], 
           
           PolygonBox[{{6130, 1120, 6025, 6113, 6114}, {6917, 3984, 6901, 
            7006, 7007}, {6175, 6174, 5993, 478, 6173}, {6501, 6500, 6131, 
            271, 6503}, {6934, 6933, 6744, 3057, 6928}, {6170, 148, 6045, 
            6048, 6049}, {6076, 722, 6253, 6254, 6255}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8302656220614374, 0.867495286344594, 0.9836726702907322], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
1Vml+vcpnSmYJZjgtuOd96Dgz36/1+XwmGbSpYsFfWt1VtT/NsHIdMh45MCx
1q2OKY11VVtHZz015hUlxm1hvxPLJvhJrflPjdvRvm1x6Gx3Wlfr7P7fqY6+
CrSTeH+OdfkNJZFSv11xPJPWFgf/XGZ++3114BR8sifvm2ZeBu9a63NK3zJN
vuwz/rBtaWyKauu2H1QETqZWBy+Yb32OFN73fkXwefR/eO9I0wVnaUBt4LR/
bdA39gH0zriNFVFviemf/GV+X+o1LHLfS21bLPLzItdl7I88v4/8Dm/e5vfP
BBvcP/3eqzVME0ypDh0YOvq8Ip6pW2R67+WzvcjzWOa2z3vtH3mcIuNnvscG
/9Sn/wKOKOcsvuVzwXrgrfR1sv0cnJ8nfJY503NtN2E/Pan3L5T/eD7433/M
Ay8wn+BcfmneCH+n3UjT7SzTN2disXUZbKGm6eCHnZqGjoTe08+63grre4Ot
29JPueXOwdUxNinvT1SF/6XU82Oe8/LBq6usZ263Louue7DGO1z9dkyH/GXe
rJl2X7ruNr9vN+/vYF33X5YBDV5/ld85S+iEnMHtxsNe687/cv3PvGfs15yS
0HfgH5z7qeYV9xhPvEP/2NPfmIaamk62/YzWPnf5t4IvXI882nJu/lMR9nhx
Zdjk2Hu8kz+kTjhtEG8QDK2Nc8IZobxgF7bV3Ebpvaom+qTdbo+1zeOVqt+m
lTFGYTxsf/IoK68M2Yfc21UUMq1bOvbgUMtl6mFr9rQ/oULvVYJqQYPTKvdF
Svn8XPR3aDb2sk3T2Ft0gnyp/VDq77qKWEO52zGvb4xb8Mb45Z4ra2hhWxje
s9P4RddAv6gx4DcgryX2WDpkdbllfZnHb+k5vJiPNTyXj7wu6Wgzy34i9Moy
919unabBY+yxjld4z5fuXx++DfqaYDmS0lrPrQy5C79FH0C/wI/VQnT+jvZ2
rs7JAdg3gnRp1D/bNu+BP8M3fBu5jcyn3k8l0a7Yz+Shf5/rtq/kw3bunI/+
Lnb+eOuqlNHfWvd5nudJHnhvY92sI2dTkEvHfKZozhNro7ywP/NtZy3GBhe8
WhK2FPbQCz8rQy7Pd7rIz6ToaDyvhcepvzX5OIucSWyRL3UevhA8VR/1F/qs
PiyYiy2TirpXKB2Qirx5bn9sKnSJlZ7LYs/nkZKwhQZp7Pc0Xk747Z/EnPFt
rjTQlnZ/17wWChZVhm3yrv2H+JazXndhjBeNg9eMB8rbpvbjZqXL+pnHYldO
tp6FbrDW7dZ5jrNts/W0/xEbirxL1ed04+Bhryllfy9+X+b6VGXMnfaz7Ifs
mQr9iH14Kx/rasyH3IOn0XZDPnSCjfkoo86bPi+cLXRk5pfz+ljHRtvJdfZj
wXvmeg7znM71fA7xOYXvPO09ZW8fsy6GTvaw1/6Y97Kwt+hkzQVNBK9oz74S
PS5JYu2cT84j7aYbbwWfDn6LWdb5GOMvgr9Who44z+9znc5z2WMu5/lFjbeo
JvSk2S5jnug2b1lvgZavsc0wyf4K9vqu2uB1nOeb9TxOcItT3uGBo5TeILjO
7+QjI4Yovao2ZML9Gvt8QYf66G+c685T3hzB3Jro9wb3O8rpDe6DvoZ7DPKu
NxTyAOQJ7SZIHt2qdLxgufp9WfCq08V+Xu50pfNeNH54f83l92lvViudgn9D
+mjTJsG77k2i3j1JyKcmxkFXre0oQaf64IvUby5o5rRdkxjrZY833OtCdrA/
Cz2HoZaflH2qcbcUx/i71f4/TcL2vkJ7U5QOObHbedjWncQPPhRv3loVPHpO
Veg1VUFmKdh7C+s9/7HOM8d6DzozNjF6c3OdmQ+UViah2+BXoH6l0mpBjWCA
5tBV/bVLBS3jXzypOnRkZHp/7wvrREaCj1LjIiOZ+77mf6NkbkNx2AHo/Acr
PUiwVc/Fgh2qc01J6AngCZxM9RhXGE9fOP8c7fvRwn1dTdDCXtMDYw83nge4
He17qf5FgksE32icpCTGA38fGIdP++zMrwlafdz0WqM2/9RY1Uq3aw2Pa66f
K+12oHR65S8XvKX3kcrfkA1f4Aj7Tj/U+/3K/0jpd4JFev5Y6cHqq4fWljce
TxZ8rXkuTgL/1yYhe9m/T5Qep/cVmuN8+L/LFiYxN+awuj58Q2X2r7VUfgtB
K8Eujfeixv3C47ZyGeeSM8/5Gav36Upvqwv5mRPxTKuNevRVIfghibV+obS+
Lsauq4s+W3g95FU7nxSZxfM51VGHfmqct4++6gIH1IMvPG3893B92i3yGfq4
LuiHgOxo7d8H+TiznF1is8Rov6sJf0aLkojJjVSbSVrHfYLHkiif7TNN2zUe
Ezm00OeSZ2zM71kz+KuL89zcNL3YZxfZs8jtaXeA+QD8gDns06FKYm73oa/X
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
Dxnns8dzV/eBLAO3V3o+1GFv0z678Bb2ZITnvU/385lfkomxUh7v0Wz4hx9W
ep95xQSfV+rgyx7scRivwft7mfHxumV2K/vtWfOsbPCxB7KxH+zLI9nYD2IE
7MlqvQ9T/gqln2TirP1Sz62T8Jt1VzoyCbv5TqU3JmHrjlf6O03tePtVT7TP
B98P8frTBD0Ev7HvFT/rtZmoP1bpJUn47UqSiE2inuBX4pioOMWyb1bZHM3x
feIYScR8Jin9KIm7FR+SJ5iv5y3oC0msfxsxKfcjFKXGZWKuNyt9LQld83Wl
F2eizu8zMXaV46Sk5Y6bZjynhtiGfc/M7f97jb82nOo81vo74+SsJPylv2Ms
vV8iuMj85gLznKXWbdBxfuM61L0mCZ3guiT0BvSHq5XelIR+/YLqL02Ct8Pj
O8On7NvD332S4DDB7iRikz96X3r4LkUvz+US87gC3yL/Uuf1d95Qz/lCz/tC
93OB6w92X73cH+17Gi/gqF0S/uGjkqCDS13vEtMHecuF2POF4CVK/5UE/f4b
GlFZiXH+USZ0xW+Vnp6LGNxJuZDNyGh8m90dZ+E8fev66JjX5yIW95tc4J21
wbMHW2dGd97mmDrx9JG5uKN0ndJD8nEnvHU+/Mx97NflTNZbhn7msZhjg32t
+FZb5CKGn1V6WS50yjdVp30qfP/E0POuQ90+rkPdZ3Jxr3aR0mdz8T1UWnN4
zPEa4ja/tn8MPxnrZ9xWqcDJIamgiwW2g/6udJHjicQV+2WiTh+lDyfB4x9S
+lISsdlXk6B75sl5wgd9quDXgp1JxIJXJrE/xd6jszPx3lPpl7a5sL3+mIk+
/pTZ54bfV7/ENNreeLjDMVlis8s8B+ZS4zUV1sacC2vl3FL+hu+zoPstdEz8
GaUzHQMlFvpn+IWeH1S6ifWq/81KH4Cn4CNU+mwSOuXLSfDH1pZHyCfkVMG2
bON3YtH0A2/qqLzbG0KmEccdbx8pttMA+yqxydHB0c9vs9yj3UDno6MX6X1v
XSB9p9KvBDvsV73eusHLHpfxL7LPFjnZw32fZ/l4h8Y4krhuLmT7qGzEN5HB
m9NRjzlhHwz0+PgZSutjHsxhqH3tfawvXGydAXmM3l8YnxQ7YYZ9IyO8RnAy
tiH2odR93qr32YInyNecbtPcNmXjnfy71XaZ3i9W/t9EM29oP25X3j+TkMG3
W95ix3Hv55G6OCsnFIct85za/lbp5GzICmQE9/JqfWY5u+zRBO8TsX1i/OAd
vQH94enawNVBjlEy73U1sY6tSbT5BrmnMfqpv39mY63sJzgf5/U9aRywF+QN
zwbur87GXGptb6ALVlmXmgIOGkK/A1f3ENtvCP0A/nZ/NmLU6GzM73PTxA7T
CLTCntHHrR4b2ueMo6eNsT5DPOadmhi3meAV9XuR+lxqPXOo9725ypq6DsA+
0u5uz40xOAPc1+AexFtJ3JtZm8R6qqwfoo9OE5yRibxq9/ex5/WR5/KR3+n7
voawu6o8JmVHWZ871HNgfd2Nt2luQ7yCb534LqHU8y/yvtzhOY/Oxn0k7iVx
x4D93VMX5bf77BCvYg9H+UxCI3usk47wOWAf2A/6go64J8LZ5T4Z9xZ4fs/3
Cth7zuhX9tE9L1y8qbyh2di/5a7PGMyHMb+w3+8cj8U4nOdb0Nv4DjEbe4te
h373nufCeON8/ljPa15fgda/9zjgB7oGv2tch7q7zH92uu5O54/Mxhh3ZAPv
R1oX/1+9H6J5/SUb/e9qiHPymN6PVP4cpeuSiJvckMS5hZ/hi7nPtDTF9i50
h837qM83Z/Vul1OP94kuhw884n4ecd4DbveAx1iksU/XHJ7JxvsD5ql3ux/4
AX7EceYv2GfY1Vsb9t+VmWNbAR272m1px92df2SD/1ybCx420eUzvBbGGuU8
6kOPnCv6f8N90jf+qF/Uh0+K/fvGNDPTPIC19zCPh2c32M7DHvjGthX8fYhp
FFtwRxL7+C16fRLndGMS45zq/St3Pwf4vD1gPB7q2BpnbpltVs40sqCvx7/S
sof5dLS85M7nYOchUzo67xeGDl4j4zLPetuq5Z5DB/eDDUj/2LCMcaRl5i+M
K2yxU90fdbEboUl4Z4GHYofBc6DNwywj0E2W21Z8xfye51Henxvr4p7FUtuJ
8IGXzM/Xa69vVB9vZoOHpm3bU5++lpqvNTWvrPZeNzPvxQ+JHBvjfm80bTxh
2dfN9iNzLrLs4jw9aJtwEufetg82EH6fv5o+LzMuLzEdM07Bv844+D9PMH7A
00jnUVbAKfgEryeYPsbY7rjJ9/6WGm83ed60nZYN3P4tGzKtneXaG3ofqPS1
bPgZ0HUL95v4HgCFcI3KrlX+OqVvJhGjWE+q907Kf0LpXMEpen46G/L4Wt/h
eF7vZyv/hWyscYzn85Tej1f+35WuSSIe3JjEHNuZBkb4jHBWUvatbTFvmWy+
QD3ONbSzUX3dCa/3WT/e+fh/C9+sz1fZr5S3AN+Y18Ka4O3IaPh7e+vU6NZD
M6EHX5kJXn2r9YYV1rHRtT9Nghd/l8Q/IXr5fxBV6biDwx2S3o4TEi9srfda
viEV/A/2Bt96ZAN4bqf0CPZLz4fhJ7Dvsm02+qx1v8R75zrG3N0xRv49gE25
2nQA/+J7B2idFFqFZnf5eb7zi3wefkrC57I3iXxoFx0Nfpsy/r9Oov1XSv9j
OwJ7grGau+4unwnG+H+a65mCH7TWllrDdq3lYKU5P5P3ouA87ctLSv/M/Vc9
z1Y6w3QyMRv6Inrjs9m4m8M9nj1FES/mbgvfcfAtdE/BGemwjwb5HtdrmfAD
4w9enwndblEm2kPmXI+c6LGgzUvT8f8Avl3Dz4ztzrcW1Kfuj0XxzTPfPvNd
N/l73Rd3dg70vR32bafg66KY17mCHunw3bY2DRyl8fJKB2QiJt3e8duHmKfy
89n4FgSbnW9Okmz4sFspvVzlV6Tje4TLnfJt3WV+H2rZhJ8aWTfT+tcMy6tH
fY5mWDdDXjzTEPbTba7XYJk/zTKowfJztvuotuzZZJ54gOs9alnFGPixGxvi
Lix8eonHWem8FQb6wZeJHfesy5dYF4aHr3B96kFna02Xa53f6OdG8/yV7pf+
RmbC93JVJt4XeIzGn41Dm0Y/X4a/Gx0tG/UWeM7gZayfh6b3f8u4x/4c/DqD
nDfSezDI/nHO5+n+90k/711vQX9BLz8PdVvaDLW/h/uUQ7yvlPfzXtMe/w93
w/D9XGdf/PVOB/l5tnnXo8Yle4B8GGuZWZCd8LZRzh/nvOaWkZvND7aaDwz1
XRLulLAf6B3s3X9lYx6nZEPubTHvhh6HC/ravkJvug25kI3/FUzNho+Hu334
M7hPwF0dYn98d8i3e3wjxr9r+NcQfPZC3+ch9kgZ369wr4n7ShNdb7rvJ6B7
TPQ795WIkRe+IWjp75D43uk7l+MTp/1Y338a6ztfhXmN8/vVmfDvDcvEN7pb
fL/nxkz4HUcovS0Tfrmb8OOaDqHHnv5PBncv/5SLeOYfcmHzY38QJxzl8bhz
ttV7AG/O2leDvyvv78e4ZzjQPqxLMvFdz12OpY5yH4MdmyRG2cv3I/o4XjzK
5dyb+MI2DffaiNEt9x0D/rvAd9nzHbtbZf8O30BvcCyPODPxWO5X8D7Sd5Bo
85T7GOs9LPxHaaTXybdefCfC9yL8G2iwy1Y4Tlr4T9Qwz7O/597P0Mf3jRi7
0XPq5zp93C/fwPANykb/a4N9499Ew7x+7lUVvrsd7nEoW2KewdlfbJ6MP3WY
zyU0/pl5Prz/G/N+3odnwud3OX441StNB9/f6W9nqYtcQ5bgsKu0fEDeI8O4
o4svrtJ56AIpp+gYGUE2HTKjdyb8cZioff1MHvde93ocaIdn6Ic4KPHQKdno
q8h997ZPeLbv4u72fddvPV/mDc9HNmD7/eS5Ix+5P1ScjjtXPzqftU2x3k87
aBifLWz8YOsDFdn4/hX52FaQNp7oa1A27HHs8oxpHtqfmAnf8R2ZsLexu8dm
Y42lXmd9NvDePhv3Z/BtExNoYXmKXB2Sif36g9I7M+FHH5OJ+8Dc8ecedAfs
aOantNRzRpeZlAnf9YRMfFuJP5r6XxtXJcZbU+/9IK+7j53o4K7KZdSlTaX3
l7LBvmdO3+A25/1e73+o8C1nqdsxTqlxD95eMs3C13+VxJ2dPyXxzWTXdHyv
3U5wUjr0zi7G/dEGnlkz/xBCxzrDugw6Df8mgmfjo+f/QuiwHdzPwb5jd7hl
Gfoqvv1j9X6Mx2YOfL9JHvfa2vnfKFmvsUFwhNP2Hq+n53Gqx0bHPCcdetsl
XnPGtINPvNw+8j2+T45vuoPXzDz5P05z/+eLtZ3ptZ7r8f7gPuiL2FNP8+yB
hsI3DczlLM8HfZd+TjI95/2d90ket6vXDH47e+7neqyjs1Hv+Gz8m6fM/x9r
ME4O9J51dV/HuR/6Oy4buO2cjX/VcI4YHx0DfaGvx/ljOnRRdArkckGXvNx1
znG9Sw3owr393Nt4buN7huirfHsLT4Qf9nJ5b+PjTOPkEP8fgP3ln5LsNf+4
Iy7GdwjE5h7MxN4dmQ2eA96rTDOdTTen+V9z+/4557Wc67F+6/EONd1CyzN9
h5Mzvxj/KfdHskETvzIdcaayph3ord40x30Lxu2YjbuT7Uzfm6xzom92cF1w
cYjHbeX5Hu28DqZf6hV0VvRNeDn7VGeaLfY8WrsP+qr1O/U2W9emPXoHOgYx
zguT+EbmnCT2qp/xf6xjTsie3t5jaIF4L3gH50usA6Ibdkzv5wdP5ePOzxD1
OToTMcMbrL/Q9njHh7o6XkTM8HfmqzNsayAbbrdfEf/iu/Z34ffqYvzso1/H
joghlRoPee9D1nhjnayHdYPrjsZrgY9AI5cl8V1T3yTOUFfTzP8BiHUfxA==

            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{5979, 5978, 5974, 9, 5980}, {6995, 4136, 7023, 7000, 
            7001}, {6786, 6785, 6987, 4067, 6983}, {6825, 4037, 6965, 6812, 
            6813}, {7018, 4788, 7084, 7082, 7083}, {7083, 7082, 7017, 4784, 
            7015}, {6749, 6748, 6750, 3068, 6741}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9158834219619976, 0.9357645959520339, 0.99183897247716], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVltMl3UY/kKm9kcw1AXf76usi9ZBPLROF21armlWF0h4JLc0XBsOurCB
liR4uBDUlkJ/K0EwQf+QJEFqYgvTlRAk03Q2rNXWumhzbd20uup5eh63Lt69
3/c7vL/38LyH+9a9XlKVFUXR3NuiaAL4S1OiaAWoFNSaG0UtoHbQ8YlR1APq
BjXgQhr0Hig/RFFZKoqmgv+eH0XNOHsTvBprB3H2MKgRa3tBu0G1WO8E35XS
WcpuAz2E+205UXQ/+JFEMjrASwqiaDL0KgUvCLp/J/gH2BvHmRbwGqxtADX5
Hb63Hv9x0DsB/Dfc3wR9ny7EGvjuLNnxbKH07Iqj6HKedDsKykBu3zToj7tN
+B7FXnMin2Tsl1b8/wIdDiW61+W7tIm20R+vWU43eDl06cdbp0AL8e5mvP8M
+FW80Qnbvwd/AjSM74vgq3Dnj6mICfjKlPy8ypz/X0DOMuj9QnYULY9lN318
AJTOlT+qcK46KK654DtB/0B+OXgGtBTrUyH/a3xfwPoI+JOQNQsynwLPxd4h
6DAF/Bj2M6AOUBv+f4V97eAv4s7fWHslCBdd0OsIaBu+94Lqs6TPupR0PA9f
HsD3EPgWvDEbZ2vB34WsYaztT+SPT0G9OcIH/c0438D+GOhyvvDXnKV4Miat
jgHfbATt8bvN9kWbOf9HoesnkD0G/kZKslt8pt3vXXQsvgnyabP9uhNyd2QJ
T1XG3QbHg3FhfG/FoNE4+M9XudIrbexxjfhpdcxuOn9o137bVpeSfhnb1mn8
PQKdzkO3eUG+pE+ZP/Px9lzErhhUxG/QPNAI9haCPwf60L7nPe7R/0Xm/L+e
ozhQJs9RBuUuAK12rBnzvc4zYnJ7LNmZQmGdmK8AfzuWLmXgb8V6503wM3nC
UgtoME+c+mdcI2h3i/FJnHYYU12uKe0TtdaIvT7gM04Uk+2gGlCf8XeSNhvP
xDV9TzlNxmnaWFmbUm1jjatxbCmP8f8JNJSjWFemhON8vHcC7xaAz4YOZ7A/
x3q2W9cdxj51uoa3e3BmUpCP6KutWLuB/3HYPx7kc/p71L7n/wWvjXidMRiy
Tj/iziWsHYScipT8wvcp74bvNDoHWb+rfYZnaXuj14kp1j7WygrHrgd8BuRv
xdp08Ct5euuy8VCULZyNeZ37tc7lCbF8T/uZK+dtB+PMOst6+zH4O4nW9yXC
8inQ6RzZOM/YnRtUAyYH2c094pg5Qd02pqQD7R03XXKNWImaPwm9Y0WB+gf7
yMsF8uOI77Amr3VdZu1mT7meL3wccSwHc5Q/jFmx7Z6TLfx2uh7yDG1gDT3q
XGVudzsm9PcDQbi/HlSb6h2bqe6hfbH8Tv+z/1CvcuONeCaWqWdvrFpzAnwX
7v4JHK5JlNcjxgtzcr37xNVYsWU/7LYujPtmx2eT84TfZ1m7EtXX9xO9w3p2
1vlEPahzuWXzjW1BM8NW8I2gYnzvC/LTLPuqznlAm1tcwxjDH4IwQCxcs3/o
p9sT2VXivrnefljgWkQMjBl3jNdGzxvE+M9B+qcT1fge95Jy12bqfdDzA+cI
5kOVZwj6YLP9sNq9jz1wv+cd4oLvUT7fT9tX9NnEIAx/Gcsf7LnLQQM5qg/U
5cVCyVpUqPePGiect4p9596gWM4MWl/qve5YeMzEunfF+fhXrH36fkms3Hwe
/JjP816Z6/CKWDnAXCgrUE6y7jJHK10DiTvOHfR/P2i55xDOIynrVBa0R/9w
75SxSRwVuDYuCvJtpf1LO7vcp7cZeyd956xxxrMdnjMrnZuMO/Ha5/rcEytG
nKE4u9A/eYne7/G50iDfbwnCRrV7fEOiGenzIEw1ei6Z7lpXGPSf9uxUYhwy
zwbw7ih7gWXWuDfPdLzu8vzTZKyUe9Z6lXgMwuCVIJzVWKc61zHKafXswbmA
vqMPZ+D9JcbMYvA17r/sw/2OFW2eFpTzd7i2cL6t8wzU8L//eq/tcd9r8PzU
YJ3v9jzxYHCN92zwVVBt/g58mXWgLswF4pB4PJxo1vkoETbYl1tBjwfNFI+C
zwqaIy8yho5RqbHUajzdE1RTHw6ax2o8Yx137WF8z7nmXnBtHvJ8Q8xUGEO9
rs2s0ftcl9KuMbfmjmHfZVw567P2cmYfslyu13r+Yp+cf6svZWvuZm2bDfrM
81BfkJ2097GgHnHMcw7X2NfYu4eDbPjWc+gZ16nBWPXikue707ax1zWMZ6pt
I3G0OFGtYQ1eYNl8o8h+pr8XGT/EEfUucl0esHzWLOYD86I/yGbafs56DfhM
vXs6c3fQ+zz3L/GnI9A=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFlsjlEQho9f8xfd/FLa73wlSEjRFonlQmKLpNWSVKu1lES450JiLSW4
sERCa4u22tKmElq1R4mtsZRaSilFSMSFRCRuhCvP5HXxJO85c2bOfHPmm1Gr
1xWtjTjnVkAcZAbOzY06NxOWohdCDoYCKEE3hc4dT3LuAOxDH/TOXUpx7jJk
sB7Kescg57ZBGroAn+w4xchFB6HOX4AYuh6+xpz7Dg3oU/Alpr069DCvWHuh
B/+V7P3C9yeUosuwL050bgnksm6EHzHlaLnm/s9/AuQFytFytRgD0VGoRf9N
cG4PsRIthxTtma3CK3YpbEav8Tr7B0rQMwLFzoL56FVeNjuzGj0dPqE7YZrX
ntks/m70MSgk9iKoQV/2qu1BuILOgJN8+3EY7uVjvlbD/eiHXrG7oJ37+1j3
JTv3FN6jM71867CPQ4+FGnQzZKFnpzu3iQbYCLPQSewVJyqn38Q7B9X0wnpi
jMZ+nnVDVHvzWJd71cZ8NqCvQjd3P4ePaO/1drZntrP410cVw2K9YK+VXC5C
NzqfmFURnWkO9A32LVaDkeidvEkv79sH1eg5nN8c0Td8S6Ov8LmF701oDYRp
O9OCLg7VO/bGy9EvLSfuvsEdb9ADoI11C7zhfK+X7Q68Rb+GpgT5mG9yqLez
HhxktQ2Vm/VwLTo/UG9kkcNW9GH2OojVCYesf8l5AP9dPFShnxDjLrE74IH1
XppsdqYIfTrUv2I9fgZ9ArpjqonV5jk+7QmqaRf6CHtd3PUBjqKfesW+DvfQ
WwLllg3l6MdevWQ5dKIr2MuLaibYbHjl9VZWgx6vmlht7JveoXN5j8qI3tDe
sgCORLS3AF0dqDesRz9w/plXLpbzHWyVoWpjOVeFmkE2iwqp4Xb0GK9eth62
XraetN6sgFTWqaFmi/0fNpsGwzJsZRCzWRVIW4+0odO9fG1m2ey65PXvmc8Q
r5pZ7azGn1n3D1SrXu6fyjreq1duQDb6NvZr6PswmXU/q0+CargL26NA/14j
jMA2yeusnbGzOV6xLEYUPd7rrPXkRPQUr7ttpthsWRKoNjbjbFb/A1b/3XQ=

            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9632749162146741, 0.9721310731614853, 0.9470501667993785], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVFtLlFEUPZl8hb52OedQUUExRTd/glQYY6POTDejCxT4FAlBb2JI2ehA
6nwSmo7OWM6kUtj40Guv/YF66PJfWou9wnnYrO9c9t5rr332d+LRaOFph3Pu
GWwv7LJ3rpQ41wzOzXQ5twQbx7qE9X3gG2AWd+pw6gNOYn0X+2VgPzALy8N2
cD4L3AZuwpqwDdgD3BvuhA+whnUVtqqzBuwjbEU+PCsixxfgoLc7PN+C3YF/
L+JngA9xNorvJXzvicbjEvAV1kP4ngAOImcBVoTlcP8J9hewf1NnOeA17D/G
fkW19KmeRViaWA3MvSxuh5FjDPocjFYz7zJfS7VQg+uIuQbs91bTsuINI0ce
ee8B3yn+oqzZptmOYn0O5rsJnE9M21Q4B5tW7hvSnzUNqOYB5H6OvdVgWq53
GMcr3mIy9kawnrK3OWlyO+zmII+X0oUaZ6UPe9lQ/8h3CP4T2P+Au1e9vZ21
YDGm297DirSgT5rs1tkSP8Zmrxi/How/6xhX39n/jL5fsI84G8H322C+vfKv
dZvvAvpU7ba+863UxYFv8C/qeY3zr8CT3vrxKVhNVfFdD8a/If3Zd+pehk12
2czUFJM+SbReXAAejZb/SDQ+zE9OB6LlYs6a5iCF/cF+Sr7BOJFbBF6M9j7P
RpvNWc0n9Z7RnLb0ZqgzOU6JZ0O6cn7ox/vMcTqaLqcUk7EqwPPR5npftPpY
51RbzdTiWDTNvwebAebzwOPRcvyK1nvyei/d5vSeinqb7G/BG99b3rhQH+qU
//9+O02bqmavrDjk06PZ+xaMN/mzF+dUF+urqFbW91P/sf3R+ruluPOaJ/bj
R7DYh+RbUo/PqH8Z9YQxK6qT9f7WPvd4f9vbTPI/9A8tQ7cY
            "]], 
           PolygonBox[CompressedData["
1:eJwtkstKllEUhjcSn1LDor617eQgqOyggy4grCzT9P/zgIUFCY4iR83C0jBL
iEgJS81DZw+gXoFTb6Am6r34vLwNHnj3Wnut793rWw1PhqvPalJK1+AQ/IyU
3hUpTcJv9C+YQI9CV5nS8ZzS28MpvYAT6E5imzTYgm50HbEB7g7CVXQtPCgc
+0evJs530RVozq5R7QZU0aPc6SLXBq/Q6/AF/RlW0eeomT+S0iJcQGd4g5dx
iGzP8i7PLfRrJPa0cM0ldC/5ezy0E3rCNarVm/5ybqVmCS+LcAc9GfbfDWPo
l3Ad3Qor5N+H36Y74+iP4bcrNoGeheHCHjq4/z08yxG4WbqHemkmr8ldzK4f
gtPonbBWvd5yPvvtM/g9hd6FD+gp2EMvcP954W8+pvd8OKcZ7ZPfDs9e7yk4
n8zuNQtn0N/C3nSu59wXntV9eIieCXuRpx76f/rvT55vl+6hWnk6mz1DzXIK
bqErpb8nj0vhmHLL0I4us3drmvzRbA/qpxrV9pbeFe3oD+pXYA79ldhaGGn9
wz9hz/KufzYS3intVj+xR+Gd0m6px43S/1iz0Q5ucB7gXOVuBfq1C+FaxZS7
kn1f//9ytmd5184eQx8A1CFp1g==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9876139305306397, 0.989146056214023, 0.8549327554349608], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1kUlKg0EQhZsYcgW7deUdvEEU3Wg0Rv8/zgR0I8SNoBshCv7OU5wVRRxX
xl2icSGId/A6fkVVFo/3+nV1VXVVV2kxX04557pBG8h655KMc69BIfoZfscf
Qa+jD8AC+hS+AsvoW3gKxGnnxuEqKONfwvdgBT1MjgbFmuALnODP4R/Bdc6f
djdP3DcceT2L/wbynGtwAd7iTZG3CVwBPdRdg3u5W8V/NE/6yRpHpovWp/Q7
bXGSI7K6f+3qSWxfWvuW/js7nNslbhK9DeeDxgzCh6CEvxe0P+kzBxeC5sjB
v3iVjPY35FW/4I96ncMFesP+tQ9PeH0Te527zH8H3rQejuEBr7u4Rj8FneuY
151Iz0vgw+pKrp+UzrphO0jsXv4m8Q/kmPG6uzvbf8ViWm9aum77Og9a5ybo
uWZx/V5nchbUa9oeY/vXLPwPaiRYzw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkslKQ0EQRYsg7xfsXgr+SRRdaJTEKfqMEnAlxI2gG0FB4zzPivOwc9gp
uBDEf/B3PJfqxYVTXdW3q7q7rT5TbhTMrB21oDyY/bDwgcbh5WjWRaKSmb0R
PxMvwk1UJN4jnoLraBdeRzlcRWtwjZpPvH7RGHzF2hy5WXQCH6HpzD0O4afo
3l/UP8IlVOT8YdQTvSf1Jk9596FX+AVV4Dx67QiqwvdoPvMz7+DR6LkOVINv
0ELKn8Pb0XvXDKvwaZpPPfbif03cSP2Xgntqrzw6g68ppzNvyR1Hvxt5DJKb
DH4XqtfZF2l+eU5onnTfmrkMX0b3U/4A3k/3K89u6peiz6I9equN6G+lGVbg
9+Cx8gPEZ6l/nbkDP6T59ab91DbT/NqjvX+tZt8F/xP6G1tpHvWwCQ8Ffyu9
QRn+B/mJTfE=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9951473231093345, 0.9920289397487888, 0.7131942515804821], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtj80KQVEUhTfu2NS914SShzAwMDASuUzkJzEVJl5BRAiJJK/gFWRGUgY8
iDLlO909WH1rr7PPPvvEWz2vGxQRF4VQ2xa5EvTh0vH9Hm7QHX+AJ84ilsgQ
37H9vAJH1C75GDaoL+R1mKD+MDwKV+iBX8MwutHziogc8Wd8k/6depOldWYK
JtGXuzFo6ZwB/ROdP4Vlx9/N7FjEZ/ElOENPerYwhzLkeehpTwHWdOc3+8z1
rQWsam7+FNA5P9v/m8nNvT8ilS59
            "]], 
           PolygonBox[CompressedData["
1:eJwtkMFKAlAQRafyH3xPNwXhRwS1aNEy04KSNmIgJFJt+gUxCpWKSKR/UdoV
IrTIDwna6rnMLC6ceTPv3jdvp3Vbv9k0sxIqoONsdggcoTq8j4pR1+Be1CXU
h7fR/5bZH9qFX9EC/kEDuJy9p/kDeFk0+yRwis6T2Wl2b2WewPfJ78uzQr1K
7qWzAvVDdi95PsLXyb1mqAP/4v8d/up9MDOP/hhuJK+/0BV8l5yVsUG/Gu/R
jmfwRfjrzZfwe/ZZ3XnOvoP6ymzDzeRZOtPdSfZZZb5lf+Ms6i78FP+jfYfw
XuynfP39KP5X+7/AayJsPo4=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9930911344914055, 0.9876309602075978, 0.4893908098441321], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6419, 716, 6251}, {6480, 1093, 6483}, {6465, 1049, 
            6466}, {6461, 1046, 6458}, {6250, 716, 6249}, {6249, 716, 6102}, {
            6462, 1049, 6427}, {6252, 716, 6250}, {6481, 1046, 6461}, {6466, 
            1049, 6456}}], 
           
           PolygonBox[{{6456, 1049, 1046, 6460}, {6244, 6243, 6256, 6257}, {
            6234, 6233, 6243, 6244}, {6402, 6401, 6399, 6400}, {6483, 1093, 
            1046, 6481}, {6262, 6261, 6438, 6439}, {6400, 6399, 6404, 6405}, {
            6433, 6432, 6436, 6437}, {6405, 6404, 6261, 6262}, {6439, 6438, 
            6432, 6433}, {6458, 1046, 1049, 6462}, {6460, 1046, 1093, 6457}, {
            6257, 6256, 6401, 6402}}], 
           
           PolygonBox[{{6415, 6414, 6102, 716, 6419}, {6437, 6436, 6427, 1049,
             6465}, {6251, 716, 6252, 6233, 6234}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9732001220643498, 0.9212598601917796, 0.3503879642626305], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6429, 1010, 6434}, {6092, 713, 6242}, {6234, 713, 
            6251}, {6242, 713, 6406}, {6434, 1010, 6463}, {6405, 974, 6400}, {
            6439, 1013, 6262}, {6465, 1010, 6437}, {6244, 713, 6234}, {6445, 
            1013, 6468}, {6460, 1045, 6456}, {6437, 1010, 6433}, {6402, 977, 
            6257}, {6457, 1045, 6460}, {6395, 974, 6448}, {6410, 977, 6391}, {
            6448, 974, 6441}}], 
           
           PolygonBox[{{6441, 974, 1013, 6445}, {6391, 977, 974, 6395}, {6433,
             1010, 1013, 6439}, {6468, 1013, 1010, 6429}, {6416, 6415, 6419, 
            6420}, {6257, 977, 713, 6244}, {6262, 1013, 974, 6405}, {6406, 
            713, 977, 6410}, {6400, 974, 977, 6402}}], 
           
           PolygonBox[{{6420, 6419, 6251, 713, 6092}, {6467, 6466, 6456, 1045,
             6464}, {6463, 1010, 6465, 6466, 6467}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9420889882594458, 0.8081091666890456, 0.2722616444886386], 
         GraphicsGroupBox[{
           PolygonBox[{{6464, 1048, 6467}, {6467, 1048, 6463}}], 
           
           PolygonBox[{{6396, 6395, 6448, 6449}, {6421, 6420, 6092, 6093}, {
            6407, 6406, 6410, 6411}, {6442, 6441, 6445, 6446}, {6446, 6445, 
            6468, 6469}, {6449, 6448, 6441, 6442}, {6430, 6429, 6434, 6435}, {
            6392, 6391, 6395, 6396}, {6469, 6468, 6429, 6430}, {6417, 6416, 
            6420, 6421}, {6411, 6410, 6391, 6392}}], 
           
           PolygonBox[{{6435, 6434, 6463, 1048, 6431}, {6093, 6092, 6242, 712,
             6247}, {6264, 712, 6242, 6406, 6407}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9038571367804781, 0.6563195375039007, 0.24148837706345383`], 
         GraphicsGroupBox[{
           PolygonBox[{{6430, 1051, 6469}, {6431, 1009, 6435}}], 
           
           PolygonBox[{{6435, 1009, 1051, 6430}, {6422, 6421, 6093, 6094}, {
            6418, 6417, 6421, 6422}, {6265, 6264, 6407, 6408}, {6393, 6392, 
            6396, 6397}, {6450, 6449, 6442, 6443}, {6408, 6407, 6411, 6412}, {
            6094, 6093, 6247, 6248}, {6412, 6411, 6392, 6393}, {6443, 6442, 
            6446, 6447}, {6397, 6396, 6449, 6450}}], 
           PolygonBox[{{6447, 6446, 6469, 1051, 6444}}]}]}, {
         EdgeForm[], 
         RGBColor[0.86995333150853, 0.5023702761988855, 0.21319821088622598`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6444, 1012, 6447}, {6447, 1012, 6443}, {6094, 979, 
            6422}, {6248, 979, 6094}, {6422, 979, 6418}}], 
           
           PolygonBox[{{6266, 6265, 6408, 6409}, {6398, 6397, 6450, 6451}, {
            6413, 6412, 6393, 6394}, {6409, 6408, 6412, 6413}, {6394, 6393, 
            6397, 6398}}], 
           PolygonBox[{{6451, 6450, 6443, 1012, 6452}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6409, 976, 6266}, {6452, 1015, 6451}, {6413, 976, 
            6409}, {6398, 973, 6394}}], 
           
           PolygonBox[{{6451, 1015, 973, 6398}, {6394, 973, 976, 
            6413}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6266, 6409, 6413, 6394, 6398, 6451, 6452}]}, "130"], 
         Annotation[#, 130, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6418, 6422, 6094, 6248}], 
           LineBox[{6444, 6447, 6443, 6450, 6397, 6393, 6412, 6408, 6265}]}, 
          "117"], Annotation[#, 117, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6247, 6093, 6421, 6417}], 
           
           LineBox[{6431, 6435, 6430, 6469, 6446, 6442, 6449, 6396, 6392, 
            6411, 6407, 6264}]}, "104"], Annotation[#, 104, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6464, 6467, 6463, 6434, 6429, 6468, 6445, 6441, 6448, 
            6395, 6391, 6410, 6406, 6242, 6092, 6420, 6416}]}, "91"], 
         Annotation[#, 91, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6457, 6460, 6456, 6466, 6465, 6437, 6433, 6439, 6262, 
            6405, 6400, 6402, 6257, 6244, 6234, 6251, 6419, 6415}]}, "78"], 
         Annotation[#, 78, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6480, 6483, 6481, 6461, 6458, 6462, 6427, 6436, 6432, 
            6438, 6261, 6404, 6399, 6401, 6256, 6243, 6233, 6252, 6250, 6249, 
            6102, 6414}]}, "65"], Annotation[#, 65, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6246, 6231, 6103, 6236, 6237, 6238, 6235, 6232, 6240, 
            6559, 6553, 6557, 6550, 6555, 6546, 6552, 6542, 6548, 6547, 6544, 
            6543, 6540, 6539, 6537, 6536, 6534, 6320, 6484, 6479, 6482, 6478, 
            6476}]}, "52"], Annotation[#, 52, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6227, 6223, 6228, 6226, 6230, 6564, 6565, 6567, 6211, 
            6566, 6224, 6563, 6213, 6561, 6562, 6683, 6225, 6560, 6222, 6558, 
            6239, 6554, 6221, 6551, 6229, 6549, 6216, 6545, 6535, 6541, 6533, 
            6538, 6530, 6319, 6532, 6529, 6528, 6494, 6490, 6493, 6489, 
            6492}]}, "39"], Annotation[#, 39, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6219, 6220, 6214, 6217, 6215, 6218, 6568, 6571, 6569, 
            6573, 6212, 6570, 6572, 6178, 6676, 6675, 6680, 6677, 6679, 6678, 
            6613, 6681, 6682, 6838, 6877, 6556, 6876, 6875, 6874, 6688, 6687, 
            6684, 6685, 6696, 6697, 6693, 6694, 6700, 6699, 6600, 6686, 6698, 
            6703, 6664, 6614, 6663, 6701, 6702, 6662, 6591, 6705, 6704, 6657, 
            6531, 6313, 6527, 6440, 6488, 6526, 6491, 6487, 6477, 6485, 
            6486}]}, "26"], Annotation[#, 26, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{5976, 5975, 5970, 5972, 5980, 5979, 6036}], 
           LineBox[CompressedData["
1:eJwNzjkyAwAUx+GXcQBLY0mVygEsKRQJjaAzTpAD0FsKrcaIWMe+lcEkCqMx
CiHEvnapnMNXfPMr/jNvXio/NT6ZiIgJMh0RWf7aIwZ1iFJnxClnnFOmuSui
lRbaKHNBhUsWkhEnHHPEIQfss8cuO2yzyRbzbLDOGg13VnWFIsssUWCRX/s3
P3TzxSsffPLOGy/Ueeba7096wyO3PFDjnit7Ve/oJ00vPfTRZJ9jlmlmGGWE
AdLkGGaMf13HOak=
            "]], 
           
           LineBox[{6741, 6749, 6746, 6732, 6752, 6754, 6788, 6795, 6937, 
            6929, 6935, 6726, 6932, 6798, 6940, 6921, 6994, 6793, 7005, 6998, 
            7001, 6995, 7002, 6925, 6924, 6918, 6789, 6756, 6755, 6741}], 
           
           LineBox[{6780, 6774, 6669, 6647, 6771, 6802, 6807, 6813, 6825, 
            6927, 6926, 6666, 6747, 6983, 6786, 6783, 6777, 6740, 6780}], 
           LineBox[{7015, 6818, 7081, 7086, 7018, 7083, 7015}]}, "13"], 
         Annotation[#, 13, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5971, 5969, 5982, 5968, 5986, 5987, 5997, 5983, 6002, 
            5998, 6011, 6012, 6005, 6009, 6021, 6022, 6019, 6020, 6028}], 
           
           LineBox[{6033, 6029, 6032, 6030, 6031, 6026, 6027, 6018, 6024, 
            6016, 6017, 6014, 6015, 6006, 6007, 6003, 6004, 5990, 5994, 5991, 
            5992, 5981, 17, 14, 11, 584, 581, 578, 6136, 6203, 6201, 6202}], 
           LineBox[{6204, 6206, 6104, 6205}], 
           LineBox[CompressedData["
1:eJwV0klLFVAYBuBjWrsWgphDYTe1yCRMy/odLYLaJbYTJQgicggtZ+tiA5GU
hAujXU5dTY0cNjnkWGllZqU7zfoDPXfx8L7nwFmc75xIScX58oQQQhfVaSFU
0sw1rtNIExMHQmiQDxjT78t2OomybC/GU/0Zj3lJNy/o4B49vKKXG+khDBJj
iD0ZISSRyF7eMU4hE0xSnxnCTRq4QyO3+cAsc8zTxCLVVFFJCzW00cpdlljm
Iwt84jMrRFnlC1/5xjZ/2eIfv9jlDzts8pufbPCDder4zhodzDDNe6boppZb
jLjnW0Z5wzBDxHhNDtlEOBLfM7sB+ugn12yTOEgmh0llH+kcIov9dHmzZJnD
Vf0yKfpxCiizTou/szwpn8sMeYZS/bQ8Rj5HKeIcZymkmFOcII8IT5y7wkMe
0c5FLnAp/rf4D5E9aTQ=
            "]], 
           
           LineBox[{6272, 6267, 6271, 6423, 6273, 6269, 6425, 6424, 6428, 
            6426, 6453, 6454}], 
           LineBox[{6274, 6259, 6090, 6258, 6076, 6255}], 
           
           LineBox[{6276, 6241, 6277, 6245, 6278, 6097, 6283, 6275, 6284, 
            6293}], 
           LineBox[CompressedData["
1:eJwNxUk2AmAAAODfKdi6kIUjdACdxd5Cr8cispKpgVfmqSRJEiJDRCmt+xbf
+6Yj0dm5iRDCDLGpEBaIs8gSy6ywSpI11kmxQYYsOXbZ45Aix5xwRZkS19xR
p0aDJ55p8ckLr3T4ossPQ/755pceI/r8MaDNG+98cE+TBx6pcssNFc4454JT
jshzSYF9DkhMhrDpLbZJM88OY/uCSAc=
            "]], 
           LineBox[CompressedData["
1:eJwl0klIVVEAgOFTGAVFBEFmRuCqbRsHAikSg5AIi6AgEoenT32DY5mCIG1C
cNGmRbRpUQRlWuGUaeUQuXddEC1sXISpaVnfocXHfwbu5bzzbkFN9mxmSwhh
hNq8EKpZyg3hAz9oNE9STxPNXD4QwiUuUkEV1Vynn/35IexhH+Xme3VA83UH
ldyI79DzXCDLKZ5ab9UznGYnFfRZ76WLc/TQyS5WnKlNb3KLOxR65oHm6CGO
cowNa6V6ggJOcpgjHLe3/WAIa3qbTaa9O9j7aPydGuPPulWr2EYZtdRx3949
6o0TJEnxzlqzpnlv3KGdtNPGFa4yz0ve8JZlFvjJJ1b4xV82WeVP/F38Zo2v
rPONLyzFMzPEYLxjhhnlCc8oZoQi7jrfrM4wx2PzEh1nikleMM0YEzznNa+4
Rhfdce7ZQR6SYDfDPGKIDC1kaSId74kUjSRpiPvxG4z3pu200hL/dzKkSdFA
gsXc/9/zP1TqdHA=
            "]], 
           
           LineBox[{6298, 6297, 6295, 6294, 6286, 6285, 6518, 6519, 6520, 
            6517, 6578, 6470, 6308, 6306, 6298}], 
           LineBox[{7111, 7080, 7017, 7082, 7084, 7092, 7111}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6254, 6253}], 
           
           LineBox[{6041, 5999, 6054, 6053, 6044, 5973, 6056, 6055, 6052, 
            6061, 6062, 6060, 6057, 6063, 6068, 6067, 6065, 6070, 6075, 6078, 
            6069, 6074, 6086, 6064, 6079, 6080, 6083, 6071, 6087, 6088, 6089, 
            6081, 6091, 6096, 6095, 6152, 6023, 6145, 6085, 6155, 6146, 6159, 
            6073, 6077, 6158, 6147, 6008, 6149, 6066, 6162, 6151, 6013, 6154, 
            6165, 6059, 6153, 5993, 6174, 6156, 6050, 6160, 6179, 6000, 5984, 
            6163, 6184, 6191, 5995, 6167, 6046, 6189, 6048, 6045, 6041}], 
           LineBox[CompressedData["
1:eJwl0ksrblEcwOElRTFTci8mpiZnQiJFScelN6HUCRm7lFJKmZ2UgYk4vYWi
lJkP4AsYiJdyOY77JcrdSzgujwyefv+99tqrdnsXdHRHuhJCCMNcZYSwzRa7
XFCSHUIF9TRRSwPNtJCeE0KlpumIZmsyDfx23aqNNNNFNQvWe7SOn6RQw5D1
QfqJMEAfqcSzQujVUcaI8sMzc5qoeRRTxou1Uq0gnyoKKaLcvaTcEJ70D28s
OvtDj7ik3b5zTdBfxM2nPDDNPcEZd3rLFJOcOeeUHY7ZZ5cjTjhk1r4D3WPG
vKWbzJv/6TZ/WWGDdZZZJcYaS8R9m1ee+eCJkOl99J0JXojyn0diPDDOPZ1f
52mHtnFmPmCYG3a45ZqBjO//4xNF9mOF
            "]], 
           LineBox[{6605, 6607, 6599, 6604, 6603, 6601, 6605}]}, 
          RowBox[{"-", "13"}]], Annotation[#, -13, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6115, 6116, 6117, 6111, 6125, 6596, 6595, 6594, 6598, 
            6597, 6593, 6633, 6634, 6881, 6892, 6887, 6895, 6888, 7008, 6896, 
            6891, 6882, 6885, 6588, 6908, 6808, 6902, 7173, 6718, 6958, 6949, 
            6980, 6943, 6976, 6971, 6905, 7179, 6803, 6804, 6715, 6799, 6665, 
            6716, 6722, 6723, 6728, 6729, 6730, 6727, 6737, 6790, 6734, 6713, 
            6121, 6109, 6107, 6112, 6115}]}, 
          RowBox[{"-", "26"}]], Annotation[#, -26, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6124, 6640, 6651, 6656, 6637, 7177, 7178, 6948, 6953, 
            6954, 6947, 6956, 6952, 6957, 6717, 7172, 7176, 6655, 6644, 6643, 
            6648, 6649, 6337, 6495, 6124}], 
           LineBox[{6642, 6632, 6638, 6636, 6635, 6641, 6642}]}, 
          RowBox[{"-", "39"}]], Annotation[#, -39, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6639, 6123, 6653, 6652, 6654, 6712, 6650, 6639}], 
           LineBox[{7171, 7169, 7170, 6955, 6962, 6946, 6963, 6961, 7171}]}, 
          RowBox[{"-", "52"}]], Annotation[#, -52, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
5TWj5vKGhFT+DufKPgZmPgi6L7SSuJ6ukaL2H6VHpGn3k1AGfHUDrR90kShu
cxEmqPh3dPdY3lNn4GsasRX9JCb4MvxfVJGovmrxNqhzCilv+prmeymdWx33
3yI1T72lz635fVPY2ff25OseisdbwhasqLgtcinmAdWToM/m/vDrptZrjz+S
X5Lo+lwj/Et/EpFS8TE6VNzfjudu0Kk6DdayWq4W0KGlHaRCdFD4u3CqVruE
BC1xRez39XT0HHCryGsnERF2eEkwVWeGl4nD5ZQJBJ61cfBoI2Gbtt+iiVov
wsRNZlZ8AooRBixlKl/pkh0R0tS6zYrHDPjeGUd9juINWguJT/U6zadyKHyO
v0yf+T2Gs++FV2c0k3g0pLKs6DGlFy9HT/hcGoPk+JciR6qenl/W2M5ReBGK
EFImmTS8Wvy0V6aJxBah5XHmD0iIH9eZOneShuNydUOdDSS+yfF13Usjoelc
aj9QOIrlqD9sVk3iqlJheVAICc6X4502tBHUne6qFqLy70vTvVxG8WvpYrFN
qP4Igu/Q1Nup/zOUKdciKF4riC5pLokchn4eNz6J0vuUWFOW6hLq+SpHi4nR
IXA+zi04x5CYE2nIOjFEwE65sHal/hCyZgQ9VW9SfAg7cCL5BYEzWrym5pGf
cExaupNL9beKxa41HZEE5ScOV1yl9g0rjNablHmRkAtw6hY+TSDTItcwV28Q
zce1coL+pvAzS4vZRfnycoeF0sGIAdwMNZHYY0di9LzH/kAJyp+dsNMRG+2H
cdb+AFFKB0yZXP5SBhecs9mFO/T6MdNwhN5pSOKhi18Vp4qLJdd+qV+I6EMu
28UmdRNV95G5ayqJXMjfPpCTOdKLk/+GXZGWJ6EleD61yYWLf6+cC62x7oWM
brvsTxESP6LLI/bIc1GkryJTw+lBS69s9eAPypetFPSv7ufg4+xQ/tu71L4l
wM2lkk4gPM3B0zieA/aLBLO3m3pgKF8smEnp9cH1mUfLDnAgcsm6r7qlG0TN
XP7NKsr/5nLMtYU4UNsqcK7auxtZbnsPulH+lKZltC3/HRsWM//xVYt1w0k4
dtaC8r9PX4apqAaz4V58KbmqoAuShYPJGpS/9tnRufKhARu3L2huqbLuQsNB
lR3LKL03fC8vsO4LC4+3TNRWcjoRPHthjHQmwGt19mtiAQs13FTHyrud0E0u
D+uk+lxTx6txSQ/K5xTYkxWbOsHcvkSjzJBA3F8CnXeVWPhzViSsoqUD/xu1
bU1SIeA4erBGcIjyQZrvZCu8OxD98LGfLLVfzFGOs627zkRSCZnPNu9AgMsP
2YzvXMx6dAzfVGJCwlBux1qlDniqWNUoUPtmswJJb9P304issmy1nG/HYcYD
j0dUv4/5bDe34D4N/r3XTgT0tGN37pdlKsVcDOndC/9PeBrBzdmfc5+1Q+es
eemTZC7U/Ttl/AsY+GHXdWMgoh0Km1OdNG5w4V8plb3NloGL/TwrhF3bIUZy
eQq9uKjnddCdnaF8rvOWLMOd7ZgrNnuiZc/FSvP4mpKEKbhOHtP3XN2Oad/7
B54bc3Eqssv2gsEUKvqkorUm29Cjx/yqp0zho3XFyKbBSTyjn3sWk9KG2u8m
qa9EufgtdcibFTSJRzONHdwDbSh+HWtqPMvB/qMJc08UJpH4R3nWmq8NE5GL
5TdHOIh9lr3yVg0dvN5X4ivLW2E0GahQ1MRBV9z/Zjmn6ciL2DOz7XIr/sXP
WwOlHMj4pXQfEaDD/omUbbFWKyZT/KYFMjlwPBJf+jZ7AnPvaQXqrI/YPvvZ
WjuKg3TD6AQNiwk8Gi8SeZz1EXE250qOXeGAJvuPX8L0OCx5gj3XnfiIqadM
6X9OcaC8EHroT8Q4vshZ1d9f8xEm/O4Bz605cB8N0PPUHEfa9jUbxLtbcO/v
8ZFhAw5ya/xWdraMYbcj40Z4TAumXznvFlam/OXj87Pbz4+BfaVslHd/C3ZK
fXqit5wD7Tue3dniY4hPuLUjkL8FCd5HxU7+YuOS5+lS8RIaTJ7bpc1WNoNV
3+UTRWfjpeXxBH97GuhtCr/OXWuGuJBvO62ZDXWTW9E8saP4+irdflapGd0y
h1Qj89k4+mR++43mYXToXX2ckPsBqSrbgnSj2AiT8mPxCg6huMRuVk/nA07o
re4cOsPGi2BO8s1dg4jZsmlvz+smbNg9t/GOJRtj064W/Nf74Z2/NPGyaRNY
dkPBWhpsyB4a/nbrTS9s1MampBsbUXyyqqtfmI191YezBL51Y1P2fwYvbRtx
+UKm+k0mC1c0Wu3DtLsguj4x/EhfA4yv3wzRbGIh674571KKP8wHPgPfnRvA
E+3a0/2Uus97/cQy2zY0rrXSSJqqR12aueb1cBZ4+s9XLK9vRk6ySqDB+XpE
5qnd2OjJwvGiE2skdjTitjRPS9+3Ohx8I9LXbsHC69sHr0iWvsfpe4PrrgXX
QbqRsylgIwsrj5l1SWnWwEy87NzqJXX4P5MOtlM=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -98.26326710415958}, {
                    Rational[
                    15, 2], -98.26326710415958}}, {{-7.5, \
-98.26326710415958}, {7.5, -98.26326710415958}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -84.39009812748841}, {
                    Rational[
                    15, 2], -84.39009812748841}}, {{-7.5, \
-84.39009812748841}, {7.5, -84.39009812748841}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -70.51692915081722}, {
                    Rational[
                    15, 2], -70.51692915081722}}, {{-7.5, \
-70.51692915081722}, {7.5, -70.51692915081722}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -56.643760174146045`}, {
                    Rational[
                    15, 2], -56.643760174146045`}}, {{-7.5, \
-56.643760174146045`}, {7.5, -56.643760174146045`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -42.770591197474864`}, {
                    Rational[
                    15, 2], -42.770591197474864`}}, {{-7.5, \
-42.770591197474864`}, {7.5, -42.770591197474864`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -28.897422220803684`}, {
                    Rational[
                    15, 2], -28.897422220803684`}}, {{-7.5, \
-28.897422220803684`}, {7.5, -28.897422220803684`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -15.024253244132503`}, {
                    Rational[
                    15, 2], -15.024253244132503`}}, {{-7.5, \
-15.024253244132503`}, {7.5, -15.024253244132503`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -1.1510842674613215`}, {
                    Rational[
                    15, 2], -1.1510842674613215`}}, {{-7.5, \
-1.1510842674613215`}, {7.5, -1.1510842674613215`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.72208470920986}, {
                    Rational[15, 2], 12.72208470920986}}, {{-7.5, 
                  12.72208470920986}, {7.5, 12.72208470920986}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 26.59525368588104}, {
                    Rational[15, 2], 26.59525368588104}}, {{-7.5, 
                  26.59525368588104}, {7.5, 26.59525368588104}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 40.46842266255222}, {
                    Rational[15, 2], 40.46842266255222}}, {{-7.5, 
                  40.46842266255222}, {7.5, 40.46842266255222}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 54.3415916392234}, {
                    Rational[15, 2], 54.3415916392234}}, {{-7.5, 
                  54.3415916392234}, {7.5, 54.3415916392234}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 68.21476061589459}, {
                    Rational[15, 2], 68.21476061589459}}, {{-7.5, 
                  68.21476061589459}, {7.5, 68.21476061589459}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 82.08792959256576}, {
                    Rational[15, 2], 82.08792959256576}}, {{-7.5, 
                  82.08792959256576}, {7.5, 82.08792959256576}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 95.96109856923695}, {
                    Rational[15, 2], 95.96109856923695}}, {{-7.5, 
                  95.96109856923695}, {7.5, 95.96109856923695}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -96.12893341544094}, 
                    Offset[{4., 0}, {7.5, -96.12893341544094}]}, {{
                    7.5, -42.77059119747486}, 
                    Offset[{4., 0}, {7.5, -42.77059119747486}]}, {{7.5, 
                    10.587751020491217`}, 
                    Offset[{4., 0}, {7.5, 10.587751020491217`}]}, {{7.5, 
                    63.946093238457294`}, 
                    Offset[{4., 0}, {7.5, 63.946093238457294`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -106.80060185903415`}, 
                    Offset[{2.5, 0.}, {7.5, -106.80060185903415`}]}, {{
                    7.5, -85.45726497184772}, 
                    Offset[{2.5, 0.}, {7.5, -85.45726497184772}]}, {{
                    7.5, -74.7855965282545}, 
                    Offset[{2.5, 0.}, {7.5, -74.7855965282545}]}, {{
                    7.5, -64.1139280846613}, 
                    Offset[{2.5, 0.}, {7.5, -64.1139280846613}]}, {{
                    7.5, -53.44225964106808}, 
                    Offset[{2.5, 0.}, {7.5, -53.44225964106808}]}, {{
                    7.5, -32.098922753881645`}, 
                    Offset[{2.5, 0.}, {7.5, -32.098922753881645`}]}, {{
                    7.5, -21.42725431028843}, 
                    Offset[{2.5, 0.}, {7.5, -21.42725431028843}]}, {{
                    7.5, -10.755585866695213`}, 
                    Offset[{2.5, 0.}, {7.5, -10.755585866695213`}]}, {{
                    7.5, -0.0839174231019986}, 
                    Offset[{2.5, 0.}, {7.5, -0.0839174231019986}]}, {{7.5, 
                    21.25941946408443}, 
                    Offset[{2.5, 0.}, {7.5, 21.25941946408443}]}, {{7.5, 
                    31.931087907677647`}, 
                    Offset[{2.5, 0.}, {7.5, 31.931087907677647`}]}, {{7.5, 
                    42.60275635127086}, 
                    Offset[{2.5, 0.}, {7.5, 42.60275635127086}]}, {{7.5, 
                    53.274424794864075`}, 
                    Offset[{2.5, 0.}, {7.5, 53.274424794864075`}]}, {{7.5, 
                    74.61776168205051}, 
                    Offset[{2.5, 0.}, {7.5, 74.61776168205051}]}, {{7.5, 
                    85.28943012564372}, 
                    Offset[{2.5, 0.}, {7.5, 85.28943012564372}]}, {{7.5, 
                    95.96109856923694}, 
                    Offset[{2.5, 0.}, {7.5, 95.96109856923694}]}, {{7.5, 
                    106.63276701283016`}, 
                    Offset[{2.5, 0.}, {7.5, 106.63276701283016`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -96.12893341544094}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -42.77059119747486}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.587751020491217`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 63.946093238457294`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "65.34068142305105`"}], ",", 
                   "145.49795284418929`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "52.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "39.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "26.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "13.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"13.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"26.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"39.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"52.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"65.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"78.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"91.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"104.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"117.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"130.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693271439075743*^9, 3.693271615655843*^9, 
  3.6932717902858315`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
gZADWW/RWJ/Agy7FeLcOjHeTJ/BpQng14nmFBD8kXk225af16qs8CM8tqqlD
9O8aRzydcJMHAV5bffQR/WKMP8vG+DM3Ro36UhYPdnX3/qpF9P49FXt/KPPA
5torw0O6f+hzCfrdf6E/i/Fq0zBejb3AKdl0OxdC9C7Yr0T0jIoPzR0hXDBd
MWFkrI7yEF5tBsafFR2t0RvxngPB7nNPN+Ypw7UbPy3bWzgwmRJBjRmjDFZE
P6eFY0fBSZoI+HgV3Nr7QRnmJ6fZlCmIwF7pVYytjspC/ZxZ7OtbgysG+M5x
D8+ZIHuYf2TSTs3SAf4F9naXlgXKQvbZStjnSGyfxdg+jTH+f+G/4P9rMP6f
7LduUw7Pb3OXgzlRYTIUFhPyQ84ofVssB1oizd0R15nQQuAtftXrtP04Iw+5
nTObJXWYICUHpd9j5WGT59rwvAdM0CL6LSd1+fN8VomBg2uFhlStMphWHr69
ZrEYTPXU8UifpSzUXzpjsexnaWNReNcy+5PVO2V4dFdT9PgkURjpuMn0qN0f
/bsQ+vcl9B+O9S/A+57BeF99ZlbVcaT3tJ/lx2ZJ8WCFkmTQZERn+OLq+iWS
POgl8M2WO1lVNk3KIH1whWIkGke/oj6ys1cG7+DGKA4aC/Dccf91/RL4Ztbh
Absv6L1Gz3nkcRbZ4amA5lo+4idjE+XnjTccIXyzi/FEpiWirwlP3PXDmwtB
RVuuTkX03WedJ4Vt4grJO5mQdzmWdwqWN5fAYw1Gr3FOaER2ltin4ZaG/N+8
uKfBNsrQ5mA7q+IqWwiPFRl7fWER0jvL2eiBhDUH9EU+vnqL3pOCtcTZIos/
eCx3LC/7L/LexvKSeKAAtozu+9fK4NPcOfN+MAte/j6AnY6erzqDpxjEEsJj
5b7IKDJ9qwyPLX6ms7kob/DbJP9tBvIrDh1p3ixh/BkprxkhL4k3Emn4P/vP
Iex/I7Z/Em+0hR9GX1ilAKplGz+lTWLCJJe1ut6vFEBM7X73k+fMIfxQO8YP
tZ5sMMqgKIH029avy6YxwSkjKvILRwnUUHpSW8cc6h/ux/3D3w56il56IAEB
oxlbviA/0DLZ+V52ugT8nJM70sYK7dtEv3RC1/2o/YfFoel+p01AjTLE7ukx
iQ4TB+5voIm1MozC67cdr9+JxPqdjtevEV6/AvzEIYyfMH1rrWLPR3ZlY5Aj
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
rxzGCw==
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6907, 2311, 6748}, {6088, 2311, 6757}, {6753, 2311, 
            6760}, {6723, 2311, 6088}, {6757, 2311, 6753}, {6760, 2311, 
            6907}, {6748, 2311, 6723}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.3705236467574914, 0.49535069258653014`, 0.9448304170235593], 
         GraphicsGroupBox[{
           
           PolygonBox[{{7169, 4032, 7172}, {7454, 5944, 7452}, {7452, 5944, 
            7455}, {6308, 766, 6332}, {6315, 769, 6314}, {6329, 766, 6059}, {
            6287, 754, 6304}, {6266, 736, 6295}, {7172, 4032, 7153}, {7153, 
            4032, 7171}, {6296, 748, 6040}, {6059, 766, 6308}, {6314, 769, 
            6316}, {6316, 769, 6039}, {7165, 5944, 7454}, {6301, 751, 6300}}], 
           
           PolygonBox[{{6908, 6907, 6748, 6749}, {7455, 5944, 4032, 7169}, {
            6300, 751, 730, 6289}, {7171, 4032, 5944, 7165}, {6761, 6760, 
            6907, 6908}, {6089, 6088, 6757, 6758}, {6293, 733, 736, 6266}, {
            6040, 748, 751, 6301}, {6754, 6753, 6760, 6761}, {6289, 730, 754, 
            6287}, {6749, 6748, 6723, 6724}, {6319, 772, 748, 6296}, {6724, 
            6723, 6088, 6089}, {6039, 769, 772, 6319}, {6758, 6757, 6753, 
            6754}, {6304, 754, 733, 6293}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.48249077496716447`, 0.5907467729368796, 0.952402587708811], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkD9PAlEQxMejkUoLEh5oYij4QjQWdlqrPV+CYAIc8s/GBAu1MFpoKOBr
SO6iPQmUhBj5bd4WczP33rzd2a1d3jZuEklnoAByPjkHP+AzSCX+v+A5qKNn
cFKRltwP0H2wQV9VIq/BN8iS6DG9PeHdkXRdlc7BYVG6gNsh3g/hZ6tL/Rd4
7DWt9gf4Rz/Br2CF7pWlR9f38CjEvinnf96rcCr9JnGW3GewWabwzj2WK3OP
Ze2G+OaAWd7Qx/jf4U6Ivge45Zkte+5z2q6a7jFv6tks78R9dyH22PhOZr7P
BbwHHVpGBA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkMsug1EUhXdPSXREQvynN2XgTXgBcwZtQjrReV9CYkDjPiBxKZOWRMPE
jFcghLlEjQnfyj6DL1nn7Nvae67eWloPZlaDEVgpmS3DAizCGqxCHRrwlJk9
Zv6nWAf9RYNP6ESzC95TebNJuOW9B8/Bc/bRm/CG/oAt9BG8Bs/ZQG9n3itQ
3+V9DROpXx99DH/BZ2hWK3rvIRygz1N8WvHoO2gXeZb3q+i9NeMEXa2aVaAG
szBa4Q4wLJt9wy45L8E9H6JPo8/WjJvoNarNURNgBj1WMLsfN/ul/i66F+XL
+1nyJw+X6EbRvWtGKPqO2lUzBtF75pIneesm/+qhXR9gPu836ul+8B78pm30
TvRddSPd6qfk3uSxif4HsEdLAw==
            "]], 
           
           PolygonBox[{{6755, 6754, 6761, 2312, 6743}, {6747, 2312, 7454, 
            7452, 7453}, {7154, 7153, 7171, 4029, 7163}, {6765, 4029, 6908, 
            6749, 6750}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6199246747117206, 0.702321804076138, 0.9632218877336653], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkr8vg2EQxy99W9GpQcT7vlXRSnQwGlQkEps0LCIWi19bq02IxF9hMBhI
mPwaWBSJhTAIIuFf8KOjkQ2fy93wzffunrt7vnfPk1+oT9USIlICARiPRJJp
kddQZDIW+WkVKcMX+J0kHMFN+A18Oqv/DirkpamtxlavfaZjg9oz8CPxErkP
8D3ow74Ozdf4E/wCJrAP4Ge3NVZ2PSPwmNuDsfXQ2gJYT4l8MVA2ZXmaMxob
1Na6IMudGZE/OJczzbPEV5l9jbplOAA92EtwPbSe2/AdKHJPjfg+doB9Cu+B
D+wduEDP4S6RPLzrtdqjHpm+G+x+ctsC6/Xten7hjsj2mY5Mn8b1PKOaktSo
RtepevV+7a99V/Db8Qf8XB9Uz+ci03bIvQmfa9Fzi65D9zfkO7wKLdaAW1yP
6toK7Z03Q9u77lP/SNP/gupreO15aDvS/hvwmc98C1/6X6oST3TbrnrZ1Ulo
mo/hSmRvOO8703l0ln9A3lcV
            "]], 
           PolygonBox[CompressedData["
1:eJwtkrlKQ0EUho+5RkgVFMSZxIiJoIitoD6AVlY2WsUlqTQLCAGfwsJC0IBW
boU2ooIicUMheQsVSwutjBZ+hzPFB//M2e7552ZXqnOVmIiMQifcOpGhSCQH
9+hd+CQh4nyA3oI39Dvso+vO9EBcJOZFOuA1spxtYoMZkak+kURCJIOeSYlM
Q5O7FvylRX7hB9qwTH06bv0i9Ak9hF69cInOhn6NJNfkl8mpkbsBVXS832Ka
E0OXvNVqj1X0NzVfYabOPnO2m8ZP0Ycwix6HZ/Sxs/oeuHGG6m64Ro95O2vO
lbMarZ2AJ/RR8Ef9iJNbYfcy5GERWsQnI/P8Bb1JzkiYt44upcw73SfH7kXO
BZiHBY2R80FuxOMl0UVv3unMJW8z8sFz9b4dvNZv0G95YOZwmK9v3wjvr3d1
Zl4421XP5+hC6K9vtOPMU/VO36DmrUZzdYdHZx6oF7pjE33n7K20fs2bJ+qN
7tDlrafG9J/bQ/8D5G1ToA==
            "]], 
           
           PolygonBox[{{7166, 4031, 7173, 7154, 7155}, {6091, 6090, 6759, 
            2308, 6472}, {6742, 2308, 6759, 6755, 6756}, {6744, 6743, 6747, 
            2313, 6763}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7504138632984179, 0.8049482804561017, 0.9757578989434774], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtks1LVVEUxTfd3lNHRoPeOddELGvSJAILg6AmpTnQDMIypMRRWn6QRYMM
nUrpQGjQPP+EIgKDIqNnOCjoc9KoPyCLoEh/i70H6659z9lnf6y920cmBm7s
MLM+UIDLfIbBGTDQYnaqZvYLPpbNejnbgNfBQoNZHW6rmP3gfAsewu9hs9kX
uHGnn+nuW5x/hy+WZtUms0twwfu9+FyF97d6LuVUftUxBHZxVyXWQXgKdFbN
FqOWs6ATvExmHfAj3l/jbo6Y4/Bsxe17Av934JvknQK3sOc5G8OuUM8g/Ifc
z6nzJPyVmIPE/Ax/SK7HOvwqec7Xye/k8x7+12j2G/wFS9lz3lYe7HnshdCs
q/BaFa8nergSOo5mj3208P4+Jtdhueb5dPc4eZ+KsYo9Fn29wD5eeg1dcE/p
NfXBk8DQ7TC+zaABPZuy51cdpwu/1yzaom7VP60Zxezamc9MaCuNT0Qu5XzD
/xHe34c3kteufXmSfAaHsNey9/WUs7XkOtTh7tI129RMo2bVPhx1qb56aPcO
/hkz+g9Xsu/XCnFGY44X4P6IqdjSThp+wud8+Jwrfd6y9a4acRTvbvbdrWXX
RHpoj/eEbrvhiez7cz37rksf7fiB2GHt8kxoPhlaSjftwb5W3/9x9Rq9qCfN
Uxqqz7cxa+3aXPb8I/B07P8DeJM3z3jbQbxt+Xx8NA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtk0tLlGEYhh8cZ3RW0wGa7/0cCcNWbiIzCDEPiyaVTpJgGaTSTptRU8GF
iW477voH9RMKEQpa2MFjRrVo3x8wgxLqunvexQX3957u573f52saqw5Uasys
A2rhRWL2I2N2PGs2EsxGoYSeh3H0N+ZvMV+Gz+imRrNnBbNc3uwEeoY155h7
UGe2jn6T+N45qPJ9BOowysEh9D1YZm4JZtFFqK/1NcfQLXCfubac2TT6O+dN
cv4wfEG/grMZ95S3xjSnGr+it6EP3Qsb6MfBzzoNFfTDeP4iPEVfS82yeb/P
DfQZaIVLcBk2gt9N+9+hN+P5/bCF/ph4LarpfeIeWtvM91u+J4LfVZ4v+R7h
zNtwAcowxvzfrGewgD4cPCvlUZB3zEt5TrF+ObhWxovBPeXdBh/QrxP3Vk1r
yi6+p1HTLPs/MbYD19GDkI/vI/+j6FPB16qmJfTd6Kca9HbrRe4MF9G9MJN6
LfKQV1eD2Sr9sQJ76InUs1XG46l7yEs9l9N5ifeWMlW2P9nTXfT9XaxvbnSt
sZPoK4wd1Jv9gaup16BadCfdbReGMt4z6p1yzFo1q/a94Hv3oYPxR/G91CNT
6E7GzkM39MDNWL96fpjanieetepVr/XEta2xd+4E/5eURwY9nXqv/X9DvreC
947ebA39JPan+kO9aSWyx2cffkF76rXqzn3oKlRiD6mXfjd4Psr8AP0PZJ98
wQ==
            "]], 
           
           PolygonBox[{{6741, 6740, 6742, 2309, 6739}, {6734, 6733, 6730, 
            2300, 6731}, {6713, 2294, 6715, 6718, 6719}, {7159, 7158, 7166, 
            4028, 7160}, {6720, 4026, 7162, 6766, 6767}, {7137, 3991, 6915, 
            7167, 7168}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8587875407776588, 0.8902378901220502, 0.9863931163597028], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFlNtvTVEQxqeXaEulotHTtfdpkaiqeBASl4RoPBGJawSVJuKRU0VcHih1
SfVoS9uQFG/+ioqkRAgaVErcQoLSS6i6HOHF5TdmEg9fvtmzZs2a9c3sNX17
/fpd2SJyGuSAWUFkdq5IpXKBSBUoA4N81xMwCrfmAXxp0FcqsgL/A7gvFmkq
ElkYGdS+ge8xa7XEPIMXjBM5wb5GcI4850En2EL8n3yRdfAHzsjC7oU78ixO
Y/RcPTMNt0Rmt8P1YGCCSDW8H0zDv5u990AzsfvglWBqFr6EyLWE2fcTFqfx
+yKL0/hu6nzgd3kI3wEN2L3wViDE10S2pjF67xtu98MD5OnCfoW9CaQKRTbD
t8AF/K/hmhzT5BfnXcR3qcj2vPaYiqTIGHY39sSk8VVwpcjWu3yPJG3/G2Iz
sa1Xx//3FCatN9qje/DP2PL8iE1T1bnD+6n6zh9nejd7b6ah0xRiJoOxYPwF
LoGL822t2NfVXoUuv+DV8BKQwV4ElxfYPOksDQe79wg802esEiyNLG8G/1rs
39hr4IoykeX0agY8j+9R/N+C5f5nO0a9lt9ei9b+NjaditFhg+fc6DXqvGkv
T0c2j6ciq6PKa1VNVA9dy/gdPkTWG+3BU3Jv89nTGdS76SxpXD5rg/gL4cvB
tDwXGau2OsPaf+2LUMd5/98OxTYrOjMbY5tvnfM2eLrn1jOWRXbnxfABkEOd
aXIccE334vvoOqvenZH1uwlujuwfvOv/mfgMjDAfKep5h/8mepejXw+8C99O
UAcOxqbRRX8PdG0LKOF7Au9GIti3zreuaw7VQTXSc/S+etZReAdoBEeDaXc8
+LtDnjlw2vuhZ9a6TnqfRt+rNU0ibjzxk+GvrlEz9vPYZmYmM7Mnsp624D8F
stHqiL5jwd6js8HukfKce4L1vS3Ym6K1f49t7nXOP8O3g/0nffDLUrvzI7jB
82+H3/J9GP8AvCMyLVTXT+7X9XavodX1TLmmVX6vcviJ59dz+v2d0ffpjr/F
9+FjwWZgbrD+aZ738FPfqzkW+L+j/1Cv975DZ997Nxs+Gdncn4GzY7t7Hjxc
aroPwQW5VltlrvWhznUb8phBf+cb/f/p9ndL+9Hjc3UdfhEsv57zF+kk5Pw=

            "]], 
           PolygonBox[CompressedData["
1:eJwtlMtLVVEUxrfeUG8Khqb3nnOuplSajoLCHhRFk5SgJ1EKQTgs04yyQZn2
VFMrRaFs1l9hNCiIyPKq0AOTamCWJCaKCjWx+n2sM/jgW3uvvV7727u4tuFo
fapz7iRYBZY85+YynFsGu3znbmAXRJ0rA43Y5diZOK4GZfBZ1grZKwaL8G7Q
Ae8Ct+BdstNtrRP+O3DuWbZzA8AlnLvIWlHUcrQQ7yv7D9l7BF7B9/lWyxLY
A/8Yd64m4twKMX/hPx6Y72PwDf4SrODriDcMP8KZf9h/wTH4W9aas81HvlXh
vuwD8CuslUetp2Xsrb75qwbVco2cqWk2g1b4hgLWY849lQ9ncxNWi/pbwF7G
J5+zeaCS8zt86yUX7PRtLS+s7zD8nm+zawV34T0ghb1e+u2Ft3s26wg1NGG/
Yx5FKc6tA1XsHfItlnpSbxdACf43wWX4ome5dccV2BOcr2ee58DnuNWkfdW8
G97p2d0rRpNnMRSrgvwPsNt8q1Vr7fB0ep7KdG4aZMCTxKwk9inwAT4as3pz
iD/P+bUgyizLwSb4ID7t9NoHXmN3eNarZt4Gz/FMe5p/PjwZs94LwX7y94H+
dNOctFeCT2mo1zXwwvC8cir3i5idVYzn8AXPatMMNKuchOl1EMzTz0iYTz2o
lxF8usJ8w/CswHpXzDPkv+Pb3ammJ+x3gy1pdmYIPhmYVqT5L/AZz7TtyD/q
mYa0rxpUy3r0VpdlmtsIn8OnIWJvQm9je/hepNmhwGIoljQ0C78d6qEUdMA/
xe1udL6PmPc9u1vV2AgvCfWtnCeIN+bZ3fSAbfD3nK+OmIakpc3hfUmj54n/
A7suYjVOw2Ph/6H7bIbvDeztqL8/gcVUbGlmjHhZCZu9apgIrEbVqpzjcbtz
zVqaOw0/6NtbVv96uzW+/QV6D9Xw75w5G7GaZuBT4Cq8BUzCp0FrxHzkWxu+
d/V03TMf+crnJ/yNZ9rXTDXb4+H7kz70NjUDzUJ/3CXfNCKtSONJ+IBnd6E/
px/+H8ASwOU=
            "]], 
           
           PolygonBox[{{6995, 6994, 7157, 3043, 6618}, {6997, 3180, 7459, 
            6994, 6995}, {7115, 2304, 7003, 7130, 7131}, {7131, 7130, 7132, 
            3992, 6627}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9387221967601408, 0.9538196951936826, 0.9886115164610785], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVktsVVUUPeUVaCnyGiR579zzakJpqwhtGRk1OnWiDlSMiZGoaEjURAYm
Bvk0ElA+SguvQPgUCkUCcWDiQMOABKMTtYJRglIRVFqggLZQfkXQuBZrGRjs
rHPO3Wf/9z536tz5T785JoRwDZQDjcQQaqtCuACckkI4WxPCY8CRLISfsD4P
HAbNmRRCP3AF+JrHhbAK+BX42vIhfAvcUx3CR6AJkNVaGcJM0AzQ3mp92wrq
BHWDyqAEWYfBWwdcUy35z4OWYz0b+BSoDLmHJoawENiL89HxIdwYL3nU8y/W
2zPp3Qx8HPpaQM2VsmGG96/h/iLIubcEX+3jP+Dvo1zYPxHnpyBrLQIyCMxj
/z3OJwE3QvZq0DzYc5fvTgJuSbJ3E3AlZC0Fzwpgk/1K9mupfZuXdF6P884k
eduAqzL5/B5wu8/5vYz4tiLOy4A7MvnfnSmO20FdjDfs3Q3qAZ2H7EHQGdA5
0FCVzv7fc01e3unIKX6MG+N5IClP+4EPZKoH1sWVYgifgXcEuAnn8xHDF8Bz
CfvPcT4M3JnTel9OvPtyt78RLxZ1tiMn3m7bTh96rZ927MK3dtu3PFPM12TK
NfNMv7cm3wduTKqR9cAPwLcB5x/6HvPCOO6yPOpl7ZGH+axzjpiTRzLF6lJU
/nc7Pjt9t8d2dXhfzmT7OuvsdD3Tv12+txhyf0CslgAPFEIoVYTwBfAoaudI
jfqn2zntAdbhex42ZMAmUKzQutFrnvHOrHGS8TfiUV2l2C1I6tOrkHMN+4ug
pTnp5N1UoV5kLc0EvZ3JhpXw9yRoGPzbcPZ6ptqemKSbdyljFH1wA3QzL/3N
lsOaZfxZ34cK8uEg8FImG68An0uqmaY66IniIS/9mgaqtx7ui6C3MunoBO+f
UT4eQf2sdi+1AxvMX++YJcdtFuS2w8aWKq2J9aB+rB/C976Ceox2fwPZPVF5
e58zzT7S1yrYfAb2jweOK2k+1ABfwn4hfHmZ8bbMAeD0qPjeD9wWNbs2gGdD
1OzaEnWHd+cm17Vr9FXsx9SG8E5J8WLcrmWy4zpobK1yUOd6+LQg/w8DK/Ct
slb3xxq5v+m7lPGi48/efTcqb23A1VHz8VHggpLu0pbkfBSd97GWWUQcG0EN
VZLR6lp8BnfegPxnk/LJOiXvrVrzDG70Ob93QeZR0JeT0XdRs7k16uznvGbu
g1Fz/GHghaTzu0vqbfbbeuDmpBnSwbfJPJPBU4n1AGI4IekNYz1z3k8ryY9+
rI9GzfoTUcT1KdTY18wR9WfqH/ZRW041xbnaAbycqa8XJe15viyvHhpy7w16
1i6zr132je9KZ058rGnW9l/Q3x/1hh5LilWD49/rt5VvLHknuN/nuOfYe51+
rzi3RqyfM+CY71LGL1E5Yq6OR/E9kekOfd9tX4fsL3XwneWMOR81ew8BS9Af
3W9F18KtHgY2g6aClpSU28Ul1eBN55o8LeajnFq/SckyKY81ku5YZ95PtS7K
+DhKxihwoXU0lPS90TyD7n++e4tsD+1qtC6et3p+0P4TBe2PA5+M6v1qxGoo
SveVqLgMOX/nLId+VLj+ZwM/ifLxOvC+kvpzOnBLpreVbyztqr+jl1ptQ4P9
5P73qJz+FjWXWVt7gOv8BvEtmhL1b3NP1P8E37KGTP8lrPmapNh3Of7ROhnb
vONP+1/xfxH/j+jbktztmmd9c2axXoZdW32ee5x/5xxLymYv7vU/Hu0s21bm
grLod9nyqYf7Rt8fsEzO6YPuq+9sz1rLKntNmZeLepP7oojrY8CzRfXtQFH+
Mw78nx3w+WngH0XZ0A88mdybSfXNOj/L3Dm2jPGPBdXJrwXFl3Hm/123/1/4
fnDusL85q666Plmn7KER9+OokT2Vd+xZ26ejzk4x57aNNv4H3m2rbQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlctvlVUUxXdLbe+lpbc+ktvvnosJijy0UGOiMsC/QB1oGJkYDSZOTGSA
UWyhkUAsYAAptEiBqo0GRyQO1IlRQ3wBIqEIVKWAlWIr2gJFHmqMv5X1DVay
znf2OWeftdc+35zlK558sTYiXgJ1YLQ1omdGxDYwCe9MEceaIr4HvVnEBb6t
Za4L/Aa/zLdSIWJ2TcQU/ItyRBWewGfwmaw/30gseJz5bxivK0V0gx/gWysR
e4oRb4PdjIvJsRNgFvwyZ3zMWe+CS/B72aONRNvqI16Dd7N+LWs3g03wfWCq
IeIKGGF+I1hE7An2e7ninJX7GjAOf5BvHdxtK/kc4byz4Aa8riXi7mrEfNDJ
fA3jBfB54Bb4TWI64OPsP5P7F8Ef8F3s9x657AN98DadT76LwXx4ba7HC+z5
E+OOZG2l8Wr4Jb61FKyptP01ORedfyvn3QP+5ex/wDnm1uT1Ocmeq5JjFKuc
hxkfKbs2qsnnZeek3D4A/fBlybkopzr4lkquJVgPP86auay9CwzBD5HTbub+
Q9+L8G3EDBT9TXMHwfqia7KBuYnMsdJIWi2R3uQ+yXgp/Ltk7eUJeeMmMYuZ
28L4JONDoKvkNd/Cz4AR8BX4GnyZPKeYg/BXuX9ti2ukWkkDaaEaq9bzZkes
gB8m/kfmjidrKT+egF+sWEtpehW+E9wg/8Pc5x14f+Z6LWuOeIX4T8r2eivY
D/+L+Tnkvwhcgz/Amt8LrulD8KZkb8vjBfjPxAzixffB6cw9oVzkQXlxHd/a
8W87/tkEn86snfbU3iOc2V7jMyeZ68rcG/J8N7wZDY6WfN96+Hm+XW9wD0/g
/97ku+hOPfA7mb+vzj22UHfN81F9huCPZM5Ffl4qf5LD06x/AvQxv7li7/SB
N+GDFWunnhiAf5rsPfX8ruSe0F46cwG8Ie9/+VG9cgrsKdnz8v5jFfe2aqLa
/Jm59/5mfCGzZ+Qd1ftZ+OvE9BTt0R74W3x7qtk5TzHeAXqLjhlk/WrOOHAb
vmGPO+BNVWsnDWdVXSPVaozzhuE7ku8uDfdmvrPurj3fgDfm6+W5Z3Q3Yrbn
+uxM9pDWqmc2Et+e6/EoWJI5RrHPEzOQnINyOQWmGB+QZwv2xMPShpp+NMNv
5jR8O3vcX28P9WT2qLyqnv4Qvjd5b2nSr7cvs3fVg/tV31a/lfon6N8wt+q3
Txp1Vq3RcK5PqeoclIt68mjym623Wx6/Cr/O/HCjc1oJ/0V+bvCbPQpfnlw7
9exzev8rfru1Zhp+Le9PfdPcUP4/kQbSYmH+/ukNWAXfkDlWa67oX5P8r1EN
VIuxzN5RT6g3xlpd23FwjvHZzFw5Ktfbq9Zenhxlr9Nlv43qwTPw/wEBaCxU

            "]], 
           
           PolygonBox[{{6085, 6084, 6078, 283, 6071}, {7121, 7120, 7119, 3962,
             7108}, {7001, 7000, 6997, 3179, 6913}, {7004, 3183, 6999, 7000, 
            7001}, {7125, 3975, 7118, 7120, 7121}, {6909, 3049, 6762, 6084, 
            6085}, {7113, 3966, 6627, 7133, 7134}, {7110, 7109, 7136, 4091, 
            7123}}]}]}, {
         EdgeForm[], 
         RGBColor[0.973976888072146, 0.9801125862499172, 0.9289345199659709], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFWH1s1tUVvhVC30J9aWm39/19mA3ZcCu0LGmhLgOLoILKqmPTTGHg0IVl
WySDZQPnNjf9Y+VjfkxFEaouGiUO1s4my4QWGKVMQJy0fJhRSqF1zmr9AKkl
bu559jzEP07O/d177rnnnHu+7m/8kmXz77wohLCpIIQRwF+PQnhzTAijkxBu
ACwtDuE64HR0CBHgZGEIX/Q4BlQBLgVMMEzx3OPY05sNYTvwAL73Y99BwCXe
x/1lgL8XhVAOvBDn3AxYAJhkHlPMe6J5v2xa7nkqFl4PXFcawimc1Q8Yie/5
mRAKgT+BLldjPArj+qzOXQZ8JXSdhvlqQFUaQt/YEBLgEqyXjpauZR5zbjLo
awGTABvA61mc+2gsOtJQp5HQsx92+xZw8zjIWYa1EtGR/nHgvVi7D2cdSKQX
dewqlC1o026M38DaadDkIc9c6DUIeacD5z2fw/xnLXOUSm6OY+Bve88S4JWw
48U4f22x7FJdKjstxloA/bxUc1y7A5AtEX1JifiSJ22zINX5t6ayMXnw+yXo
+CLgr+Mkf2o7rICeJ2CHIeB27GkvD2F3Kp96CzAwRroftR9dat15x9vHiS95
7gG8Bhn2A09MNbcKeEIqG/bAHqUYP4DxaYyPJRpzrtV8yO8w5n+O+U7gqbFo
SFuLu6/JyA8+j/l/AI8H7oRcrwB2Ihj+GMsHfwf6JwB90P9+zF0L2mOAazKS
m35F//oc1g5h7j+RaKYDZmS0n3zuBy6I5ZMfR9pPPvTX3bBTR7nstQM6HIDs
9wDX2U9nZmTfZfZj6kjbkK7Zd9ECOB/p3Isoy1jZkLb8EXgNYe8PeP+WgfHR
5P301SbzafbZ5P0r4Ltsf95Di2loX8pMPyd9q++MMu2D/doBW0fIZrfbx56C
/tPgO3PAZydgL/aHS0J4FT46hPNvAs1ozHdA5iLgV3ynvLciz2eAX/adthOn
uucvAN+D7+vB40HgI4BJ0HE4kq/QZ7qAO7z3BPBRrO2BnC+B/2GMd2H8TC6E
zVirhJw3gecx7sf88cjn0abAp/D9b8z3Ao9NZevyVHxJQxlPYu0N0PTnRUf6
nkhyUB7mg79hTyls+BvgR/G9CPKfjuWv5EN5GXe9zm/7bLc9qeQgDX2c8VsG
PuuKdQ+t9n/am7ZfmpVOFaU6462s8tI7WcXkAuffxcXKxYsAW3B/TwIaGQvG
mwCfeP8A4DLI2gs7fwV4LdY2AJ4wDfPMcFa8F5nvZvMgrz8DdgFeBDSNkL/w
zNt8d7zDuci51wCuBhwul99Rt2s9z/VzWZ1zHnAuJ9qzwO8CZmD8Zk7xzliv
yEiGRstJ/Tb6m/Kvtw6bvc7x3ER2mQ28zvPcQ70GnNdoD9py0LJQJtYqyjTk
7wrLMLVAvMhzDvBwTrp8kJNNaI8dxi0jlIsKQHcn6G9JtMa5ZtuZ57E2Eg4U
ae5G1+564AbbhLahnbcB2gCzU8XdVcBXAtZgXw/usRv+ugrrJ/Of3v0W4z95
POD75VkEnksbzLFe8xLlUdZ81v7GWDR/iCVDm3WkX9xhv6Nf0j8XZJWHu7yf
NZb2W55V/8GYYr3ZZr+hTJtj+W9IZPNhy3cG86/jft4HXp8oF/0LMbgacMWo
EO6NtEaac8ArU+XBLwM3mp77PpO6LieKc8b73cBfw/4bRoYwC7gmVf77JfCO
WH1PG/AofB8EfZa1CzL+GnAvYHWxvhtcq7Ou18zFzKuM5yWu6d8FvsU1++ZU
dmJsL3VtZ4zze731uiISP9Zz8puWyi63pZpnnuBZFfiO8D05VXy1uqbQj0+5
9yAtZSHdQ+BbB/6/Z50B3AjdZwCvdR5jPtvh+6UvNwDWOLYOu8Yxhq9KlA9m
Jbq/JvtVo2OLMTbomKIcC1P1Hovcp/H+6QdN9iPGwpm8YuaDvOLjQgytsO8M
OQfSz+ZnJdMaxzzPW2c5O1w3Dxo45n0vhqzLIfOYVLjD622+61bivHTeAzy9
QPmHueqE57ne7FxH2d/D91+A388rF23x2hrb7reA+bH6p+dj9SjsVVZAlrPe
Sx71jnf27GdyOvM94Iz7YfbFrG88o909DuOStfqruL963OPMSH7HHoR3+Xas
u34sko/SZ09l1H9MdN/2s2LlVuZr1oG+jGjOYc/lkOHDSD3MTPdC7L2nuv/m
nlrnZPLp8/dk+2Ql8NZI6x8xvryXPKqdS2vcg7Hu843Ae6dutPFx1+5/RtrH
/ZSJvWe3+8/7rBf149zxQu3h+Ki/f5KI7qfAhZDpxxh/J5Fv9to/SXvE9Ee8
t8t9EG3MPuP7iWJ+eaK5/Z6fZtmqCyR7p/Me+TD/844vd56ZEmm+y3S1tjnt
8GFOvR97wB7ncOZy2mumz9ge6331gv2C/efrGfkLayl9lv0Q5drm2l7jM6rN
g7yoP+1wK/AJnFuFuePAk2Pxq4xla76b+H7a696W8T8Yaa4b9FNi2f97iWjJ
n/ZgXTrrnrDGvkUfYu4gjxa/sXabL21CO9H+r0WK5UOR8iRzJGtKv32Tujzt
N+GTiereIebjrHSr8128kxcf8qtzLE+3/jNM97HfmOypyYN1hHzuTtTX3gVc
ZZvQNvTzfsuwIZFsmxLVddb3hYnWVzo/P4PvHvA8j723J5pfwvdOTnH130i5
n71hn+vmTvcNVbY9360T/DbhG6XWNq4APOCemb1zpeOuLVEtZ71mj8j6y/zJ
90e/Y5Vy8I1c7jfwRL+ByGuZablnhb85LnHOZh9M29BetP2unGx5HXR50DVl
dqS3YZdj6f/v6bJPe9zVtg99hLmcfrLWcUwZ6T+vmn9LTvr25NRHlFruXtuM
tluV051vy+mfAv8tzAP+ZqozZgF/KVU9vczvIPrehbcT5WJdZWyxFjB+Gywj
Zd0USc6HE8kwZJuwF2GPsRHz9ZH863n2rals90PgYb+pP4r1XmIs8R3wdCIa
0j6byO9WJbr3SsD4AuX7rc75nKuyP9BPe+yr7C8G3LtOsuz8N1FrHyH9Q4ls
/Eii9S7TXO+6w35z0G8C+s5G99asORcn6pGLgLsj+c1zseK52vmFveuwe+YG
1xneY41zCHPJbsc947/ZeZ559BuRctfbOdV32pl3lnfPxt6NOf2k8/q7sfLB
Y4ynRH74i0Q5pNM5t8vvQb4LI9dc/ifY53ctzz+Uk407c+oZSy/8P/G/HJ5X
57rHvPw/KtTUqg==
            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{6066, 6065, 6099, 289, 6100}, {7027, 2256, 6694, 6683,
             6684}, {7015, 7014, 6690, 2258, 6699}, {6686, 3201, 6685, 7014, 
            7015}, {6684, 6683, 6685, 3201, 7029}, {6986, 3175, 6982, 6928, 
            6929}, {6106, 6105, 6102, 298, 6113}, {6003, 301, 6115, 6105, 
            6106}, {6653, 2258, 6690, 6692, 6693}, {6693, 6692, 6694, 2256, 
            6681}}]}]}, {
         EdgeForm[], 
         RGBColor[0.989918371545795, 0.9900990017952224, 0.816742204111663], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
LnhI8ZBxkfiMOO0vEevPvvSrDWonjlshva3Bc5szX3oIfA2oHvL9yRmGZh/q
uMzZ2UwA7xqweikdfH3M9jIR7dEcOxeezw7lx2lR2xv3+MuY5U7a7SPgTzmL
/2Od4QnmIdpQF/TrzfzhLF73EObZg3nOYZ7NvmEdYp7bWeMlGkYnDid+najn
uDD1ZNWRrCeJtSeoD2uIUtU9o4TNKzR2c8DqBuabl3EOWcJCZerPcYxrxN+M
c5XC8KwNeIasZYgz7nEWlxrAM+S/Sar7hglTVmvNiVq/XM+Us1rPpXq/UveU
qf24MJ4XMV2UCAcWCcdT1iLVt3zvUL3TrtqQdSFz1FntpU37Ga7YzfjAmJWW
Yfm0QbX5ROVVPj/vG3Z5Dvy5mGG0jTHpRXNV6wyI/0dKnkE6t1lXzk592LdY
co+W3KP0XKXvNTrbEtnA7TpnthHDMd8wVs9U/yqtHVe/Uo1lPcc4TDzM3Dkd
+/uMvg867CwuvqPc2EvxvE3fmSdWCSM1Yr9ZimvZypnMIbRj5o0cYUvOQ3sm
vnxXsYXYivGE/sJY8gtntQNrCMpCmWpTzEeIvemfzLHXZxjm47xx5aeIcihz
KeP9m8Io3VXb5MqXcvX+mvAL+zKHnBKeZJ9hqjta4cPD8P1ByLPXGT56Gfxq
Z/LlOcMZvJehr9AWaZOsPyplT8wDjwszDI9aHqpRzr0X40djnUXOdMv9Ur/H
nOWmk85yLHMz9XpE2IgYqQMyrUPfXPTJJp6Af2WBv433Kow940xP10pXlJMy
0peJYxn/S8IWe6jfPZmWc6hj5psDznB7kzO5KN8U8LMxe/bR/k/dFfDOYLDO
rgB8gbN15zvDJYwDlIU4nO3cc19nseUe1lzwn3eQO/r6hveL5euMs1kBq2tv
ClrcY803Lmx4jDXNEcxzN/hbzmrh7aAdoFkphq9oP+mao1vAMAjrPuKQNaot
GHsqVB9xzq3SAeP7CdXWrLEbQftChhXeD9k6u0DBiNXiXcFfRftGtLWG7G6B
sfWvAZs/LsyWrX1xr5nYfwfOLo2519mZvA8+ylmdUAQeDFjuSRWlay8nJQNl
Oe3sDNc5uzubErbaYqqeaRM7JS/HlAtDsi/xCG2MtlakuyXKl6zahDGQNS9j
y+uaj/GR7SNV+xdHLZbMFqbiXQ1zbijR4k+N4lGS7hCIqSPChbWac6rGT9Hc
lP9DZ+f9nrNvtYrLcdkAv+3yDdftFo7brrMKSl9bQ2b7e0D7QL/FXIsw7qiz
91eDhjkOgDerJo9irkPgP/BNduJy3v9xnhblRdbtnHNHivVj/8vQQxfZ8499
s2k+9wZvCdpaXIe+xZqHdXGz5uF8d4HmgapA2xj7dD9wk7PacQz4E5irDt8W
wGZuC5p+ib326g6Z8iSozvxS8WmH9n9RtThjCG2IuqKOgr7NQRz3Pd6X4rmP
b7HjWvnufN078f7pq6j5ZKJvPkGczli5WPjNoX00nisYF8FLfcOQN8RMpsdU
C3M85+lEjKOY9iF4gtq5znbpgnu+APluxvrfRG2dFp1pb+mZuq/QPR/Pq5fa
GWO6C4dkSG+TpLv+wsn9fHufLH0Sj/eXHnvqjoH6SJPd0j+eybY7Ot49vyVM
cVE5lTbG+ruf6uKBqnVZV38esrtM+gl9ZKH6Ml8t0njWtx9rv59k228G/O3g
EfAm6Zy63xew+fh7xVrdZzL29NO+7oyZ/DWqg9bq+4aAxaZa3bcS1/AOY5ru
DSgHY+se5YIDwsjMxYXCefRj4r71ukO9Eu84H++h6wOGu7ZrvfVac7Mw7U5x
1mYX9FvLKcXXc2rj3sbq7qpYGLNY7/XCq8u17katw7qB8Z954JTi9/vSEWPg
Pt2RL9c9+WXNyzk3SkbKv05xdb2zcWc0D+9POik+nhDWYJ7oIXzBOxeO3yyZ
Nkkn364ZNhzEvgukY7b5ygk8P+Yh5mnmg9O6J+M+0rQmY+MUxW/G9qt190V8
xBjNO6505fVdqjEaGZsw932+xXL2YV/W+2HV9a2K8bwPytVd2RuS5Rbdf23y
7W6BdwyXwmbvHZJ1nPqVSzbG+4Oq5RkfuDZluN83mXbpDq5cfWlPRco/BcLL
Wcp5gYCN7aznoN4vyg6ZVwLKlUH1ydOde5Zv963dfcshc+RfW4Rx653Z2VnZ
CO8geBfwmrNzYh9iYNa+eap/Q77F6xTf5EvV2mn6XYDYljJwfbZvEsYirhgg
TMTzmuzMpyY5y71R4QPG5m9r5JDNUaB5GHdKdH8XkD4o0wTZAvXOGMv4yjwQ
1+9T/J0qSbZD222SX78C3uDbOivAm0OGjw9KF6dl84wb/EY73RW1/e2M2r63
S84m5U/mNPZr0u8SlUHLj3F9O6BceNG3O+5Lvvl6vu4dZwm71aRYXbVKd+Gk
Ft2Jsw9xL329UXmfOY3PTYqN9YoNjEG8t9ys2vaAZGFOPqN7jw9iho0Yq3YK
w22UD1PWfcqht8ZMrnH6PXGOfjvL1tqUYbdyOfP4TTHDzkUxy3/Mg7xTGarf
OFhv8N6c9yI3OsvP9CneQdHPKnQHzRjIewL6zRfCD8w5LysHMhduc3YX9jdn
a1dL19uFW2lPnPuS5u+jXB/wDSNsEw6pU1yl/mgLxLWtsotW1U4DMeYk+ub7
Nl+J7s1OKoafUNzdIsz5kdZlrOB+qAfu7xbpk3o9FrXYfDRqMfWw4ir3uFf6
fyZm+OFfvu3xgGyOtQRx2cKYxdsXdHZHNefT2Wa/TbLht3WvTvmIByqFCbiH
wfoN703tl3J8IDvhPVlc9kz7WaucQx1Nl84pF9+b5TeHo2ZT/4ja/nkGxAq8
96Remp3V8HHd1RA/Ed8swloDpGfqe4vOhDZKjFOh9RhbaD/EKy+qJmJtFNee
KkXcZ4l+k5yk8dnCM8TjDcJZ21Q/sc6lH67RnRh/Z273zQe/BM/2DZ/Nj9mZ
jte5NmiOl4Srq+VvxCDEIqwBOa5R2O4q33Bvsm+11HThYGIXYhjeZbbKf3kW
39fvs3+MWp19RrX2asm5QrXYBuXfOsnE3/F3C1Nz7bDk5z7ikpM6adLZMQZu
E37mXoiBZ+q35AbdcS12Zn+7de4HnZ3xfZB9oWp81vocN1//e9Cs+Ed7rpcN
1ileNipmNsvv6HNjFCv4vwQduoPhXQH/v4R7ukb+Pk+yPRKzO4Zq3pPL9miD
/wdtrXp2
            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{6026, 6025, 6134, 337, 6135}, {6918, 3052, 6929, 6910,
             6911}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9946057017453113, 0.9908704664174632, 0.6542421086061645], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
+LLJzjWR0f7mL/aiq+tU5OoNcjFn1yS+YR3wfd71bOoIfX0PizPctvZ12Fni
4Brbuo9dA6QWSA35Fp9JUYu7xHXaEp9BcBYx3nzj3S91Gdff4Be8opbH+e7m
dMQgDyVxF+a9JPY1yrn0PMda0K27ccefQ+MvCuOuFP6zj30o8eMw11BYf7zr
hAMdyxCvMPdoz3+KbdGp1Ctcz6euf6PrY9zXgZcTXS8lz/jCPD5sntAPf77x
77GmG/a7LBfj07l4/5Xn6G9eQfMJzrFYc4Lp3c+11dbWWegN3ZFL/BH5VyfX
dId537XWP3S0o2WLuPS+JM5Z7k8ij+5i+ag2XcF1s2UNvan2ORlnZD0sa8Qm
0O4c0xI7fdT26HLjQI35bL9n3LemCfS5xbkkMoOvPd17e982am8mcCZGRUaP
6JujhUHj+1y/5EwCG4XNz9gHNLRfmO9zUejzaSbuUNyWCR3a4L3Rrne+x9y0
2PEqnze1SsJWgk/DXPixAbZHX/tuFGf8fEu+uM72BZuzyTwYYRrM8bksfN3g
/JKx0yzPjOnlGAp9pc5Ovf2QzwtGeh7oOsBnG3tNK860oX9L82Cq9449fS0J
uX1fbb2qOIOtXxV9V1qeV1dE7fmJirgHSf31jiTGMf6VJM7LWYt6wFrHS8Q/
La2z7Le/7yVSA8aebPc52RrTdZ1xH+a4G7lD/vgOPqzxmE2/4g81Gmqnl9hW
XGb7jk8m1sHedTXdkOFJ6ajt1DiOmOpnYHo63k/1c41ldLjPgeibYluA/aJe
O964YrfIEy63bbvEeI3xuDaWGc7qD1tWV1u+sLfsjTwRuzfc9adJ3l/Wd9K4
m3a1+7GHN7i2gU6RA/Sw3kHzhpb3zvKdA8SXbtmgGbzAjp5vW4vPZHxiPhH3
PeAa3vJs1JwHZ4Mnw02PJb77QM33ZNtD7OLHudhHksTer/H+r7esIXP0XZ0+
5oOv8X6KfhWvdXScD9/b5UJ3j8/FGVFfn8NNdOzGOU4n4XeW9nhKNnJX6kHk
spNdw6U2tyEX8vaJ9KWgWZwZcdbLufTXvudDbf6y/KDXHcUR63Huy1i+IU48
TmsU633TbJyFT3ad7q28qH1Q9+AOD7U+amRnZqNmP8jtZT5L4j4K9zm4n3Ka
2pbuO93PLahNCeflWvvRXOjWWN/1vTaJc9utScx3qXHm3Jo9bVJ7ejbena32
SWyE+tfmwrbim7CXnOMfyYsz/O3OlfDlwxxPne8YGVpzZtPZ8e+PzaOuhvwR
w2Hv+KbW/cSA0KCH1ukpODU/+m51/2neK3e/iBsXOM8jB6B2Be1v9PgZXpvf
5IfcOWgjqM2L9ws8ZobfM26n3u0S/JQXNmiu68L85i4Xe57hOnGN3+H7yLfm
up++MyxnyB04LbFM7HZsOcN5Tn2fs1ebHuA0wHxBLqdbT3kPPbqZJlN9TwX/
yb2okvy4E1foe3Tc91rm85EtSdSIOnu9er5nx7jWttUTbed6OY6u7/MZvuM3
Ppr3+e7n/dLEeU0SMcpo3yl/x/dSuYtWYf9JvQq53uf6L/Oe5LwI3tczHX7n
u2rcWRvmXIp3xOuDLScnei/MgVxP8LpXOHYihlpiWYPmF2Xj3cXZ6GMdvh//
q+/q6ML+9jgn+SW/shwij3zLvOByvOXocF6M+8C5WAvr4Gnm3a3W5yOWH/Rl
r+8Eou/dzbtu1udWvqPFvMhqa9MTWjLfUcsma79lWd3puXb79x63vJ9p2UYX
r/B+odeZPgNFTrnXVeV8cJHvRXOPt5V1raX1pq3tTnfjiw5iA1n3a99lbOh7
jj1Ng16GbqZjP9unX/TY/hwcPvWdcO4Fz7TdoB892ev6DnQf6Bgp37UaZPF/
KiMvIYc+anpAo76+G4C9w+9Osm/GP631GdIu0w3eHDVd4S06Rf6IvR7pc0Jq
mF1cK6Bm8M/+X8M/5cLGN7ad/8FyAq7NvXd4zNkOZzycX3FuQD2E332MJ/5o
tHNcaqjEQvNcD9rme2rofdq+jrwSm42Pwdaf5VoAcjgsCZyGJlEfojZEDai9
70Cy35sc29e4rnzEtWXi0PXGr6vvaiG/7CGdH3tqXRR0oAZ9Yi7oAD2oJ3R1
vk9OQY7DecMin3dQT+QM7HjnHGnTBjoP8j1bahB1ZzbU2kr9nnE/WbbBH7u6
0rb/sGN/fNPsTMjvh5m4N0t+S9yy1Dn9MuONTWIf2IMfXRNY5jHUudo7fmjn
2teVzoG5T4nOUENZYLuND0IHkKW9lqOf7C/QIc6b0QNk7yHjfMi5PHkIMTtx
HXcCtviM71E/03IWx5gGju2Peq+Mf9RyxBh4Tc5DvoPOHjYuN+SiNnZ9LuSP
8fAZ3rQ1L86zblE/amnb08Y6e5r1t7n9DzJddzcX/tQ6Fzzs/bHGAOeGyNQR
n4GyFn6S8x9kghoz45A11qVmUmH+3Gz5RE7ZIzTZ5P3Ssp8Wvi9RlQv61DeN
+P6gazB19gvb1cGyisxiC65ybn6y7yaiG8Tgw3yHDLsxzrajqfNB9K617SIx
11LLVF0tjzmnO2+l3kBszBka9/2QxwrPUWo5QIaRi+6maal9C7KD7rW03qP/
Byoj/zmo9v8BVepGHQ==
            "]], 
           PolygonBox[CompressedData["
1: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
WKs1tNaKxLWb/hmWqzaM1r5qRtWO/weeywm/
            "]], 
           
           PolygonBox[{{6155, 6154, 6153, 370, 6011}, {6119, 1120, 6010, 6076,
             6077}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9925853526814039, 0.9865491440583897, 0.43433958114897747`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1: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
MKYnYzuj//Sv7Nu/j/Z8Od//B8QUlBc=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.967021032451717, 0.9004163400091334, 0.32638336794071376`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
5Lsp3k8RK1mgL/9D34nxXuwO4wnEFajrY1zlb00ZK3070ouNqxNfvynGuz/4
cGYx39xtb8h423bfcrxq/lVjdKRbfbNXaRzt8Ld6vP04Vj4fXzzUZ5Pr/ZSx
lK3iZIwPWjK2t78l4y1TbAe+Ou/On/Z941P2pd+LflN+l/g3WbbJt4XkeSfH
ezne5a21PXU/ce1Yr93Ou/QOstJ5dY05fBpz+VYxx9ssXS+aQtudjWkfDI/0
jabUm2825VhPS+/U6P8y9m20uTnqBoTunNB0iNfw6Xj5hpyeHnBstD8p0mFB
9zcj/z+LiYuxwf2d+G7i/UXUtxbzjdQxxVyDzeLdZJwP/KU14Btc4Pwfrvsu
279TnvvhIvcE35+WZ36Pco2Nj91zoE3aOdg47bTdjvfc/KbnIWWDK9NvwWc5
zTO/l3ZeN9u1etaf6hsvcDOfd8vzDSXvJztGelTIaucOCbxn6+IdKHeCtPmy
Xbb7oDzxHu04RfvQHny04d50hzjA1eT3Fseotd1U7TLiBtiUzJn59jDF3qR9
0T7Y99j564W12vzYtPgHi9XHyMNXOtn2G7SVJ6urX9B+nqw92UObBx4yJvZu
H23Pvpb3kb8naGNgaxwvzd9yfXjv2ij9vcTZw/58X+PZyVlzqv1OtJy58GYI
fcz50r88xz7rsLH7+I3/hh+6WSDPGzj8OHToXvyVyH+3MnUnPPiDfODdHH7s
V+8yqzJWxX3yBtts1v5n7+50D/PNnt6rvH6q/L5r/gNl6V3r9yrT+Jrj9NWp
e9+2rD3yhMy9b9071pOyRzoqT7T/fWPKLHvxHcdgL73ivJnPxsZ8x7ihMW0E
ZOEhbZ1J2jDTlTfKzvY97FfvYuP7ksrENU7bYbH8P9s2+DjfUO7ZW/gZR0kD
4/MWFfnmfhx53+WZtVPYXn7ovepW1+xV1wM/q9G9AU/2ytcK91+FexAcr9iv
WVsYGbrrsPkxdrP7sV/gPTfg+2V5R3mk95S1hfzmvrJP8PRUfK5Ie8b3MQGn
Blwa0C/gx4U8SylvLSR/4A08Pie+Tws4O6CreLEHhgRcWch3uvS/THw/sPyK
QvbtdVj/8yw71fLe4jpa3KO6JA0ju2RdT9u2Wn+0Za3S2tA+y3mXS+yBt2+8
bfss5Oi9NqlniYfwJpl33MSceK9KnGmCbak7OqAreqgs7UFiDtidA3zfCt28
3eqtrftFu3xTDu97OJfSnHo439Exh3/G+D/tkryAJ4ML+R4ZXg0r5LuPlb4j
5q3IOt8HD7T+MgH+DpTng8UFn88vpN3WTfq7C/jY+OAnlOU51VCWco18l/xn
0uMCzgg4M6BXWban7FjzDcp/z4DWsrSlvhVQb12t43azvMHxai2rc6zjxHeU
3+RPFS84ywPaluV5fIxjsSb4S/hN+FScnbzP5x+Es4tJ7xnFjCO0iquX8nWu
0Ns16ecani3fLgy4wPfIl8rjEQFjCvmGeoDlg1wHeD+0kHM7Qf78QN5fKP5L
HQP/7BbPHfYk+xE5mdKY8Y9/C5r/1S5liPLvS+s5wnnK3ADz4P2hY7Hel7vn
vnojr85Gd99QzP8Abizm+ffHsnxTTf5lvydpR2FP3SSd+IYbPC9pe7Bd6m1o
nFDMt6oTsUWLiePOYsameLNN3Re2pQ8xHuI/+LaL26dtPKt95uET36wXsR5k
dKF1S3xH/2vf8s+ybLF5+s3x7T/18OAJ49TE2IvqAfQC/P6XvEXn7lSX7jjs
/f5zvsPcahn9tht35s3cBt/vb7XdOt+CPWnf9bbjDOcsf1pfmhgAcQLe/C90
DtCCHj6ozoBfnIHNIQ8NkT+6MWlHl6Fbe+jL9Gw89G8DfGkwjtE70qWNaTu8
WMx9fKZ7DJlmXOTjC9eEs7WkLy5Qh1ylHP1APX2+dVepW0a7F66z3Vi/R6q/
hgkjLMPu3o+92Sbxj1ZPjXDfgGePNgO2C+cgZyBzxj9AX6MrZxirQC57uiat
jjnIfTpUvIwPH79wjuMbU0bO0ud41zPge559nIGP+f8C+Iib4nego5CBRuk5
qM0C717yrN+ifr5THX2U7Urta12/q4r5JvuKYuoeZIh5vOB+Yd/M6JK6bXiX
5N2Iw/g7Ql6NcZ0uNz/ab3Qfvhh20ST9IPyhzcp1T2WfPVA6+zlfoQ9bo1I7
4yJtodI78cGW8QaY/5uIqQ20nJgNb1jPs/wd3/Hxbom3p/3tN8pYytXGWq4x
P8XYIzFIylZr018VtA/yDq1WPwRb8FNtRWgt+laTN46XSCO2a19lHtm/2LlA
x1veU3FfdboxVWKrPzGOxH3BYOfMvLCfsad5M1mrD8JY2NTEEs9yzvCkb2XG
zNq417H7sLtp28/xoYO3WrzZ4v3k+dpz9OXt5be19b7tmKfLY3i9XtrWa8Pz
lpO3p7yZJv49Sx3IuzHujLkvLtEH/le0P893Xn8rP3TnUxpziHe73G9e1iHP
o9cindiU31MbM/2za4NORpeNdb59nU+FtLOfWTd4xpvS1+wLDnTzs94r7nbf
QxdxfObDWs1tSv1JjArdydmB/rxGnpTeeV/rN3HT14ydEkclpd+fLae+1fg4
cfadlnMucV5cpbzxZhfdDC1PeIZQt8R3oLwJKWpfY2cPkB9XyrNa+TbIfld6
P/GW/3Pha6Evfivv4OEu2zF31pHYJz4IcUxshhnqvVl+c7dxpfihD1txojiH
WPaW+JZ4Tg5xDOrAj09EvJd4MD4ROG9qyjuHTY0Z/8R/wt593DvmJ9xrm/Vh
vqs8sR+6aKcVy/Js5qzh3DhN+4u7s3bWt9UebNTu61tMW/OcYtp7FbaBztny
ot6+9CvRzZ1VV+3BVu1bUsbsrR3Zy3xPv8/wPERH4MthQ2L7TvCM4Kwo2b7H
2q6vOEr3+qzthvaHbLF3PeM4U7oY68APYy7EXT+O8jJt2LaWlftN3JdzgXu0
fuoTdCZ+M/9P8s/fX71b5459sXzFZnrPcYnpzO6SPDqumL7N556dn5n/WPr4
5gw8XZ70lr5/WveJbT83TnTAMQYoP/DofXFR11sef+UnFPPM7B3pycW09XsW
8z0A71N4U9LFdax3vbq6Zge1hTiPvqt+Rae0U07ogy+LnUTckf+OuCfmv6RP
vJssV8baKkP/dC7we5W2Evd8fZVHaD/GM+NY5Zkx0WezuiSt3y6mjPdSzm/z
rOcNLnPFl8FeYEzas86csdj3HAfl8hcai86lwX74YZ2VYXiFj7laG3OAvsHZ
zvv/AxgrdnE=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlV1QlVUUhjenxEkaZwjp7HPOV6GMNpX9gIk1VtOvlimloiZpoRVBhYhZ
HNM0JjJxsin/6qLJaQqzEijLQKhEuemipvuyojKbQcsaa6arpuf15eKZeb/9
s7691l5r7YkrmxesSoUQ2uBcuDqGcBkDU2AGugpK0EWFIbRnQlicDmERLIPl
o0g/CxvhbdYsZG0aY53oesb+LAhhDDYmYas/F8LQ+BAGoTvLPqg9L4QlsAH9
QxLCLyUhnID96L3YqMFeb1EII+gu7N2NrSVQjb11We/dOQbNfD97/mNvwQT+
i04YK+UsF0IFuow9jeyth0XSGft2PryA7oM8+rVx/Avbvye2NRb+QE9lz5kC
+7SaszThTye+vAcH0NcyX4ntcqhEXwIjrP0NdrD+cr5PFnhsSvSY5mRzIt97
0vatBubyfTvMRE+H29CnOMPxUmIEI+hpGfumeJeiTyaeOwe60FUZz+lO3pR/
jG0mPh2wM3GMFetT8GNiH+Wr/nEaPWnUvmKYQzdzvixnScFkzvMxPnfjew/3
81PWOaBceBG2wDbmI/MzmO9Ab2LPEHsPw0b0zTA15ZxrYH0/1KGXw3zm3ucM
P5c4Jz5AXxEd2zJ4mbVfRvumHHmH85XzPVzgGCvWz0f/axDa0O9i41iJbcr2
DYy9Qu5Uk/t57O1ibAtzSXEIC9B9OefqERhADzD2b4lz7C/0J4wdGO8YfIg+
QQwGipwTPcoNxRhbPbAX3cI/KvhXJTyOfgLK0WXQhJ48el+K+UXo2dH5Pgfu
RE+DC1Kuyenoo1ozNoRZcAQ9h7E1zLVAbXSOK9fXwv3oS2FCyjFX7B+EVnQ7
rECvhDfQ++BJ2YrWnbAafQ+sRz8Dy9DPceZNujNYAU8z1s1cP3zDd0v03o9U
c+j7os/WDEvRhxRTYtUHB9EVjBWn7ONV6EdVI+g9ygn07sS5qzvSXd3FWHXK
MVKsWqP/pTOsRT8Abeht6hnRMVfsFfNVadesareT+6nHXj767L2wTr5Ga+Ws
crcdvkJ/DRuic0q5pbH92DuDjdOc7R/4HH0069yvgq38a170Xeq86mXXRPdG
1dT16ONZ9zrlkHJpVnQtqGctVi5E9wbVyB3RMa8b7cnqzQuj71p3XoPuyvis
rdTHQXQra+bh+1x4Ku0aVi2n4VW+G9OuLd3BZvTM6N6jnnZLtE3ZVo4p197C
Zm2ha1C9/6boXqyayvP9Kz70F3nNrqxr6Gwtwbd8fw+vj/OboLdhOOteoj3a
O5R17JTjefR3Wfdm7TmGvjW6dy/lDVjP90vYyBW756j3DGZcG+oJh9FfJO51
uqNhdAP7O/BlNzwWjbRyrhH9SHTubIWH0RdH56JqpCl6THOy8VB0DamWlHN1
0TmuXFfNqHbO3kGh35he9N+Jc0U95TP0pznXgnqKest10Xejmt2edg9RL1EP
24een7hXyed71dszjoXeVL2tV0a/5XpDbox+E/Q26A04lLjnqfcpJ9agGxLX
gnpWI/p/nxAbaw==
            "]], 
           
           PolygonBox[{{6397, 6396, 6060, 716, 6399}, {6024, 6023, 6022, 529, 
            6193}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9340073986989867, 0.776068357111902, 0.2657590078290053], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVE1LVGEUPtcvHAbGoLF73ztEGDili0CiMh1a9AvKohBqUzDilI1E0lgJ
LSraS7uiQqbGhVOOmmb/pC9q0W9oU9bzdJ7BFodz7/uer+ec57wDV6oTNzrM
7A6kE7IPkofshbyLzS71mL0OZlehV7Nml6Ef4H8PnI4nZj9SsybOv0EPw+d6
t9kh6BJkEd8nodcL8M0hHnQdvpOIsQT9FH5VfD/Peh6ep11mN2P3q0Fvwu4W
zjeC1xZBcGxTiI30VoZuwH8ZUocsoI4LGbNHsB/H/SCkaP49pv81xVwNjoe5
iW/IHAPrH4WckN+o8LAmA+4/KKIP+jtytZBzDbheQD/LOqbPqWP6lHpdr1Tb
/cTxtoKf0Zc9nQGGKmQWsq1YX1KPxTj8/4DzbfRwC/ou7jKIcxrx7gnvgs6m
EaNXs2pqXl9T79HP4DGWVetbzYXzqQWf16nE72m3mfOYlW6PW9NcSonXTzva
cOYl9Y22ZdkTE7HxnvOqCOMR+OfQvxHoncht6cNaWurXscR7fDTxHrBvcz1+
x5y0PYCaE/ClN3j8WeVkvkXV1P7nXJkn6vD+jKiGx7HPg/HXg/OM3FgJzofD
2gVyjnzr157A5F/tvyLnxO/I76rKdTZ2rp6LfVeYl3aJ/In3YfBapqHPxH4+
Efv+xcrFGvvEuY+pz4Vc6IJPAPYB6IK+Dwa3Y552XfRl/oa4yblXNI+y+tWv
fSIG4sqY10t8PHuj/b+WeP1T8iHvGCsjvrXEOX7Tvq7vumbaqZ6VNSv6MsZ8
cJ7Mp97zvPZwTPvHPSTXGqq/mfpOcFfab01Rsypqxye11+Q/z4Zs13Zcdkt6
i14GxzNsu73P6y18oveN7xx7saMeRZo5e7w/+Ls1GJxjtGnzLFL/z8fudzH2
/CW9Kyup83orOM/yqnWj4Dx/X/A8nAlnOvQf1rnYY9yG/gumnKNM
            "]], 
           PolygonBox[CompressedData["
1:eJwtkkkrhWEUx48xUti97/O+iUu2SjKVLHwCJFIssJBZMl1TlGkvO8LihoXL
NdyLb2KMT2Fj+p3Ou/jX/3nOOf8zxganOiezRaQW5II2X6QwX6QAbDmRm1Dk
ukgkVSxyBT/nrx9bkr/9QGQV/xWwDXZAJXaHUADK4Fv8bUY+6psOTSsD7uBx
NCbyRKbBEnzXEymmoL8skTW4oPEXaahWhphDch+DJP7z+DTi1gTm4P3gm9hC
3t3wHkC5kgPa4SPOeislxyb8IbRaHsEzeh+B9aY9f8K/8DmDJ8Al7zTvOeKn
wDr1VDvrtZd3Ah6L+vdBOXyDnOtgAAyCMWKG8O0Dad73oeXWnrS3FuzN1LrH
PBaJr3CmpZohfMiz3rSnLniKv9l8q0lrO3WmrTVVwd8Cm9UReA3sL4j0cuEv
gdk0/gK+4NkstYYZ+K2zXg/wecJ+H/WvOTPwOuotybad1cAX+BvPs53Gne1Q
d6k70d00+DZ7jan3TVO1dcbv8E7PdoVJhj27Cb2NbppegZ84m7XeoN5iq2+z
0pyae9uZr97wcmA7093pzC+daaq2ntaoZ1BOedIB+cX449vN6e39A2DqZgM=

            "]], 
           
           PolygonBox[{{6279, 6278, 6573, 1652, 6579}, {5986, 5985, 5974, 9, 
            5987}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8972903091573202, 0.6265011069886983, 0.23600885512701625`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtkMFKw2AQhBcbQ0HvSeyhhLyQFsF7ig0k0j6B4EVKb76FHoQiSp9Be/Xk
xXewxUoRxG/YPQyz//7zz87+ZT0bTQ/MrAI9kIBDoN5DYdalZo/wLjd7o7mH
F2BN/Qt/nphdofmAK3RbTO7hs8w9WngFajQd+jF1n34N33H+Rn+E3sA79R+9
JV4T9D+F+8r/hXrD/RcYJF7r7a7n75TtFazQTdE/wdeR+Tb3GdIfw8PwKuHL
1LPJR6yzZiexi3aaRF85TjP/nwv4PHbRTvLeRLab3DMoyzLea6cm/mSUuVYz
NaONfhP/tI2758L/eZ77/C4y/AMlzj93
            "]], 
           PolygonBox[CompressedData["
1:eJwtkM0KgWEQhSd/Say/72Oh7478FVlYKDbEFSgbyU65CIrym2vA1t49ICQb
zzTv4tQ5M3PmzPuGzX6pFxERD8RAxxdpJkTaYB2IhOARFXmCGLzBYJK5OKjB
54H11HNEZ9Bv9AtM2ZVE36O2Iw8ve5ajmUX4iJkz4kpf6M/Qp4jV3r5lxN1t
dXjJM6/WCvAVng7ZLbCE//BcGOihN+iq8+vNFc9q2lPPAv51+eqZwLeur3oP
37n9Whv6lqFZ+kZ96wF03T6d/QT2d1q7ZUXSgf1Fjgek4GN3n2YO4H8GjTRh

            "]], 
           PolygonBox[{{6018, 6017, 5986, 8, 5982}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8639774502849323, 0.4752351952650481, 0.20821178911100324`], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6281, 977, 6393}, {6410, 1012, 6412}, {975, 974, 
            978}, {6413, 975, 6571}, {1015, 974, 1012}, {977, 978, 974}, {
            6576, 978, 6395}, {6571, 975, 6572}, {6288, 975, 6413}, {1015, 
            973, 974}, {977, 974, 973}, {6568, 978, 6576}}], 
           
           PolygonBox[{{6411, 974, 975, 6288}, {6412, 1012, 974, 6411}, {6394,
             977, 973, 6392}, {6395, 978, 977, 6281}, {5983, 5982, 5976, 
            5977}, {6572, 975, 978, 6568}, {5977, 5976, 5978, 5979}, {6292, 
            6291, 6390, 6391}, {6019, 6018, 5982, 5983}}], 
           PolygonBox[{{6391, 6390, 6393, 977, 6394}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{5977, 7, 5983}, {5979, 7, 5977}, {6394, 976, 6391}, {
            5983, 7, 6019}, {6391, 976, 6292}, {6392, 976, 6394}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6019, 5983, 5977, 5979}], 
           LineBox[{6292, 6391, 6394, 6392}]}, "76"], 
         Annotation[#, 76, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{5978, 5976, 5982, 6018}], 
           
           LineBox[{6410, 6412, 6411, 6288, 6413, 6571, 6572, 6568, 6576, 
            6395, 6281, 6393, 6390, 6291}]}, "57"], 
         Annotation[#, 57, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5971, 5969, 5994, 5991, 5970, 5968, 5975, 5972, 5987, 
            5986, 6017}], 
           
           LineBox[{6398, 6400, 6277, 6269, 6279, 6579, 6577, 6582, 6272, 
            6578, 6580, 6873, 6878, 6647, 6831, 6575, 6251, 6070, 6567, 6435, 
            6404, 6433, 6431, 6408}]}, "38"], Annotation[#, 38, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6006, 6005, 6007, 6002, 6008, 6204, 6520, 6206, 6519, 
            6521, 6777, 6778, 6780, 6781, 6534, 6779, 6210, 6533, 6505, 6532, 
            6198, 6197, 6195, 6190, 6193, 6024, 6014, 5981, 5974, 5985, 
            6016}], 
           
           LineBox[{6432, 6427, 6434, 6429, 6437, 6565, 6563, 6561, 6569, 
            6805, 6885, 6880, 6881, 7091, 7088, 7092, 7094, 7093, 7097, 6874, 
            7099, 7096, 7095, 6830, 7098, 6877, 6876, 6875, 6829, 6584, 6583, 
            6581, 6573, 6278, 6268, 6276, 6399, 6397}]}, "19"], 
         Annotation[#, 19, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6001, 5995, 5998, 5996, 5997, 5989, 17, 14, 11, 584, 581, 
            578, 6143, 6217, 6215, 6216}], 
           
           LineBox[{6221, 6061, 6222, 6047, 6220, 6226, 6219, 6213, 6074, 
            6225, 6224, 6214, 6230, 6176, 6229, 6235}], 
           LineBox[{6227, 6228, 6218, 6234}], 
           LineBox[{6232, 6233, 6223, 6236}], 
           LineBox[{6239, 6241, 6240, 6238, 6231, 6245, 6244, 6243}], 
           
           LineBox[{6248, 6250, 6249, 6254, 6247, 6237, 6174, 6253, 6252, 
            6242, 6259, 6258, 6256, 6257, 6246, 6263, 6260, 6262, 6095, 6261, 
            6264, 6265, 6267, 6271, 6270}], 
           LineBox[{6275, 6273, 6060, 6396}], 
           LineBox[CompressedData["
1:eJwN0LcuAFAUgOHrIURNRO9Ro0YQdiWxGcSgDMoisYiNECT6ZtJrYtLr4hkM
GEREbw/gG7785w43uecmtvc190aEEAaIjwmhgCIiKWGJm+gQlnWVF55jQ3jk
ib24EHbpYZ+O+BA66aKbZVZYZZ01Ntnilg3u2OaeMx745ZQ/TvjhmG+O+OKd
Dz5544VXdjjkgDkWWWCeZppopIEJb55kjCv7jOu1DnJl10suOCfFPySTRRoZ
ZJLAbFQIiZpDv7mDJHM+5fQ5p+q0lumMpmsNXeZqzaOUXKqop45KaqmgmEKy
mXKvmxFGGaKVFtoY5h+i3kpI
            "]]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0UlIlGEcwOG3iGxTZ7RyZhwr2zetTNu3cxvRvl6ClkPUMUghbDlFZdDJ
pNSpCYQiK7oVikurprYY3QrKFuhWWVH0eHj4/d93vnW+wr1HNh4eFEJ4Rywe
QgZZxEmwjwPs5yCXEiFU6FVNkeYax+yVU58fQiU19hoHjjGf4La5kluc5B53
uEsr7exxfps+5AmPecRTOujkGV28oIduXvGG1/TynLexEJq1iZfsdu0H9pZ6
luUsYiErWMYSFlPGAkooZbvz5utc5nGcqcyhmBkUsdNxs3Q6u8wzdTaTmMYU
JjORQiYwnnEUkCSfBHF2uMY2NrOFrfTlhXCfFtZab6DBvEm/6Rn6SfGXId63
SgfrWR2q3ZqtaR2p5XqdiLlX6/hI1LpCP1BLjvVovppPkWv+rTX84TJxe2M5
bf5HgTlJgnzGkEeMar+3ee5WWmgn03fKIkKUXLLJ4ZD/pHngeyVDWMkqjnKO
Ks5zge984gc/+UW0wLsyikwi9NvP0mGMYDg37WVoj3bT5H5d2kkHKeqppo71
rGMNq2l0/A3SNPDFc/fxmffUescrXKSGMooppYgS/gMeHX/T
            "]]}, 
          RowBox[{"-", "19"}]], Annotation[#, -19, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6280, 6038, 6282, 6283}], 
           LineBox[CompressedData["
1:eJwN0LsuA3AUwOG/p3BdJF7CJBKK1WJCQo11Z0Tc2sRGIpq6G0hItKWqqCeQ
kLiHxT0G4hF8w5ffcM5yTnVXX2tvSQghRroshA2ipSFs6hYZsnSUh3BCgU7O
OKXIOWMVIYwzQZ5JCuSYqgzhWKd1hiv7sxonwRzRqhC66WGQYYboo5d+Bsgz
whGH5BjlgCwx0uyzQIYbbpnnjgQPXPPEPc888sE7n3wT54sXVnnlkgveWGOd
WlZYpp02UhTdltQlWmgmQiN7Zrtss8OfH/3wS40fpUjSxCIR6mmkjgb+AQaC
T3Q=
            "]], 
           LineBox[CompressedData["
1:eJwl0bsuJUAYwPHv4OCcdUlwbu68gFs2BO0WohAewQOgUClsNi6JS6LwBhKF
TiIKiWobRKNRiUSEWLtoJRzLTxS//GfyTTGZ6ZicnphKRMRPznMRe+xywBHv
jRHlTRF1ZKilniw5/vKPcZ7oaI7opJU2Wmjn0WyEB35wwy13/KHZmaR2axc9
9NLHd+7NfukSi8zbH+sRJyRaIko4tS7TNy3VJDny1JMlQwMvzhS0jkaaqKWc
d7P/FFnjkldWWWGBZYYZZIh+Bphxt2k2vd3U5ztpA3kyZKkizTdSVOcjKqmi
ghRptv1BjZ5pUtc1oRtaqkXd4plVHpkoROzomI7y2/qQOa7Y55oLZnNf//4B
5WhC1A==
            "]], 
           LineBox[{6041, 6274, 6045, 6285, 6037, 6284, 6286, 6041}]}, 
          RowBox[{"-", "38"}]], Annotation[#, -38, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz7suA2AUB/DjKdBazHaJNBq9JBaLuoSSlo40zDZPQDu1G5IatJ7AdeoD
1HWiZmrH1J/hl//5ck7OyTdZ2S/sjUTEIv2xiDc++OSdL7oM+KY3HvHAI088
0xqNeJGvXCUirmlzzx233NDhkqNkxDG71DikzpneiSz918xOmKHKDtNsUWaB
KdaosM0GRTYpsc4qp3bNy2Uu1CtyiSw58mTou3+uf0CLP+9ffhjQ9L8Gaerk
SJFlhjmGBJk39Q==
            "]], 
           LineBox[CompressedData["
1:eJwl0bkrx2EcwPGPI9fE5A7JQGx2OYocP8dgUBaTDOQsC7Ip/g8mJYNS+LkG
s0EW2ZByK7eXDK/en6e+z7en56kYGusbTYmIcU7zIzZYZ4tjvosi8ooj2ukm
QQ8ddNFJK8200UQLwZq9jbqqfTSY+xlgkMySiBHN0mxyyGWOeuZZYJdjkhxx
QpRG7OkBhyyyzzIr7PhvndZSw7j1BMPMMMU0Jc41qRVaTiFVfBVGlGkl1WSS
ThYP7iVDf3wT+qkp+qFpmsq7+eXv/vRMoyDiRq+54o57nnjkjWdeWeKWXntX
NaHtJM3bzHLBJpecM5n//36/vbBE0g==
            "]], 
           
           LineBox[{6661, 6701, 6700, 6702, 6699, 7015, 6686, 7013, 6703, 
            6705, 6704, 6695, 6682, 6698, 6696, 6661}], 
           
           LineBox[{7214, 7195, 7194, 7142, 7192, 7189, 6936, 7191, 7190, 
            7193, 7214}]}, 
          RowBox[{"-", "57"}]], Annotation[#, -57, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6389, 6386, 6387, 6383, 6385, 6384, 6388, 6617, 6619, 
            6620, 6616, 6622, 6373, 6624, 6623, 6625, 6626, 6813, 6823, 6621, 
            6732, 6807, 6816, 6815, 6818, 6814, 6809, 6806, 6810, 7103, 7100, 
            7065, 6799, 7067, 7068, 6631, 7063, 7070, 7059, 7069, 7066, 7064, 
            6895, 6883, 7062, 7060, 6557, 7061, 7058, 7034, 7036, 7037, 7032, 
            6902, 6897, 6899, 6901, 6903, 6771, 6547, 6546, 6531, 6538, 6461, 
            6460, 6447, 6456, 6458}], 
           
           LineBox[{6099, 6065, 6062, 6071, 6085, 6909, 6928, 6982, 6932, 
            6923, 6926, 6925, 6921, 6477, 6922, 6916, 6996, 6913, 7001, 7004, 
            6808, 7007, 7179, 7174, 7182, 7183, 7188, 7292, 7293, 7291, 7204, 
            7290, 7206, 7289, 7012, 7288, 7209, 7208, 7207, 7017, 7011, 7010, 
            7009, 7008, 7126, 6649, 6574, 6648, 6570, 6646, 6645, 6638, 6109, 
            6110, 6108, 6098, 6099}], 
           LineBox[{6116, 6102, 6105, 6115, 6116}], 
           
           LineBox[{7111, 7124, 7135, 7203, 7139, 7185, 7128, 6709, 7117, 
            7116, 7111}], 
           LineBox[{6683, 6685, 7014, 6690, 6692, 6694, 6683}], 
           LineBox[{7121, 7125, 7123, 7110, 7134, 7113, 7108, 7121}]}, 
          RowBox[{"-", "76"}]], Annotation[#, -76, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6382, 6370, 6371, 6369, 6376, 6375, 6374, 6372, 6377, 
            6628, 6629, 6630, 6637, 6357, 6636, 6632, 6633, 6606, 6635, 6602, 
            6801, 6802, 6790, 6562, 6804, 6796, 6795, 6800, 6797, 6788, 6798, 
            6794, 6791, 6792, 6601, 6789, 6793, 7031, 6554, 6549, 7035, 6900, 
            6891, 6898, 6536, 6774, 6537, 6535, 6526, 6528, 6442, 6441, 6430, 
            6420, 6440, 6439, 6444}], 
           
           LineBox[{6080, 6078, 6084, 6762, 6924, 6920, 6919, 6914, 6618, 
            6995, 6997, 7000, 6999, 7462, 7129, 7180, 7181, 7151, 7186, 7152, 
            7187, 7138, 7127, 7205, 7136, 7109, 7133, 6627, 7131, 7115, 7107, 
            7114, 7112, 6712, 6716, 6643, 6706, 6710, 6642, 6640, 6641, 6639, 
            6094, 6093, 6079, 6080}], 
           LineBox[{6711, 7106, 7122, 7118, 7120, 7119, 6711}]}, 
          RowBox[{"-", "95"}]], Annotation[#, -95, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6363, 6361, 6355, 6364, 6358, 6359, 6036, 6360, 6356, 
            6348, 6350, 6351, 6455, 6607, 6599, 6328, 6516, 6604, 6603, 6605, 
            6600, 6541, 6513, 6543, 6540, 6544, 6775, 6770, 6518, 6539, 6769, 
            6530, 6527, 6772, 6512, 6773, 6768, 6448, 6529, 6498, 6525, 6423, 
            6422, 6418, 6416, 6438}], 
           
           LineBox[{6092, 6727, 6752, 6767, 6720, 7157, 6994, 7459, 7461, 
            7460, 7156, 6976, 7160, 7159, 7168, 7137, 7132, 7130, 7003, 6746, 
            6745, 6737, 6739, 6741, 6354, 6473, 6092}], 
           
           LineBox[{6734, 6708, 6722, 6719, 6713, 6714, 6717, 6644, 6728, 
            6736, 6735, 6729, 6731, 6734}]}, 
          RowBox[{"-", "114"}]], Annotation[#, -114, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6349, 6352, 6310, 6342, 6340, 6346, 6345, 6347, 6343, 
            6335, 6043, 6339, 6510, 6542, 6514, 6443, 6327, 6508, 6506, 6517, 
            6515, 6509, 6511, 6336, 6507, 6497, 6403, 6500, 6496, 6311, 6405, 
            6406, 6419, 6409, 6415, 6417}], 
           
           LineBox[{6091, 6726, 6751, 6766, 7162, 7164, 7155, 7166, 7158, 
            7167, 6915, 7457, 7458, 6764, 6763, 6744, 6756, 6742, 6740, 6353, 
            6472, 6091}], 
           LineBox[{6733, 6707, 6721, 6718, 6715, 6730, 6733}]}, 
          RowBox[{"-", "133"}]], Annotation[#, -133, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6337, 6333, 6338, 6323, 6325, 6324, 6330, 6331, 6312, 
            6326, 6313, 6317, 6318, 6309, 6298, 6255, 6302, 6297, 6499, 6402, 
            6299, 6303, 6290, 6294, 6401}], 
           
           LineBox[{6090, 6725, 6750, 6765, 7161, 7163, 7154, 7173, 7170, 
            7456, 7453, 6747, 6743, 6755, 6759, 6090}]}, 
          RowBox[{"-", "152"}]], Annotation[#, -152, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6295, 6266, 6293, 6304, 6287, 6289, 6300, 6301, 6040, 
            6296, 6319, 6039, 6316, 6314, 6315}], 
           LineBox[{6329, 6059, 6308, 6332}], 
           LineBox[{6089, 6724, 6749, 6908, 6761, 6754, 6758, 6089}], 
           LineBox[{7455, 7452, 7454, 7165, 7171, 7153, 7172, 7169, 7455}]}, 
          RowBox[{"-", "171"}]], Annotation[#, -171, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6723, 6088, 6757, 6753, 6760, 6907, 6748, 6723}]}, 
          RowBox[{"-", "190"}]], 
         Annotation[#, -190, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
QUpsiB00aFmi/AkGi14dX8Zfjv8BTKy6vA==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.55354076460296}, {
                    Rational[
                    15, 2], -92.55354076460296}}, {{-7.5, \
-92.55354076460296}, {7.5, -92.55354076460296}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -78.92218238091672}, {
                    Rational[
                    15, 2], -78.92218238091672}}, {{-7.5, \
-78.92218238091672}, {7.5, -78.92218238091672}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -65.29082399723049}, {
                    Rational[
                    15, 2], -65.29082399723049}}, {{-7.5, \
-65.29082399723049}, {7.5, -65.29082399723049}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.65946561354426}, {
                    Rational[
                    15, 2], -51.65946561354426}}, {{-7.5, \
-51.65946561354426}, {7.5, -51.65946561354426}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -38.028107229858016`}, {
                    Rational[
                    15, 2], -38.028107229858016`}}, {{-7.5, \
-38.028107229858016`}, {7.5, -38.028107229858016`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -24.396748846171782`}, {
                    Rational[
                    15, 2], -24.396748846171782`}}, {{-7.5, \
-24.396748846171782`}, {7.5, -24.396748846171782`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.765390462485549`}, {
                    Rational[
                    15, 2], -10.765390462485549`}}, {{-7.5, \
-10.765390462485549`}, {7.5, -10.765390462485549`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 2.865967921200692}, {
                    Rational[15, 2], 2.865967921200692}}, {{-7.5, 
                  2.865967921200692}, {7.5, 2.865967921200692}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 16.497326304886926`}, {
                    Rational[15, 2], 16.497326304886926`}}, {{-7.5, 
                  16.497326304886926`}, {7.5, 16.497326304886926`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.128684688573163`}, {
                    Rational[15, 2], 30.128684688573163`}}, {{-7.5, 
                  30.128684688573163`}, {7.5, 30.128684688573163`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 43.7600430722594}, {
                    Rational[15, 2], 43.7600430722594}}, {{-7.5, 
                  43.7600430722594}, {7.5, 43.7600430722594}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 57.39140145594564}, {
                    Rational[15, 2], 57.39140145594564}}, {{-7.5, 
                  57.39140145594564}, {7.5, 57.39140145594564}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.02275983963187}, {
                    Rational[15, 2], 71.02275983963187}}, {{-7.5, 
                  71.02275983963187}, {7.5, 71.02275983963187}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 84.65411822331811}, {
                    Rational[15, 2], 84.65411822331811}}, {{-7.5, 
                  84.65411822331811}, {7.5, 84.65411822331811}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 98.28547660700434}, {
                    Rational[15, 2], 98.28547660700434}}, {{-7.5, 
                  98.28547660700434}, {7.5, 98.28547660700434}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -99.72793991391151}, 
                    Offset[{4., 0}, {7.5, -99.72793991391151}]}, {{
                    7.5, -63.85594416736878}, 
                    Offset[{4., 0}, {7.5, -63.85594416736878}]}, {{
                    7.5, -27.983948420826056`}, 
                    Offset[{4., 0}, {7.5, -27.983948420826056`}]}, {{7.5, 
                    7.888047325716671}, 
                    Offset[{4., 0}, {7.5, 7.888047325716671}]}, {{7.5, 
                    43.7600430722594}, 
                    Offset[{4., 0}, {7.5, 43.7600430722594}]}, {{7.5, 
                    79.63203881880213}, 
                    Offset[{4., 0}, {7.5, 79.63203881880213}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -106.90233906322007`}, 
                    Offset[{2.5, 0.}, {7.5, -106.90233906322007`}]}, {{
                    7.5, -92.55354076460297}, 
                    Offset[{2.5, 0.}, {7.5, -92.55354076460297}]}, {{
                    7.5, -85.37914161529442}, 
                    Offset[{2.5, 0.}, {7.5, -85.37914161529442}]}, {{
                    7.5, -78.20474246598587}, 
                    Offset[{2.5, 0.}, {7.5, -78.20474246598587}]}, {{
                    7.5, -71.03034331667733}, 
                    Offset[{2.5, 0.}, {7.5, -71.03034331667733}]}, {{
                    7.5, -56.68154501806024}, 
                    Offset[{2.5, 0.}, {7.5, -56.68154501806024}]}, {{
                    7.5, -49.50714586875169}, 
                    Offset[{2.5, 0.}, {7.5, -49.50714586875169}]}, {{
                    7.5, -42.33274671944315}, 
                    Offset[{2.5, 0.}, {7.5, -42.33274671944315}]}, {{
                    7.5, -35.1583475701346}, 
                    Offset[{2.5, 0.}, {7.5, -35.1583475701346}]}, {{
                    7.5, -20.80954927151751}, 
                    Offset[{2.5, 0.}, {7.5, -20.80954927151751}]}, {{
                    7.5, -13.635150122208966`}, 
                    Offset[{2.5, 0.}, {7.5, -13.635150122208966`}]}, {{
                    7.5, -6.460750972900421}, 
                    Offset[{2.5, 0.}, {7.5, -6.460750972900421}]}, {{7.5, 
                    0.7136481764081251}, 
                    Offset[{2.5, 0.}, {7.5, 0.7136481764081251}]}, {{7.5, 
                    15.062446475025215`}, 
                    Offset[{2.5, 0.}, {7.5, 15.062446475025215`}]}, {{7.5, 
                    22.23684562433376}, 
                    Offset[{2.5, 0.}, {7.5, 22.23684562433376}]}, {{7.5, 
                    29.411244773642306`}, 
                    Offset[{2.5, 0.}, {7.5, 29.411244773642306`}]}, {{7.5, 
                    36.58564392295085}, 
                    Offset[{2.5, 0.}, {7.5, 36.58564392295085}]}, {{7.5, 
                    50.93444222156794}, 
                    Offset[{2.5, 0.}, {7.5, 50.93444222156794}]}, {{7.5, 
                    58.10884137087649}, 
                    Offset[{2.5, 0.}, {7.5, 58.10884137087649}]}, {{7.5, 
                    65.28324052018503}, 
                    Offset[{2.5, 0.}, {7.5, 65.28324052018503}]}, {{7.5, 
                    72.45763966949357}, 
                    Offset[{2.5, 0.}, {7.5, 72.45763966949357}]}, {{7.5, 
                    86.80643796811067}, 
                    Offset[{2.5, 0.}, {7.5, 86.80643796811067}]}, {{7.5, 
                    93.98083711741921}, 
                    Offset[{2.5, 0.}, {7.5, 93.98083711741921}]}, {{7.5, 
                    101.15523626672775`}, 
                    Offset[{2.5, 0.}, {7.5, 101.15523626672775`}]}, {{7.5, 
                    108.3296354160363}, 
                    Offset[{2.5, 0.}, {7.5, 108.3296354160363}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "200"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -99.72793991391151}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "150"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -63.85594416736878}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "100"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -27.983948420826056`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 7.888047325716671}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 43.7600430722594}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 79.63203881880213}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "217.8022714101702`"}], ",", 
                   "95.81284160132856`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "190.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "171.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "152.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "133.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "114.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "95.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "76.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "57.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "38.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "19.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"19.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"38.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"57.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"76.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693271439075743*^9, 3.693271615655843*^9, 
  3.693271794517073*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
9hN6Wfe7O4kHTAzqKXDt8/T0CH4M3phYTfd+QYHWfFnHcag+qD9/YQMnnoLM
U7TmStR/Xd3hYcQ/OKuofrCKAilpaZLfEP/mg5WBTjUnnr/pvUPoZfHobvjt
dRcFGKm5odv50PpJp9SIpxuN188XqCi/Dif0g1V7OfHo5X44K9ZCAZWpFXIC
KJ6P0w/NyH1NAVPvU9PEUH3kFCg/d27j9M/Sm/sv9WruEezg/kwBWQ3r6GW8
qK3+6IfbIAX0bU5q5iI9GmVhcne+cfi2FL0P699ToDFowvFuxFMnWMRn91FA
p4JL6SkaD+MrrvM/9nN4st6vf9H7g/j8YFpQmpo5DwZTFmRqhXNTYWByskUY
+v9e8SsWKfNS2Xz0nX39wUMUSLPftqIa8Q9WRl2EEQo8rzcvSED6d+1ZqPfz
8wkWr/UXveMJvTYzL17dt0OSHY/hmufLp+2SBInjn2/Mp1Ah1jebr2u3JCgw
e7acZVJBzy2r4MhB1ntZKhxg5ubQD0tC/HN6zRQJKthf9Lx8+ogk3G/dlrha
gQqSB/NvRkVIwgjRf211pHBftCTkLdrfIStOhQj5tY42pyShfeO18ilyVPCe
1m2q6c7p3+tRw5to1G4JeDpRnkqFpolbjnOvkgQLxo/F05Wp0JBv+f3pWg5/
hPuKasc6SRgM6th4DcVvZI1ZDQRIwvsfj7q8lahsvSz+b3qzmhL0BOdKAuvz
ILXEQwn3UTtA7WRuGYrntGcAdb+5JDRbaPtFqVChOmldYcwiTv/csYJzJzlI
wpp214ANiL/+8FNVMWrXP7zd0q7M0cv6PImst5GkV329S+6JcZz+k3wj4L66
JMQGPn+7AaOCokdJ+cB4STB8m1nXoUmF7tQfG2yncvg0JYOA+9Mk4W6OmF08
HeXTQ26tkYEkiJz2P2ekToUrhF4ukt61Y+i97n4xafoInc2HmAft2TdKh06t
5K360lRwmODoVv2DDhWLzD966FDhGm/mRC8qp/9oJ6GVanRJmL3AOLuWQYXh
lrwTrZKSsDd+u/v5iVTQIOlNJOllkvR+kHZaY1jDice6f4rbYtROWBVlcl4W
6a+gOASiNjzQ2GU1hQoyzyeEGHRx+El5+/p6UTvEbW6jnwwVTE80LU16Q4eD
R6fnP9f773oblJq16uLp7PpBqzy5b3F09Jx569J6dH1UHD8grITaTz7VLG4z
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
i+RfXLTUWe/q/EY8bAnFdihOAS58Xty4YHYr3uv/8SslQeGP/VIF8m+za2cz
Idps4V1nNE7lJaVKhZcUISrhzQJHVKes/Wp7iP1q3+ad//bKmAlvmt2+i6J2
9Vo+LCv1Z/77myqn/rlfjfz+3pn0/pb8/i5sZ9CPm14KsMbpNa/21Sa82eO1
2HbUfjLbmNtYte2P98snllrlJ6L2FdfrR7VuN+HtHmobJXkUofBwqmaiZtsf
1yf5+iPXJ/l95dFzt2yy9eXBaWXebPOAJrzsLs3y9GR5KPF3/vGmu/WP95W1
48vO51fIg+l8x3GFEU24Q9S3dGHUHqZEckUJtOGzSHqPkvS+IumtJ97H3STe
x8FXuyT177KgGznc5PKqEU93vVLzflAW1i8I9a6JaP3jfVxXeciWnpNyMK67
9Xjt+Cb8eribeEm0HJxp/jTF+VYr+31cF6H3GKF3KaH3IUkvaz7vHWM+jyLm
cxNiPo8j+S02b/i8KiqMAYKLlD9XufNCjEdE+11JKdg7ybPKwYuX7S+pTPgt
MjU+ql2JYUD/5kq3uBU8IDlbczLXOCkodbcQE0FtT2K+XkvM1+T5Pod0PbI+
v6ETn99kRI77OnNACnSPhn7dE4fuH0c0Dc72SYFGtC+tfV0r+/1+AfF+P7ic
eiD+mDQ0zF15ZeWZRtymb46MU6g0KLsa2zxe28p+n9tOvM+9mm4bK3VPBnxV
S7a5XGjElUMKjzy+JQNDh5L2F21qZb/P1SPe5+bmn1diusrC/GVul5rvNeIJ
S0V0XZbLwrQ1J7+U7mvFnxP1cItUD3pEPVwk6mEDUQ9GpM+fgkjxW5HiJ38+
IXvjSniDpgzcMxPG3BIb8T4Vx9pINRl4OWvimzkbWvG5/1LvN0LvOOJ86Q3i
fGkB4R8/i/CPJ/ufs86XRhHnS9sn937dsbsRt/x40s7rGg22mmXpnULzXYiJ
naPJPDrEE+czfYnzmYeunGlwWdaKv+o8oLo9lwYBebWVL41acQdn+QNBFnS2
nzvLT/xTzObVm4Ua8ReXCgT6UFtswsMnPwRb8TU3by1rXiv5h5871hxrIzix
EdfbxKcT00CHtZr02rWqrbib+LsPmT/94El++ltI8a4nxVND2q+Zaf/F/5MF
Eyy87j3ZFKgAWLjS7Y/XFMFlW6GiwyYF9n7ZdmK/7GD1acqquUx47yBS/ha1
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
tNmccUP8TeO4ci0C54FolI9j+Eci/Jp5U2ZQTAV19mXztAHkp7+4OhZQb5j9
LjIo/U0Eqx9ayZq/qVBhMbhdFPOtc0j4ck4PzltN/vukYiJIt/delsJ5dImy
iiKM+obbtOzKxRIq/BvffoYP+eVATfzVpc83jjUf/8Q1TgT+WrMjynjfOZrb
A1bh/fDWLXK2Y7+0WV4rI2M+ghjrHwdiPItralNY34kwOHtal4zrOr19JXWf
idC0t+qdeB0FjAuyP++ZlIY80wn2LN7fhYfujJGO//LxJ5Oj5i7in0+0mXQF
Dw0uZTrVJrzH+1l3770hroupJdrFDiKeWKZWvsb+4vr3un091ueDkM73rXje
ZOoR8h3EK/Vjxy+swftYiGi8t32ECKlbL/0m4fvBd/V7RVBvbLyULpPPT0N+
EibUNUqEdfMep0PQn3nTexdP/fjPn9sfMm0TuonA+f/bOnekLTXw/Hy3yu/f
/lHBL8RWFZ4SISv90f2kn1TYFjVM+4J8/Wbrfa8tWE+0hLOzgagPr/DmbJxC
ffI1ZdkXacznxQ0ZHHfwPttb6nsPcpBQh1yrs8L6f2Ie/76AnwSBHpW+RogX
dVwcd7vxvEJ1bZ0XmP/iqKEN6djvtHreX7GCNDjr6hpnjPsL7dPZx4f+uT7g
b/qL9x8qaVfFgfHvD+eWaZzA+nnwGYTw/VPKP4WT8HypdxSyKsZ/2YSc/B7z
03Rv8gwV11vc33Xlol61q189fRfPP3pf55Y47hfZ22hwC/fPtTLYeBL93Zfn
bxaL+d44QZAic5JAkO92XpEfCYx2Od3vmJMG+ukn+q24XzdLar8L6hE9R9PL
Rqivo/cXcCdjvRgSgirHcH40yOlrbUD/tz4u6r2M803oZ5tT9xgRjO37+dn9
yH/Ljl5d+n3XpgLiqoOI77V6830UPhLsLjK2iMd5059dN9+H+u//7utYa+CP
8d//3Z/K1lMd9kvxfioJ+oX1EvBtB/0g2mWswxXn0N4/S2jtxXoYul322A7v
3ze/eOAJ2pWD+VNK6P+QVVrKB3x+Zf/lB+64n/nY8okE1Kczh083EzH+Spdf
N6bQv4Yve0cL0JYfqtq6H+1UO3WhXZj/WKe4iSfzRHhjonTFHG3N8rpEPcxX
vIW7SQraDBGjgiu4n0Ro0xZ/tDtfTZ87g+urOkq9QtG/0ZVyVv8w3xtVb92K
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
L67xIB9s+mL3tEQY8gNibSInyQDX7XtfCBBBX677Sw3my/LzkaBnX4WgyMWS
t/UcGQT+TKjGthBA44nAcyKuuy0ouA85CsMW4e9FaSlkyIr83MHDTwSZgHw5
Fzmc3/efDvxl80Brb/j7CFMiuLvwX48ZFYKnb287bG2kwI+y2yfd7IWAUrn+
55ASGXqLQzMnkwng+kHrg/8VKrx/tz71qBUXvA/jrVn+Cut6ysvO/YogkCnE
ng5bKjRa8zeqTHDDZdUYTyEfIjx7fHe9lLsQCBrLrH74Hu/79qzRNYYgJFC6
iVc7SUBncC3+YxDg3ys5z+A3BIhUvcztRRGAqhxa670GCuwkLFN/bi4AboNa
UcZBJAg5/3y0rkoE1snllcj/oMDZ80O2yxL4IHt1TiH/GhLIvZeceMGJ9+Op
0qjQRgGz23udnsTzg/1E4I1oK5xTQY5eV46LwDvl/UfVvUXA7fc+NeVJXoiM
D6478UoEwotfnjnQyw9C7SaFs6pUcHIofFJqwAPyGapHq2uIMNoeVBbJIQyT
4fbPJCyo8Oh4t3DVKDdMHQz21+VGXr81SYq9WwjUkt4S6gkEcJo5yzWrxwWC
gsaqHL0iUODXt2jcsAxaZJQSdFH/Xkvu5vPP4MA+mF7sCSGACf8yw8/tAqDB
K/5v0o4MfJs98tf0DrHXnQ16IypHgNmi+a3KfPxQdIPUvISTASEX45uyF9jn
XM7XPNqCuJmodq20iwNkq98/vT8kAlYD7lfbfvFAwOw4XWUzCX66/ZRdpz/J
3j7zMUzdjQRt7z62h0tMsp0FYgU9mkSgMrowKqubA8Q6IiaPD4vANT7pqNwk
bjjJfj2qZy8C2fbfnF36eGCbAbx0sSFBu5Vph5ztJLt8W+RWVhURSnWiHHkL
ptmrx3PGN8qgvw5mMW5vFtjqB4rXX91JAL+xYePqVg6w0Ym3yRcmwP3Q0CFJ
Qy5wmt1emGpJhJzDPHybm6fZW5XjhZdfwnj8r2obpc+xr4gdGQ3HOt5zaZP8
os8c2+9Ozbt373r/930IZftl7I/DXezBVyGBRn+kQX5cbi/31g62jeV+7Wvu
0pA0bij1WaWLnXI326G2WxqyjeXOXJtsZ/edn9Jh9bAg7r3yIbHsNvbTKiPL
jEoWZLZmN5r+6fvf/i/C1h/XLxlkf8p/V60yKw3nnj01eHp7+H/rm6RaJ3ec
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
ZU7GO9+QAo5OUz6vsxSQ42QWq++mQdfCoUhnNyIo7flZFqNMg082jgkiSUTY
YNRhsTFSCkiuvy+K6VEgu6JduzpDCuo5Re/VXaDAn5gNU3VCoqDkt33w6ylh
uN1xa0od8eslU4rKn8iEogGeNZ+Qn/Mu1ir57ueE9T0jknoFdLAmjH5XMuOE
DQ+SMxuq6GA5scf48EFOYBzR+Wm7Swy0vU+YT0xwQv/Ji49jEXe29KrPaRct
/Z2I2qaSHaJw7XNopyMnE06kO/kr7RKFts0eb+/T0J6xFDi6HvXLxT62QaAU
xBcHH/p6nw7qt15lbRRlgmRZscGhe3TIiLujpJssBWs+X2dsy6fDmbC+C6wg
KXh1bp/3At7Htaw7kkVYn7YRFnVheB8GT5XmdLE/J5L30ISQb418uNf5Cu1T
N/wTGcjHDN7c3ETD56+OrDJah/elbE1sTebF/tr1PrcZ7d7L3bLcuL6nOEjE
mbb0fbK8kyfx/fU/7nMMitHAI/w8/1Hsj/qo9AUHceRTfwmzTFyPMnB+dgL5
YhvnpmUJyBfd7O3PieJ+HfseJgcuQzzg0jMJRttTOC6RF/Fk3W1Z1ijaIs+O
XYrFejn0azrkK/IrA/EHOoD8dtXx2L8KeL6nV8LpM3jeVNFPDTKuPzP0O2eO
9tqBYpke9CdQ2I+1gPvPW2T71qO91u6qIi/uZxs3N1KI+zfvnN3pi3ibP8OY
uIbrMQ5WZkeQv27nM9yah3X3kpXkcXaECHEXrNbGYDzGeXYvxMeJ0GFBmhFF
O/bQi+S1eN6qY2t9uJf44YBa1TCed05t8UuRJA2UPA6n8fcRoV98KDce41e7
mxohgPFTrPZp3kM+WvlhircD+bx8ULP5Fgka+GxghfweIoLJvZaaYuSfwQUs
gjrGu/pTwcE+Nczf0X6ON0vfV1lob/iKfG/KuWL22gMilLn6DQouR76uqazd
gvxcPsFl0UEO+SHnwx0TeJ76ukeOS3y3flnr24oeIiSWPK2wXUmDOuaho4D6
wPWpQqz2NhpknfcZWfp+VUall99l3P/T+K8g/8tEuPPhw8cLmvh8iMFqPpwX
0n8fX8pUQf1AvSv3I4MIo2WMmXgN1Ou33U7MZBOBELjjSCH6K550UtPqOhFa
tZ/5ZmI/mosaLPBgP+6+a65utYoG0ytyixRuEiF7B6uxB/nyuSBOLt9MIuiO
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
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{7391, 406, 7411}, {7411, 406, 6468}, {6468, 406, 
            6484}, {6484, 406, 6423}, {6423, 406, 7391}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.28895349124655934`, 0.42103881838259827`, 0.9397668459068844], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6469, 6468, 6484, 6485}, {7412, 7411, 6468, 6469}, {
            7392, 7391, 7411, 7412}, {6485, 6484, 6423, 6424}, {6424, 6423, 
            7391, 7392}}]}]}, {
         EdgeForm[], 
         RGBColor[0.3890193185125883, 0.5113707138413027, 0.9460089448727136], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6494, 407, 6490}, {7210, 407, 7129}, {6490, 407, 
            6488}, {7129, 407, 6494}}], 
           
           PolygonBox[{{6486, 6485, 6424, 6425}, {7393, 7392, 7412, 7413}, {
            6425, 6424, 7392, 7393}}], 
           
           PolygonBox[{{7413, 7412, 6469, 407, 7210}, {6488, 407, 6469, 6485, 
            6486}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5030279200748518, 0.6074197525231438, 0.9540193470017295], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6505, 409, 6503}, {6507, 409, 6505}, {6503, 409, 
            6896}}], 
           
           PolygonBox[{{7414, 7413, 7210, 7211}, {7211, 7210, 7129, 7130}, {
            6495, 6494, 6490, 6491}, {7130, 7129, 6494, 6495}, {6491, 6490, 
            6488, 6489}, {6489, 6488, 6486, 6487}, {7394, 7393, 7413, 7414}}], 
           
           PolygonBox[{{6487, 6486, 6425, 409, 6507}, {6896, 409, 6425, 7393, 
            7394}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6368141968927922, 0.7160334790470353, 0.9645514927881175], 
         GraphicsGroupBox[{
           
           PolygonBox[{{7035, 408, 7168}, {7168, 408, 7180}, {6448, 397, 
            6462}, {6872, 397, 6515}, {6771, 408, 6721}, {6478, 397, 6537}, {
            6462, 397, 6478}, {7018, 408, 6771}, {6487, 410, 6489}, {6515, 
            397, 6448}, {6537, 397, 6872}, {6721, 408, 6513}, {6511, 410, 
            6509}, {6507, 410, 6487}, {6509, 410, 6508}, {7180, 408, 7018}}], 
           
           PolygonBox[{{6897, 6896, 7394, 7395}, {6506, 6505, 6503, 6504}, {
            6504, 6503, 6896, 6897}, {7212, 7211, 7130, 7131}, {7395, 7394, 
            7414, 7415}, {7415, 7414, 7211, 7212}}], 
           
           PolygonBox[{{7131, 7130, 6495, 408, 7035}, {6492, 6491, 6489, 410, 
            6511}, {6508, 410, 6507, 6505, 6506}, {6513, 408, 6495, 6491, 
            6492}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7628560972850802, 0.8146682482109628, 0.9769980245479806], 
         GraphicsGroupBox[{
           
           PolygonBox[{{7024, 4177, 7171}, {6466, 398, 6481}, {6506, 398, 
            6508}, {7049, 4177, 7178}, {7171, 4177, 7049}, {6471, 398, 
            6466}}], 
           
           PolygonBox[{{6722, 6721, 6513, 6514}, {6504, 412, 398, 6506}, {
            7396, 7395, 7415, 7416}, {6493, 6492, 6511, 6512}, {6898, 6897, 
            7395, 7396}, {6512, 6511, 6509, 6510}, {6514, 6513, 6492, 6493}, {
            6479, 6478, 6537, 6538}, {7416, 7415, 7212, 7213}, {7213, 7212, 
            7131, 7132}, {6463, 6462, 6478, 6479}, {6538, 6537, 6872, 6873}, {
            6448, 398, 412, 6515}, {7019, 7018, 6771, 6772}, {7181, 7180, 
            7018, 7019}, {6772, 6771, 6721, 6722}, {7132, 7131, 7035, 7036}}], 
           
           PolygonBox[{{7178, 4177, 7168, 7180, 7181}, {6510, 6509, 6508, 398,
             6471}, {6889, 412, 6504, 6897, 6898}, {7036, 7035, 7168, 4177, 
            7024}, {6873, 6872, 6515, 412, 6889}, {6481, 398, 6448, 6462, 
            6463}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8646603497729346, 0.8949207086017295, 0.9869532701243908], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6463, 401, 6481}, {6512, 411, 6493}, {6483, 401, 
            6464}, {6769, 399, 6719}, {6438, 388, 6444}, {6444, 388, 6452}, {
            6452, 388, 6528}, {6464, 401, 6480}, {6471, 399, 6510}, {6493, 
            411, 6514}, {6719, 399, 6482}}], 
           PolygonBox[CompressedData["
1:eJwtkKFuQkEQRafwFKSVJLs8U4ODfgIJfEBJPwELoUAgNZAgMICA6n5Zm4ej
AmRrwHFuZsVJJjN3Z+7d5/7726hkZjXI4JabXaEJLfiFU+pp9hLMDg9ma2hQ
/0SzbzjDJfobvS3qZkcYodmj/YIx9YTeGMpoMthSb6BCXc19h3b9wX90jbTS
SCuNtI/wlLtG2lPyukSzSDd0a85sBh3owg4P2+Ce5X0VPIsyfVC/pnyf0A5+
Q7cG7BrCNHoWZZpE72mmG7qlzEXyIC+94Lu0U393Bw2cNnc=
            "]], 
           
           PolygonBox[{{6467, 6466, 6481, 401, 6483}, {6482, 399, 6471, 6466, 
            6467}, {6519, 400, 6479, 6538, 6539}, {6723, 6722, 6514, 411, 
            6770}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9402476386663172, 0.9549573672696272, 0.9860293412128901], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6467, 402, 6482}, {6780, 1218, 6775}, {3153, 3314, 
            3152}, {6446, 391, 6439}, {6483, 402, 6467}, {6770, 1217, 6723}, {
            6916, 3152, 6864}, {3152, 3314, 1218}, {7165, 4180, 7183}, {6459, 
            389, 6460}, {6450, 389, 6459}, {7186, 4180, 7165}, {7182, 4180, 
            7179}, {7023, 3314, 7032}, {6724, 402, 6776}, {6439, 391, 6451}, {
            6769, 1217, 6770}, {6776, 402, 6449}, {6451, 391, 6247}, {6447, 
            389, 6480}, {7032, 3314, 6941}, {6945, 3153, 6955}, {6955, 3153, 
            6951}, {6438, 389, 6447}}], 
           PolygonBox[CompressedData["
1:eJwtj70OAVEQhSeyuu1U7l2JrXT2IVQ6PIIHsCERCja01kvxBOoVOgo6NFS+
ydziS07m58yZdJyPJjURaUAE26bIBhawhJkXmUKUiNQTq2mvhD38qH2hCxlc
mb3AGgpvMzpbOZEz9ODAoSPM0Xd2bsFDvTrsDGORAUTokzOt8yv0B97OdnT3
iX6EmvaykEUzaJaFs1292Ue3qL1iu5F6y1QFD/UqQnb9WX/Xn/X3HbqEtjc/
9cjRf6dDNMA=
            "]], 
           
           PolygonBox[{{6445, 6444, 6452, 391, 6446}, {6465, 6464, 6480, 389, 
            6450}, {6729, 1217, 6769, 6719, 6720}, {6449, 402, 6483, 6464, 
            6465}, {6247, 391, 6452, 6528, 6529}, {6460, 389, 6438, 6444, 
            6445}, {7183, 4180, 7182, 7020, 7021}, {6720, 6719, 6482, 402, 
            6724}, {7051, 7050, 7179, 4180, 7186}, {7021, 7020, 6773, 1218, 
            6944}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9745666378343938, 0.9805524206569751, 0.9279362274498575], 
         GraphicsGroupBox[{
           
           PolygonBox[{{6729, 1220, 6775}, {7021, 3315, 7183}, {6778, 1221, 
            6784}, {6780, 1221, 6864}, {6720, 1220, 6729}, {6724, 1220, 
            6720}, {7023, 3315, 6944}, {6441, 380, 6443}, {6465, 390, 6449}, {
            6774, 390, 6781}, {6784, 1221, 6783}, {392, 380, 393}, {6450, 390,
             6465}, {6442, 382, 6879}, {6782, 393, 6785}, {6785, 393, 6461}, {
            6446, 392, 6445}, {6437, 382, 6442}, {6445, 392, 6460}, {6944, 
            3315, 7021}}], 
           PolygonBox[CompressedData["
1:eJwtkcEuQ2EQhYe0HkA3/tsSlTbIFYSl2nqAPoHYtCtNWGijbsNCiOuteAqi
OxYs2RDiO5lZfMm5Mycz55/bPBp0j2fNbBkqsFY3W4UKVOEsM3ug8Qhj9Aq1
JuSwAR/U3uETvuACrmfMbqFAT/G8QAETWILFmKFZk8xna8cBur9g1oPLZHYF
z9SeYod2qabeEEZwD2Vyj7yj6JXR20+eZQzr6Dy5PoeWZpBhGJmUrdYwm4df
9J9uEf4b2Ez+Rr31Fc9bw2+Qx810u73YpxvsoOfwVOGOXhlIa4d27SbPoh3a
1YrvAtroU7wndZ+hWdPMe/IcJr9pER55O8mzKoOyKKOyfsNPIL0F24G0/pH+
1T8+ZUi9
            "]], 
           
           PolygonBox[{{6917, 6916, 6864, 1221, 6778}, {6496, 379, 6451, 6247,
             6248}, {6726, 1220, 6724, 6776, 6777}, {7166, 7165, 7183, 3315, 
            7043}, {7043, 3315, 7023, 7032, 7033}, {6777, 6776, 6449, 390, 
            6774}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9898392570135359, 0.9900662859029825, 0.8180533366530411], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtUbFKA1EQXDVIiqixy3t3TSAWIiISLa0kJoFUwS+wVFAwlzsknGejqJXg
R5lGsRKs0/oB2jnDTrHMu73dmdnd9tnV+HLZzA4QK4inaHaxZPYM7CVms4bZ
CDjQewgs8f8O8VUze0XdHLiH/LhlNkX+MJgdq54c5CsQ54gf1Hyj/g/YQV2F
3E5wzkq85JggrhHtFLxNs3rq2uQkNzXfEO8190qNjeDcmfQ+9P8T0UHPKXq7
wJvovSfAWct1BujNlef/x+hc9NuXLnewK56X6PPTbyZtelgP7j3TLIXeuXCi
91TI77l80m9d8y4S90c/VfQZSu28r51z97n2Sp1G8PcvPK8G1+BNKunQD3nJ
v5m6H85IzgfN00Tflu7C+4w0O3ewn7jHe9Ru62ZHwNvo/ktgof1w35VuSO2u
8tzfmnzS7z9qv1F5
            "]], 
           PolygonBox[CompressedData["
1:eJwtkk0vg0EUhadS3REJETMVghBlQReW/oRfgJWPhMRH5W1TLfVRifpbbIiV
RELaxIKFLgkh5Tm5s3iSm/ueOefOnXdsdXtpq8s5NwVpOMk6V4MEivAcnHuC
d2jD27Bzr/ADvzAA/dBB+wd93rkHjB6hjr5B7zJrGmln+L6Tcq4Ck9Sz3uoy
5Lx5dOIMmuUTj49gmcpux1nU07dzOODsJlxQz3Hmhuw7yFMP4lng2z5kvM2s
2echD99DNqs85FVDcwwJFKGKRwV2YQ++0G+kzFPeLXrNqJE2B9PQDZmI6iLe
pWCZytYZne31Nrs8e7QLNNdpu0OV+jTYXe7hhewrNA1vb6K3GcVjBMZhAha9
7VL6o2CovoVD6gVvu9AblPBr0WvCMv2VeOckZihLmTqvNz0LppF2jf56RLV2
pt2Vg2XpDoVg/1ASZ9Ss/zxoX3c=
            "]], 
           
           PolygonBox[{{6800, 3156, 6956, 6952, 6953}, {7028, 7027, 7174, 
            4178, 7201}, {6472, 370, 6442, 6879, 6880}, {6947, 6946, 6956, 
            3156, 7031}, {6779, 6778, 6784, 1224, 6727}, {7185, 4178, 7174, 
            7052, 7053}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9946791486829449, 0.9910275619904372, 0.6622363545056273], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVMFqU1EQnWqoIK2kIPX2voBIV36AICiCGwWFVBQx7pq2L1jQhLiJ1FXF
2opWqxh1I/0m3Qh1kZh0kWfdJNqiCMZzmBNwMZz75s7MnXPu3HdqoXa9esjM
KrDDsG7OrA3rwD7D0gmzj8DxxOwG1qeBFRrWd4DvYUcnzbaBW7Bl+F8knsf8
HdhjfB/gewh8Hs1uj5ntB+TDV4XVYBvR4/MzZtOwZcT8Qswmcm7mzaYKZg+j
98BedrF3DTFfgX9hi1gfQd7r6P5d1Wcf7OFs4jzOAHvAKmIWYD8QVwIOgvvp
2xOmWm+L4zngB63Je0O81oBl1asqjxz7Oa+Z5VzXp+itBVwHHi84L/Lj/nfY
Cmo18L0PnE1cF+pTl0bUlpyeIf8P4pvR97o6g7FtnTVQPdZtAB+oTjY6Z8Lv
MFXNK4nnvIzOkxyn0eNlaU7t5+BfxfoSsBtczzX4TxTcfxH+SdzBPXA/BnwS
PYaxj6KfdT7x83Y0ZzX1dR+WL7ie1LUpjsXEZ449bMF3QbPHGWz8x6kn3pzb
Ds6bQw/t4JrQX1d/7JM83qo+tXynNX2p7nEJ9lN19oLrQn02gfNjzvEubAo8
bwFzM34/Fel5oPl8FT22rNno6645V/SxVg3W1H2/AfaRW4QvC57POpzrtu54
pF9LGl5NvH/yGNfb4RsqqzbfRlExjP2k+sPgutc1H1+CcyGnWc3hycTPaElb
6lLSjA9Vh/1m4jTilorrQL7RW+jo7fUUlym2pDezKO3Z+4reF/8f8/JRy3W9
o9/B/yPM+xZ8f0n39w/lxrt8
            "]], 
           PolygonBox[CompressedData["
1:eJwtk8tLlGEUh4+iZDJjE0R8830DMlLLMk1bhOTSyyLDkGpXdsEJm4EoDW3R
TVEpDTLa1B+lm6CwZtSFdhHSGgvKfH6cd/HA7zvvOe+5vOfLD5cGi7Vm1g11
8Cxr9hQmYBLac2ZtUE7MKjCM7RoUIrPb0IXtZsrsFpxDf4rNVuA7bMFDfCah
l5i+gHSZswrcJ+Ye5MnRArvYqrCB3sx5DaplHhbgH7a/oSbVthVyKUaxvdw1
Ti0T0IP+Su6BGrMLUEXP4bNKo59hFv0bW4GzUUhx/yIxJWLvwpvEcyq3elJv
p7C1Qhu0wzwUUh7zGv2N+z5w93uYwb8Z2y/Oqqop8Z42Qg/qRTmUqzFt9g59
NOdatrN81/A9lPH4DPoi9w9CJzWdgUrkvanHVXQfMQ9SPgPNIpP1WpZgOvYY
xepN9DadiZ/pDZ/EnlO5dcdb9YftB+dXuP85+n/itaimI9QzkvjbawYv0Ycj
n6VmGpPnOLZjcBo6IJ3422xzZz96F//L+N6AevwfY3sUdkK7scn5+dDfz7Bz
2j3tqHa1HN5XPsvo7XDfJfiIngr16g2m0S9iz62e1Jt2uhxyKvcitlexv7He
WjuqXdXOa/c7Qi8n4CR8iXw2yrmDPoDPdXQJxvhu4vsOugiH0M1wNeybZiWb
zrST2k3toM4Uk0YfZMYNsEau9cRnpFkpx17k/0w++MhXOZVbOZSrLuuzUH2a
9Z/Id187ql3dByhwknk=
            "]], 
           
           PolygonBox[{{7068, 3192, 6985, 6979, 6980}, {6958, 6957, 6800, 
            3155, 6954}, {6962, 6961, 6789, 1233, 6968}, {6954, 3155, 6727, 
            6803, 6804}, {6989, 6988, 6983, 3194, 6925}, {6982, 3201, 6981, 
            6988, 6989}, {6980, 6979, 6981, 3201, 7191}, {6426, 361, 6406, 
            6226, 6227}, {7046, 3317, 7031, 6948, 6949}, {7140, 7139, 7185, 
            4181, 7169}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9927124215535019, 0.9868209315271734, 0.44817024369865904`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVM9LlFEUfZPfWOAMupl8870halFQRIQpVOSk0IzOhItmaiQdWkS2LGgf
BFlRaIs0Sp1a9Idki2zTj0WbFkVYFGFB4I+0oqRzuEdocTnv3e++c+89775v
x9mLlQubnHOXYU2wd965QsK5FuBoyrmbsFuwMeH/+3HtGXdVdgX2I3KuEpzb
nHSuClyCTcA/ASwHi0kH4+D59cj29A/IT1+E84exP9Pm3Naccw/ImXbuHvAG
bBBxI8AnqHUvan7hLZb1lIAz+LYF8WWcndKavhJiu2Fl2GnVNhiMl/yTwB58
64XlExbfrzP0H4cdhQ0hrg01DgfrjTzkKyie516ipi7gc+A21FFFXVngTGw1
N4Bt2NfgTwC3K4axPcrTmbBvjPkULD9rOaJaerR/ixxDwCXgH8S1oJeH6qVT
/Wz0kJevS/4R6XkomJ95D8CWxUM+6tWnvl4jxwngPPALvs23O7eIGovwVWAn
E7ZmfBU2ij7r4N8lzVphGdht+Fdw1+PAS950++ztLqkPdVrH+jzWyazxFsS9
DP8w8Cvwo7e8H7zd/ajmtD+2PE/h/x3ZbDLfis4ueNMkr3no1t1R27tZ0zfW
mygp73X08BPc14L1xh6bkKM5aWvyMGev9E1jnVLP7IG9rHnrhTVTR76VSBx5
3UlGvg3uomroU3yzeDPizisX19T4e2z38p4a4G5+oeZzweJadXZM+vMeuC9L
i1feZuANcDrYW78DbOg98l3yjf6NrL5G1ualQzqTs67+ipqBg8FmoAN4PzZt
poGr3mK/AffgWw0x+4DPvHHOequNvbHvx5oNvvv2nNVzDPFr6pd9nwoWX9Pc
pqTXrDhZ77BmsQ6cjC0v80+rNr5d6kXdHgF354x/KWfvljXMecvNGqhNVu83
5KxP9rs/mEa8S2q2KB7yzakX9lTVHFHTAf0Pi8FmhTMToeadmj3OYF31T8X2
/+L/JwVcED/1aNb8cGb+AU77rYo=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlM1LlFEUh6+hWDjCGFjvvNfoi7YRfhKaVlDoCH04pmDSQqGywCDIFhmU
jpSljVpjGlTQ3xK1CNq0aNOiEVtUtMiPKGWk58e5iwd+7z33nnvOPee8+wdu
dA1vc871QilMpJzLwh0YhXzs3DqGDXiMHvPO3YdbMAILsL3SuXJ4id6qca4I
tVAHJXuc60k69y/hXDXf3yLn2kucOwVf0Oc4U1rGeehC17JWh60NPqJ3QhXE
xOIFPjJJ8ynf3ZyZxvcUHEfH7O3kbAt8Qr/xdvdfGEbPhf1PYQU9iM8BuMbe
63CGtfGE5azcJ7ydlY+H6MPQg+6FevRbzlQTewP3LbD/F9/d6PPgIotBsSjn
m7JBBhq5syllPuVb+STJ7S62UejAlk7ZHb0h/kPoRmiAMe4aj82HfOmMzi6x
Vogtp8HgQ760Jtuy7ieWIvnN8X0aX/cSlvNZbzVX7XMwA+vs72f/GvunYntj
vbVqptoVsHeVmE/5/hpZ7lpbQm+y51HC3vwF+hVU0Csd5LuBzoX+Ugxpvofg
KszArHqLGMphBF+3YTq2WHRGZ9WT6k3lMx8b0lvwPLaclFsWTshn2K+c/kTW
o+rVArYlOAL9CavxM/ama6y/FfMqtg+R1boe3qNXoA99EVYjW5NNPfwOveyt
turZHfj6HFlvq0fzKatBMcyXYquIbDbUQ+ql75H51h2/0Tn8PYE8zMOPYFc+
qpVyVK6XuG839+2qMa33bvbW4+p1zbhmfZE7k2XWw+2x1UR7VbPNMOOa9QP4
OQgJb7Ojemr2msN+vc9r9DFogVZo87Ymm95wIbxxIfxD9C8ZDvOlHn+Abgrz
pRpkiedn6D/luBZ6QL2wl9j3wUlv/x75X/T2j9C/IhNmbTb0kt5Mb3cFLoce
GwoxtoY12eRTvqvCv0czpllrCbmpp9Rbk8TXqVihsszesM/b2mSYJ/1Ljob5
VU7KLePtX6czF9D/AaNPu5w=
            "]], 
           
           PolygonBox[{{7203, 7202, 7177, 4179, 7200}, {6544, 6543, 6878, 
            6112, 7143}, {6418, 6417, 6404, 358, 6150}, {6950, 3164, 6968, 
            6965, 6966}, {6394, 346, 6363, 6417, 6418}, {7062, 7061, 7060, 
            3335, 6978}, {7410, 6112, 7401, 7421, 7422}, {6400, 6399, 6385, 
            346, 6394}, {6150, 358, 6398, 6407, 6408}, {6144, 337, 6354, 6399,
             6400}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9693968662306964, 0.9084305852179307, 0.3356130335334865], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVuIV1UYxfcZSouOdMrK8//vgzUQdqOCLB2tlPDalIGmReroOGNXo8sY
lZG9lPWQmE6OODPOGN5AmKysgSAog+zBLKGG7MEe0rILaGVl9+y3WPthwTpn
f/vb3/4uaze2PTznoYYQwipwGmiLIXyahzAEFsOvq0L4vAhhEmiBv8y/ifDx
4AR8XS2EteBb+HfgDtDL3i4wD/5eGcK4DHvwIXwRPg4W9infj7H3TNaGgRms
7+P73+B/vXzfGe1rA7gLPoU9P8FPgenwQewjtpeAHdi/js0rI0JYDQbhPfz7
DX8Z69vhx/l3bFQIj3P+BPbfnvx3gjnwAbA/dw5eg2/D/+WZ7/A++3v514Dv
DHTDO6NzcSvogU8ALez9HtytWKL5D2AbfCFnDhXOwRL4jfxrVa7Bs/UQFvDd
nzuH8+GXYfM18X4FfoY/SAzLwCrieh5k2JxDLAXYGn2GznoE/9dWhvh5rG9n
7QTfR0bZp3y38G/zCOdMuXsLbCwcYzvrTZwxHqzkzGdAe3QvTAEn4bujc70G
vAmfrfzmrpFqpZqpduoZ9c4/YBa8D/wCXwKmn07+QCv8CDk4DNo5cynoq3vt
Ntlw/r3Y/Jg7Z5PhF3LGaFAD9cp31F2VE+VmacqPan5+5RwpV6qJavNGdOyq
+SL4YXBf4RyNxX4nZ56ducda4COJ6VwwDD48QfwM9TG4BTTXfAfd5Shr34BD
4EvQyNpF8iFfYD1nLOe8Ds0UfKFqmLsH1As9+BjN3UuwEb6fPU3EcgXYk3zI
V8RnBYro2VVOldtOzVjhM5rgbaCrcI1V60H2XoyvRvCOfJfmV4Kd+BuO/QPY
LgOXVu459d7T6gnVqLStZmSgZhvZKocN8DXp/BUjQ7gHvgGbLlBXzKVjVuxz
4fPAWHAN+AQcSDay/QwMgb3gas0799tEPjK+g6BZAH/D/ypdI9XqQPJ1EHwB
Pk75U06V26myzVzjPdjPkq/MGtRds2ZIO/RvIMWgWDrA8uRTvnUn3e04/FiK
SbEpJsWmmBTb9eTg0cI5mQx/kn9PlO4J9UZ/aS1UTLvgOTgr+ZTvmexZX7iG
N1fuOfWefMjXR6W1VnfUXaWR0krt+ZV6N1eePWmYtKw/Wrs0k5rNGayvhr8I
psLfrllbSzAff9Mqr2nGNev3g/9yz6RmcyLrKwrfUXddmXpFb4TeinfxcVXm
Gu5NmiJtaU6zs7jyLCiGVvjv0gf4PrALvgXbk8GavjXVoCPN2NE0Y4dSzvLU
U+otaZi07FTSU/X0mMoaLS2QJrwg7aystbKRrd4IvRVPgRsqz5xmT3fQXTbT
Qw2ZY3qV7/66tWoumAZfW7n3VW/NYh8xbKq5x9Xr6mH1ciPohU+qfJZyOA6+
JemVNExatqByLqTZf0ZrpLRSb4Leht2la6WZvqm0T/lWP0g7xkS/NXqjnmPt
g9LacgGYyXd33VwaJC16KfqtU43XRWu+tF81+UPvW913VQ6Uizz6LdWbqrf7
fyNqIMU=
            "]], 
           
           PolygonBox[{{7194, 7193, 7195, 6125, 7426}, {7170, 4200, 7200, 
            7198, 7199}, {7144, 7143, 7409, 6113, 7406}, {6344, 310, 6335, 
            6556, 6557}}]}]}, {
         EdgeForm[], 
         RGBColor[0.938369544783819, 0.7933628127392494, 0.2692688929615899], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNm3uUV8WRx68gAzMDzPxm5jfA73eVGIzm+AhujhDY7IYFdTUhu4l79Mg5
uxAwBqIJQiAximDkNUQEQch6opCN4WV2VRDDS1BBJ3t0eMQMOCAgqDwHEHkP
M2hgvx/r+1v8o07f27e6urq6uqq6uu8Vd4/4t/tbJUmy/dIkaa1yZGWSDBMM
F+xMk+SfOiVJg8o+ZUnSW9BLMCebJHMFTwuWViTJYsGLgiXCXSyoFPyP6J0p
SpKTgjv13iTcFsF/55LkCtX9UeVA1XcVHFT9HSpvE3xbsFr9TVW5VeUolSsF
zwvWCzYLhgvuUfsx6mOwyil6r69Okp+qnNAp2t4laOu2lwrWCaoFJeav2nXQ
TE33py6nGK+DoE4wyPXg1fpbnce6xLzVGf+zbPTNmBnTmi5Jsl9yndE52q5z
+8Vu96RgkXlabB6Guz++Pe36hYIK4y4xPrRGdwoZQeu7lt9tlutA83yToJ/g
Wo93uPnd3T5JbuyQJH8n2CH5jVDdNpU99L65NEm2CL7u79QNMr2BlskAy2q4
+R7hcptprXc/ecHN6quv4B3N/XXSoRsE15cFvfXGOV6cJKc6JslRlaX5JHms
JEk6qnxDfFxSLvkKfqD3BtG5Ox8yWGS5jDQf9DtcOrFCuvETlX303l9wXXXI
5bLqeL+jSvqVkd4L1ot+iWhXlwdOf8vyJ6YzQuX9glf1/NNcyAKZILuBnusB
lgt6zvubWg8rBbUVMT/whYzvy8XaGKZypucNHZ3psq3nE9yC3o70PP9Ibcap
7d25aDfTOrLE36mDJ+Z1n2CXYKdgh9/3Cga1EX9t4tv32sT7kDbx/YRk/wny
7xhtaIus+Y4+FGhChz56WAZ82ygd3ye8SYKxqnuoQ7QdrPdh7mOseUN2ZzTH
TYJWmuNRmoslmoflmegDetAd6vEybvqFb/ruJbvwK9mnWSq/2znG8TvhtEgn
3tIc/rvqP9a62yKepuv7J3r+q57fVrlMOO8L527htNPzOPXfVuV84TULZ17n
6GOfx/ie9PVj8dmgcqn4elmwRPB456AJ7Q8E6/V8UuVewRt6nqTva4S3WrBY
8Av1933pwmiVIwVX6flnKt8V3+Xi4aDK2WpzRG13dQn5f8/z9JH6/lCwTzBX
c3xWutEs+LQ67ALP1wmvu+CG9oHzYfVFvEW2I8Bc4//Gz9Q1ie5ngqvahz6h
V3yfLTgk3F3Gn+m6S62ro/xeZLypXgfYvwkusUcfaV4bMrHeptpmgLeIedTc
L0hD18ZaZzakYc83qTwqeQxtE3p0WnJ5Xe/7VdZKpmNVt1LlN4Q3QfrwG5X3
So7PSWdGqvyd6M0Q5NXvUH17QDhPqKxV++2i00fyHpwPWQ/JR//jBGMEy4T3
oNbycpVPCcboeZXKJcKbrO8v5EPHJ5vniaK1XDSbRXuj8LaK/2dU/lWwXc9z
Vb4tnm5slyR/ycV8XY8us45c9m4f/vVbZeFvKfsK+tn3LtM4Fgv+V31fLdxU
5a9F9x6N6zGVt/uZuiv1/Va3/7HqfmS/Pl/9t5W+PdsuZDtQMmxR+XESJWug
0Df9flu0ZmAXveaQ86OVQfs20x9m+vTd0+Po4Viht8f5gfg+IjgsuFwwUXK7
XuUM4UwUTBK8pDWRVfm0IFMW9r9K5d9kj4pVfqayp2WBHLAd2JB2en9B8j8t
3heqLNO3csFXBF/LRD9XuF+euwq+7G/UE7+84hjmetd3dfsrM0EPPHTjStd/
2d8Ksjvq2GlseejZ2STWMt96mt/nBUlZrAXGhK/j/YLK+ZnwieAU9AAZHhKt
M4LGyphz5M7cPpqNef0lfan9SPH2M0GTn6mbl4k6/GxLcfSDDKn7ueurSmIO
MiXR9rT5whc3+flZ0XlBcFdV2Je+1o8Fktdclc9VhG72tt4OZj3jq1X2EOzX
8yCXNwsaXd7q5//XlbLg+feZ4J8SfnimT/pm7IfKgxZtn6wMmz9X42kEX3BK
0L0s5I5MweF7mon1V1IS62BxPng4m49xzPNYGNv1tqXPOkaAF3SyQnC8Y5T4
S54vIRYR/YX50NN21lXmudj6e8FxDfKE9nWmf1j24n2pwZOdQ95nPQe9zMO3
PHfQQ9e7Wwa0/X7n0LNtXQJ43q7yWfMzPx/9HC2Kdt3sI04VRV/M8Wz7YHhu
4/Xay2u2n2O2WwRT1NdW0W/oEnU3u76v8aaLzkf6tkc4/9g5dBDaTwmWqP4T
1e/sctHe4ct6+pk+x6vNCuHUdA79nGcdGG1dpY4+vyPob5/I8+aieL/FPE0t
Dn5GG39z0cU2lPR5ATusMdfnQg7wCb8XLAvkgC+82jLr73boVHevy4JuXee6
KulRW+lZpfj+tcpp2GTBioqIqdCVfuaT8fTS+i3V9wv6Ph2dyoT+obu8z7Su
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
O/nm/g==
            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{6560, 244, 6316, 6607, 6608}, {7205, 7204, 7197, 4198,
             7196}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9020379675597459, 0.6480591149503218, 0.2399704176737568], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
6xhrI/gmwYf3jCrW6jrqZ8PXCnj7dRLfg5PoNwAZeb2NZP3dwlq5STBba2CM
0kcFudYl22mleeaDMte53N9u+zDfj9DPZVMEX9ne5oWPegXniHL8UNv6Qeie
6R9PH5+R7Fc8XjN8i/GMM4Uz1KN8m+7hrPuleXGmfZK6R6BzsniZkx88jaT9
PZx93f6VdNA6Gh4M9pfN79UFIY/rCoIPj28ZeK9qIyjJDxqnQeecmkG3fZpx
8Opzyhz2W++7z4nPRUoXck7z3PrcNpm2z+Mf2od2WWkSZ7vNSexF9s+9Tp5h
rbyWG3gfZxzjLssN+soYy2M+hf+1kP14HGN6nGnk54BnKeOvos5y81nCtnws
bcfRdhZ7/Fx48ngljL1eMFz5PoIR+YHrcdqPBt8o5stynYL8R1NunXwTH+5G
dPNn2M9u2PT2mpurBB0Kwp+4njY30vcW+t0Ivp/i711P2R78hp9dUFaJbla3
s2/473aag7buo3RvEufIN5Kg73j6vK2v3meesY4p3wl+rFfm77eSxQyvM8Gu
JM6hFUnYB9uGtoy7B76XpmOsttgPtzNOn99aCj6tfX4fHQbeWXkRn1qcF7Gq
6vVRxhppVke6VCdiGDUyUX4kifWwNR3r40A6+i0C38l04PyGNe01MZV1OR1+
3dc8P8eYVeSdGvczrD23mweNixjLqeNpT0L3Ur7nMnYr7JXt1gzGnEU6A7tR
Bc3GZxzzwO/+s6B9Bv0sp8nYUtvDOeiwddnnTfvS9qm93ltdsObts1bbAJ9Z
rfNtaONvxzD+lhtxDNudSflhhx7Nj7n3uK9I5p/US6VeV9pFc7inXvgBjhf4
zOH4wWsqqyWoWS/KunJWMA1Z6HBZf84Pq9S/iWB1QZR53fWDnn58d2C9fKhx
tsnvfl2wszDG2irYLigqDF6+f0F/+0f24Wba5gn+Lwkb9Ev7D8LXveC87+W0
W0HsTbtyg+aDtYMn83Euibn5zvuRDpWnGgpXEnXVbRcqXSBYImgmuAt+bW98
hvG5yXGDy4gdHBHNVYKDgvxMyLq20g71te8IrqwfdBuf+dgnPt8UHBIcrxfj
fVwvaO8O/WuS8P3Lk5BnP+RsPt4WvFM7+r4v6F0Q/mMX2hVmIs5XC1pmo4tD
iC/9IwlZbxPsrRdy9T5kfRkKz196b09iPXyidL10d4FgoeAFweZ0xAy3JOEv
jkwi5nWKeJnnbTi6OAwb/EvBu5JRuea/b4Mo/xo7fSt21X7pXdDh9pUa41XW
r/1W2zb748ewe+9jn2ynHGMrSweta7EFTteR97pfI9iVjhhoOfly+PE4r9HG
dvelC+rK4TdH8vpI9P+pbtA//ALeTLPLPB+9BLcLehbEvu+85fpFbsi2GTqV
RdcW0s/7VpZ15vU8l33NttV4eoLT+K37lt/fkOFQdNW4fb4YRtlMfBD7IrdD
j/e/pFq3NSf7C4OHEdgJ649tWr8GMVc76lKOvfM6tgy8lieB377RTHTc+6jL
/x13Vvqp8B8THC+MeKBjhY7xD2eN94HfVqytawrC9/lJQfgMjlc4xtiuIGKI
balzm/8U/LwgdMc64r5XU7cAerz2NhF/dHzA9s7nn87eu8FlPDORk9er63uh
bzcwhsuKsXX2KQ+In2JBxjKULHbXjdiw6WuPb7CGmIT3zOPYIq9fx5YdQz5Z
O9a8z5G2YR7DY1bTVs3fUNZlirh/M/bQYejFYPj+GX6Hx++EzXV6DfkTjHms
dtjgE4IS5OV16PE+gT6vZ9u76fhb1+GXut3RhmE/bUOuZgz7OG3hux3+wUpi
4uavGzLvyfqwHn+GHDxWw0zsJY0zEaeqS6zKOD6lTRfOrZ0Z82p464zcBsLD
rdiT9uiLfX/zYX6M0/a7PnGwHRrvZu9HmfCd7WN6nj23rb0neZ5V10Ayb5AJ
eTVFD+yztQf/BnSsBXbc9tz0HiMm73lvSX0b+pi2TcQ1jtHm4joxvw3rRH1r
2hQiE6+FDuxBpt82dQd2tQt7WVfWtte49bMnNmMwOtmC+bG/bHvTBnvTkn3t
U2j1/HherVdXQ0s76O+Enleijxfj25kP8+M7kXLtf1saaV3XDZyfMY9u43rr
WYZ+7u/1b3lfhj0oQv6mvapeyLR3Jvya7UorMrF/bsnE3ug9fG9u5J0uyA36
O0FnN+bE+rKjMHSgeWHI1LItweZMx+60wE9xW8/5aubd/DZgjt5mXXtsl3t9
uq4J9sI4X8TmvcA+uoi9qYw9Z7XgjOALwT8EH6XDdzxB3umfBH8VfC34kPbf
Cr4TXJQTcaDv8G9n4+P6TvHP4D1LLOoMOPcJ9lPvPfUDyl32Me3c3jjsv37F
+H9lfNNUqHEbCurnRJu/Un4MvJ+D6yS4TftfBF/Cz74LxjxAW+/rPhsdpf8X
0PIX8JsOx+IuYtxuxC4650TM3PfJjpsPJtYxkJiQYz+OWzmm6zir47OOczgG
6TiSY9rtwLGOeLZ9ccfO3dZnYNtg7+Onc2O87oy3lTOxz8Y350QM/CZoe4B2
NaDXMUSfKVoKmuZEzNN3/dbXr+HRvLYHt+nxPaHPa1Ogoxs8PE08xjHdXyQR
o+qSRNz1HfzFDvDVlvE9X40EOYJaORGveCId931z0hFrf4J7kqncQz3BXYvv
TKpjDUv59r1caSrubJbwvZg4ve8IfKZZyb2T2/Xm3qpVcdw5lVI3n7GmM940
ysq4n1rLuAuJGazjrF/Gecnjeay1F9xBrYCeVYInoW8xdC+hzPll8HsJspoI
vonwsIx2bj+yOGj2/bx1sBC51kSeOZS5LkVZHnKuQ5nrmghaowNfMudua/12
e3/XpM7lZ7AN37IeT7Cu/G28Xvtp6DANfkMwWnBHOmIwT8HjcmRi2VhX/wt9
nc451WfUB5U+QP+z2JVz5M/w3Qhdrg9/taC5BrbIPLZnXXaBz5KciEfkkM8I
pqrtNMFkUuu69dz3JL5r813JVOiZht20b2872gufyT7SDfhMzle/b7Cvb7vr
9ym2vb5/mY2ev0H94XTch4+jfhpjWQa+O3IcvvpNxoPI5E6+78BGHcfmjYXm
+xhjLrireZvCus0QU3P78Yw7gbzpczzhYDrOQLug0bT6jOKzyhby3jfWUFZJ
ufvZnr7Ft8sPGZKI3+xPQnaWoc9LbYn/+BxVRvma9PlzlPP7wGe8FYzxFvnK
C8Z0ajvu89Yr0LWVdA18HaCd5b8HvizLUcjX5b4ztf3vRCxrHfiqGM/y2Evb
Q5RV8P0meKci90npeK9zJ/M1ivE8py2xxY3RT6/H4pywA22xBU2oq7bXRfSx
/reg/Cg0ew/tgr3vgX6n0ff22PK27AneG+53W83HXO9HSeC8GLzFrJGmjNUS
Om1HEnA2Zg263vupbYL35hzalICvEXY/gf4SaP4AvS2G1hLGaQHfvs+8NR13
mtVvfRw7npeOd1/eN6xLS9KhQ5PJT0KfllA2he/qdeB59jr3WdBvVPzWy/uy
91Gvj1HUu51tlPdSx62XMo7xjuec6bOn+3uNe63b1/L53WdNryXTOgda5/C9
nG/z4PU5gTqfa33GPyFYDG8LoHEufZbz/QR0uI3b1sGuf0f5YuTg+yP7H74b
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
n7QZP/AzYpmOA24At2n4f3+bLKI=
            "]], 
           PolygonBox[CompressedData["
1:eJwtmHl0lsUVh0cSWUKBQAJ837yvFooUkVJAQItbW3tKq4KCYNBKAVOhRWVp
K7V4OEZQhLqhwJFFkT0kQEggQEjCFhFJWAMBAkHpIhAqUrDbqbL1+XHnj+fk
9807+9y5907aZ497dGwD51zPG5xL5W9x7NzmDOe2wTr0mci5zunOrYYB/F7i
KWvlXB1M5vck2EDdQpiLfhk68e0iFKH7Q2G69XGavi5AD/TtsBg9kv4mMXAW
jEJ/SP13Mp0bQfsX0YvgMH2Xt3FuLXoB1GVY2cLYxtTYq2Ec+hHIpe+lUEv/
b/F7Bbo3PITuCD3R3aETeikMYaxXGXM5OmYOjVKcS4MIfZCy862p39a57ehf
UJbNXJ+CoeidcGMj9g4+Rr9EnZrmzh2FAsbvlHDuVva1C3wPPZbvaS1tz7R3
Seq0+pZzLaEtejFlxzNsjVrrlNj2eh/91fA9jzHaNXSuA+Sj85KsDwbQ90A4
T53vp9sea69HUCefuU6Ep9GH6G8ia5kMx9C/piw31eo8g/a08cwlEug91NnH
3lfDfnS2t750Zjq7Vyj7vJXZxFT0E972ZgQ8ib7KOGyNo7lLMr9vKHuzCXbE
/L9GfxXZ2fSCH9N+PpSy9krYG5sNyBaGw0T0M1CQYXv0RGxt1FZnmkCfps9T
MJI9GQUPomff6FwVLEc3Z7zX0pgrNEUPps0m2pbCIPQe6nRtjH0xv13oL6jz
d9kt3y7Cmths+xQUoufFZnuak+bWD5alm83J9mpis50ecDi2MTRWt2bsO/1O
13r4XQQD0RWwjs2agz0WoMthKvpLbHAz+nFw2M8V6o9GPwtX082mxqCrYhvr
j1CH/hMMy7AxNNY23W/6H8X347rfrLGCbx/BEH5viW0s2fxW9F7tUQvmDXsi
q6O6mkOW+qJ9bUOzyTL0itjuqsbYpbq6f+hi2IEuoc5MbKMYtqC7Q1/0z+Bu
9FHqVMrWoEzzZcwZnNVM2I6+lzoDuJtPw33ocm9npTmsQI9XWarZ9Gj0udju
elc4r72n7BbqJuASej3MSLU5bURvoM5u9usF1r8efTM2dBNkYbtD4GJkvkU+
Tb7tG75NYTty4Bq6DX0U41BXQDP0Zcpm8+1duMHbnmvvtSc70bWx3UWt+TN0
V8bIpe5SSKH+kdjOUnf2RGx3Xndfa1iFvpK0vhdBI35vlA1n2Bq0lirmO5Cz
y8Jen4/NxmRrstE30Vv5fgrfUg9b0Ou87U0ERd76VN8L4Bbmlk+bdzPNR0+T
b4jtrOQj5CsOxOYrdId1l2tpv5r7tBCOoDfFtreKMe+hX4ehGWajj8m+5TMY
+xpUoC+xvtWMvQm+Qj8Xm+3L5mX72zVHHMztnN8O2UJkvvdTOIQeTtlo+TYY
5s2HXvelcBD9W/ro3Mpi1nithbIz7Fc9HEDvZs1V8CFjL4TB9LEdXzIY+7sH
/QNvtnu9TL6Num/AP6h7Ac7Dl/AWZW/D1+j/wW3oLvDfpO3tfBifMB8lX6UY
80v5Mr5/Dq/ybSr8Bf1n+Cf8C3ZQ9hFkw6/gDGWn4W70PaGN2v6bsv/ArfAd
5t4ROtP/sthin3xMLrqDvkMmbVrD39B/hXvR9yVsTI09DT09YWvUWiuhChp4
W4tseBzfH+F3D9bSHfqhP9ac4Yd8+xHcBX1gJWWr5LPRI6EAvUZnT5sS+uqG
PRSgW3Mm+U3xyZxPCbqOusdhDnXnwgHq3IGt3QZ7vdmcbG8J7NN94R6xvU45
zyV0lbe68vm70TfTF+HJ8dMl0CnQQNB3ShhDY8WU3QRHvfXdE2rQd1J2B+yj
zv6k5UzKncrhUXRTytJgInVehObQTPso3wJXk3b3C+Gizj22WKMYq1irHEm5
ku7INm9tLoQ5aq4aQ2MppuWxPx/EFkvlE6rRTSjLwZfOZr4HaZ/DGC/BTJgF
R+njCDwPE6AddWJsJR368r21bAMaa5+0fvSRpK1Zaz+GroXjUJe0nES5icr0
bS/sgQ8oWwAH0dXwsGwFhsMw2EhZCRyGmtBGbYugEE7Ap6GO6q6gTR78BO6H
YsrWwzn4Qj6SsplhTVpbPZyFTt7uQhK+6y1GKVYpBn+i3FZ3hL3eD7nebFa2
W0+fZ3UX0SfDGeosN1NWDjPQ7+huoitgJXpVmKPmWkpZGfwBJsDPKXsg3OHs
4HPke+bAe7CIOotlG7AkaWX6tlZ2ia0wPdec+W1LmpYNpys3hTfQ0yFNsc/b
WnWmOlvZtGz7Mn1dgabe6ipmNUSv8Xb3ukOhtzPX2cuGZcstvMU6zUFzmc23
WfAZ+mQ4I52VymaHGKpY2oeyu4JPlW/tRVnvhN153f3lkBuQlo+Tr5OPkK8o
RZfJfqA6+IC6sOfa+y3U2Qrvw/xgQ7IltSkNPka+5mXIgX586y/fx3oyUuwN
4L2dkc7qSeoMDXc+DndEdyU1Yb5COa5yXdVR3WJYD7to+4nWqTPUXfAWq+QT
+3u7c7p7yjGVayrmKvYqR74sXwYPM5dZOK2HvPWhvgqhKGE5rHLZ6dACPYg6
D6RaTvUYui116P76G6RzsMGV4Y7prpXorslutWeyV2+xV2+AK4rF8ucscAEc
8hZTFFsUgxSLZLOyXa1Ra1XMUOxQzqTcqS/6pwm7A7oL89BzE2bDsuXe9Nk/
xdaoterO6u5uDHOTT5BvmB/Osi74FvUxL/gQ+ZIJ4S7JRmWrecSIDPYjld9v
O7sDTbzFXMVexVTFVvlg+WLFvA7BBmQLekPoLZEZWV+KOUv5/SysY283wBh0
y8jebnoD6i14NvgW+QT5hg4w1VmOOALtvOWKmpPmppis2KyYrdg90NtZ682y
zFvOotxFZ5rl7Y7qrmYGX1wUbEF7rL1WjqFcQzmIchHFbMXuwuA71wfbvD/4
yvYJizXKsboFG5AtKCYrNk9JWO5VCq9p7Lb2fwLFUMXSxqx/UprFlJTIcgLl
BooJig2rYnvLKGdU7qg7r7ufE+7ec972Ujn7WPQ4b28D7bH2Wm84veXGUHcs
vB/b/yaUM85C/8bbW3IxrPWWEyg3UA7XJrL/Meh/DfqfwDHNj76mhZin2Kc3
u97uyiE7ytd5y+0GQR90fmRvNb2RVkbmo3oFnyPfc61teNtCO35f8PbW0Bv8
HPUrInu76M35OPqF2N6yelPpbVUdWa6pHPR3fPt9bLm6/icxAd3eW+yVT/q2
ct3I7rr2XHtfCifIZU/CJvSOyHJ5vZn0dpIPlC9UDqdcrpf8A331gy7eYsqi
EIMVi5UTKDfQnb/mrY7q6o528ObT5dv1P4e8EAPrQ8xT7FOMVaxVjqdcTzlh
ZYjBisWyIdmScrrJ4Ux1tjoTnY1jzg+2sDeL3i5lkeXyWqPWujmyterNUo7e
7y33Us5XqVwlsv9dqI+dkeVgysWUgysXf8pbLNebT2+/em++TW+Uw95sSLak
mF+M3hXZ21f/o9mNfj1htqE36J18/z+k2Pf2
            "]], 
           
           PolygonBox[{{7408, 7407, 7405, 4141, 6888}, {6633, 184, 6275, 6648,
             6649}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
h42HfTjYueFeBP1zijqoQ6QPBK4lbfIsMtfzyEz9pvhPn2kO2cCX05z9Pm7f
yPGJpbxDedg76JVt0ofPfs8ZlLq0+UubnNs6x4AcQRO6n33w4ICDWuV4sLs5
O/WRZmSJvQ675L9KmYf8wCNkHP85srVEuUee+spH2o4U91mFlKvNMlVI/fKY
d0iL1R/owT7SNdi20DpQGGDZSNfBAOkfaflRyi7jWS0vuMs4PepOKKT8DRQH
+yS6Hp2PnsL/xflpkc8L9Bexh5zuHkCdm6w3Xtt1ovsrZbQ9x33gTPOO0w64
STzg43wwzzNCWY+jvzg7kEdfC5RH9DJ1kSdk6XZpos4889jjxkovuo796DJj
HfCr9DUOj3Tfzmkv9vF3T8uO1P+yr/XKsXuDXefkr63f0naN9vQg62/wmXp9
fO5rX2fKqz7avL236qOnuAfZV2/9esP1M7K2+I19ONg8dM8PQh6n1eT6vd19
Hr7go8OHhL9qtDr1BHXPieof9McRhdRByMEo7yJLrvuehdQHrZ0D9jn2Ifa9
6fIVX+lp6rUJyhyy+FpN5oP/KGV+RiHXwIGFzJ+inB5kuzJ9yCg0fl6TdI6z
7ETpOLOY8jDd/pFB9rfLlDkA+ePsj/zOtPwc5RFez5L+me7NF5p3nL7g69y3
Z1mH9bHcNXGe8n6mffO7LGvTLZ/pM/2eJy3zpeUiy6b5+0J/kz5uHzNdewM8
C2PXdy2lbkNXvhrwiuv60+DTBVG2KfTPg20yFof7Cuo9qF7lDvq+dhkT9qDl
7F/3et+G3prhGZ+Ynw+NTyZO+SbXMOt3SuSdb5zXRO/EuRv/LnB+Ad52GWNG
O+LMiDcl/ytsG2PDzjdW6yLjUWfqY5lhTNYU8UMXurSsU4lbRNcS/3kfY2qT
+zA2E3ldLafeXO2f2wM+qUlZ2lCT9ebafpH8gU8PtMv7+XvlBbbAA8bjPbDV
833WmyNt0Hi/+YtNy+3mK6vYZeyb2xdyLT3Zkvb0PS1Jw0r3rYGFXBvszxPl
6/h2aTdiM3J+ukh+TjefPPb/qfITvh5SynJ4Ptq1g+01x3gr4orelSesqaXa
LOgY9l3u/N9U5jhHIoP4Ojfoe8MXU9A3Oka/3bH69T61DnYhdSor01bkmd9V
gfubNikD7O1LtZFGGaNGDBr0/XbbpPc7ZQrZ+ZN5S80nD1z3GeeIvBJfcZZx
GtQNc2FzfWD3QvaF7cMdK/bPBcojcjkwzr0HBo1jI31KmwHf6VTL6e+UKBsQ
54q7It2llDZHcynLLjK2bLnz+bA4ntL2QPbmKbPEixxfSjtoP96xCHinTb4X
OMp3A4f6jh5ntnXGTeFjuKGUMTDY5PSDncJd5Brtohfs7wWf8X8QX01c88f6
MfBnfGfeF6bEJ+MHod1epdQtlG1w/RJDRHwYvuD14vrQcvzblFXWpH8A/wey
W+17Z4yFcWCDIwOs8W2w7VvSDnilJesTF3Oy0KlttkcXcWePDsOeGa3/kXLq
naAemqjuwG8+wTgb4ujmFVOeHnE+4Rd9Ux/aJrjOzrLfU8R5svTwPFCbGtv6
F8atzzY2mThlYoc3ydON8gofOrzmHpu7as550NHgWmTfPq8mbfAzirm3oR/Q
L8g042UO+pVS37/cJmXkbWGteUvUY8jWotqM4Z2uvM03f666EL1XGWPeWJtn
LNpN1xczzXZ3Wp9z6B0+364+/cbxfaeM7Ri09Szl/DGPK/HrGvdILN2XyshX
7lej9cF9pPzAp/HOA/OBjwO/Av7tvVyvrNt1jv1Nx13mx1rx8lzW3ejfdfLo
HcvpE14eGDQdVko8yOH5ykzRGDNi1NZJH3qP2MK2xiMRP/grYwhbjLsh/oY4
W+aINTPb2HFkZKpnK/ww+C8e9bx1ZcDVAbNrsu3+tr88nn8cMKsmeQadh1i2
v3qCu/j9jR2AVuLqdjSFfuLvoGPv0ha69lN+hhi3DN4D1TnEuRFLSzwTsUw/
lj5o4J0d3tHjfmKGtF0uXFaTedcbh0uM0/kN+d7uWY2Jg3t/7v+vdKyz7Oda
x4/terG4mtWl7IVDQwcPDji2MvHeYD+0AR84rpZOnpfgF8EnVExZLPPjHWWE
8cNPeIkcst9z5uzq+wS8V9AJPji/1xlXz/u2xML3dG5fcK1Rl/bXeq/CvjXD
9w7QB+CsLuX7Bryfw702sZqsxWr7mua7Bpv1RkO+S1zZmHvKU+4dvHc11fcg
rvdOb3MseceMt1iq/cS42D+PK6Uv9iDHerj5w5SB/ZWRovcZh1mHus8aw3is
eMaKa6zP7FVXlvL8i84aspUcDTFFlrhPJFaLuMz9zaP/25TNOcpnT2X0Y9c0
uNYH796rTR/AYTH3AwMODfhlY8rV5Y1Z70N1B3Vp86Ft6Jtn3lnkvUZidU8L
3r4UvF3QkGXLjP9iD71MWSaftpSxVvHpIpfgfV+arlT+kembjY180/XCOnhM
v/d5+r6xRWiPDt837IU+AXtWZixffdv0349uSh/lkU1b7nSRJd4vJM5nacD3
MeariE9uzPi/Ov3vlM317naZdflNO56JjxkYuPsH9AsY5G/y9pUWfMU871eZ
5fPdH6qdL+aHOdsnyveL8r1Zl9uk/UN9+lpk3x2Ua9bSVM+k57rGp7rOWces
57/LN3gGP2m3xL2Kuk/If97L2VCbfkDWBe+4oPPYu9jDOO/MVi9cZ3qtv3s0
pezs0ZT6gL2KdbVfU8pW30h/Yd1rBXQMeftH2Zio89OGpGG27/9s0B8JPRs8
c3H22ryXuvbJf48xl7LNfNuR8r4YvxdqyyCH6IyvHOOEUsaoravJdcY6xhdU
rX7o1Jj9bXL8X7qH0/85yt150rVBGpBl+IyMfud7TtQ/q5T9rVN+kHHObeh8
9A7vataqw9oGzIm+FwcNzzTknredsZD0jy1djgfEB0BMIGMlhnGjZdTB7l7s
nQh3Ixv9Hgbxo3ybYXzAGX6jgef3Yx6OC9k/rJj3MJxZuFMghu9h35N7MmB+
GPl7cufSnPz5xLPeX5szHvvZ5pTxfso5sax8/wE7e39kgXvrgOPkc9cYa4/G
/H1pQ9bDLh8pjSdJJ9/V2Lk2v1sxyHfoeZd+XbT5XbRd35D+dGwq/OujxEHc
6wRjvLEtiYEln/c4N3+PQ3zAEM8B8JQ5h5fj9Lfgz+MOkTvCnSvz/TDeE+Pd
UOToDWVpTkXSMzfgDlOe5/tO34O+K1guv9vvVNzp852Wf6I/hnNj75iPPgH7
cJ8WZWsCVvH+J++FVqTOfSx4+FakI4IPu0e97QK6YufKW+T6bvvgmdiJDwJe
C3jD+CJiKeZI2+8DRsfzEQGHFnNuaAe+Tv5m3mb5zh7rlndl7i7mOeB/NeQ3
KPpHnd2akme7Nqa9wv7yXlPW+61n5Dn2uSDgncDxPjIY8Juo/3nkjXGe73IM
t/q+Dn32Mt57YHELHxnry815FzimJdcO88m8fmrKPB/j+e9o0zH+HhD0DQua
e0Z6c+C9IeDXxXx/vas6mLhsvqfB9zV6lracBT/1mzPchfAdGOqdrMwhe5S/
G+MaGvj2aMh1+YV3J++5npj38bZjDfAuIOuAvqChRToqnYvPSUsZN3q35ehw
bD3Orzt5r9RsO8r3UG/v25R6h73oPs8Zu6j/LzNuFxv74oacp7UNibtF262b
/GA/wqbsaj8nyMvj3VN21N76bSnPK7faT7O0cpZhj7lLPdhGmgYaBz/GNQof
4eF+6hXW+MPBz+7EOTXmXTrv4fLNg0PkGzx8M8oOQE6C/nHKNfqOd2uJmed9
6aP5fg6y0JI6h/eR0Xf3Nmc+5dVNKQvbNKXORd8iX7wvush7vfIe9pX6hPWM
3PGtCr4jwTda2srv2z1L/sHzJDyDd8gm+8CigIUVyYODfR9glLKKzP7eNcs7
xUcY/8+Yz3RcjO8j1mHQ/HRj6vtyOXL2rvsoY2EfYTzgHyjPeR/5Eel4O9p3
CTyPNKYeWs17yhXZz5nifU9bjj3u5OD1a1G+rDFl896A+0upJ1i7xJMTh7ys
mPHnSz1fPBTwXMCzAX/198qAR4sZM0HsxF/wHcXzy4yrmPHp4Li/mOcOZHGz
zy+eH7Mt9jL2J763pfZL/5xrVllvhj507ow4i/7G+Jba6O+uKO/clHSBj3vC
P5s+Kh2UEWe/Y4z9mkirmrLsWcdREc//Hem3jVlGnU2N6ee8zXcjrvB9BuZj
jD4YzvMbGlN2v4n0f4o5/pcCXijm8/8pph8K/xT3cS+ZRxnfzMKfWFOZtDwt
b1dJ+2P+/nOZzz7Dp1UxlhXo1ej363j+V8B/ivmb9OOAzwM+CfjM36To8mJl
9l1RmfeIj0tbUd8mZZXBh5mR7tWQvhz8XsQMvaLfgVhG+sS/iW/zK2ko6vcE
T/k36b/s+11pubch98uljelD/dR8YjGIUeHdVWzEDz3nNCNjgaelKWVjqbx4
XP7wu1uU1UWd7ZvyXmWk9zFPyduXlIO1Pnc1lon4pI/lVZmX21QmHzc6xq+l
caP1vrIOdYmnqq9M+t73bLROH3Bb+blBG5g13cH4K/puasq2Ozg+ZKFa6CTO
7SpzXF3th3xwsG44a3J2G9GY9bq7T+JHOChggLbfAZWpz9Br2ErEhPBNIuKa
BnjepF5nzzLoefhCLBZ2FucXzn63uFYZI2OtkyboaZJW6PxGux57+0Pr8i7T
Im1CdDL682j1JuOurdyyJqrlBf7bHtLB2MC/Y6SjQn4+CPn5QWPGqPFOHjFr
jLHW/WpP5RY/3I2ewaAfvxD+MM7ijGWuY2Nu8eMT28GZdY/KPCvOd//guw2c
BzkL9tCe7ue5sId2KPYo9vlKvweyc1PyZZemxMVZEhyMf544iVEjhmkf7fH9
nS/s5h8bo7XCs8Pm71nYdr709DDObU9x9PR8u6e/2cPgy+36lw7Ux3S18VrE
bXH+u9EzILZTL30UB1emPA3bJvt9wP10kD6qsq9qiDKH7XmP/CJvuPlDxXOg
tPaQV83yrUn528+xH+DvvrYdrjw/oPwiR03KWrM6pkI91OK7dPgoP3fdsmY5
G3IuxKfEb86EnCd/WMpzFecGvtFzsGdB1gjrY4jnwgttz/n+p6U8b/ZrSh7s
05RnSs6O4Nst5HO3UAFdGvKczT6LHbXQ/RY5xLfEOfe/bDfNttB1gf3hz6Ee
dfjmFN8dgp7HG/NM8b8b8jzL3TWxIMdbn3bEmODTOlW806SfcxH1aQfQ7mzT
k0pb9MKJ4gCINSFe5Ueenc+UZz8U513eDR3alHSeKi0/9Fw/QTwniot3enjn
m/e913tex+bZM8azZ/Btl4aUuWHOez911GD9LwP06RymTwPfBjyFt8jxSU3p
+zmhKf3G8B1/zclN2e7EpvTv7K2s4z/CTlpmXXTCUu3gor5xcP9Bm/5+6/G8
VNw899XHxPojhoF4V+IWsDPP19bkebgxDmu14beL9IWAe+N330iPDfoODjzH
RPp1Y579Pox0eEPad4sbEhfvBGK7cqfD/RN+fd6PftB3Bb/R1883bxqjTWQV
vos/n7fkue8fYUePiz7Oir5ObUp84KVtpe3K7XnmbmujdyHkTdRunVKbMjFB
mZqm/wu/8gfu+5whed9hg88fa5N8Yj71OAdjI3Knxz39B7Z7tZg+siXe6fD8
mm1etx3PF+uTxL95iXc6xBe+a136eU7fPLYG/ln8t/jL39A24+z992I+v2Ye
tsOL2nVvWP6r4GeJ/huzzou2vdk9BXl8WN8bd28V7m98L5W9kHdJhovz/4h3
/4b0K6xtzHWKH2OEtL0uPdguL2srDnSP59zIPfcJxpC8pJ0DTZ/7LSy+QcdZ
izPX+425zs90vvAJ4w/mLNhVH0Unz7Cz9RWig/CDz1LWb3Gcv3DvuNe1d7/n
Cr5Lx1mUbxbhX0DeRgfuX5by7Mt9w+fxPAmeNCZu+sCfh391iO83thjfx50/
dEIjZ1XOp9yrzLbveepY+uUs3M261ON8i0zQnv4v1+8xuzF1+TRllfsPnq+1
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
96ZXG7P+JNugPxrVIafaJ+P/v7/VlHo=
            "]], 
           PolygonBox[CompressedData["
1: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
ZyVRXg==
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6139, 6141, 6140}], 
           LineBox[{6154, 6149, 6175, 6181}], 
           LineBox[{6182, 6178, 6190, 6192}], 
           
           LineBox[{6193, 6184, 6188, 6183, 6185, 6167, 6176, 6143, 6169, 
            6142, 6148, 6168, 6174, 6673, 6672, 6591, 6670, 6577, 6671, 6669, 
            6678, 6668}], 
           LineBox[CompressedData["
1:eJwV0VtojnEcwPFnzrNyuBibUy1cSa6kJCmlHGYzsk2KqDlvXDiN4kZ2IQm1
Lc02aqcXUWq1HPfuwCy1YmYJyRZmbcjZ8PlffPr+fs/7vM/zPs+btqUgKz8h
iqLPrEyJokmMZwIryCWHmWzmV2oU/SOaEkUjSGQkY0liFH98nqBDOlpn+d4Y
/Wbfax5mLtDv9rk63P7XPEiafR6/zZ/YZ36vP5ljfqsn9Kv2ssj8Wr9QZO7U
BfpY+zltPsWA+SF9nLU36RJ9p7c4Y76jb1hsvq4vOG9+qTWsMXdpN6Xmy1qs
ldpBhvmCPqGdMvsBXa6tWhGuyzIa7THdRH24vjboRr3J0lB7vd5mITF7g+Zx
zVxF3LyVNsrt87WDbkrs08M7YX94Vl4xjsHw3gPnDGmyJmqSFob/W5N1hmaH
++txTdce/1ee5tuL9Bjn+DDVdae5j89/MECfYx/pZ4BKushw3rNwPunmHu3k
Kb1kOpZFjbmadea1VJlrqSMWznWPbMfX88CeozvYzm52sYdt5HOUEgrYwBFK
2UkulyimkjLKqeAGdVTTGu7FXZ7TTBONxGnhPle5QoxaTobn4SKFHOYQB2n3
2x/RShupTCaFiTR7ziZm08I94mSSTgarWM1/yHyhzw==
            "]], 
           LineBox[{6674, 6677, 6675, 6676}], 
           LineBox[{6679, 6681, 6548, 6680}], 
           
           LineBox[{6685, 6686, 6683, 6684, 6682, 6690, 6687, 6689, 6470, 
            6688, 6692, 6694, 6695, 6697, 6440, 6696, 6700}], 
           LineBox[{6701, 6293, 6702, 6706}], 
           
           LineBox[{6707, 6698, 6708, 6699, 6691, 6709, 6710, 6731, 6738, 
            6737, 6820, 6730, 6821, 6749, 6746, 6748, 6745, 6747}], 
           
           LineBox[{6718, 6717, 6711, 6282, 6714, 6713, 6703, 6716, 6740, 
            6712, 6715, 6704, 6705, 6741, 6739, 6743, 6742, 6750, 6751}]}, 
          "0"], Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl1FtozQEcwPG/eXALxWhse6CkPEtpSVZKWUKRUmLM/c6UB7fNnSXUaIRc
NtdtjF3sZnPdfXbFjISWe+TBnc8/D5/z/f06/3PO/5x//zMscdX0ld2CIIjz
0BoVBDEcGRIEj7WR0ZywV2kilZyzXyHJXMRF81gtIZ88e3xYZofH2LPC53RO
eDwV5omaw0nu2Sdpsh7XGm0mgynhuegp0s2n9ag+1nammrO0k8PmDs1hnPmF
lnLAXKxdjDff1oP6Vh/wkX32NN6b6xhjbtVd+kWfE2d+rV/Zbn6po/SbpmoK
O9nGHi4P9VuRTQ4Do4NgAJGcsQ/SAgZTRz0NNLI2JgjWsJqt5JJNDjvZTio7
OO29tukWUmj2+odsNl/RFprYZL+pRRRSQjFllFLJbcq5RQWzuEM/+tCfHvSk
O73pFX6ec/jLH5roooUIz7VrK3W00Uw9D2igliqqqeE+xWRRwk3Oc4FLXKSI
n1wjl1/M5wffWcxV8rhBJoXM4zr5FFBKGatYxgqWs5LVLGERS5nLAhJJYiHl
zKKCSn4z1HeOJoa73COgivWuwTqS2cAZznGWTIopoZQyHnIrvKa0UMUTWumg
iUc8pZ1O2sLrzDPqqKGeahrIoJbjNFJAPje4ThGFpJPHNY5xmL3MYB972M00
9jOFBNKYTDyffecJGkUMIxhJEBsE7/QDn3jjuEPuo83hPccK90+SvvJ7JugW
+1idqbEaqcN1o/bWnhqpvzRCI/QTfXlGF+uj/v/P/QOXRt3f
            "]]}, 
          RowBox[{"-", "15"}]], Annotation[#, -15, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0jtI1VEcwPFzXSRoCFx8EhdE2sW6lZnhG20wcLF8X5tEhxpabHT0ESmo
5DMFwfJRitCiQxAtgjS0OAkiIk7lA4f8HBo+fM/v3vO/////cJOdfc96EyGE
GX5lh5DHWE4Iv3WXYj6Yf2gHO3w0L5O23mLJOqXf2GDd/CSW5rjHvBi/05a4
n23rSv3MFN/NNfpaJ/Wn7jHO0/gs8Z66wARrzDLPXHwmPjGd612YpYopGuI7
aHued+AWbXSywjKtrPGFdTZYpYVNLnme73n1nAvO6Ip7fF5CK92k6eAFXXyN
99I6avljrtYKGq2rtJIa/prbtY17vCfFO4YZZYgRXjLIYx7ygLuU8YhySrnP
qd/NKAgh1/o2GdwhkwIKKeIfx5zEazhy3Yiz72eAHmeZ1gPnWa9vzSlt0nzN
0qS+0RuaqVl6pQlN6Ck32eeQV9n//3vX7LZhYg==
            "]], 
           LineBox[{7076, 7072, 7075, 6913, 7077, 7220, 7076}]}, 
          RowBox[{"-", "30"}]], Annotation[#, -30, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0b8rxGEcwPHPLVJMV8rdoZNSVsplEJlk0jnkx+RHl9QpAwuLHxn9ijgy
+EcsYhCLwWJSMhmwHcnrMrx6P8/zre/z9DytM0v5UiIiiqQbIx5Z5pVn6ngn
qlIRFU1qjdbqqmY1qRktaE7XdUhf0hGzumi+rWvs8ZaJ+GiK6OCTX7p4sb7B
Cm3mWVpIkSHRHNGgc75fUmKHeXrIsWXPdu1m07hX+yiywD67HDPAKWcM+e+X
/nBBhW/KHPDJIROMU0+BfobJM8IoY0wyxXR1D+cY5No9nGiZe+M7brnhinN3
06kPPHGU+n+XP7iPO9I=
            "]], 
           LineBox[{6336, 6334, 6341, 6812, 6811, 6348, 6336}]}, 
          RowBox[{"-", "45"}]], Annotation[#, -45, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6399, 6354, 6368, 6370, 6369, 6372, 6802, 6801, 6390, 
            6379, 6388, 6377, 6385, 6399}], 
           LineBox[CompressedData["
1:eJwl0MErg2EcwPHfiuSg7MI2K1EuDktCMim1FCXhP9hB2oGTXeyyhRxsHIiD
5Q9Tq5XLHBxIO1n7vDl8+j6/p97n6XnnyudHZ6mIOCSdjXjPRHzzwye/3OUi
WjS5Z28mYoJ9djhgm+l8RElf2WDKXNQ3XmjzzCNPtHjglBO22KThjlVdZ5ml
5Bt7i1pghQVuuOaWSXel+LAe13kurOt0k3PMf/ToO+uLTvIeb77kioq3lrVr
f1dr5jU91pymdVarOqYDHdW+jmT//98QbhYthw==
            "]], 
           LineBox[{6805, 6795, 6806, 6807, 6987, 6990, 6805}]}, 
          RowBox[{"-", "60"}]], Annotation[#, -60, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6226, 6406, 6422, 6392, 6412, 6413, 6414, 6415, 6794, 
            6793, 6791, 6393, 6380, 6792, 6416, 6790, 6371, 6789, 6961, 6959, 
            6803, 6727, 6779, 6918, 6953, 6800, 6957, 6963, 6948, 7031, 6947, 
            6943, 7034, 7044, 7167, 7188, 7053, 7185, 7139, 7176, 7201, 7028, 
            7040, 7136, 7217, 7420, 7400, 6902, 6893, 6877, 6542, 6522, 6531, 
            6249, 6497, 6880, 6472, 6267, 6453, 6226}], 
           LineBox[{6983, 6984, 6985, 6979, 6981, 6988, 6983}]}, 
          RowBox[{"-", "75"}]], Annotation[#, -75, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6442, 6879, 6496, 6248, 6530, 6521, 6541, 6876, 6892, 
            6901, 7399, 7419, 7216, 7135, 7039, 7027, 7174, 7052, 7187, 7166, 
            7043, 7033, 6942, 6946, 6956, 6952, 6917, 6778, 6784, 6783, 6726, 
            6777, 6774, 6781, 6782, 6785, 6461, 6441, 6443, 6436, 6437, 
            6442}]}, 
          RowBox[{"-", "90"}]], Annotation[#, -90, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6520, 6529, 6247, 6451, 6439, 6446, 6445, 6460, 6459, 
            6450, 6465, 6449, 6776, 6724, 6720, 6729, 6775, 6780, 6864, 6916, 
            6951, 6955, 6945, 6941, 7032, 7023, 6944, 7021, 7183, 7165, 7186, 
            7051, 7173, 7026, 7038, 7134, 7215, 7418, 7398, 6900, 6891, 6875, 
            6540, 6520}]}, 
          RowBox[{"-", "105"}]], Annotation[#, -105, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6438, 6447, 6480, 6464, 6483, 6467, 6482, 6719, 6769, 
            6770, 6723, 6773, 7020, 7182, 7179, 7050, 7172, 7025, 7037, 7133, 
            7214, 7417, 7397, 6899, 6890, 6874, 6539, 6519, 6528, 6452, 6444, 
            6438}]}, 
          RowBox[{"-", "120"}]], Annotation[#, -120, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6479, 6463, 6481, 6466, 6471, 6510, 6512, 6493, 6514, 
            6722, 6772, 7019, 7181, 7178, 7049, 7171, 7024, 7036, 7132, 7213, 
            7416, 7396, 6898, 6889, 6873, 6538, 6479}]}, 
          RowBox[{"-", "135"}]], Annotation[#, -135, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6462, 6478, 6537, 6872, 6515, 6448, 6462}], 
           
           LineBox[{6511, 6492, 6513, 6721, 6771, 7018, 7180, 7168, 7035, 
            7131, 7212, 7415, 7395, 6897, 6504, 6506, 6508, 6509, 6511}]}, 
          RowBox[{"-", "150"}]], Annotation[#, -150, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6487, 6489, 6491, 6495, 7130, 7211, 7414, 7394, 6896, 
            6503, 6505, 6507, 6487}]}, 
          RowBox[{"-", "165"}]], Annotation[#, -165, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{6486, 6488, 6490, 6494, 7129, 7210, 7413, 7393, 6425, 
            6486}]}, 
          RowBox[{"-", "180"}]], Annotation[#, -180, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6485, 6469, 7412, 7392, 6424, 6485}]}, 
          RowBox[{"-", "195"}]], Annotation[#, -195, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{6484, 6468, 7411, 7391, 6423, 6484}]}, 
          RowBox[{"-", "210"}]], 
         Annotation[#, -210, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      RectangleBox[{0, 0}, {5, 4}]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {1000}, 
     Method -> {"DefaultBoundaryStyle" -> Automatic}, PlotRange -> {All, All},
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
dtsdHeIqFdghWnheSrAK/wMYMcWM
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -103.24345366580516`}, {
                    Rational[
                    15, 2], -103.24345366580516`}}, {{-7.5, \
-103.24345366580516`}, {7.5, -103.24345366580516`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -89.97388415264993}, {
                    Rational[
                    15, 2], -89.97388415264993}}, {{-7.5, \
-89.97388415264993}, {7.5, -89.97388415264993}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -76.7043146394947}, {
                    Rational[
                    15, 2], -76.7043146394947}}, {{-7.5, -76.7043146394947}, {
                  7.5, -76.7043146394947}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -63.434745126339465`}, {
                    Rational[
                    15, 2], -63.434745126339465`}}, {{-7.5, \
-63.434745126339465`}, {7.5, -63.434745126339465`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -50.16517561318423}, {
                    Rational[
                    15, 2], -50.16517561318423}}, {{-7.5, \
-50.16517561318423}, {7.5, -50.16517561318423}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -36.895606100028985`}, {
                    Rational[
                    15, 
                    2], -36.895606100028985`}}, {{-7.5, \
-36.895606100028985`}, {7.5, -36.895606100028985`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -23.626036586873752`}, {
                    Rational[
                    15, 2], -23.626036586873752`}}, {{-7.5, \
-23.626036586873752`}, {7.5, -23.626036586873752`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.35646707371852}, {
                    Rational[
                    15, 2], -10.35646707371852}}, {{-7.5, \
-10.35646707371852}, {7.5, -10.35646707371852}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 2.913102439436713}, {
                    Rational[15, 2], 2.913102439436713}}, {{-7.5, 
                  2.913102439436713}, {7.5, 2.913102439436713}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 16.182671952591946`}, {
                    Rational[15, 2], 16.182671952591946`}}, {{-7.5, 
                  16.182671952591946`}, {7.5, 16.182671952591946`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 29.452241465747186`}, {
                    Rational[15, 2], 29.452241465747186`}}, {{-7.5, 
                  29.452241465747186`}, {7.5, 29.452241465747186`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 42.72181097890242}, {
                    Rational[15, 2], 42.72181097890242}}, {{-7.5, 
                  42.72181097890242}, {7.5, 42.72181097890242}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 55.99138049205766}, {
                    Rational[15, 2], 55.99138049205766}}, {{-7.5, 
                  55.99138049205766}, {7.5, 55.99138049205766}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 69.26095000521289}, {
                    Rational[15, 2], 69.26095000521289}}, {{-7.5, 
                  69.26095000521289}, {7.5, 69.26095000521289}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 82.53051951836812}, {
                    Rational[15, 2], 82.53051951836812}}, {{-7.5, 
                  82.53051951836812}, {7.5, 82.53051951836812}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.50000000000001`}, {
                7.500000000000001, 112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -94.39707399036836}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -94.39707399036836}]}, {{
                    7.500000000000001, -50.16517561318423}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -50.16517561318423}]}, {{
                    7.500000000000001, -5.933277236000109}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -5.933277236000109}]}, {{
                    7.500000000000001, 38.298621141184015`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    38.298621141184015`}]}, {{7.500000000000001, 
                    82.53051951836814}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    82.53051951836814}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -112.089833341242}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -112.089833341242}]}, {{
                    7.500000000000001, -103.24345366580518`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -103.24345366580518`}]}, {{
                    7.500000000000001, -85.55069431493152}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -85.55069431493152}]}, {{
                    7.500000000000001, -76.7043146394947}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -76.7043146394947}]}, {{
                    7.500000000000001, -67.85793496405788}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -67.85793496405788}]}, {{
                    7.500000000000001, -59.011555288621054`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -59.011555288621054`}]}, {{
                    7.500000000000001, -41.3187959377474}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -41.3187959377474}]}, {{
                    7.500000000000001, -32.47241626231058}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -32.47241626231058}]}, {{
                    7.500000000000001, -23.626036586873756`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -23.626036586873756`}]}, {{
                    7.500000000000001, -14.779656911436932`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -14.779656911436932`}]}, {{
                    7.500000000000001, 2.9131024394367153`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    2.9131024394367153`}]}, {{7.500000000000001, 
                    11.75948211487354}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    11.75948211487354}]}, {{7.500000000000001, 
                    20.605861790310364`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    20.605861790310364`}]}, {{7.500000000000001, 
                    29.45224146574719}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    29.45224146574719}]}, {{7.500000000000001, 
                    47.145000816620836`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    47.145000816620836`}]}, {{7.500000000000001, 
                    55.99138049205766}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    55.99138049205766}]}, {{7.500000000000001, 
                    64.83776016749448}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    64.83776016749448}]}, {{7.500000000000001, 
                    73.6841398429313}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    73.6841398429313}]}, {{7.500000000000001, 
                    91.37689919380496}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    91.37689919380496}]}, {{7.500000000000001, 
                    100.22327886924178`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    100.22327886924178`}]}, {{7.500000000000001, 
                    109.0696585446786}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    109.0696585446786}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "200"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -94.39707399036836}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "150"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -50.16517561318423}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "100"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -5.933277236000109}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "50"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    38.298621141184015`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    82.53051951836814}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
                    {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "220.46365482130153`"}], ",", 
                   "33.87767830590203`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "210.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "195.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "180.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "165.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "150.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "135.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "120.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "105.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "90.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "75.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "60.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "45.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "30.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "15.`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             RowBox[{"{", "1000", "}"}]}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.693271439075743*^9, 3.693271615655843*^9, 
  3.6932717987853174`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Max", "[", "sol", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Min", "[", "sol", "]"}]}], "Input"],

Cell[BoxData["0.0000145160143557015`"], "Output",
 CellChangeTimes->{3.6932716330978403`*^9, 3.6932717989163246`*^9}],

Cell[BoxData[
 RowBox[{"-", "0.000023837931733382026`"}]], "Output",
 CellChangeTimes->{3.6932716330978403`*^9, 3.693271798921325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "KE", "]"}]], "Input",
 CellChangeTimes->{{3.693271719225767*^9, 3.6932717253241158`*^9}}],

Cell[BoxData["6070"], "Output",
 CellChangeTimes->{3.693271798868322*^9}]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 146, 2, 31, "Input"],
Cell[707, 24, 236, 7, 72, "Input"],
Cell[946, 33, 2278, 57, 172, "Input"],
Cell[3227, 92, 4204, 100, 432, "Input"],
Cell[7434, 194, 7352, 202, 332, "Input"],
Cell[14789, 398, 11183, 280, 672, "Input"],
Cell[25975, 680, 5253, 120, 672, "Input"],
Cell[31231, 802, 8254, 194, 732, "Input"],
Cell[39488, 998, 7087, 174, 772, "Input"],
Cell[46578, 1174, 2809, 77, 212, "Input"],
Cell[49390, 1253, 92, 1, 31, "Input"],
Cell[49485, 1256, 7173, 181, 752, "Input"],
Cell[56661, 1439, 14510, 355, 1292, "Input"],
Cell[71174, 1796, 122, 2, 31, "Input"],
Cell[71299, 1800, 6451, 170, 552, "Input"],
Cell[77753, 1972, 15243, 353, 1632, "Input"],
Cell[92999, 2327, 20110, 468, 1952, "Input"],
Cell[113112, 2797, 15162, 347, 1792, "Input"],
Cell[CellGroupData[{
Cell[128299, 3148, 8808, 260, 712, "Input"],
Cell[137110, 3410, 84337, 1445, 1013, "Output"],
Cell[CellGroupData[{
Cell[221472, 4859, 250, 3, 23, "Print"],
Cell[221725, 4864, 311, 6, 23, "Print"]
}, Open  ]],
Cell[222051, 4873, 754, 11, 31, "Output"],
Cell[222808, 4886, 38155, 631, 1013, "Output"]
}, Open  ]],
Cell[260978, 5520, 752, 22, 52, "Input"],
Cell[261733, 5544, 28102, 756, 1792, "Input"],
Cell[CellGroupData[{
Cell[289860, 6304, 3621, 105, 412, "Input"],
Cell[293484, 6411, 160, 2, 31, "Output"],
Cell[293647, 6415, 37792, 626, 946, "Output"]
}, Open  ]],
Cell[331454, 7044, 725, 21, 52, "Input"],
Cell[332182, 7067, 27348, 751, 1772, "Input"],
Cell[CellGroupData[{
Cell[359555, 7822, 10372, 333, 812, "Input"],
Cell[369930, 8157, 66905, 1157, 150, "Output"],
Cell[436838, 9316, 201, 3, 31, "Output"],
Cell[437042, 9321, 235, 4, 31, "Output"],
Cell[437280, 9327, 30319, 502, 193, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467636, 9834, 2998, 80, 192, "Input"],
Cell[470637, 9916, 580, 9, 31, "Output"],
Cell[471220, 9927, 564, 8, 31, "Output"],
Cell[471787, 9937, 581, 9, 31, "Output"]
}, Open  ]],
Cell[472383, 9949, 344, 5, 31, "Input"],
Cell[472730, 9956, 26628, 712, 1652, "Input"],
Cell[CellGroupData[{
Cell[499383, 10672, 9436, 303, 752, "Input"],
Cell[508822, 10977, 66849, 1156, 150, "Output"],
Cell[575674, 12135, 30288, 501, 253, "Output"]
}, Open  ]],
Cell[605977, 12639, 988, 24, 52, "Input"],
Cell[606968, 12665, 26162, 697, 1612, "Input"],
Cell[CellGroupData[{
Cell[633155, 13366, 891, 29, 112, "Input"],
Cell[634049, 13397, 4616, 138, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[638702, 13540, 128, 2, 31, "Input"],
Cell[638833, 13544, 133, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639003, 13551, 818, 28, 112, "Input"],
Cell[639824, 13581, 9682, 278, 172, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649543, 13864, 300, 8, 31, "Input"],
Cell[649846, 13874, 114, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649997, 13881, 120, 2, 31, "Input"],
Cell[650120, 13885, 73, 1, 31, "Output"]
}, Open  ]],
Cell[650208, 13889, 93, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[650326, 13894, 130, 2, 31, "Input"],
Cell[650459, 13898, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650594, 13904, 13942, 426, 832, "Input"],
Cell[664539, 14332, 215185, 3606, 1013, 90453, 1560, "CachedBoxData", \
"BoxData", "Output"],
Cell[CellGroupData[{
Cell[879749, 17942, 8777, 257, 100, "Print"],
Cell[888529, 18201, 969, 17, 23, "Print"],
Cell[889501, 18220, 7067, 207, 81, "Print"],
Cell[896571, 18429, 825, 16, 23, "Print"],
Cell[897399, 18447, 2222, 70, 23, "Print"],
Cell[899624, 18519, 419, 10, 23, "Print"]
}, Open  ]],
Cell[900058, 18532, 40420, 670, 1002, "Output"]
}, Open  ]],
Cell[940493, 19205, 1061, 25, 52, "Input"],
Cell[CellGroupData[{
Cell[941579, 19234, 28521, 797, 1732, "Input"],
Cell[970103, 20033, 123701, 2341, 1017, "Output"],
Cell[1093807, 22376, 118149, 2260, 1017, "Output"],
Cell[1211959, 24638, 137859, 2575, 1017, "Output"],
Cell[1349821, 27215, 131758, 2484, 1017, "Output"],
Cell[1481582, 29701, 137647, 2576, 1017, "Output"]
}, Open  ]],
Cell[1619244, 32280, 147, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[1619416, 32286, 335, 5, 52, "Input"],
Cell[1619754, 32293, 93, 1, 31, "Output"],
Cell[1619850, 32296, 108, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619995, 32303, 300, 8, 31, "Input"],
Cell[1620298, 32313, 87, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1620422, 32319, 16355, 491, 852, "Input"],
Cell[1636780, 32812, 637855, 10630, 1009, 298324, 5063, "CachedBoxData", \
"BoxData", "Output"],
Cell[CellGroupData[{
Cell[2274660, 43446, 17307, 505, 195, "Print"],
Cell[2291970, 43953, 1700, 29, 43, "Print"],
Cell[2293673, 43984, 13962, 406, 157, "Print"],
Cell[2307638, 44392, 1640, 26, 43, "Print"],
Cell[2309281, 44420, 4250, 132, 43, "Print"],
Cell[2313534, 44554, 742, 14, 23, "Print"]
}, Open  ]],
Cell[2314291, 44571, 131571, 2162, 1002, "Output"]
}, Open  ]],
Cell[2445877, 46736, 1061, 25, 52, "Input"],
Cell[CellGroupData[{
Cell[2446963, 46765, 28521, 797, 1732, "Input"],
Cell[2475487, 47564, 230051, 4121, 1017, "Output"],
Cell[2705541, 51687, 224814, 4030, 1017, "Output"],
Cell[2930358, 55719, 222287, 3966, 1017, "Output"],
Cell[3152648, 59687, 235133, 4207, 1017, "Output"],
Cell[3387784, 63896, 230213, 4135, 1017, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3618034, 68036, 119, 2, 52, "Input"],
Cell[3618156, 68040, 117, 1, 31, "Output"],
Cell[3618276, 68043, 134, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3618447, 68050, 128, 2, 31, "Input"],
Cell[3618578, 68054, 73, 1, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
