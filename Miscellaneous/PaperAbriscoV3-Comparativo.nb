(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    785558,      15768]
NotebookOptionsPosition[    778869,      15572]
NotebookOutlinePosition[    779218,      15587]
CellTagsIndexPosition[    779175,      15584]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppgfttoPSI", "=", "0.0519481"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6779315751321106`*^9, 3.677931581532159*^9}, {
  3.677931620119012*^9, 3.6779316234223375`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearEq", "[", 
     RowBox[{"pt1_", ",", "pt2_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "x", ",", "temp", ",", "temp2", ",", "temp3"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pt1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
        FractionBox[
         RowBox[{
          RowBox[{"pt2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"pt2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Interpolate", "[", 
    RowBox[{"ycoord_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "i", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "\[LessEqual]", 
            RowBox[{"Abs", "[", "ycoord", "]"}], "\[LessEqual]", " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "=", 
             RowBox[{"LinearEq", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", 
             RowBox[{"f", "/.", 
              RowBox[{"y", "\[Rule]", "ycoord"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67792868049216*^9, 3.6779286828127775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataporepressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8.33", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.7", ",", 
       RowBox[{"-", "9066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14.25", ",", 
       RowBox[{"-", "13885"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17.25", ",", 
       RowBox[{"-", "16300"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PtsFracPressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14.5", ",", 
       RowBox[{"-", "6025.97"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", 
       RowBox[{"-", "12000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", 
       RowBox[{"-", "16500"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataporepressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4568.32", ",", 
       RowBox[{"-", "9066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10278.50", ",", 
       RowBox[{"-", "13885"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14606.48", ",", 
       RowBox[{"-", "16300"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PtsFracPressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6025.97", ",", 
       RowBox[{"-", "8000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10597.39", ",", 
       RowBox[{"-", "12000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17142.84", ",", 
       RowBox[{"-", "16500"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabpore", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Interpolate", "[", 
        RowBox[{"y", ",", "dataporepressure"}], "]"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "16300"}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabfrac", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Interpolate", "[", 
        RowBox[{"y", ",", "PtsFracPressure"}], "]"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "16500"}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tabpore", ",", "tabfrac"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Profundidade (ft) \>\"", ",", "\"\< \>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pressure(psi)\>\"", ",", "\"\< Janela Operacional \>\""}],
        "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Bold", ",", "14"}], "]"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6779304070421376`*^9, 3.6779304086843863`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
z3Q9kleJltcrQn1k2PYWBnb4d5n81v317OsUsWd2dNrYdHa4ywPVpKW32IMV
8aRbcfHONHZ4WWTsvuM32dcqom45n863brDDl+aUuvc6lV1WhO/DhNlF19nh
ou6+1rVpeY0iDh0tF91BsMO9rc/2GZ7CvloRL+dOyJp2jR1e86jSUvkqe5Ai
Gve8WOPgFXb4+rGpCecvs69SxOTyNYbeS2aHSwdcfZd7iX2lIjSPZ8llaQl2
7VW7QeOL7IG456JSk3okscMhFQK8fC6wr8A9N7/+j4Dz7LDhSXpo6Dn25bjn
ei9uoT3LDlfSNE5NSWRfhnuu4m2/rDPssNuCFYV/TrMvxT2X2Ty8Gi3BO/o8
6OB4in0J7jnt6oyBJ9nh+5XazJyQwL4Y99z/PjDwBDtc89m6yD3H2Rfhnuvb
oeepeHbYJ+bFE0Mc+0Lcc5U3L3wXyw5HLOpS1aJjX4B7LutNXD1agp/12+7a
OYZ9Pu45XY837lp2uH7Vj6tmadgDcM8t3l13fTQ77Pe877kjUezzcM/1/6q6
dIwdxpffl4dH2efinqvmGvI9kh3OWfLLoQItz8E99+LwtaZH2OFmA4b59jnM
PlsRaXH//o4+xA5Prx69a9FBdn9FWC9TOW0/wA7HZhfpY/ezz1LE0IGxU2/s
Y4dz472llxHsMxWxpUapQwV72eG2yxO61qTlGYq4/XLMQ6dwdniea7mAIXvY
pyui2onEilN2s8OnbSbEBIWxT1OE54pKLvt2scN5r5KyE3eyT1XE7kFTV9ze
wQ53Tqhu+2k7+xRFPK559bQVLcFLA2eNsN/GPlkRdd7Yfuq6lR2+ODh1nXoL
+yRFjDk5r9HcUHbYVKv+5ZDN7BMVcXBl+sioTexwr5xFeVdC2CcoIntI4+2Z
G9nh1acyWudtYB+viEa1V6RVpiVYrGo+qeV6dj9FTHp7v7j/OnbYatjqfeOC
2ccpIvq0Y+dla9nhgXUy7+6S2ccq4n3Qutkn1rDDG9+1t05fze6riJbDX0S9
CWKH9Wc29SlexT4G91zdLlm1aQmuuObNko4r2Ufjnnu/rcaIQHZ4xIgeCdNX
sI/CPZf4Ycja5ezw9nq73x1cxj4S95zcV76wlB2+9+FL/ftL2H1wz7ntS/qy
mB22OTfQqxwte+Oes/v1vfEidth77eHQngvZvXDPfRzaYuQCdniv+7/r8+ez
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
jrPK0PIFo2jh7Xd1TgQ7fK9kR43He9nPY69xqdN60xLs4P33kjac/Rz2WtKy
alVaghfH+U5euof9LPbqve3Cy93scHpJSsXBtJyIvcbljT8Vxg7beTc/W4eW
zxhFaskoa3kXOzwnLnTsp53sp43C1vvqKQ9agq+V/Ch9aQf7Kew1zmF0E1qC
q3v7nNi8nf0k9loSIuVtY4enxCV7+9JyAvbq/S02dSs7fKGkkdmRlk9gr3Fq
z91b2OHy3hu0RaHsx7HXkqTCKbQE+8blumVsZo/HXr3tozrTEpxQovp3aBN7
HPYaFzysLC3Bkvf5I3ND2GONIrbkY97jjeywOs5ucB9a1mGvXm4HYzaww5qS
NT+q0nIM9hqXOGDZenb4n9f7iFfr2LXYa0mdr4NpCR4aN6zf6WB2DfbqFbSn
Li3Bh0pOfZLXskcbxcC4nF6fZXb4u5ftLk9ajjKKiJLB7y+tYYf7xQV2d6Dl
Y9irV8K20NXs8O6SV2/ygtiPYq9xNv+NpSX4vZdr6I1V7JHYa8myl21oCe4W
F++8ZyX7EezVK3tjcSA7HFpS7flUWj6Mvca5tL+9gh1+4bVkXRdaPoS9lugy
Dy9nh9vHZbUpR8sHsVevKvK8ZexwcEnfR0+Wsh8wCse4ha360hL8yEu7SreE
fb9RBJVk3qtGS3CLuIrNly9m34e9evVe8XoRO7y8JOD2EFqOwF7jopqcWcgO
K16Pl9Sj5b3Ya4m1ce0CdrhhXI+GufPZw7FXr7kL1bQEzy+JvJUcwL7HKOrF
PbBrSktwqlfZgC3z2HdjryVdb/yeyw7bxvnXGUfLYdir1+HZN+ewwzNL7qa0
peVd2GucVa3w2exwsleXmWZ/9p3Ya8mMK9NoCa4cd6D6nVnsO7BXr9tT/6Ml
eHyJ5eKRmezbsdc45yrWtASf8Zo2KWAG+zbstSTifOZ0drhMnLFCP1reahQn
vMx+sdPY4ZEl7ROr0/IWo7DETi63Yio7HOsV7vtmCnso9lqSfnIoLcGmWJNV
4mT2zdirl9MoO1qC3UomHA+exL4Je40Ns+ROZIePeqV5edFyCPZakq+7PIEd
zot1LG5KyxuN4qCXn8fW8ezwwJIdmj9+7Buw19jUgnG0BEd4/R2RNo59PfZa
0vKYEy3BubG+f8PHsq8zijCvbUNLfNnhXiUph6fTcjD2Gpv3684Ydni7V/NB
XWl5LfZaMupA5Gh2+HVs6HdrWpaxV6+rLvNHscOdSn7sfTqSfQ32GuvwpR8t
wRu9fPrG+bCvNop2JSG7a9AS/DQ2+eMKb/Ygo1jr9a1njhc77FjSaOcwWl6F
vcaq3yWq2eEgrw3d6tPySuy1JGnrOk92+G5s7usvHuyB2KuXfRdvWoIdSlSb
r6jYV2CvscHZzWgJXux1vuM2d/bl2GvJxw1/3djhW7F2WX60vAx79XJrd2sE
O1yvZE1wO1peir3GJj7ZO5wdnuP13tEyjH2JUdQqqbNmBi3B12KHPbw7lH2x
UczwCmrZjZbg6iWnVh4dwr4Ie43NuVueluDJXrbNFgxmX4i9lgxe/mwQO3w+
NjCjPy0vwF69EhrHu7LD5UteLbah5flGcTrWxhA4kB329XK1fzuAPcAoSpcs
WzCcluATsfFpZ13Y52GvXtn1GtASbDFXm7e+P/tc7DXWJfVrP3bY02tJbR9a
noO9mnX+V/uyw5rYrGvNaXk29upVpeb2PuzwP3PfGf96s/tjr7ELL4+nJXiI
l7Zaei/2WdirOXNKe1qCD8ZWvBjRk30m9urVu7JES/B3c8DEmT3YZxjF3tio
c/e6s8P9vB6X707L043is9na71g3djgstseZCrQ8DXv1mlt2YVd2+J05ckzW
f+xTsdfYBwkutAR39SprdbwL+xTs1dx1ZE1agkNj/eNXdmafjL16HS5524kd
fmG+qx5By5OMYkOsle6cMzvczqtLUQNanoi9mmeoNnRkh9fGHoj+1oF9Avbq
dTvfh5bgR2bL8Gvt2ccbxapY56MtaAlu4TXtz/Z27H7YqzliSL4TO7w81nho
Ai2Pw169zD/T27LDRnN71w60PBZ7jZ28f18bdtjeK/ybRMu+2Ks5vf8sR3Z4
fqwp/H5r9jFGUdfLKbc7LcGp5gl9olqxjzaK2bFhYRVpCa7llfZhYUv2Udir
Ob/H8xbs8IxYxx0DaHkk9url9/Z4c3b4knlH11q07IO9xqZuWdWMHa7s9ffV
u6bs3tiruWVnN1qCx8f6bjrvwO6FvXpte2FPS/Bpc0qHjU3Y1dhrbN76743Z
4dJezZ+NpGVP7NU8yimlETs8MjZ0bUta9jCKEvXVxzsassOx5h+tC+zZVdhr
rMPqibQEm9Q+D/QN2N2xV3NIi460BI+ITQ7cX5/dDXtVf7tTipbgSHOjpv52
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
HjYSUzj1Hm1QZJ0J/I2SjUy7VjYTLaB+5lZt+fcEeCHtVdsvfBhaQD00zbUk
fDz8tZI9dttn9nUcnHqrNkvqjZa8or2mVbx/+BecmnPTn/AXWvKS9qqdejDB
GE7dLy3wzc+x8BdKxtwuGa9CC6j9tOr9T8bAn9Ne03q9skQLqO+6uYw+MRpe
QHvV7tyjgxZQd0/LLNg4Cv6M9upWMuKNEZx6uVZvlyNa8pT2mjbxyZmRcOob
bgFD9dCSJ7RX7dntO0fAqTukqfLUw+H/KFmWW7fB09AC6gVa8ZYrw+D5tNe0
rVx/tID6glvGgAND4Y9pr9q3G+sN4dS/U3UfzkJL8pTsjJtD35whcOqZWn+/
4WiJkvaamn5fNhhOne5W2OvfQXBeydy0HdcsQguov6WK7jwaCOdor24b9cah
BdRTtSkrEw3gCtpr6stbvwbAqY+66XT1RUseKdlErfWyp/3h1B9S/W4I0ZKH
tFe3E51O9oNTO2oLFndASx7QXlPbXt3UF04d5ybUeasPZ7RX7ZqFYrSAujI1
+dLZPvBc2qvb0zY90AJqK22r167e8Pu011TzzLJecOowN98/09CSe0pmpj08
+2pPOLUqNf/MALTkLu3V7XfLgR5w6vFaE0+NHvwO7TV1xanZaAF1kJu8Oac7
PEfJxmiVbiPQAuqXqS0pEd3gf9Ne3cZ/+7crnHqk1mfaYrTktpI9TY0/rugC
p97hxn0eh5bcor1qmyfLdeHUj1ONj/7uDL9Je3Vb8tEXLaAepI1xftYJnq1k
itSHciu0gHqTW1P9yY7wG7RX7WjHjmgBNUv1jvfvAL9Oe3WLqnmrA6furc0V
OaEl12ivqV+jz7WHU/u6GVX2QEuu0l618613t4NT306VRZS3hV+hvbrdU09H
C6h1tY0W19rAs5TseurwMAO0gHqxm1fxQQH8spJ1/aC3/E1r7n9OvdQ5oPPZ
P/+15BK9b5NUV3f+hlO3/SD2nvYLflHJvJwz2g74Cac+l6R7of4H/IKStTT4
z8n5Dqd2dy78KWuGZypZSpLo9CItnPpLQ4r7uCb4eSWb7KzT9OtfOHVSkt+J
p1/h52gfDQUuJ7/Aqe2chZ82fYafVbLopOQkcSOcuqyh1bHHJ/gZeh85+9aW
fYBTByflx1xtgGco2dsGE5uDGji1sbO8bHY9/DTdf0ktYSPq4NTPGnzMvtXA
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
fZ/hdkpmkGhw0aMRTr2xPmjukE9wEe3VsfrXpw9w6l6Jrhm5DXBbJVtVn+UR
q4FT33LU1y6rh9soWefEwJNmdXDqxfXqKW1r4da0V0eXxpfVcGpBYubhU1Vw
KyWbU6/ntL0STn3GMaBucgVcSHtNUMXql8OpXevFtjVquKWSHXfMKL9ZCqdu
TNCVhZbALWiv9f7mC4rh1ImOhaoxRXBzJatJEB368R5ObVuf8lf+O7gZ7dVR
53XyWzh1aYLf3vVv4Ka01/qCkfaFcOqDjsKnXV/DTZSsMCE5oOQlnHpMfevg
yy/gE2ivjr78/udw6icJ+Zs8C+DjlWxIvUm/oc/g1Fsc5bmfn8DH0V4TWtY8
+AdO3bfep0d8PvwvJVvryN1e8RhOfSfBeLlFHtyY9lof07m9Ek69zLHp6msO
Ppb2muDtnaGAU7evz2274xF8jJLNdzS6MOUhnDozQTan3wP4aNprXePP2lw4
9QxHr9O378NHKVlaQo57+D049b91hk0L78KNaK+O0hPGd+DURxI0Lj//ho9U
Mk2d56d/bsOpHRyzk47fgo+gvSYYiDfehFNX1AXVOmTDh9NeHatjut+AU4ck
uNqor8GHKdn7uqyyrKtw6nGO+uGSK/ChtNeEQLNZWXDq53Xq98Muww2VbISj
y8GvF+HUAQmZxo8uwIfQXuv0XiVkwqkNHAP2rDoPH6xkGxJUI4Tn4NS5deIn
Omfhg2ivjhnb32TAqVcl6A4+exo+UMlu1vlzO0/BqTs5Fm6clg43ULJFCaK+
A9Lg1JfrUu7Xp8AH0F4dddbknIRTz07w04s4Ae+vZBl1BbcWHYdTf3cQLht3
DN6P9pqQ3On3UTj18brWK0+PwPsq2ScH34UnD8OpnRPy2/gnwfVpr3UmmWI5
nLrGQT67RyK8j5LZJLS0lMXDqWV1PqeuxsF7K1mJA+d2MBZObZpg/G12DLwX
7bUu5viIaDj1a4emyd8i4T2VbHSC90dFBJw6sC5XLpfBe9BeHYwcV4fDqYck
yGqswuB6Sra5rjG6Yyic+pGDl/U7Kbw77TUhR30uGE69ts4wbPcheDcly3GQ
mroehFN3S9C8MzgA76pkPnWeBxqC4NTXHLLH3t0P70J7TTB4GbkPTj2vLihw
yV64rpKdd6gePmEPnPpXvOs/f3bDO9Ne67K2FeyCU6c66A9K3QnvpGRf4wMV
m3fAqV3q1BucA+Adaa8OLvq9tsOpNfGZ9yq2wjsomX2d3urrW+DUMQ4B3YM3
w3Vor/Gqm3P94dSWdWIfo03w9rRXh4yO2g1w6nfxulf49fB2SvZXnf+Cw35w
6v0OhYK16+Btaa/xovM2a+HUw+tSZnVeA2+jZNsddFre+8KplfF+6Zmr4ALa
a12B656VcOoNDsJ/3VbAW3l2Pz752KDlcOqeda2TPvrA//BslYPvh3tL4dQ3
4/MTo5fAf/OsU52Jg89iOLW3g7zaZBH8F88uxbdECbzh1II6H6sXC+A/eTbb
gStNmw+nPh1vHLp1HryFZ821MSaTvODU0x2a3vaeC//Bs+Px3pKq2XDqT7W5
Y7Jnwb/zzMnB6IV0Jpw6IV62e54nvJlnNbWNw0bPgFPbOHjlN7vDtTyTxeds
zXODUxfXGg486gpv4pmJg/TRuulw6oPxmvWiafBvPHtd69mny1Q49SiH7LtF
LvB/ebY73sD34mQ49ZPaoG77JsG/8myIQ3W2x0Q49eZ416VDnOFfePawNqtD
oxhOre+gn5XrCP/Ms7XxgfNjHeDUObXq1mX28EaedXVwOWdmB6deGp85s60I
/olnV2v1fry0gVO3dwhIO2UN/8izefGq6dut4NTnasVfJwvhH3j20z4jWd8S
Tj0jXndSjTm8gWeptf4NN83g1F/tCxNCTeEank2OF9kvMIFTH65NqRozAV7P
M429TtSPcXBq+3g/Yf5f8DqeRdcWlCQbw6nL7YUh68fCa3lmEZ88wX4MnDqk
tvVN19HwGp69s/cNKjGCUxvH54++PBJezbN9tSbP94+AUz+3l+/yHA6v4tnw
+JahQ4fBqbfX+jz+bAiv5Blvz215MAROPSDe2CB+MLyCZxtqYx6uGASnvm/f
5GcxEF7Osx7x3r3bG8CpV9bm3nndH17Gs2x7o1UZ/eDUneJlXXf0hatpr7WN
N6bow6kv2nst6dcHXsqz1rgcnbpecOrZtYaXb/eEl9Be7aXzwnvAqbVxmj8L
9eDFPJtW63nWuDuc+ph9tufPrvAi2mucwfd/usCpnWqDUo/rwlU8i7evnrax
M5y6Os71i0Mn+Hvaa23W0e4d4dQye/2Jah34O9prXKAmqz2cekKtOl7SDv6W
ZwfsXexmtYVTv47LrBzWBv6G9lqrF/m19d5/Tr3LPsDy0Z//WlLIs/w4VXHC
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
e8J1eHbfWnogowecumeUZuwOPXh72muF58sp3eHUN62zA/t1g7ejvUYZjKjr
Aqf2rgj657YuvC3PLllXbwvvDKcWRLkO8u4Eb0N7rchSGHeEU5+21t/4Uwcu
4Jk2MlD/SXs49fQK9b3j7eCtHDtu7bJ6Y1s49afIzO6ObeB/OOZUoXeruwBO
nWAd4KP+c+c//82xmkhVxyu//2sBtU2F+IrkF/wXx2TWGQtm/YRTF0fqthne
Av/JMZMK//Nfv8OpD1oXznrUDG/h2OtIUUuCFk49qiIlfVUT/AfHdlvruAm/
wan/ifT7V+df+HeODakoOPbmC5x6s7Vw8tnP8GaOPYxM/rCzEU6tX9GaOO0T
XMuxtda+DgM+wqlzIvOr6xvgTRzrWmESnaOBUy+1lltF1MO/cexqZEvpojo4
dfsKn9BxtfB/OTbPmjP5XQ2nPhdp/O5pFfwrx36Wx0hOVsKpPaybxvhXwL9w
LDXS+4W4HE79tTx3d48y+GeOTbY2Gl5eCqc+HCnLv1oCb+SYprxx68FiOLW9
tdfAOUXwTxyLjsx5NEIFpy4rN9zw7R38I8csrKV9uLdw6pBIzV35G/gHjr0r
9/RdXQinNrbO7mb9Gt7AsX2RBjc7voJTPy8PWvruBVzDseHW1R3OP4dTb490
zdpdAK/nGF+eNd/1GZx6gLW+YOBTeB3HNkQGnmv4B059v1w9824+vJZjPaxd
fkQ+hlOviMxMW5IHr+FYdrme6wQlnLqTdcDXPxy8mmPekarkAgWc+mK5eFLq
I3gVx1qtMho2P4RTz47UTXR+AK/k2Olyf/teDE6ttSqsqrgPr+DYtEhR1PV7
cOpj5SnC4LvwctqrlU7p3DtwaqdIvxCjHHgZx+LLCyZob8Opq62Eb/lbcDXH
rCOTgw7fhFPLyltHr82Gl9JerXyf29yAU0+IzN/V+Tq8hGMHyk2Gqa7CqV9b
yR9nXoEX014jW7bsyYJT7yr3MXC/DC/iWL4V93DQJTj14Ejj9R8vwFW01/KY
3vcz4dQPrZruRJ+Hv+dYn0jvVT7n4NRrynO7mp6Fv6O9WhllC87AqbtGypa8
OA1/S3stb9RJPwWnvmLldXlrOvwNx9pF5syblAannldu2No7FV5Ie7WSnq06
CaduidB4Zp+Av+aYe7nnd+lxOHWKVXbqvGPwV7TXCIPpo5Ph1JPLg740H4G/
5FiSVfXRvMNw6voI14lHk+AvaK/lWZp1cjh1tJV+gigR/pz2GhFo1yUBTm1e
rq4sioMXcExq5RJ5MRZO/S4i03JfDPwZ7bVcr8QjGk691ypAOiQK/pRjBRGq
8Y0RcOph5eI3uTL4E9qrVcb+2HA4NR+hO3p5GPwfjvUv9y8wC4VTr7cq3Nk2
BJ5Pe40QDX0VDKfuUZ6Sd+oQ/DHt1Upny/aDcOobEX4DXA7A8zjWsbzggb4E
Tu1tJfSr2Q9X0l4jknvd2gen/lPWmhO6F85zbJaV78oFe+DUpyLyu4wNhHO0
1zKTGz92wamnWckX5++EKziWHNHS/tgOOPXHMp9L6wPgj2ivVpyX/XY4dXyE
8Z+u2+APOVZVFnOmZAuc2sqqacblzfAHHAuP8G7e7w+nLi7LTfHcBGe0Vyuj
aUM3wqklEbLPn9fDczn2qqzxyAM/OPUoKy/n+HXw+7TXiJz6FWvh1PllhvEW
a+D3ODbISipqvxpO7R+hqXi9Cn6X9lrmGZGxEk7dxyrbYscK+B2OrY4wKJ6y
HE59uywouN8yeA7HulhVj6tbCqdeGuFaeHsJ/G/aa1nWvvDFcOq2VvqjvBfB
b3PMKyLwmbE3nPpcmXrHzwXwW7RXoYvhk/lwaveITOXxefCbHDtZprd5oxec
+oswoL/jXHg27TVCxbrPgVMnlYnXqWfBb3CsTpjR88pMOLVdhG6OxBN+nWNR
Zf4rZs2AU5cJC3WHe8Cv0V4jRNe/usGpg8tSFj1yhV/l2FuhTvvE6XBq4wi/
i6umwa/QXssK5gqnwqmfCYW/dabAszg2NCI5481kOPW2slaPs5Pgl2mvQl/t
zolw6v4R+SenOcMvccyvzGTqACc49T2hvLHeEX6R9hrRcjjHAU69oszHKcIe
foH2KuTqFtnBqTtEGMeNE8EzObawLMb2tw2c+qKwqfypNfw87VXmLTtpBaee
WZZr7i+En+NYutCoSGwJp26SyQ71sICfpb2WNf5VbganThZ6vb5qCj/DsQ+y
nL0HTeDU4jJDozkT4Bm0V6H06YjxcOoqmSbg21/w07TXMs8hnDGcOkyYzcvH
wk9xrEhm4L96DJx6QllQP+vR8HTaq7A6t+MoOPVLmevadyPhaRwzKsvqcX4E
nHqnUP/v3cPhqbRXWeBy12Fw6kFl6s4Dh8JTOLZJ6HKtYQic+oEs0/vuYPhJ
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
OHWUSXa/L7fgxxRMHWzAHtyEU5urgtbGZ8OTaa8m1T1W3oBTvwl2/dviOvwo
7VWVtbz9NTj1HhN93cIr8CO01+DAaxlZcOqhKrX3jsvwwwq21cSl3dRLcGou
OPNCv4vwJNqrSm9uXSac2s8k4Nft83C5gt0NVp0OPwen1lOJPbzPwhMVbLlJ
RpPxGTj1jWDdkz9PwxNoryr/KU9OwakXmBR+Op4Oj1ewC8GiwxvT4NS/36eI
HVPhcbRXE5267ilw6vRgv1j1CXisgn17X2Bz5TiceqqJsFxy7H8s3WVUVGsD
xfExMDCwMDDoLgsVDCwMRLEwMLBQxOCqdA5lYGBhYGBhYGBhYPBMINI5lIGF
gSLXwMDg3e+6++N//T7BsOc8ZzHrDD0We42K3zItno7+UNHYT+8gfYdSjLB2
r/y8n47eFZUVodhH364ULyuszffG0dGDrOOKl+2lb8NeoxqCbPbQ0ZUVbgYt
dtO3KoWldXpO6U46OizKzOdMLD0Ge62I7e2/g442sK5Pn7CdvgV7jXJd22Mb
HZ1Zkda1Joa+GXu1NkxL3UJHr42KWbF1M32TUoiKOo35m+joztYutyw20jcq
hXtU6qI/UXT0rQrt1nmR9Gjs1Tr6ytEIOnp+VM1cr3B6lFIkVzg3HSmlo5ta
pyR1CKNHYq9RWjOeh9DRpyvCfl0Jpkdgr1bVJyOC6OhJUY5OMwLp4dhrRfJX
/QA6+l8rzSNf/ehSpRgdFeiQ7ktHx1VU1cb50MOU4o2Vw77l3nS0XVTSiMEb
6KFKsa1C403L9XT0Uyuf2PJ/6CFK0S+qcvA5Lzo6qsL+WcBaejD2apW42XEN
HW0Spd6v52p6EPZa4VXx3pOOzrVShd9dSQ/EXqPszLZ70NHrKxKKFqygByiF
0kotyGo5Hd0tylO/cRndXylWVuRn5y+lo+9a2XgfW0L3U4r2UfG91i2moxdV
NCpHLaL7KsU1K/c1ndzo6BZRWZovF9B9sNcK6/vX5tPRSVZxy6Pm0b2x18iG
9i6udLRzhdtNw7n0DdirVbrbt9l09NdIs1YZs+jrlWJcRezl/S509EGr+jke
M+nrlOJ9pGsT2xl09IiKtHOtp9P/UYqdVobTK6fS0S8jYxqSnOleSmFTUXci
aAodvdnKZZLTZPpa7DUy9UsvJzraokL7cK0jfQ32ahU99v5EOrowsubDjgn0
1dhrhXOc23g62tcqZXjfcfRVSvEwUuu1xIGO7lkRtqNwDN0Te7WqHnRiNB0t
Ih2r1o+ir1SKThXJm8aMpKPdrTT7drGneyjFzcjA8lfD6Wj1iippyjD6CuzV
ysF041A6+lJkUuEsO/pypWhSoRFobEtHz7Dy0fsxmO6OvUZWZj0cREf/KLff
cNCGvkwpHK0Se3oOpKOPRKor7QbQl2Kv5V6r2/Sno0dbqbo87ktfohR7I+3u
XbCmo9+UJ7iHWNEXK4WtlVr7KZZ09LZIzxt9LOiLsNfy/IV1ZnR0XyublsKU
7qYUkZHxyTtN6GhVeePsxcb0hdirlbukvxEdHRiZdbapIX0B9lpuPa1Yn47W
tor7eVKPPh97jWw47q1LRyvL3RwddOjzlKKrVfpnTW06emWk2aHXvemuSnGn
PHbMzV50dHur+vebetLnYq+RrnvnaNHRV8vThpn2oM9RCjUrw+qf3ejoOZEx
27O60mdjr+V1Noc06ejfli5PV3Whz8JeI1M3DutMRx8v17Zu14nugr1aRpc9
6UBHj4usCbukQZ+pFAfKnU3C2tPR7y1TCpzb0WcoxfBIrQCdtnT0zvIw3U/q
9OlK8cKyOlPWmo4eGOm4fncr+jSl2FSerLW0JR1daampGNCCPhV7jQxc1VyN
jg4tr+qsakZ3xl4tHe4mNqWj9SOTlvk2oU/BXss12o2X0NEPLX1SujXe/M8n
K4VWZOWCt3/+awl6Tbl9i9u/6U5KkWaZeGnLLzq6U6T6bNcG+iSlWFbu1Wj2
k46+Yak68+s73VEpWkfaTc35RkfPL0/4cbiePhF7tVQ7vuYrHS2J9Jw44gt9
AvZanv+p/Wc6OtHSJr7qX/p47DUifvTlOjrasbyxRvqRPk4pDlu675lWS0fX
RWQN1ftAd1CKUeXWrz7X0NF7LeO2Kd7RxyrF64iGgXvf0tG25W5Plr2hj1GK
rZbp0Tav6einEWZWLarpo7HX8tjS0pd0dIRlfeiZF/RR2GuEq7H/czrauDwt
f8Iz+kjs1dLQv0cVHZ0TEaNT84RurxR9yusepj6mo9dZuqzb+og+AnuNSO0x
v5KO7lquLbeooA9XCg9L3HCV0dF3Imo65ZXShylFu3LnO0dVdPQiy5SlXiX0
odhrhFbbkcV0dPPysOsdiuh2SjHbsnr+8wI6+lyEo9rVfLot9lqWfDEij46e
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
APWLuxvoh+TiYJ6Xy9KfdPQHfdWfAT/o8XIxIsDudPPvdPSuvIQpqnr6Qbl4
qa/2PfErHT0owDPB9wv9APaalz9+/Gc6ulLf5t9un+j7sdeA+ANv6+josLzG
kbc/0vdhr/ru77bU0tEGAVm7XD/Q4+TCN8/azvw9HZ2pH/fi1zv6XrnoGdAQ
k/OWjl6b5zbgyBv6HrkQ+umP1rymozsHmEWNqKbvlgv3vFgLjVd09C39+pKq
F/Rd2GuAa8jl53T0/Lw0w/Bn9J3Yq75h3rQqOrpJQIyv3lN6LPaaV9fny2M6
+rS+S4biEX2HXPzwT/XaW0lHT8rT7u5eQd8uF0f0o4VNOR39r3+NR4sy+ja5
GJ3n3LFMRUfH6afcPlNC3yoXb/y1lvgX09F2eWHqE4voMdirfvXVHoV09FN/
x3k1+fQt2GtecrM7eXR0pL7mha259M3Yq3/gzPk5dLRJXtVvi2z6JuxV3yHx
TyYdneufNDnvIX0j9pqn8e1oBh29Xt/nqNcDerRcKP0rx41Mp6O75dnXdVDS
o+RipX7i/udyOvquv/rIqzJ6pFy0z/N6GyHo6EX6qp0z0ugRcnHN387W4D4d
rZaX8PzrXXo49qqvFpN+h45O8vfsvy+VLsVec/Mrl9+mo531bSIH36KHYa/+
8eatbtLRX3Mbi8tT6KFyMU7fPfjcdTr6oH+WQeA1eohcvM+1znW8SkeP0I/z
6XmFHiwXO/0ben9IpqNf5ro9uHuJHiQXNvrpa7dfpKM3+Zt1W3iBHoi95sam
WZ2noy3061c0nqMHYK/+rh0KztLRhblpt46doftjr/qGi9edpqN9/WNaj06k
+8nFw9y6K51O0dE99V1cX56g+8rFGv/UpteP09EiV/t81DG6j1x00o+e4ZJA
R7v71/wyPEr3loubuc6nvh2mo1vrpzhlHKJvwF79ter3x9PRl3LDjngcpK/H
XvWrHWwP0NEz/B0/tt5PX4e95ibvq4yjo3/oadqf30v/Ry4c/QPfBO2ho4/k
VsU67aZ7yUWdnsOQ3rvo6NH+Sc9qY+lr5WJvrsaW+zvo6Dd6Pv1it9PXyIWt
f2WF2zY6eluufUTfrfTV2KteolmTGDq6r796ceFm+irsNdcr6MQmOlqlp9Lf
sJHuib362+WMiaajA3MTvLtE0VfKRY6eWu/qCDpa298zPSWc7iEX63Lz12yU
0tFKPZuus8PoK+Siq3/8feNQOnplbuPyH8H05XJxR89dIzOIjm7vn3XzYCDd
HXvNtV7kGUBHX9WLazXUn74Me/VvuNzGj46enes297EPfSn2qpfe5KI3Hf3b
zywpZAN9CfaaGzt9yno6+rhefUOfdfTFcvHFz/VknRcdPS43bZJYS18kFwf0
DL/uXENHv/eLObx4Nd1NLobn1o3tv4qO3qnnUtvUk75QLl74pcYVe9DRA3O1
R5xaQV+AvepFv/ZeTkdX+NXscHCnz8dec50Hd11GR4fqpVS9XkKfh736aW2+
uZiO1s8N67t5Ed0Ve9WrLp/jRkc/9HMMN11InysXWrnJpg3z6eg1eppFWfPo
c+QizQ83wK50dKfcKr3Vc+mz5WKZnkP2sDl09A2/pA3tZtNnYa+5Gr2eutDR
8/R8lJdm0l2wV7/K1WEz6GhJrr3m1On0mdirXuI9nWl0dKKf+vJPzvQZ2GuO
V3v5FDraUU91Y/dk+nS5OOxn57bUiY6uy0loOXASfZpcjNJTu9zckY7e6+c5
RzWBPlUuXufkS06Pp6Nt9WzO+Y6jO8vFVr/4aeMd6OgnOY0/u42lT8Fe9dxP
vB1NR0f4ZTneHkWfjL3mWH/ZMpKONtaLO+RqT3fCXv0axpiPoKNzctw+/BpG
nyQXffTS9+YMpaPX+ZkNP2JHd5QLRU5s9RpbOrqrXv32EUPoE+XCw891kMZg
OvpOTtrTKhv6BLlop2e46fJAOtrNL8Y6fAB9PPaaU1c2rT8d3VzPRarXjz4O
e/VLNfliTUefy9EuVFjRHbBX3eiAvZZ09BS/Gl13C/pYuTiW45xlY05Hf9FN
Wd/CjD5GLhz8tHqWmdDRB3LCFGeM6aPloka3epW/ER093M+xy0RD+ii5iM1J
vtvDgI5+oavpXqNHH4m9+gW2u6NLR2/MqUrZqkO3x151HRbO16ajzf2SWlj2
oY/AXnM0kv/0oqMLdH1m5/WkD5cLvf8/ME2LjvbJsT/r1YM+TC4ydBOnjuxO
R2v5qf/s0I0+VC5W53gdf65JR6fpqiZe7UK3k4uOfnafIzrT0ctyEuJndKLb
Yq+6amMMOtLRrfw833/VoA/BXnPy96S3p6Mv6toM29eOPhh79Yt/tbwtHT09
p3Hb4Db0QdirrrtNK3U6+rtv1pPyVnQbuZiYY73xXEs6+rBunFVgC/pAufjo
21DqqEZHj8pxC+vZnD5ALvbopht/aEpHv/Y1K7jbhN5fLobkxPpvl9DRMbr1
Ogsbr/7n/bBXX9dMq7//tQRtnZO2rvE3vS/2qmuoVfCLji7xjZEfa6BbY685
dZ7rftLRAbounUf/oFthr76pdzp9p6P75Ggve1lPt5SLf3Sj217/SkcrfGuu
R32hW8iFZo7zApfPdLSHboqa0Se6uVyk+mpd+lZHR7fNCZuV8ZFuhr3qVv/d
X0tHX/F1POPxgW6KveYkO9u+p6Nn6Wr+aF1DN8FefQOPVb6lo39lV004/4Zu
jL3qOnwKek1HH/NNOuhUTTeSi8/ZGqN7v6KjHXR9ampf0A3lYr9v5e77z+no
mmz7obHP6AZyMUw38aVbFR0d66u+re9Tur5cPM/2GtjkCR09QFf1uPARXQ97
9bWLPlFJR5dnJ1huqKDrYq+6aqVjyunoEF/P0C5ldB3sNTvfqFpFR+vp2uSn
lNC15cLbN95vYzEdnZHdqD27iN5HLnrouj80LqSjV/tm/fMjn95bLu5nW/fI
zKOjO+rGyQ7m0nvJxVLfhpWeOXR0SrZbp6HZ9J7Yq256apssOtrV12zp44d0
Lew1O7bNxQw6ulGn/lrIA3oP7NXXdf6UdDr6VHZac20lvbtcfNMxvFgnp6Mn
+sa4CBm9m1wcyq77s1PQ0R91XE4vTqN3lYuRvqlT+t+no/dka39veo+uKRfV
OtEJxXfo6CG+NeNPpdK7YK/Zzv9636ajH+ukHHC4Re+Mvfpqjep6k44Ozw57
9zqF3gl71anedfM6HW3k62i3+Rq9I/aanfxizlU6OltHc6vpFXoHuejtGzig
IZmO/ie76lHWJbqGXMh1HKIOXaSjNX2TLFZfoLeXixXZGqph5+noVB2fkHZJ
9HbYq2+l4dOzdPTCbPu8S2fobbFXnUTfsNN0dDNfde2pifQ22Gu2V4bOKTr6
rI7K69MJujr26mPXXX6cjp6cnSB2H6O3losEHbWVSxPo6M8+nh0HHqW3koux
2fm3mx+ho/fr2CxRHaK3lIt3PvHqp+Pp6GHZjVd9D9JbyMUOHfd54w/Q0c98
spp1309Xw16zrS+8jaOjo3XiZt7eS2+Ovfo0/N6yh442y3ZLdN1Nb4a96qRP
Nt9FR+f7mH37FUtvir1mxx7N2UFHe+vUjzuynd5ELh74uNat2UZH98hO2z9i
K10iF6t0DEdqxNDR931i3lZtpjfKRIfsup2XN9HRS3RcbMM30v/KRIpP6vNp
0XR0y2ztGL0o+h+ZcNWJ7v8lgo6+4FNTqQin/5aJxiznyL1SOnqaToq5exj9
l0yc8tEqsQmlo79lhQW3CKE3yMQEnWqDsiA6+pCPY+6ZQPpPmajNSvbxD6Cj
R+po9pnoT/8hE7t9Ah/08KOjq7Oq1tb40L/LxGAdh253vOnoLT5JaVs30L/J
xOMsDY/56+loKx2fDpbr6PUyEe5TeeuPFx1dnGW/OG8t/atMGOkktk5YQ0f7
+6hf9VpN/yITWVleriNX0dG9dVRNO3rSP8uEl4/d+ecedLQ8K2HG1RX0TzLR
RUftd8RyOnqFj+epGe70f2Xidla+k8EyOrqNjk391yX0OplY6BN/JH0xHX05
q9Fh3yL6R5lopuP+cbkbHe3ik7Vv8EJ6rUyczbK2b7WAjm7QjntTPo/+QSac
fBpiz7nS0QlZbkMC59Lfy8Qn7fRnjnPo6LE+Zlt6zqbXyMS+rNh+H1zo6Hfa
9RV3Z9LfycRQH9eI7TPo6B1ZaWYLp9PfysQzbcNiq2l0dH+fmKBGZ/obmYjO
qtMvmEJHl2m75BybTH8tE2Y+qd7rnOjo4Czt3qMn0atlIl87Or2TIx2N48Ga
lxPor2RiQ5Zz1+vj6egH2in3o8bRX8pEdx+tFS4OdPSqrDANo7H0FzJxT7v6
5rfRdHQHH8dFGaPoz7HXrORWB0bS0de1Na942NOfYa8+gXNtR9DRc7OqmqgP
p1dhr9oOSZVD6ei/3knTz9vRn2KvWRq/gmzp6JPaPiedhtCfyES9d+Wk3oPp
6AlZ9l9rbeiPZSJeO/Hw/YF0dK23ukPsAPojmbDP8qp1609H79ZWxfXtR6+U
iVfediOa9KWjB2UlvC60oldgr9pqsScs6ehH3p6DN1jQy7HX///D25yOlmrb
bO5iRi/DXr3j+1ab0NGGWY3lKcb0UuxV2z18oxEdneWdZTrbkK6SiV5Z1kXG
BnS0l3Zc4A89eolMyLwb9DJ16eguWW7ZB3XoxTKxXDt9g6c2HX3b26zX0D70
Iuw1K1bZpjcdvUC7fvXjnvRC7NXbVfOiFh3dNCvtXkgPegH2qm24fEp3OvqM
d0x77W70fOw1s+5GnSYd7aTt4ia60PNk4qh3astdnenoT5nalxd3oufKxBjt
6Dn9O9LR+7xrJM060HNk4m2m87ni9nT0UO2Uaafa0bNlYru3VoN3Wzq6KjPs
hEMbehb2ql3t2FWdjo7ydvzyuhU9E3vNTD50syUdbaqtOXZzC/pD7NU78MMc
NTo6L7Nqr2lzeoZM6Gg7DG9oSkdv8E6qzmpCfyAT6ZkaOw5J6Oju2j6DVjde
+c/TZcLTu/LpsL//tQR9L9N+U7s/dKVMaGgnWj/9RUcv9lYvv9RAV2CvmV7S
sJ90dAttlcnUH3Q59uptV6jznY4+n5kQ8KmeLsNe+6jpyb/S0VO9PbN2f6EL
mTiRmb9+6Wc6ur6PTc+Bn+hpMjHeO17R/F86Oj6zcZXqI/2+THzo497ldC0d
be+dddf3A/2eTOzKtHYf/56OftUnrl33Gvpd7NW7IeXtWzp6c6bbwttv6Hew
1z7pLWJe09GW3mbJrtX0VOw1M3a2+Ss6uqhPfeOvF/Tb2Ku369mc53S0X2ba
1CPP6LdkIrOP4c81VXR0L++Y4yOe0m/KxNrMuokaT+hoWR+Xz1WP6DdkorN3
avzlSjp6eab2mPAKegr22if6/bRyOtrt9/Og/DL6dZlQqxzRdjJbgj5/89Dh
rFL6NbxecT8sJrAl6G/rXe6lq+hXZeLw1KuTx7Al6NFWGk9FCf0K9tVm9doR
bAl6x7uHf+8U0y/LxMAMw1hbtgRdeSpC+2YRPRm/34iq5IFsCdpo0bCRVwvp
l2QiZ/jBAmu2BL2+57dFFwvoF7GHn9M/mbEl6HulyeFn8+kXZGLp9badjNgS
dOvdK0+czKOfl4lkrwf9ddkStMtkfcXRXHqSTPwyk87oxZagj7d68vJgDv0c
/n5f23p3Y0vQtYp9zeOy6WdlYs/xL3s7sSVo27Cphjuz6GfwfjP/Yko7tgQd
bac+bmsm/TSu/91XlLZiS9AF9YrlGx/SE2XCt1jnezO2BN3rSsim8Az6KZzX
dlR2a3xAR3usHnw2mC09KRPtHfcOaUino68bf3rox5aewPlabcrceiUdLXmZ
9G49W3pcJk6LloH/Kuhop6PL1Neypcdk4nOQLP69nI4+MLeP+Uq2NEEmhg8O
uvNaRke/7FI+aRlbehTX188DHz8XdLR1wa7VbmzpEZlQXfz4+3EaHR20ddJ2
V7b0MM5DK8/2Lr9PR2eMU7vkwpYekok1BktGFN+jozs3TcubypbGY19VPd3y
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
1rO09BzZ0l9CqAb4Xc3QoqODOpaMdmBLG4TQretbLO9BR2fkbF86ki39KcSa
pJov97rT0Z03j48aypb+EOK2+6kut7vR0QvHNEkcxJZ+F6K57kKb613p6KS/
qen92NJvQkx93G1WsiYd/e2292sLtrReiMP7C32TutDRo32sWpqwpV+FeDt9
6/7EznT0jr5vjfXZ0i9CDGzvcOtYJzq68v3xCX3Y0s9CSDP/lh/qSEcbnZm3
sgdb+kmI7KhbP/d1oKPXLdGM6cKW/itEt5HrtXZr0NH3eucnabCldUIs/WU+
dHt7Orp1xeZsdbb0oxDJN6rnbW5HR7vsHf1BjS2tFeLXuoTgyLZ09HHn322b
sKUfhBhvOfdIaBs6ulb9huVvdfp7Ifa87XQ/gC1B2z7wmvK9Nb1GiKcnc556
syXoqHBTr8+t6O+EMHPb2OjFlqALhr2MrW1JfyuEr9ZInVVsCbrXj8OX37ag
vxFCrvo5cjlbgva4NqvwpRr9tRDtd11bvJgtQV9f2+Hz0+b0aiFcndZEzGdL
0BKzrE6VzeivsK+WxidnsyXoSdWRA1RN6S+xL/kzxXS2BL3/2PCZBU3oL7Cv
0PhXk9kS9Mt5372zJfTn2JftTLWJbAnautuVuAeNl//zZ9jX13ZGY9kSdFCR
5w3ZX3oV9nU5Y5w9W4LO2G5QdvcP/Sn2tSp8hR1bgu488en3m7/pT7Avo6Gb
bdgS9MLmB7pf+0V/jH29+Hq2L1uCTkqbZnupgf4I+zpyKdOcLUF/C2zjeu4n
vRL7muNRY8SWoEcPSg889YNegX111mujx5agd3wKPZTwnV6OfeU/Mu/NlqAr
Lwy5G/+NXoZ9xcQ5dWdL0EYenx/H1dNLsS8H5zWd2RL0Ov0Lf3Z+pauwryat
d7RnS9D3nrr32faFXoJ93ZVfas2WoFvHa9tv+kwvxr78gvObsyVoF5cKt4hP
9CLsq/+gfxv/paOPd9gjDWFLC7Gvj3UdftXR0bXZTsf92dIC7OvcuX7fPtLR
Qza1kG9gS/Oxr2VLp3+qpaOjRosXa9nSPOxLp/eGDx/o6II/Ac082dJc7OtR
6Z437+noXrcHGLizpTnY176d11/U0NEe3rVjF7Gl2djXdEfVk3d09HXrM+7z
2NIs7Ktd82/lb+loyftFG2expZnY18N7XUve0NGTTmudmcaWPsS+Iv0G57+m
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
i9fjvlR2G7zZxx0u6fT8yRpabIv7ejtpfcVe7rBSdtC3FbR4He7rdL3Psz3c
YYfd8+WW0eK1uK8VcbHFXtzhlCmdp5rRYhvcl+zaew89ucMdTZnm82mxNe7r
sfyHPA/usGmCm5sRLbbCfR0s7XZnN3c4fKNmmB4tXoP7MgocneXOHa5W/pw6
jRZb4r7+zTW+vYs7rPnqfNlUWrwa95XesSnZjTvsFW7VpkmLV+G+3NIPJe7k
DhcsGzRkAi1eifua6Bp/2ZU73L9PybTRtHgF7qte7WHsDu6wzYPDliNosQXu
61JtXaQLdzjBz8hLiRab477WR/c67cwdbtVvPzOYFi/HfQ21VAvdzh02/JOa
1Z8WL8N9lcuZBW/jDgelOr/uTYuX4r5CCp0CnLjDlS7j//WgxUsEwXvxwSD/
rdxhVfWaYV1p8WLcV0+DpP2O3GGXT+f0O7ZwX4T7yv9dvIcWwdmxK9f93szd
DPe1P6XZnRbB0mtl9/9w4L4Q9zVzm6wrLYItFB7FNG/ibor7+jlm8jZaBMc8
98utt+dugvu6WbVsMy2CG4P1qms3cl+A+9p2xtWOFsG6C9u6vLfjPh/3Nc4i
ZC0tgv2kklVeb+BujPv60OeWJS2CS3Id55av5z4P9xV9/7kFLYKV9qnaP7Xl
Phf3tcandQktgh2mvfUvWsd9Du7rf78AQ4vglJZTlx6s5W6E+yr9oWNMi+CO
pGX379lwN8R9HU1aZUiLYFNHmc8Sa+4GuK/5mz1m0SI4fHS+dKYV99m4r66j
TuvSIri6ynt86hru+rgvyauMKbQI1jw3zfSGJXc93Jdn2EsNWgR7rfrueHU1
91m4L+0lf8fRIrhALjHw0iruMwVh61fpoaq0CO5fbJ94fiX3Gbivq3dnKdMi
2OaIctG5Fdyn474c9too0iI4YW5l0ykL7tNwX6N0vAfRIrhVFNI3xJy7Lu7r
TXOULC2CDbPMJh5bzl0H9xWRIMjQIjjIXWrpkWXctXFfFnZVUrQIrpx8x+XA
Uu5auK9+wzp3oUWwapPnCfES7lNxX4/KRv5bzB12iZ9604sWT8F9HTxu9GsR
dzjbrunpLlo8GfdlaGrXYsYdlla+3OJCiyfhvtq7HviykDts8dJ2oBMtnoj7
SsuJqzPlDseEKWo70GJN3NfO3fkfTLjDDUufr9hAizVwX5qTP75bwB3W7X3M
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
617iW9mj9Fr0Em8S9Q6kbdBrxogRPQJoa/RqrTTocoS2Qq/kkPX/DtFr0Mtp
ke+vg7Qleo3tcaHFn16NXjV37n05QK9CryivD3V+9Er0stTqXutLr0CvgV9G
V/nQFuj15LLxq/20OXoFrncoE9PL0ctY6XCpN70Mvbq8iC/cRy9Fr5xjD+/v
pZfkCMkeC+rv7qEXo9fULjISL3oRejVnqWV40mbodWWX2S0PeiF62U/cdn03
bYpeI+uCrrjTJuj1Ojbp4i56AXqdsi6JcaPno5f54K9nd9LG6NX3iewpV3oe
ej08MvnkDnoueh2YszzIhZ6DXgb/XA8700bo9fd2iN922hC9brvc8t5GG6CX
64QXnk70bPTS+NDqtpXWR6/PkYNdHGk99Ipbpbt1Cz0Lvdb1X71pMz0TvRQf
e6x3oGeg14sDp6030dPR64R+5ip7ehp6mf16uXwjrYtePW7+XWRH66DXva1D
TTbQ2ujlPVpv7npaC72mv7OZbUtPRa8fEd4z1tFT0OvG8mjttfRk9Nra+84k
G3oSeo0pqFKzpieiV7W481grWhO9IqePGrWG1kCv1S1GwyxpdfQaeM1uyGpa
Db1KNh0YsIqegF4BIy72XUmPR695L/N7rqDHoVfn0I/dLOix6JW9qEcnc3oM
eu3uMe7vMno0ek3NXfBzKa2KXl+8tnxbQqugV4JWQONiehR62X+58mkRPRK9
RsQ/rjajR+QIUa/WN75ZSCujV7hSn0pTejh6LX+h8dyEHoZefYIXlyygh6LX
gwXOj+bTSuh1oMvxfGNaEb1mZ9+4M49WQK8/u0qz5tJD0Ct14vfbc2h59NpR
J3fTiB6MXuoXpl4zpAeh1ydri3gDeiB6XRi868JsegB6rX0SFqVPy6GXQsDt
03p0f/R6Mac8dBYti17H/7UFz6T7odfCtCGBM+i+6CW1Y/rB6XQf9Lo7YY3P
NLp3jhC474PXXl1aBr2mRZ3drUP3Qq8fq7Jdteme6HW9/5ttWrQ0ejk+/rd5
Kt0Dvcb4D984hZZCr/f6s9dNpruj17lf69ZMoruh16qb+1dMpLui1wCn80s1
6S7oVTz67kINujN6HXlXbaxOd0Kveae7GqnRIvTqZK6qN4HuyBaSs3rPmzae
/pct/HMvsJ86jm7PFkym7D+oOZb+my2ENU2/PH4M/SdbeB/fcl91NP07W9DY
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
x5mblOjfmULVXxXr9Yr0r0xBPe3NXmsFui1T8HA9FblqCP0zU8jTWCZZLk+3
Zgqydb3eLRpM/8gUrOPyRCaD6JZM4fI67xFzB9LfM4UWxWmGswfQ3zKF2WXf
1s+Qo79mCoEnrvpq96ebM4VyM/sLk2TpL5mCirRynlo/uilT2H6v4sOYvnRj
ppDpfbL7qD50Q6YgNcNszLDedH2msLy1+/whMnRdphB1Q3AY0Iv+nCnUb/U8
3Lcn/SlT0Bk7NaGnNP0xU/CpbnzYrQddmykURV6qF0nRHzIFBUtbmb/d6Br0
Gqio/rMrXY1eJc/MvnWh36NXQNC2xs50FXr9759Pd6Lfodf/fp1aRL9Fr//9
eLXjyv/7DXr9749b/+jX6DVVs//zdvoVen35NLnkL/0Sva6cX/7oD12JXvZW
O/N/0xXoNWJQ6J1fdDl6vSq+ldVGl6HXqcMvbv+kX6DXcqOfya30c/Tq0z74
2g/6GXo9TNWNb6Gfotf//nvM73Qpev3v4zK/0U/Q62/16dNf6RL0un0uM7SZ
LkavHStfBX+hi9BLXbY9oIkuRK/PD4cebKQfo9cFPz2fBvoReq3VW7u3nn6I
Xopt3rvr6Afo9eJGtOtn+j56HXe8s+0TXYBeC1Xfb/5I56NXj7edN9bSeeh1
99SodR/oe+i1b9mcNTX0XfSaLrNxRTWdi14/8g4sfU/fQa/r3hcXVtECem2d
VmD8jpZkClZjvn80fEvnoNf7qz303tDZ6HXOfty013QWeq1WNpn6is5ErwGV
WzRf0hnoVXwyYHwlnY5eAWZXVSvoNPSaJ1WoXE7fRq9OdxoVy+hU9Mr27DP4
BX0LvXb/7xuQTkGvKU2Lez+jb6JX0yXnHk/pZPRKsD3epZS+gV4bFZP/ldDX
0Uv5eemvYjoJvV4FfW8poq+hV/j8Ac2FdCJ6LeusVf+YvopevbMsah/RV9Dr
gduuqod0Anr5aYa/ekDHo5f+59tl9+nL6PXnfHlpAX0JvVKtfhXm0xfRy2WQ
woM8Og691Eum37tHX0CvT4fXSO7SsegVa7QnI5c+j1427Wdv3aFj0EvhdvZ1
gY5Gr+fOb65I6Cj0Ch7fcTGHjkSvhTXDz2fT59BLKnL2uSz6LHrlrrQ9lUmf
Qa99sj4nM+jT6DXt0fmgdDoCvVr87h5Oo0+hV5Jejd9tOhy9HNu6ilPpMPQa
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
9liiHP0nXVhQUZV0uT/9O10IDTlTEitL/0oXqhZbfI3sR7elC+q9+vY/3Zf+
mS7szr8/ObQP3Zou3Nvvszy4N/0jXeg3a+bOABm6JV2wavsR4t+L/p4uXL6Z
dGt/T/pbutCybfOLPdL013Rh9vhRP9170M3pQsCHV4Ndpegv6UJZdJjutu50
U7owymrJ6s3d6MZ0Yfvgnp52XemGdCGz9O7ptV3o+nRBKmhvpmVnui5dWL5A
55VFJ/pzuhDZ9evfJSL6U7pQJ0kYurAj/v/9MV3Q9rLTM/5H16YLPtrD1hq2
0x/ShaKvZd6z/tI16JV4PFr3D12dLmx0ML0z5Tf9Hr1GdXuv8YuuQq83OZ3H
t9Hv0Ov07lGqP+m36GUxeY5yK/0Gvfo12Cn+oF+j1+O4A4Na6FfodXDtRdnv
9Ev0MhxSIPONrkSvf6Ufpb7SFeiVHtijSzNdjl47543710SXoZemyORXI/0C
verTt7Q00M/R66JrwJd6+hl62apfraujn6LX0I+PP3ymS9GrPLrx3Sf6CXqd
tOzz6iNdgl6LB2iW1dLF6cKynkWLSz/QReiVd9C5sIYuRC+xwf+xdJ9hIb59
GMeFikShqJCkqCSjQUolUsgohDJCCWkYaZCG0FCoKJSUVGS0J7pVRkUhJCTJ
KGQUQuE5n+N/vvy8/t7jdx3HfV/XkdvN9B30MuzKLHtFV6FXZ86Da010JXpl
uXYUvqQr0MtVTSa3kb6NXuqvdDJe0LfQ6/XJpekN9E30Sli6M+U5fQO97KRi
Ep/R5eg1pCI/7ildhl73A5/E1NOl6BVu+CvyCX0dvSx+yEfU0QJ69cqYFvKY
LkGvkk12QY/oa+jlM3q330P6KnrpNsT51NJX0OvLsaseD+hi9Lqw6IX7fboI
vZwk/jnfowvRS7l8pFMNXYBeL3xN1lXT+eh1fMraVXfpPPRa8jVg+R06F72k
//+BCZ2DXlUOZQsq6Wz02q/4ek4FnYVeM570NrtNZ6LXnyOqJrfoDPQqmDfb
4CZ9Gb22izrp3aAvodeEkgOTyumL6PXeK02zjL6AXmcnV4wtpdPRy/5jq/J1
+jx6DU+RUBToc+hVt2acfAmdhl6R8pYy1+hU9FpQu0XqKp2CXn3DwyWu0GfR
q3z2JdFiOhm9/HvU9Ciiz6CXQdHnrgI6Cb1+bJfuzKcT0Stz/KT2PPp0oWDs
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
vVff0LpAJ6CXMPStejp9Cr123RdTPU/Ho5de2Filc3QcerXPshiWRp9Er4t/
Nw5JpU+g18aCkIEp9HH0Utl2XvIsHYtejeOqxJPpGPQ68eZDzzP0MfRamiD5
N5E+mi/oDlwx/tdpOhq97gxa8C2BjkKvA3dcP5+iI9Fr5v5D7+PpI+j11zjj
TRx9GL0Kf917eZI+hF47sr8+O0FHoNdEl0F1x+lw9PowRvtBLH0QvVJeLr4b
Q4eh17oTO24fo0PRa8SSo2VH6RD0etI/71o0HYxe0bceF0bRB9BrYUBnTiS9
H70kDOQyjtD70OvGt6nph+kg9Aq4tCLlEL0XvQw3+iRG0IHo1TnqZFw4HZAv
KGc/K445SPujl+vR55FhtB96qS/8Ex5K70GvN30UQ0JoX/Q6XWoUFEzvRi+7
3Wv8DtC70GuInr/PftoHvR58Pu2xj/ZGr/Bz192DaC/0slj/ynkv7YlevUf0
cgqkd6JXyePR6wJoD/TyOTxrlT+9A7105zou96O3o9fXXvsX76G3odeFqykL
fOmt6OXkeWvObtodvUZPapm1i3ZDrxfv+5j40K7odTxZ3cCbdkGvpavn6nnR
W9BLWs55kiftjF5V98M0d9Kb0Wt/2IWxHvQm9DI1u6u8g96IXn/+to3YTjuh
V0HBAPlt9Ab02rFtgsxW2hG9JmguknKnHdDr/Rt3CTd6PXqlJBwRdaXXodfa
FVk9XOi16DV8cG2XM22PXnV3On5sptegV9R+mfZN9Gr0WmCi27aRXoVefX8v
bXGiV6LXjeydzRtoO/Tyd4l54UjbopfB2IJ6B3oFev14+eTheno5emWd+FWz
jl6GXi5LFKrW0jbopTbA4KY9vRS9Xt+yu76GXoJeCQG7r6ymF6OXrUF8/ira
Ol+QGvL9atZK2gq97l96cdGOXoReBzf+S7OlF6KXubJS8gp6AXr1em6SsJye
j17Xjq49sYy2RC/vhYFHbeh56KXb98zhpfRc9PpSWha2hJ6DXum7X+9fTFug
l5OeaKA1bY5eyl9Ufa3o2ejVcG621yLaDL1i1zttX0jPQq8lI4JdF9Az0Uuq
Lm3TfNoUvSoPVzhY0jPQa//c92vm0SboNaN3P7u5tDF6dV8dZzOHNsoXuvM9
La0s6OnotX2Si6U5bYheWh/CzWfTBujVmnzJ1Iyehl5nV9dMn0Xro5e93Jep
M+mp6DXsgbSOKT0FverCJk2YQeuhV6SZtYYJrYte8/9tUzWmddCrT2GUkhGt
jV7l23KGTacno5ef5qMhhvQk9Jr29vtAA3oiev1IGNJ/Gj0BvTJXTOmjT2uh
15bBy3tNpcejl9pdr796tCZ6Ne8//kuXHodep0yKvunQGui14vfTz9q0OnrJ
5nS9n0yrodc9l+FvJ9Fj0Sts7PSmifQY9DJvWvV8Aq2KXj1P7qnTolXQ6+qS
hAfj6dHo5TVAuKtJK6OXzu2Xt8fRo9Drc4BIuQathF7nDZRL1OmR6LXhu2mR
Gq2IXqMur88dS49Ar+cbgzLG0MPRK1b5bLoqPQy9Fj+/kaJCK6DXgGNvE0fT
8uhVsVA8XpmWQ699fdViR9FD0cukzCJKiR6CXl27N0WMpGXRK18vNESRlkGv
bV/OB42gB6PX+PNVfsPpQejVuv6jzzB6IHolj+i/U4GWRq81deO3ytNS+UKr
wpEFW+ToAej1eK6b01C6P3od6X143RBaEr0sr2WskqX7oVcfr/vLZWgJ9Cqb
1L54MN0XvfZ8GLRwEN0HvfTPas8dSIuj1/fVS8ykaTH0ypDzMJGiRdHL+cFR
gwF0b/QaezBPrz/dC71emdVNkqR7olf8v07NfrQIeq0olFOToHugl8x2/dF9
6X95QmqNpq1iH/pvntAR+tZHXpz+kycYzz59UkaM7s4TwkRsr0iJ0l15Qt2V
wQ0SvenfeYKy190/or3oX3mCq/YBRZGe9M88oeiTiXF3D7ozTxA7/3tN57+U
//wjT7B2zPFv/0t/zxNOKbkmtv2hv+UJrc/GlrZ00x15gm5M06vmLro9Twiw
Ptmr8Tf9NU+423+pytNf9Jc8Qb5igNmjn/TnPMEx6LbjvU76U56QaRy4v+oH
3ZYndP82SL35nf6YJ1jkfb91/Rv9IU+I3nq55UoH/T5PeKm5qW9BO92aJ2i2
KGtkf6Vb8gSvM8/nXvpCv8sTylcfcz73mX6bJ0gpLDqY/Il+kyfYPep7MaGN
fo1eh8vunvhIN6PXPN9PRz/Qr9BLfIrUkfd0E3qVfplwsJV+mSc89j2/6EAL
3Yhe+g5bA9/RL9Dr24hI37d0A3pdrsvyekM/Ry/nI7XbX9PP0GvMvG+uzfRT
9GrqLbv5FV2PXnHXdB2b6CfotdzLxv4lXYdegyd72jXSj9Gr+kOMzQv6EXqF
ni2waqAfopfZmnrL53QtevWQ/23+jH6AXsUPFGY+pe+jl+dBA6N6+h56TZ69
Uv8JXYNebf9269TR1eh1rjB+wmP6Lno5bL+m8Yi+kyeUjRzfqPqQrkKvZ2//
KdXSleh17LTS8Ad0BXpZ2c4Yep++jV6SMusG3aNvodftu4H9a+ib6LX3wJk+
1fQN9DKaUd7rLl2OXr9/v/5bRZehV26O6O9KuhS93F3HfK+gr6OXppr5l9u0
gF7vmpw+3KJL0CvpZPDbm/Q19Fq19FzTDfoqeslLVT4vp6+g18Pb7+vK6GL0
OhTYr7aULkKveYaa1dfpQvQS+2FZIdAF6HX9skt5CZ2PXnjcl1yj89Br6ujL
RVfpXPTq+P+GkXQOel069iWjmM5Gr82LBl4oorPQS1VicmohnYleL8uskwro
DPSK890en09fRq9lU6Jj8+hL6DXoa05ULn0Rve6efxSRQ19ArxCHHyHZdDp6
zVIcui+LPo9e/+qm+GfS59Cr+MjyXRl0GnrtnOe98zKdil6TRE9svUSnoFfb
taItF+mz6JXm9czpAp2MXusnd69Lp8+gl+LH4avP00no9fTs9BXn6ET0Orpm
9ZI0+jR6LZL3W5hKJ6CXZG3C3BT6FHrdOiiYnaXj84SMwNlNJsl0HHpN79HT
8Ax9Er1+FSpPSaJPoFfO9pmTE+nj6OU23mH8aToWvca9C1JLoGPQ6+3ps6NP
0cfQK9H2pmI8fRS9Vsm8k4+jo9FLrlpc9iQdhV61B9SkT9CR6BUxY06/4/QR
9JrbtUkslj6MXqK5oSIx9CH0ElzTu4/SEei1W+1OZzQdjl5TXn1sj6IPolf7
yf6fIukw9Lq0VKv1CB2KXpukFr4+TIfkCfEqFW6Nh+hg9GoMPPw0gj6AXicN
Mx+F0/vRy+bH/XsH6X3oNTCjvSqMDkKvu5sG3wql96JX8Gid0hA6EL1mNiy5
GkwHoNffYx4FB2h/9CpadCx7P+2HXh4S+Zf20XvQa2J53bkg2he9Pvr+TN5L
70av1CnypwPpXei17qv+yQDaB70U022P+dPe6FXvsOuIH+2FXtGKcQf30J7o
tfDJlQO+9E706hfZELib9kCvm/P++u6id6BXgOhIbx96O3pNLzHe4U1vQ6+f
XvZuXvRW9MqeHLDZk3ZHL7ePiY47aTf00kgptfegXdHrzZpmux20C3qdlu+9
bDu9Bb1W1qpYb6Od0WtouNn8rfRm9Howe4OFO70JvSJ6HJjpRm9ErzlFqUau
tBN69d5xW9+F3oBeJeNbdbbQjui1613fic60A3rpJWqM20yvR6+vtvPGbKLX
oddFmS2jNtJr0Wtj9cHhTrQ9eo0Ovjh0A70GvRpnVA9ypFej14muT/0d6FXo
tTRXqu96eiV6SbtN7L2OtkOvO2pW/+xp2zwh9MCrrb/X0CvQyzQu8vtqejl6
/V2a/WUVvQy9CqUeflhJ26DXjopvb+3opeg1ca/sK1t6CXp9MNRrWEEvRq+U
HzZPltPW6LU2w7N2GW2FXiM2x1bb0IvQ68nowoql9EL0imqoL19CL0CvhTG/
SxbT89FLwmpYsTVtiV43JAzzrOh56OVfvjJzET0XvQz3+F5YSM9Br84pp1IX
0BbolfX1WtJ82hy9XNMb4y3p2eil7tjj+DzaDL1eK46KnkvPQq/TT2YcmkPP
RC+7yHWhFrQpeg2x3LvPnJ6BXvdFk/1n0yboFV5SvsuMNkYvC+83O2fRRujV
S1ts20x6OnqVfBzjYkobopdPivnGGbQBeunab1xvQk9Dr6/yIauNaX30ulB7
boURPRW9nMIrl0ynp6CXsvmHhYa0Hnq96CE5z4DWRa/jRZqzp9E66LVkx/wZ
+rQ2eklruRpOpSejV9W7iClT6EnotT/x8mQ9eiJ6zbC7N16XnoBef2S+qunQ
WuhVUD1QRZsej17bgyePnExrotcE08UKk+hxeYLn+67tshNpDfQ6mxstPYFW
R6+1brn9tGg19Bqu/lhsPD0Wvepe/RDRpMegV2Tc0D8atCp6LbCZ+lOdVkGv
vtIrOtTo0ehVXuH9aSytjF7+e0+0jqFHoZfB9OLXqrQSev348axRhR6JXlkZ
3U9H04ro5bJ5xGNlegR6qakY3R9FD0ev5obVd5ToYeiVEON3ayStgF62VqdL
FWl59JLtd/3qCFoOve6XNxUMp4fmCQ4H9/TMGUYPQS9zDIAKtCx69WyfeV6e
lkGva+kOZ+Xowejl7bjv9FB6EHrpjEw5OYQeiF5fntw8JktLo1d65LsjMrQU
em2w7BM+mB6AXspi6sGD6P7o1VAyZ+9AWhK9Yr0375Gm+6HXYu0wbylaAr2k
2tJ3DKD7oldlyh23/nQf9Npn37ZZkhZHrxkKAzb0o8XQq7tWa60ELYpe+eEL
V/ale6PXdnP3ZX3oXuilJXLEWpzuiV6tRZnzxWgR9Ere8cBClO6BXvZaHTN7
0/9yhYBhLYONe9F/c4W7jxN1pvWk/+QK8pF2S3VF6O5cwWG+7M6JPeiuXCGj
T82xcf/O/uffuUJ3WXD+mL/0r1zBws/0yag/9M9cIXpa98/h3XRnrvDye668
XBf9I1fQzHSbNvg3/T1X8NyibjfgF/0tVygb27yr70+6I1eQao6L691Jt+cK
dqdsrv77Tn/NFVJXSL/4/Y3+kit0yFT+/d5Bf84VjO/tHfm1nf6UK4SGTTf5
+JVuyxUez+60f/eF/pgrKPfMDHj1mf6QK7he3ZzU8Il+nysUeamUPWmjW3MF
MZ0XzbUf6ZZcwepzTO+aD/S7XCH+vJVq5Xv6ba7Q6thv9o1W+k2uoDvqxgah
hX6NXs/3HCh+RzejV8zUtLy39Cv0Wtx+O/MN3YReAy60XnhNv0SvCkeJtGa6
Eb2CRo4784p+gV4m9fNONdEN6NUVueX4S/o5euVZhkc30s/Qa5vYpUMv6Kfo
NV6oDm2g69Grxfvzvuf0E/RK1pYOeEbXodeatom7n9KP0Ush1cqznn6EXo/s
t217Qj/MFYyOKES51NG16GX5MHvjY/oBeolHPFz/iL6PXmXm31c/pO+h1x6R
Iba1dA166RfrLX1AV6PX9x3LFt2n76JXhpbXvHv0HfRybomdXUNXodeYpMIZ
1XQler2ye2p4l65Ar3jZril36NvotbxmmHYVfQu9ZEIMtSrpm+hVY7pKvYK+
gV6h3b4qt+ly9DLLOzXyFl2GXiLuJQo36VL0uqL+UvYGfR29PJt7DCynBfTS
jh8lWUaXoNcnG1PxUvoaep2TXt/zOn0VvRwr9/4poa+gl1JQ8s9rdDF6PZt+
o+MqXYRexzrffLpCF6KXdabY+2K6AL36O499U0Tno9dtFYuXhXQeegW92Pis
gM5FL+P/HxBB56DXb6vz9/PobPTK61d1J5fOQq+tNz7cyqEz0UvTT7Ism85A
r3dTx1/Loi+j15n2+YWZ9CX0Wn3BNSeDvohe8hsOXb5MX0CvRyMzzl+i09Hr
cP29sxfp8+g1L+rr6Qv0OfQSmz8oLp1OQ69SMe2Y83QqevkKiyPP0SnoNdVn
R3gafTZXGPdN+2hwKp2MXpfbcvem0GfQa3Pq4z1n6ST0GrO20zuZTkSvJgU5
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
x+j198me+kr6EXoVRiY8rKAfotcOS6HmNl2LXhPFmipv0Q/Q60OJyM2b9P0s
4XKKt/L1G/Q99FqrPfNKOV2DXiPa1ueX0dXo9SQlKKuUvoteUfZnL16n76DX
QoWbaQJdhV4SD9+eKaEr0etGuHjCNboCvQLM1U5cpW+jl6HInKNX6Fvo1Vm0
6XAxfRO9snaEhhXRN9DLVSt9fyFdjl7qLVUBBXQZer1O/Lg7ny5Fr9N2/b3y
6OvoZSertT2XFtBrSM0C1xy6BL0eBLttyqavoVe46WGHLPoqell0Z6zJpK+g
V6+8+7YZdDF6lbi1L71MF6GXj/pgq0t0IXrpNmtbXqQL0Otr3BLzC3Q+el2w
8TBNp/PQy0n62PTzdC56KVfmTT1H56DXi7112ml0Nnodn/5TK5XOQq8lnXIa
KXQmekln6quepTPQq2qzrVIyfRm99qvsGnaGvoRepi9ODkmiL6LXn5grAxPp
C+hVgIHtNJ2OXtv7/RVPoM+j14Qbir1O0efQ6/0e479xdBp6nZ1q/+sknYpe
a9v9v52gU9Br+IXEz8fps+hV51j6PpZORq+okc1vYugz6LWgvlfTMTopS4jr
G6Xy/CidiF7llmZ10fRp9PIX2/Agik5ALwNh/91I+hR6/fBOvX2EjkevLO3b
ZYfpOPRyaWu5dog+iV5qqX2LIugT6NVsr5EbTh9HrwSFeRkH6Vj0sn3onB5G
x6CXbMTBlFD6GHrdN7+YGEIfRa+DItVxwXQ0epkXf4o5QEehVy8Pqaj9dCR6
XdOaGLGPPoJe3i2LQoLow+ilk7Q1aC99CL2+2EX6BdIRWUJIumy2TwAdjl4b
amo9/OmD6KUc8s3djw5DrwZT2S176FD0iu3WdfKlQ9BrSZ7Nut10MHpJuXuu
2kUfQK9K9djlPvR+9NrXXLDYm96HXjPi6xd40UHo1W3ze44nvRe98qWHme2k
A9Fre6WBiQcdgF5aQSsNdtD+6NU63VdvO+2HXsmd8ZO20XvQyz7zmuZW2he9
hjk3jnWnd6PXY5Ueo93oXegV+UJJ0ZX2Qa/5sTPkXWhv9OpjvU5mC+2FXuX9
9ko5057o5XfjjMRmeid6TfMrF91Ee6DX96lvemykd6BXZrto9wZ6O3ptuTCm
05Hehl5jN5i3O9Bb0at55Ma29bQ7ep2qD25ZR7uh14qoc81raVf0kp1f+cKe
dkGve2If6tfQW9ArTOj3aDXtjF6zfTTvraI3o1dPnflVK+lN6HW1zeWmHb0R
vbxSI67b0k7opbP28pUV9Ab0+qxwL3857Yhe5x9+yVpGO6CXY8TASzb0evQa
ZTH53FJ6HXo9F1mcvIRei14xxdsTFtP26LXYI/qENb0mS9g5YELuUSt6NXpV
tDw6vIhehV77kn6ELaRXopfJyqEHFtB26NUlOzVwPm2LXnk1y30t6RXotS3E
22sevRy9xs88sX0uvQy9WrqLXOfQNuiVnPdskwW9FL3WuHc7mNNL0EtBY4T9
bHoxej1unm5nRluj15H41TazaCv0slzmZzWTXoRe4gNPW5rSC9GrrFIwn0Ev
QK89QU2mJvR89NI36mlkTFui1/dOZX0jel6WsD4jc6bOdHouejk7O0wwpOeg
1xjVfRoGtAV6vXpxVnUabY5e8bE3lfTp2ei13PrdsKm0GXrJSPYZOoWehV41
N9QG6dEz0SvUb05/XdoUvWbrb+6jQ89AL5GO0F7atAl6XbmQ/ncSbYxenhvu
/JpIG6GXtlLbtwn0dPT6VN//ixZtiF7norQ+jKcN0Mtx/sK3mvQ09FISd28a
R+uj1zPh8HMNeip6xfhk1qnTU9DLWufBAzVaD736f2q/O5bWRa/bqYMrxtA6
6BW0VqdcldZGL+NhS0tU6Mno9fuhR9FoehJ65UUcy1WmJ6LXVov8jFH0BPTS
7PkkXYnWQq93xT9TRtLj0euMh3ySIq2JXqsnTIsfQY9DL/lW29jhtAZ6PUra
FTWMVkevwyvjIhRoNfSaN+RqiDw9Fr3E7zUEydFj0Ks05K/fUFoVvXxnjtw1
hFZBr6l/jHfK0qPR61ue/VYZWhm9LrsHbBlMj0KvzRpJToNoJfQa87p03UB6
JHo1xTevkqYV0StuWe8VUvQI9Fo+UHXJAHp4lrBocJXZwv70MPSqDtowV5JW
QK8QowNm/Wh59DL7mWoiQcuhV4+s2wZ96aHoVezcqteHHoJenqoSk8VpWfSa
3KgxXoyWQa+22HlqovRg9Eqz3jK6Nz0IvRwkwxV70QPRa+TNi/I9aWn0eupX
LSNCS6HXMf3PUj3oAehl1SHV71/if+6PXpIXJ4r9pSXR6/YGK5E/dD/02qu0
rbuLlkAvo6eRnb/pvuj1Kyq7/RfdB71y5z9s+0mLo5e7+PeWTloMvcZdl339
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
vZovqJt0wZrUa/N4H71OWIN6Pfa8r94Bq1Mvze4xpXZYjXoV7NBe2AarUq/F
L07NaYVVqFeiXvn0FliZeokV8fA3w0rU68Jifa4mWJF6TYg/O/gKVqBePsJP
el7C8tSr/wz/xxewHPXa92fDm+ewLPVqczn//BksQ70s22ofPYWlqdczc6GS
J7AU9Vr7eHP+Y1iSehWrX0p7BEtQr2U5DXHlsDj1Sv3/CxKwGPWSvLw15AEs
Sr0i+a6eug+LUK/JPs1H78HC1Mv/+2zXu7AQ9Rqy3+FwBxZMYwYHG+Osb8MC
1OuTYZvpLZifetncn7c+D+ajXi+Vdq/JhXmpl2FS0vJsmId6sZmdizJhbuql
GrJQKh3mol7ZY06iqfBYKuOVcc8QSIZHUllczKev3Dfh4VS2Ytq2JX8S4KFU
9uxsjev3OHgwle0Z0+J8ioUHUtmox60fb2Pg/lQW+VV2eX003JfKFOxjPKqi
4N5UVtE0pbA0Eu5JZds3nfpdEAF3p7KfjwbUMsPhrlQWouHkfSMM7kxl0rfe
3rsSCneksuJFm0bPB8PtqcwsoUwzIAhuS2Xdoqp+3oFwayo7dT79oVsA3JLK
Zv1/AWp/uDmV5XmH6+3wg5tSmcGP8YHmvnBjKmvbe/SxoQ/ckMq8Wrv5tL3h
+lQmtMXWSNULrktlqU9fhCh4wrWpTEt33TNpD7gmlb0uKhKc5Q5XpzLXpQqm
U93gKuqVEn9xgitcSb0kpr/8ux+uoF6XAkX698Fl1GvS8JauvTCjXn4HrrTu
gUup12BbU8NuuIR6HbAQf7oLLqZeHY+3P9wJF1Ev69XX7+yAC6nXi5zW7O1w
AfVaLy2VtA3Op16ll3fFbIU51GsFXRBtgXOoV6ZPR6A5nEW9pPsWnNgMZ1Cv
6N17D2+C06jX1Ndp+zbCKdQr0Kh75wY4iXqN3F9saQgnUq/Dyw4Yr4cTqNeX
pBzddXAc9bIT61NbC8emsqmvQ5Yt1YFjqNfGf+4LtOBo6lXhXjB7DRxFvdQ7
f01bDUdSr7xtK/lWwRHUS+6Z15gqHE694rSLB1TgMOo1o+BvtzIcSr1CFq75
oAQHUy/ua76vFeGgVDbiJcieKcCB1Ov7qXEV8nAA9XL8pVssB/tTrxanAI4s
7Ee9zFsepcjAvtTryaaJ16VhH+qlXW5wSQr2pl53VIPPScJe1GtJxtOTErAn
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
sCj18lKv/JgDi1Cv79kTm7Ng4WSWsmceHRFgIerVEhlcmQYLUi8zvpqSFFiA
ej05PuVWEsxPvbS/m6QnwnzUq9A+PD4B5qVeSxpfXI6DeajXTcPpobEwN/US
v2/hHwNzUa9wpSivaHgsiUVOTHrtGgWPJLHFvjNn7YmEh5NY+UCw9fYIeCiJ
bd8/dm1zODyYxPo/HHq3PgweSGLBVp8kNUPh/iQm/dzKTiUY7ktid9fV3JAP
gnuT2OYSrY9SgXBPEvuifEtmZgDcncROpcs6TvGHu5KYmFRM6ng/uDOJ/a+q
u49rsn7/Pr6KiopslRUV2TQyMrJlZGRky8jIzJaRkaFORUVFnYiAiDhgwLg/
d3+/ndxkZJarqMjMzoxvkZGRkfE1slVUVFZUVFRW1+f74PX747r+ez6uH9+F
B7Bzn89xvI+I69xv/tiBh9qVjHPLp41sx5+3K59Wjq7/ahuOtitFf655erAI
H29Xztv88Q9HtuLBdmXX1wu0b2/Bx9qV2UsPbn5tMx5oV4723/z8C5vw0XZl
431Pjj61Afe3K6cfTJjZuh4faVeCqVKRZy3ua1du3nvay01r8OF2pffqoj/N
q3Bvu5IT+Pa27SvxoXbl5AVLd2xejnvaFXvt+wfWLMNvinqp7lYtXYK7Rb0K
u+7MfAwfFPX6/rrKeY9iRdRrZbhb9wg+IOp17IIzbnkY7xf1erD6nusfwvtE
vd76w3LVg7hL1Gv2hkOXPoBfFPXqjJ6jvh93tium6zLvP+M+/JyoV+tbTScz
cETUK/62vp/n4mdEvZqfOf+bdLxH1Ov0KQ99OgfvFvUqdTo+1OEOUa9fYo++
MxvvEvVaW3rJwTTcLuoV/TGraxZuFfVatNL3TCqW25UN7x79uH0mDol6pc+7
wp+CA6Je+15dap2BfaJeN94o12ixR9TrifbPdkzHLlGvSfFXFSRjh6iXoz5n
3TRsE/U659/HDUlYEvWqyP960VTcJOo19mXS/Ym4QdRr06Pr7pqC60S9vux9
6lYNtoh6Zeu+v2ESrhb1+uD56VMTsFnU695rjAmX4QpRL8X37AXx2CTqNXPC
L7EX4zJRr6fLU/69EJeKeiX+uvXX83GJqJcv96XvzsPFol7nD459di4uFPWq
eWDWwDm4QNTrn4PbD5+F80W9ts58tftMbBT1+u7Jf/adjjeKeq24QvfsaThP
1GtAKn/iFLxO1OuBmDeC/9rHnSvq9WZRjONvvFrUK+27u+v+wjmiXs8vrTH9
gVeIel17pKfwd2wQ9ZLvPnvDr3ipqNfFL9+38hecLerVmNz46E94sahXjHz4
gR9xlqhXyYXqud/jRe3K4p+qH0z7DmeKeq350zbjG7xQ1Ov4hv6kr7Fe1Ovh
zy668ku8QNTrncxHLvoCzxf1mtPjOeczPE/Uq+u2Y6d8ijNEvW7Ye/nYIJ4r
6rVrypIfjuF0Ua8EV2hoAM9pV+6xnxU9dhTrRL3O2jH5/X48W9TLNLLirSM4
TdTr95Xtr/bhWaJeGz768vnDOFXUa2jeNbt78UxRr8UHcuVDOEXU6/0bd7t6
8AxRr4zHv2t4E2tFvQ7EX1/Zjae3Kyk3N2zcdhAni3o99e/eTQqeJuo1ZctP
qw7gJFEvz1czsvfjqaJe5y0uWLgPJ4p6Vb/7QkYXniLqdVL3++wXsUbUa0tn
6s2deJKo1zfXlFz3HE4Q9TL4X5kcwZe1K5M/+l8AAo4X9bq/YvaEPfhiUa/u
X3fG7MYTRb1mrX39zyfwBaJezw6e+tPjWC3qlaRP/7oNTxD1Cr1R9UkLjhP1
uuiWtz4I47NFvep3xx4K4lhRr1MnzVP8+AxRr23W+he9OEbU68eYd/e48ami
XquLJ7Q5sUrUa/C7B7x2/E+bsuGhZdZmKz7Zppx+6MiRqmb8Z5sS1M2dWNqI
x9qUlJdefji/Hv/WpvRef707txaPtik57fLA0hr8c5ty8rKJlz1chUfaFLu1
5rH7KvEPbcp1sX8F7izHJ9qUN8o2Hr9lJ/62TVn862dXTt+Bh9uUn9c/vDxx
O/6qTan7vKf1sm14qE2Z/GjakLoIf96mvPze3qvP3IqjbcqDc69a83c+Pt6m
fLPf1fGLEQ+2Kaabzv72m434WJsSv3vHddE8PNCmRDQ/5R1dh4+2Kfe4c57p
zcX9bcqn5w78eHA1PtKmFJnvu/HlHNzXpkz460D+3hX4cJuya/OMzscNuLdN
mT38+K/+pfhQm3J06aW32LJxj6jXhw3FlsX4TVGv+ap9ZVm4W9Tr4Ja/Chbh
g6Jet36dtj4TK6JeexeXLV+ID4h6TT382iN6vL9NEdU4ZcECvE/U68IX5qTP
x12iXnVJ5lnz8IuiXqrAf7QZuFPUq+i8M6+Zi58T9fq+IuOKdBwR9cr5rfbC
OfgZUa+P175zlg7vEfV68JM41Wy8W9SrR7/gt9twR5syPLu7+cSteJeo1wu3
vP/5Lbhd1Cv5qQv+ezNuFfVqnZT53k1YFvW61Ob8z404JOrVfPpHr9yAA6Je
Z2yLf+567BP12nHi0Y7rsEfU65dl/tC12CXqte6DQcc12CHqFZ07qf5qbBP1
emTfsvKrsCTqdfj6lqLJuEnUK73l8w1X4gZRr1cmJuZcgetEvW60rFp8ObaI
enX8tUt/Ka4W9Zq0aXjuJdgs6uX8/NrbL8IVol5xi9bfdCE2iXpVvL3n2vNx
majXH2k/XHkeLhX12hS54eJzcYmo11dXbY47BxeLei1xP3fqWbhQ1OuDs0fH
zsAFol7zym7+MQbni3opPxV+eSo2inrdsqrrYxXeKOr1zMAf7/9jG3eeqFfi
/Nt6TuJ1ol7+10oP/IlzRb3Ov+lA5xheLepl2fXv7t9wjqjXv5fe2TKKV4h6
bW2scP+MDaJeJ1TdjSN4aZvy4YqC080/4GxRr/9+PbfkBF4s6qV/zGL8FmeJ
er15+O3Vw3iRqNftc85Z8hXOFPV6/oX5Dw3hhaJe065tuvdzrBf1kgPv3RHF
C0S9LlGfP/M4ni/q1VS5MHkQz2tTDsb8bp9yDGeIem1f92H8AJ4r6vXTJxef
dxSni3rlPph1ej+eI+r1abf3r/exTtTr4dSPf3oPzxb16n0qYfhdnCbqNefK
pcffwbNEvV62hfvfxqmiXtozPjv0Fp7ZpuzdtW3K6//BKaJeV3y/8qU38AxR
L7vh8adfx1pRr7P7v2p7DU8X9Sq/J8n3Kk4W9fp931rpFTxN1Gvj9KeqX8ZJ
ol5DLSdKX8JTRb0eu2j6lhdwoqjXEcumtc/jKaJeGScjy57FGlGv1zb9/PBe
PEnU6+Yvbpr/NE4Q9dqzaOucp/Blol5TDr2Y+iSOF/Xy3j42/Ql8saiX+tlb
r34cTxT1qk7cfnkbvkDU62/3/vNbsFrUa8s5/5wZxhNEvb4tu+OfAI4T9Vr+
s2nUh88W9fpo1cFvPThW1GvBf0/7zIXPEPXqnn/3Rw4cI+p1m1L9rg2fKur1
3E09b0hYJeqV9MRZ+5rwP63KPeHL7os04JOtyqcXNTXsqsN/tipFDaccDljw
WKsy4bSt59mr8W+tyq5tw/paMx5tVWaPPGbbWYF/blU+XP3eB1tNeKRV2fDJ
nIvyyvAPrcrpmS8uWlGKT7QqgUPXerJK8LetSsqdwf8uKMbDrUrvS+rL7y7E
X7UqOdPN2bcV4KFW5a/234M35uPPWxX75es/vcaIo63Kdbbjmkkb8fFW5WDs
whUT8/Bgq7J453/azl6Hj7UqP/+a+qUqFw+0KrV5e6b+vgofbVUmf3Fl7vcr
cX+r8vKj9ie/WI6PtCoP9p3x3X+X4b5WZXhuSXLfEny4VTG9+v2GNx/Dva1K
fMryvfsfxYdalb27+0eeewT3iHpNzpjx5MP4TVEv9ytbwg/h7lalcMINLzgf
xAdFvapaf6t/ACuiXn9dlFpxPz4g6pVfu634Prxf1Gv45L6N9+J9ol7LjCdz
7sFdol5Hv7j9sbvxi6Je8x/Z+eBduFPU641Dyj134udEvW6dfersO3CkVVkZ
efaulNvxM6JeU6+umnYb3iPqFfS8qbkV7xb1mhgXe8ktuEPUq27nvefejHeJ
ep3yS91pN+F2Ua+i1b1/aHGrqNcP/z13ZDqWRb1W3f/AV8k4JOr1sSINTsMB
Ua+FKUeOJGGfqFfPExe+PRV7RL3uuPzh1xKxS9TrxSbXC1OwQ9Qr+dSBpzTY
JurVtvXS1klYEvW69JvFngTcJOolZQeaLsMNol5n9n1ijsd1ol477rpy+8XY
Iuo1+qJh80RcLeq1blrrmguwWdTrs+AXS9S4QtQr6/yrMydgk6jXYfPqeXG4
TNTr7rEndGfjUlGvV9Z/MzMWl4h6zfh02vVn4GJRr46FeVfF4EJRryvffPrS
U3GBqJfr1h/PU+F8Ua+4p7Vn/GMdt1HUq1KTf/IvvFHU6w/78z//gfNEvYxn
/jr8O14n6vV1ycxPf8W5ol5Lfij68Be8ulXR9y9/+Z2fcI6o17wP/3z9R7xC
1Ov1jLSu77FB1Ct1/45nvsNLRb2eueG19m9wtqjX1W0q/9d4saiX/+I51i9x
lqjXBXWVNV/gRaJetX937/gMZ4p6/Ws8o+BTvLBVub1w6J51n2C9qNeJR2oN
H+MFol4r3zm06L94vqjXsdlx93+E54l66Z+7/64PcYao11tXN9/6AZ4r6nW7
t++G93G6qFdn3AVT38NzRL2mmR5KeBfrRL1afnFc8A6e3apMi19zNPZtnCbq
1XTskn/fxLNEvU5f8Oiv3ThV1Gv7677vDuKZol4/pwx+puAUUa+1HVcMHMAz
RL0+vXzZ4f1YK+q1qFnu3oeni3r1nvr5vi6cLOp1V+FVz76Ip4l67fsm54lO
nCTqpV2yK/gcnirq9UTf1/YIThT1uiL92rpn8BRRL8dL60x7sEbU65zr9hTu
xpNEvcpD3+d14ARRr7Hzb1i5C18m6rXxf4GHOF7U68uxZx9oxReLemXn/XK3
jCeKeh35NCUthC8Q9br3ocIZAawW9XrtzZeSfHiCqNfMWX9M8uA4Ua89T8+6
yIXPFvW6anLpOQ4cK+rlc7x6ig2fIeqljv3392YcI+pVs133QyM+VdTr7x/K
h+qxStSrYMUbx2rxPy3K5O8+jHm/Bp9sUV5efu/ct6rwny2KfmB/zauVeKxF
GV6gffv5cvxbi2ISb5e7d+LRFuV/63zlHfjnFmXvc3WNru14pEW559p/Djds
wz+0KJ+GN6sri/CJFqXw4i8f3LYVf9uiTGjMsm/agodblF2n9fav2oy/alFu
L7nj4uxNeKhF+VC8Wy7cgD9vUTasmerNWI+jLUrMce+x2Wvx8RYlkHluws1r
8GCLkvKOacl1q/CxFqX3ztHQ5JV4oEVZ2bUmeslyfLRF+Wv6x5MnLMP9LYr9
8QUrY5bgIy3KtISD7X8uxn0tykHbzV+NZOHDLcris5685utFuLdF+WlnwtpP
MvGhFqX2t+bdHyzEPaJeG0478bYevynq9UXh9coC3C3qtfjbjS/OxwdFvfqW
RPbMw4qo1z3v/9SagQ+Ieh1Iv8k7F+8X9UrpKmhOx/tEvZ667sWqObhL1Gty
+PftOvyiqJfnglvzZ+NOUa/zqkty0/Bzol5Vf7yydBaOiHqdzPs7MxU/I+qV
H51930y8R9Trm4dMd6bg3aJehrdev2UG7hD1OjrrtOlavEvU6/5n0hOn43ZR
rzcmV1+WjFtFvWY531JPw7KoVyT2rDOTcEjU65rSeX9fjQOiXqEf63+5CvtE
vSaufPebydgj6lV/dEL0SuwS9Tplnv7oFdgh6lX8qrX3cmwT9fpR+8HBS7Ek
6rWqfeLLl+AmUa/BSxbtvQg3iHotrHc/fiGuE/V6+58B//nYIuqly7/Mdh6u
FvV68cvHLOdis6jX9Y8Gy87BFS3K8bbe4wVnYZOo12U6zfozcZmol/X55ctP
x6WiXmde0/bIabhE1KvMN3T/KbhY1Gv03Knp/0rjLhT1Wl++ZtbfuEDU6/PR
Du1fOF/UKyv326l/YKOo13sfX3fF73hji/LO3Q9suPBXnCfqtf/gM2f9gteJ
es2YOfLvCM4V9XryyRt/+wGvFvXSXLHlxAmcI+rlkjo//xavEPU6N+a3gWFs
EPWqLLrlva/wUlGvP78t/s8Qzhb12rx03yuf48UtStfX7//1bBRniXotvfv2
juN4kahXf1dZaBBninrdl6w4juGFol4Hw6fUD2C9qFfqhXeVH8ULRL32VpuL
+vF8Ua+r//zPhiN4nqhXYMOZOX04Q9Trws8yFh/Gc1uUx2sz6/S9OF3US9Xz
ztxDeI6oV+Ft597eg3WiXt8/s+CmN/FsUa+cKdK13ThN1OuY8/0rD+JZol4P
nnXhxQpOFfV6qzQz7gCeKeo1e8R56n6cIurVufKjsZfxDFGv6z6K//ElrBX1
ap23+MsX8HRRr/gD/o+fx8miXs03fvL+s3iaqNfpj0/q2YuTRL1K4w0HnsZT
Rb1+qW/pfAoninqt/ffz3U/iKaJe0fzEliewRtRr0Ver3I/jSaJe7z76RGMb
ThD1Sn93uLIFXybqtU83rSSM40W9buxcbwzii0W9nrjm6dV+PFHUa5L/h2wv
vkDUyzlB+5Abq0W9zqnYfK8TTxD1qvj1uTvsOE7Uayx39GYrPlvUa9PgzcnN
OFbU66sHiqY04jNEvbLf6IqvxzGiXh/M/HNCLT5V1Ove3bedXoNVol7KFTv+
MuN/ZOWvmdYDP1Xgk7JiezpGNWzCf8rKtMTiO4+X4TFZOej7rqK/FP8mK4vP
X9Z9qASPyspPNUdOf70Y/ywrtf/cfc9LhXhEViZvfdnydAH+QVa6vks+1JaP
T8iKfoV8js+Iv5WV4YEL75c24mFZ2flATVN1Hv5KVi5588/3StfhIVnZm7bx
/C25+HNZuef5zxauXY2jsnL82ocdy3LwcVkplHs+fHgFHpSVCf97gDHgY7Ly
eOPerDlL8YCs3B5zlS81Gx+VlQ9LXB9PX4z7ZSXvp7OuuDoLH5GVmNwdSy9f
hPtkJXB8JHx+Jj4sKykP53x25kLcKyvvvPPRlH8ewIdkZeWc+3JG78c9ol5d
Bx7/9j78pqjXDTO+jt6Lu0W9dj2e9NE9+KCoV8Kl6969GyuiXvaGp964Cx8Q
9TpL9f3Ld+L9ol6mLdMjd+B9ol6/f7Vp1+24S9Rrw+JnA7fhF0W9ht792XYr
7hT1WnxnSu0t+DlRr/c7t+68GUdEvTKSXtp6E35G1OuAf2z9jXiPqNfN581a
cQPeLer1VMX2rOtxh8y+e7xLZr89bpfZZ49bZfbXY1lmXz0OyeynxwGZffTY
J7N/Hntk9s1jl8x+eeyQ2SePbTL747Eksy8eN8nsh8cNMvvgcZ3M/ndskdn3
jqtl9rtjs8w+d1whs78dm2T2teMymf3suFRmH3vzuEtk9q/jYpl967hQZr86
LpDZp47zZfanY6PMvnS8UWY/Os6T2YeO18nsP8e5MvvO8WqZ/eY4R2afOV4h
s78cG2T2leOlMvvJcbbMPnK8WGb/OM6S2TeOF8nsF8eZMvvE8UKZ/eFYL7Mv
HC+Q2Q+O58vsA8fzZPZ/4wyZfd94rsx+b5wus88bz5HZ3411Mvu68WyZ/dw4
TWYfN54ls38bp8rs28YzZfZr4xSZfdp4hsz+bKyV2ZeNp8vsx8bJMvuw8TSZ
/dc4SWbfNZ4qs98aJ8rss8ZTZPZXY43Mvmo8SWY/NU6Q2UeNL5PZP43jZfZN
44tl9kvjiTL7pPEFMvujsVpmXzSeILMfGsfJ7IPGZ8vsf8axMvue8Rky+51x
jMw+Z3yqzP5mrJLZ14xPhtnP3DTusTD7mPFomP3LeCTMvmV8Isx+ZTwcZp8y
HgqzPxlHw+xLxoNh9iPjgTD7kHF/mP3HuC/MvmPcG2a/Me4Js88Yd4fZX4yV
MPuK8f4w+4lxV5h9xLgzzP5hHAmzbxjvCbNfGHeE2SeM28PsD8ZymH3BOBBm
PzD2hNkHjB1h9v9iKcy+X9wQZr8vtoTZ54vNYfb3YlOYfb24NMx+XlwcZh8v
Lgizfxcbw+zbxXlh9uvi3DD7dHFOmP252BBmXy7ODrMfF2eF2YeLM8Psv8X6
MPtu8fww+21xRph9tjg9zP5arAuzrxanhdlPi1PD7KPFKWH2z2JtmH2zODnM
flmcFGafLE4Msz8Wa8Lsi8UJYfbD4vgw+2DxxDD7X7E6zL5XHBdmvyuODbPP
FceE2d/aOG5VmH2t+GSI/ax4LMQ+VjwaYv8qHgmxbxWfCLFfFQ+H2KeKh0Ls
T8XREPtS8WCI/ah4IMQ+VNwfYv8p7gux7xT3hthvintC7DPF3SH2l2IlxL5S
vD/EflLcFWIfKe4MsX8UR0LsG8V7QuwXxR0h9oni9hD7Q7EcYl8oDoTYD4o9
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
M8/L2LiZ52Ns2MzzMNZv5vkX6zbzvIu1m3m+xZrNPM9i9WaeXx/m+9/M8yoe
MfJ8iqNGnkdxn5HnT6wYed7EESPPl1g28jyJJSPPj5l8/0aeF7HRyPMhNhh5
HsR6I89/WGfkeQ9rjTzfYY2R57mH+P6NPL9hlZHnNRzdxPMZVjbxPIblTTx/
YdMmnrewYRPPV1i3ieephfz3bOL5Cas28byEoxt5PsLKRp6HsLyR5x9s2sjz
DjZs5PkG6zbyPPMgr7+R5xes2sjzCo5u4PkEKxt4HsHyBp4/sGkDzxvYsIHn
C6zbwPOEntffwPMDVm3geQFH83g+wEoezwNYzuP9H5vyeL/Hhjze37Euj/fz
B3j9PN6/sSqP92scXc/7M1bW8368gNdfz/svNq3n/RYb1vP+inXreT+9n9df
z/snVq3n/RJH1/H+iJV1vB/O5/XX8f6HTet4v8OGdby/Yd063s/u4/XX8f6F
Vet4v8LRtbw/YWUt70fzeP21vP9g01reb7BhLe8v9/L6a3k/wZq1vH9g1Vre
L3A0l/eHDF4/l/cDLOfy9x+bcvl7jw25/H2/h9fP5e851uTy9xurcvl7jaNr
+Ps8l9dfw99jLK/h7y82reHvLTas4e/r3bz+Gv6eYs0a/n5i1Rr+XuLoav4+
pvP6q/l7iOXV/P3DptX8vcOG1fx9u4vXX83fM6xZzd8vrFrN3yscXcXfpzm8
/ir+HmF5FX9/sGkVf2+wYRV/X+7k9Vfx9wRrVvH3A6tW8fcCR3P4+6Dj9XP4
e4DlHH7/sSmH33dsyOH3+w5eP4ffZ6zJ4fd3Nq+fw+8rjq7k9/N2Xn8lv49Y
XsnvXxqvv5LfN2xYye/Xbbz+Sn6fsGYlvz+zeP2V/L7cyuuv4PcDKyv4fUjl
9Vfw849NK/h5v4XXX8HPN9at4Od5Jq+/gp9frFrBz+vNvP5yfj6xspyfxxRe
fzk/f9i0nJ+3m3j95fx8Yd1yfp5m8PrL+fnBquX8vNzI6xv4+cCKgZ8HLa9v
oP7YZKDeN/D6Buo7ndc3UM/reX0D9Uvm9Q3U6zpebxn1mcb//jLqcS3/e8v4
90/i65fx730NX7+Uf9+pfP1S/j2v5uuX8u+XyNcv5d/rKr5+Cf8+U/j6Jfx7
TObrl/D9a/j6JXy/k/j6bL6/BL4+m+/nMr4+m//+eL4+m//ei/n6x/jvm8jX
P8Z/zwV8/WO8vpqvf4zXi+PrF/O/H8vXL+Z/L4avX8zXq/j6//u/H7tj/Osf
5f9/ZNym/3N03LpHFdX/9/8eVf4fJjXUxw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
g2gJbrBQC0+Q2KvivD+CZkbQEjynX45hgb5exfs+r/81vb2K9z1eptXK3vd3
5Q97Ze97u/abvZL3fT32F3sl73u6hVYret/PbQnsFb3v5Y6f7BW87+OeH+zw
ieIZ01lptbz3/dv+nb28971b97CX875vy7RUzvuerXxjL+t9v9a+spf1vlfH
fmEv432fttAS/PDe15W2z+ylve/Pjnj20t73Zs8n9lLe92UrLcHvK756aP/I
7u99P9Y/sPt734tlWi3pfR9W3rOX9L4Ha+/YS3jff2PfspfwvvdaaLW4933X
9oa9uPc91/GavZj3/dbzir2Y973WSqsWnHdAo0f2l+wW73us/oK9qPf9Vaal
ot73VuU5exHv+6r2jL2I9z01No69sPf91EJLhb3vpban7IVM8StXmUGOJ+yF
vO+hnsfsBb3vn1Zagq+Eb35kd7MX8L5v6rHsBbzvmTKt5ve+Xyox7Pm975Xa
I/Z83vfJ2Ifs+bzvkRZazet9f7Q9YIdft5o7yHGfPY/3fdFzjz2P9z3RSqu5
ve+H9rvs8K9tU/bqd9hzed8HZVrK5X0PVG6z5/S+/2m32HN63/tib7Ln8L7v
WWgph/c9z3aDPbv3/c5xnT27973Oc409m/d9zkpL2bzvcfZo9qw478P7e3WT
Pav3vU2m1Sze9zXFxZ7F+56mGex+3vezWCe7n/e9zEKrmb3vY7ar7Jm972GO
K+yZTJF20ZlansvsmbzvXVZazeh937Lr7Bm971n6JXbZFHlfHpwu05Lsfa9S
LrJn8L5PaRfYM3jfo2LPs6f3vj9ZaCm9973Jdo49nfd9yXGWPZ33Pclzhj2t
9/3ISktpve9FdsGexvs+pJ9mh9Pm87PLtJra+/6jnGJP7X3v0U6yp/K+78Se
YE/lfc+x0GpK7/uN7Th7Su97jeMYewrv+4znKDvsb37PYKXV5N73F/sR9uTe
9xb9MHsynLdtiF2mpWTe9xTlEHtS7/uJFsWe1PteEnuQPYn3fcRCS0m87yG2
A+yS9/3DsZ9d8r53eBzsf10iZ/KOspWW4MT3DPs+9j+uf+8X+l52OPG9QqbV
3y7h372pouxhhxPfI7Td7L9c/94fYiPZ4cT3BgutJrj+vS/YdrHDie8Jjp3s
P13/3g88O9jhxPcCK63+cP17H7BvZ4cT3wP0bezfXf/u/zItwTlx31e2sntc
/+732n/scOJ9PnYL+zfXv/u7hZbgxPu6bTP7V9e/+7ljEzuceB/3bGT/4vp3
/7bSElwd9237BvbPrn/3a309O5x4n5ZpNd717/6sRLDDifdlbR37J9e/+3Fs
ODuceB+20OpH17/7r20tO5x433Vo7B9c/+63njXscOJ91kqr713/7q/21exw
4n1VX8X+zvXvfirTEpx4H1VWsr/FeXH/1Faww4n3zdjl7G9c/+6XFlqCE++T
tmXsr13/7o+Opexw4n3Rs4T9levf/dBKS3DifdC+mP2lSwTh/qcvYocT73sy
rb5w/bvfKQvZ4WK4z2kL2J+7/t3fYuezw4n3NQutPnP9u5/Z5rHDifcxx1z2
ONe/+5dnDjuceN+y0upT17/7lX02O9wI9yk9jP2J69/9SaYlOPG+pMxif+z6
dz/SZrLDQbgPxc5gd7v+3X8stAQn3ndsoeyxrn/3G4edHU68z3ims8e4/t1f
rLQEJ95X7Cr7I9e/+4k+jR1OvI/ItPrQ9e/+oUxlhxPvG9oU9gc4L+4XsZPZ
4cT7hIVW77v+3R9sk9jhxPuCYyL7Pde/+4FnAjuceB+w0upd17/9bx/PDifu
fX0c+x2XCMa+l2kJ3mXe6qiMZb/tEh/+a1dCG8MOV5ps/ogdzX7LJca3a3HV
QkvwiRKXw22j2G+6hPS34TDHSHa4wa2zdT0j2G+4xOxddTNbaQl2Tj/xxD6c
/bpLZAqqcVAPYYeVsodmyrR6zSXWJK/USRnGDj+6v7eENpQ92iUKOUr/jB3C
DgeH7bhqoVXTJXZ2L7bOZmOH31faPMwxmN3lEhXTFgzwDGKHx7rDM1tp1XCJ
Y4dyPbUPZIf/zF95UB/A7nSJen2zzJJpCQ6rsbiTEsx+1SWuZsxQUuvPDmd8
PudnbD/2KzjviZROCy3Bq5eGrrP1Zb/sEg8HSiGOPuxwwbpTAjy92XWX6Jft
Z2YrLcHb34x9au/Ffskl3p75fFDvyQ6XXz18lkyrF11i9LB3nZQe7PDRBoNL
at3ZL7jE79wvfsZ2Y4cDP/V1Wmj1vEvMuuReZ+vKDl9Z1z3E0YX9nEvIo+8H
eDqzw+2adfKz0upZl1hZ8OZTexA7fP9bmyi9E/sZl8hvGLNkWoL7bG4WpHRk
Fy6xbcKlkloHdvhN6wYJsQr7aZcoV+yM00JL8Ohf1ghbe/ZTLnHk+rEQRzt2
+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
shd0idhWN1K4h7DDRSxt7lhotQDOm+DcbrOxw5HXmk50DGbPj/297WJzzyB2
uPLU+vmstJoP+1sR7+0D2eET/lahD2DPi/2d5NgSmZbgBneq9lWC2fNgf+8+
UFnrzw4boeVTuvux58b+7rL7joWW4A7l/XfY+rLnwn0j5baJjj7scMzDIi08
vdlzYn8f2JDPSktw8Jx8H+y92HNgf/fUhN6THX5fJcdSmVazY3+nX95X6cEO
j32SqYrWnT2bSxw/siCluxs7/Hdh2rsWWs2K/d0/bIetKzs8u1bySY4u7Flw
38g8vYWnMzuc6eXvfFZa9cP+PjXxgz2IHV693CP0TuyZsb8Hj14q0xJcMPBT
X6Ujeybs7xzDqmgd2OEd716ndCvsGV3i3bkBdy20BFfQ4nbY2rPLOO/w3pMc
7djhY41iWnjasmfA/s7bNb+VluB6n+98sLdhT4/9fVk5o7dmh6+sv7ZUptV0
2N9jW/VTWrHD7VpcraK1ZE+L/V24SSp3C3b4wffzdy20msYlCpiBO23N2eG+
/52a5GjGnhr3jUm1WnqassNv2x7Jb6XVVNjfJap8tDdhh0f/cZzRG7OnxP6+
WXaZTEvwr527+imN2FNgf08vUVVryA7P6PRfKncD9uQucblM4XsWWoIzJF+/
01afPRn29/08kx312OGV+1a39ASyJ8V9Y1a2AlZagvN3X/rRHsCeBPu7Usaz
el12eGua+ctkWpWwv2NT91fqsMNlD82sqlnZ/xoCczK1uzY7fKjPtHsWWv1j
iITqv3baarHDdTNOmOyoyf7bEKHPvrb01GCH9eMjC1hp9Zch0i/98NFenR1u
M3DIWb0ae4Ihltd5tUymJfhu1uD+SlX2n4bI++ZJVa0KO9zrTM/U7srsPwyx
ZdXDexZagl8N7bzLVon9uyHK4MLvqMgOj8jdvpWnArsH5/1oFrDSEvzzYotP
9vLs3wxRZ93ls3o5dtg+qtFymVa/GuJi03P9lbLscFpcgLUy7F8Mgfmc2l2a
HV7qrHHfQqufDXFn06FdtlLscJ4JlaY4/NnjDdGz9b5WnpLs8BZLmYJWWv1k
iJcJOz7ZS7DDpa8XO6cXZ/9oiOHbNy+XaQk+OLVgsFKM/YMhvivrqmkWdrh2
qdxp3EXZ3xtCTbLqvoWW4PN3skTairC/M0SaPYunOAqzwy1nZGjtKcT+1hBL
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
p9iqpV3k2MQOvx4e1suzkT3OKco2Tl7RSkvwyHzTk4VuYH/qFIc+/76pr2eH
f16euFWm1SdOUSfxX6gZwQ6Hjh3dVFvH/tgpLrX4lNsdzg6nKzLsrYVW3U6B
384nbWvZ4eXmgEUOjT3WKe7+F9fLs4Ydzju5d0UrrcY4Ra92MclCV7PDW0p0
vaWvYn/kFC//3Nkq0xJc+pYyXlnJ/tApRuy61lRbwQ5HTW+Vx72c/YFT/Oh0
9a2FlmBr2SanbMvY7zuFPfmFRY6l7PDF+4G9PUvY7zlFWsepilZagluF1Uoe
upj9rlMs7X7klr6IHb5dqco2mVbvOEXutPvHKwvZ4Z7uss20Bey3nWLzoV15
3PPZ4RfzS7yz0Ootp8Af31O2eexwSI3Cix1z2W86xcGM63t75rDD35/lqWSl
1RtOUfvE6uShs9lhdWm223oY+3WnOD9w6TaZluDUdTNOUGaxX3OKFtnmN9Nm
ssNL3qTO657BHu0Ut87MfGehJTjX6qSnbaHsplN0HzZtscPODm9q8Ku3Zzq7
yyme555QyUpLsP+nr8lDVXbDKYZdGnlbn8YO71/3YZtMq06n+DZqyARlKjtc
s9mrZtoU9qtOMa1gcF73ZHb43Lcn7yy0esUp8OPqtG0SO9x888PFjonsl51i
8YTOfTwT2OGbrW9XstKq7hQ5i7VPETqeHe72y7ytj2O/5BQbrrfYLtMSHLf9
8gRlLPtFpygxrVFzbQw7PKTDubzu0ewXnMJRKuC9hZbgr0lOnraNYj/vFDXu
1ljiGMkOT9lzqI9nBPs5pzg7o1JlKy3BKbvuSxE6nP2sUzSrUOaOHsIOL0y1
c7tMq2ec4vqjYhOVYexw9oObm2tD2YVTdJlbMJ97CDu8vte69xZaPe0UT6vm
FjYbO1w8w6oljsHsp5zC9jRLX88gdnjf0cWVrbR60im+LMqQMnQgO1w9eO4d
fQD7CaeYXDvVDpmWYOE3Y6ISzH7cKZK/klpo/dnhJqen5HP3Yz/mFAtW/Hxv
oSX4mm2csPVlP+oU2ep9WeLoww53zjmir6c3+xGnWPf+XWUrLcFPzg9OGdqL
/bBTFFv74o7ekx0ePKLfDplWDznFnsaPJyo92OH4fD1aaN3Zo5yi6pf7+dzd
2OGJVzp9sNDqQac4veGmsHVlh5ONa7vU0YX9gFM0bunq6+nMDs8r0ryKlVb3
O0X0j0spQ4PY4azRDe7qndgdThG09cwOmZbg8Ml1Jikd2fc5hbvd8RZaB3a4
aMnq+d0K+16nGPj34AcLLcG7b1U4Y2vPvscpPu3as9TRjh2uYi/Vz9OWfbdT
TAjaXsVKS/CpspZUoW3YI50iaYpNd/XW7HCjB/l3yrS6yynmOtZOUlqxw66w
nC21luw7ncKvx4r87hbscMfKfh8ttLrDKfDX7xlbc3Y41p1umaMZ+3anKHJ4
dj9PU3Z4wIIUVa20us0pdvW1pwptwg5/rPH3rt6YfatTVM40eadMS/D4598n
KY3Y/3OKEyfGtNQassPSsvj87gbsW5yiwaCQjxZagmfXfXvGVp99s1MY2QYt
c9RjhzO/fdbPE8i+Cfs78V+ARUvwmtWxqUID2Dc6Rcywbvf0uuxw4Yb3dsq0
ugH7O0/HyUoddnjnp+stNSv7euzvS60LuGuzwxUjnB8ttBqB/T266VlbLXb4
eLOLyxw12dc5xd+C9ft7arDD9T2nq1ppNRz726idOrQ6O3x189F7ejX2tbhv
TKy6S6YlWGlzYLJSlV3D/i5WvpVWhR1++CuygLsy+xrs7xslP1loCe63Y+tZ
WyX21djf04osd1Rkh9912NDfU4F9lVNUKJ2vmpWW4DFJtdSh5dlXYn/fzX5f
L8cO/9mzbJdMqyuwv2dmmqKUZYdndV3QSivDvhz7u0Lagu7S7LCcOuyThVaX
YX/HJDtnK8UOrzyoLnf4sy91igdzf/f3lGSHC/SeWM1Kq0uwv6t5UoeWYIe3
ZRh9Xy/Ovhj3jacfd8m0BJc/NnSKUox9Efb34tetNAs7fCR4QEF3UfaF2N+1
4z5ZaAkOyNL7nK0I+wLs71ePljsKs8P66S7BnkLs850iw8o71ay0BLcdoqQJ
Lcg+D/u73rX7egF2+F7OVpEyrc7FfePDlSlKfna4z4XGrbV87HOwv9eeL+jO
yw6/HhEYb6HV2djfTU6ds+Vhh0fmr7XCkZs9DPv7y+FgTy52OOFK5epWWp3l
FHU3OtKE5mSHQ8eVfaDnYJ+J/d1yV6RMS3D6oiWmKtnZZzhFm59bWmvZ2OHl
0YUKubOyh2J/b42It9ASnHdKnvO2LOx27O/2q1c4/NjhLSWzDfBkZp/uFK/+
LqlupSW4zG05bWgmdhX7O3LeAz0jOxxlT71bptVp2N9BM6cqMjtcp1zSNloG
9qnY3ymmFXKnZ4cvPkiIt9DqFOzv/ePP29Kxw61mf13hSMs+Gfu7x8gBnjTs
8O3KH6pbaXWSU+RJNyRtaGp2uOfjlw/0VOwTsb8P998t0xL8YsGTqUpK9gm4
b/Tr2UZLwQ4Pr/mwkDs5+3js70ydP1toCf7+/NZ5WzL2cdjfJ9utdCRlh9Vl
5gBPEvax2N+DWtSw0hKcJuBy2lCJfYxTtMze6KH+96q3w0vent0t0+po7O+z
dacpf9jh3GtOtNF+s49yih64MLh/scObGh76bKHVkdjfeSpdsCWww/7xe1c6
frKPwP7WSw/0/GCH90fsqGGl1eHY36OLpQv9zg7XwoDWPewh2N+FCu6RaQk+
5wmfpnxjH4b97crVVvvKDrfYsrKw+wv7UOzviVm+WGgJvtlm8QXbZ/Yh2N8Y
lI54drjb7zkDPZ/YbdjfN1LWtNISHLcjNF3oR/bBTlFSlR7pH9jhoR2n7JFp
dRD2d+mf05T37PDXpOPaau/YB+K+ce9zYfdbdnjq3uFfLLQ6APt75rsLtjfs
cMpug1c5XrMHY39XfDHQ84odXpi6X00rrfbH/o5xpwt9yQ7niOr+SH/B3s8p
us67v0emJXh9706q8py9L/Z3tZtttWfscHG5bRF3HHsf3DcS/x9m0BK871iz
i7an7L2xvxdfWuV4wg5XH9BgkOcxey/sb+uZmlZagkWWOulD3ew9sb9fH3uk
x7LDTUW1vTKt9sD+xl9ISgw7fG1IhXbaI/bu2N/19xRxP2SHu+Qq9dVCq92c
IuLDtou2B+zwkwtFVzvus3fF/g7fOMhzjx0ejB/QVlrtgv3dZG360LvscHz+
nDH6HfbOTlHt6/K9Mi3Bk65mnq7cZg/C/t64sJ12ix1ONj5dUfdN9k64b+AH
loWW4PlFU1yy3WDviP39c/pqx3V2OOu1P4M819g7YH9vm1TLSktw+JTv6UOj
2RXs7/ZjYnSTHbbgD7BMq+2dYpAUMl1xscO7b79ppxns7bC/IwcWdTvZ4Sqh
z75aaLUt7hud+1yyXWWHT5WLXe24wt4G+xu/oT2X2eFGD+/WstJqa+zv/R0y
hOrssGv29Rj9Ensr7O+erffJtAR3quKcrlxkb+kUa9M1ba9dYIdjH18o6j7P
3gL7+0i9bxZaggcuPH3Jdo69uVNE9qu9xnGWHf5Y8+hgzxn2ZtjfmavWttIS
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
TJ8OKm3E9gRebmFzCDvcqH+PGO5g9ljY3zWeX5dpCb6TsVOENog9picyffOH
WgPZ4U6RrWv5A9hjYH+vvp1OoSX4zZCm7/T+7NGxv+tdPWb3Y4cHhDWYHfRl
j+aJA7/OdVBpCf5zqWYRsw97VOzviLMx3N7s8PhRlW/ItBEF+1s7HqH1Yofl
3GWHWT3ZJezvKIdq+eHs8IIbxdMrtPHPFbe37n6n6+xwhnEFhd2D/a8rOrTY
Njvozg5vKJC7o0obf1zxOmZEEbMbO5z/XraYblf2367ov2vVDZmW4H2TM2zU
urD/csXvtkuGWZ3Z4fLFUtX2O7H/dMW4+PPTK7QEO48Sv9c7sv9wRfwDM4Td
gR2uPzPenKA9+3dXzOs8qaNKS/Ct0jGKmu3YA1ekTzI2ptuWHW7/4u8NmTa+
uWLd0eEbtTbs8Mt534dZrdm/uiKfPrC234od7lfhU3qFNr64Ym/K3u/1luzw
z7evhd2C/bMryp7qNidozg6PtZ52VGnjkyvO9ulQ1GzGDser9iCm25T9oyvq
pW91U6YleO7nmxu1JuwfXHHDbTzcaswOp1t5ubavsb93RbtB9TIotASvrR35
Xm/E/s4VL7LUOG43ZIfz/Dg9J2jA/tYVfS5U7KTSErx73bGiZn32N674MbxM
LLceO6w2PHBTpo3XrhiTo9gmrS47fPrvzuFWHfZXrohzLX8dvzY7XHfzlgwK
bbx0xZwxOT/otdjh603XH7drsr9wRZp8WecGNdjhNtFXdlJp47kr8ONbzKzO
Dj/fsTiWW439mStyT0xxS6YluHfruZu0quxPXbGrcKIRVhV2OIgzvY5fmf2J
K8r4cTIqtAQbeyd80CuxP3bFqWnRTtgV2eHYHY25QQX2R66oXfJPJ5WW4FkJ
hxUzy7M/dMW1p99iueXY4dSH+9+SacN3Res5HzZpZdnhVd16jrBU9geueFr2
VR2/DDucK3nXjApt3HdFr9ePP+il2eGdx9udsEux33PFt4X35gYl2eFSvVp0
VmnjrivwdlXMLMEOn0ijxXaLs99xRayPF2/JtATXOltns1aM/bYrZi7zRlhF
2eEr/avV9Yuw33JFypqnMiq0BLfKVOGjXpj9pitWfjtywi7EDj+JLDUvKMh+
wxU51uzrrNISHD60SHGzAPt1V+yoZ8d287PDX8Py3ZZp45orSv7etFnLxw6P
vJx9pJWX/aorjkesrevnYYdjjM6cSaGNK66o2Xj5Rz03Ozwjd9qTdi72y664
HGXRvCAnO5ziZrIuKm1ccgXenoubOdjh5ePkOG529ouueNRi6m2ZluDsBWNv
0RT2C67QY40faYWxw9vvRannZ2M/74rPu0ZlUmgJLj7l10c9K/s5V4xoN+Sk
nYUdFsW+zgsys0e6InqCfl1UWoKrP35X3MzEHnLFtAN6HDcjO3xx5ovbMm14
rkjepfMWLQM73LzMo5FWenbXFcuStK3np2OHH764k0mhDccVYceafdLTssM9
5l87aadhP+uKbXrD+UFqdvhThQtdVNo44wo8jkqYqdjhYe+cOG5K9tOuOHqq
yh2ZluBoS05s0VKwn3JFtb7lRlnJ2eGp1Q7X85Oxn3TFhfQlMyu0BCf9sueT
npT9hCua/fcBdknY4aUrt88PErMfd4U/KE9XlZbgbHU2ljATsQtXdMuqxHUT
ssNbfqy+I9PGMVd8uJBxqyazw0XXLx1lJWA/6oqhI1LX9+Ozw0caLsis0MYR
V0TJmfSzHo8drvJv5ik7LvthV0y5Fn9BEIcdPr95cleVNg65Ao/fkmZsdrhJ
MzOuG4v9oCusfNJdmZbg+9FHbtVish9wRdY7P0ZZMdjhrvag+n509v2u2Dzx
c2aFluD3rft81qOx73NF4SJvT9lR2eEhcXssCKKw73XFYf9ZV5WWYGlfx5Km
xL7HFZWn+3Hdf2f/3+FJHVvflWljtysiS97eqv1lhxMlajra+sO+yxWNn12p
7/9mhxcfrp9FoY2drrg359xn/Rc7nLl7zdP2T3bbFZ3LnV0Q/GCHNyWv3E2l
jR2uePdalDS/s8OFTqjx3IB9uysGLTp4V6Yl+GCv4tu0b+zbXPG38u7R1ld2
uFLagg38L+xbXTHx49YsCi3BobO5vuif2be4IuHyDaftT+xwowHZFgYf2Te7
YlHNVd1UWoLvZspQyvzAvskVmQIrnvueHe50LuU9mTY2uiJizbxt2jt2+M3Q
xIb1lj3CFQXrz2jgv2GHByrxsiq0scEVB35P/KK/Zof/XI5+xn7Fvt4VFTaO
WRi8ZIcnjP7bTaWNda7wGg8vZb5gh+U83+O5z9nXuqJh1IH3ZFqCF9z8uE17
xr4G+3tbL8N6yg5nGP+6gf+EfbUrOrbETzAtwRsKPv2iP2Zfhf0dq8MZ+xE7
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
2N+X9k60qrDDezYUbu5XZi+C/T1yRy6FluCyWt7feiX2wq4Ym2vTObsiO3xG
yr4iqMBeCPv7xpo+Ki3BdbdmqmiWZy+I/W0uS+qWY4evN0/zVKaNAq5IW2Dh
Xq0sO9w2ZrJJlsqeH/v77qzmfhl2+PnOBLkV2siH/T15ym+9NDvcp22s83Yp
9rzY30XHrQhKssPf40Xpq9JGHuzvRyMrmiXYYfz4JnWLs+fG/p4x+KlMS3Cc
zl/2asXYc7miTum+k6yi7PDsxO+a+0XYc2J/P++RW6ElOPXR57/1wuw5XNFm
XqfzdiF2eHWPhyuCguzZsb/Lt+mr0hKcK+WdimYBdgX7+23TZG5+dnjnyatP
ZdoIc0WwuME+LR87XLrP+UlWXvZs2N9Va7Xw87DDJ9M5uRXayIr9/bnyHz03
O1zbPX7ezsWexRWzVpRdGeRkh68OPNRXpY3M2N+1S1Qyc7DDeLtK5mZnz4T9
/b3gM5mW4Cfnt+3TFPaMrsi5LvdkK4wd7jk8ooWfjT0D9neDsDwKLcFfs6/+
o2dlT4/9/TfDBTsLOzzq6pKVQWb2dNjfm1L1U2kJjjlmfiUzE3ta7O+mSZK7
GdnhGXlnPpNpIw32d7T4+7UM7HDK25MmW+nZU7ui5Y4YLf107PCKCWPzKLSR
Cvu71b8/elp2OHvhERfsNOwpXREe58fKIDU7vOPBwH4qbaTA/t7zqZKZih3G
23NyNyV7cuzvDm+eybQEixLd92sp2JNhfyd8NtlKzg7XeNqhpZ+MPSn296EH
eRRagi/NbvVXT8qeBPu7260LdhJ2uHnZJquCxOyJXbE82ZV+Ki3Bj17Vq2wm
Yk+E/X08MrmbkB3usbDGc5k2EmJ/9zyzX5PZ4U+VKk2xErDLriieRrT047PD
wz+UyavQRgLs7zMH/urx2OFoy4pdtOOyx8f+7r9rVRCHHZ5Wo0B/lTbiueJi
xq2VzdjsMB5HKdxY7HGxvyPXP5dpCV66OusBLSZ7HOzvISunWDHY4bB66Vv5
0dlju6J7mJVXoSV4668U//Ro7LGwvy/NvWhHZYeLRiRaHURhj4l7Y9T0/iot
wUe1uFVMiT0G9nfuiSncf2f+3+GqUaK/kGkjOvb3DeOA9pcdPr/1zxTrD3s0
979fh9vK/80ON20R5FVoIyr2d4EB//Rf7PCDmB8v2j/Zo2B/3+u5OvjBDnfd
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
yui42Yv8//zvpgW8OkWsyXYP9sI4bw97G6LTAp51//Znb3f2Qjjf1oraqtEC
Hr1jXxejG3tBnCfTrsvodGWHe42ec9FNywI4vz0eM9n+jx1uXT+skk7L/Dgv
7W79xduFHa6VudY2jZb5LHVsfMn/jM7scKmX2TM5ndjzWmpbk+SX3LSAcx78
OdnuyJ7HUhHBLyvptIBTTbn+xduB3WWpKXgBarSARUvzP6M9e25LDTm2MpPT
jh1+m9u45KZlLuxXY8QUuy07fOdzj8o6LXNiL7Zr/tXbhh0+farado2WOSxV
pUDRrkZrdvgAbnBOK/bslir8I/FlNy3gDZ2/TbFbsgdbKkvUk8o6LeD5Ra98
9bZg13B/XKy2a7SAx//Z3tVozp4Ne6770sxOKDv893krblpmxZ4rNWSq3Ywd
7rD8vyo6LbNgz8VtEuNtyg7j27tDo2VmS526UqCb0YQdLl8hYxanMXsmS3nX
xL/ipgWcN/HnqXYj9oyWWtn/QRWdFvDfz+fyNmTPYCmjypEdGi3guJs2dzMa
sKfH+T75oixOfXb445AJV9y0TIc9d6//NLseO4zLfVWdlmmx57bX/+atyw6f
T1N+p0bLNNhzo/J0N+qww0cepcnq1GZPjT1XL/ZVNy3gLea7aXYt9lTYc5nu
VtVpAS8ed/qbtyZ7Suy5F/t3arSAJzVe392owZ4Ce27/3KyOzg4P0uRVNy2T
Y89N6j3drs4Od3nbpppOyyDsuea1v3urscNNjpbapdEyGfZcrpw9jKrscOUZ
KbI5VdiTYs99+nXVTQu4UNtX0+3K7Emw507eqKbTAs6cP/DdW4k9MfbcnN27
NFrAib6vwgGWPRH2XKeZ2ZyK7HCMNfKam5YJseeKeGbYFdjhJwtbVNdpmQB7
DoPXW54dvtKtmFejZXzsuXPZ3EY5dvhEyaSaU5Y9Hvbcsu/X3LSAd8V5NsMu
wx4Xe67X1eo6LeAVl0/88JZmj4M9V36nV6MFPGP1MrdRij22pWInmqY5Jdnh
Ef2G2m5axrLU++tdDbsEO+yu3FTXaSksdW9DZcdbnB1uEVTI1Gj5J6DODs7k
MYqxw/rdBMFOUfbfAXVI/2K7aQEX3/bQsIuw/wqoTakv6jot4OCRRx1vYfaf
AbXo4RZTowUcVHexxyjE7gTURO/EYKcgO/wzw8Drblr+CKiB+AbbBdjhl88a
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
M9ZNjRbw6y9vZxlf2F/6/33+v/OZHcbx7Zebli/8qglucPYndjhy3rpeOi2f
+1VlZ04O8yM7vK/L2JsaLZ/5VeHTYbOND+zwumJtajnv2Z/6VZYltX67aQHP
FaX22u/Yn/j/fV6MTgtYYkCbb9kf+9W30r9uarSA+6x4Odt4w/7Ir57Gu1HL
ec0Ot+/t/+2m5UO/unrV3Gu/YofrVVwVptPygV+dXGvkNF+yw+WSjLyl0TLa
r3bhgG68YIfz3Gpe23nOft+vVlSt/sdNCzjt5qL77Gfs9/xqRopsvXVawHGG
JcllPmW/61e43N/SaAF/qPl0jvGE/Y5fuXdcqe08Zofvpz3xx03L237VYvSO
ffYjdvjc46W9dVre8iu9/tRc5kN2+PDuIbc1Wt70q+KZu841HrDDm8c3qeNE
s9/wq+CXlYSHFvAivGDs++zX/Qrzr49OC3hicILc5j12269+Tv58W6MFPOjd
g7nGXfZrfvWyxYU6zh12uMuxI8JDy6t+dSP3lv32bXa4sbGoj07LK34VwA3J
vMUOV2o34I5Gy8t+tfdUx3nGTXa4YIEGdZ0b7Jf8CsfBWB5awJl+5DlgX2e/
6FdzOqftq9MCThgV22Xa7Bf8amzR93c0WsBfF92dZ1xjP+9Xvf+crutcZYcf
dz8Qy0PLc37V9vz6A/YVdvhyqXl9dVqe9as6y6XLvMwOq7h97mq0PONXZcLa
zjcuscN4udRzLrKf9qvcOFB7aAH/ff6PfYE9yq9SJ07ZT6cFPK3/b5d5nj3S
r2LdfHVXowU8rMrN+cY5dsuv3m0M1HPOssPdk++J7aFlwK/uDll90D7DDofe
m9lPp6Xfr87WGJXHPM0O//28OI2WPr86lKblAiOKHS46Sq/vRLKf8qtNj4rF
8dACzlZPO2Rb7Cf9aqGZtL9OCzgpvsFmgP2EX00Y9+yeRgvYeX51geFnV341
oPHJ+o6PHX6xf2ccDy2P+1Unbfkh+xQ7jDnZX6flMb9q+HZoXvMkO+xv3u2+
RsujflURNxDjBDu8O1eVBo5iP+JX+WcUiuuhBbz6U6bD9nH2w36VoW3CATot
4Fknv+Q1j7Ef8qv4+R/d12gBj55zcaFxlP2gX33+drSBc4QdxvEyroeWB/zq
obX4sH2YHW5dZNIAnZb7/eriwoH5zEPscK3fnaI1Wu7zq2PdGi4yDrLDpc5V
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
e879Opm/CR19vEPMSL0xPR/2XOE1z52N6Oilv0Y3VxvS82LPYfAqDejoYUuL
F5fr0/Ngz/VKvsqqS0c3Kfs8ub8OPbcpqiYSo/TadHSRG8tfOGvRc+G+2jC8
hVqTjk46pImp2Ok5cV8phSPlGnT0s9SJV1tRdBvuqwePUvgVOlrsOjZar0bP
gftq3OKXzqp09Mr6g1uqVejZseeyNvAqleno0a/zlZAr0bOZotfheGusCnR0
y+n3UvrL02VT1Gh1aIxejo4ukXf+K2dZeoQp8PbRSi1DR6fy1o5RStOzmiI4
L1dJuRQd/brLnzVWCXoWU8QWv5XKH0lHn/7rGasXp4djz112v3YWo6PXr+zd
Wi1Kz4w917fGaaUIHT2+YvZScmF6Juy5ZD/XWgXp6Ha3/GH+AvSM2HNb9HF6
fjq67AjnG2c+egbsuZo92qh56eh0eANR8tDTY889zVJazk1Hf9j7bZ2Vk57O
FPe0q6n9Njr6QuPt0XoOelrcV9mnvnVmp6M3v+/cVs1GT4P76njFs4pMR0+a
mbGMHEFPjfsKA9XKQkd3KngxjT+cHob7Km7TeD0zHV3prPbOmYmeCntucft2
akY6OrNa9pySgZ7SFIlKpy0rp6ejv8Z/t8FKS09hisfXz6T1p6Gjr65dN0FP
TU9uihMDx713htHRO6q2bq+moiczxbJUJc8rKelofPmVk1PQk5pi+I6XG61k
dHT3MWY6f1J6Euy5uqs0PQkdrYSP+uBMTE+MPfeyWQc1ER0tHyx6QUlIT4Q9
NzVpeTkBHR3X/OkmKx49IfZcrpPp/RIdfePz0on6v+MhT4A9J4Z+dP4NtYTG
21FH9Q89vilW4xdE+U1HzyqasIIcpMczxZjfDzZbP+no3hePZPDH0SXcV8sX
TtItOtruGPjJ+YP+zxAly9frpH6no21J8l5SvtH/GiIs8K+C/JWO/r3xzhbr
M/2PId4MPZDR/4mOvl197mT9I/23Ic6m7fvZ+YGOPvCoZmf1PT1oiA27bZeV
d3T0vPHBivJb+i9DTGgY2Gq9pqP7y3sz+V/RfxqiPQal/pKOrnu05xfnC3qc
Ico5o7qoz+novG3kK8ozumWI9PmtSvJTOjr+j+vbrMf0H4b4FLMzs/8RHf1g
wfSp+kP6d0Nc6tbtq/MBHX20RJWu6n36N0NslcKvKvfo6MVXv1SW79K/GmLK
6svbrdt09JD+W8P9t+hfDNGl8uRpeiwd3ShFp2/OAP2zISrfKd9NvUlHF9qW
/ppyg/7JEPhyriL76ejEtc/vsK7TPxriW8aNWfzX6Ognz8ZP16/SPxji2r62
351X6OiTk0p3Vy/T3xtiZ9PU15VLdPRy25uq8kX6O0M4P8bstM7T0SNPrsnq
P0d/awjVPWaGfpaObt6h5Q/nGfobQ0QVjuyhnqaji/9K7lNi6K8Nke3882qy
l45OsVTssgz6K0P87Lkiwi/o6JdlRjj1U/SXhriZsKnlPElHe/2FMZfoLwzh
WZ/Yrxyno9cOfqzIx+jPDTFbOa5bR+jocamXyP7D9GeG6PNgsEs/REe32dUg
znmQ/tQQtTAA1QN0dOn68W8o++lPDJEr6/0oeR8dneb1od3WXvpjQ/w9ND+b
fw8d/W5a/5n6bvojQ9xpWeenU6ejz+XJ3UvdRX9oiINf/9xQdtLRG3Fgyjvo
DwyB83ePtY2O1rrMzu7fSr9viAHFHbP0LXR0h781fjk30+8Zot7l7L3VTXR0
hZU/byob6XcNkb/vjRryBjo6Y8Xde6119DuGSJDMlcO/lo7+HNvDra+h3zbE
w83Vgs7VdPTl4Vkd6ir6LUMcs38PKCvpaLw87PIKeqwhljzZ7rGW0dFT9061
+ZfSA4YYih+wvoSO7tq40m/nYvpNQzTJnqmPuoiOrvr+U6yykH7DEEWOX6wp
L6Cjs87cvM+aR/cbImm7iTn9c+noHwU6zNHn0H2GeGaV/eOcTUf7zqTtq7rp
1w0hFr27pcyio/UeZ2vJM+nXDLGy1Pr9lpOOdsWPzuWfQb9qiFHXW8/Vp9PR
PdeW/OucRr9iiBYDU/VTp9LR1au+uq1MoV82RCQGmzyZjs5+b9UBayL9kiFS
7hiV26/R0ZjP8/QJ9IuGeFWn2D/neDo6NnOy/mo0/YIhTr94ekcZR0fvO3Cy
jjyWft4Q66YsO2iNpqPnNB+Wxz+Kfs4Q0f//BqKRdHTfzwUl1wj6WUO0FQkH
qMPp6NpzHt5VhtHPGKJMp6N15aF0NM7pQ9Zg+mlDpP09MK9/EB0tXay3QB9I
jzHEh2V547kG0NH3eksD1f50ryEulLt7T+lHRx9OfLCe3JduGmLzzbmHLQcd
vXBj33z+3nTDEJOG1lqo96KjB1XPGd/Vky4M0QnfQVWloxs8CtxXetBPGQIv
t/pydzq6wPhZR6yu9JOGyNSwV35/Fzo6oVx9kd6ZfsIQX97ICVyd6OhHR6xB
akf6cUNcmeF7oHSgo4+33tVAbk8/Zojt+WYctdrS0Uu/dyvgb0M/aojpMVUW
663p6OELwhO6WtGPGKJ7t6+D1ZZ0dNMSVx4qLeiHDVFN2tZQbk5HF706+ZjV
lH7IEBEYWP4mdHSy/hWW6I3pBw1hVcqQyNWIjn6e/OMQtSH9gCH8t88/UhrQ
0cbWjY3k+vT9htg9csJxqy4dvbpWu0L+OvR9hpiVscxSvTYdPQYHnKsW3WOI
3vveDFVr0tGtJp1+rNjpew1hb7q2sVyDji5pG3vCiqLvwZ772LIw3sBCjg47
GblMr0bfjT03K0USV1U6+k37F8PUKnTdELcKGU+UynT0mZ8rmsiV6LsMgfP8
pFWBjl6/pGkRf3n6TkPM7VlkuV6Ojh5fJklSV1n6DkP0S/hkuFqGjm7nP/5U
KU3fbog6+AblUnR02cFDTlkl6Nuw55SGRf2RdHT61AVW6MXpWw0R70H8ZK5i
dPTHnfdHqEXpWwxxf+zhZ0oROhov32ZyYfpmQxzJMkBYBenoLXhg+QvQNxli
0aHcK/X8dPTkaX+TufLRNxpicMvbI9W8dHTnPPufK3noG7Dnvs5uLuemoyub
DsPKSV+PPTfPXtxvo6PDu+RYpeegr8OewyByZaejv/25MUrNRl+LPXdp9wtF
pqOvrXC1kCPoa7Dn+qimlYWO3llBifSH01djzyWNWK1npqNnxH5P4cpEX2WI
EZuvjVYz0tE9cHApGegrDdHMPq2lnJ6OVtJ39Vpp6SsMUexJpRL+NHQ05v0a
PTV9uSGSa59TusLo6LhGl8aoqejLDPEi25ZXSko6+ua7ia3kFPSl2HPHOsRY
yejova5yJf1J6UsMsaZturV6EjraXeB9Kldi+mJDjLXOjlUT0dGOM+tfKwnp
iwzRelF0azkBHY1z/7QVj77QEKXwn1+io3PGD1un/zsW8gWGSH39VZjrb6gl
9J813nHqH/p87LkBq98ov+noO1VGt5GD9HnYcylbnLF+0tEH7xYr7Y+jz8We
255svW7R0fNHP0vt+kGfgz1X51S0+p2OHpB5+VvlG3029tyLYW3lr3R0vQON
z1qf6W5DlJ9SqIz/Ex2dr3miDfpH+ixDZMj1KI3rAx0d//PR8ep7+kzcV6cW
vVPe0dEPZg9qJ7+lu3Bfdax/znpNRx8tkq+s/xXdifsqKG3UX9LRiy/cTet6
QZ+B+2rZwQnqczp6aO9575Vn9OnYc+X6tZef0tGNcSBZj+nTDFHlZs5y/kd0
dOGNvzfqD+lTDZFlaGw61wM6Okl1j6bep08xxPc07g/KPTr66cNeHeS79MmG
uK5Xv2DdpqNPRWcr779Fn2QInAub9Fg6emWEP70rQJ+IPfdm10T1Jh096siM
j8oNuoY9N6N7R9lPR7doXfWidZ0+AXsuX5YK/mt0dOT3r5v1q/Tx2HMxVzK4
rtDRKRdsm6Repkdjz3Wd8km5REe/iuzcSb5IH2eIwL8Kl6zzdDS+uYr+c/Sx
uK9Wfdyin6Wj1/a7kNF1hj4G91WlTZPV03T0ODwQlBj6aNxXt9t1lr10dJut
ZS5bBn0U7quRaSr5BR1dutbbrfop+kjsuYxnMrlO0tFpn62dop6gjzDEP8/Y
L8pxOvr9xFZd5GP04Ya426TEFesIHX0+R8rK/sP0YYY49OHFNv0QHb3phJHZ
dZA+1BALZq2cqh6goye2H/lV2U8fYoiBhZp1lffR0R1/Frlq7aUPNkT9c0mq
+PfQ0RVx0Oi76YOw53qeCHfpdHSmMkunqbvoA7HnEg79puyko7/4GnaTd9AH
YM+tK3DN2kZHXxmUoKp/K70/9ly1Bzv0LXT09rAjWVyb6f2w5+4vmK5uoqOn
7RzwXdlI72uIYWPrdpc30NHd6uW5bq2j98F9leVfVf9aOhrnx059Dd2B++rQ
/qyu1XR01mlzZqir6L1xX7Xs80NZSUf/yF2zh7yC3gv31ZccPmsZHe03flXz
L6X3xJ6be3OXvoSO3t15T4RrMV01xKpiM53qIjp65h/VUhbSexhi9CVFlRfQ
0b1WRPitefTuhvj/u+efS0fXqHBd1+fQuxmiRNKdsms2HZ0jdppLddO7GiLV
5q5xyiw6Ojisck95Jr2LIV7XyHzDctLRt9J9ifLPoHfGnnt8abc+nY7ev2dL
Ntc0eifsuQmTZqpT6ei5jTr+VKbQO2LPZSvfS55MR/d7l+6mNZHeAXvu2Pvq
fo2OruM6t0efQG+PPdd2Q3bXeDo6Dw4QNZrezhDprDa/lHF0tHSmVG95LL0t
7quFYQFrNB19r/vrGv5R9Da4r0rG7NVH0tGH463J4RpBb4376tpotzqcjl64
pkVQGUZvhT03oLhDHkpHD66SPNYaTG+JPZfyud0/iI5uePeURx9Ib2GIStuX
21wD6OiCo4fPVvvTmxsic50mv5V+dHSizIX7yH3pzQzx9XmiW5aDjn68/1FN
f296U0PgnNmn96KjTzRbnNPVk97EEDtyDp6jqnT0sk/1/yg96I2x507l6yt3
p6NHzI532+pKb4Q91/FeLX8XOroZXnB6Z3pD7LngvFyuTnR0sQv95qod6Q2w
55bV/qt0oKOT987VT25Pr489V/bPbastHf0i0a3a/jb0eoa4ccNzQG9NR5sb
3Lldreh1DbFnSO95aks6enVUjX9KC3od3Ff//4Gh5nT0mIdxd6ym9Nq4r3R/
HX8TOrpVtH5Qb0yvhfuqgTOPqxEdXSqix3y1Ib0m9tybqlJUAzo6NQ4GuT7d
jj03/dtdqy4d/bbV1br+OvQahridd/shvTYdffbblLyuWvTqhjjg7bxArUlH
b5hfMV6UnR5liHldMw6Ua9DREyI/3bOi6Ioh+v+7UM+v0NHtr2w6rFejVzNE
3VVaPldVOhpzaKFahV4Ve65S2fhRlenoDMnTDpIr0atgz91+e9+qQEd/2nKm
vr88vTL23Ih1R/RydPSlmuPyu8rSK2HPZWi9SC1DR299WiJBVGl6Rew5T8rB
cik6esrElw+sEvQKhhjSxGzgj6SjcR4d1YvTy+O++jCygKsYHV0ZLxC1KL0c
7qtZRRNGFaGjw9snHSIXppfFfVXo6UOrIB39Le5EQ38BehncV2eXHtPz09HX
Fw8t6MpHL409pzZaoualo3eVLpgoKg+9lCFWJEg4VM5NRzt9Dx5ZOeklDTFy
3ZFGfhsdrQ5aeFzPQS9hiObVBhZyZaejo8LqLVWz0SMNUfx+nsRRMh2dbee/
oXIEvbghUoy989jKQkf/rHugsT+cXswQL8PnntAz09GBl30KuzLRi2LPHay5
TM1IR3um2pJEZaAXwZ5rERwmp6ejZ+cOPLHS0gtjz33Z08Sfho7uY8w8qaem
F8Kem9uziCuMjq7VOWq5mopeEHuumJw0KiUdnevPj+FyCnoBQ6S5dP2plYyO
/rt8Z1N/Unp+3FeO6af0JHT0nfLdiroS0/PhvkpSZYWaiI4+GMicLCohPS/u
q01fRsgJ6Oj5wy4/s+LR82DP1djazC/R0QPTTRb6v6Mhz40997hjMdffUEvo
+nvKr1T/0HMZosKE9MmjftPR+fEFLQfpOQ2RMdv559ZPOjrBuw3N/XF0myFw
bhm6RUc/dLYt7vpBz2GIy21Kr1K/09HH8qdOEfWNnt0Q2368HiV/paOXnI55
YX2mZzPEVLxh+j/R0cO6jzH1j3QZe65ky0jXBzq6SbzI1ep7egT23LXkKaPe
0dFF1jwfLb+lZ8WeGyBeWq/p6KRVVrT0v6JnwZ5LMcKrv6Sjn91pUsL1gh5u
CN+2wmvU53T0/3/gL+oZPbMh9NqPx8hP6eiVmY6/sh7TM+G+er64lf8RHT1q
/+AY/SE9I+6ryQ1Kuh7Q0S2a5V+r3qdnwH2Fgz/qHh2Nx/NY+S49PfbcqUOv
rdt0dKrZ81v7b9HTYc916H9aj6WjXxeuU8oVoKc1ROyvXOvUm3T06fN/wqJu
0NMYYt/SW+NkPx29rte+N9Z1empDzCk7u43/Gh0dnchxRr9KDzNE3xs1Sruu
0NGYa+vVy/RUhqg95GfqqEt0dJmoG9HyRXpK7Lk0u99a5+nodPgC9J+jp8Ce
03uc1c/S0R/GVSvjOkNPjj1XP+sG9TQdfSHr9zRRMfRk2HOvr46XvXT05sPb
31kGPSn23PSp7fyCjp7Uqss5/RQ9iSEG5a1U1nWSju70LeNG9QQ9sSEaeD+l
jTpOR1ecf3GCfIyeCPdV183vrSN0dKbIie39h+kJcV/9a39eP0RHf7lctpzr
ID0B7quVaTepB+joq33fpYvaT4+PPVfxrCbvo6N3JFv/wdpLj4c9d2tcB/8e
Onr6ltYX9N10yRDDR5Qs79Lp6O41U21Wd9H/CdE0w6v0UTvp6GpPzYnyDvpf
IYriQLe20dERE0d19G+l/xEiWZPmF/UtdLSVvVgF12b6byGev0+6Rd1ER/uP
P80QtZEeFMKceXKSvIGO3tNu2SdrHf2XEKsLDuvkX0tHz4prdElfQ/8pxJiz
BSu6VtPRvRcn3KquoscJ0Up9mDFqJR1tL310sryCbglRMsGiz9YyOtrmG9jZ
v5T+Q4iwdfUu60vo6N8D81ZyLaZ/FwLzb5u6iI6+lepupqiF9G9CnLl3YIq8
gI7ev2PuF2se/asQ68f07eKfS0fPrVvrij6H/kWICeE5K7tm09H9Xwa3qW76
ZyHa4w0pahYdXXfq3qnyTPonIcq1mPXVctLReXP36uqfQf8oRPovUVf16XR0
PEOu4ppG/yDExznWdnUqHX2/ky88agr9vRAXi+6aJk+mo4/8nv7Nmkh/J8SW
i926+TU6etHyKtf0CfS3Qkx2hFd1jaejh5T/ukONpr8RokuSK1mixtHRjQJb
p8tj6a+FqLxp8ndrNB1daFin7v5R9FdChP9/UI+koxOny1DNNYL+Uohvjz7s
VIfT0U92n88aNYz+Qohr4zfOkIfS0ScbTvhhDaY/F2Kn3K6HfxAdvfxtaZ8+
kP5MiBlHUyuuAXT0COebXWp/+lMherQ5HRHVj47G24dT7kt/IoTyY4xlOejo
Yqdbqv7e9MdCZFsY6dd70dEpuqeIcvWkPxLiZ4kXuqrS0S8lQ47qQX8oxM2r
K1xydzrau3pEnNWV/kCIvf2b9vR3oaPXVC5yQ+9Mvy+EO0WS6q5OdDTm5G61
I/2eEI5tx7NFdaCjW49aMlNuT78rRE28gVht6ehSmRr28reh3xEi5/P8N/XW
dHSa/fFruFrRbwvxd9L9PWpLOvpd08PZo1rQbwlxx7Zgltycjj73sf8vqyk9
VoiDJ+v09jehoze6cwf0xvSAEPM7/K3hakRHa4Vv71Ub0m8KMeDXvhxRDejo
Dudnu+X69BtC1FvqCFp16ejyvewOfx26X4h8ZXPE6rXp6AyJftldteg+IeLj
AFZr0tGf1u+2Rdnp14V4MNg1W65BR19W1N9WFP2aEMdSK338Ch297UHWW3o1
+lUhluz6XtNVlY6eOu7aPrUK/YoQQ+vvyBlVmY7umnXaHLkS/bIQjV93+WNV
oKOrHK7U11+efkmIwtMz3dbL0dFZWn2u5SpLvyhEkryX9qtl6OjvXzfniipN
vyAE3o7myqXo6OvzOvy1StDPCzwgyvXzR9LRevF0d/Ti9HNCrPz/LwgpRke7
Lp89oBaln8UcXLk+d1QROrpn3+h5cmH6GSFaVGzzzypIR1dPVqq/vwD9tBCR
eODr+eno7Fte1XHlo8cIkXKE96Cal47+ZV+dJyoP3SvEq/Sj58u56ejAk+ZS
XE66KUTM3mID/Db6/388Ukt2T89Bx5xd2/hZXVd2Onp29lOH1Gx0/PSMe78s
b5RMR/c9PmyBHEE/JUTbmY3jxWWho2u3KzTQH04/KUSZgonu65np6NxxD+u5
MtFPCJH27NHDakY6+t+iRfmiMtCPC/G+x6CFcno6+m6p+vHj0tKPCXE+fr5B
/jR09KHr0gM9Nf2oEJvW3q3vCqOjFww8eERNRT8ixMSq8/JHpaSjB6Xqt0hO
QT8sRKd7tRLEJaOjG+zIOdiflH5IiIpjfj/Qk9DRBerGNnAlph8UIlO456ia
iI5O+HJWgaiE9ANCfDnQa7GcgI5+NKV6wrh49P1CXGmebYhfoqOP54p7qP87
EvJ9Qmz/7Gvo+htqCb1U7Dqm/qF7hJg2Z0bBqN90NN7elshB+l4huhWtmiju
Jx3d5Hf4UH8cfY8QVS9+faRbdHSR5VcauX7Qd2PP4QGtfqejk5WfUijqG13H
nkvcean8lY5+frNC4rjP9F3YcxszDPN/oqONoR8f6x/pO4XYXf1CY9cHOnpV
2k0n1Pf0HULMfDSh8H803WlYzG8bxnFkCxGSpbGFiOzZSjLWCEWEkHUqRFkT
skZMZC1CRFFEo5D81suWnTKW+osQRfYlhshzzzzn7+Xn+L6jzrnnOBwu9Xt0
5lCdT6zqHfoJIv9VPaoZ3qIzG+/d69+gHyfTffvUYnRm4z17bRF6Mpnu12te
ozPX3rzCQf0KPYm958Z771MVojOX2HWtbniBfoy950prLtU/R2fOulJUmFqA
fpRM9+W1z9CZjffkNU/RE8l0P16dj85svBeveoKeQKb78IY8dGbjPXh9LvoR
Mt1/T32Mzmy89659hH6YTPfdNQ/RmY333NUP0OPJdL9dpUdnNt5rN+SgHyLT
fXZ9Njqz8R576j30g+w99yrTS3sXnTnpzK6Lmjvocew9t25+Z/VtdOb1o4fF
qW6hHyBa0KJ1TcMNdOapn8qX6a+j7ycaKeUVpV5DZzbeQ9dmoe8j0/1zzVV0
ZuO9c/UV9Fgy3TdXXUZnNt4zN1xE30um++V6Qmc23itPldH3sPdcj9PjtBI6
88nKkZc1InoMe8/pNV3VAjrzpiP9D6l49Gj2nltgY2G4gM5svCeuz0TfTab7
4ann0ZmN98K1Gei7yHQfXHMOndl4D1x9Fn0nme5/q86gMxvvfRvS0HeQ6b63
/jQ6s/Ged6oOfTuZ7ndrU9GZjfe6NafQt5HpPrf6JDqz8R63KgU9ikz3tw3H
0Zln7/iwUp+MvpW956ZdL0lNQmce3DlhgvYY+hb2nisPy9IcRWdueWeCozoR
PZKozoHuR1QJ6Mx/59S2NBxG15Lp/rU+Hp3ZeO869RD6ZjLdt9YeRGc23rPW
xKFvItP9avUBdGbjvWrVfvQIMt2nNsSiMxvvUev3om9k77k0+X3qHnTm4Wv2
+Whj0Dew95zHkuuaaHRmu2aePdW70cPZe+5D+0TVLnRm471oww709WS6D63f
js5svAedug19HZnuP2uj0JmN9541W9HXkum+s3oLOrPxnrMqEp09AIz3mw2b
0ZmN95r1m9BXk+k+c2oEOrPxHrN2I/oqMt1f1mxAZzbeW1aHo4ex91w/22Oq
9ejM1Sz+1jesRV/J3nNPHq/Vr0FnLjyR/il1NfoK9p4L3TpFuwqdWXYLuKUJ
Q19OdKrhwD7qlejM+4uaJqlWoIeS6b6xIRSd2XjPWL8MfRmZ7henhqAzG+8V
a5eih5DpPrFmCTqz8R6xejH6UjLdH1YtQmc23hs2LEBfwt5zDvfW64PRmd+U
Hf+SGoS+mL3nboZP1c5HZ74SO/WOZh76IjLdB1YHojMb7wGr5qIvJNP9X8Ns
dGbjvV99APoCMt33TfVHZzbe89X6oQeT6X6vRoPObLzXq56FHkSm+7yqmejM
xnu8huno88l0f1c/DZ3ZeG83dSr6PDLd19X6ojPfKPG+p5mCHsjecxe6uqgn
ozMf3VQrRTUJfS57z40vbmSYiM681u7SRv0E9DlEQaUHvqeOR2eeciVkhtYb
fTaR+64x2Zpx6MzGe7bqsegBZLpfq/JCZzbeqzWMRvcn031avSc6s/EebaoH
uh+Z7s9qR6EzG+/Nakaia8h0X1Y9Ap35RJ7ZKZU7+iz2nkt+1sQwDJ15Y8iF
TXo39JnsPTdk94/UoejMMxoEzdIOQZ9BpvuvmsHozMZ7r+pB6NPJdN9VNRCd
2XjP1aBGn0am+636/ujMxnutqa7oU8l0n1XbD53ZeI9V44LuS6b7q+q+6MzG
e6sqZ/QpZLqvauiDzmy8p6rvjT6ZTPdTU3uhM/v7+flpe6JPYu+5HuoHmh7o
zAMrqwaoHdF92HtO/0On6o7O3PxITlNDV/SJRBYLTkbqu6Azl7lG/ErtjD6B
TPdLtZ3QmY33SjUd0ceT6T6p2gGd2XiPVNUB3ZtM90cN9ujMxnuj+nbo48h0
XzS1LTqz8Z6o1g59LJnuh2raoDO7jas/SN0a3Yu951p/TFO1QmduzR4whpbo
Y9h77lLCVn0LdGbjvc/U5uijyXTfU9sMndl4z1PTFN2TTPc71Sp0ZuO9TpUN
ugeZ7nMaGqMzG+9x6huhjyLT/c3UhujMxnubWmv0kWS6r6lpgM5svKeptkIf
Qab7mar66MzGe5mGuuju7D1Xf/82vSU6c5WXS/6m1kEfzt5zpz3namujM79Y
3SFPY4E+jL3nRlUdqq6Fziw2fXFWVRPdjSjF+B+CmqMzx/Ix2/XV0YeS6T5l
ajV0ZuM9Sm1V9CFkuj+pqYLObLw3qa6MPphM9yVVZujMxnuShorog8h0P1Jf
AZ3ZeC8y9V/m//tA9p6r6DZPW/5/V2AuyrZ9ovmLPoC95w79dVP/QWe+ND83
Q1WGribTfUfDL3Rm4z1HvQG9P5nuN+p+ojMb7zVqf6C7kuk+o6YUndl4j1H9
Hb0fme4vqr6hMxvvLRq+oLuQ6b6i/jM6s/Geou4Tel8y3U/UfkRnNt5L1HxA
dybTfUT1e3Rm4z1E1Tt0J/aeizphZ3iLzpwwZcNu/Rv0Puw95zCtkq4YnXl1
mVOwtgi9N3vPsS80mtfozJNiP7urX6H3IhoWcOuCqhCd2XiP0PACvSeZ7g/q
n6MzG+8N6grQe5DpvqD2GTqz8Z6g5im6I5nuB6rz0ZmN9wJVT9C7k+k+oCEP
nTk5dWWMPhe9G3vPhY2vrHuMzhw+ottC7SP0ruw9Z2PxXPMQnXlaSfFI9QP0
LmS636fSozMb7/UZctA7k+k+nz4bndl4j093D70Tme7vae+iMxvv7WnuoHck
03099W10ZuM9PdUtdAcy3c8z3EBnNt7L019H70Cm+3i6a+jMxnt42iz09mS6
f6e5is6scS7wUF9Bt2fvuRqcqLqMzqzO293BcBG9HXvPJQfF6gmduWnI8Go6
Gb0te88NabNEK6Ez/7KqUKgR0e2Iigv/81QL6MzGe3MqHr0Nme7LGS6gMxvv
yekz0VuT6X6c7jw6s/FenDYDvRWZ7sNpzqEzG+/Bqc+i25Lp/pvqDDrzkPZb
OhrS0Fuy99wvv/360+jMttfV5jodegv2ntujCtGmojMb77VpTqE3J9N9NvVJ
dGbjPTZVCnozMt1fMxxHZzbeW9Mnozcl0301XRI6s/GemvYYuopM99M0R9GZ
jffS1InoNmS6j6ZKQGc23kMzHEZvQqb7Z/p4dGbjvTPdIfTGZLpvpj2Izmx2
/mORJg69EXvPbbgxVn0AnblgbOIl1X70huw912p1F0MsOjP/deJB/V50a6Lj
Fx1r6fagM+/ZXme5Nga9AZnui2mi0ZmN98TUu9GtyHQ/TLULndl4L8ywA70+
me6D6bejMxvvgem2odcj0/0vbRQ6s/Hel2Yrel32nntE3uot6Myvju6/oopE
t2TvucVLuxk2ozPTwNHx+k3oddh7rp5DbV0EOrPxHpd2I3ptMt3f0mxAZzbe
21KHo1uQ6b6Waj06s/GelmEtei0y3c/Sr0FnNt7L0q1Gr0mm+1jaVejMxntY
mjD0GmS6f6Veic5svHelWoFuTqb7VoZQdGbjPSv9MvTq7D03s5WlLgSd+XC3
8jDtUvRq7D1XMe+dZgk6c1j2mYnqxehV2XvuUNQ11SJ05onzZ/cwLECvQjTU
ZVCCPhiduUet5nV1QeiVyXQ/Sjsfndl4L0ozD92MTPeh1IHozB+Gaq+r5qJX
InpirelpmI3OfOO1a6I+AL0i+351tkk9nT8689H1pau1fugV2HtuTPYHjQad
eV3LlEnqWfA/mYI/b7ihmgmXy+QrT+tlmA7/lWlElPNR/TT4j0xOU6zr66bC
ZTK1c/iyRusL/5bJuuzWR80U+JdMlW8em6yeDBtk+rp37U3VJPinTM/9J/c2
TIR/yHS3Z69j+glwqUxClXpWuvHwd5nYH99arTf8Taa9Cdc+acbBX2XauPDI
FPVY+ItMi9Vht1Re8GeZZlpO6GMYDX+SaXRBtyS9J/xRJtdUiwY6D/iDTB3Z
A187Cn4vk82Iy581I+F3MpnbHPRVj4BLZPr5dtltlTv8VqbXmV5OhmHwG5n0
EZ2S9W5wsUwXvc2tdUPhIpl0bV6t1w6BX8sU9136ohkMv5Ip8nLsVPUguFCm
0J2L76gGwi9l8p/u4WxQwy9kGtel/XF9f/i5TIP+VW6oc4ULZOp2tyBc2w9+
JlOLOO6rxgV+KlPtwOhp6r5wvkx/nILvqpzhJzKVmLv3NfSB/5MpN7fNCX1v
OE+mrKQKjXS94FyZzi59skHbE34s05HBGd80PeBHMm232jFd7Qg/lGlV4dx7
qu7wA5kC04e4GLrCepl81rZM0XeB78vk5vmnka4znCNTT+M/mO8EZ8vEvm59
13SE78lUT9wyQ+0A35Wp4hb/bFUH+I5Mn3wG9DPYw7dlemrf9KS+HXxLpluG
n411beGbMl24dj9CawffkCkp5lSppg18XaZozaaZ6tbwNZnWO87MUbWCs2Ra
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
+do7uKVIzXJ3zqisuIVIYvVSlboEbi7SlD7jH4e9hZuJ9Gf2hR3cG7ipSAf2
2Yz4WQyrRHK+FVbVUbGNSE/KCii4CG7C9sRhwIpTr+HGIjWZktij5BXciO3J
1qqf7RQ3FGmiFHBiZiFszfbk481Z8S/hBiLtbd6x+dMXsBXbE89teY0V1xfp
8Zovu7yfw/XYnqR5jdpVANcVyfrluerZz2BLtif1Gl2upbiOSOMGLg8b9hSu
LVLpovxeG/NhC5F2J/b7eukJXEskx4fxJ//9B9cUSV/FzL+v4hoiLeqpaRma
B5uLVM//2pNzuXB1kdL32Md8fQxXY3tyPdKzs+KqIn0xfKgR+AiuwvbE3vNq
8kO4skhdfNJXv34Am7E90Vo52SquJFIQv/S7rx6uyPbkfW7q/vtwBZFSVc6z
c3PgfwKNGhnXqoHicoE+hP17Ojob/ivQ1tTpe6PuwX8Ecii4PObWXbhMoNt1
7CyqK/4t0Nz+m64NugP/EqjmgpK1a2/DBoFOHB7RV7oF/xRo+P3UH79vwj8E
elupblovxaUCbe6+aO7iG/B3gexnPWyTdh3+JtD13b2ef7gGfxUo4GrsvvaK
vwhU7UfZWP8s+LNASXa+dRKvwp8EGjKebjy/An8UqCjCNryp4g8CbcgM7+dz
GX4vUJu3RYaYS/A7ga40HnZGfxEuEWjW8JR5lorfCmS2wqLdSILfCJSQEvRy
swwXCzQgP+dAlgQXCfSyluN4M8WvBVrrElO3vwi/EqjlfMOtlQJcKBAd9Nl4
gYdfCjTtntD/Bwe/EIj9kpd1U/xcoENd1p4LugAXCOQ6vTDoZCb8TKBnOwa3
f3sefirQqktJr9oozheo6TfzQzMy4CcCia0CJx46B/8n0OSxd+vnn4XzBPoT
3uVuI8W5Au0/t3PTuDPwY4Gci74P2JkOPxLoP+vxf++mwQ8FWj70wvmaih8I
1HiZzUK307BeoAvJYQ4bdPB9gSbkFRRdTIVzBDKYDzhcfgrOFmiPU+IkZ8X3
BOo1t6r1spPwXYEe7w/IPpsC3xFo6e2b2i8n4NsCWf91GNxJ8S2BznXc9m/O
cfimQON8v1xISoZvCPQ9ymvxqyT4ukC75XOdWiq+JlD3zw3fTjkGZwmkb7E8
Yd9R+KpAC0fnT3mcCF8RqN66fo2sFF8WKC09/r5nAnxJoNGFlbZuPQJfFOhz
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
Xu155UEo3JenCT/2rqqr2JntiV1Z71HLYCee9oyf8k0bAvdhe7JJPnVtKdyb
p0eZLQMqK+7F9uTtelv1ErgnTw2aFOWHLYZ7sD0Z7raHWwQ78jR2xYnRPxfC
3dmepNSq5ai4G0+78udnBS+Au7I9schZcyoY7sLTfZfuziVBcGeeFs6PLrVT
3Imnuod+6mbOhzvylHZv4pz4ebADT54VhNZPA+EOPH3u0qygseL2PG2bvibW
ey5sz1PnnS+9ds2B27E9uTSodvZsuC1P878du15LsR3bk9bm64cFwG14OjV2
rstGf7g125MNd35e8oNb8fT+XOf0fxrYlu1J0Y7Avopb8tSh4Xe70FlwC7Yn
Q71fnJsJN+dpzrLM/V9nwM3Ynhxv4t1ZcVOejuettAycDqt4Glaj4GbyNNiG
pzdO6g2vp8JNeNo0N8HVVnFjntoeqPLb1xduxNO12/5n90+BG/Lk9/fG/NzJ
sDVPVTs52DdQ3IDtiW9U4ehJsBVPg7d9jovygeuzPZHHTLg1Ea7HU/jns/Wq
K67L9qRlwzuDJsCWPF0eHRqxdjxch+3JuidqyRuuzVOlMy5/fo+DLdieFB7K
6KW4Fk9qq0oLFo+Fa7I9GTSrQ5oXXIOnNUuyXn8YA5vz1OJYu/j2iqvzJD/S
+viPhqvxNLXaB6tET7gqT+W9PO4994Cr8HQwIG1zU8WVeXKJrT/IZxRsxtPT
G0vKY0bCldie/H6cqR8BV+RJ1cFpkaXiCmxPJh3oONId/sfRpC3lxZuHw+Uc
lQnTjmQNg/9ytO/Dpclmiv9w5NSsTcP+bnAZR3mjInJWDoV/cxS6+m3khSHw
L44anXYf8mMwbOAo8/mpCt0V/+RofF1LPmgQ/IOjn+qFS04OhEs5iln4oPPb
AfB3jnom9Cxpo/gbRw/1exNnqOGvHC2pXOZ7qD/8hSOrHlMa57vCnzk6q5H1
jRR/4mhsTMuocf3gjxx9y1rvttMF/sDRrp+vK93rC7/nqFs7N7Gm4ncc3Z9w
IsTNGS7haMHmWt02OMFvOarLzX9/sQ/8hqPTJdnHynvDxRx52nSf7qy4iKNP
7tE2y3rBrznatvLnw7M94VccdTo1cfuXHnAhR3ef8sM7KX7J0bzazarMdYRf
cGThukZO6g4/5+hk0MvQV93gAo5GxA9ybKn4GUfvso99nNIVfspRZEXz4/u6
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
ps2PPpXoSDVarnpkNk2kt6kx/WHSjgINHaHG/v6+emPVdLgaDw7YrLyspMPU
aP77/btBCnqjGlO8NN6ZMjpUjb3nVty1T6ND1Ci07O8iS6XXqtFk459sq+N0
sBqTXqBH4jF6lRrRTltSmx+lg9S4fWxMq93JdKAajeo0ijY8TAeoMX5eoUFY
Er1UjZ1X49b8PkgvVuOG7cyKoATaXw2jyLZzKuLpBWqM+fDy4fz99Dw1trmm
ub7YR89V46pq8UXPWNpXjbqNe/S9F0P7qDEq4Lt8/B7aW43wO6fbXt1Ne6lx
uWdo7LAo2lMN/Vin+md20tPVGP69bmivHbSHGhs9bnxRbqenqHHh1O75Ntto
dzX+mU8pPhxBu6kxZK35pJZb6AlqrH9SfCVmM+2qRvagI47GYfRYNX4n+Wm2
bKRd1HD819n6XyjtrMYan4r44PX0SDWyLkoNv6yjndT4YbU6bNFaepgafcMH
/igLpoeosfLVv0Xeq+lBamQ45zx/uJJ2VOPriW1TJwXR/dXoWX98Xl4g3VeN
5f5Nho5cTvdWQ7hxP/3cMrqnGp/sEmz7LaUd1Oge5Z0kLKa7q7Hkk1XTLoto
OzVUbm8iji2ku6hRLip+t15A26rRtVlAQNw82kYN/6Derxr70dZqyO7/nLF9
Dm2lxtu+5/L1fel2anSK3zQixIe2VGPer1FZ373p1moc9zTqtmwWbaFG2dn8
I29n0uZqdGiz18zXkzZTwzd02o4n02lTNY48a6U3dRrdVI3nw54H5U+lTdRo
ezTl3egpdCM1vGsv9L7oThurkTS3213HSbSRGsVXPo/OmEgbqtGqU2Z2twl0
XTU8t63tccKVNlAj4d2Q1HbjaH01Ho2t3SphDK2nhrny6u5mLnSNCtMa7jTY
5Uz/USFuqduauqPoahXu3zat2DCC/qmCaY9Hvr+G01UqTI5Jehg4jP6mQszX
2a7lQ+gvKtyZYnPRbzBdqYJJ5vs+zwbq+q/CxBYa+XRHXf9ViApe0bawv67/
Ktx61C92XD9d/1UwHvjH8EofXf9VGJeI9UN66/qvQuTf8C+neur6r8J17zHz
e/TQ9V8FQzQsltvr+q+CS/tCN+vuuv6rsDUs7kqSna7/KuS+9HRs0VXXfxXq
jGqrie6s678KI1NfdjCy1fVfhc310uI32+j6r8KlBYsb/rXW9V+FWnkOYas6
6PqvwrCu36s+tdf1X4UNO08vWthO138Vzn9c/7zUUtd/Ff5OcJrq1UbXfxUG
CXXz7rfS9V+FdU1uDJlooeu/CmcCd6dfM9f1X4VfdyfbOrXQ9V+F/n3Mk842
1/VfhdVxxU36mOr6r0Lmj+QIdVNd/1Womu73u1MTXf9V6HOmc8CRxrr+qxDU
qqLMopGu/yqkh0gzYo11/Vfhy9NV+Q0b6PqvQo+hA0dsra/rvwoByf9O6Rnq
+q+CplaO3dq6uv6rUOG77chXA13/VeiW42q2pLau/yos7thkx+tauv6roIi4
/+8/PV3/VXj/5kDQo5rj//chFTqP8X7n/pdOVGGB3Mr75m86QYUTDd4Ujqqm
41V4vVgx+sJPOk6FjvnLsvv/oGNVmGvfu4f0nY5RISX65/Gu3+hoFV5+zrY4
/oWOUsFq8qbdlp/pnSrMzhhlEP+JjlQhubnRmiYV9DYVnq3K/xhZTkeoYFkU
42vwgQ5XYdaAaQ/Xv6PDVEhMaOX64w29UYUnv58h4DUdqoLFrJQ+78voEBVm
nF8gn/OSXqtCfNtubZ++oINVeLjx816P5/QqFcxKTxoWlNBBKkwdsXb9mKd0
oAqxKUO+XHpCB6hwt07t+YMe00tVaDr/6pOTRfRiFdyv7XCzf0j7q7Cns9uV
tPv0AhUKIk0dre7R81RoXF6kPlhIz1VhwvikDs3v0L4q7FLPjo+6TfuocLOx
TUPDfNpbhQbL32/adJP2UmFsobqqOo/2VGF7rxWLgq7T01W4Ftvv+certIcK
9ap+T5mfS09RwXkarj/Pod1V2JIVPsTzMu2mQk7LMel3L9ITVKi9rqHteNCu
KjgV30nMPU+PVWHT4Lgmw87RLirgkGfE6bO0swp6em1/9zxDj1Rh6OyXy5RZ
tJMKoZdOlHU8RQ9T4VyHxTMOn6SHqPAn3CHfPIMepMLA19+cYiTaUYW1o0+f
aiDS/VU4nbbebouG7qvCz/pOR2pUdG8V+i2qaxaspHuqsOpmXuRnOe2gwslu
u//5y+juKnyLmhxUdoK2U6FXZYt3s1LpLioETiqe9TCFtlVBlJIL3Y7RNipU
NvMbnXeEtlbBfmXn7BHJtJUKSx98dDh3iG6ngrqfdLxvEm2pwsf4VRbCQbq1
CnbVjrs7J9AWKiya+a/2sXjaXAV59uXg1vtpMxXetdn2cd8+2lQF2w2uvo1j
6aYqzH9u8nBbDG2iQurw++P099CNVHh19ADW7aaNVbA28O7zfRdtpMIcPyv5
0p20oQpHc19bvo2k66rwopNi7+zttIEK7bYvM3yyldZX4b/3vdZPiaD1VDg0
7ufnW+F0jRJPldnzRm+m/yjRutGmJ9hEVysxc9koN8eN9E8lDhbUv5IeSlcp
8bhH/oBu6+lvSrTcG6NOXUd/UWL6N48O7dbSlUrsn9oq/kAwXaHEg8xnxs1W
0+VKNDdP2bRzJf1eiSlrFlTVCaLfKrH3sd2iDYH0ayUKB35+9jOALlOiSdLJ
KYHL6FIl3GrWXP+whH6uxO7/hgzxW0yXKJEP/fQSf7pYiYZWVztNX0g/VsJ1
847EO/PpIiV2lE1sMm4e/UCJvFGmETlz6XtK1D9RVD14Dl2oxBjDpGWnZtMF
SmxbOLvMwYfOV+JqXscZcm/6phJ17d7f6jCLzlNi1C61U9JM+poS4RWBp8w8
6VwlLk/sZxc9nc5RQl/8nVx/Gn1JieFN0XzzVBpKbFwRHvlnMn1eiQv3XP6t
dKezlajp0zDokxt9RonB+++8XTCRzlIi5Oe+WaXj6Uwlzs7wLJzpSmcoUX3G
cvT9sbSkxIDWL89OGEMLSgSvP+FwbTStVuJUyaLjw51ppRI/hjpYnB1Jy5Xo
e+RbVO8RdJoSK/VP11YPp1OVyJizPrjTMDpFia85wz8mD6GPKtHTpq6vxWA6
WYnlW/Me7B2o678SwtuocQ0ddf1X4tOYyYjor+u/Et0VLfro9dP1X4klxsWy
NX10/VdCuSTZ8msvXf+V+JA/d+/inrr+K9HFobPhawdd/5VYuOdjyH/2uv4r
kfZF/FzUTdd/Jd5MXjXP3U7XfyVsTjo+udFF138l/Mz+TRzVWdd/JY6vvpxz
vpOu/0qUFW0d0N9G138lOji6qkVrXf+V8D1o0qFrB13/lTjy597+lPa6/ivx
fNYBY8t2uv4r0fbCrE37LXX9V8K7nVWVSRtd/5VI2vTaP7KVrv9KFJfKn9W2
0PVfiVYjl01Zb67rvxKex3tdrzLT9V+JA3V/Dg5oruu/EkXzs6V3zXT9V6LF
9Y2d5jTV9V8Jjy6jEotNdP1XYt+O+k08Guv6r8S98ltbbjfU9V+JZhNiql2M
df1XYrLGY9klI13/lYgxaVU2sL6u/0rcWf5s+sl6uv4rYXL32K3udXX9V2Ji
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
m1zoUvztWANW2+ST+Ojyk3qcYpNx/wRM9MvGKpskj2l48kAWTrRJ6Y6LA/to
cbxN6jfU7srX4FibfL10hkeXDBxtk8Tz7bLNaXiTTX71utuwlRpvsIlr+tZN
6Sl4nU1G/bv4Tf1kHGWT2CCv8JgkvNYmJ/ZV3qqWiFfbxKXFgW9Wx+OVNhm+
+sczL2JxpE02Xftq6OIYvNwmvwysXXhvM46wibPhTNdZm/BSmwz9KNX4xwYc
bpN1syY3mbgeL7LJ4aMt4s78iMNs4tSx/P3wKLzAJoM2WSIOr8WhNll7N/R+
vzV4rk0O+HebUbAKh9jkbe6Tc91W4lk28amzZ7g9EgfbZFXYyiL37/EMm+z/
deAX2u/wNJu86l7d9kkEnmITb9Xx5glLcZBNvn8Sl1RzCZ5kkz3jAp2jFuMJ
Nnmxq/GKVwvxOJt4ffr7P0vDcKBNli3PnlWxAI+xyc7L/7s8Zz4OsMkT704B
f87DI23iqX0gQXOxv00Wv9ne61wIHmaT7dOWbRk1G/vZ5J8Dfdr88j88xCZd
21SlDgzGvjb5NkpcCmfggTbZemPDmi+mYx+bPBgy4umWqbifTTpb6s7rMAV7
2yS0xrk/soPwf/8na5+bHth0MvayyZ3jU35RTcQ9bdKxc5t+tSdgT5uExP61
ff043N0m5r/t7d8G4q42uRkQpln+Ne5ik7bbPes+Ho09bBJc/8WP8wNwJ5vk
hO97eXMk7mCT67+t+XbaCNzOJq2+HFJ+cTh2t8k0dc2JXw/DrW2S9eLkiRI/
3NImVyYlDRwyFDe3SbPC8bt+HozdbPJNMzePXr64iU00K6/qtg/EjW1y+Q9D
Q48BuJFNmgyYs8nYX/n+22SivvOb5v2U779N1O//Waz2Vr7/NjkfvPNW3T7K
998mjY4s/2ZzL+X7b5Ox7fufcfJSvv82UW14P2RlT+X7b5Ozt4/ufeapfP9t
Um94dNeFPZTvv01GOwKMd7op33+rxH/csElwV+X7b5VTCy7G/t5F+f5bpfbp
zPfjOivff6uM6DYj4vRnyvffKtGJ7e5/1Un5/lvl+KM70w91UL7/Vqk1dus5
7/bK998qw3YuHr6zrfL9t8rGT7yKPndXvv9WKY6o9LS2Vr7/Vql+qcjaupXy
/bfKkD4/Nte0UL7/VvlR81VSw+bK998q8upj5zg35ftvlfdTzkQ6N1W+/1YZ
WJTyz5pPle+/Vda0mjzr30+U779Vita2uBzeSPn+W+XNn3+OetBA+f5bpd9g
i8yur3z/rbLCFNrrWl3l+2+VwurdtkxyVb7/Vvk35Enr0trK998qvY/tTh3x
sfL9t8p3n610OVpL+f5bZXf0wDU+NZXvv1We36/2dLez8v23ypejjs/tUV35
/ltlaV7cH46PlO+/VX6qGxjYzkn5/lul/JpHbJ+3OR8sVplh+GlZl9f4oFWu
zuo3vdW/uMgqUzoeHdbgOd5vlbK7ozyrP8GFVpm05UKzl//gPVa5EDa9+v0H
uMAq43rcqfjjLt5pldIniy6duYXzrTKm4N9Dh2/g7Vb5dXlUbsF1nGeVUX0/
TrX/gbdY5cSb5NXaMuywyvCDzecmXMQ2q/wSZf466hy2WGXo0K59l53FJqsc
rrG73dzT2GCVQSUDXL85gfVWORB77MWoY1hnFZ/RX/858CjWWmV//bKSLwRr
rOJ9LnhnhwM43Sp71Pezmu7Haqt4TV66sfZenGKVnc3eLHq7C6us4nl1fdDj
fJxole161yF/bcPxVun6v7TPL23BsVbZ0r71pyfsONoqne/Y3v1swZusYnf0
uLfdiDdYpeO3hb8Z9XidVczdBv+szsJRVmn7+IRlswavtUrOznGJK9Pwaqu0
+u6P7xem4JVWyeoT8r/gJBxplWavK0aOj8fLraIp+s5rWAyOsEqTH9616rsJ
L7WKevDmWl3X43CrNHJu8KR1FF5kFdUxzZWGa3CYVerFtC12XokX/Pf3adSW
bf8ux6H//T2q92XGg2V47n9/f0p/jroWjkOsUjPVb0HpQjzrv78vE38df3QB
Dv7v74nbpAF75uEZ//39uHK9U24Invbf3wvdvAa6/+Ep//19mPn4VeIMHPTf
34O2K/76cSqe9N/93/ro14ggPOG/e7fF7pk3EY/7777nf2KYMg4HWuXZ57qY
0V/jMf/d78MOy3wDcIBVHudvm/blCDzSKouW9R7WaRj2t0pFr0M9mg3Fw6yy
oHJ4M1df7GeVe/tLq733wUOsMnfNNxVP+mJfq9wadPPird54oFVmVfv20OUv
sY9VbhQ/c5z0xP2sMnPz6pQD3bC3Va6NqLE6vwvubZWprolzzJ9hL6v8fqbJ
1+kdcE+rTE7O8Y5piz2tcnG8R7vVrXF3q4xv8lOdxS1wV6v8Vtb3xf/ccBer
fJ115PqET7GHVc5MH1UyvBHuZJUA9ws/9auPO1jl5M1pWd1ccTur+Ftvb3D/
GLtb5di8RYs+qYlbW8Wvy7+Ta1bHLa1ypOKHwa/e6z+4uVV8d7h8XlGF3axy
cEly4z9f4SZWGeDV/N1vL3Fjq/z80nS3+BluZJW++z7/be9j3MAqe1cV7N/y
D65nlV4DB1iyH2BXq+xyOpaguotrW+WLo2O+X38Lu1hlx8bLwctv4JpW6eYf
PHL+dexsla2173857Q9czSpdfl3S6usy7GQVR9LrmkMu4ncW6TRu/WOvc7jK
IpbGrlc+O4tfW6TdZfXR5qdxpUUMma221T2BX1qk9TRbutMx/NwiutY9op4d
wU8t0vzG3vl3DuHHFsk0+47/vQg/tEjTuSd8Tu/DFRZJ8xjX6dAe/MAin/x9
pf7OXfieRZK3zX5lycd3LFI/vOJmxjZ8yyIJPb87HbsF37RInRdvd6+x43KL
xOzdlBNuwdctUmtl/ZjZRnzVIpt8NEsn6fEVizi/d582IguXWWTd4dyvfDT4
kkWcNvTs0SMNX7DI2mE/u7VLwecsUuXiV+3TJFxqkZWnTv9dKx6fsUhlwsSL
r6PxaYssD7x+8J+N+KRFnjea5yhfh0sssuzio+TzP+BjFnmSEbnq2GpcbJHF
Uz6as28FPmKRf1rGjslbjsUi3/7ZyDtnGT5okfvGrLYp4bjIIvNCOtTZuBDv
t8jtTtuef78AF/73b5/7va4vmIf3WOTm1oPHp4fgAosELxr+U+D/8E6LXPcs
1Q6dgfMtMu1Z0IbeU/F2i1zZfWNh5yCcZ5GgyAWTW07EWyxyqd8z3/rjsMMi
E96u6lLta2yzyLlDzo1fjMIWiwSuS3h71x+bLHLWr8ndK19hg0VG18op/XUI
1lvk1InP9ssgrLPIiPh88y4frLXI8TF9E2x9scYiXzU8sjyzN063yNHzI4Pj
v8RqiwxOPz/iB0+cYpFDQdO+XNoNqywysMXtlnO64ESLFF1bWDPoMxxvkX6G
l49GdsCxFimc9cPvA9riaIv07uhy1LM13mSRgruqvPYt8AaL9NzSLL2JG15n
kfww0w8ff4qjLNK9x+fzqxritRbJe7Jr3KN6eLVFPi/w8blZB6+0SO7yXzpe
dMGRFvms75j6JTXwcotY31yq3F8NR1ik/cGZN7e9z/7gpRYxRt07ZajC4RZp
M3TJ7tRXeJFFsmu81m96icMs0qJkXfSKZ3iBRbSxdZaGPcahFnEbrZ468x88
1yLp9Vt9Ne4BDrFI43PW7l/dxbMskqLu7uZ9CwdbpMHkvR99fgPPsEhiM9+/
W13H0yzierXkQoM/8BSLxOrHHqxehoMs4vK/K/aXF/Aki2xuPzv5/m94gkVq
3Pl75dUzeJxF1jsiQs6ewoEW+ejbt6OPlOAxFvmh26Y+u3/BARZ5+6heW8cR
PNIiq3Zm1M46hP0t8irC/XlCER5mke/75F6L2of9LPLy1RfHl+3BQywSUbQ/
f+4u7GuRp2uHar/JxwMtEj749PqAbdjHIg+rT1w4aAvuZ5GwY9cm9bRjb4s8
iJ7r29GCe1skdNSjzm5G7GWRO3UjP6mjxz0tElLq9PatFnta5K+UmDuPM3B3
i/xvYqPSv9S4q0X+bJq171Iy7mKR6Vfam08kYg+L/KHLiy+Kw50s8s3MXst3
ROMOFrnc9uBM00bcziITbw0bkbYOu1vkvO1sz+gfcGuLjJ0f1HLVatzSIqWf
36ixaAVubpExD+c/Cl6O3SxyOv9p2fhluIlFRi5bdWRYOG5skZJeznl9F+JG
FhlWGZ/WdQFuYJHi/Z/+0GYermeRIWv0oY1CsKtFZNBn42r8D9e2yKBq+f0r
p2MXixwo9u749xRc0yL9Nx+ud30ydrbIvhEjK0sn4GoW6eN6/sbRsdjJIrvP
TD21Zwx+Z5Yvk28V5I7CVWb5afxCvc4fvzZLjyYvNyd9hSvNsq1s7ZJ1Q/BL
s3TNqjX1u0H4uVm2TFf5hfrgp2bxcG/WfWpf/NgstpvGpmN644dm6WDt8tHg
L3GFWUzzdj340hM/MIt7F58Lnbrhe2bRVxQfaNYF3zFLyx2j7a6f4VtmyVpy
SfW+Pb5plmZeM1c+dcflZsl4eXf27Vb4ulk+3Rc+uqw5vmqW1FWvep9qiq+Y
peHAde4HG+MysyQ51an9U0N8ySx1j6Y+M9fDF8wSt7HltfQ6+JxZPva3Hotx
waVmia7dPX91DXzGLDV/3ZO5uBo+bZYNSYPWz3qv++CTZqk2riRsYhUuMUtU
47GT/F/hY2Z5d+n3Qf1f4mKzrM6c1bn7M3zELK+n/t2o7WMsZolsHVH1yT/4
oFn+La+6XfMBLjLLd+aNZ1/dwfvN8mxOvX0Vf+FCsyzxyDD9WY73mOXRgzbx
567hArMs3Ob47pcreKdZ/l78xczCyzjfLPN77vffegFvN8vd50N66n/DeWaZ
s/dUi+QzeItZbq2YUGPDKewwyyyfaw+Xl2CbWcrfzSmb/wu2mGXG4YeHpx3B
JrNcXf/91q8PYYNZpgxzShtShPVmKXOJWdtrH9aZZdKphqEee7DWLBcStGNb
7MIas4wLbN+/Xj5ON8tvjfI6fLQNq83y9UWves9zcYpZfs048O8dG1aZZdSU
YTd+N+NEs5xoefbkaQOON8vwPycXHMrGsWb5xVievVOLo80yNGT+ZmsG3mSW
w52ehmvUeINZfO+vnBKXjNeZ5eDW6n5rE3GUWXwWxXdbEofXmmW/56dNQ6Lx
arN4P8t2mrwRrzTLnt2dHoxYhyPN4hW547zPD3i5WXb28z7QYzWOMIvnW7G1
W4GXmmX7oRGqT5fjcLN0W3duhcsyvMgsW/2mzn6zGIeZpXOtWwEPw/ACs9hP
hPW+MR+HmqVj/Is2F+biuWYxj1n78fHZOMQsbRvWerYvGM8yS875pKt503Gw
WVqlux3LmYJnmEUXZNyRMhlPM0vzFl0yN07AU8yiubZzXeRYHGSWJob+Yd+O
wZPMop5VPHHGKDzBLI06jh401h+PM4vq7kUPv69woFnqbZnRqM8QPMYs8WF3
33QehAPMUrtH+O2WPnikWWKeVJ6p3xf7m6VWwY+F1XrjYWbZuLy26UVP7GeW
6n1T4+71wEPM8uObFt/90RX7muX9AcuMM53xQLOsiermf7gT9jHLmyF7viho
j/uZZUWNQS3s7tjbLJXHjztrW+HeZlkeG/gwvjn2MsvzgN8v/9AU9zTL0vqz
Di9tjD3N8vi3B1vmNMTdzbJIvUwdVA93NUvFpKo1o+rgLmZZ0GzjvIEu2MMs
9/6oO/aLGriTWebq0/t1qIY7mOV2cJsOTd9nfXA7s8xu76hbuwq7m+XGbc9/
qypxa7PMdOwrf/QCtzTLtQVDTt58ipubZWq3U7suPsJuZvn90fjskgrcxCyT
d17d9PN93NgsFyPmhG+/gxuZZXyfh98Y/8INzHLu1fKh6nJczyyBRe+7br6G
Xc1yZm10k5VXcG2zBAxu6LTwMnYxy8nq2vszL+CaZvE/1u78uN+ws1mORW8t
+uoMrmYWv1FeNu9T2MksR+oeSPq8BL8zyeDSr1a0/gVXmeRQyplZDY/g1yYZ
MHFygPMhXGmSn5uW9/r3Z/zSJH2vhLZ5UIifm2Sv7onLtd34qUl6/ff5PbsT
PzbJrrbVrx7ZgR+a5Itbcb/szsMVJtlha7zDkYsfmKT7/GxNlg3fM0ne553W
JZrxHZN0ebj92x8N+JZJHPl9JkZk45sm6bRMBs7T4nKTWHqN8JiSga+bpF3l
bw1Hq/FVkxj2T3kzKBlfMUnrNX/d6pmIy0ySPSjsTMc4fMkkLaq92OsWjS+Y
JLN4jbHORnzOJE0314x79yMuNUnaiKSIJ2vxGZN84uo249YqfNokyWcMwy9H
4pMmqZ/c+YuT3+ESkySM39n8wFJ8zCR1mvR3zl+Mi00SW3b0H1MYPmISl6yA
y2nzsZhk0/SLEj0XHzSJs/uMLatm4yKTrLt5J3VRMN5vEifr4jX/m44LTbJ2
XuXcCVPwHpNUdf4xcPhkXGCSlRUf9+s3Ae80yavtKe27jcX5Jvl+SYu67mPw
dpO8+NLystEonGeSZS+7ltfwx1tM8qRw94lKP+wwyeJVA3f9PRjbTPLPgOO6
6wOxxSTfOgVu+q0/Npnk/pGyxcXe2GCSeRv/983eXlhvkjvDHwzZ0hPrTBJS
e1nX7B5Ya5Kbp998quqKNSYJTtrwfl1nnG6S62Pr3v+uE1abZFrj9HOh7XGK
Sa5cal001R2rTBKUabeOaYUTTXJpqmfS4OY43iQTWu+L9GqKY01yvnzwrM8a
42iTjDWfHNW8Id5kkrNzxveqWw9vMMloj6utnergdSY59SDE5VktHGWSEdv+
eXLbGa81yfHFy/8o+wivNslXPd8Xn3qn/eCVJjn6fPP2g29wpEmG7G2g+akS
LzeJrMj80fICR5hkoE+7bzOe4qUmKXq3ZULsIxxukn6Hvxy4pgIvMknh+qLP
wu/jMJP0HvZVw9l38AKTFLiceT3xLxxqkp6nJt3yL8dzTZKf8Oev/a/hEJP0
CAzd2/0KnmWSbY2eGNpexsEm+fziitjGF/AMk+RmVIuo9RueZpLPpsRNf/0r
nmISa8vGw/85iYNM0v5PnWf5cTzJJEZjx+bni/EEk7QJ2V792GE8ziT6Tn3+
KTyIA03S8v6hS1t/xmNMot3qL/pCHGASt0W/5SbvxiNNku45JXXDTuxvksbP
bq7+fgceZpKU3d/OXZCH/UzSIPL519Nz8RCTJPZb0zfQhn1N4vq2RvuhZjzQ
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
bxVX6NlXxff07KniW3r2U3G5nr1UfFXPPiou07OHii/o2T/FpXr2TvFpPfum
uETPniku1rNfikXPXiku0rNPigv17JEq969nf1S5fz17o8r969kXVe5fz56o
cv969kOV+9ezF6rcv559UOX+9eyBKvevZ/9TuX89e5/K/evZ91TuX8+ep3L/
evY7lfvXs9ep3L+efU7l/vXscSr3r2d/U7l/PXubyv3r2ddU7l/PnmbaB4fo
2c/EwXr2MvE0PfuYOEjPHiaeoGf/Egfq2bvEAXr2LbG/nj1L7KdnvxL76tmr
xD569imxt549SuylZ38Se+rZm8Rd9exLYg89e5K4g579SOyuZy8St9SzD4nd
9OxB4sZ69h9xA7182HvErnr2HbGLnj1H7KxnvxE76dlrxFXZ7DPiymz2GPHz
bPYX8eNs9hZxRTb7ivheNnuK+FY2+4m4PJu9RHw1Wz7sI+KybPYQ8YVs9g9x
aTZ7h/h0NvuGuCSbPUNcnM1+IZZs9gpxUTb7hLgwmz1CXJDN/iDOz2ZvEOdl
sy+IHdnsCWJLNvuB2JDNXiDWZbMPiDXZ7AFidTb7f1iVzd4fjs9m3w9HZ7Pn
hzdks9+Ho7LZ68Ors9nnw5HZ7PHhiGz293B4Nnt7OCybfT0cms2ennL/2ezn
KfefzV6ecv/Z7OMp95/NHp5y/9ns3yn3n83enXL/2ezbKfefzZ6dcv/Z7Ncp
95/NXp1y/9ns0yn3n80enXL/2ezPKfefzd6ccv/Z7Msp95/Nnpxy/9nsxyn3
n81enHL/2ezDKfefzR6c+oMbZ7P/hhtks/eGXbPZd8Mu2ey5Yeds9tuwUzZ7
bbhKxz4brtSxx4af69hfw4917K3hCh37aviejj01fEvHfhou17GXhq/q2EfD
ZTr20PAFHftnuFTH3hk+rWPfDJfo2DPDxTr2y7Do2CvDRTr2yXChjj0yXKBj
fwzn69gbw3k69sWwQ8eeGLbo2A/DBh17YVinYx8Ma3TsgWG1jv0vrNKx94Xj
dex74Wgde154g479LhylY68Lr9axz4Ujdexx4Qgd+1s4XMfeFg7Tsa+FQ3Xs
aeEQHftZOFjHXhaepmMfCwfp2MPCE3TsX+FAHXtXOEDHvhX217Fnhf107Fdh
Xx17VdhHxz4V9taxR4W9dOxPYU8de1O4q459KeyhY08Kd9CxH4XddexF4ZY6
9qGwm449KOX+dew/KfevY+9JuX8d+07K/evYc1LuX8d+k3L/OvaalPvPYp9J
uf8s9piU+89if0m5/yz2lpT7z2JfSbn/LPaUlPvPYj9Juf8s9pKU+89iH0m5
/yz2kJT7z2L/SLn/LPaOlPvPYt8o9YNLstgzwsVZ7BdhyWKvCBdlsU+EC7PY
I8IFWewP4fws9oZwXhb7QtiRxZ4QtmSxH4QNWewFYV0W+0BYk8UeEFZnsf+D
VVns/eD4LPZ9cHQWez54Qxb7PTgqi70evDqLfR4cmcUeD47IYn8Hh2ext4PD
stjXwaFZ7OngkCz2c3BwFns5eFoW+zg4KIs9HDwhi/0bHJjF3g0OyGLfBvtn
sWeD/bLYr8G+WezVYJ8s9mmwdxZ7NNgri/0Z7JnF3gzumsW+DPbIYk8Gd8hi
Pwa7Z7EXg1tmsQ+D3bLYg8GNs9h/wQ2y2HvBrlnsu2CXLPZcsHMW+y3YKYu9
FlylZZ8FV2rZY8HPteyv4Mda9lZwhZZ9FXxPy54KvqVlPwWXa9lLwVe17KPg
Mi17KPiClv0TXKpl7wSf1rJvoty/lj0T5f617Jco969lr0S5fy37JMr9a9kj
Ue5fy/6Icv9a9kaU+9eyL6Lcv5Y9EeX+teyHKPevZS9EuX8t+yDK/WvZA1Hu
X8v+h3L/WvY+lPvXsu+h3L+WPQ/l/rXsdyj3r2WvQ7l/LfscKR8cqWWPA0do
2d/A4Vr2NnCYln0NHKplTwOHaNnPwMFa9jLwNC37GDhIyx4GnqBl/wIHatm7
wAFa9i2wv5Y9C+ynZb8C+2rZq8A+WvYpsLeWPQrspWV/Antq2ZvAXbXsS2AP
LXsSuIOW/QjsrmUvArfUsg+B3bTsQeDGWvYfcAMtew/YVcu+A3bRsueAnbXs
N2AnLXsNuCqTfQZcmckeA36eyf4CfpzJ3gKuyGRfAd/LZE8B38pkPwGXZ7KX
gK9mso+AyzLZQ8AXMtk/wKWZ7B3g05nsG+CSTPYMcHEm+wVYMtkrwEWZ7BPg
wkz2CHBBJvsDOD+TvQGcl8m+AHZksieALZnsB2BDJnsBWJfJPgDWZLIHgNWZ
9P9jVSZ9/zg+k35/HJ1Jnz/ekEl/P47KpK8fr86kn1+5/0z6+JX7z6R/X7n/
TPr2lfvPpF9fuf9M+vSV+8+kP1+5/0z68pX7z6QfX7n/TPrwlfvPpP9euf9M
+u6V+8+k3165/0z67JX7z6S/Xrn/TPrqlfvPpJ9euf9M+uiV+8+kf165/0z6
5pX7z6RfPvmDPTLpk8cdMumPx+6Z9MXjlpn0w2O3TPrgceNM+t9xg0z63rFr
Jv3u2CWTPnfsnEl/O3bKpK8dV2noZ8eVGvrY8XMN/ev4sYa+dVyhoV8d39PQ
p45vaehPx+Ua+tLxVQ396LhMQx86vqCh/xyXaug7x6c19JvjEg195rhYQ385
Fg195bhIQz85LtTQR44LNPSP43wNfeM4T0O/OHZo6BPHFg394digoS8c6zT0
g2ONhj5wrNbQ/41VGvq+cbyGfm8craHPG2/Q0N+NozT0dePVGvq5caSGPm4c
oaF/G4dr6NvGYRr6tXGohj5tHKKhPxsHa+jLxtM09GPjIA192HiChv5rHKih
7xoHaOi3xv4a+qyxn4b+auyroa8a+2jop8beGvqosZeG/mnsqaFvGnfV0C+t
3L+GPmnl/jX0Ryv3r6EvWrl/Df3Qyv1r6INW7l9D/7Ny/xr6npX719DvrNy/
hj5n5f419Dcr96+hr1m5/wz6mZX7z6CPWbn/DPqXlfvPoG9Zuf8M+pWV+8+g
T1m5/wz6k5X7z6AvWbn/DPqRVR9clkEfMr6QQf8xLs2g7xifzqDfGJdk0GeM
izPoL8aSQV8xLsqgnxgXZtBHjAsy6B/G+Rn0DeO8DPqFsSODPmFsyaA/GBsy
6AvGugz6gbEmgz5grM6g/xerMuj7xfEZ9Pvi6Az6fPGGDPp7cVQGfb14dQb9
vDgygz5eHJFB/y4Oz6BvF4dl0K+LQzPo08UhGfTn4uAM+nLxtAz6cXFQBn24
eEIG/bc4MIO+WxyQQb8t9s+gzxb7ZdBfi30z6KvFPhn002LvDPposVcG/bPY
M4O+Wdw1g35Z7JFBnyzukEF/LHbPoC8Wt8ygHxa7ZdAHixtn0P+KG2TQ94pd
M+h3xS4Z9Lli5wz6W7FTBn2tuCqdflZcmU4fK36eTv8qfpxO3yquSKdfFd9L
p08V30qnPxWXp9OXiq+m04+q3H86fajK/afTf6rcfzp9p8r9p9Nvqtx/On2m
yv2n01+q3H86faXK/afTT6rcfzp9pMr9p9M/qtx/On2jyv2n0y+q3H86faLK
/afTH6rcfzp9ocr9p9MPqtx/On2gyv2n0/+p3H86fZ/K/afT75n0wdHp9Hni
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
4shPYIkjL4EL48hH4Pw48hDYEUf+ARviyDtgTRz5BqyKI8+Ao+PIL+CoOPIK
ODKOfAIOjyOPgEPjyB/g4DjyBjgojnwBDowjT4D948gPYN848gLYO458APaM
Iw+APeJ4/4/d43jvj93ieN+PG8Txnh+7xPF+HzvF8V4fV8byPh8/juU9Pr4X
y/t7XB7Le3tcFsv7elway3t6XBLL+3kssbyX//GDC2N5H4/zY3kPjx2xvH/H
hljeu2NNLO/bsSqW9+w4Opb36zgqlvfqODKW9+k4PJb36Dg0lvfnODiW9+Y4
KJb35Tgwlvfk2D+W9+PYN5b34tg7lvfh2DOW9+DYI5b339g9lvfe2C2W9924
QSzvubFLLO+3sVMs77VxZQzvs/HjGN5j43sxvL/G5TG8t8ZlMbyvxqUxvKfG
JTG8n8YSw3tp5feP4X208vvH8B5a+f1jeP+s/P4xvHdWfv8Y3jcrv38M75mV
3z+G98vK7x/De2Xl94/hfbLy+8fwHjnqg0NjeH+Mg2N4b4yDYnhfjANjeE+M
/WN4P4x9Y3gvjL1jeB+MPWN4D4w9Ynj/i91jeO+L3WJ434sbxPCeF7vE8H4X
O8XwXhdXRvM+Fz+O5j0uvhfN+1tcHs17W1wWzftaXBrNe1pcEs37WSzRvJfF
hdG8j8X50byHxY5o3r9iQzTvXbEmmvetWBXNe1YcHc37VRwVzXtVHBnN+1T8
/yrtHMaRbi0DsEXUEbKQkFpCQiUQqBEImb2Be7kF9wLNbvb+/9mqd/de3ne7
vDt0OKHDCR1OWOGEDiessEOHHRL044CbPbp/zenjWs453/fGS3nU/f1fyp/u
7/9S3nR//5fypfv7v5Qn3d//pfzo/v4v5UX3938pH7q//0t50P39X8p/7u//
Ut5z+ObDpXwn55fynHywlN/k3FJek18X8pm8W8hj8stC/pKzhbwlf1/IV/J2
IU/J3xbyk5wu5CX560I+kjcLeUj+spB/5PVC3pE/L+QbebWQZ+TlQn6Rk4W8
IrcW8omDN8cLeUQuLeQPOVrIG/LpQr6Qiwt5Qj5ZyA9yuJAX5OOFfCAXFvKA
fLSQ/+NgIe/Hhwv5Ps4v5Pn4YCG/x7mFvB6/zuXzeDeXx+OXufwdZ3N5O/4+
l6/j7Vyerv/mb3P5OU7n8nL8dS4fx5u5PBx/mcu/8Xou78af5/JtvJrLs/Fy
Lr/GyVxejVtz+TSO5/JoXJrLn3E0lzfj07l8GRfn8mR8Mpcf43AuL8bHc/kw
LszlwfhoLv/Ve3Mwl/fiw7l8F+fn8lx8MJff4txcXotfZ/JZvJvJY/HLTP6K
s5m8FX+fyVfxdiZPxd9m8lOczuSl+OtMPoo3M3ko/jKTf+L1TN6JP8/km3g1
k2fi5Ux+iZOZvFL3za2ZfBLHM3kkLs3kjziayRvx6Uy+iIszeSI+mckPcTiT
F+LjmXwQF2byQHw0k//hYCbvw4cz+R7Oz+R5+GAmv8O5mbwOv07lc3g3lcfh
l6n8DWdTeRv+PpWv6bx5O5Wn4W9T+RlOp/Iy/HUqH8ObqTwMf5nKv/B6Ku/C
n6fyLbyayrPwciq/wslUXoVbU/kUjqfyKFyayp9wNJU34dOpfAkXp/IkfDKV
H+FwKi/Cx1P5EC5M5UHabz6ayn9wMJX34MOpfAfnp/IcfDCV3+DcVF6DXyfy
GbybyGPwy0T+grOJvAV/n8hX8HYiT8HfJvITnE7kJfjrRD6CNxN5CP4ykX/g
9UTegT9P5Bt4NZFn4OVEfqH15mQir8CtiXwCxxN5BC5N5A84msgb8OlEvoCL
E3kCPpnID3A4kRfg44l8ABcm8gB8NNH/52Ci38+HE/19zk/08/lgon/PuYl+
Pb+O9ed5N9aP55ex/jtnY/325pu/j/XXeTvWT+dvY/1zTsf65fx1rD/Om7F+
OH8Z63/zeqzfzZ/H+tu8Gutn83Ksf83JWL+aW2P9aY7H+tFcGus/czTWb+bT
sf4yF8f6yXwy1j/mcKxfzMdj/eHGmwtj/WA+Guv/cjDW7+XDsf4u58f6uXww
1r/l3Fi/ll9H+rO8G+nH8stI/5WzkX4rfx/pr/J2pJ/K30b6p5yO9Ev560h/
lDcj/VD+MtL/5PVIv5M/j/Q3eTXSz6y/eTnSv+RkpF/JrZH+JMcj/UgujfQf
ORrpN/LpSH+RiyP9RD4Z6R9yONIv5OOR/iAXRvqBfDTS/+NgpN/HhyP9Pc6P
9PP4YKR/x7mRfh2/JvpzvEv04/gl0X+rvTlL9Nv4e6K/xttEP42/JfpnnCb6
Zfw10R/jTaIfxl8S/S9eJ/pd/DnR3+JVop/Fy0T/ipNEv4pbif4Ux4l+FJcS
/SeOEv0mPk30l7iY6CfxSaJ/xGGiX1R983GiP8SFRD+IjxL9Hw4S/R4+TPR3
OJ/o5/BBon/DuUS/hndD/RnOhvoxvB3qv3A61G/hzVB/hddD/RReDfVPOBnq
l3A81B/haKgfwsWh/geHQ/2O/e811N+o+H2G+hmcH+pfcG6oX8G7gf4EZwP9
CN4O9B84Heg38Gagv8DrgX4Crwb6B5wM9As4HugPcDTQD+DiQP2fw4F6PxcG
6vv7+Q/U8/fzH6jf7+c/UK/fz7+vPr+ff189vmz+ffV3Tvvq7bzpq6/zuq+e
zqu++jknffVyjvvq4xz11cO52Ff/5rCv3s2Fvvo2B331bM731a8511ev5l1P
fZqznnr0fv499ef9/Hvqzfv599SX9/PvqSfv599TP47Nv6dezHFPfZijnnow
F3vqvxz21Hu50FPf5aCnnsv5nvot53rqtbzrqs9y1lWP5W1X/ZXTrnorb7rq
q7zuqqfyqqt+up9/V710P/+u+uh+/l310P38u+qf+/l31Tufzb+rvslBVz2T
8131S8511St511Gf5KyjHsnbjvojpx31Rt501Bd53VFPfDL/jvohJx31Qo47
6oMcddQDudhR/+Owo97HhY76Hgcd9TzOd9TvONdRr+NdW33u0fzb6nG8bau/
cdpWb+NNW32N1231NF611c84aauXcdxWH+OorR7Gxbb614P5t9W7uNBW3+Kg
rZ7F+bb6Fefa6lW8a6lPcdZSj+JtS/2J05Z6E29a6ku8bqkn3Zt/S/2Ik5Z6
Ecct9SGOWupBXGyp/3DYUu/hQkt9h4OWeg7nW+o3nGup19yZf1N9hrOmegxv
m+ovnDbVW3jTVF/hdVM9hVdN9RNOmuolHDfVRzhqqodwsan+cWv+TfUOLjTV
Nzhoqmdwvql+wbmmegXvGuoTnDXUI3jbUH/gtKHewJuG+kLJ/BvqCbxqqB9w
0lAv4LihPsBRQz2Aiw3nfw4bzvtcaDjfc9Bwnud8w/mdcw3n9Rvzrzufc1Z3
Hudt3fmb07rzNm/qzte8rjtP86ru/MxJ3XmZ47rzMUd15+Fr8687/3JYd97l
Qt35loO68yzn686vnKs7r/Ku5nzKWc15lLc1509Oa86bvKk5X16Zf815klc1
50dOas6LHNecDzmqOQ9yseb8x2HNeY8LNec7DmrOc5yvOb9dmn/NeY13Vecz
zqrOY7ytOn9xWnXe4k3V+YrXVecpXlWdnzipOi9xXHU+4qjqPHRh/lXnHw6r
zjtcqDrfcFB1nuF81fmFc1XnFd5VnE84qziP8Lbi/MFpxXnj3Pwrzhe8rjhP
8Kri/MBJxXmB44rzAUcV5wEuVuz/OazY73OhYn/PQcV+nvMV+/cz86/Yr/Ou
bH/OWdl+nLdl+29Oy/bbvCnbX/O6bD/Nq7L9Mydl+2WOy/bHkfmX7Ye5WLb/
5bBsv8uFsv0tB2X7Wc6X7V85V7Zf5V1sf8pZbD/K29j+k9PYfvOT+cf2l7yO
7Sd5Fds/chLbL3Ic2x9+NP/YfpCLsf0fh7H9Hhdi+zsOYvu5D+Yf279xLrZf
4+zZ/ozTZ/sxXj/bf7339z/bb3H0bH/F4bP9FAfP9k+ce7Zf4uzJ/uid8Z/s
h3j9ZP/DyZP9DkdP9jccPtnP/Gj8J/sXzj3Zr3D2aH/C6aP9CK8f7T9+MP6j
/QZHj/YXHD7aT3DwaP/AuUf7hVPjP9gfcPpgP8DrB+s/Jw/We44erO8cPljP
/9f4D9Zvzj1Yrzm7tz5zem895vW99fd/jH9vveXo3vrK4b31lIN76yfn7q2X
/238O+sjp3fWQ17fWf84ubPecXRnffsv499Zzzi4s35x7s56xdmt9YnTW+sR
r2+tP/9p/FvrDUe31hcOb60nHNxaPzh3a734D+OXrA+clqwHvC75/nNS8r3n
qOT7/u/GL/mec1Dy/eZcyfeasxvfZ05vfI+Lxr/x/eXkxveWoxvfVw5vfE85
uPH95NyN7+W/Gf/a95HTa9/DfzX+te8fJ9e+dxxd+779i/Gvfc84uPb9+mfj
X/tecXbl+8Tple/RPxn/yveHkyvfG46ufF/+0fhXviccXPl+/IPxr3wvOLv0
feD00vfgxPiX3n9OLr3vHF16v//e+JfeZw4uvb9/Z/xL7ytnF95PTi+8j39r
/AvvHycX3rdfGP/C+8XhhfeJgwvvz8+Nf+F94ezc+8Hpuffhb4x/7vnn5Nzz
/tfGP/d8c3jueebg3PMbGv/c88rZmeeT0zPP48+Mf+b5+yvjn3nefmr8M8/X
T4x/5nni4Mzz85fGP/O8/IXxI8/Hnxs/8jzwOnL/j40fud9/ZvzI/f1T40fu
JweR+/cnxo/crz823if354/8+5/cDw4/+f3/0PWf/N5/4PqPft+C6z/6PTn8
6Pf7fdd/9Hv9nus/+H1+1/Uf/B6/4/oP5n/k+g/m+9uuf29+v+X69+bzm65/
7+//Dde/9/cGrn/n7/t117/z9/ya698Z/9D174z3q67/0b//K67/0b/3y67/
0fUHrt//97/k+h/8/68/e7t+75c3hz+kuf/3vx/S/wO9qO90
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\" Profundidade (ft) \"", TraditionalForm], 
     FormBox["\" \"", TraditionalForm]}, {
     FormBox["\"pressure(psi)\"", TraditionalForm], 
     FormBox["\" Janela Operacional \"", TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[Bold, 14],
  Method->{},
  PlotRange->{{0, 17142.84}, {-16500., 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678021089240795*^9, 3.6781035575238943`*^9, 3.678103655068598*^9, 
   3.678130076159878*^9, {3.6784578328249006`*^9, 3.678457849356962*^9}, 
   3.6826737720145426`*^9, 3.6826748338632765`*^9, 3.6826757630964255`*^9, 
   3.6826763805537424`*^9, 3.682677385367214*^9, 3.682686655151416*^9, 
   3.68268764566607*^9, 3.682722794455039*^9, 3.6827257230745463`*^9, 
   3.6827259519706383`*^9, 3.6827280627512007`*^9, 3.682778270633593*^9, 
   3.6827797500027227`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeCompatibleSizeVectors", "[", 
   RowBox[{"refinedvec_", ",", "coarsevecl_", ",", "coarsevecvar_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newvec", ",", "y0", ",", "y1", ",", "x0", ",", "x1", ",", "counter", 
      ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newvec", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"counter", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "coarsevecl", "]"}], "!=", 
        RowBox[{"Length", "[", "coarsevecvar", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<N\[ATilde]o \[EAcute] poss\[IAcute]vel realizar o refinamento, \
os vetores coarse devem ter o mesmo tamanho.\>\"", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "coarsevecl", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">=", 
            RowBox[{"Length", "[", "coarsevecvar", "]"}]}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"y0", "=", 
         RowBox[{"coarsevecvar", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"y1", "=", 
         RowBox[{"coarsevecvar", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x0", "=", 
         RowBox[{"coarsevecl", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x1", "=", 
         RowBox[{"coarsevecl", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"coarsevecl", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{"refinedvec", "[", 
              RowBox[{"[", "counter", "]"}], "]"}], "<=", 
             RowBox[{"coarsevecl", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}], "&&", 
           RowBox[{"counter", "<", 
            RowBox[{"Length", "[", "refinedvec", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"newvec", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y0"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x0"}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"refinedvec", "[", 
                   RowBox[{"[", "counter", "]"}], "]"}], "-", "x0"}], ")"}]}],
                "+", "y0"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"counter", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "==", 
           RowBox[{
            RowBox[{"Length", "[", "coarsevecl", "]"}], "-", "1"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"newvec", ",", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y0"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x0"}], ")"}]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"refinedvec", "[", 
                  RowBox[{"[", "counter", "]"}], "]"}], "-", "x0"}], ")"}]}], 
              "+", "y0"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newvec", "//", "N"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.673188321273266*^9, 3.6731883255632734`*^9}, {
   3.673189996886915*^9, 3.6731900281197014`*^9}, {3.673191081455345*^9, 
   3.673191110926031*^9}, {3.673191148879202*^9, 3.6731911512383366`*^9}, 
   3.673191186206337*^9, {3.6731912425275583`*^9, 3.6731912456947393`*^9}, {
   3.6731914595479712`*^9, 3.6731915722754188`*^9}, {3.6731922782299953`*^9, 
   3.673192285117389*^9}, {3.6731942036236267`*^9, 3.6731942298658776`*^9}, 
   3.6731942936867886`*^9, {3.677840324053131*^9, 3.67784036827078*^9}, {
   3.6778404321340156`*^9, 3.677840432665761*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "refina", " ", "de", " ", "n", " ", "divis\[OTilde]es", " ", "de", " ", 
    "refl", " ", "at\[EAcute]", " ", "lf"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"refine", "[", 
    RowBox[{"l0_", ",", "lf_", ",", "refl_", ",", "n_", ",", "nreffull_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dref", ",", 
       RowBox[{"standardref", "=", "nreffull"}], ",", "refinedvec", ",", 
       "lastcoarsedata", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refinedvec", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dl", "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"dl", ",", "l0", ",", "refl", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"refl", "-", "l0"}], ")"}], "/", "standardref"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lastcoarsedata", "=", "refl"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"lf", "-", "refl"}], "]"}], "<", 
         RowBox[{"10", "^", 
          RowBox[{"-", "8"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dref", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lf", "-", "l0"}], ")"}], "/", "n"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refinedvec", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "=", "l0"}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dref", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lf", "-", "refl"}], ")"}], "/", "n"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "=", "refl"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"refinedvec", ",", 
           RowBox[{"lastcoarsedata", "//", "N"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "+=", "dref"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"refinedvec", ",", 
        RowBox[{"N", "[", "lf", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"refinedvec", "//", "N"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6734527454539833`*^9, 3.6734527865023317`*^9}, 
   3.6734530061808963`*^9, {3.673453055779733*^9, 3.6734531018513684`*^9}, 
   3.673453139787538*^9, {3.673453265666738*^9, 3.6734533458743258`*^9}, {
   3.67345338057031*^9, 3.673453380640314*^9}, 3.6734534538655024`*^9, 
   3.67345431961102*^9, {3.67784038354268*^9, 3.6778404020194044`*^9}, {
   3.677840434897897*^9, 3.6778404353362703`*^9}, {3.6827197092195735`*^9, 
   3.6827197122277455`*^9}, 3.682719792707349*^9, {3.682720007241619*^9, 
   3.682720020522379*^9}, 3.6827200651609325`*^9, {3.682720152840947*^9, 
   3.682720155184081*^9}, {3.682720333264267*^9, 3.682720371207437*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L0", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LF", "=", "14800."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LtoRef", "=", "14799"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nrefs", "=", "50."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refinedl", "=", 
   RowBox[{"refine", "[", 
    RowBox[{"L0", ",", "LF", ",", "LtoRef", ",", "nrefs"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6734532066823645`*^9, 3.6734532146498203`*^9}, 
   3.6734533616812296`*^9, {3.6734534024975643`*^9, 3.673453447160119*^9}, 
   3.6734535886322107`*^9}],

Cell[CellGroupData[{

Cell[BoxData["refinedl"], "Input"],

Cell[BoxData[
 RowBox[{"refine", "[", 
  RowBox[{"0.`", ",", "14800.`", ",", "14799", ",", "50.`"}], "]"}]], "Output",
 CellChangeTimes->{3.6827198145936003`*^9, 3.6827257232275553`*^9, 
  3.6827259521686497`*^9, 3.682728062938401*^9, 3.682778270805194*^9, 
  3.6827797501119223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "refinedl", "]"}]], "Input",
 CellChangeTimes->{{3.6734532327938576`*^9, 3.673453247785715*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.673453248098733*^9, 3.673454632805934*^9, 
  3.6735274030067854`*^9, 3.673614552660615*^9, 3.6776731001296787`*^9, 
  3.6776731415206523`*^9, 3.6778301258246408`*^9, 3.6778327547113953`*^9, 
  3.677839244478513*^9, 3.6778393373239665`*^9, 3.6778404126861134`*^9, 
  3.678021095776181*^9, 3.678103557800146*^9, 3.678103655341095*^9, 
  3.6781300765048437`*^9, 3.678457849456996*^9, 3.68267377214455*^9, 
  3.6826748340192857`*^9, 3.6826757632524347`*^9, 3.6826763807167516`*^9, 
  3.682677385535224*^9, 3.682686655717448*^9, 3.6826876458740816`*^9, 
  3.682725723247556*^9, 3.682725952184651*^9, 3.682728062969601*^9, 
  3.6827782708363934`*^9, 3.6827797501275225`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682726730042142*^9, 3.682726803601349*^9}, 
   3.6827270593529773`*^9}],

Cell[CellGroupData[{

Cell["\<\
Dado PI e PO, rint e rext, faz o c\[AAcute]lculo da tens\[ATilde]o radial e \
tangencial\
\>", "Subchapter",
 CellChangeTimes->{{3.6644482279963493`*^9, 3.664448279208538*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComputeRadialAndTangetialStress", "[", 
    RowBox[{"r_", ",", "ri_", ",", "re_", ",", "PI_", ",", "PO_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigtheta"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sigr", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"PI", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "-", 
            SuperscriptBox["re", "2"]}], ")"}], " ", 
          SuperscriptBox["ri", "2"]}], "+", 
         RowBox[{"PO", " ", 
          SuperscriptBox["re", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["re", "2"], "-", 
           SuperscriptBox["ri", "2"]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sigtheta", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"PI", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["re", "2"]}], ")"}], " ", 
          SuperscriptBox["ri", "2"]}], "-", 
         RowBox[{"PO", " ", 
          SuperscriptBox["re", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["re", "2"], "-", 
           SuperscriptBox["ri", "2"]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigr", ",", "sigtheta"}], "}"}], "//", "N"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComputeRadialAndTangetialStress2", "[", 
    RowBox[{
    "r_", ",", "ri_", ",", "re_", ",", "PI_", ",", "PO_", ",", "FZ_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ez", ",", "sigrr", ",", "sigtt", ",", "sigzz", ",", "a", ",", "b", ",",
        "Pa", ",", "Pb", ",", 
       RowBox[{"nu", "=", "0.30"}], ",", 
       RowBox[{"young", "=", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "7"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", "ri"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", "=", "re"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pa", "=", "PI"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pb", "=", "PO"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ez", "=", 
       RowBox[{
        FractionBox["FZ", 
         RowBox[{"Pi", " ", "young", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}]}]], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "nu"}], "young"], 
         FractionBox[
          RowBox[{
           RowBox[{"Pa", " ", 
            RowBox[{"a", "^", "2"}]}], " ", "-", 
           RowBox[{"Pb", " ", 
            RowBox[{"b", "^", "2"}]}]}], 
          RowBox[{
           RowBox[{"b", "^", "2"}], "-", 
           RowBox[{"a", "^", "2"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigrr", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Pa", " ", 
           RowBox[{"a", "^", "2"}]}], " ", "-", 
          RowBox[{"Pb", " ", 
           RowBox[{"b", "^", "2"}]}]}], 
         RowBox[{
          RowBox[{"b", "^", "2"}], "-", 
          RowBox[{"a", "^", "2"}]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"a", "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{"Pa", "-", "Pb"}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}], 
          RowBox[{"r", "^", "2"}]}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigtt", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Pa", " ", 
           RowBox[{"a", "^", "2"}]}], " ", "-", 
          RowBox[{"Pb", " ", 
           RowBox[{"b", "^", "2"}]}]}], 
         RowBox[{
          RowBox[{"b", "^", "2"}], "-", 
          RowBox[{"a", "^", "2"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"a", "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{"Pa", "-", "Pb"}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}], 
          RowBox[{"r", "^", "2"}]}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigzz", "=", 
       RowBox[{
        RowBox[{"2", " ", "nu", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"Pa", " ", 
            RowBox[{"a", "^", "2"}]}], " ", "-", 
           RowBox[{"Pb", " ", 
            RowBox[{"b", "^", "2"}]}]}], 
          RowBox[{
           RowBox[{"b", "^", "2"}], "-", 
           RowBox[{"a", "^", "2"}]}]]}], "+", 
        RowBox[{"young", " ", "ez"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigrr", ",", "sigtt", ",", "sigzz"}], "}"}], "//", "N"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"di", "=", "12.376"}], ";", "\[IndentingNewLine]", 
    RowBox[{"de", "=", "14"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigt", ",", "sigz"}], "}"}], "=", 
     RowBox[{
      RowBox[{"ComputeRadialAndTangetialStress2", "[", 
       RowBox[{
        RowBox[{"di", "/", "2"}], " ", ",", 
        RowBox[{"di", "/", "2"}], ",", 
        RowBox[{"de", "/", "2"}], ",", "8237", ",", "3629", ",", 
        "\[InvisibleSpace]", "1.312705856587157`*^6"}], "]"}], 
      "\[IndentingNewLine]", "sigz", " ", 
      RowBox[{"Pi", "/", "4"}], 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"de", "^", "2"}], "-", 
        RowBox[{"di", "^", "2"}]}], ")"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6706697658114614`*^9, 3.670669866753235*^9}, {
  3.6706706713962584`*^9, 3.6706707998016024`*^9}, {3.6706799251365414`*^9, 
  3.6706799253525543`*^9}, {3.67068017529585*^9, 3.6706801759208856`*^9}, {
  3.6721503937828193`*^9, 3.672150396908862*^9}, {3.6778404208147244`*^9, 
  3.677840425147792*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Dado dint, dext, PI e PO, faz o c\[AAcute]lculo da tens\[ATilde]o axial (TA) \
devido ao efeito poisson (Bal\[ATilde]o)\
\>", "Subchapter",
 CellChangeTimes->{{3.664448311552986*^9, 3.6644483628565865`*^9}, {
  3.6644484157653522`*^9, 3.664448417752167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeFballoning", "[", 
    RowBox[{"di_", ",", "de_", ",", "Pint_", ",", "Pext_", ",", "nu_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigt", ",", "Fballoning"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigr", ",", "sigt"}], "}"}], "=", 
       RowBox[{"ComputeRadialAndTangetialStress", "[", 
        RowBox[{
         RowBox[{"di", "/", "2"}], " ", ",", 
         RowBox[{"di", "/", "2"}], ",", 
         RowBox[{"de", "/", "2"}], ",", "Pint", ",", "Pext"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fballoning", "=", 
       RowBox[{"nu", 
        RowBox[{"(", 
         RowBox[{"sigr", "+", "sigt"}], ")"}], 
        RowBox[{"Pi", "/", "4"}], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"de", "^", "2"}], "-", 
          RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fballoning", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.662756922172928*^9, 3.670599190806378*^9, 3.6706681838563643`*^9, 
   3.6706685887957144`*^9, 3.6706689890700345`*^9, {3.6778404409528294`*^9, 
   3.6778404414215307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeFtemperature", "[", 
   RowBox[{"de_", ",", "di_", ",", "TM_", ",", "TPM_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"young", " ", "=", " ", 
       RowBox[{"3", " ", 
        RowBox[{"10", "^", "7"}]}]}], ",", 
      RowBox[{"alfa", "=", 
       RowBox[{"6.9", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}]}], ",", "\[CapitalDelta]T", ",", "T1", ",", 
      "f", ",", "fp", ",", "T2", ",", "Ftemperature"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalDelta]T", "=", " ", 
      RowBox[{"(", 
       RowBox[{"TPM", "-", "TM"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"Ftemperature", "=", 
      RowBox[{
       RowBox[{"-", "young"}], " ", "alfa", " ", "\[CapitalDelta]T", " ", 
       RowBox[{"Pi", "/", "4"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"de", "^", "2"}], "-", 
         RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ftemperature", "//", "N"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.672150838704226*^9, 3.6721508395948167`*^9}, {
  3.67784044396904*^9, 3.6778404444223766`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeFBend", "[", 
   RowBox[{"de_", ",", "di_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"young", " ", "=", " ", 
       RowBox[{"3.", " ", 
        RowBox[{"10", "^", "7"}]}]}], ",", "area", ",", "Fbend"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"area", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4."}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"de", "^", "2."}], " ", "-", 
         RowBox[{"di", "^", "2."}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fbend", "=", 
      RowBox[{"Pi", " ", "young", " ", "de", " ", 
       RowBox[{"\[Theta]", "/", 
        RowBox[{"(", 
         RowBox[{"100.", " ", "360.", " ", "12."}], ")"}]}], " ", "area"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Fbend", "//", "N"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"resultado", " ", "em", " ", "lb"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6780211178460317`*^9, 3.6780212782004814`*^9}, {
  3.678021340736165*^9, 3.6780213417385445`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"di", "=", "19.124"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComputeFBend", "[", 
  RowBox[{"de", ",", "di", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6780212894184217`*^9, 3.6780213150312433`*^9}, {
  3.6780213512063437`*^9, 3.678021368454167*^9}}],

Cell[BoxData["234900.86157450092`"], "Output",
 CellChangeTimes->{{3.6780212948710365`*^9, 3.67802131539338*^9}, {
   3.6780213469284005`*^9, 3.6780213625053453`*^9}, 3.678103557880743*^9, 
   3.6781036554192843`*^9, 3.678130076616421*^9, 3.678457849541241*^9, 
   3.6826737721855516`*^9, 3.6826748340672884`*^9, 3.682675763293437*^9, 
   3.6826763807687545`*^9, 3.6826773855842266`*^9, 3.682686655788452*^9, 
   3.682687645956086*^9, 3.6827228035805607`*^9, 3.6827257233305607`*^9, 
   3.6827259522696557`*^9, 3.682728063063201*^9, 3.6827782709299936`*^9, 
   3.682779750267923*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeInitialForce", "[", 
   RowBox[{
   "InternalPressIni_", ",", "ExternalPressIni_", ",", "Lvec_", ",", 
    "PipeData_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fpiston", ",", "sz", ",", "di", ",", "de", ",", "alfa", 
      ",", "nu", ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Fi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", 
     RowBox[{"(*", 
      RowBox[{"dados", " ", "do", " ", "tubular"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "interna"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "externa"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "Lvec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fi", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fpiston", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"InternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ai"}], "-", 
        RowBox[{
         RowBox[{"ExternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ao"}]}], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"For\[CCedilla]a", " ", "Pist\[ATilde]o"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fi", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", "Fpiston"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Lvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{"Lvec", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Fi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Fpiston", "+", 
          RowBox[{"w", " ", "lacum"}]}]}], ";"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "For\[CCedilla]a", " ", "axial", " ", "inicial", " ", "total"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Fi", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6730202461562285`*^9, 3.6730206123776875`*^9}, {
  3.673020689436624*^9, 3.67302075438634*^9}, {3.673020801562224*^9, 
  3.6730208263782682`*^9}, {3.673107932687693*^9, 3.673107942102232*^9}, {
  3.673108362477276*^9, 3.6731083698126955`*^9}, {3.677836184738161*^9, 
  3.6778362139627604`*^9}, {3.6778363352282734`*^9, 3.6778364157446055`*^9}, {
  3.6778404464872665`*^9, 3.6778404469718943`*^9}, {3.678025600450048*^9, 
  3.6780256028935184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeInitialForce", "[", 
   RowBox[{
   "InternalPressIni_", ",", "ExternalPressIni_", ",", "Lvec_", ",", 
    "PipeData_", ",", "doglegdata_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fpiston", ",", "sz", ",", "di", ",", "de", ",", "alfa", 
      ",", "nu", ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Fi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", 
     RowBox[{"(*", 
      RowBox[{"dados", " ", "do", " ", "tubular"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "interna"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "externa"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "Lvec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fi", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fpiston", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"InternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ai"}], "-", 
        RowBox[{
         RowBox[{"ExternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ao"}]}], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"For\[CCedilla]a", " ", "Pist\[ATilde]o"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fi", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", "Fpiston"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Lvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{"Lvec", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Fi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Fpiston", "+", 
          RowBox[{"w", " ", "lacum"}], "+", 
          RowBox[{"ComputeFBend", "[", 
           RowBox[{"de", ",", "di", ",", 
            RowBox[{"doglegdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ";"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "For\[CCedilla]a", " ", "axial", " ", "inicial", " ", "total"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Fi", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.678025611383337*^9, 3.6780256526588926`*^9}, 
   3.6781047611160755`*^9, 3.678104959073612*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeForces", "[", 
   RowBox[{
   "InternalPressinitial_", ",", "ExternalPressinitial_", ",", 
    "InternalPressKick_", ",", "ExternalPressKick_", ",", "Ti_", ",", "Tf_", 
    ",", "Lvec_", ",", "PipeData_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fi", ",", "Fballoning", ",", "Ftemp", ",", "flag", ",", 
      "Ffreemean", ",", "sz", ",", "di", ",", "de", ",", "alfa", ",", "nu", 
      ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Ffinal", ",", 
      "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "as", 
      " ", "condi\[CCedilla]\[OTilde]es", " ", "iniciais"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fi", "=", 
      RowBox[{"ComputeInitialForce", "[", 
       RowBox[{
       "InternalPressinitial", ",", "ExternalPressinitial", ",", "Lvec", ",", 
        "PipeData"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]InternalPress", "=", 
      RowBox[{"InternalPressKick", "-", "InternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]ExternalPress", "=", 
      RowBox[{"ExternalPressKick", "-", "ExternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "\[CapitalDelta]InternalPress", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ffreemean", "=", "0."}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "poisson", " ", "ou", " ", "bal\[ATilde]o"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Fballoning", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFballoning", "[", 
         RowBox[{"di", ",", "de", ",", "#1", ",", "#2", ",", "nu"}], "]"}], 
        "&"}], "[", 
       RowBox[{
       "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "t\[EAcute]rmico"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ftemp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFtemperature", "[", 
         RowBox[{"de", ",", "di", ",", "#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{"Ti", ",", "Tf"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ffinal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ffinal", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Fballoning", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Ftemp", "[", 
        RowBox[{"[", "sz", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{
          RowBox[{"Lvec", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"Lvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lacum", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Lvec", "[", 
               RowBox[{"[", "sz", "]"}], "]"}], "-", "Lcement"}], ")"}]}], "<=",
            "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Cimentado"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Fballoning", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Ftemp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"flag", "=", "True"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Livre"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "No", " ", "primeiro", " ", "passo", " ", "do", " ", "trecho", 
               " ", "livre", " ", "calcula", " ", "a", " ", "m\[EAcute]dia", 
               " ", "das", " ", "for\[CCedilla]as", " ", "de", " ", 
               "temperatura", " ", "e", " ", "bal\[ATilde]o", " ", "somente", 
               " ", "do", " ", "trecho", " ", "livre"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ffreemean", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Fballoning", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Ftemp", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], 
                 ")"}], "/", "i"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"flag", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Ffreemean", "+", 
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Fi", ",", "Ffinal"}], "}"}], "//", "N"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6780257783813343`*^9, 3.678025782275136*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeForces", "[", 
   RowBox[{
   "InternalPressinitial_", ",", "ExternalPressinitial_", ",", 
    "InternalPressKick_", ",", "ExternalPressKick_", ",", "Ti_", ",", "Tf_", 
    ",", "Lvec_", ",", "PipeData_", ",", "doglegdata_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fi", ",", "Fballoning", ",", "Ftemp", ",", "flag", ",", 
      "Ffreemean", ",", "sz", ",", "di", ",", "de", ",", "alfa", ",", "nu", 
      ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Ffinal", ",", 
      "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "as", 
      " ", "condi\[CCedilla]\[OTilde]es", " ", "iniciais"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fi", "=", 
      RowBox[{"ComputeInitialForce", "[", 
       RowBox[{
       "InternalPressinitial", ",", "ExternalPressinitial", ",", "Lvec", ",", 
        "PipeData", ",", "doglegdata"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]InternalPress", "=", 
      RowBox[{"InternalPressKick", "-", "InternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]ExternalPress", "=", 
      RowBox[{"ExternalPressKick", "-", "ExternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "\[CapitalDelta]InternalPress", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ffreemean", "=", "0."}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "poisson", " ", "ou", " ", "bal\[ATilde]o"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Fballoning", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFballoning", "[", 
         RowBox[{"di", ",", "de", ",", "#1", ",", "#2", ",", "nu"}], "]"}], 
        "&"}], "[", 
       RowBox[{
       "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "t\[EAcute]rmico"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ftemp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFtemperature", "[", 
         RowBox[{"de", ",", "di", ",", "#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{"Ti", ",", "Tf"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ffinal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ffinal", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Fballoning", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Ftemp", "[", 
        RowBox[{"[", "sz", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{
          RowBox[{"Lvec", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"Lvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lacum", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Lvec", "[", 
               RowBox[{"[", "sz", "]"}], "]"}], "-", "Lcement"}], ")"}]}], "<=",
            "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Cimentado"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Fballoning", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Ftemp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"flag", "=", "True"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Livre"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "No", " ", "primeiro", " ", "passo", " ", "do", " ", "trecho", 
               " ", "livre", " ", "calcula", " ", "a", " ", "m\[EAcute]dia", 
               " ", "das", " ", "for\[CCedilla]as", " ", "de", " ", 
               "temperatura", " ", "e", " ", "bal\[ATilde]o", " ", "somente", 
               " ", "do", " ", "trecho", " ", "livre"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ffreemean", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Fballoning", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Ftemp", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], 
                 ")"}], "/", "i"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"flag", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Ffreemean", "+", 
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Fi", ",", "Ffinal"}], "}"}], "//", "N"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6730208513161125`*^9, 3.673020947741886*^9}, {
   3.6730213086480036`*^9, 3.6730216571788282`*^9}, {3.67302171959274*^9, 
   3.6730217279457555`*^9}, 3.673021774996839*^9, {3.673021815286314*^9, 
   3.673021901207467*^9}, {3.6730219365997305`*^9, 3.673021968417989*^9}, {
   3.6730220101308627`*^9, 3.6730220731245756`*^9}, 3.6730221232392645`*^9, {
   3.6730221668179436`*^9, 3.6730221981421995`*^9}, {3.673022247263487*^9, 
   3.673022262107114*^9}, {3.6730308905187635`*^9, 3.673030896958132*^9}, {
   3.6730312475871863`*^9, 3.673031252035441*^9}, {3.673031285251341*^9, 
   3.673031323547531*^9}, {3.6730313545073023`*^9, 3.6730313691701407`*^9}, {
   3.673031431940731*^9, 3.6730314358119526`*^9}, {3.6730314680337954`*^9, 
   3.6730314935372543`*^9}, {3.6730315341055746`*^9, 3.6730316098489065`*^9}, 
   3.673031646889025*^9, {3.6730316786248407`*^9, 3.673031685976261*^9}, {
   3.6730317944154634`*^9, 3.6730318523907795`*^9}, {3.673095757041665*^9, 
   3.6730959113784*^9}, {3.6730959800256815`*^9, 3.673095982682686*^9}, {
   3.6731074161271477`*^9, 3.6731078161700287`*^9}, {3.673108019360651*^9, 
   3.673108026585064*^9}, {3.6731080608650246`*^9, 3.673108101241334*^9}, {
   3.6731081317600794`*^9, 3.673108323351038*^9}, {3.673109056010944*^9, 
   3.673109075754073*^9}, 3.6731091759918065`*^9, {3.6731092640178413`*^9, 
   3.6731092727663417`*^9}, {3.6731694256176167`*^9, 3.673169444111253*^9}, {
   3.673453659153244*^9, 3.6734536811054993`*^9}, {3.6734543883189497`*^9, 
   3.673454431451417*^9}, {3.673454535939393*^9, 3.6734545362344103`*^9}, {
   3.677836569030838*^9, 3.6778365702305727`*^9}, {3.677838372970248*^9, 
   3.677838437271106*^9}, {3.6778389486163816`*^9, 3.677839031719983*^9}, {
   3.677839106115651*^9, 3.6778391436023474`*^9}, {3.67783918051587*^9, 
   3.677839227735691*^9}, {3.6778393241312313`*^9, 3.677839327696776*^9}, {
   3.677840450306182*^9, 3.677840450875273*^9}, {3.678025255613358*^9, 
   3.6780252607367268`*^9}, {3.6780252954150248`*^9, 3.678025347850349*^9}, {
   3.6780257565793743`*^9, 3.6780257640130315`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calcula a resist\[EHat]ncia do tubular \[AGrave] ruptura e ao colapso de \
acordo com a API BUL 5C3\
\>", "Subchapter",
 CellChangeTimes->{{3.6644496813349485`*^9, 3.6644497100935163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputePipeStrength", "[", 
    RowBox[{
    "siga_", ",", "sigy_", ",", "de_", ",", "di_", ",", "young_", ",", 
     "nu_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"de", "-", "di"}], ")"}], "/", "2"}]}], ",", 
       "BurstStrength", ",", " ", "ColapseStrength", ",", "dt", ",", "Ypa", 
       ",", "A", ",", "B", ",", "C", ",", "F", ",", "G", ",", "range1", ",", 
       "range2", ",", "range3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BurstStrength", "=", 
       RowBox[{"0.875", " ", "2", " ", 
        RowBox[{"sigy", "/", 
         RowBox[{"(", 
          RowBox[{"de", "/", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dt", "=", 
       RowBox[{"de", "/", "t"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ypa", "=", 
       RowBox[{"sigy", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["3", "4"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["siga", "sigy"], ")"}], "2"]}]}], "]"}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           FractionBox["siga", "sigy"]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{"2.8762", "+", 
        RowBox[{"0.10679", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], " ", "Ypa"}], "+", 
        RowBox[{"0.21301", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "10"}]], 
         SuperscriptBox["Ypa", "2"]}], "-", 
        RowBox[{"0.53132", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "16"}]], 
         SuperscriptBox["Ypa", "3"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"B", "=", 
       RowBox[{"0.026233", "+", 
        RowBox[{"0.50609", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "Ypa"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{
        RowBox[{"-", "465.93"}], "+", 
        RowBox[{"0.030867", " ", "Ypa"}], "-", 
        RowBox[{"0.10483", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]], 
         SuperscriptBox["Ypa", "2"]}], "+", 
        RowBox[{"0.36989", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "13"}]], 
         SuperscriptBox["Ypa", "3"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"F", "=", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"46.95", " ", 
          SuperscriptBox["10", "6"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"B", "/", "A"}], ")"}]}], 
             RowBox[{"2", "+", 
              RowBox[{"B", "/", "A"}]}]], ")"}], "3"]}], ")"}], 
        RowBox[{"Ypa", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"3", 
             RowBox[{"(", 
              RowBox[{"B", "/", "A"}], ")"}]}], 
            RowBox[{"2", "+", 
             RowBox[{"B", "/", "A"}]}]], "-", 
           RowBox[{"B", "/", "A"}]}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"B", "/", "A"}], ")"}]}], 
             RowBox[{"2", "+", 
              RowBox[{"B", "/", "A"}]}]]}], ")"}], "2"]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G", "=", 
       RowBox[{"F", " ", 
        RowBox[{"B", "/", "A"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"range1", "=", 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{"B", "/", "A"}]}], 
        RowBox[{"3", " ", 
         RowBox[{"B", "/", "A"}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dt", "\[GreaterEqual]", " ", "range1"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "young"}], 
            RowBox[{"1", "-", 
             SuperscriptBox["nu", "2"]}]], " ", 
           FractionBox["1", 
            RowBox[{"dt", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"dt", "-", "1"}], ")"}], "2"]}]]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"range2", "=", 
       FractionBox[
        RowBox[{"Ypa", 
         RowBox[{"(", 
          RowBox[{"A", "-", "F"}], ")"}]}], 
        RowBox[{"C", "+", 
         RowBox[{"Ypa", 
          RowBox[{"(", 
           RowBox[{"B", "-", "G"}], ")"}]}]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "range2", "\[LessEqual]", " ", "dt", "\[LessEqual]", " ", "range1"}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["F", "dt"], "-", "G"}], ")"}], "Ypa"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"range3", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"A", "-", 
              StyleBox["2",
               FontWeight->"Plain"]}], ")"}], "2"], "+", 
           RowBox[{"8", 
            RowBox[{"(", 
             RowBox[{"B", "+", 
              RowBox[{"C", "/", "Ypa"}]}], ")"}]}]}], "]"}], "+", 
         RowBox[{"(", 
          RowBox[{"A", "-", "2"}], ")"}]}], 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"B", "+", 
           RowBox[{"C", "/", "Ypa"}]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "range3", "\[LessEqual]", " ", "dt", "\[LessEqual]", " ", "range2"}],
          ")"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{
           RowBox[{"Ypa", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["A", "dt"], "-", "B"}], ")"}]}], "-", "C"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dt", "\[LessEqual]", " ", "range3"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{"2", "Ypa", " ", 
           FractionBox[
            RowBox[{"dt", "-", "1"}], 
            SuperscriptBox["dt", "2"]]}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"BurstStrength", ",", "ColapseStrength"}], "}"}], "//", 
       "N"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6622027651456428`*^9, 3.662202781724591*^9}, {
  3.6622042159386234`*^9, 3.6622042728428783`*^9}, {3.66220433057018*^9, 
  3.662204384634272*^9}, {3.6622050359365244`*^9, 3.662205051207398*^9}, {
  3.6622050969720154`*^9, 3.6622051035343904`*^9}, {3.662209710444891*^9, 
  3.662209755901491*^9}, {3.6622098141808243`*^9, 3.662209821283231*^9}, {
  3.662219959668113*^9, 3.6622199683156075`*^9}, {3.677840454624588*^9, 
  3.6778404551607*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcula a tens\[ATilde]o de von Mises", "Subchapter",
 CellChangeTimes->{{3.664449722012049*^9, 3.664449730095125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeVonMises", "[", 
    RowBox[{"sigr_", ",", "sigt_", ",", "siga_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sig", ",", "S", ",", "J2", ",", "vm", ",", "teste"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sig", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sigr", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "sigt", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "siga"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"sig", "-", 
        RowBox[{
         RowBox[{"1", "/", "3"}], " ", 
         RowBox[{"Tr", "[", "sig", "]"}], " ", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"J2", "=", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"S", ".", "S"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"3", " ", "J2"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6778300554046583`*^9, 3.677830113839687*^9}, {
  3.6778303393586144`*^9, 3.6778304298960843`*^9}, {3.6778304686887765`*^9, 
  3.6778304768279886`*^9}, {3.677840457930956*^9, 3.677840458430871*^9}, {
  3.6778550612915196`*^9, 3.6778550673319426`*^9}, {3.6826869749557076`*^9, 
  3.6826869914516506`*^9}, {3.6826870404854555`*^9, 3.6826870796906977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeVonMises", "[", 
  RowBox[{"sigr", ",", "sigt", ",", "siga"}], "]"}]], "Input",
 CellChangeTimes->{{3.6778303829676313`*^9, 3.677830384800565*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["3", "2"]], " ", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"siga", "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], ")"}],
      "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"sigr", "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], ")"}],
      "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}], "+", 
       "sigt"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.6826876460780935`*^9, 3.682725723402565*^9, 
  3.68272595234566*^9, 3.682728063156801*^9, 3.6827782710547943`*^9, 
  3.682779750423923*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    FractionBox["3", "2"]], " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"siga", "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"sigr", "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}], "+", 
        "sigt"}], ")"}], "2"]}]]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6778550234194183`*^9, 3.677855025220448*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["siga", "2"], "+", 
   SuperscriptBox["sigr", "2"], "-", 
   RowBox[{"sigr", " ", "sigt"}], "+", 
   SuperscriptBox["sigt", "2"], "-", 
   RowBox[{"siga", " ", 
    RowBox[{"(", 
     RowBox[{"sigr", "+", "sigt"}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.6778550260364943`*^9, 3.678103558007333*^9, 
  3.678103655547414*^9, 3.6781300768151445`*^9, 3.6784578497574005`*^9, 
  3.682673772293558*^9, 3.6826748341362925`*^9, 3.6826757633754416`*^9, 
  3.6826763808577595`*^9, 3.6826773856712313`*^9, 3.6826866559084587`*^9, 
  3.6826876461140957`*^9, 3.682725723430567*^9, 3.6827259523796616`*^9, 
  3.6827280631724014`*^9, 3.682778271070394*^9, 3.682779750439523*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1.3 Press\[ATilde]o resistente de Klever Stewart", \
"Subchapter"]], "Subchapter",
 CellChangeTimes->{
  3.6593716483959255`*^9, {3.660472226181511*^9, 3.6604722271715126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["3", 
      RowBox[{"1", "-", "n"}]]}], "+", 
    SuperscriptBox["4", 
     RowBox[{"1", "-", "n"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682728841373769*^9, 3.6827288543997917`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1Hs01HkYx/HBVlui2dpobLk1XdCUZNq08ZndShSlket2EWlZbXRC2C5k
dYSKZk4hoiZSiRFqJIxLsSHMhYmJGY1xN9UOWSvtzx/f85zXf885z/e8TXyD
mf6aJBLJmXizc7f/QBt/0M0uVebd//WrCv0F7r49FGusO3cyyWtKBT1t8dVi
yg7kqapnitUqrLf5PieTcgCiC5W7gwZV2Nq6iXudcgzZVPNz7wUq8G/V0q9Q
QuEiLrGeylEhNiYxIoHyF0KSEjfznVQ4FqqiXKawob52qCUvYwzfsh3vfPh4
D9zcJcvCzEbxrNVq1y7DQri4Le9M7RqGZ6y0szaxBBHyQKOOrCEEF52mparL
cKwszFzsNohPye0NGhpV4G2j5dNpA2ioflXVsq0GCsvpFbzPSgRGOup4jdRB
tKjz5nVhH6rnW33N/6MeDMNnWNusQC6nbsZg1Wu4xGep7crfg6FXcde1oAlS
28aVVi97QauX8l6Zt6Au9GJxhVQOEcN17MFYK6js4aMaQzKcWBAkEFsKoM48
H7SCLEOjxKNC96oQ2dONwn+9uuFq7ylXKERgOHmKyh9LsTk70SOb2o4tnJK9
t2ldkM2wRAEXOvCBXsDSz3yLPscWjl6tBOqa7tsSugTctJ7INpNOhOS+ZY9V
tSMnXuuyWVQX8vsMMgVHxBj38x46Xi5FU5+O9k6qCNo7LjGL9LshctjYVt0l
wFly30L5wR44eXA2+Ja2YWGlBanDWQYfXeN5k1mtsA3f96V2SgbPtc+DrWfe
IONeEmdlhhzxtyLe/TfZhMNu1s3z9/TCkzZlEN7zGqVif1blRC+M7ZdoM5QN
sGniaipvvAdX5tUaYFoP453Hx1k7FAhITL7b7PQSdGt6SomScFz31qG8WvR8
uvI3J64PEh1uo5ZhDUY27Y+jWCnBj02uYMfysXqYNqQhVCI6M/zIHPNK1FHD
BCEx/Uj2ZkY92liOayKxH5M6gJCiJK3OBB5UrvwUzboBMOZRv4nXeYonbku3
25waxIcJ9/KHEcXgNMdm9i4eAj+BFxpsUYTP9Qf/XFwzhGh6xeBj1mPIUqrG
ySeHIduSd+MHoweYaPuJclF3BNF5zj4P1uQghG3Kj3wxAob+x1VsnTvQbzYl
Kw6PgpG1mvTkTTpcxfnTy2cI0/ayHKZY+HTkzgnpwzFEN2o6XWi/jCqfwjhd
4t+T5AlnT6VF4XnLiT3dewmnpJEt10XhqZ35dwX7CXcpaXOrIpG/PCfD2YPw
K6F6UhGBdEl6cZIvYU9rh8mNZxDmckm+IJLwNVGed+tpWDAO2c7LJTzgbrDG
9nesLjTQ6sgjPLG+7ExAIEwNJQ25jwh3ksMnWAFYNs08YF9EOKLA4vzwcczl
OQTFvSCsLn1SmuEH+QbrNC0hYclZ2rlF3pDe/nhYKCacSqV0BXkSdyukciSE
ZbX72A3ueDNsxv2lm/A21dFlsa54cd+oPoboAomP0deTjuDpvUvaPzK7/2ba
lmf2KI5LZ5qoCK+9v+TX8O146Le0m090hUQ2Kbs4aoMcgYCT/JmwcfXc+SGb
kP1zcqAP0SES6Tf/f/rNkMF13mD5ZdY35jD7KLhppD0+2y0iZS7OP9rY/Q+B
jmtQ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999540950908}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6827288550549927`*^9, 3.682778271117194*^9, 
  3.6827797504863234`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeBurstResistance", "[", 
    RowBox[{"n_", ",", "de_", ",", "t_", ",", "fu_", ",", "sa_", ",", "po_"}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "kdr", ",", "kr", ",", "puts", ",", "pref", ",", "Futs", ",", 
       "pfactor", ",", "pfactorNeck", ",", "pM", ",", "pBurstKS", ",", 
       "pburst"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kdr", "=", 
       RowBox[{
        SuperscriptBox["0.5", 
         RowBox[{"n", "+", "1"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "/", 
           SqrtBox["3"]}], ")"}], 
         RowBox[{"n", "+", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kr", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["4", 
           RowBox[{"1", "-", "n"}]], "-", "1"}], ")"}], "*", 
        SuperscriptBox["3", 
         RowBox[{"n", "-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"puts", "=", 
       FractionBox[
        RowBox[{"2", " ", "kdr", " ", "t", " ", "fu"}], 
        RowBox[{"de", "-", " ", "t"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pref", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["0.5", "n"], "*", "puts"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "/", 
              SqrtBox["3"]}], ")"}], 
            RowBox[{"n", "+", "1"}]], ")"}], "+", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Futs", "=", 
       RowBox[{"Pi", " ", "t", "  ", "fu", 
        RowBox[{"(", 
         RowBox[{"de", "-", "t"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pfactor", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"kr", "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sa", "/", "fu"}], ")"}], "2"]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       FractionBox[
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["sa", "2"], 
          SuperscriptBox["fu", "2"]]}], 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["3", 
           RowBox[{"1", "-", "n"}]]}], "+", 
         SuperscriptBox["4", 
          RowBox[{"1", "-", "n"}]]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"sa", "<", "fu"}], ",", 
        RowBox[{"a", "=", 
         FractionBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["sa", "2"], 
            SuperscriptBox["fu", "2"]]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["3", 
             RowBox[{"1", "-", "n"}]]}], "+", 
           SuperscriptBox["4", 
            RowBox[{"1", "-", "n"}]]}]]}], ",", 
        RowBox[{"a", "=", 
         FractionBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["fu", "2"], 
            SuperscriptBox["fu", "2"]]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["3", 
             RowBox[{"1", "-", "n"}]]}], "+", 
           SuperscriptBox["4", 
            RowBox[{"1", "-", "n"}]]}]]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pfactorNeck", "=", 
       RowBox[{"Sqrt", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pM", "=", 
       RowBox[{"pref", " ", "pfactor"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pBurstKS", "=", 
       RowBox[{"po", "+", 
        RowBox[{"Min", "[", 
         RowBox[{"pM", ",", 
          FractionBox[
           RowBox[{"pM", "+", 
            RowBox[{
             SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         FractionBox["sa", "fu"], "\[LessEqual]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SqrtBox["3"], "2"], ")"}], 
          RowBox[{"1", "-", "n"}]]}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"pM", "\[LessEqual]", " ", 
           FractionBox[
            RowBox[{"pM", "+", 
             RowBox[{
              SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pburst", "=", 
            RowBox[{"po", "+", "pM"}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pburst", "=", " ", 
            RowBox[{"po", "+", 
             FractionBox[
              RowBox[{"pM", "+", 
               RowBox[{
                SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pburst", "=", 
          RowBox[{"po", "+", 
           RowBox[{"pref", "*", "pfactorNeck"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pburst", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6731096170360327`*^9, 3.673109630651811*^9}, {
  3.6778404617945414`*^9, 3.6778404624796343`*^9}, {3.6827287370251856`*^9, 
  3.6827287627964306`*^9}, {3.6827288926042585`*^9, 3.682728998185244*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeBurstResistance", "[", 
     RowBox[{
     "n_", ",", "de_", ",", "t_", ",", "fu_", ",", "sa_", ",", "po_"}], "]"}],
     ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "kdr", ",", "kr", ",", "puts", ",", "pref", ",", "Futs", ",", 
        "pfactor", ",", "pfactorNeck", ",", "pM", ",", "pBurstKS", ",", 
        "pburst"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"kdr", "=", 
        RowBox[{
         SuperscriptBox["0.5", 
          RowBox[{"n", "+", "1"}]], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "/", 
            SqrtBox["3"]}], ")"}], 
          RowBox[{"n", "+", "1"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"kr", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["4", 
            RowBox[{"1", "-", "n"}]], "-", "1"}], ")"}], "*", 
         SuperscriptBox["3", 
          RowBox[{"n", "-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"puts", "=", 
        FractionBox[
         RowBox[{"2", " ", "kdr", " ", "t", " ", "fu"}], 
         RowBox[{"de", "-", " ", "t"}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pref", "=", 
        RowBox[{
         FractionBox[
          RowBox[{
           SuperscriptBox["0.5", "n"], "*", "puts"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", "/", 
               SqrtBox["3"]}], ")"}], 
             RowBox[{"n", "+", "1"}]], ")"}], "+", "1"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Futs", "=", 
        RowBox[{"Pi", " ", "t", "  ", "fu", 
         RowBox[{"(", 
          RowBox[{"de", "-", "t"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pfactor", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{"kr", "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"sa", "/", "fu"}], ")"}], "2"]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"pfactorNeck", "=", 
        SqrtBox[
         FractionBox[
          RowBox[{"1", "-", 
           FractionBox[
            SuperscriptBox["sa", "2"], 
            SuperscriptBox["fu", "2"]]}], 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["3", 
             RowBox[{"1", "-", "n"}]]}], "+", 
           SuperscriptBox["4", 
            RowBox[{"1", "-", "n"}]]}]]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pM", "=", 
        RowBox[{"pref", " ", "pfactor"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pBurstKS", "=", 
        RowBox[{"po", "+", 
         RowBox[{"Min", "[", 
          RowBox[{"pM", ",", 
           FractionBox[
            RowBox[{"pM", "+", 
             RowBox[{
              SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "pBurstKS"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6827286220529833`*^9, 3.682728625032589*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "1.3 ",
 StyleBox["Press\[ATilde]o resistente de Klever Tamano", "Subchapter"]
}], "Subchapter",
 CellChangeTimes->{
  3.659445920234787*^9, {3.660476701991751*^9, 3.6604767253840895`*^9}, 
   3.660477065700554*^9, {3.6604851570197334`*^9, 3.660485161089739*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682726951505809*^9, 3.682726957066127*^9}, 
   3.6827270384347806`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.645890564588749*^9, 3.645890613229531*^9}, 
   3.6458906795713253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcula os fatores de seguran\[CCedilla]a", "Subchapter",
 CellChangeTimes->{{3.664449741620615*^9, 3.6644497506039553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeSafetyFactors", "[", 
    RowBox[{
    "PipeData_", ",", "AxialForce_", ",", "Pint_", ",", "Pext_", ",", "ov_", 
     ",", "ec_", ",", "rs_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KTStress", ",", "KSstress", ",", 
       RowBox[{"KSSF", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"KTSF", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"APISF", "=", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"BarlowSF", "=", 
        RowBox[{"{", "}"}]}], ",", "i", ",", "barlow", ",", "api", ",", "de", 
       ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", ",", "L1", 
       ",", "L2", ",", 
       RowBox[{"pipe", "=", "1"}], ",", "sigy", ",", 
       RowBox[{"VMSF", "=", 
        RowBox[{"{", "}"}]}], ",", "sigr", ",", "sigt", ",", "area", ",", 
       "VMStress"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de", ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", ",", 
         "L1", ",", "L2", ",", "sigy"}], "}"}], "=", 
       RowBox[{"PipeData", "[", 
        RowBox[{"[", "pipe", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{
          RowBox[{"Length", "[", "Pint", "]"}], "-", "1"}]}], ",", 
        RowBox[{"i", ">", "1"}], ",", 
        RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"L1", ">", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pipe", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "de", ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", 
               ",", "L1", ",", "L2", ",", "sigy"}], "}"}], "=", 
             RowBox[{"PipeData", "[", 
              RowBox[{"[", "pipe", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sigr", ",", "sigt"}], "}"}], "=", 
          RowBox[{"ComputeRadialAndTangetialStress", "[", 
           RowBox[{
            RowBox[{"di", "/", "2"}], ",", 
            RowBox[{"di", "/", "2"}], ",", 
            RowBox[{"de", "/", "2"}], ",", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Pext", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"area", "=", 
          RowBox[{
           RowBox[{"Pi", "/", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"de", "^", "2"}], " ", "-", 
             RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"VMStress", "=", 
          RowBox[{"ComputeVonMises", "[", 
           RowBox[{"sigr", ",", "sigt", ",", 
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"KSstress", "=", 
          RowBox[{"ComputeBurstResistance", "[", 
           RowBox[{"1", ",", "de", ",", 
            RowBox[{"0.5", 
             RowBox[{"(", 
              RowBox[{"de", " ", "-", "di"}], ")"}]}], ",", "sigy", ",", 
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            RowBox[{"Pext", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"KTStress", "=", 
          RowBox[{"ComputeColapseStrengthKT", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            "sigy", ",", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "de", ",", 
            RowBox[{"0.5", 
             RowBox[{"(", 
              RowBox[{"de", " ", "-", "di"}], ")"}]}], ",", "young", ",", 
            "nu", ",", "ov", ",", "ec", ",", "rs"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"api", "=", 
          RowBox[{"ComputePipeStrength", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            "sigy", ",", "de", ",", "di", ",", "young", ",", "nu"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"burst", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltap", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Pint", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"Pext", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltap", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Pint", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "+", 
               RowBox[{"Pext", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"BarlowSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"api", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"APISF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"api", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"VMSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sigy", "/", "VMStress"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"KSSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"KSstress", "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"KTSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"KTStress", "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "BarlowSF", ",", "APISF", ",", "VMSF", ",", "KSSF", ",", "KTSF"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730989980258226`*^9, 3.6730989996250257`*^9}, {
  3.673109694587468*^9, 3.6731097058831143`*^9}, {3.673109737122901*^9, 
  3.6731098750027876`*^9}, {3.6731238351922646`*^9, 3.6731239294776573`*^9}, {
  3.682687240213879*^9, 3.682687270459609*^9}, {3.682709280490691*^9, 
  3.6827092813777423`*^9}, {3.682709372384948*^9, 3.682709409786087*^9}, {
  3.6827101181986055`*^9, 3.6827101228618727`*^9}, {3.682710312749733*^9, 
  3.6827103731001854`*^9}, {3.682710405969065*^9, 3.6827104538988066`*^9}, {
  3.6827104876257353`*^9, 3.6827105415788217`*^9}, {3.6827106111768026`*^9, 
  3.6827106304819064`*^9}, {3.6827107287905293`*^9, 3.6827107290075417`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_", ",", "fy_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "+", 
      RowBox[{"0.440", " ", 
       RowBox[{"rs", "/", "fy"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "-", 
      RowBox[{"0.440", " ", "rs"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputeColapseStrengthKT", "[", 
   RowBox[{
   "siga_", ",", "sigy_", ",", "pi_", ",", "d_", ",", "t_", ",", "young_", 
    ",", "nu_", ",", "ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ke", "=", "1"}], ",", "sol", ",", "H", ",", "deltapec", ",", 
      "deltapy", ",", "deltapmises", ",", "deltaptresca", ",", 
      RowBox[{"ky", "=", "1"}], ",", "eq", ",", "po", ",", "Fa", ",", "Feff", 
      ",", "Fy", ",", "Ai", ",", "Ao", ",", "As", ",", "kdr", ",", 
      "BurstStrength", ",", " ", "ColapseStrength", ",", "pyc", ",", "pec", 
      ",", "pym", ",", "xi", ",", "Si", ",", "dt", ",", "c", ",", "val"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"deltaptresca", "=", 
      RowBox[{"ky", " ", "2", " ", "sigy", " ", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         RowBox[{"d", "-", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"deltapmises", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ky", 
           RowBox[{"(", 
            RowBox[{"4.", "/", 
             SqrtBox["3."]}], ")"}], "sigy", 
           FractionBox["t", 
            RowBox[{"(", 
             RowBox[{"d", "-", "t"}], ")"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1.", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["siga", 
             RowBox[{"ky", " ", "sigy"}]], ")"}], "2"]}], ")"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"deltapy", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}], 
        ",", "deltapmises"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"deltapy", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"deltapec", "=", 
      RowBox[{"ke", " ", 
       FractionBox[
        RowBox[{"2.", " ", "young"}], 
        RowBox[{"1.", "-", 
         SuperscriptBox["nu", "2"]}]], 
       FractionBox["1.", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "/", "t"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "/", "t"}], "-", "1."}], ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"Hfunc", "[", 
       RowBox[{"ov", ",", "ec", ",", "rs", ",", "sigy"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ColapseStrength", "=", 
      RowBox[{"pi", "+", 
       FractionBox[
        RowBox[{"2.", " ", "deltapy", " ", "deltapec"}], 
        RowBox[{"deltapy", "+", "deltapec", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"deltapy", "-", "deltapec"}], ")"}], "^", "2"}], " ", 
           "+", 
           RowBox[{"4.", " ", "H", " ", "deltapy", " ", "deltapec"}]}], 
          "]"}]}]]}]}], ";", "\[IndentingNewLine]", "ColapseStrength"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MUD DROP DUE TO LOST RETURNS", "Title",
 CellChangeTimes->{{3.6731235613035994`*^9, 3.6731236018309174`*^9}}],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
8ceZL7xniB9ZbXhr/WR8yT0dP7yO3pM1vHmxrIZ/WRhp5yZ8+vpzpS6jQX66
YP2thqdZN6aN1nSrH+pDxK3PoV7QYw7HDa8ekq0HY3OG3XS+c63ZVqtzjRfn
zT/OdOE1/Gda3+MznDVeBdjx9/h8W7wnaPjkkk/S8NN7Mu0+TM+tV0pW3uhp
3eJ07XcysfWSdnElabIY/Tckzl8U18dIX98ePr/RhVfZCxMW1Esy+0ut/3Gm
C6/hP7X0PT6T+2Rn6+ET89z14hpeFrvZ8Hsv768tjrT1b9Ccjed65XtYzVm9
xe8bXuvfNj2r4etzqL5yq7mFY8si1b/XalMbx/QdNrCsrfxPNrBU31Og4b83
euqdDfrdfY/PivpiiQ3vL7Dx14yxPNLW1yun37O5/gKzeYvfN3x2+2c3fHnt
up7duNLTDRzrizSa89L28NZsm1e1Hn4Lrf1Ovn5q3IP7+R6fjdIb/mzaW4qn
PyydO96ke9n18PG238Zj5tuGN/+1uj18ukjTVffmDEe/2WR9fr7Y/WwnG2Y2
Ndz28AtpfY/PwrrHjr7HZyMNfyyzFZH2hoL2uX+m2xKXr9u4xXam6pE/e6Sd
2fCFx2q/MbSxX0q1eaP/kMbqIk0s7B/emu3S1pW1hg9XOrxZD+cuNBwu4Hlf
qvPIXhb2P7z3cg00nAdWvRKyIYV7CG24jAN0Gg6QTMMBcmk4QC4NB8il4QC5
NBwgms/4AOTScIBcGg6QS8MBcmk4QC4NB8il4QC5NBwgl4YD5NJwgFwaDpAr
ruECDlCrM67hAFk0HCCXhgPk0nCAXBoOkEvDAULZtxAgV1zDZRygp+EAuTQc
IJeGA+TScIBcGg6QS8MBcmk4QC4NB8il4QC5NBwg1MssjxENl3GATsMBkmk4
QC4NB8il4QC5NBwgl4YD5AptuIADFD7jA5BLwwFyaThALg0HyKXhALk0HCCX
hgPk0nCAXBoOkEvDAXLFNVzAAWp1xjUcIIuGA+TScIBcGg6QS8MBcmk4QC4N
Bwhl/3CAXHENl3GAnoYD5NJwgFwaDpBLwwFyaThALg0HyKXhALk0HCCXhgOE
epnlUcMBUoQ2XMYBOg0HSKbhALk0HCCXhgPk0nCAXKENF3CAwmd8AHJpOEAu
DQfIpeEAuTQcIJeGA+TScIBcGg6QS8MBcmk4QC4NB4hWZ/zxGy7gADUNB8il
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
AAAAAEDT/wM2/f11
     "], {{0, 858}, {492, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{492, 858},
   PlotRange->{{0, 492}, {0, 858}}], "Title"]], "Title",
 CellChangeTimes->{3.673123986991947*^9, 3.673124852393445*^9, 
  3.6827118677346735`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"burst", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "100", ",", "951", ",", "1901", ",", "2100", ",", "2100", ",", 
     "2581", ",", "2851", ",", "2995", ",", "3409", ",", "3801", ",", "3823", 
     ",", "4237", ",", "4651", ",", "4751", ",", "5065", ",", "5479", ",", 
     "5700", ",", "5893", ",", "6307", ",", "6650", ",", "6721", ",", "7135", 
     ",", "7549", ",", "7600", ",", "7963", ",", "8377", ",", "8550", ",", 
     "8791", ",", "9066", ",", "9205", ",", "9500", ",", "9500", ",", "9618", 
     ",", "9700", ",", "9700", ",", "9950", ",", "10032", ",", "10400", ",", 
     "10446", ",", "10850", ",", "10860", ",", "11274", ",", "11300", ",", 
     "11688", ",", "11750", ",", "12102", ",", "12200", ",", "12516", ",", 
     "12650", ",", "12930", ",", "13100", ",", "13344", ",", "13550", ",", 
     "13758", ",", "13885", ",", "14000", ",", "14100", ",", "14172", ",", 
     "14200", ",", "14300", ",", "14400", ",", "14500", ",", "14586", ",", 
     "14600", ",", "14700", ",", "14800", ",", "14900", ",", "15000"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InternalPressLostCirc", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.36", ",", "1.36", ",", "1.36", ",", "1.37", ",", "1.37", ",", "1.37", 
     ",", "1.37", ",", "246.55", ",", "377.70", ",", "754.03", ",", "1110.09",
      ",", "1130.36", ",", "1506.70", ",", "1883.03", ",", "1973.64", ",", 
     "2259.36", ",", "2635.70", ",", "2837.18", ",", "3012.03", ",", 
     "3388.36", ",", "3700.72", ",", "3764.69", ",", "4141.03", ",", 
     "4517.36", ",", "4564.27", ",", "4893.69", ",", "5270.03", ",", 
     "5427.82", ",", "5646.36", ",", "5896.81", ",", "6022.69", ",", 
     "6291.27", ",", "6291.45", ",", "6399.03", ",", "6473.09", ",", 
     "6473.27", ",", "6700.45", ",", "6775.36", ",", "7109.54", ",", 
     "7151.69", ",", "7518.63", ",", "7528.02", ",", "7904.36", ",", 
     "7927.72", ",", "8280.69", ",", "8336.81", ",", "8657.02", ",", 
     "8745.90", ",", "9033.36", ",", "9154.99", ",", "9409.69", ",", 
     "9564.08", ",", "9786.02", ",", "9973.17", ",", "10162.35", ",", 
     "10277.71", ",", "10382.26", ",", "10473.17", ",", "10538.69", ",", 
     "10564.08", ",", "10654.99", ",", "10745.90", ",", "10836.81", ",", 
     "10915.02", ",", "10927.72", ",", "11018.63", ",", "11109.53", ",", 
     "11200.44", ",", "11291.26"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressLostCirc", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.00", ",", "74.49", ",", "715.43", ",", "1430.94", ",", "1580.91", ",", 
     "1581.06", ",", "1943.30", ",", "2146.45", ",", "2255.12", ",", 
     "2566.93", ",", "2861.96", ",", "2878.76", ",", "3190.58", ",", 
     "3502.39", ",", "3577.47", ",", "3814.21", ",", "4126.04", ",", 
     "4292.98", ",", "4437.85", ",", "4749.67", ",", "5008.49", ",", 
     "5061.49", ",", "5373.31", ",", "5685.13", ",", "5724.00", ",", 
     "5996.95", ",", "6308.76", ",", "6439.51", ",", "6620.59", ",", 
     "6828.10", ",", "6932.40", ",", "7154.94", ",", "7155.92", ",", 
     "7245.04", ",", "7306.41", ",", "7306.57", ",", "7494.80", ",", 
     "7556.87", ",", "7833.76", ",", "7868.69", ",", "8172.72", ",", 
     "8180.50", ",", "8492.32", ",", "8511.68", ",", "8804.15", ",", 
     "8850.64", ",", "9115.96", ",", "9189.60", ",", "9427.78", ",", 
     "9528.56", ",", "9739.60", ",", "9867.52", ",", "10051.41", ",", 
     "10206.48", ",", "10363.23", ",", "10458.82", ",", "10545.44", ",", 
     "10620.77", ",", "10675.05", ",", "10696.09", ",", "10771.42", ",", 
     "10846.74", ",", "10922.07", ",", "10986.87", ",", "10997.39", ",", 
     "11072.72", ",", "11148.04", ",", "11223.37", ",", "11298.62"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"AxialForceLostCircWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "572652", ",", "567361", ",", "521838", ",", "471018", ",", "460366", ",",
      "460355", ",", "434627", ",", "420198", ",", "412480", ",", "390333", 
     ",", "369379", ",", "368186", ",", "346038", ",", "323891", ",", 
     "318559", ",", "301744", ",", "279597", ",", "267739", ",", "257450", 
     ",", "235302", ",", "216920", ",", "213155", ",", "191008", ",", 
     "168861", ",", "166100", ",", "146713", ",", "124566", ",", "115281", 
     ",", "102419", ",", "87680", ",", "80272", ",", "64461", ",", "78890", 
     ",", "73268", ",", "69395", ",", "69396", ",", "57528", ",", "53616", 
     ",", "36166", ",", "33965", ",", "14805", ",", "14315", ",", 
     RowBox[{"-", "5338"}], ",", 
     RowBox[{"-", "6558"}], ",", 
     RowBox[{"-", "24987"}], ",", 
     RowBox[{"-", "27917"}], ",", 
     RowBox[{"-", "44637"}], ",", 
     RowBox[{"-", "49278"}], ",", 
     RowBox[{"-", "64289"}], ",", 
     RowBox[{"-", "70641"}], ",", 
     RowBox[{"-", "83941"}], ",", 
     RowBox[{"-", "92002"}], ",", 
     RowBox[{"-", "103591"}], ",", 
     RowBox[{"-", "113363"}], ",", 
     RowBox[{"-", "123240"}], ",", 
     RowBox[{"-", "129264"}], ",", 
     RowBox[{"-", "134602"}], ",", 
     RowBox[{"-", "139149"}], ",", 
     RowBox[{"-", "142425"}], ",", 
     RowBox[{"-", "143695"}], ",", 
     RowBox[{"-", "148241"}], ",", 
     RowBox[{"-", "152788"}], ",", 
     RowBox[{"-", "157326"}], ",", 
     RowBox[{"-", "161215"}], ",", 
     RowBox[{"-", "161846"}], ",", 
     RowBox[{"-", "166366"}], ",", 
     RowBox[{"-", "170886"}], ",", 
     RowBox[{"-", "175406"}], ",", 
     RowBox[{"-", "179926"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvecini", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "951", ",", "1901", ",", "2100", ",", "2100", ",", "2851", ",", 
     "3801", ",", "4751", ",", "5700", ",", "6650", ",", "7600", ",", "8550", 
     ",", "9500", ",", "9500", ",", "9501", ",", "9700", ",", "9700", ",", 
     "9950", ",", "10400", ",", "10850", ",", "11300", ",", "11750", ",", 
     "12200", ",", "12650", ",", "13100", ",", "13550", ",", "14000", ",", 
     "14100", ",", "14200", ",", "14300", ",", "14400", ",", "14500", ",", 
     "14600", ",", "14700", ",", "14800", ",", "14900", ",", "15000"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "616757", ",", "565942", ",", "515123", ",", "504471", ",", "504460", ",",
      "464303", ",", "413483", ",", "362664", ",", "311844", ",", "261025", 
     ",", "210205", ",", "159385", ",", "108566", ",", "108566", ",", 
     "108539", ",", "97866", ",", "97866", ",", "84491", ",", "60416", ",", 
     "36341", ",", "12266", ",", 
     RowBox[{"-", "11809"}], ",", 
     RowBox[{"-", "35884"}], ",", 
     RowBox[{"-", "59959"}], ",", 
     RowBox[{"-", "84034"}], ",", 
     RowBox[{"-", "108110"}], ",", 
     RowBox[{"-", "132185"}], ",", 
     RowBox[{"-", "137535"}], ",", 
     RowBox[{"-", "142885"}], ",", 
     RowBox[{"-", "148235"}], ",", 
     RowBox[{"-", "153585"}], ",", 
     RowBox[{"-", "158935"}], ",", 
     RowBox[{"-", "164285"}], ",", 
     RowBox[{"-", "169635"}], ",", 
     RowBox[{"-", "174985"}], ",", 
     RowBox[{"-", "180335"}], ",", 
     RowBox[{"-", "185685"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "AxialForceInitialWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.88", ",", "716.30", ",", "1431.80", ",", "1581.77", ",", "1581.92", 
     ",", "2147.30", ",", "2862.80", ",", "3578.30", ",", "4293.80", ",", 
     "5009.30", ",", "5724.80", ",", "6440.30", ",", "7155.73", ",", 
     "7155.88", ",", "7156.18", ",", "7306.39", ",", "7306.54", ",", 
     "7494.80", ",", "7833.80", ",", "8172.70", ",", "8511.70", ",", 
     "8850.60", ",", "9189.60", ",", "9528.60", ",", "9867.50", ",", 
     "10206.50", ",", "10545.40", ",", "10620.80", ",", "10696.10", ",", 
     "10771.40", ",", "10846.70", ",", "10922.10", ",", "10997.40", ",", 
     "11072.70", ",", "11148.00", ",", "11223.40", ",", "11298.62"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "InternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.88", ",", "716.30", ",", "1431.80", ",", "1581.77", ",", "1581.92", 
     ",", "2147.30", ",", "2862.80", ",", "3578.30", ",", "4293.80", ",", 
     "5009.30", ",", "5724.80", ",", "6440.30", ",", "7155.73", ",", 
     "7155.88", ",", "7156.18", ",", "7309.50", ",", "7309.65", ",", 
     "7501.80", ",", "7847.80", ",", "8193.75", ",", "8539.70", ",", 
     "8885.70", ",", "9231.70", ",", "9577.65", ",", "9923.60", ",", 
     "10269.60", ",", "10615.60", ",", "10697.65", ",", "10779.70", ",", 
     "10861.80", ",", "10943.90", ",", "11025.95", ",", "11108.00", ",", 
     "11190.10", ",", "11272.20", ",", "11354.30", ",", "11436.32"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "ExternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"{", 
    RowBox[{
    "2.172", ",", "2.168", ",", "2.109", ",", "1.994", ",", "1.894", ",", 
     "1.939", ",", "1.964", ",", "2.040", ",", "2.117", ",", "2.122", ",", 
     "2.210", ",", "2.307", ",", "2.331", ",", "2.412", ",", "2.527", ",", 
     "2.593", ",", "2.653", ",", "2.793", ",", "2.921", ",", "2.949", ",", 
     "3.122", ",", "3.318", ",", "3.344", ",", "3.539", ",", "3.793", ",", 
     "3.910", ",", "4.085", ",", "4.305", ",", "4.425", ",", "4.705", ",", 
     "4.488", ",", "4.589", ",", "4.660", ",", "4.660", ",", "4.896", ",", 
     "4.978", ",", "5.385", ",", "5.441", ",", "5.983", ",", "5.998", ",", 
     "6.682", ",", "6.730", ",", "7.542", ",", "7.690", ",", "8.656", ",", 
     "8.969", ",", "10.157", ",", "10.759", ",", "12.286", ",", "13.442", ",",
      "15.543", ",", "17.903", ",", "21.146", ",", "23.771", ",", "26.723", 
     ",", "29.896", ",", "32.692", ",", "33.922", ",", "39.196", ",", 
     "46.402", ",", "56.813", ",", "70.297", ",", "73.107", ",", "100", ",", 
     "100", ",", "100", ",", "100"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"{", 
     RowBox[{
     "100", ",", "69.549", ",", "7.439", ",", "3.836", ",", "2.883", ",", 
      "2.927", ",", "2.951", ",", "3.020", ",", "3.085", ",", "3.089", ",", 
      "3.159", ",", "3.229", ",", "3.246", ",", "3.300", ",", "3.372", ",", 
      "3.411", ",", "3.445", ",", "3.519", ",", "3.581", ",", "3.594", ",", 
      "3.669", ",", "3.746", ",", "3.756", ",", "3.824", ",", "3.903", ",", 
      "3.936", ",", "3.983", ",", "4.037", ",", "4.065", ",", "4.124", ",", 
      "4.107", ",", "4.130", ",", "4.146", ",", "4.146", ",", "4.195", ",", 
      "4.212", ",", "4.286", ",", "4.295", ",", "4.378", ",", "4.381", ",", 
      "4.462", ",", "4.466", ",", "4.529", ",", "4.539", ",", "4.597", ",", 
      "4.614", ",", "4.668", ",", "4.692", ",", "4.742", ",", "4.772", ",", 
      "4.817", ",", "4.856", ",", "4.895", ",", "4.920", ",", "4.942", ",", 
      "4.962", ",", "4.976", ",", "4.981", ",", "5.001", ",", "5.021", ",", 
      "5.042", ",", "5.059", ",", "5.062", ",", "5.083", ",", "5.103", ",", 
      "5.124", ",", "5.145"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Refinamento", " ", "da", " ", "solu\[CCedilla]\[ATilde]o"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refinedl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"dl", ",", 
     RowBox[{"{", 
      RowBox[{"dl", ",", "0", ",", "15000", ",", "500"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "AxialForceInitialWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceLostCircWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "AxialForceLostCircWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressLostCirc", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressLostCirc"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressLostCirc", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressLostCirc"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "Ti"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "lvec", ",", "Tf"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newlvec", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "100", ",", "950", ",", "1900", ",", "2581", ",", "2850", ",", 
      "2995", ",", "3409", ",", "3800", ",", "3823", ",", "4237", ",", "4651",
       ",", "4750", ",", "5065", ",", "5479", ",", "5700", ",", "5893", ",", 
      "6307", ",", "6650", ",", "6721", ",", "7135", ",", "7549", ",", "7600",
       ",", "7963", ",", "8377", ",", "8550", ",", "8791", ",", "9066", ",", 
      "9205", ",", "9500", ",", "9500", ",", "9618", ",", "9700", ",", "9700",
       ",", "9950", ",", "10032", ",", "10400", ",", "10446", ",", "10850", 
      ",", "10860", ",", "11274", ",", "11300", ",", "11688", ",", "11750", 
      ",", "12102", ",", "12200", ",", "12516", ",", "12650", ",", "12930", 
      ",", "13100", ",", "13344", ",", "13550", ",", "13758", ",", "13885", 
      ",", "14000", ",", "14100", ",", "14172", ",", "14200", ",", "14300", 
      ",", "14400", ",", "14500", ",", "14586", ",", "14600", ",", "14700", 
      ",", "14800", ",", "14900", ",", "15000"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "newlvec", ",", "vmsfwellcat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "newlvec", ",", "colapsesfwellcat"}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvec", "=", "refinedl"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"vmsfwellcatwithl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vmsfwellcat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcatwithl", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colapsesfwellcat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lcimento", "=", "9500.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", "8.535"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "9.625"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alfa", "=", 
   RowBox[{"6.9", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"3", " ", 
    RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightperfeet", "=", "53.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "80000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PipeData", "=", 
   RowBox[{"{", 
    RowBox[{
    "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", 
     "weightperfeet", ",", "lcimento"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fi", ",", "Ffim"}], "}"}], "=", 
   RowBox[{"ComputeForces", "[", 
    RowBox[{
    "InternalPressinitial", ",", "ExternalPressinitial", ",", 
     "InternalPressLostCirc", ",", "ExternalPressLostCirc", ",", "Ti", ",", 
     "Tf", ",", "lvec", ",", "PipeData"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputedFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ComputedFfim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WellCatFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AxialForceInitialWellCat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WellCatFfim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AxialForceLostCircWellCat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffini", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ExternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"InternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressLostCircPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressLostCircPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"difffim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ExternalPressLostCirc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"InternalPressLostCirc", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pressaoini", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "InternalPressinitialPlot", ",", "ExternalPressinitialPlot", ",", 
      "diffini"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \
\(o\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressaosobrevi", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InternalPressLostCircPlot", ",", "ExternalPressLostCircPlot", ",", 
       "difffim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \(o\
\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcaini", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFi", ",", "ComputedFi"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Inicial (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Diogo\\\\Dropbox\\\\figs\\\\compara05ftcimentofini.\
jpg\>\"", ",", "compara", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcafim", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFfim", ",", "ComputedFfim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Final (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedata", "=", 
   RowBox[{"{", 
    RowBox[{"de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedatavec", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", 
        RowBox[{"Length", "[", "lvec", "]"}], "]"}], "]"}], ",", "sigy"}], 
     "}"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PiData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PeData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "barlowsf", ",", "apisf", ",", "vmsf", ",", "kssf", ",", "ktsf"}], "}"}],
     "=", 
    RowBox[{"ComputeSafetyFactors", "[", 
     RowBox[{
     "pipedatavec", ",", "ax", ",", "PiData", ",", "PeData", ",", "0.66", ",",
       "13.2", ",", 
      RowBox[{"-", "0.264"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"vmsfplot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vmsfwellcatwithl", ",", "vmsf"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\>\"", ",", 
         "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<von Mises WellCat\>\"", ",", "\"\<von Mises Calculado\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\""}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kssfplot", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ktsf", ",", "apisf", ",", "colapsesfwellcatwithl"}], "}"}], 
     ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<fator de Seguran\[CCedilla]a ao Colapso\>\"", ",", "\"\<\>\""}],
          "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Klever Tamano Calculado\>\"", ",", "\"\<API Calculado\>\"", ",", 
        "\"\<Fator de Seguran\[CCedilla]a ao Colapso - WellCat\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682674377544177*^9, 3.6826743777351875`*^9}, {
   3.68268730561362*^9, 3.682687336124365*^9}, {3.682709636057029*^9, 
   3.682709662688552*^9}, {3.6827103792985396`*^9, 3.68271038193369*^9}, 
   3.68272745697972*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressKick] = \"\>", "\[InvisibleSpace]", "31"}],
  SequenceForm["Length[InternalPressKick] = ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311126623`*^9, 3.682720396490883*^9, 3.682720910926307*^9, 
   3.6827226439664316`*^9, 3.6827227622111945`*^9, 3.6827228192094545`*^9, 
   3.682724686859278*^9, 3.6827257235205717`*^9, 3.6827259524806676`*^9, 
   3.6827264512141933`*^9, 3.6827268166230936`*^9, 3.682726974054098*^9, 
   3.6827274589088306`*^9, 3.6827280633128014`*^9, 3.6827782712731943`*^9, 
   3.6827797506267233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "31"}],
  SequenceForm["Length[InternalPressinitial] = ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311126623`*^9, 3.682720396490883*^9, 3.682720910926307*^9, 
   3.6827226439664316`*^9, 3.6827227622111945`*^9, 3.6827228192094545`*^9, 
   3.682724686859278*^9, 3.6827257235205717`*^9, 3.6827259524806676`*^9, 
   3.6827264512141933`*^9, 3.6827268166230936`*^9, 3.682726974054098*^9, 
   3.6827274589088306`*^9, 3.6827280633128014`*^9, 3.6827782712731943`*^9, 
   3.6827797506267233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressKick] = \"\>", "\[InvisibleSpace]", "31"}],
  SequenceForm["Length[ExternalPressKick] = ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311126623`*^9, 3.682720396490883*^9, 3.682720910926307*^9, 
   3.6827226439664316`*^9, 3.6827227622111945`*^9, 3.6827228192094545`*^9, 
   3.682724686859278*^9, 3.6827257235205717`*^9, 3.6827259524806676`*^9, 
   3.6827264512141933`*^9, 3.6827268166230936`*^9, 3.682726974054098*^9, 
   3.6827274589088306`*^9, 3.6827280633128014`*^9, 3.6827782712731943`*^9, 
   3.6827797506267233`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "31"}],
  SequenceForm["Length[ExternalPressinitial] = ", 31],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311126623`*^9, 3.682720396490883*^9, 3.682720910926307*^9, 
   3.6827226439664316`*^9, 3.6827227622111945`*^9, 3.6827228192094545`*^9, 
   3.682724686859278*^9, 3.6827257235205717`*^9, 3.6827259524806676`*^9, 
   3.6827264512141933`*^9, 3.6827268166230936`*^9, 3.682726974054098*^9, 
   3.6827274589088306`*^9, 3.6827280633128014`*^9, 3.6827782712731943`*^9, 
   3.6827797506267233`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQrRnTf+irxht7BijYHnRofuiEcgcwx6H+APtJQd/F
ne1Qfv+BDCnZOqXlEyH8gukHpF3P/1nYOR0qP/8Az5Jzb2Vz5kL4HYsP8N7L
aeJavhCqfvmB/z/M3hnNWALhR6w+8FGYMSq6czlU//oDT/ROH22uWgXhT9l4
4JFIaLxgzlqoeZsPKPiEVjPpb4Dwa7YeqMnrDN6/fCPU/O0HvlYDBRQ2Q/gp
Ow/kA6Wfz9gCtW/3gRfTLL5WC26D8H32HkhaIqst0LUdav/+A7c2MiUuYdoJ
4c86cODy1HuSBtW7oO45eEBknfvDXZ93Q/h9hw5UlANBzl6o+w4fKJI5Xijz
dB+E33TkwKyZM2fe1DsAde/RA/YvJ9tpvobyy45B9C8/CHX/8QNnzwBB8iEI
P+vEAb0bTboSCoeh/jl5YPWqVauy7kD5cacOGAPB5hlHoP47DdbPE3oUwg86
c+DwV40Yf8FjUP+ePQAACRWxoA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQrRnTf+irxht7BijYHnRofuiEcgcwx6H+APtJQd/F
ne1Qfv+BDCnZOqXlEyH8gukHpF3P/1nYOR0qP/8Az5Jzb2Vz5kL4HYsP8N7L
aeJavhCqfvmB/z/M3hnNWALhR6w+8FGYMSq6czlU//oDT/ROH22uWgXhT9l4
4JFIaLxgzlqoeZsPKPiEVjPpb4Dwa7YeqMnrDN6/fCPU/O0HvlYDBRQ2Q/gp
Ow/kA6Wfz9gCtW/3gRfTLL5WC26D8H32HkhaIqst0LUdav/+A7c2MiUuYdoJ
4c86cODy1HuSBtW7oO45eEBknfvDXZ93Q/h9hw5MsXs52a5kL9R9hw80695o
WvtlH4TfdORABwhYHYC69+gBjdpL6nt/Qfllxw7wbEvg/rbrINT9xw+sAgKt
6kMQftaJA0UyxwtjrA9D/XPyANC2l5N/Q/lxpw6cPQMEu49A/Xf6wKyZM2f+
7DgK4QedOQCO3rBjUP+ePQAA2Om1fA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjRc41B9A5fej8gumo8nPR+V3LEZTvxyVH7EaTf96
VP6UjWjmbUbl12xFM387Kj9lJ5p9u1H5PnvR7N+Pyp91AM09B1H5fYcOMBTI
HC+UkXeAuO/wAQYlENCH8JuOHGC4c/fu3VhzCL/m6AGGS+q1l9TtIfyyYwcY
pti9nFznDOEXHD/AcBek3h3CzzpxgMEFBLwh/JSTBxiAyu00/SH8uFMHGM6e
OXOmJxDCjzh9oCENCL5FQvhBZw44gPhmiRC+z9kDAC93W5E=
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYCYs2Y/kNfNd7YM0DB9qBD80MnlDuAOQ71B9hP
Cvou7myH8vsPZEjJ1iktnwjhF0w/IO16/s/CzulQ+fkHeJaceyubMxfC71h8
gPdeThPX8oVQ9csP/P9h9s5oxhIIP2L1gY/CjFHRncuh+tcfeKJ3+mhz1SoI
f8rGA49EQuMFc9ZCzdt8QMEntJpJfwOEX7P1QE1eZ/D+5Ruh5m8/8LUaKKCw
GcJP2XkgHyj9fMYWqH27D7yYZvG1WnAbhO+z90DSElltga7tUPv3H7i1kSlx
CdNOCH/WgQOXp96TNKjeBXXPwQMi69wf7vq8G8LvO3SgohwIcvZC3Xf4QJHM
8UKZp/sg/KYjB2bNnDnzpt4BqHuPHrB/OdlO8zWUX3YMon/5Qaj7jx84ewYI
kg9B+FknDujdaNKVUDgM9c/JA6tXrVqVdQfKjzt1wBgINs84AvXfabB+ntCj
EH7QmQOHv2rE+Aseg/r37AEAFDmxog==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYCYs2Y/kNfNd7YM0DB9qBD80MnlDuAOQ71B9hP
Cvou7myH8vsPZEjJ1iktnwjhF0w/IO16/s/CzulQ+fkHeJaceyubMxfC71h8
gPdeThPX8oVQ9csP/P9h9s5oxhIIP2L1gY/CjFHRncuh+tcfeKJ3+mhz1SoI
f8rGA49EQuMFc9ZCzdt8QMEntJpJfwOEX7P1QE1eZ/D+5Ruh5m8/8LUaKKCw
GcJP2XkgHyj9fMYWqH27D7yYZvG1WnAbhO+z90DSElltga7tUPv3H7i1kSlx
CdNOCH/WgQOXp96TNKjeBXXPwQMi69wf7vq8G8LvO3Rgit3LyXYle6HuO3yg
WfdG09ov+yD8piMHOkDA6gDUvUcPaNReUt/7C8ovO3aAZ1sC97ddB6HuP35g
FRBoVR+C8LNOHCiSOV4YY30Y6p+TB4C2vZz8G8qPO3Xg7Bkg2H0E6r/TB2bN
nDnzZ8dRCD/ozAFw9IYdg/r37AEA5A21fg==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGZiIAAc6g+g8vtR+QXT0eTno/I7FqOpX47Kj1iN
pn89Kn/KRjTzNqPya7aimb8dlZ+yE82+3ah8n71o9u9H5c86gOaeg6j8vkMH
GApkjhfKyDtA3Hf4AIMSCOhD+E1HDjDcuXv3bqw5hF9z9ADDJfXaS+r2EH7Z
sQMMU+xeTq5zhvALjh9guAtS7w7hZ504wOACAt4QfsrJAwxA5Xaa/hB+3KkD
DGfPnDnTEwjhR5w+0JAGBN8iIfygMwccQHyzRAjf5+wBADqbW5M=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 11436.32}, {-15000., 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 11436.32}, {-15000., 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.6827797507203236`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQffirRkz/oa/2DFCAwneoPzBxU7jJmiMwfv+BV8Yd
bNa3oPyC6QfeBO6Qa30Nk5+Pyu9YfODc3GPbXz8ud4CoX35gj2FTZ51qF4Qf
sfoAt369MafuFAjfYf2B5W2TmETcZ0P4UzYeOB1+bHGuwUIIv2PzAXnxmTs2
7F0C4ddsPfBu08zuaV4roOZvP3B5kpmK7Y3VEH7KzgMbzvp9nJeyHmrf7gPO
gl+7LlZshPB99h543KPAFGy/GWr//gO7r+zzMGfbCuHPOnDg9ELXbZvPbIO6
5yDYf66Td0D4fYcO1LE/KleI2gV13+ED2+9wt+9R2APhNx05UHUj4onH871Q
9x49sFj429mVa/dD+GXHDjysElknu+sA1P3HD4TEBvCkzz0I4WedOKD/+/iU
hQ2HoP45eWAFu2zK/eTDEH7cqQPVIuvcFd2PQP13GmxeutZRCD/oDFh+Ie8x
qH/PHgAAaV61lg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQjQ68xQMYhGrKHcAch/oDNi3vZqxraofy+w+osBxo
X7t4IoRfMP3APasfEYZt06Hy8w9ELkpzNsqcC+F3LD4wWTK26+jShVD1yw/o
K5hNvTZtCYQfsfqAqvBrAbWO5VD96w+8Yl/AHVy5CsKfsvGArmSbREbWWqh5
mw8kz+IxeK67AcKv2Xqg4tGl9wXLNkLN334gzCRyja/8Zgg/ZeeB1MX62gun
b4Hat/vAHeZ7HpYC2yB8n70Hfjv90r7YsR1q//4D5mcDJ+1g3AnhzzpwwKu6
Wd+nahfUPQcP2HJdX/zh024Iv+/QgcyYvmNLc/ZC3Xf4wEe91EfBT/dB+E1H
DuwXf6D0U+8A1L1HDyw7P5Pd4jWUX3bswA651tedyw9C3X/8gH+po+Gd5EMQ
ftaJA2Gde94rKRyG+ufkgXP/jHdn34Hy404dkG99HbhjxhGo/04fiOk/9JUj
9CiEH3TmwOGvGjH+gseg/j17AAAykqrZ
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQffirRkz/oa/7GaAg9N3nAv+0cgcwx6H+QHLEFacz
5e1Qfv8B8aR/P8zmTYTwC6YfONWzoXxbw3So/PwDrl/kkrYnz4XwOxYf2NR9
Qm1CEJRfsPxAg/rqp2+l5kD4EasP2H8Pe+f0eBZU//oDup1rRSatngnhT9l4
4EhT/csvxTOg5m0+4GfN4G9tA7WvZusBFhWJFdNYpkHN335g0+rvGXvOTIHw
U3YeMPmkcMpt6mSofbsPpJxa/H1e7CQI32fvgYQbact/qEL947D/wIPD0324
7vRD+LMOHPhx+t3Jwzm9UPccPNBxCBhgf7sg/L5DByKWJ5VqTemAuu/wgQsT
T93apdIG4TcdOaCww4rbe2sz1L1HD3jEvuE0cmuE8MuOHXhQJbKufW0t1P3H
DyT8V5q35FwFhJ914sCDIxPjtD8UQ/1z8kDDyb1HRZXzIPy4UwcYNIHRl5oC
9d/pAw22XNcXB4RC+EFnDjA4APkFslD/nj0AAB6Qs6o=
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYC4sNfNWL6D321Z4ACFL5D/YGJm8JN1hyB8fsP
vDLuYLO+BeUXTD/wJnCHXOtrmPx8VH7H4gPn5h7b/vpxuQNE/fIDewybOutU
uyD8iNUHuPXrjTl1p0D4DusPLG+bxCTiPhvCn7LxwOnwY4tzDRZC+B2bD8iL
z9yxYe8SCL9m64F3m2Z2T/NaATV/+4HLk8xUbG+shvBTdh7YcNbv47yU9VD7
dh9wFvzadbFiI4Tvs/fA4x4FpmD7zVD79x/YfWWfhznbVgh/1oEDpxe6btt8
ZhvUPQfB/nOdvAPC7zt0oI79UblC1C6o+w4f2H6Hu32Pwh4Iv+nIgaobEU88
nu+FuvfogcXC386uXLsfwi87duBhlcg62V0HoO4/fiAkNoAnfe5BCD/rxAH9
38enLGw4BPXPyQMr2GVT7icfhvDjTh2oFlnnruh+BOq/02Dz0rWOQvhBZ8Dy
C3mPQf179gAAdIK1mA==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGZiwATe4gEMQjXlDmCOQ/0Bm5Z3M9Y1tUP5/QdU
WA60r108EcIvmH7gntWPCMO26VD5+QciF6U5G2XOhfA7Fh+YLBnbdXTpQqj6
5Qf0FcymXpu2BMKPWH1AVfi1gFrHcqj+9QdesS/gDq5cBeFP2XhAV7JNIiNr
LdS8zQeSZ/EYPNfdAOHXbD1Q8ejS+4JlG6Hmbz8QZhK5xld+M4SfsvNA6mJ9
7YXTt0Dt233gDvM9D0uBbRC+z94Dv51+aV/s2A61f/8B87OBk3Yw7oTwZx04
4FXdrO9TtQvqnoMHbLmuL/7waTeE33foQGZM37GlOXuh7jt84KNe6qPgp/sg
/KYjB/aLP1D6qXcA6t6jB5adn8lu8RrKLzt2YIdc6+vO5Qeh7j9+wL/U0fBO
8iEIP+vEgbDOPe+VFA5D/XPywLl/xruz70D5cacOyLe+Dtwx4wjUf6cPxPQf
+soRehTCDzpz4PBXjRh/wWNQ/549AAA9tqrb
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYC4sNfNWL6D33dzwAFoe8+F/inlTuAOQ71B5Ij
rjidKW+H8vsPiCf9+2E2byKEXzD9wKmeDeXbGqZD5ecfcP0il7Q9eS6E37H4
wKbuE2oTgqD8guUHGtRXP30rNQfCj1h9wP572Dunx7Og+tcf0O1cKzJp9UwI
f8rGA0ea6l9+KZ4BNW/zAT9rBn9rG6h9NVsPsKhIrJjGMg1q/vYDm1Z/z9hz
ZgqEn7LzgMknhVNuUydD7dt9IOXU4u/zYidB+D57DyTcSFv+QxXqH4f9Bx4c
nu7Ddacfwp914MCP0+9OHs7phbrn4IGOQ8AA+9sF4fcdOhCxPKlUa0oH1H2H
D1yYeOrWLpU2CL/pyAGFHVbc3luboe49esAj9g2nkVsjhF927MCDKpF17Wtr
oe4/fiDhv9K8JecqIPysEwceHJkYp/2hGOqfkwcaTu49KqqcB+HHnTrAoAmM
vtQUqP9OH2iw5bq+OCAUwg86c4DBAcgvkIX69+wBACm0s6w=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-1.36, 11298.62}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-1.36, 11298.62}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.6827797507983236`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQJZl5QcoUyG5A9Tj25ghPId6g9sDC2e99FAEcrv
P/D8pdf73/EKEH7B9ANnp6vx/ZeVh8rPP/C0VMSctUYWwu9YfKBflEPZ8JY0
VP3yA3bbj6x0tpCC8CNWH3g5l5E9fJoEVP/6A6HHNqzI/iIG4U/ZeOB8spik
e5Ao1LzNB86tm/HoxXphCL9m6wG+p6ZTzvMKQc3ffqCS96npk2wBCD9l5wHN
9Qv3vJvMC7Vv94H2T1KnhAO4IHyfvQeA2q9b8LBD7d9/wBloQOwJZgh/1oED
GkD9bS0MUPccPACiEhp/OYD5fYfA/IafnyH8jsNgvsPjVxB+0xEwn2H5bQi/
5iiEXzEDwi87BuHPuAGhC46D6QPRLyH8rBMQvulnCD/l5AHLvscW6/b+hPDj
ToHpE0oMByH+Ow3m70hjhvCDzoD5K1axQfg+Zw8AACKQlGs=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQLflqrfe3S0qODFAA4v9ihPId6g+A+P8MFKH8fjCf
KUEBwi+YfsDoSvR0Hjl5qPx8MF+kRhbC71gM5svckoaqXw7mq1hIQfgRq8F8
nWkSUP3rwXyTL2IQ/pSNYL5NkCjUvM1gvssGYQi/ZiuY78MnBDV/O5gfkiMA
4afsPJCyYrvezim8UPt2g/knA7ggfJ+9YP5NHnao/fvB/JcnmCH8WQfA/J8t
DFD3HDxwIiA/VqjplwOY33cIzDf69RnC7zh8YMLCe7uWPHkF4TcdOaDgvLf0
5MrbEH7N0QMMIAcumQHhlx078GCPU5fZ1BsHIO4/fqAgTtE1OuolhJ914oDF
+gmLeE0/Q/gpJ8H8t3t+Qvhxpw7MCfe4mKbEcBDiv9NgflgaM4QfdAbMd1vF
BuH7nD0AAIuJqMs=
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGZigICsS0qOUCZD8oepRzcwQvkO9Qc2hhbP+2ig
COX3H3j+0uv973gFCL9g+oGz09X4/svKQ+XnH3haKmLOWiML4XcsPtAvyqFs
eEsaqn75AbvtR1Y6W0hB+BGrD7ycy8gePk0Cqn/9gdBjG1ZkfxGD8KdsPHA+
WUzSPUgUat7mA+fWzXj0Yr0whF+z9QDfU9Mp53mFoOZvP1DJ+9T0SbYAhJ+y
84Dm+oV73k3mhdq3+0D7J6lTwgFcEL7P3gNA7dcteNih9u8/4Aw0IPYEM4Q/
68ABDaD+thYGqHsOHgBRCY2/HMD8vkNgfsPPzxB+x2Ew3+HxKwi/6QiYz7D8
NoRfcxTCr5gB4Zcdg/Bn3IDQBcfB9IHolxB+1gkI3/QzhJ9y8oBl32OLdXt/
Qvhxp8D0CSWGgxD/nQbzd6QxQ/hBZ8D8FavYIHyfswcALbSUbQ==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYCYslXa72/XVJyZIACEP8XI5TvUH8AxP9noAjl
94P5TAkKEH7B9ANGV6Kn88jJQ+Xng/kiNbIQfsdiMF/mljRU/XIwX8VCCsKP
WA3m60yTgOpfD+abfBGD8KdsBPNtgkSh5m0G8102CEP4NVvBfB8+Iaj528H8
kBwBCD9l54GUFdv1dk7hhdq3G8w/GcAF4fvsBfNv8rBD7d8P5r88wQzhzzoA
5v9sYYC65+CBEwH5sUJNvxzA/L5DYL7Rr88QfsfhAxMW3tu15MkrCL/pyAEF
572lJ1fehvBrjh5gADlwyQwIv+zYgQd7nLrMpt44AHH/8QMFcYqu0VEvIfys
Ewcs1k9YxGv6GcJPOQnmv93zE8KPO3VgTrjHxTQlhoMQ/50G88PSmCH8oDNg
vtsqNgjf5+wBAJatqM0=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Inicial (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.6827797508607235`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQI3KhUdoUyGyR3ztMNXKkD4DvUHLvWJchzeIA/l
9x9oNLjUd5VPDsIvmH7g7HQ1vts5MlD5+Qekcyd77zslBeF3LD7A93u3xCUN
Saj65Qe2597e9qlNHMKPWH3gOt+ZrZ+fiEL1rz/wX49NlNlZBMKfsvHAhiXT
7ZUXCkHN23zgcQ7XY4n/AhB+zdYDH5ICBPN28UHN335g0UY7k2+l3BB+ys4D
ityRJ9YZcUDt233gkK6p9KV3LBC+z94DyUDtb1cxQu3ff0BDsjvrxJk/DmD+
rAMHNGP6D4m6foPwpxw8AKIWVL6H8PsOHVjv8tbryptXEH7H4QPah80XMay+
B+E3HTkQa21wne/rXgi/5uiB347urPtizoPNYSg7BqHzHkPoguMH1ouZJ8qx
vofws04cOHIYCHy/QvgpJw/Mne5a80niN4QfdwpMB+QxHIT47zSYX2DCDOEH
nQHzN3xjhfB9zh4AAB4NoAw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQ/Uhy1xqLNkVHBigA8W22KkD4DvUHjhiXRDaekIfy
+8H8TjU5CL9gOpg/sUUGKj8fzJ/5SArC71gM5i90kISqXw7mr5wnDuFHrAbz
N/4RhepfD+bvjBKB8KdsBPMP7hCCmrcZzD8pJgjh12w90JH+YtOil3xQ87eD
+ZuWckP4KTvB/EOJHFD7doP5l2RZIXyfvWD+o5uMUPv3HxA4fyH1qfZfBzB/
1gEwn3XJNwh/ykEwX1XmA4Tfd+iAbGrZ51XvX0H4HYcPsN9TfNOz8R6E33Tk
QEEk44VZ/Psg/JqjBzY88GneHnz+AJhfduzAFeYLHyZlP4bwC44fWHYmdPMi
pvcQftaJA3lNW4/v8/kK4aecPLA93+a8hsRvCD/u1AGpgJ7jGwsZDkL8d/oA
m9KtrbImzBB+0JkDT1cq7w/4xgrh+5w9AABYybJf
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGZigIAblYqOUCbD5I552uErFSB8h/oDl/pEOQ5v
kIfy+w80Glzqu8onB+EXTD9wdroa3+0cGaj8/APSuZO9952SgvA7Fh/g+71b
4pKGJFT98gPbc29v+9QmDuFHrD5wne/M1s9PRKH61x/4r8cmyuwsAuFP2Xhg
w5Lp9soLhaDmbT7wOIfrscR/AQi/ZuuBD0kBgnm7+KDmbz+waKOdybdSbgg/
ZecBRe7IE+uMOKD27T5wSNdU+tI7FgjfZ++BZKD2t6sYofbvP6Ah2Z114swf
BzB/1oEDmjH9h0Rdv0H4Uw4eAFELKt9D+H2HDqx3eet15c0rCL/j8AHtw+aL
GFbfg/CbjhyItTa4zvd1L4Rfc/TAb0d31n0x58HmMJQdg9B5jyF0wfED68XM
E+VY30P4WScOHDkMBL5fIfyUkwfmTnet+STxG8KPOwWmA/IYDkL8dxrMLzBh
hvCDzoD5G76xQvg+Zw8AACkxoA4=
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYC4keSu9ZYtCk6MkABiG+zVQHCd6g/cMS4JLLx
hDyU3w/md6rJQfgF08H8iS0yUPn5YP7MR1IQfsdiMH+hgyRU/XIwf+U8cQg/
YjWYv/GPKFT/ejB/Z5QIhD9lI5h/cIcQ1LzNYP5JMUEIv2brgY70F5sWveSD
mr8dzN+0lBvCT9kJ5h9K5IDatxvMvyTLCuH77AXzH91khNq//4DA+QupT7X/
OoD5sw6A+axLvkH4Uw6C+aoyHyD8vkMHZFPLPq96/wrC7zh8gP2e4puejfcg
/KYjBwoiGS/M4t8H4dccPbDhgU/z9uDzB8D8smMHrjBf+DAp+zGEX3D8wLIz
oZsXMb2H8LNOHMhr2np8n89XCD/l5IHt+TbnNSR+Q/hxpw5IBfQc31jIcBDi
v9MH2JRubZU1YYbwg84ceLpSeX/AN1YI3+fsAQBj7bJh
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-179926., 574236.3373573388}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Final (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-179926., 574236.3373573388}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.6827797509231243`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731509685*^9, 3.6827203968809056`*^9, 3.6827209113203297`*^9, 
   3.6827226443834553`*^9, 3.682722762619218*^9, 3.682722819737485*^9, 
   3.682724687299303*^9, 3.6827257239185944`*^9, 3.6827259529156923`*^9, 
   3.682726451551213*^9, 3.6827268170761194`*^9, 3.6827269744591217`*^9, 
   3.682727459285852*^9, 3.682728063734002*^9, 3.682778271678795*^9, 
   3.682779750985524*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731509685*^9, 3.6827203968809056`*^9, 3.6827209113203297`*^9, 
   3.6827226443834553`*^9, 3.682722762619218*^9, 3.682722819737485*^9, 
   3.682724687299303*^9, 3.6827257239185944`*^9, 3.6827259529156923`*^9, 
   3.682726451551213*^9, 3.6827268170761194`*^9, 3.6827269744591217`*^9, 
   3.682727459285852*^9, 3.682728063734002*^9, 3.682778271678795*^9, 
   3.682779751032324*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731509685*^9, 3.6827203968809056`*^9, 3.6827209113203297`*^9, 
   3.6827226443834553`*^9, 3.682722762619218*^9, 3.682722819737485*^9, 
   3.682724687299303*^9, 3.6827257239185944`*^9, 3.6827259529156923`*^9, 
   3.682726451551213*^9, 3.6827268170761194`*^9, 3.6827269744591217`*^9, 
   3.682727459285852*^9, 3.682728063734002*^9, 3.682778271678795*^9, 
   3.682779751094724*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731509685*^9, 3.6827203968809056`*^9, 3.6827209113203297`*^9, 
   3.6827226443834553`*^9, 3.682722762619218*^9, 3.682722819737485*^9, 
   3.682724687299303*^9, 3.6827257239185944`*^9, 3.6827259529156923`*^9, 
   3.682726451551213*^9, 3.6827268170761194`*^9, 3.6827269744591217`*^9, 
   3.682727459285852*^9, 3.682728063734002*^9, 3.682778271678795*^9, 
   3.682779751125924*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQfdzbvNMxgdGBAQrarvevM5aH8h3qD0jOfyJ47RID
lN9/IGq7780HYVB+wfQDwc+OfHZb/d8eIj//QEGV97+uun8QfsfiA3bb5+70
LYDKFyw/sGfba6X5ZVD9EasPXBZb3/rCDWbf+gPzjrA2u+swQfhTNh4QLq/u
69ZkhvA7Nh/IeGZ5Q9mFBcKv2XqgM37G2qJmVqh7th+oWaQZOfE1G4SfsvPA
rgKvkqA2Dqh9uw/It0ySPRjNBeH77D3QabbiUkwdD9T+/Qd+vVBwyWXih/Bn
HTiQZ9Kw3YFJEOqegweCdsi1vr4oBOH3HTqQJBBhueWEMNR9hw/M67VYfYRX
DMJvOnKg4afXoXOvJKDuPXrAUK7IXn6GDIRfduzAz+sd9b0HFKDuP35gpjW7
8DRDFQg/68SBBVL6d1XaNKH+OXkgxlj6R1uIIYQfd+oAD5N2u9hOK6j/Th/4
dMk3SSDDB8IPOnMAEquRUP+ePQAACxac+w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQvVJrl/i9Ej8HBhAIOnPgYrBFuk6JDYQfcfrAA6er
+x+6GkH4cacOqKsViqW/0ILwU04euKOWz1DtpQrhZ504cO+WZ9zPOYoQfsHx
A302uhwbOOUg/LJjB95WZOcX6klB+DVHD7TZdKcdNhaH8JuOHLiyf+n6V1dE
IPyOwweKgz+9nX5SGMLvO3Qg4oiaUfUdQQh/ysEDKoqTJq13E4DwZx04kGE3
Vf/4U14I32H/Abtvsk+mLuGG8H32Hth//l2XzRZOqP92H3ih96P1KQsH1D87
D4Q95Zvc1cUGdf/2A8+jfbhZbVih7t16YOrRjnZFIRao+zYfOLz0Qr0uOzPU
PRsP6Nm+uT9BjAlq//oDvP2GC2bZMELtW31gY8HtJxZlDFDzlx/oyL55xuTR
f3uIeYsP3C3sKn6QDJV3mH/AbbrWB96jMPXTD+gz1W/hFoCa59B/QExD2vSR
A4xffwAAyI6XTA==
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYC4uPe5p2OCYwODFDQdr1/nbE8lO9Qf0By/hPB
a5cYoPz+A1HbfW8+CIPyC6YfCH525LPb6v/2EPn5BwqqvP911f2D8DsWH7Db
PnenbwFUvmD5gT3bXivNL4Pqj1h94LLY+tYXbjD71h+Yd4S12V2HCcKfsvGA
cHl1X7cmM4TfsflAxjPLG8ouLBB+zdYDnfEz1hY1s0Lds/1AzSLNyImv2SD8
lJ0HdhV4lQS1cUDt231AvmWS7MFoLgjfZ++BTrMVl2LqeKD27z/w64WCSy4T
P4Q/68CBPJOG7Q5MglD3HDwQtEOu9fVFIQi/79CBJIEIyy0nhKHuO3xgXq/F
6iO8YhB+05EDDT+9Dp17JQF179EDhnJF9vIzZCD8smMHfl7vqO89oAB1//ED
M63ZhacZqkD4WScOLJDSv6vSpgn1z8kDMcbSP9pCDCH8uFMHeJi028V2WkH9
d/rAp0u+SQIZPhB+0JkDkFiNhPr37AEAFjqc/Q==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQBWJGIGYC4pVau8Tvlfg5MIBA0JkDF4Mt0nVKbCD8iNMH
Hjhd3f/Q1QjCjzt1QF2tUCz9hRaEn3LywB21fIZqL1UIP+vEgXu3PON+zlGE
8AuOH+iz0eXYwCkH4ZcdO/C2Iju/UE8Kwq85eqDNpjvtsLE4hN905MCV/UvX
v7oiAuF3HD5QHPzp7fSTwhB+36EDEUfUjKrvCEL4Uw4eUFGcNGm9mwCEP+vA
gQy7qfrHn/JC+A77D9h9k30ydQk3hO+z98D+8++6bLZwQv23+8ALvR+tT1k4
oP7ZeSDsKd/kri42qPu3H3ge7cPNasMKde/WA1OPdrQrCrFA3bf5wOGlF+p1
2Zmh7tl4QM/2zf0JYkxQ+9cf4O03XDDLhhFq3+oDGwtuP7EoY4Cav/xAR/bN
MyaP/ttDzFt84G5hV/GDZKi8w/wDbtO1PvAehamffkCfqX4LtwDUPIf+A2Ia
0qaPHGD8+gMA02qXTg==
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 22.0428680147107}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\"", 
         TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 22.0428680147107}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"von Mises WellCat\"", "\"von Mises Calculado\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.6827797511883245`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQXXNc8kqMWY4DAwgEnTmw8KzNrabTMRB+xOkDfb/z
PcXZgiH8uFMHVPfqHDvM4wPhp5w8MLVcfea7n64QftaJA2tnBW7a9cQRwi84
fmDxIumcX69tIfyyYwdUlJ2PzWy0hPBrjh6YHvZvyQc+Mwi/6ciBGNeCe+e9
jCH8jsMHBA/XMRdwGUL4fYcO1H/Y4ZPgqQfhTzl44BxX1qHLgtoQ/qwDByQ+
hXq+9NWA8B32H7ib03Lj8nNVCN9n74GLP9bsrjmrDPXf7gM72mb2PfyoCPXP
zgPMSqfyj3gqQN2//YDMavfdW2bLQt279cDW3jsdnu+koO7bfGDpuZaVUo0S
UPdsPLBYQPKwoLcY1P71B/Tt1dNEXEWg9q0+wO2oK2GVKQQ1f/mB2z0rLDY1
CkLNW3zgm7KmseIlUaj++QeWtp75zccEtb9g+oHHO4rZeDdB/ePQf+Bw4Vyp
a6tNofz6AwAkN5yN
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQvTLwTqaMeIgDAwgEnTlw9v2X/W+fuUD4EacP9F56
4lOhYQPhx506sCAhcl29jimEn3LywBtu7Qnr3xpA+FknDrw6dDNCRlUHwi84
fkDb20/3DqcGhF927MBRIeasSR9VIPyaowcu9oRMlG9TgvCbjhyQX2mZWjxF
AcLvOHxALHnr45dSchB+36EDp18v77qdKg3hTzl4YANPfPQVCUkIf9aBA575
P7eIyYpD+A77DzgGmb60TBaF8H32HrAySbvffE8Y6r/dBxhYd8YfbBWC+mfn
gblz5OfLBApC3b/9wOMDj2zDrAWg7t16YLO/6wu5ej6o+zYf2LZ3no7PFh6o
ezYe4Gde5HaBnxtq//oDbakbZNb3cELtW33gxMw585apcUDNX35g+7EqZcH9
7FDzFh+49LHnxRJbXqj++QdM+7t1dxhA3Vsw/cCHigkhhsEyUPn+A1tUU3Vc
nmlD+fUHAFrml5E=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQDQGRDjDWsz0JF/k0XSB8h/oDXH4l+VH/ZaD8/gMP
pnMubMsUhfALph9gdHe0a5/IC5Wff2BmTu289h/sEH7H4gOBbvmno+ZC+QXL
D9wMuC//0Z0Dwo9YfWDV2q3uEz5D+Q7rD5x6LqK6ZQEnhD9l44HlPnmhU/y5
oOZtPmDy/Y1oESM3hF+z9cCqdXw17dug/ILtB6rL0j9E5/FA+Ck7D8jcsM9k
04C6L2L3gZU/HPeoPIXyffYeyLZ5/odpGR/U/v0H2uQVlVIz+SH8WQcOfNQT
/zhXQgDqnoMHnl5Quv2zDsrvO3Tg0jaVXO9LUH7H4QNfp8/aUWApCOE3HTmg
PaUhxHARlF9z9ICKuAR7wT8ov+zYgZOioZpyQUJQ9x8/UM6+oNB6JZSfdeKA
xa/3EqUswlD/nDzwxfzY2ZtJUH7cqQM/gh8vnX0Eyo84fSBulycPk7YIhB90
5oDIOveHVVOgfJ+zBwDoupr9
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQBWJGIGYC4prjkldizHIcGEAg6MyBhWdtbjWdjoHwI04f
6Pud7ynOFgzhx506oLpX59hhHh8IP+Xkganl6jPf/XSF8LNOHFg7K3DTrieO
EH7B8QOLF0nn/HptC+GXHTugoux8bGajJYRfc/TA9LB/Sz7wmUH4TUcOxLgW
3DvvZQzhdxw+IHi4jrmAyxDC7zt0oP7DDp8ETz0If8rBA+e4sg5dFtSG8Gcd
OCDxKdTzpa8GhO+w/8DdnJYbl5+rQvg+ew9c/LFmd81ZZaj/dh/Y0Taz7+FH
Rah/dh5gVjqVf8RTAer+7QdkVrvv3jJbFurerQe29t7p8HwnBXXf5gNLz7Ws
lGqUgLpn44HFApKHBb3FoPavP6Bvr54m4ioCtW/1AW5HXQmrTCGo+csP3O5Z
YbGpURBq3uID35Q1jRUviUL1zz+wtPXMbz4mqP0F0w883lHMxrsJ6h+H/gOH
C+dKXVttCuXXHwAALxOcjw==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQBWJGIGYC4pWBdzJlxEMcGEAg6MyBs++/7H/7zAXCjzh9
oPfSE58KDRsIP+7UgQUJkevqdUwh/JSTB95wa09Y/9YAws86ceDVoZsRMqo6
EH7B8QPa3n66dzg1IPyyYweOCjFnTfqoAuHXHD1wsSdkonybEoTfdOSA/ErL
1OIpChB+x+EDYslbH7+UkoPw+w4dOP16edftVGkIf8rBAxt44qOvSEhC+LMO
HPDM/7lFTFYcwnfYf8AxyPSlZbIohO+z94CVSdr95nvCUP/tPsDAujP+YKsQ
1D87D8ydIz9fJlAQ6v7tBx4feGQbZi0Ade/WA5v9XV/I1fNB3bf5wLa983R8
tvBA3bPxAD/zIrcL/NxQ+9cfaEvdILO+hxNq3+oDJ2bOmbdMjQNq/vID249V
KQvuZ4eat/jApY89L5bY8kL1zz9g2t+tu8MA6t6C6Qc+VEwIMQyWgcr3H9ii
mqrj8kwbyq8/AABlwpeT
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGZigIFIBxjr2Z6Ei3yaLhC+Q/0BLr+S/Kj/MlB+
/4EH0zkXtmWKQvgF0w8wujvatU/khcrPPzAzp3Ze+w92CL9j8YFAt/zTUXOh
/ILlB24G3Jf/6M4B4UesPrBq7Vb3CZ+hfIf1B049F1HdsoATwp+y8cByn7zQ
Kf5cUPM2HzD5/ka0iJEbwq/ZemDVOr6a9m1QfsH2A9Vl6R+i83gg/JSdB2Ru
2GeyaUDdF7H7wMofjntUnkL5PnsPZNs8/8O0jA9q//4DbfKKSqmZ/BD+rAMH
PuqJf5wrIQB1z8EDTy8o3f5ZB+X3HTpwaZtKrvclKL/j8IGv02ftKLAUhPCb
jhzQntIQYrgIyq85ekBFXIK94B+UX3bswEnRUE25ICGo+48fKGdfUGi9EsrP
OnHA4td7iVIWYah/Th74Yn7s7M0kKD/u1IEfwY+Xzj4C5UecPhC3y5OHSVsE
wg86c0BknfvDqilQvs/ZAwDz3pr/
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 47.451908604478575`}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"fator de Seguran\[CCedilla]a ao Colapso\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 47.451908604478575`}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Klever Tamano Calculado\"", "\"API Calculado\"", 
       "\"Fator de Seguran\[CCedilla]a ao Colapso - WellCat\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9, 3.682720396591889*^9, 3.682720911026313*^9, 
   3.6827226440744376`*^9, 3.6827227623122005`*^9, 3.6827228193654633`*^9, 
   3.6827246869532833`*^9, 3.682725723651579*^9, 3.682725952606675*^9, 
   3.6827264512981987`*^9, 3.6827268167150993`*^9, 3.6827269741451035`*^9, 
   3.682727459001836*^9, 3.6827280634532022`*^9, 3.6827782714135942`*^9, 
   3.682779751266324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3 Equa\[CCedilla]\[ATilde]o de estado limite de Klever-Tamano", \
"Subchapter",
 CellChangeTimes->{{3.6603975138303375`*^9, 3.6603975213087654`*^9}, {
   3.660472987602577*^9, 3.660472991152582*^9}, 3.6604777498156834`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_", ",", "fy_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "+", 
      RowBox[{"0.440", " ", 
       RowBox[{"rs", "/", "fy"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "-", 
      RowBox[{"0.440", " ", "rs"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputeColapseStrengthKT", "[", 
   RowBox[{
   "siga_", ",", "sigy_", ",", "pi_", ",", "d_", ",", "t_", ",", "young_", 
    ",", "nu_", ",", "ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ke", "=", "1"}], ",", "sol", ",", "H", ",", "deltapec", ",", 
      "deltapy", ",", "deltapmises", ",", "deltaptresca", ",", 
      RowBox[{"ky", "=", "1"}], ",", "eq", ",", "po", ",", "Fa", ",", "Feff", 
      ",", "Fy", ",", "Ai", ",", "Ao", ",", "As", ",", "kdr", ",", 
      "BurstStrength", ",", " ", "ColapseStrength", ",", "pyc", ",", "pec", 
      ",", "pym", ",", "xi", ",", "Si", ",", "dt", ",", "c", ",", "val"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"deltaptresca", "=", 
      RowBox[{"ky", " ", "2", " ", "sigy", " ", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         RowBox[{"d", "-", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"deltapmises", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ky", 
           RowBox[{"(", 
            RowBox[{"4.", "/", 
             SqrtBox["3."]}], ")"}], "sigy", 
           FractionBox["t", 
            RowBox[{"(", 
             RowBox[{"d", "-", "t"}], ")"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1.", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["siga", 
             RowBox[{"ky", " ", "sigy"}]], ")"}], "2"]}], ")"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"deltapy", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}], 
        ",", "deltapmises"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"deltapy", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"deltapec", "=", 
      RowBox[{"ke", " ", 
       FractionBox[
        RowBox[{"2.", " ", "young"}], 
        RowBox[{"1.", "-", 
         SuperscriptBox["nu", "2"]}]], 
       FractionBox["1.", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "/", "t"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "/", "t"}], "-", "1."}], ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"Hfunc", "[", 
       RowBox[{"ov", ",", "ec", ",", "rs", ",", "sigy"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ColapseStrength", "=", 
      RowBox[{"pi", "+", 
       FractionBox[
        RowBox[{"2.", " ", "deltapy", " ", "deltapec"}], 
        RowBox[{"deltapy", "+", "deltapec", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"deltapy", "-", "deltapec"}], ")"}], "^", "2"}], " ", 
           "+", 
           RowBox[{"4.", " ", "H", " ", "deltapy", " ", "deltapec"}]}], 
          "]"}]}]]}]}], ";", "\[IndentingNewLine]", "ColapseStrength"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeNumericalGrad", "[", 
   RowBox[{
   "NofD_", ",", "nYieldStrength_", ",", "PintofD_", ",", "PextofD_", ",", 
    "nDe_", ",", "nt_", ",", "nYoung_", ",", "nNu_", ",", "X1_", ",", "X2_", 
    ",", "X3_", ",", "X4_", ",", "X5_", ",", "X6_", ",", "X7_", ",", "X8_", 
    ",", "X9_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dx", "=", "0.001"}], ",", "xvecn", ",", "xvecn1", ",", "dgdx", 
      ",", "derivative", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Gx", "[", "xvec_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"xvec", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"ComputeColapseStrengthKT", "[", 
         RowBox[{
          RowBox[{"NofD", "*", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], ",", 
          RowBox[{"nYieldStrength", "*", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"PintofD", "*", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "8", "]"}], "]"}]}], ",", "nDe", ",", 
          RowBox[{"nt", "*", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "nYoung", ",", "nNu", ",", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"PextofD", "*", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "9", "]"}], "]"}]}], "-", 
         RowBox[{"PintofD", "*", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "8", "]"}], "]"}]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xvecn", "=", 
      RowBox[{"{", 
       RowBox[{
       "X1", ",", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7",
         ",", "X8", ",", "X9"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"derivative", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Length", "[", "xvecn", "]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "xvecn", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xvecn1", "=", "xvecn"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xvecn1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "+=", "dx"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"dgdx", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gx", "[", "xvecn1", "]"}], "-", 
            RowBox[{"Gx", "[", "xvecn", "]"}]}], ")"}], "/", "dx"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"derivative", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", "dgdx"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gx", "[", "xvecn", "]"}], "}"}], ",", 
       RowBox[{"{", "derivative", "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682723274933521*^9, 3.6827232825069537`*^9}, {
  3.682724296763966*^9, 3.682724298700077*^9}, {3.6827263830142927`*^9, 
  3.682726398853199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateRVDataVC", "[", "RVdata_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rvvec", "=", 
       RowBox[{"{", "}"}]}], ",", "rvdata", ",", "i", ",", 
      RowBox[{"RVX", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "RVdata", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rvdata", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", "13"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"RVX", ",", " ", 
          RowBox[{"CALCPAR", "[", "rvdata", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "RVX"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.666629231820348*^9, 3.6666293906946435`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SolVector", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IndiceConfiabilidade", "[", 
    RowBox[{
    "PiData_", ",", "PeData_", ",", "AxialForceData_", ",", "CasingData_", 
     ",", "RandomVarsData_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CsVsBeta", ",", "i", ",", "area"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CsVsBeta", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDe", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDi", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nt", "=", 
       RowBox[{"nDe", "-", "nDi"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYoung", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nNu", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYieldStrength", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nDe", "^", "2"}], " ", "-", " ", 
          RowBox[{"nDi", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "PiData", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PintofD", " ", "=", 
          RowBox[{"PiData", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Internal", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"PextofD", " ", "=", 
          RowBox[{"PeData", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "External", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NofD", "=", 
          RowBox[{
           RowBox[{"AxialForceData", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "/", "area"}]}], " ",
          ";", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Axial", " ", "Load", " ", "at", " ", "depth", " ", 
           "D", " ", "in", " ", "psi"}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NRV", "=", 
          RowBox[{"Length", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RVX", "=", 
          RowBox[{"CreateRVDataVC", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"NLS", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NP", " ", "=", " ", "20"}], ";", "\[IndentingNewLine]", 
         RowBox[{"CDFLIMPLOT", "=", 
          SuperscriptBox["10", 
           RowBox[{"-", "2.5"}]]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PRINT", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "vx", ",", "fx", ",", "GX", ",", "GRADX", ",", "X1", ",", "X2", ",",
            "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", ",", "X8", ",", 
           "X9"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"SetLimitStateVectors", "[", "NRV", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"DesignPoint", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"DPCREATE", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"LSPARALLEL", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"BuildRVParameterVectors", "[", "RVX", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"print", "=", 
            RowBox[{"ComputeGrad", "[", 
             RowBox[{
             "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", 
              ",", "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", 
              ",", "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", 
              "X7", ",", "X8", ",", "X9"}], "]"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<g,gradg = \>\"", ",", "print"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GX", "[", "fx", "]"}], ":=", 
          RowBox[{
           RowBox[{"ComputeNumericalGrad", "[", 
            RowBox[{
            "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", 
             ",", "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", ",",
              "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", 
             ",", "X8", ",", "X9"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GRADX", "[", "fx", "]"}], ":=", 
          RowBox[{
           RowBox[{"ComputeNumericalGrad", "[", 
            RowBox[{
            "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", 
             ",", "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", ",",
              "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", 
             ",", "X8", ",", "X9"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"GAUSSIAN", " ", "=", " ", "True"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<NORMAL\>\""}], "&&", 
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<DETERM\>\""}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"GAUSSIAN", " ", "=", " ", "False"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "NRV"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"RX", "=", 
          RowBox[{"IdentityMatrix", "[", "NRV", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "RX", "]"}], "\[Equal]", " ", "1"}], ",", 
           RowBox[{"CORRELATED", " ", "=", "False"}], ",", 
           RowBox[{"CORRELATED", " ", "=", " ", "True"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"cov", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RX", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "w"}], "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "w", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "NRV"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", "1", ",", "NRV"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\n", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "Jyz", ",", "Jzy", ",", "Jzx", ",", "Jxz", ",", "Jxy", ",", "Jyx"}],
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jyz", ",", "Jzy"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobYZ", "[", "RX", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jxz", ",", "Jzx"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobXZ", "[", 
           RowBox[{"RVX", ",", "MEAN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Jyx", " ", "=", " ", 
          RowBox[{"Jyz", ".", "Jzx"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Jxy", " ", "=", " ", 
          RowBox[{"Jxz", ".", "Jzy"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "4.", " ", "Busca", " ", "pelo", " ", "ponto", " ", "de", " ", 
           "projeto", " ", "e", " ", "\[IAcute]ndice", " ", "de", " ", 
           "confiabilidade"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ConvergenceCrit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"100", ",", "\"\<DELTA_BETA\>\"", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "3"}]], ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"xh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"yh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vg", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"FindDesignPoint", "[", "lsn", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"lsn", ",", "1", ",", "NLS"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"BETA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<BETA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ALFA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<ALFA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"SolVector", ",", 
             RowBox[{"{", 
              RowBox[{"revestimento", ",", 
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"data", "[", 
                  RowBox[{"[", "w", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "selectedTube", ",", 
               "PextofD", ",", "PintofD", ",", "NofD", ",", 
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", "w", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "BETA"}], "}"}]}], "]"}],
            ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"CsVsBeta", ",", 
           RowBox[{"{", 
            RowBox[{"BETA", ",", 
             RowBox[{"-", 
              RowBox[{"PiData", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "CsVsBeta"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell["3.3.1 Vetor gradiente", "Section",
 CellChangeTimes->{{3.64344989397775*^9, 3.643449920993295*^9}, {
   3.659279350380483*^9, 3.6592793541039114`*^9}, {3.659281596946475*^9, 
   3.6592816022319775`*^9}, {3.659281994025936*^9, 3.6592819948724947`*^9}, {
   3.659440760630747*^9, 3.6594407667552896`*^9}, {3.660472748952243*^9, 
   3.660472756172253*^9}, {3.6604728641324043`*^9, 3.660472868882411*^9}, {
   3.6604730020825977`*^9, 3.6604730108926096`*^9}, 3.660477747768566*^9}],

Cell[CellGroupData[{

Cell["1.1 Ensemble properties", "Subsection",
 CellChangeTimes->{{3.641821941872019*^9, 3.641821950272355*^9}, {
  3.641904470469964*^9, 3.6419044717099886`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KTRandomVarsData", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<KTme\>\"", ",", "\"\<NORMAL\>\"", ",", "0.9991", ",", 
      RowBox[{"0.067", "*", "0.9991"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<YieldStress\>\"", ",", "\"\<NORMAL\>\"", ",", "1.1", ",", 
      RowBox[{"0.0422", "*", "1.1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Thickness\>\"", ",", "\"\<NORMAL\>\"", ",", "1.0069", ",", 
      RowBox[{"0.0259", "*", "1.0069"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Ovality\>\"", ",", "\"\<WEIBULL MIN\>\"", ",", "0.217", ",", 
      RowBox[{"0.541", "*", "0.217"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Excent\>\"", ",", "\"\<WEIBULL MIN\>\"", ",", "3.924", ",", 
      RowBox[{"0.661", "*", "3.924"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Resid. Stress\>\"", ",", "\"\<NORMAL\>\"", ",", 
      RowBox[{"-", "0.237"}], ",", 
      RowBox[{"0.332", "*", "0.237"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Nax\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Pint\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Pext\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"KTme\"\>", ",", "\<\"NORMAL\"\>", ",", "0.9991`", ",", 
     "0.0669397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"YieldStress\"\>", ",", "\<\"NORMAL\"\>", ",", "1.1`", ",", 
     "0.04642`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Thickness\"\>", ",", "\<\"NORMAL\"\>", ",", "1.0069`", ",", 
     "0.026078709999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ovality\"\>", ",", "\<\"WEIBULL MIN\"\>", ",", "0.217`", ",",
      "0.117397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Excent\"\>", ",", "\<\"WEIBULL MIN\"\>", ",", "3.924`", ",", 
     "2.593764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Resid. Stress\"\>", ",", "\<\"NORMAL\"\>", ",", 
     RowBox[{"-", "0.237`"}], ",", "0.078684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nax\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pint\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pext\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.68272746275605*^9, 3.682728064170803*^9, 
  3.682778272146796*^9, 3.682779751344325*^9, 3.68277986655217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KTRandomVarsDataA", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<KTme\>\"", ",", "\"\<NORMAL\>\"", ",", "0.9991", ",", 
      RowBox[{"0.067", "*", "0.9991"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<YieldStress\>\"", ",", "\"\<NORMAL\>\"", ",", "1.09375", ",", 
      RowBox[{"0.0333", "*", "1.09375"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Thickness\>\"", ",", "\"\<NORMAL\>\"", ",", "0.9876", ",", 
      RowBox[{"0.002", "*", "0.9876"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Ovality\>\"", ",", "\"\<WEIBULL MIN\>\"", ",", "0.66", ",", 
      RowBox[{"0.2", "*", "0.66"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Excent\>\"", ",", "\"\<WEIBULL MIN\>\"", ",", "13.2", ",", 
      RowBox[{"0.2", "*", "13.2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Resid. Stress\>\"", ",", "\"\<NORMAL\>\"", ",", 
      RowBox[{"-", "0.264"}], ",", 
      RowBox[{"0.2", "*", "0.264"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Nax\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Pint\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Pext\>\"", ",", "\"\<DETERM\>\"", ",", "1.`", ",", "0.`"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6827271620548515`*^9, 3.682727231479822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"KTme\"\>", ",", "\<\"NORMAL\"\>", ",", "0.9991`", ",", 
     "0.0669397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"YieldStress\"\>", ",", "\<\"NORMAL\"\>", ",", "1.09375`", 
     ",", "0.036421875000000006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Thickness\"\>", ",", "\<\"NORMAL\"\>", ",", "0.9876`", ",", 
     "0.0019752000000000003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ovality\"\>", ",", "\<\"WEIBULL MIN\"\>", ",", "0.66`", ",", 
     "0.132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Excent\"\>", ",", "\<\"WEIBULL MIN\"\>", ",", "13.2`", ",", 
     "2.64`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Resid. Stress\"\>", ",", "\<\"NORMAL\"\>", ",", 
     RowBox[{"-", "0.264`"}], ",", "0.05280000000000001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nax\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pint\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pext\"\>", ",", "\<\"DETERM\"\>", ",", "1.`", ",", "0.`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6827272444595647`*^9, 3.6827274643381405`*^9, 
  3.6827280641864033`*^9, 3.682778272162396*^9, 3.682779751359925*^9, 
  3.6827798673175707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KTRandomVarsData", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<KTme\>\"", ",", "\"\<NORMAL\>\"", ",", "0.9991", ",", 
      RowBox[{"0.067", "*", "0.9991"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<YieldStress\>\"", ",", "\"\<NORMAL\>\"", ",", "1.1", ",", 
      RowBox[{"0.0422", "*", "1.1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Thickness\>\"", ",", "\"\<NORMAL\>\"", ",", "1.0069", ",", 
      RowBox[{"0.0259", "*", "1.0069"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Ovality\>\"", ",", "\"\<NORMAL\>\"", ",", "0.217", ",", 
      RowBox[{"0.541", "*", "0.217"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Excent\>\"", ",", "\"\<NORMAL\>\"", ",", "3.924", ",", 
      RowBox[{"0.661", "*", "3.924"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Resid. Stress\>\"", ",", "\"\<NORMAL\>\"", ",", 
      RowBox[{"-", "0.237"}], ",", 
      RowBox[{"0.332", "*", "0.237"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Nax\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Pint\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Pext\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6827799481141305`*^9, 3.682779964992364*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"KTme\"\>", ",", "\<\"NORMAL\"\>", ",", "0.9991`", ",", 
     "0.0669397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"YieldStress\"\>", ",", "\<\"NORMAL\"\>", ",", "1.1`", ",", 
     "0.04642`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Thickness\"\>", ",", "\<\"NORMAL\"\>", ",", "1.0069`", ",", 
     "0.026078709999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ovality\"\>", ",", "\<\"NORMAL\"\>", ",", "0.217`", ",", 
     "0.117397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Excent\"\>", ",", "\<\"NORMAL\"\>", ",", "3.924`", ",", 
     "2.593764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Resid. Stress\"\>", ",", "\<\"NORMAL\"\>", ",", 
     RowBox[{"-", "0.237`"}], ",", "0.078684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nax\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", "0.001`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pint\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", 
     "0.001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pext\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", 
     "0.001`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6827799656797657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RVX", "=", 
  RowBox[{
   RowBox[{"CreateRVDataVC", "[", "KTRandomVarsData", "]"}], "//", 
   "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"RVX", "=", 
  RowBox[{
   RowBox[{"CreateRVDataVC", "[", "KTRandomVarsDataA", "]"}], "//", 
   "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.682726301595636*^9, 3.682726303731758*^9}, {
  3.6827266412750645`*^9, 3.6827266493215246`*^9}, {3.682727417413457*^9, 
  3.682727419764591*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"KTme\"\>", "\<\"NORMAL\"\>", "0.9991`", "0.0669397`", "0.`", "0.`",
       "0.9991`", "0.0669397`", "0.46358239999999995`", "0.8163236761399529`",
       "1.181876323860047`", "1.5346176`", "0.`"},
     {"\<\"YieldStress\"\>", "\<\"NORMAL\"\>", "1.1`", "0.04642`", "0.`", 
      "0.`", "1.1`", "0.04642`", "0.7286400000000001`", "0.9732519423662882`",
       "1.226748057633712`", "1.4713600000000002`", "0.`"},
     {"\<\"Thickness\"\>", "\<\"NORMAL\"\>", "1.0069`", 
      "0.026078709999999998`", "0.`", "0.`", "1.0069`", 
      "0.026078709999999998`", "0.7982703199999999`", "0.9356930668226441`", 
      "1.0781069331773556`", "1.21552968`", "0.`"},
     {"\<\"Ovality\"\>", "\<\"NORMAL\"\>", "0.217`", "0.117397`", "0.`", 
      "0.`", "0.217`", "0.117397`", 
      RowBox[{"-", "0.722176`"}], 
      RowBox[{"-", "0.1035480767347022`"}], "0.537548076734702`", "1.156176`",
       "0.`"},
     {"\<\"Excent\"\>", "\<\"NORMAL\"\>", "3.924`", "2.593764`", "0.`", "0.`",
       "3.924`", "2.593764`", 
      RowBox[{"-", "16.826112000000002`"}], 
      RowBox[{"-", "3.1581746867782674`"}], "11.00617468677826`", 
      "24.674112`", "0.`"},
     {"\<\"Resid. Stress\"\>", "\<\"NORMAL\"\>", 
      RowBox[{"-", "0.237`"}], "0.078684`", "0.`", "0.`", 
      RowBox[{"-", "0.237`"}], "0.078684`", 
      RowBox[{"-", "0.866472`"}], 
      RowBox[{"-", "0.45184369165986615`"}], 
      RowBox[{"-", "0.022156308340134018`"}], "0.39247200000000004`", "0.`"},
     {"\<\"Nax\"\>", "\<\"NORMAL\"\>", "1.`", "0.001`", "0.`", "0.`", "1.`", 
      "0.001`", "0.992`", "0.9972695377502432`", "1.0027304622497568`", 
      "1.008`", "0.`"},
     {"\<\"Pint\"\>", "\<\"NORMAL\"\>", "1.`", "0.001`", "0.`", "0.`", "1.`", 
      "0.001`", "0.992`", "0.9972695377502432`", "1.0027304622497568`", 
      "1.008`", "0.`"},
     {"\<\"Pext\"\>", "\<\"NORMAL\"\>", "1.`", "0.001`", "0.`", "0.`", "1.`", 
      "0.001`", "0.992`", "0.9972695377502432`", "1.0027304622497568`", 
      "1.008`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6827263041217804`*^9, 3.6827264557894554`*^9, 
  3.682726649626542*^9, 3.6827271060806494`*^9, 3.682727421976718*^9, 
  3.6827274659232316`*^9, 3.682728064217603*^9, 3.682778272193596*^9, 
  3.6827797513911247`*^9, 3.6827798722615814`*^9, 3.682779967179368*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"KTme\"\>", "\<\"NORMAL\"\>", "0.9991`", "0.0669397`", "0.`", "0.`",
       "0.9991`", "0.0669397`", "0.46358239999999995`", "0.8163236761399529`",
       "1.181876323860047`", "1.5346176`", "0.`"},
     {"\<\"YieldStress\"\>", "\<\"NORMAL\"\>", "1.09375`", 
      "0.036421875000000006`", "0.`", "0.`", "1.09375`", 
      "0.036421875000000006`", "0.802375`", "0.994301445247138`", 
      "1.1931985547528619`", "1.385125`", "0.`"},
     {"\<\"Thickness\"\>", "\<\"NORMAL\"\>", "0.9876`", 
      "0.0019752000000000003`", "0.`", "0.`", "0.9876`", 
      "0.0019752000000000003`", "0.9717984000000001`", "0.9822067909642803`", 
      "0.9929932090357197`", "1.0034016000000001`", "0.`"},
     {"\<\"Ovality\"\>", "\<\"WEIBULL MIN\"\>", "0.66`", "0.132`", "0.`", 
      "0.`", "0.7127837055338433`", "5.797400065742834`", "0.`", 
      "0.2641487614489245`", "0.9640018484532809`", "1.3131128256880797`", 
      "0.`"},
     {"\<\"Excent\"\>", "\<\"WEIBULL MIN\"\>", "13.2`", "2.64`", "0.`", "0.`",
       "14.255674110676864`", "5.797400065742834`", "0.`", 
      "5.282975228978489`", "19.280036969065613`", "26.262256513761592`", 
      "0.`"},
     {"\<\"Resid. Stress\"\>", "\<\"NORMAL\"\>", 
      RowBox[{"-", "0.264`"}], "0.05280000000000001`", "0.`", "0.`", 
      RowBox[{"-", "0.264`"}], "0.05280000000000001`", 
      RowBox[{"-", "0.6864000000000001`"}], 
      RowBox[{"-", "0.4081684067871605`"}], 
      RowBox[{"-", "0.11983159321283968`"}], "0.15840000000000004`", "0.`"},
     {"\<\"Nax\"\>", "\<\"DETERM\"\>", "1.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.95`", "0.5`", "1.5`", "1.05`", "0.`"},
     {"\<\"Pint\"\>", "\<\"DETERM\"\>", "1.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.95`", "0.5`", "1.5`", "1.05`", "0.`"},
     {"\<\"Pext\"\>", "\<\"DETERM\"\>", "1.`", "0.`", "0.`", "0.`", "1.`", 
      "0.`", "0.95`", "0.5`", "1.5`", "1.05`", "0.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6827263041217804`*^9, 3.6827264557894554`*^9, 
  3.682726649626542*^9, 3.6827271060806494`*^9, 3.682727421976718*^9, 
  3.6827274659232316`*^9, 3.682728064217603*^9, 3.682778272193596*^9, 
  3.6827797513911247`*^9, 3.6827798722615814`*^9, 3.6827799672105684`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CsVsBeta1", "=", 
   RowBox[{"IndiceConfiabilidade", "[", 
    RowBox[{"PiData", ",", "PeData", ",", "ax", ",", 
     RowBox[{"pipedatavec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "KTRandomVarsData"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CsVsBeta2", "=", 
   RowBox[{"IndiceConfiabilidade", "[", 
    RowBox[{"PiData", ",", "PeData", ",", "ax", ",", 
     RowBox[{"pipedatavec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "KTRandomVarsDataA"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6826758890336285`*^9, 3.6826759122099543`*^9}, {
   3.682675967041091*^9, 3.682675967537119*^9}, {3.6826760070493793`*^9, 
   3.682676007648413*^9}, 3.6826760396572437`*^9, {3.682677417135031*^9, 
   3.6826774176300597`*^9}, {3.6827227170226097`*^9, 
   3.6827227336615615`*^9}, {3.6827230599232225`*^9, 3.6827230610672884`*^9}, 
   3.682724403426067*^9, {3.6827272408063555`*^9, 3.682727257061285*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ktsf", ",", "CsVsBeta1", ",", "CsVsBeta2"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Depth (ft)\>\"", ",", "\"\<Surface Casing\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<safety factor and reliability index(\[Beta]) \>\"", ",", 
        "\"\< Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<safety factor\>\"", ",", "\"\<reliability indexA(\[Beta])\>\"", 
      ",", "\"\<reliability indexB(\[Beta])\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
      "\"\<X\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "LF"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682676428277472*^9, 3.6826764300775747`*^9}, {
  3.682687381617967*^9, 3.6826873848891544`*^9}, {3.6826875339876823`*^9, 
  3.682687538687951*^9}, {3.6827119042777634`*^9, 3.6827119485252943`*^9}, {
  3.682727259463423*^9, 3.68272726413369*^9}, {3.6827273376788964`*^9, 
  3.682727355996944*^9}, {3.6827273870707216`*^9, 3.6827273987013865`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQXXNc8kqMWY4DAwgEnTmw8KzNrabTMRB+xOkDfb/z
PcXZgiH8uFMHVPfqHDvM4wPhp5w8MLVcfea7n64QftaJA2tnBW7a9cQRwi84
fmDxIumcX69tIfyyYwdUlJ2PzWy0hPBrjh6YHvZvyQc+Mwi/6ciBGNeCe+e9
jCH8jsMHBA/XMRdwGUL4fYcO1H/Y4ZPgqQfhTzl44BxX1qHLgtoQ/qwDByQ+
hXq+9NWA8B32H7ib03Lj8nNVCN9n74GLP9bsrjmrDPXf7gM72mb2PfyoCPXP
zgPMSqfyj3gqQN2//YDMavfdW2bLQt279cDW3jsdnu+koO7bfGDpuZaVUo0S
UPdsPLBYQPKwoLcY1P71B/Tt1dNEXEWg9q0+wO2oK2GVKQQ1f/mB2z0rLDY1
CkLNW3zgm7KmseIlUaj++QeWtp75zccEtb9g+oHHO4rZeDdB/ePQf+Bw4Vyp
a6tNofz6AwAkN5yN
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQfWDtz2y7W7oODFAQoK3KJhoL5TvUHzCaMG1z9X0d
KL//gANbKfemRCi/YPoBh4RtDmsfa0Pl5x/YpH9uX3wqlN+x+MC1BcpWb4uh
/ILlB9ptFvyYPRvKj1h9YK6ryB+zgzD96w/cOFfq+f4JlD9l44G4UtYt79ig
9nVsPrDzgY1pgjqUX7P1QMFB1gfxbjD3bD+wiO+/uVAKlJ+y84CTwAH7lgYo
P2L3AXf7jxdvzYbyffYeaFeZraC2Dea//QfOnjusVX8eyp914ECYgPaiV8+h
/CkHD9w78mx5/X8ov+/QAXVJidWCYtDw6jh8QGy+/iZVHSi/6ciBSKmmLx2O
UH7N0QPnHvrLOIdB+WXHDpxN6nROzoLyC44fWFNX0/K+FsrPOnHAbmpa7LsJ
UH7KyQMNJl2zMhdD+XGnDszo4r+evhXKjzh94N2tCw/fH4Pyg84c8FE+mGpw
Ecp/ceYAAPkgpBE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQ/T15/827N3UdGKBAY8qt9o1hUL5D/YGtN91+Xr2s
A+X3H/gqmrurIxDKL5h+YM4MUdvv57Wh8vMPKIt7+Hb4Qfkdiw8oRoi1dMZC
+QXLD2yMzU+OaIPyI1YfOGUyo+3WGpj+9Qfe6EdKH7gI5U/ZeGCZuV7Bmy8w
8zYfiGz8xNEhBrW/ZuuBqSvf3FhjBnPP9gOiHot+1YVC+Sk7D/g9r23nKIby
I3YfmFle9SGvH8r32XvgxxTHswdXwfy3/4DRjnMyUkeh/FkHDny3ZPpVfQ/K
n3LwwN7pXy78+wbl9x06cG2ysVIJHzS8Og4fmDfvBn+qKpTfdOTANCvjD3Os
ofyaowd2ufxpVQ6E8suOHfjacTeMIw3KLzh+wO3ctDmBVVB+1okDh7auYmTr
g/JTTh5gsHZZor8Qyo87dWBS/OWIq5uh/IjTB+LsHmn9OwrlB505MHfSI/vZ
F6D8F2cOAACd7KnR
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQB2JGIGYC4prjkldizHIcGEAg6MyBhWdtbjWdjoHwI04f
6Pud7ynOFgzhx506oLpX59hhHh8IP+Xkganl6jPf/XSF8LNOHFg7K3DTrieO
EH7B8QOLF0nn/HptC+GXHTugoux8bGajJYRfc/TA9LB/Sz7wmUH4TUcOxLgW
3DvvZQzhdxw+IHi4jrmAyxDC7zt0oP7DDp8ETz0If8rBA+e4sg5dFtSG8Gcd
OCDxKdTzpa8GhO+w/8DdnJYbl5+rQvg+ew9c/LFmd81ZZaj/dh/Y0Taz7+FH
Rah/dh5gVjqVf8RTAer+7QdkVrvv3jJbFurerQe29t7p8HwnBXXf5gNLz7Ws
lGqUgLpn44HFApKHBb3FoPavP6Bvr54m4ioCtW/1AW5HXQmrTCGo+csP3O5Z
YbGpURBq3uID35Q1jRUviUL1zz+wtPXMbz4mqP0F0w883lHMxrsJ6h+H/gOH
C+dKXVttCuXXH/BRPphqcFEXwn9x5sDcSY/sZ19A8AGDg6ik
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4gNrf2bb3dJ1YICCAG1VNtFYKN+h/oDRhGmb
q+/rQPn9BxzYSrk3JUL5BdMPOCRsc1j7WBsqP//AJv1z++JTofyOxQeuLVC2
elsM5RcsP9Bus+DH7NlQfsTqA3NdRf6YHYTpX3/gxrlSz/dPoPwpGw/ElbJu
eccGta9j84GdD2xME9Sh/JqtBwoOsj6Id4O5Z/uBRXz/zYVSoPyUnQecBA7Y
tzRA+RG7D7jbf7x4azaU77P3QLvKbAW1bTD/7T9w9txhrfrzUP6sAwfCBLQX
vXoO5U85eODekWfL6/9D+X2HDqhLSqwWFIOGV8fhA2Lz9Tep6kD5TUcOREo1
felwhPJrjh4499BfxjkMyi87duBsUqdzchaUX3D8wJq6mpb3tVB+1okDdlPT
Yt9NgPJTTh5oMOmalbkYyo87dWBGF//19K1QfsTpA+9uXXj4/hiUH3TmAADt
OZ6b
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["X", {0., 0.}], "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4u/J+2/evanrwAAFGlNutW8Mg/Id6g9sven2
8+plHSi//8BX0dxdHYFQfsH0A3NmiNp+P68NlZ9/QFncw7fDD8rvWHxAMUKs
pTMWyi9YfmBjbH5yRBuUH7H6wCmTGW231sD0rz/wRj9S+sBFKH/KxgPLzPUK
3nyBmbf5QGTjJ44OMaj9NVsPTF355sYaM5h7th8Q9Vj0qy4Uyk/ZecDveW07
RzGUH7H7wMzyqg95/VC+z94DP6Y4nj24Cua//QeMdpyTkToK5c86cOC7JdOv
6ntQ/pSDB/ZO/3Lh3zcov+/QgWuTjZVK+KDh1XH4wLx5N/hTVaH8piMHplkZ
f5hjDeXXHD2wy+VPq3IglF927MDXjrthHGlQfsHxA27nps0JrILys04cOLR1
FSNbH5SfcvIAg7XLEv2FUH7cqQOT4i9HXN0M5UecPhBn90jr31EoP+jMAQA3
66M2
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, -14726.}, PlotRange -> {{0, 20}, {0, -14800.}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -14726.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\" Depth (ft)\"", TraditionalForm], 
        FormBox["\"Surface Casing\"", TraditionalForm]}, {
        FormBox[
        "\"safety factor and reliability index(\[Beta]) \"", TraditionalForm], 
        FormBox[
        "\" Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 20}, {0, -14800.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"safety factor\"", "\"reliability indexA(\[Beta])\"", 
       "\"reliability indexB(\[Beta])\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"X\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Italic, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"X\"", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.682677437584201*^9, 3.6826780483651357`*^9, 3.6826783171355085`*^9, 
   3.682678420703432*^9, 3.6826785995546618`*^9, 3.682685467189468*^9, 
   3.6826867582663136`*^9, 3.6826868754610167`*^9, 3.682687385978216*^9, 
   3.6826875408430743`*^9, 3.68268775092309*^9, {3.682711920578696*^9, 
   3.682711949044324*^9}, 3.6827226873419123`*^9, 3.6827243901643085`*^9, 
   3.6827257329591117`*^9, 3.6827259622802277`*^9, 3.682726482778999*^9, 
   3.682726848186899*^9, 3.6827270037957993`*^9, 3.6827273003457613`*^9, 
   3.682727357110008*^9, {3.6827273958622246`*^9, 3.6827273993444233`*^9}, 
   3.682727500292197*^9, 3.6827280710972157`*^9, 3.6827782726771965`*^9, 
   3.6827797518591256`*^9, 3.682779881457399*^9, 3.682779974801988*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeBeta", "[", 
   RowBox[{"DeterministicData_", ",", "RandomVarsData_", ",", "Grad_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"area", ",", 
      RowBox[{"solution", "=", 
       RowBox[{"{", "}"}]}], ",", "vars", ",", "i", ",", "betan", ",", "prob",
       ",", "alpha", ",", "PostProcess", ",", "k", ",", "g", ",", "RVVec", 
      ",", "RX", ",", "PiData", ",", "PeData", ",", "ax", ",", "pipedatavec", 
      ",", "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", 
      ",", "L0", ",", "LF", ",", "sigy"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"RVVec", ",", "RX"}], "}"}], "=", "RandomVarsData"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PiData", ",", "PeData", ",", "ax", ",", "pipedatavec"}], 
       "}"}], "=", "DeterministicData"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", ",", 
        "L0", ",", "LF", ",", "sigy"}], "}"}], "=", "pipedatavec"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"area", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"de", "^", "2"}], "-", 
         RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "PiData", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", ",", 
         "nDe", ",", "nt", ",", "nYoung", ",", "nNu"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"pipedatavec", "=", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", 
             ",", 
             RowBox[{"lvec", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"lvec", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "lvec", "]"}], "]"}], "]"}], ",", 
             "sigy"}], "}"}], "\[IndentingNewLine]", "}"}]}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vars", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"ax", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
           "sigy", ",", 
           RowBox[{"PiData", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"PeData", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "de", ",", 
           RowBox[{"de", "-", "di"}], ",", "young", ",", "nu"}], "}"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "betan", ",", "prob", ",", "alpha", ",", "PostProcess", ",", "k", 
           ",", "g"}], "}"}], "=", 
         RowBox[{"HRLF", "[", 
          RowBox[{"RVVec", ",", "RX", ",", "Grad", ",", "vars"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"solution", ",", 
          RowBox[{"{", 
           RowBox[{"betan", ",", 
            RowBox[{"-", 
             RowBox[{"PiData", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "solution"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{3.6827800260620875`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KTRandomVarsData", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<KTme\>\"", ",", "\"\<NORMAL\>\"", ",", "0.9991", ",", 
      RowBox[{"0.067", "*", "0.9991"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<YieldStress\>\"", ",", "\"\<NORMAL\>\"", ",", "1.1", ",", 
      RowBox[{"0.0422", "*", "1.1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Thickness\>\"", ",", "\"\<NORMAL\>\"", ",", "1.0069", ",", 
      RowBox[{"0.0259", "*", "1.0069"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Ovality\>\"", ",", "\"\<NORMAL\>\"", ",", "0.217", ",", 
      RowBox[{"0.541", "*", "0.217"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Excent\>\"", ",", "\"\<NORMAL\>\"", ",", "3.924", ",", 
      RowBox[{"0.661", "*", "3.924"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Resid. Stress\>\"", ",", "\"\<NORMAL\>\"", ",", 
      RowBox[{"-", "0.237"}], ",", 
      RowBox[{"0.332", "*", "0.237"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Nax\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Pint\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Pext\>\"", ",", "\"\<NORMAL\>\"", ",", "1.`", ",", "0.001`"}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6827797823448124`*^9, 3.6827797889606247`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"KTme\"\>", ",", "\<\"NORMAL\"\>", ",", "0.9991`", ",", 
     "0.0669397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"YieldStress\"\>", ",", "\<\"NORMAL\"\>", ",", "1.1`", ",", 
     "0.04642`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Thickness\"\>", ",", "\<\"NORMAL\"\>", ",", "1.0069`", ",", 
     "0.026078709999999998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Ovality\"\>", ",", "\<\"NORMAL\"\>", ",", "0.217`", ",", 
     "0.117397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Excent\"\>", ",", "\<\"NORMAL\"\>", ",", "3.924`", ",", 
     "2.593764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Resid. Stress\"\>", ",", "\<\"NORMAL\"\>", ",", 
     RowBox[{"-", "0.237`"}], ",", "0.078684`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nax\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", "0.001`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pint\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", 
     "0.001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Pext\"\>", ",", "\<\"NORMAL\"\>", ",", "1.`", ",", 
     "0.001`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682779790787828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "KTRandomVarsData", "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SDev", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "KTRandomVarsData", "]"}], "[", 
   RowBox[{"[", "4", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"distr", "=", 
  RowBox[{
   RowBox[{"Transpose", "[", "KTRandomVarsData", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nvars", "=", 
   RowBox[{"Length", "[", "M", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RX", "=", 
   RowBox[{"IdentityMatrix", "[", "nvars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RVVec", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ComputeRandomVarData", "[", 
     RowBox[{
      RowBox[{"distr", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"M", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"SDev", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "nvars"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vars", "=", 
  RowBox[{"{", 
   RowBox[{
   "10000", ",", "80000", ",", "1000", ",", "2000", ",", "10", ",", "1", ",", 
    RowBox[{"3", " ", 
     RowBox[{"10", "^", "7"}]}], ",", "0.3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"ComputeNumericalGrad", "[", 
  RowBox[{"vars", ",", "M"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6827774473678193`*^9, 3.6827774476486197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9991`", ",", "1.1`", ",", "1.0069`", ",", "0.217`", ",", "3.924`", ",", 
   RowBox[{"-", "0.237`"}], ",", "1.`", ",", "1.`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944022264`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0669397`", ",", "0.04642`", ",", "0.026078709999999998`", ",", 
   "0.117397`", ",", "2.593764`", ",", "0.078684`", ",", "0.001`", ",", 
   "0.001`", ",", "0.001`"}], "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944178267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>", 
   ",", "\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>", 
   ",", "\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>", ",", "\<\"NORMAL\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944178267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.9991`", ",", "0.0669397`", ",", "0.9991`", ",", "0.0669397`", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1`", ",", "0.04642`", ",", "1.1`", ",", "0.04642`", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0069`", ",", "0.026078709999999998`", ",", "1.0069`", ",", 
     "0.026078709999999998`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.217`", ",", "0.117397`", ",", "0.217`", ",", "0.117397`", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.924`", ",", "2.593764`", ",", "3.924`", ",", "2.593764`", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.237`"}], ",", "0.078684`", ",", 
     RowBox[{"-", "0.237`"}], ",", "0.078684`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.001`", ",", "1.`", ",", "0.001`", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.001`", ",", "1.`", ",", "0.001`", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.001`", ",", "1.`", ",", "0.001`", ",", "1"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944178267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10000", ",", "80000", ",", "1000", ",", "2000", ",", "10", ",", "1", ",", 
   "30000000", ",", "0.3`"}], "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944334264`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"20837.496657260446`", ",", 
   RowBox[{"{", 
    RowBox[{
    "21857.168108555925`", ",", "18722.85275552349`", ",", 
     "23823.461070925987`", ",", 
     RowBox[{"-", "856.3123206113232`"}], ",", 
     RowBox[{"-", "26.298624496121192`"}], ",", 
     RowBox[{"-", "0.03371628554305062`"}], ",", 
     RowBox[{"-", "143.02784132087254`"}], ",", "1999.09999999727`", ",", 
     RowBox[{"-", "2000.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6827781600661974`*^9, 3.6827782726927967`*^9, 
  3.6827783465889454`*^9, 3.6827797519059258`*^9, 3.68277979192763*^9, 
  3.6827799944334264`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"ComputeBeta", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"PiData", ",", "PeData", ",", "ax", ",", 
      RowBox[{"pipedatavec", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"RVVec", ",", "RX"}], "}"}], ",", "ComputeNumericalGrad"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.6827781794102316`*^9, {3.682778219592303*^9, 3.6827782277707176`*^9}, {
   3.682778295476837*^9, 3.6827783145326867`*^9}, {3.68277971366165*^9, 
   3.6827797142388515`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00013606098056051508`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.00010503662992356055`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.92625747769924`"}], ",", "0.0005153568365440975`", ",", 
     "0.0003326985895471471`", ",", 
     RowBox[{"-", "0.00003674918569476757`"}], ",", 
     RowBox[{"-", "0.000024934935216553886`"}], ",", 
     RowBox[{"-", "9.700584965578777`*^-10"}], ",", 
     RowBox[{"-", "1.2058366527512021`*^-6"}], ",", 
     RowBox[{"-", "0.000013204772275621224`"}], ",", "0.`"}], "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 0.00013606098056051508`, 
   " | G(x) = ", -0.00010503662992356055`, "  | y = ", {-14.92625747769924, 
   0.0005153568365440975, 
   0.0003326985895471471, -0.00003674918569476757, -0.000024934935216553886`, \
-9.700584965578777*^-10, -1.2058366527512021`*^-6, -0.000013204772275621224`, 
   0.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029297699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00006591676887879316`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.00003803998043849788`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.68045794408214`"}], ",", 
     RowBox[{"-", "0.1661377087663472`"}], ",", 
     RowBox[{"-", "0.10776668028503612`"}], ",", "0.01191576422099983`", ",", 
     "0.008085046628856434`", ",", "3.1670824366009856`*^-7", ",", 
     "0.00035448738811005853`", ",", 
     RowBox[{"-", "0.000013277870247740964`"}], ",", 
     "0.003609339626731156`"}], "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 0.00006591676887879316, 
   " | G(x) = ", -0.00003803998043849788, 
   "  | y = ", {-14.68045794408214, -0.1661377087663472, \
-0.10776668028503612`, 0.01191576422099983, 0.008085046628856434, 
   3.1670824366009856`*^-7, 
   0.00035448738811005853`, -0.000013277870247740964`, 0.003609339626731156}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029297699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00003340119960526522`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "8.709798407835478`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.431123635002702`"}], ",", 
     RowBox[{"-", "0.32886195102039845`"}], ",", 
     RowBox[{"-", "0.2142660943813334`"}], ",", "0.02371170145515055`", ",", 
     "0.016088792311984564`", ",", "6.345562758672947`*^-7", ",", 
     "0.0006368902896181083`", ",", 
     RowBox[{"-", "0.000013350369365561221`"}], ",", 
     "0.007146000929880714`"}], "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 0.00003340119960526522, 
   " | G(x) = ", -8.709798407835478*^-6, 
   "  | y = ", {-14.431123635002702`, -0.32886195102039845`, \
-0.2142660943813334, 0.02371170145515055, 0.016088792311984564`, 
   6.345562758672947*^-7, 0.0006368902896181083, -0.000013350369365561221`, 
   0.007146000929880714}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029328899*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00021393412443693194`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", "0.000043594420503723086`", 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.1787937594743`"}], ",", 
     RowBox[{"-", "0.4872482688022984`"}], ",", 
     RowBox[{"-", "0.3187404567021055`"}], ",", "0.035294118026903167`", ",", 
     "0.023947663536324923`", ",", "9.508634316353443`*^-7", ",", 
     "0.000851963527281896`", ",", 
     RowBox[{"-", "0.000013459625081146953`"}], ",", "0.01059583243923079`"}],
     "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.00021393412443693194`, " | G(x) = ", 
   0.000043594420503723086`, 
   "  | y = ", {-14.1787937594743, -0.4872482688022984, -0.3187404567021055, 
   0.035294118026903167`, 0.023947663536324923`, 9.508634316353443*^-7, 
   0.000851963527281896, -0.000013459625081146953`, 0.01059583243923079}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029328899*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0004212038416042674`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", "0.00010449318551764009`", 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.923429158796509`"}], ",", 
     RowBox[{"-", "0.6414757824042345`"}], ",", 
     RowBox[{"-", "0.42117418524677364`"}], ",", "0.04665752812539108`", ",", 
     "0.03165793809982021`", ",", "1.265498905882672`*^-6", ",", 
     "0.0010069327645023662`", ",", 
     RowBox[{"-", "0.00001355527712298965`"}], ",", "0.013959956632225712`"}],
     "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0004212038416042674, " | G(x) = ", 
   0.00010449318551764009`, 
   "  | y = ", {-13.923429158796509`, -0.6414757824042345, \
-0.42117418524677364`, 0.04665752812539108, 0.03165793809982021, 
   1.265498905882672*^-6, 0.0010069327645023662`, -0.00001355527712298965, 
   0.013959956632225712`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029328899*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0005113821685984732`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.00012920942504024424`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.664967176776596`"}], ",", 
     RowBox[{"-", "0.7916361121009517`"}], ",", 
     RowBox[{"-", "0.5214480721309482`"}], ",", "0.057777667728771645`", ",", 
     "0.039203151858369124`", ",", "1.5777986823370838`*^-6", ",", 
     "0.0011085032758373359`", ",", 
     RowBox[{"-", "0.000013604812387768561`"}], ",", "0.01723716564416833`"}],
     "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0005113821685984732, 
   " | G(x) = ", -0.00012920942504024424`, 
   "  | y = ", {-13.664967176776596`, -0.7916361121009517, \
-0.5214480721309482, 0.057777667728771645`, 0.039203151858369124`, 
   1.5777986823370838`*^-6, 0.0011085032758373359`, -0.000013604812387768561`,
    0.01723716564416833}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029360099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00005786065665702722`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0007346989052621211`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.696360567863904`"}], ",", 
     RowBox[{"-", "0.7537849251695956`"}], ",", 
     RowBox[{"-", "0.5011219634410183`"}], ",", "0.055833783121947325`", ",", 
     "0.03788420617859441`", ",", "1.522706107860712`*^-6", ",", 
     "0.0009268447365151644`", ",", 
     RowBox[{"-", "0.0037133542531986308`"}], ",", "0.020275051187956805`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.00005786065665702722, 
   " | G(x) = ", -0.0007346989052621211, 
   "  | y = ", {-13.696360567863904`, -0.7537849251695956, \
-0.5011219634410183, 0.055833783121947325`, 0.03788420617859441, 
   1.522706107860712*^-6, 0.0009268447365151644, -0.0037133542531986308`, 
   0.020275051187956805`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029360099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0001737124439209481`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0018595169431137037`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.778939449825332`"}], ",", 
     RowBox[{"-", "0.6870436123623217`"}], ",", 
     RowBox[{"-", "0.46111246119356714`"}], ",", "0.0516836734355999`", ",", 
     "0.035068296350914754`", ",", "1.4058702754951247`*^-6", ",", 
     "0.0007348292325737305`", ",", 
     RowBox[{"-", "0.007921722469217407`"}], ",", "0.02317187435130208`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0001737124439209481, 
   " | G(x) = ", -0.0018595169431137037`, 
   "  | y = ", {-13.778939449825332`, -0.6870436123623217, \
-0.46111246119356714`, 0.0516836734355999, 0.035068296350914754`, 
   1.4058702754951247`*^-6, 0.0007348292325737305, -0.007921722469217407, 
   0.02317187435130208}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029360099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.000013015290374340793`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0036299576966030145`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.85657553851722`"}], ",", 
     RowBox[{"-", "0.6266383522242228`"}], ",", 
     RowBox[{"-", "0.4242116212643988`"}], ",", "0.047805243889334235`", ",", 
     "0.03243672321166071`", ",", "1.297292788292083`*^-6", ",", 
     "0.0005777192617628657`", ",", 
     RowBox[{"-", "0.011927996709570898`"}], ",", "0.02596337771909596`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.000013015290374340793`, 
   " | G(x) = ", -0.0036299576966030145`, 
   "  | y = ", {-13.85657553851722, -0.6266383522242228, -0.4242116212643988, 
   0.047805243889334235`, 0.03243672321166071, 1.297292788292083*^-6, 
   0.0005777192617628657, -0.011927996709570898`, 0.02596337771909596}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800293912992`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.00030124395035180385`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.005556973831971845`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.929819737735428`"}], ",", 
     RowBox[{"-", "0.5716262602700513`"}], ",", 
     RowBox[{"-", "0.3900113297948334`"}], ",", "0.04416726185069885`", ",", 
     "0.029968295439916196`", ",", "1.1959397753994741`*^-6", ",", 
     "0.000449462592255756`", ",", 
     RowBox[{"-", "0.015749000674358804`"}], ",", "0.028655953960177172`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.00030124395035180385`, 
   " | G(x) = ", -0.005556973831971845, 
   "  | y = ", {-13.929819737735428`, -0.5716262602700513, \
-0.3900113297948334, 0.04416726185069885, 0.029968295439916196`, 
   1.1959397753994741`*^-6, 0.000449462592255756, -0.015749000674358804`, 
   0.028655953960177172`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800293912992`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0005857769484851616`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.007178839404332393`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "13.999123916938292`"}], ",", 
     RowBox[{"-", "0.5212902010506594`"}], ",", 
     RowBox[{"-", "0.35820217550940814`"}], ",", "0.040746060624634504`", ",",
      "0.027646955178980654`", ",", "1.1010436542642189`*^-6", ",", 
     "0.00034522706537920556`", ",", 
     RowBox[{"-", "0.0194008992403516`"}], ",", "0.031257193350953116`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0005857769484851616, 
   " | G(x) = ", -0.007178839404332393, 
   "  | y = ", {-13.999123916938292`, -0.5212902010506594, \
-0.35820217550940814`, 0.040746060624634504`, 0.027646955178980654`, 
   1.1010436542642189`*^-6, 0.00034522706537920556`, -0.0194008992403516, 
   0.031257193350953116`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800293912992`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0008203058069788938`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.008260422310513604`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.064920204345949`"}], ",", 
     RowBox[{"-", "0.47503029784939493`"}], ",", 
     RowBox[{"-", "0.32851779481679544`"}], ",", "0.03752054215798185`", ",", 
     "0.02545838740784236`", ",", "1.0119387369442428`*^-6", ",", 
     "0.00026104555428396736`", ",", 
     RowBox[{"-", "0.022899967440204172`"}], ",", "0.03377536479720611`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0008203058069788938, 
   " | G(x) = ", -0.008260422310513604, 
   "  | y = ", {-14.064920204345949`, -0.47503029784939493`, \
-0.32851779481679544`, 0.03752054215798185, 0.02545838740784236, 
   1.0119387369442428`*^-6, 0.00026104555428396736`, -0.022899967440204172`, 
   0.03377536479720611}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029422499*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.000990772132196227`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.00876545060486933`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.127502353876151`"}], ",", 
     RowBox[{"-", "0.43240548758940717`"}], ",", 
     RowBox[{"-", "0.30077331178154354`"}], ",", "0.03447718447656371`", ",", 
     "0.02339341751453835`", ",", "9.281862279097737`*^-7", ",", 
     "0.00019366001136056354`", ",", 
     RowBox[{"-", "0.026256081304576462`"}], ",", "0.036214554413716016`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.000990772132196227, 
   " | G(x) = ", -0.00876545060486933, 
   "  | y = ", {-14.127502353876151`, -0.43240548758940717`, \
-0.30077331178154354`, 0.03447718447656371, 0.02339341751453835, 
   9.281862279097737*^-7, 0.00019366001136056354`, -0.026256081304576462`, 
   0.036214554413716016`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029422499*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "5.0397896362852634`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.000011610683031904045`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.18729184487884`"}], ",", 
     RowBox[{"-", "0.39103188289063784`"}], ",", 
     RowBox[{"-", "0.27366157705666505`"}], ",", "0.03149744381357186`", ",", 
     "0.021371611782340653`", ",", "8.452052363255169`*^-7", ",", 
     "0.00013938566989502021`", ",", 
     RowBox[{"-", "0.02941794761768257`"}], ",", "0.0385029357852229`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 5.0397896362852634`*^-6, 
   " | G(x) = ", -0.000011610683031904045`, 
   "  | y = ", {-14.18729184487884, -0.39103188289063784`, \
-0.27366157705666505`, 0.03149744381357186, 0.021371611782340653`, 
   8.452052363255169*^-7, 0.00013938566989502021`, -0.02941794761768257, 
   0.0385029357852229}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029438099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "4.723420273577972`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "9.241396583092865`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.24427402416844`"}], ",", 
     RowBox[{"-", "0.3546860299364318`"}], ",", 
     RowBox[{"-", "0.24935992245316255`"}], ",", "0.02878364238208131`", ",", 
     "0.019530249406017965`", ",", "7.711752164585409`*^-7", ",", 
     "0.00009802673739400802`", ",", 
     RowBox[{"-", "0.0325174947261031`"}], ",", "0.04079945380675021`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 4.723420273577972*^-6, 
   " | G(x) = ", -9.241396583092865*^-6, 
   "  | y = ", {-14.24427402416844, -0.3546860299364318, \
-0.24935992245316255`, 0.02878364238208131, 0.019530249406017965`, 
   7.711752164585409*^-7, 0.00009802673739400802, -0.0325174947261031, 
   0.04079945380675021}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029453699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "4.2911704660753`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "7.149478733481374`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.29886529365515`"}], ",", 
     RowBox[{"-", "0.3209207511517205`"}], ",", 
     RowBox[{"-", "0.22652519481496486`"}], ",", "0.026214658520353283`", ",",
      "0.017787147511643477`", ",", "7.01327253590631`*^-7", ",", 
     "0.00006634508542546769`", ",", 
     RowBox[{"-", "0.03551016265002094`"}], ",", "0.04303679779438241`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 4.2911704660753*^-6, 
   " | G(x) = ", -7.149478733481374*^-6, 
   "  | y = ", {-14.29886529365515, -0.3209207511517205, \
-0.22652519481496486`, 0.026214658520353283`, 0.017787147511643477`, 
   7.01327253590631*^-7, 0.00006634508542546769, -0.03551016265002094, 
   0.04303679779438241}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029453699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "3.8081132593958955`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "5.416619842435466`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.351224357299555`"}], ",", 
     RowBox[{"-", "0.2894903037197051`"}], ",", 
     RowBox[{"-", "0.2050471642116815`"}], ",", "0.023781946462533166`", ",", 
     "0.016136507821112898`", ",", "6.353854689267219`*^-7", ",", 
     "0.00004266413577980188`", ",", 
     RowBox[{"-", "0.03840182228709299`"}], ",", "0.04521732226003827`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 3.8081132593958955`*^-6, 
   " | G(x) = ", -5.416619842435466*^-6, 
   "  | y = ", {-14.351224357299555`, -0.2894903037197051, \
-0.2050471642116815, 0.023781946462533166`, 0.016136507821112898`, 
   6.353854689267219*^-7, 0.00004266413577980188, -0.03840182228709299, 
   0.04521732226003827}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800294692993`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "3.3194523592072755`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "4.038484462398628`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.401572421476946`"}], ",", 
     RowBox[{"-", "0.26013357172388596`"}], ",", 
     RowBox[{"-", "0.1847952695045404`"}], ",", "0.021474036495751286`", ",", 
     "0.014570548052772693`", ",", "5.730020468383128`*^-7", ",", 
     "0.000025539088177595204`", ",", 
     RowBox[{"-", "0.04120214890324103`"}], ",", "0.04734649223903098`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 3.3194523592072755`*^-6, 
   " | G(x) = ", -4.038484462398628*^-6, 
   "  | y = ", {-14.401572421476946`, -0.26013357172388596`, \
-0.1847952695045404, 0.021474036495751286`, 0.014570548052772693`, 
   5.730020468383128*^-7, 0.000025539088177595204`, -0.04120214890324103, 
   0.04734649223903098}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800294848995`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "2.8547832524594696`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "2.974847348014009`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.44996843517267`"}], ",", 
     RowBox[{"-", "0.2326990884027401`"}], ",", 
     RowBox[{"-", "0.16570823199377704`"}], ",", "0.019286957220898678`", ",",
      "0.013086573660038766`", ",", "5.14038096568161`*^-7", ",", 
     "0.000013735357740074505`", ",", 
     RowBox[{"-", "0.043912810966606486`"}], ",", "0.04942404325425365`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 2.8547832524594696`*^-6, 
   " | G(x) = ", -2.974847348014009*^-6, 
   "  | y = ", {-14.44996843517267, -0.2326990884027401, \
-0.16570823199377704`, 0.019286957220898678`, 0.013086573660038766`, 
   5.14038096568161*^-7, 0.000013735357740074505`, -0.043912810966606486`, 
   0.04942404325425365}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295004992`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "2.4298911878162244`*^-6", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "2.168888272535696`*^-6"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.496610392760763`"}], ",", 
     RowBox[{"-", "0.20697246898787794`"}], ",", 
     RowBox[{"-", "0.14767386689333448`"}], ",", "0.01721044727892198`", ",", 
     "0.011677622235219386`", ",", "4.5818964969380723`*^-7", ",", 
     "6.175219224857642`*^-6", ",", 
     RowBox[{"-", "0.04654281210225708`"}], ",", "0.05145534439288113`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 7, "  | residual = ", 2.4298911878162244`*^-6, 
   " | G(x) = ", -2.168888272535696*^-6, 
   "  | y = ", {-14.496610392760763`, -0.20697246898787794`, \
-0.14767386689333448`, 0.01721044727892198, 0.011677622235219386`, 
   4.5818964969380723`*^-7, 6.175219224857642*^-6, -0.04654281210225708, 
   0.05145534439288113}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295004992`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0009442518185913684`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.004142004094546792`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.541153756549706`"}], ",", 
     RowBox[{"-", "0.18396221441316635`"}], ",", 
     RowBox[{"-", "0.13129694088261837`"}], ",", "0.015304297305403095`", ",",
      "0.010384262717869635`", ",", "4.0752549981219234`*^-7", ",", 
     "3.836270412449494`*^-6", ",", 
     RowBox[{"-", "0.04918432338929524`"}], ",", "0.05353617227465968`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0009442518185913684, 
   " | G(x) = ", -0.004142004094546792, 
   "  | y = ", {-14.541153756549706`, -0.18396221441316635`, \
-0.13129694088261837`, 0.015304297305403095`, 0.010384262717869635`, 
   4.0752549981219234`*^-7, 3.836270412449494*^-6, -0.04918432338929524, 
   0.05353617227465968}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029531699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.000878061626915283`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0035343120504194303`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.584676324128695`"}], ",", 
     RowBox[{"-", "0.16102443971186714`"}], ",", 
     RowBox[{"-", "0.1150669663952189`"}], ",", "0.013424426791487563`", ",", 
     "0.009108734410368623`", ",", "3.5709743388161486`*^-7", ",", 
     "1.0886052059788653`*^-6", ",", 
     RowBox[{"-", "0.05166277919277373`"}], ",", "0.05547634303959548`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.000878061626915283, 
   " | G(x) = ", -0.0035343120504194303`, 
   "  | y = ", {-14.584676324128695`, -0.16102443971186714`, \
-0.1150669663952189, 0.013424426791487563`, 0.009108734410368623, 
   3.5709743388161486`*^-7, 1.0886052059788653`*^-6, -0.05166277919277373, 
   0.05547634303959548}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029531699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0008124814467862507`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0029984231082380575`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.626775020481132`"}], ",", 
     RowBox[{"-", "0.13938204609758306`"}], ",", 
     RowBox[{"-", "0.09968637371872194`"}], ",", "0.011637767007870232`", ",",
      "0.007896451190103643`", ",", "3.0926817331977257`*^-7", ",", 
     "5.6428639538808056`*^-8", ",", 
     RowBox[{"-", "0.054072304345287314`"}], ",", "0.05737538358285832`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0008124814467862507, 
   " | G(x) = ", -0.0029984231082380575`, 
   "  | y = ", {-14.626775020481132`, -0.13938204609758306`, \
-0.09968637371872194, 0.011637767007870232`, 0.007896451190103643, 
   3.0926817331977257`*^-7, 5.6428639538808056`*^-8, -0.054072304345287314`, 
   0.05737538358285832}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029531699*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0007490234700693321`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0025323727876411795`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.66751864910023`"}], ",", 
     RowBox[{"-", "0.1189363179622963`"}], ",", 
     RowBox[{"-", "0.08510461968406707`"}], ",", "0.009939854784890002`", ",",
      "0.006744384769161767`", ",", "2.639025968280297`*^-7", ",", 
     "2.0898216490650157`*^-7", ",", 
     RowBox[{"-", "0.056416548582571835`"}], ",", "0.059235295179149716`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0007490234700693321, 
   " | G(x) = ", -0.0025323727876411795`, 
   "  | y = ", {-14.66751864910023, -0.1189363179622963, -0.08510461968406707,
    0.009939854784890002, 0.006744384769161767, 2.639025968280297*^-7, 
   2.0898216490650157`*^-7, -0.056416548582571835`, 0.059235295179149716`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295628996`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0006886274261095338`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0021310485711865113`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.70703159439759`"}], ",", 
     RowBox[{"-", "0.09956852968774779`"}], ",", 
     RowBox[{"-", "0.07125449529346048`"}], ",", "0.008324119675128435`", ",",
      "0.005648077022462893`", ",", "2.2081109245471743`*^-7", ",", 
     "1.0749736656379127`*^-6", ",", 
     RowBox[{"-", "0.058701181478437725`"}], ",", "0.061059546011321686`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0006886274261095338, 
   " | G(x) = ", -0.0021310485711865113`, 
   "  | y = ", {-14.70703159439759, -0.09956852968774779, \
-0.07125449529346048, 0.008324119675128435, 0.005648077022462893, 
   2.2081109245471743`*^-7, 1.0749736656379127`*^-6, -0.058701181478437725`, 
   0.061059546011321686`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295628996`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0006318994048779558`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0017884160305925434`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.745367881437664`"}], ",", 
     RowBox[{"-", "0.08120050281054575`"}], ",", 
     RowBox[{"-", "0.058095655917646566`"}], ",", "0.006786973762484199`", 
     ",", "0.00460509353089926`", ",", "1.798861741899557`*^-7", ",", 
     "2.2341433147943235`*^-6", ",", 
     RowBox[{"-", "0.060928775412638636`"}], ",", "0.06284939986023197`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0006318994048779558, 
   " | G(x) = ", -0.0017884160305925434`, 
   "  | y = ", {-14.745367881437664`, -0.08120050281054575, \
-0.058095655917646566`, 0.006786973762484199, 0.00460509353089926, 
   1.798861741899557*^-7, 2.2341433147943235`*^-6, -0.060928775412638636`, 
   0.06284939986023197}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295628996`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0005791485239257099`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.001497806961481274`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.782583536305395`"}], ",", 
     RowBox[{"-", "0.06375769991190428`"}], ",", 
     RowBox[{"-", "0.04558864760717579`"}], ",", "0.005324809678763995`", ",",
      "0.003612986664308707`", ",", "1.4102087526802203`*^-7", ",", 
     "3.309298612919065`*^-6", ",", 
     RowBox[{"-", "0.06310204366821726`"}], ",", "0.06460629060356382`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0005791485239257099, 
   " | G(x) = ", -0.001497806961481274, 
   "  | y = ", {-14.782583536305395`, -0.06375769991190428, \
-0.04558864760717579, 0.005324809678763995, 0.003612986664308707, 
   1.4102087526802203`*^-7, 3.309298612919065*^-6, -0.06310204366821726, 
   0.06460629060356382}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800295784993`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0005304544791133736`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0012524502598409981`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.818758976337627`"}], ",", 
     RowBox[{"-", "0.04715897474920419`"}], ",", 
     RowBox[{"-", "0.03368780522277272`"}], ",", "0.003933184633552458`", ",",
      "0.002668741937012543`", ",", "1.040874249403882`*^-7", ",", 
     "3.960098471367246`*^-6", ",", 
     RowBox[{"-", "0.0652247094330427`"}], ",", "0.06633245342357874`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0005304544791133736, 
   " | G(x) = ", -0.0012524502598409981`, 
   "  | y = ", {-14.818758976337627`, -0.04715897474920419, \
-0.03368780522277272, 0.003933184633552458, 0.002668741937012543, 
   1.040874249403882*^-7, 3.960098471367246*^-6, -0.0652247094330427, 
   0.06633245342357874}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029594099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0004857676936858013`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0010460642238001583`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.85394940261304`"}], ",", 
     RowBox[{"-", "0.03133909857577509`"}], ",", 
     RowBox[{"-", "0.022357577573486234`"}], ",", "0.002608739293633808`", 
     ",", "0.0017700800104666048`", ",", "6.898820530540245`*^-8", ",", 
     "3.877562271270563`*^-6", ",", 
     RowBox[{"-", "0.0672996201850351`"}], ",", "0.06802958246776569`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0004857676936858013, 
   " | G(x) = ", -0.0010460642238001583`, 
   "  | y = ", {-14.85394940261304, -0.03133909857577509, \
-0.022357577573486234`, 0.002608739293633808, 0.0017700800104666048`, 
   6.898820530540245*^-8, 3.877562271270563*^-6, -0.0672996201850351, 
   0.06802958246776569}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.682780029594099*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0004446684820855751`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.0008720072668637613`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.888210929872313`"}], ",", 
     RowBox[{"-", "0.01623466425653331`"}], ",", 
     RowBox[{"-", "0.011563868014863777`"}], ",", "0.001348279813318694`", 
     ",", "0.000914833832644317`", ",", "3.563107874486032`*^-8", ",", 
     "2.7398252555599356`*^-6", ",", 
     RowBox[{"-", "0.06932696113604031`"}], ",", "0.06969676009371817`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0004446684820855751, 
   " | G(x) = ", -0.0008720072668637613, 
   "  | y = ", {-14.888210929872313`, -0.01623466425653331, \
-0.011563868014863777`, 0.001348279813318694, 0.000914833832644317, 
   3.563107874486032*^-8, 2.7398252555599356`*^-6, -0.06932696113604031, 
   0.06969676009371817}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800296106997`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" | iter = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\"  | residual = \"\>", "\[InvisibleSpace]", 
   "0.0004072161023795928`", "\[InvisibleSpace]", "\<\" | G(x) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.000726257669368735`"}], 
   "\[InvisibleSpace]", "\<\"  | y = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14.921580265505915`"}], ",", 
     RowBox[{"-", "0.0017996257711622727`"}], ",", 
     RowBox[{"-", "0.0012794481912152367`"}], ",", "0.0001490353218134151`", 
     ",", "0.00010112332870638957`", ",", "3.936013930973763`*^-9", ",", 
     "3.9735770229754053`*^-7", ",", 
     RowBox[{"-", "0.07131026222628734`"}], ",", "0.07133663317882011`"}], 
    "}"}]}],
  SequenceForm[
  " | iter = ", 6, "  | residual = ", 0.0004072161023795928, 
   " | G(x) = ", -0.000726257669368735, 
   "  | y = ", {-14.921580265505915`, -0.0017996257711622727`, \
-0.0012794481912152367`, 0.0001490353218134151, 0.00010112332870638957`, 
   3.936013930973763*^-9, 3.9735770229754053`*^-7, -0.07131026222628734, 
   0.07133663317882011}],
  Editable->False]], "Print",
 CellChangeTimes->{3.682779796160238*^9, 3.682779997871433*^9, 
  3.6827800296263*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14.92625749037586`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.681801025426152`", ",", 
     RowBox[{"-", "500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.436490642670925`", ",", 
     RowBox[{"-", "1000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.190811498675544`", ",", 
     RowBox[{"-", "1500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.944681188833899`", ",", 
     RowBox[{"-", "2000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.697996103924963`", ",", 
     RowBox[{"-", "2500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.72641927418628`", ",", 
     RowBox[{"-", "3000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.803924340782272`", ",", 
     RowBox[{"-", "3500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.877372624849892`", ",", 
     RowBox[{"-", "4000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.947138114577154`", ",", 
     RowBox[{"-", "4500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.01353991095192`", ",", 
     RowBox[{"-", "5000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.076905883485194`", ",", 
     RowBox[{"-", "5500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.137450218870727`", ",", 
     RowBox[{"-", "6000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.19545149792186`", ",", 
     RowBox[{"-", "6500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.251008979983572`", ",", 
     RowBox[{"-", "7000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.304403839778063`", ",", 
     RowBox[{"-", "7500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.355759638727486`", ",", 
     RowBox[{"-", "8000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.405267082598039`", ",", 
     RowBox[{"-", "8500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.452961986309829`", ",", 
     RowBox[{"-", "9000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.499020811958355`", ",", 
     RowBox[{"-", "9500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.543103548709565`", ",", 
     RowBox[{"-", "10000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.586225097954909`", ",", 
     RowBox[{"-", "10500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.627998009568886`", ",", 
     RowBox[{"-", "11000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.668480763198115`", ",", 
     RowBox[{"-", "11500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.707788572808026`", ",", 
     RowBox[{"-", "12000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.74596799869263`", ",", 
     RowBox[{"-", "12500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.783068579456652`", ",", 
     RowBox[{"-", "13000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.819165067072623`", ",", 
     RowBox[{"-", "13500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.854307861945287`", ",", 
     RowBox[{"-", "14000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.888548905129447`", ",", 
     RowBox[{"-", "14500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.921921344007476`", ",", 
     RowBox[{"-", "15000"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.682778272770797*^9, {3.68277830284005*^9, 3.6827783216643004`*^9}, 
   3.682778402121459*^9, 3.6827784523621855`*^9, 3.682778692119059*^9, 
   3.6827795777147913`*^9, 3.68277962900109*^9, {3.6827796913448086`*^9, 
   3.682779715222653*^9}, 3.682779764431377*^9, 3.6827797964878387`*^9, 
   3.6827799981990337`*^9, 3.6827800296263*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ktsf", ",", "CsVsBeta1", ",", "CsVsBeta2", ",", "sol"}], "}"}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Depth (ft)\>\"", ",", "\"\<Surface Casing\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<safety factor and reliability index(\[Beta]) \>\"", ",", 
        "\"\< Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<safety factor\>\"", ",", "\"\<reliability indexA(\[Beta])\>\"", 
      ",", "\"\<reliability indexB(\[Beta])\>\"", " ", ",", "\"\<meu\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
      "\"\<X\>\"", ",", "\"\<W\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "LF"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6827800169458694`*^9, 3.682780081639998*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQXXNc8kqMWY4DAwgEnTmw8KzNrabTMRB+xOkDfb/z
PcXZgiH8uFMHVPfqHDvM4wPhp5w8MLVcfea7n64QftaJA2tnBW7a9cQRwi84
fmDxIumcX69tIfyyYwdUlJ2PzWy0hPBrjh6YHvZvyQc+Mwi/6ciBGNeCe+e9
jCH8jsMHBA/XMRdwGUL4fYcO1H/Y4ZPgqQfhTzl44BxX1qHLgtoQ/qwDByQ+
hXq+9NWA8B32H7ib03Lj8nNVCN9n74GLP9bsrjmrDPXf7gM72mb2PfyoCPXP
zgPMSqfyj3gqQN2//YDMavfdW2bLQt279cDW3jsdnu+koO7bfGDpuZaVUo0S
UPdsPLBYQPKwoLcY1P71B/Tt1dNEXEWg9q0+wO2oK2GVKQQ1f/mB2z0rLDY1
CkLNW3zgm7KmseIlUaj++QeWtp75zccEtb9g+oHHO4rZeDdB/ePQf+Bw4Vyp
a6tNofz6AwAkN5yN
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQfWDtz2y7W7oODFAQoK3KJhoL5TvUHzCaMG1z9X0d
KL//gANbKfemRCi/YPoBh4RtDmsfa0Pl5x/YpH9uX3wqlN+x+MC1BcpWb4uh
/ILlB9ptFvyYPRvKj1h9YK6ryB+zgzD96w/cOFfq+f4JlD9l44G4UtYt79ig
9nVsPrDzgY1pgjqUX7P1QMFB1gfxbjD3bD+wiO+/uVAKlJ+y84CTwAH7lgYo
P2L3AXf7jxdvzYbyffYeaFeZraC2Dea//QfOnjusVX8eyp914ECYgPaiV8+h
/CkHD9w78mx5/X8ov+/QAXVJidWCYtDw6jh8QGy+/iZVHSi/6ciBSKmmLx2O
UH7N0QPnHvrLOIdB+WXHDpxN6nROzoLyC44fWFNX0/K+FsrPOnHAbmpa7LsJ
UH7KyQMNJl2zMhdD+XGnDszo4r+evhXKjzh94N2tCw/fH4Pyg84c8FE+mGpw
Ecp/ceYAAPkgpBE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQ/T15/827N3UdGKBAY8qt9o1hUL5D/YGtN91+Xr2s
A+X3H/gqmrurIxDKL5h+YM4MUdvv57Wh8vMPKIt7+Hb4Qfkdiw8oRoi1dMZC
+QXLD2yMzU+OaIPyI1YfOGUyo+3WGpj+9Qfe6EdKH7gI5U/ZeGCZuV7Bmy8w
8zYfiGz8xNEhBrW/ZuuBqSvf3FhjBnPP9gOiHot+1YVC+Sk7D/g9r23nKIby
I3YfmFle9SGvH8r32XvgxxTHswdXwfy3/4DRjnMyUkeh/FkHDny3ZPpVfQ/K
n3LwwN7pXy78+wbl9x06cG2ysVIJHzS8Og4fmDfvBn+qKpTfdOTANCvjD3Os
ofyaowd2ufxpVQ6E8suOHfjacTeMIw3KLzh+wO3ctDmBVVB+1okDh7auYmTr
g/JTTh5gsHZZor8Qyo87dWBS/OWIq5uh/IjTB+LsHmn9OwrlB505MHfSI/vZ
F6D8F2cOAACd7KnR
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQfWDtz2y7W7oODFDgr63KJhoL5TvUHzCZMG1z9X0d
KL//gANbKfemRCi/YPoBx4RtDmsfa0Pl5x9Yr39uX3wqlN+x+MC1BcpWb4uh
/ILlB9ptFvyYPRvKj1h9YK6ryB+zgzD96w9cO1fq+f4JlD9l44GEUtYt79ig
9nVsPrD9gY1pgjqUX7P1QOFB1gfxbjD3bD+wlO+/uVAKlJ+y84CzwAH7lgYo
P2L3AU/7jxdvzYbyffYeaFWZraC2Dea//QfOnjusVX8eyp914EC4gPaiV8+h
/CkHD9w98mx5/X8ov+/QAXVJidWCYtDw6jh8QGK+/iZVHSi/6ciBSKmmLx2O
UH7N0QPnHvrLOIdB+WXHDpxP6nROzoLyC44fWFtX0/K+FsrPOnHAfmpa7LsJ
UH7KyQPNJl2zMhdD+XGnDszo4r+evhXKjzh94M2tCw/fH4Pyg84c8FQ+mGpw
Ecp/ceYAAP4ApBc=
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGBQAGJGIGYC4prjkldizHIcGEAg6MyBhWdtbjWdjoHwI04f
6Pud7ynOFgzhx506oLpX59hhHh8IP+Xkganl6jPf/XSF8LNOHFg7K3DTrieO
EH7B8QOLF0nn/HptC+GXHTugoux8bGajJYRfc/TA9LB/Sz7wmUH4TUcOxLgW
3DvvZQzhdxw+IHi4jrmAyxDC7zt0oP7DDp8ETz0If8rBA+e4sg5dFtSG8Gcd
OCDxKdTzpa8GhO+w/8DdnJYbl5+rQvg+ew9c/LFmd81ZZaj/dh/Y0Taz7+FH
Rah/dh5gVjqVf8RTAer+7QdkVrvv3jJbFurerQe29t7p8HwnBXXf5gNLz7Ws
lGqUgLpn44HFApKHBb3FoPavP6Bvr54m4ioCtW/1AW5HXQmrTCGo+csP3O5Z
YbGpURBq3uID35Q1jRUviUL1zz+wtPXMbz4mqP0F0w883lHMxrsJ6h+H/gOH
C+dKXVttCuXXH/BRPphqcFEXwn9x5sDcSY/sZ19A8D3R5AE7Da4Z
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4gNrf2bb3dJ1YICCAG1VNtFYKN+h/oDRhGmb
q+/rQPn9BxzYSrk3JUL5BdMPOCRsc1j7WBsqP//AJv1z++JTofyOxQeuLVC2
elsM5RcsP9Bus+DH7NlQfsTqA3NdRf6YHYTpX3/gxrlSz/dPoPwpGw/ElbJu
eccGta9j84GdD2xME9Sh/JqtBwoOsj6Id4O5Z/uBRXz/zYVSoPyUnQecBA7Y
tzRA+RG7D7jbf7x4azaU77P3QLvKbAW1bTD/7T9w9txhrfrzUP6sAwfCBLQX
vXoO5U85eODekWfL6/9D+X2HDqhLSqwWFIOGV8fhA2Lz9Tep6kD5TUcOREo1
felwhPJrjh4499BfxjkMyi87duBsUqdzchaUX3D8wJq6mpb3tVB+1okDdlPT
Yt9NgPJTTh5oMOmalbkYyo87dWBGF//19K1QfsTpA+9uXXj4/hiUH3TmAADt
OZ6b
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["X", {0., 0.}], "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4u/J+2/evanrwAAFGlNutW8Mg/Id6g9sven2
8+plHSi//8BX0dxdHYFQfsH0A3NmiNp+P68NlZ9/QFncw7fDD8rvWHxAMUKs
pTMWyi9YfmBjbH5yRBuUH7H6wCmTGW231sD0rz/wRj9S+sBFKH/KxgPLzPUK
3nyBmbf5QGTjJ44OMaj9NVsPTF355sYaM5h7th8Q9Vj0qy4Uyk/ZecDveW07
RzGUH7H7wMzyqg95/VC+z94DP6Y4nj24Cua//QeMdpyTkToK5c86cOC7JdOv
6ntQ/pSDB/ZO/3Lh3zcov+/QgWuTjZVK+KDh1XH4wLx5N/hTVaH8piMHplkZ
f5hjDeXXHD2wy+VPq3IglF927MDXjrthHGlQfsHxA27nps0JrILys04cOLR1
FSNbH5SfcvIAg7XLEv2FUH7cqQOT4i9HXN0M5UecPhBn90jr31EoP+jMAQA3
66M2
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["W", {0., 0.}], "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4gNrf2bb3dJ1YIACf21VNtFYKN+h/oDJhGmb
q+/rQPn9BxzYSrk3JUL5BdMPOCZsc1j7WBsqP//Aev1z++JTofyOxQeuLVC2
elsM5RcsP9Bus+DH7NlQfsTqA3NdRf6YHYTpX3/g2rlSz/dPoPwpGw8klLJu
eccGta9j84HtD2xME9Sh/JqtBwoPsj6Id4O5Z/uBpXz/zYVSoPyUnQecBQ7Y
tzRA+RG7D3jaf7x4azaU77P3QKvKbAW1bTD/7T9w9txhrfrzUP6sAwfCBbQX
vXoO5U85eODukWfL6/9D+X2HDqhLSqwWFIOGV8fhAxLz9Tep6kD5TUcOREo1
felwhPJrjh4499BfxjkMyi87duB8UqdzchaUX3D8wNq6mpb3tVB+1okD9lPT
Yt9NgPJTTh5oNumalbkYyo87dWBGF//19K1QfsTpA29uXXj4/hiUH3TmAADx
uZ6k
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, -14726.}, PlotRange -> {{0, 20}, {0, -14800.}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, -14726.}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\" Depth (ft)\"", TraditionalForm], 
        FormBox["\"Surface Casing\"", TraditionalForm]}, {
        FormBox[
        "\"safety factor and reliability index(\[Beta]) \"", TraditionalForm], 
        FormBox[
        "\" Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 20}, {0, -14800.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"safety factor\"", "\"reliability indexA(\[Beta])\"", 
       "\"reliability indexB(\[Beta])\"", "\"meu\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"X\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Italic, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"W\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Italic, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"X\"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"W\"", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6827800502653384`*^9, 3.6827800836554017`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1194, 676},
WindowMargins->{{Automatic, 238}, {147, Automatic}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 256, 5, 52, "Input"],
Cell[817, 27, 2777, 76, 286, "Input"],
Cell[CellGroupData[{
Cell[3619, 107, 3396, 110, 172, "Input"],
Cell[7018, 219, 371548, 6104, 240, "Output"]
}, Open  ]],
Cell[378581, 6326, 4961, 120, 412, "Input"],
Cell[383545, 6448, 3431, 79, 412, "Input"],
Cell[386979, 6529, 638, 16, 112, "Input"],
Cell[CellGroupData[{
Cell[387642, 6549, 34, 0, 31, "Input"],
Cell[387679, 6551, 284, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388000, 6561, 134, 2, 31, "Input"],
Cell[388137, 6565, 718, 10, 31, "Output"]
}, Open  ]],
Cell[388870, 6578, 120, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[389015, 6584, 186, 4, 62, "Subchapter"],
Cell[389204, 6590, 6680, 188, 576, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395921, 6783, 268, 5, 93, "Subchapter"],
Cell[396192, 6790, 1310, 35, 112, "Input"],
Cell[397505, 6827, 1249, 32, 112, "Input"],
Cell[398757, 6861, 1149, 31, 112, "Input"],
Cell[CellGroupData[{
Cell[399931, 6896, 367, 8, 72, "Input"],
Cell[400301, 6906, 583, 8, 31, "Output"]
}, Open  ]],
Cell[400899, 6917, 3589, 91, 332, "Input"],
Cell[404491, 7010, 3438, 90, 332, "Input"],
Cell[407932, 7102, 8144, 190, 812, "Input"],
Cell[416079, 7294, 10205, 217, 832, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426321, 7516, 199, 4, 62, "Subchapter"],
Cell[426523, 7522, 7691, 209, 948, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434251, 7736, 125, 1, 62, "Subchapter"],
Cell[434379, 7739, 1634, 40, 152, "Input"],
Cell[CellGroupData[{
Cell[436038, 7783, 178, 3, 31, "Input"],
Cell[436219, 7788, 1034, 35, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437290, 7828, 1004, 34, 57, "Input"],
Cell[438297, 7864, 721, 15, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[439067, 7885, 201, 3, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[439293, 7892, 357, 11, 33, "Input"],
Cell[439653, 7905, 2657, 56, 236, "Output"]
}, Open  ]],
Cell[442325, 7964, 5468, 152, 679, "Input"],
Cell[447796, 8118, 3175, 88, 371, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451008, 8211, 280, 6, 62, "Subchapter"],
Cell[451291, 8219, 120, 2, 31, "Input"],
Cell[451414, 8223, 120, 2, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451571, 8230, 131, 1, 62, "Subchapter"],
Cell[451705, 8233, 9089, 220, 632, "Input"],
Cell[460797, 8455, 4044, 109, 404, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464878, 8569, 115, 1, 90, "Title"],
Cell[464996, 8572, 11294, 191, 898, "Title"],
Cell[CellGroupData[{
Cell[476315, 8767, 32857, 810, 2772, "Input"],
Cell[CellGroupData[{
Cell[509197, 9581, 906, 15, 23, "Print"],
Cell[510106, 9598, 916, 16, 23, "Print"],
Cell[511025, 9616, 906, 15, 23, "Print"],
Cell[511934, 9633, 916, 16, 23, "Print"]
}, Open  ]],
Cell[512865, 9652, 22034, 467, 244, "Output"],
Cell[534902, 10121, 22498, 475, 244, "Output"],
Cell[557403, 10598, 15991, 338, 244, "Output"],
Cell[573397, 10938, 16111, 340, 244, "Output"],
Cell[589511, 11280, 1142, 20, 40, "Message"],
Cell[590656, 11302, 1142, 20, 40, "Message"],
Cell[591801, 11324, 1142, 20, 40, "Message"],
Cell[592946, 11346, 1226, 22, 21, "Message"],
Cell[594175, 11370, 16246, 344, 244, "Output"],
Cell[610424, 11716, 22375, 474, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632836, 12195, 231, 3, 62, "Subchapter"],
Cell[633070, 12200, 4044, 109, 404, "Input"],
Cell[637117, 12311, 3651, 93, 352, "Input"],
Cell[640771, 12406, 2094, 57, 272, "Input"],
Cell[642868, 12465, 12718, 288, 1647, "Input"],
Cell[CellGroupData[{
Cell[655611, 12757, 483, 6, 63, "Section"],
Cell[CellGroupData[{
Cell[656119, 12767, 162, 2, 43, "Subsection"],
Cell[CellGroupData[{
Cell[656306, 12773, 1359, 31, 92, "Input"],
Cell[657668, 12806, 1314, 31, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659019, 12842, 1431, 33, 92, "Input"],
Cell[660453, 12877, 1369, 32, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661859, 12914, 1443, 35, 92, "Input"],
Cell[663305, 12951, 1228, 30, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664570, 12986, 462, 11, 52, "Input"],
Cell[665035, 12999, 2831, 54, 161, "Output"],
Cell[667869, 13055, 2728, 50, 161, "Output"]
}, Open  ]],
Cell[670612, 13108, 980, 20, 52, "Input"],
Cell[CellGroupData[{
Cell[671617, 13132, 1723, 42, 132, "Input"],
Cell[673343, 13176, 22272, 468, 226, "Output"]
}, Open  ]],
Cell[695630, 13647, 3899, 98, 372, "Input"],
Cell[CellGroupData[{
Cell[699554, 13749, 1445, 35, 92, "Input"],
Cell[701002, 13786, 1226, 30, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702265, 13821, 1548, 42, 172, "Input"],
Cell[703816, 13865, 371, 8, 31, "Output"],
Cell[704190, 13875, 396, 8, 31, "Output"],
Cell[704589, 13885, 438, 8, 31, "Output"],
Cell[705030, 13895, 1347, 37, 72, "Output"],
Cell[706380, 13934, 332, 7, 31, "Output"],
Cell[706715, 13943, 639, 14, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707391, 13962, 552, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[707968, 13980, 1277, 26, 45, "Print"],
Cell[709248, 14008, 1258, 26, 45, "Print"],
Cell[710509, 14036, 1254, 26, 45, "Print"],
Cell[711766, 14064, 1228, 24, 45, "Print"],
Cell[712997, 14090, 1230, 25, 45, "Print"],
Cell[714230, 14117, 1256, 26, 45, "Print"],
Cell[715489, 14145, 1247, 26, 45, "Print"],
Cell[716739, 14173, 1244, 26, 45, "Print"],
Cell[717986, 14201, 1243, 25, 45, "Print"],
Cell[719232, 14228, 1247, 26, 45, "Print"],
Cell[720482, 14256, 1250, 26, 45, "Print"],
Cell[721735, 14284, 1247, 26, 45, "Print"],
Cell[722985, 14312, 1243, 26, 45, "Print"],
Cell[724231, 14340, 1249, 26, 45, "Print"],
Cell[725483, 14368, 1237, 26, 45, "Print"],
Cell[726723, 14396, 1236, 26, 45, "Print"],
Cell[727962, 14424, 1247, 26, 45, "Print"],
Cell[729212, 14452, 1253, 26, 45, "Print"],
Cell[730468, 14480, 1251, 26, 45, "Print"],
Cell[731722, 14508, 1251, 26, 45, "Print"],
Cell[732976, 14536, 1247, 26, 45, "Print"],
Cell[734226, 14564, 1247, 26, 45, "Print"],
Cell[735476, 14592, 1254, 26, 45, "Print"],
Cell[736733, 14620, 1247, 25, 45, "Print"],
Cell[737983, 14647, 1254, 26, 45, "Print"],
Cell[739240, 14675, 1252, 26, 45, "Print"],
Cell[740495, 14703, 1245, 26, 45, "Print"],
Cell[741743, 14731, 1241, 26, 45, "Print"],
Cell[742987, 14759, 1244, 26, 45, "Print"],
Cell[744234, 14787, 1250, 26, 45, "Print"],
Cell[745487, 14815, 1258, 26, 45, "Print"]
}, Open  ]],
Cell[746760, 14844, 3524, 100, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750321, 14949, 1487, 40, 132, "Input"],
Cell[751811, 14991, 26994, 574, 226, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
