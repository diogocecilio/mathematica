(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1463314,      28084]
NotebookOptionsPosition[   1457438,      27911]
NotebookOutlinePosition[   1457786,      27926]
CellTagsIndexPosition[   1457743,      27923]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"<<", "Units`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppgfttoPSI", "=", "0.0519481"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6779315751321106`*^9, 3.677931581532159*^9}, {
  3.677931620119012*^9, 3.6779316234223375`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearEq", "[", 
     RowBox[{"pt1_", ",", "pt2_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"y", ",", "x", ",", "temp", ",", "temp2", ",", "temp3"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pt1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"y", "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
        FractionBox[
         RowBox[{
          RowBox[{"pt2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"pt2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"pt1", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Interpolate", "[", 
    RowBox[{"ycoord_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "i", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", " ", 
         RowBox[{"Length", "[", "data", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "\[LessEqual]", 
            RowBox[{"Abs", "[", "ycoord", "]"}], "\[LessEqual]", " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"f", "=", 
             RowBox[{"LinearEq", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", 
             RowBox[{"f", "/.", 
              RowBox[{"y", "\[Rule]", "ycoord"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67792868049216*^9, 3.6779286828127775`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataporepressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8.33", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.7", ",", 
       RowBox[{"-", "9066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14.25", ",", 
       RowBox[{"-", "13885"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17.25", ",", 
       RowBox[{"-", "16300"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PtsFracPressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14.5", ",", 
       RowBox[{"-", "6025.97"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", 
       RowBox[{"-", "12000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", 
       RowBox[{"-", "16500"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataporepressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4568.32", ",", 
       RowBox[{"-", "9066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10278.50", ",", 
       RowBox[{"-", "13885"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14606.48", ",", 
       RowBox[{"-", "16300"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PtsFracPressure", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6025.97", ",", 
       RowBox[{"-", "8000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10597.39", ",", 
       RowBox[{"-", "12000"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17142.84", ",", 
       RowBox[{"-", "16500"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabpore", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Interpolate", "[", 
        RowBox[{"y", ",", "dataporepressure"}], "]"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "16300"}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabfrac", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Interpolate", "[", 
        RowBox[{"y", ",", "PtsFracPressure"}], "]"}], ",", "y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "16500"}], ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tabpore", ",", "tabfrac"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Profundidade (ft) \>\"", ",", "\"\< \>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<pressure(psi)\>\"", ",", "\"\< Janela Operacional \>\""}],
        "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Bold", ",", "14"}], "]"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "None"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6779304070421376`*^9, 3.6779304086843863`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
z3Q9kleJltcrQn1k2PYWBnb4d5n81v317OsUsWd2dNrYdHa4ywPVpKW32IMV
8aRbcfHONHZ4WWTsvuM32dcqom45n863brDDl+aUuvc6lV1WhO/DhNlF19nh
ou6+1rVpeY0iDh0tF91BsMO9rc/2GZ7CvloRL+dOyJp2jR1e86jSUvkqe5Ai
Gve8WOPgFXb4+rGpCecvs69SxOTyNYbeS2aHSwdcfZd7iX2lIjSPZ8llaQl2
7VW7QeOL7IG456JSk3okscMhFQK8fC6wr8A9N7/+j4Dz7LDhSXpo6Dn25bjn
ei9uoT3LDlfSNE5NSWRfhnuu4m2/rDPssNuCFYV/TrMvxT2X2Ty8Gi3BO/o8
6OB4in0J7jnt6oyBJ9nh+5XazJyQwL4Y99z/PjDwBDtc89m6yD3H2Rfhnuvb
oeepeHbYJ+bFE0Mc+0Lcc5U3L3wXyw5HLOpS1aJjX4B7LutNXD1agp/12+7a
OYZ9Pu45XY837lp2uH7Vj6tmadgDcM8t3l13fTQ77Pe877kjUezzcM/1/6q6
dIwdxpffl4dH2efinqvmGvI9kh3OWfLLoQItz8E99+LwtaZH2OFmA4b59jnM
PlsRaXH//o4+xA5Prx69a9FBdn9FWC9TOW0/wA7HZhfpY/ezz1LE0IGxU2/s
Y4dz472llxHsMxWxpUapQwV72eG2yxO61qTlGYq4/XLMQ6dwdniea7mAIXvY
pyui2onEilN2s8OnbSbEBIWxT1OE54pKLvt2scN5r5KyE3eyT1XE7kFTV9ze
wQ53Tqhu+2k7+xRFPK559bQVLcFLA2eNsN/GPlkRdd7Yfuq6lR2+ODh1nXoL
+yRFjDk5r9HcUHbYVKv+5ZDN7BMVcXBl+sioTexwr5xFeVdC2CcoIntI4+2Z
G9nh1acyWudtYB+viEa1V6RVpiVYrGo+qeV6dj9FTHp7v7j/OnbYatjqfeOC
2ccpIvq0Y+dla9nhgXUy7+6S2ccq4n3Qutkn1rDDG9+1t05fze6riJbDX0S9
CWKH9Wc29SlexT4G91zdLlm1aQmuuObNko4r2Ufjnnu/rcaIQHZ4xIgeCdNX
sI/CPZf4Ycja5ezw9nq73x1cxj4S95zcV76wlB2+9+FL/ftL2H1wz7ntS/qy
mB22OTfQqxwte+Oes/v1vfEidth77eHQngvZvXDPfRzaYuQCdniv+7/r8+ez
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
jrPK0PIFo2jh7Xd1TgQ7fK9kR43He9nPY69xqdN60xLs4P33kjac/Rz2WtKy
alVaghfH+U5euof9LPbqve3Cy93scHpJSsXBtJyIvcbljT8Vxg7beTc/W4eW
zxhFaskoa3kXOzwnLnTsp53sp43C1vvqKQ9agq+V/Ch9aQf7Kew1zmF0E1qC
q3v7nNi8nf0k9loSIuVtY4enxCV7+9JyAvbq/S02dSs7fKGkkdmRlk9gr3Fq
z91b2OHy3hu0RaHsx7HXkqTCKbQE+8blumVsZo/HXr3tozrTEpxQovp3aBN7
HPYaFzysLC3Bkvf5I3ND2GONIrbkY97jjeywOs5ucB9a1mGvXm4HYzaww5qS
NT+q0nIM9hqXOGDZenb4n9f7iFfr2LXYa0mdr4NpCR4aN6zf6WB2DfbqFbSn
Li3Bh0pOfZLXskcbxcC4nF6fZXb4u5ftLk9ajjKKiJLB7y+tYYf7xQV2d6Dl
Y9irV8K20NXs8O6SV2/ygtiPYq9xNv+NpSX4vZdr6I1V7JHYa8myl21oCe4W
F++8ZyX7EezVK3tjcSA7HFpS7flUWj6Mvca5tL+9gh1+4bVkXRdaPoS9lugy
Dy9nh9vHZbUpR8sHsVevKvK8ZexwcEnfR0+Wsh8wCse4ha360hL8yEu7SreE
fb9RBJVk3qtGS3CLuIrNly9m34e9evVe8XoRO7y8JOD2EFqOwF7jopqcWcgO
K16Pl9Sj5b3Ya4m1ce0CdrhhXI+GufPZw7FXr7kL1bQEzy+JvJUcwL7HKOrF
PbBrSktwqlfZgC3z2HdjryVdb/yeyw7bxvnXGUfLYdir1+HZN+ewwzNL7qa0
peVd2GucVa3w2exwsleXmWZ/9p3Ya8mMK9NoCa4cd6D6nVnsO7BXr9tT/6Ml
eHyJ5eKRmezbsdc45yrWtASf8Zo2KWAG+zbstSTifOZ0drhMnLFCP1reahQn
vMx+sdPY4ZEl7ROr0/IWo7DETi63Yio7HOsV7vtmCnso9lqSfnIoLcGmWJNV
4mT2zdirl9MoO1qC3UomHA+exL4Je40Ns+ROZIePeqV5edFyCPZakq+7PIEd
zot1LG5KyxuN4qCXn8fW8ezwwJIdmj9+7Buw19jUgnG0BEd4/R2RNo59PfZa
0vKYEy3BubG+f8PHsq8zijCvbUNLfNnhXiUph6fTcjD2Gpv3684Ydni7V/NB
XWl5LfZaMupA5Gh2+HVs6HdrWpaxV6+rLvNHscOdSn7sfTqSfQ32GuvwpR8t
wRu9fPrG+bCvNop2JSG7a9AS/DQ2+eMKb/Ygo1jr9a1njhc77FjSaOcwWl6F
vcaq3yWq2eEgrw3d6tPySuy1JGnrOk92+G5s7usvHuyB2KuXfRdvWoIdSlSb
r6jYV2CvscHZzWgJXux1vuM2d/bl2GvJxw1/3djhW7F2WX60vAx79XJrd2sE
O1yvZE1wO1peir3GJj7ZO5wdnuP13tEyjH2JUdQqqbNmBi3B12KHPbw7lH2x
UczwCmrZjZbg6iWnVh4dwr4Ie43NuVueluDJXrbNFgxmX4i9lgxe/mwQO3w+
NjCjPy0vwF69EhrHu7LD5UteLbah5flGcTrWxhA4kB329XK1fzuAPcAoSpcs
WzCcluATsfFpZ13Y52GvXtn1GtASbDFXm7e+P/tc7DXWJfVrP3bY02tJbR9a
noO9mnX+V/uyw5rYrGvNaXk29upVpeb2PuzwP3PfGf96s/tjr7ELL4+nJXiI
l7Zaei/2WdirOXNKe1qCD8ZWvBjRk30m9urVu7JES/B3c8DEmT3YZxjF3tio
c/e6s8P9vB6X707L043is9na71g3djgstseZCrQ8DXv1mlt2YVd2+J05ckzW
f+xTsdfYBwkutAR39SprdbwL+xTs1dx1ZE1agkNj/eNXdmafjL16HS5524kd
fmG+qx5By5OMYkOsle6cMzvczqtLUQNanoi9mmeoNnRkh9fGHoj+1oF9Avbq
dTvfh5bgR2bL8Gvt2ccbxapY56MtaAlu4TXtz/Z27H7YqzliSL4TO7w81nho
Ai2Pw169zD/T27LDRnN71w60PBZ7jZ28f18bdtjeK/ybRMu+2Ks5vf8sR3Z4
fqwp/H5r9jFGUdfLKbc7LcGp5gl9olqxjzaK2bFhYRVpCa7llfZhYUv2Udir
Ob/H8xbs8IxYxx0DaHkk9url9/Z4c3b4knlH11q07IO9xqZuWdWMHa7s9ffV
u6bs3tiruWVnN1qCx8f6bjrvwO6FvXpte2FPS/Bpc0qHjU3Y1dhrbN76743Z
4dJezZ+NpGVP7NU8yimlETs8MjZ0bUta9jCKEvXVxzsassOx5h+tC+zZVdhr
rMPqibQEm9Q+D/QN2N2xV3NIi460BI+ITQ7cX5/dDXtVf7tTipbgSHOjpv52
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
HjYSUzj1Hm1QZJ0J/I2SjUy7VjYTLaB+5lZt+fcEeCHtVdsvfBhaQD00zbUk
fDz8tZI9dttn9nUcnHqrNkvqjZa8or2mVbx/+BecmnPTn/AXWvKS9qqdejDB
GE7dLy3wzc+x8BdKxtwuGa9CC6j9tOr9T8bAn9Ne03q9skQLqO+6uYw+MRpe
QHvV7tyjgxZQd0/LLNg4Cv6M9upWMuKNEZx6uVZvlyNa8pT2mjbxyZmRcOob
bgFD9dCSJ7RX7dntO0fAqTukqfLUw+H/KFmWW7fB09AC6gVa8ZYrw+D5tNe0
rVx/tID6glvGgAND4Y9pr9q3G+sN4dS/U3UfzkJL8pTsjJtD35whcOqZWn+/
4WiJkvaamn5fNhhOne5W2OvfQXBeydy0HdcsQguov6WK7jwaCOdor24b9cah
BdRTtSkrEw3gCtpr6stbvwbAqY+66XT1RUseKdlErfWyp/3h1B9S/W4I0ZKH
tFe3E51O9oNTO2oLFndASx7QXlPbXt3UF04d5ybUeasPZ7RX7ZqFYrSAujI1
+dLZPvBc2qvb0zY90AJqK22r167e8Pu011TzzLJecOowN98/09CSe0pmpj08
+2pPOLUqNf/MALTkLu3V7XfLgR5w6vFaE0+NHvwO7TV1xanZaAF1kJu8Oac7
PEfJxmiVbiPQAuqXqS0pEd3gf9Ne3cZ/+7crnHqk1mfaYrTktpI9TY0/rugC
p97hxn0eh5bcor1qmyfLdeHUj1ONj/7uDL9Je3Vb8tEXLaAepI1xftYJnq1k
itSHciu0gHqTW1P9yY7wG7RX7WjHjmgBNUv1jvfvAL9Oe3WLqnmrA6furc0V
OaEl12ivqV+jz7WHU/u6GVX2QEuu0l618613t4NT306VRZS3hV+hvbrdU09H
C6h1tY0W19rAs5TseurwMAO0gHqxm1fxQQH8spJ1/aC3/E1r7n9OvdQ5oPPZ
P/+15BK9b5NUV3f+hlO3/SD2nvYLflHJvJwz2g74Cac+l6R7of4H/IKStTT4
z8n5Dqd2dy78KWuGZypZSpLo9CItnPpLQ4r7uCb4eSWb7KzT9OtfOHVSkt+J
p1/h52gfDQUuJ7/Aqe2chZ82fYafVbLopOQkcSOcuqyh1bHHJ/gZeh85+9aW
fYBTByflx1xtgGco2dsGE5uDGji1sbO8bHY9/DTdf0ktYSPq4NTPGnzMvtXA
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
fZ/hdkpmkGhw0aMRTr2xPmjukE9wEe3VsfrXpw9w6l6Jrhm5DXBbJVtVn+UR
q4FT33LU1y6rh9soWefEwJNmdXDqxfXqKW1r4da0V0eXxpfVcGpBYubhU1Vw
KyWbU6/ntL0STn3GMaBucgVcSHtNUMXql8OpXevFtjVquKWSHXfMKL9ZCqdu
TNCVhZbALWiv9f7mC4rh1ImOhaoxRXBzJatJEB368R5ObVuf8lf+O7gZ7dVR
53XyWzh1aYLf3vVv4Ka01/qCkfaFcOqDjsKnXV/DTZSsMCE5oOQlnHpMfevg
yy/gE2ivjr78/udw6icJ+Zs8C+DjlWxIvUm/oc/g1Fsc5bmfn8DH0V4TWtY8
+AdO3bfep0d8PvwvJVvryN1e8RhOfSfBeLlFHtyY9lof07m9Ek69zLHp6msO
Ppb2muDtnaGAU7evz2274xF8jJLNdzS6MOUhnDozQTan3wP4aNprXePP2lw4
9QxHr9O378NHKVlaQo57+D049b91hk0L78KNaK+O0hPGd+DURxI0Lj//ho9U
Mk2d56d/bsOpHRyzk47fgo+gvSYYiDfehFNX1AXVOmTDh9NeHatjut+AU4ck
uNqor8GHKdn7uqyyrKtw6nGO+uGSK/ChtNeEQLNZWXDq53Xq98Muww2VbISj
y8GvF+HUAQmZxo8uwIfQXuv0XiVkwqkNHAP2rDoPH6xkGxJUI4Tn4NS5deIn
Omfhg2ivjhnb32TAqVcl6A4+exo+UMlu1vlzO0/BqTs5Fm6clg43ULJFCaK+
A9Lg1JfrUu7Xp8AH0F4dddbknIRTz07w04s4Ae+vZBl1BbcWHYdTf3cQLht3
DN6P9pqQ3On3UTj18brWK0+PwPsq2ScH34UnD8OpnRPy2/gnwfVpr3UmmWI5
nLrGQT67RyK8j5LZJLS0lMXDqWV1PqeuxsF7K1mJA+d2MBZObZpg/G12DLwX
7bUu5viIaDj1a4emyd8i4T2VbHSC90dFBJw6sC5XLpfBe9BeHYwcV4fDqYck
yGqswuB6Sra5rjG6Yyic+pGDl/U7Kbw77TUhR30uGE69ts4wbPcheDcly3GQ
mroehFN3S9C8MzgA76pkPnWeBxqC4NTXHLLH3t0P70J7TTB4GbkPTj2vLihw
yV64rpKdd6gePmEPnPpXvOs/f3bDO9Ne67K2FeyCU6c66A9K3QnvpGRf4wMV
m3fAqV3q1BucA+Adaa8OLvq9tsOpNfGZ9yq2wjsomX2d3urrW+DUMQ4B3YM3
w3Vor/Gqm3P94dSWdWIfo03w9rRXh4yO2g1w6nfxulf49fB2SvZXnf+Cw35w
6v0OhYK16+Btaa/xovM2a+HUw+tSZnVeA2+jZNsddFre+8KplfF+6Zmr4ALa
a12B656VcOoNDsJ/3VbAW3l2Pz752KDlcOqeda2TPvrA//BslYPvh3tL4dQ3
4/MTo5fAf/OsU52Jg89iOLW3g7zaZBH8F88uxbdECbzh1II6H6sXC+A/eTbb
gStNmw+nPh1vHLp1HryFZ821MSaTvODU0x2a3vaeC//Bs+Px3pKq2XDqT7W5
Y7Jnwb/zzMnB6IV0Jpw6IV62e54nvJlnNbWNw0bPgFPbOHjlN7vDtTyTxeds
zXODUxfXGg486gpv4pmJg/TRuulw6oPxmvWiafBvPHtd69mny1Q49SiH7LtF
LvB/ebY73sD34mQ49ZPaoG77JsG/8myIQ3W2x0Q49eZ416VDnOFfePawNqtD
oxhOre+gn5XrCP/Ms7XxgfNjHeDUObXq1mX28EaedXVwOWdmB6deGp85s60I
/olnV2v1fry0gVO3dwhIO2UN/8izefGq6dut4NTnasVfJwvhH3j20z4jWd8S
Tj0jXndSjTm8gWeptf4NN83g1F/tCxNCTeEank2OF9kvMIFTH65NqRozAV7P
M429TtSPcXBq+3g/Yf5f8DqeRdcWlCQbw6nL7YUh68fCa3lmEZ88wX4MnDqk
tvVN19HwGp69s/cNKjGCUxvH54++PBJezbN9tSbP94+AUz+3l+/yHA6v4tnw
+JahQ4fBqbfX+jz+bAiv5Blvz215MAROPSDe2CB+MLyCZxtqYx6uGASnvm/f
5GcxEF7Osx7x3r3bG8CpV9bm3nndH17Gs2x7o1UZ/eDUneJlXXf0hatpr7WN
N6bow6kv2nst6dcHXsqz1rgcnbpecOrZtYaXb/eEl9Be7aXzwnvAqbVxmj8L
9eDFPJtW63nWuDuc+ph9tufPrvAi2mucwfd/usCpnWqDUo/rwlU8i7evnrax
M5y6Os71i0Mn+Hvaa23W0e4d4dQye/2Jah34O9prXKAmqz2cekKtOl7SDv6W
ZwfsXexmtYVTv47LrBzWBv6G9lqrF/m19d5/Tr3LPsDy0Z//WlLIs/w4VXHC
bzj14FqxdNUv+Gvaq33GeOFPOPXDON03Oi3wVzzrU+u//813OPUa+8JRZ5vh
L2mvcaKCnVo4ddfalJ3TmuAvaK/2OkMHfINTX4nzy6v/Cn/Os3a1BZtzvsCp
59kLB0R8hhfQXuOSHyxqhFO31LSuG/cJ/oxnHva+vX5/gFOnxOXnPG2AP6W9
1pisPKmBU0+2l3fxr4c/4VlSXMt1cR2cur7GZ3GPWvg/tFd7rn15NZw6Os74
0tUqeD7PympivA5WwqnN7Zt+z66AP+aZNM77zIhyOPW7mtwZ39TwPNqrvVGz
ohROvTdOliIvgSt5VlDTOHV1MZx6uL3XZ6siOE97jcs50lEFp+ZrDJ3fvYNz
POtvL60/9xZOvT5OE7f7DVxBe63xFLkWwql72GdXGLyGP+LZijiDiIaXcOob
NUEWd1/AH/Kso311UeRzOLV3nGvwkgL4A9prTda4Cc/g1H/s9Av/PIEzns2K
C9xX8A+c+nSN2ig1H55Le7Vzebb5MZx6WlzmDuc8+H2eJdfoGfZSwqk/2gUo
Kzj4PdprnMr/ugJOHV8j7h/8CH6XZ1V2GWzuQzi1dZzuOqMH8Ds8C6/x76nN
hVMX2xX+zd+H59Be40QrDt+DU0tqUnTX3oX/zbNXdjrXbe7AqUfF+S3qnAO/
TXutKWinug2nzrcTXsy8Bb/Fs0FxyXP33IRT+9e0/nLLht+kvdr5Zgy6Aafu
E5fv8fEaPJtnq2tMtPeuwqn/tpOfjL4Cv8GzLnEtU3yy4NRLa3waTS7Dr9Ne
7bjDgktw6rZxxk4vLsCv8cyrJqYuLRNOfc6uKXbrefhV2must+2kc3Bq95rc
8t5n4Vd4dtLOSFaVAaf+Eiszzz4Nz6K91jSqpKfg1El2XofmpcMv86wuNuev
0Wlwarsaw9fNKfBLtFc76d68k3DqsljNyKMn4Bdpr///BZPH4dTBdtkBomPw
Czx7G2swpEsynNq4JogvOgLPpL3aVW+6eBhO/SzWtd++JPh5ng2tycr1kMOp
t9nprx2SCD9He40N7NEYD6fuX6O+nRsHP8szPzuX5bGxcOp7sZmdl8fAz9Be
a/SumUXDqVfYBXi3jYJn0F5jVW1fRcCpO9SIL5ySwU/zbKFdxpzt4XDqi7G6
vyaHwU/RXqv9T+uHwqln2hW610jh6Tw7FStquhkMp26qTjkRegieRnu105my
4CCcOjnW79OYA/BUnn2oLkj6EQSnFtsJxfn74Sm019jk2uR9cOqq6taY9Xvh
J3lmZedrY78HTh0Wm1/WNRB+gmdF1SbhJbvg1BPs5GaXd8KP015jW97v3wGn
flntc9AzAH6MZ0Z2nPHQ7XDqXbHGrz5vhSfTXqtj9jzYAqceZNc0In4z/CjP
NsV6P1nhD6d+UJ273WIT/Ajt1c5ocPuNcOrVsTLu9Xr4YZ7drm7cmOEHp9a1
8+q7Yx08iWdLYnPuT1kLp75Sbbim3xq4nPZqJ9Wr84VTz43V3Lq9Cp7Is7PV
nsvCV8KpW0TZnbxXwBNor7EGV42Xw6lPVgct/OkDj+fZZ1F1mydL4dSTYl0z
jy+Bx9Feq7Nmb1wMp64T6f90WASP5ZkoNvBUd284dVS12k29AB7DM7XI5VvW
fDi1eWzmcck8eDTttVrPZZYXnPqNKODjsLnwKJ6NjVXJv86GU++tFjs+mgWP
pL2KMmoSZsKph8bqxqzyhEfwbGu1v7VwBpyaExWqdTzgMtprrCjsjRuc2q86
xfSsKzycZ3dFOu93TodT68X6HZg2DR7Gs+XVBWMHTIVT3xAJX9a7wENpr7HJ
gTmT4dQLqluHR0yCh/Dsgsj3n0UT4dR/YvK3jXOGS2mv1SaDfovh1OkiueKp
IzyYZ99iWjacdIBTT6320fe3hx+ivYq4e2I7OPWHGOPVPUTwgzz7/4//ym3g
1HH0OLhqDT9Ae43x9jloBae2qs7tOEcIl9BeRUZXRljCqVUxsgXfzOFBPBtf
3SjgzODUEpHXebkpfD/tNSZn1moTOPXIasMWqwnwfTzbIZKmdxwPp34co3F9
9xd8L+212vPfc8Zw6k2i7GO7x8L38IzFGEx2HQOn7l0d9MFgNDyQ9iqqTmww
glPfjnF1uDsSvpv2Wp1VHTkCTr1YpB+9ZDh8F8+yYgKtJgyDU7etVpf+MYTv
pL2KXEILhsCpz8RkmqQOhu/g2Y8qvXebB8Gp3UQBEueB8ADaa4xqTC8DOPXn
KvGLiv7w7TybKMrYfb0fnFoeozs8uC98G+21yj9/rj6cWiQq3GrUB76VZ5Ex
ooHaXnDq0qqUR3xP+BaemYl0NhzuAacOjvHrs1YPvpn2WlVw16Y7nHqMSOjb
uRvcn2d7YpK7qbrAqZ9VtWZn6sI30V5Fvkv3dIZTb43J7+DeCb6RZ4oqk6xB
HeHU/UTy+R914BtorzEtrffaw6nvVvmci24HX8+z7iJupk9bOPWyGOMfJm3g
fjy7XhWTRoflf07dQdQ0/cWfu//5OtprjPfXtN//tYA6syo3eesv+Fqe/bY1
mjTpJ5x6ZoysoXcLfA3ttaoxoeo7nPqbrZd9djN8Nc+mxORUSbVw6qNVhlHz
muC+tFdbqXD0Nzi1Y4ympPkrfBXPYqs8Q/K+wKkrbbMnHP0MX8kzYYzB23WN
cOqwqqAg0Sf4CtqrbfXoLh/h1ONiXJ8XNcCX8yyoKmvXRQ2c+qWt/rB99fBl
tNeYwMcedXDqHVXqLUNq4T48y7N1MWishlMPjMl8mFsFX0p7rdJbH1sJp2a2
Ab2XV8CX8KxXjOqOWTmc2rdKvKptGXwx7dU2o+urUji1boxu9qkS+CLaa5X/
ku3FcOrLtoU6LkVwb561iRFd1lfBqedWpcyreQdfSHu11Wm9+RZO/T3a72zo
G/gCnrlWFXguKIRTn7AVfh/zGj6f9hqdnPrjJZx6YlXrtPwX8Hk8S7T1/ZL8
HE5dG51/dH0B3Iv2WmUy0f4ZnDrSVq7p+hQ+l/Ya3RJf8g+c2rTKx+5yPnwO
zw7ZcpX7H8Op30QbR3rmwWfTXqtiLIcq4dSBtk3Fnzn4LJ49jfaWPlDAqQ2r
csfHP4LPpL3aGr1Z8RBOrYiW7bd4APfkWd+qxlHtGZx6na1Xwev78Bm01+ic
nRn34NTdqwyH7rgL96C92krzptyBU1+L1mzulwN355lOleeAuttw6gW22Q9u
34K70V6jDfzCb8Kpf1UG9fLOhrvyzNO2Osf4Bpw6Ldp15c9r8Om018qsLk+u
wqmn2OrfOH4FPo1nR6IDF2/MglM3VKrbO16GT6W92rpc6n4JTh0bnemlvgCf
wrOKSr0/WZlwakvbgDOS83AXnoVGq2bMOgenVlWKm4edhU+mvdpmpHzNgFPv
j9ad9ug0fBLPXlT6f044BaceaVt4ZFU6fCLtNVrkLEyDU+dVptTrpMKdeWZg
qxP/5iScemO0n+jsCbgT7bWyoGLncTh1L1thxLRjcDHPVkUnWwxIhlPfrGwt
qj8Cd+RZZ1vf4JzDcOrF0fnjIpLgDrTXSpPCRXI4tcBWvm9cItyeZ3OiW4x+
x8Opz1T6PHsaB7ejvdpwO07Gwqldo40N/WPgIp4dr4xRiqPh1I02Tf49ouC2
tNdo7/7lEXDqxMpcdlUGt+FZjY3RuoPhcGrbaFnPOWFwa55FVDb+PSIUTl1q
47XimxRuRXuNztHlguHUBysNr8sPwYU8K7SRLlp9EE49JlrTzvoA3JL2Wul5
saMETv3EJnvuu/1wC54NiTb4fW4fnHpLZVDG7r1wc9qrTbWH6x44dd9oV61B
INyMZ2srs0427IJT37HRn3p3J9yU9hod2Bi5A069rFJ9eEkA3IT2auPiNGE7
nLp9dGbdn63wCTybX6kXV7AFTp1pE2Cbuhk+nvYapSrf7A+nnlEpljlvgo/j
WapNhnmvjXDqf6N0iyrWw/+ivVb6H7ruB6c+YlP4V/A6uDHPNFGi13PXwqkd
KlP2Gq2Bj6W92ugYaX3h1BVRfk/5VfAxtNfKgoDDK+HUITbCIWtXwEfz7H1U
Mm+zHE49rrJ1U+dl8FG0VxvffqqlcOrnUfm5mUvgRjwbUWmyds9iOHWAjbyH
+yL4SNprVMvtQd5waoNKn+UfF8BH8GyDDdf5/nw4dW6U8bXoefDhtNdKOvC9
4NSrbJrams6FD6O9RnlfEMyBU3eqzJ3zYhZ8KM8W2Rj9SpsJp74cJTu91RNu
yDNBZaP7pBlw6tk2Xk29PeBDeJYRlXOiyg1O3VxhOCXbFT6Y9moj/SSdDqc+
HqVJmjcNPohnnyo8xaOnwqmdbbJrm13gA2mvUQaxeZPh1DUVQTZHJ8ENeGZj
U122biKcWhblGi5yhg/gWUlFllkXJzi1qY2+qsgR3p/2GhV48KIDnPp1hdp4
nz28H89G27i88rCDUwdGZe4ZIoL3pb1W6I1stIFTD7EJeJJrDdfn2eYo1fZY
Kzj1owrx4OVCeB/aq00GZ2YJp14bpbuprQW8N89yKvz7vjKDU3e1Kbx/yhTe
i2c+UaI1203g1NcqUvRcJsB70l5tdG7rj4dTz4vyW1bzF7wHz85XFHS6ZQyn
/mUtvBo6Fq5He41KXrhgDJw6taK1zdjR8O48+2rtm/nDCE7tEpU/O38kvBvt
tcLkZ/IIOLXGWn5q/XB4V57ZR7W42Q+DU8dU+HzrOhTehWfl1tzxkiFwasso
Y5fLg+G6tNeKmI/7B8Gp31k3yT0Hwjvz7K8ob8ehBnDq/RW5NZ/7wzvRXq2N
Yh70g1MPj5JZx/eFd+TZ9opG9Qp9OLXS2ivMog+8A+01Kse0fW849YYKw/ev
e8J1eHbfWnogowecumeUZuwOPXh72muF58sp3eHUN62zA/t1g7ejvUYZjKjr
Aqf2rgj657YuvC3PLllXbwvvDKcWRLkO8u4Eb0N7rchSGHeEU5+21t/4Uwcu
4Jk2MlD/SXs49fQK9b3j7eCtHDtu7bJ6Y1s49afIzO6ObeB/OOZUoXeruwBO
nWAd4KP+c+c//82xmkhVxyu//2sBtU2F+IrkF/wXx2TWGQtm/YRTF0fqthne
Av/JMZMK//Nfv8OpD1oXznrUDG/h2OtIUUuCFk49qiIlfVUT/AfHdlvruAm/
wan/ifT7V+df+HeODakoOPbmC5x6s7Vw8tnP8GaOPYxM/rCzEU6tX9GaOO0T
XMuxtda+DgM+wqlzIvOr6xvgTRzrWmESnaOBUy+1lltF1MO/cexqZEvpojo4
dfsKn9BxtfB/OTbPmjP5XQ2nPhdp/O5pFfwrx36Wx0hOVsKpPaybxvhXwL9w
LDXS+4W4HE79tTx3d48y+GeOTbY2Gl5eCqc+HCnLv1oCb+SYprxx68FiOLW9
tdfAOUXwTxyLjsx5NEIFpy4rN9zw7R38I8csrKV9uLdw6pBIzV35G/gHjr0r
9/RdXQinNrbO7mb9Gt7AsX2RBjc7voJTPy8PWvruBVzDseHW1R3OP4dTb490
zdpdAK/nGF+eNd/1GZx6gLW+YOBTeB3HNkQGnmv4B059v1w9824+vJZjPaxd
fkQ+hlOviMxMW5IHr+FYdrme6wQlnLqTdcDXPxy8mmPekarkAgWc+mK5eFLq
I3gVx1qtMho2P4RTz47UTXR+AK/k2Olyf/teDE6ttSqsqrgPr+DYtEhR1PV7
cOpj5SnC4LvwctqrlU7p3DtwaqdIvxCjHHgZx+LLCyZob8Opq62Eb/lbcDXH
rCOTgw7fhFPLyltHr82Gl9JerXyf29yAU0+IzN/V+Tq8hGMHyk2Gqa7CqV9b
yR9nXoEX014jW7bsyYJT7yr3MXC/DC/iWL4V93DQJTj14Ejj9R8vwFW01/KY
3vcz4dQPrZruRJ+Hv+dYn0jvVT7n4NRrynO7mp6Fv6O9WhllC87AqbtGypa8
OA1/S3stb9RJPwWnvmLldXlrOvwNx9pF5syblAannldu2No7FV5Ie7WSnq06
CaduidB4Zp+Av+aYe7nnd+lxOHWKVXbqvGPwV7TXCIPpo5Ph1JPLg740H4G/
5FiSVfXRvMNw6voI14lHk+AvaK/lWZp1cjh1tJV+gigR/pz2GhFo1yUBTm1e
rq4sioMXcExq5RJ5MRZO/S4i03JfDPwZ7bVcr8QjGk691ypAOiQK/pRjBRGq
8Y0RcOph5eI3uTL4E9qrVcb+2HA4NR+hO3p5GPwfjvUv9y8wC4VTr7cq3Nk2
BJ5Pe40QDX0VDKfuUZ6Sd+oQ/DHt1Upny/aDcOobEX4DXA7A8zjWsbzggb4E
Tu1tJfSr2Q9X0l4jknvd2gen/lPWmhO6F85zbJaV78oFe+DUpyLyu4wNhHO0
1zKTGz92wamnWckX5++EKziWHNHS/tgOOPXHMp9L6wPgj2ivVpyX/XY4dXyE
8Z+u2+APOVZVFnOmZAuc2sqqacblzfAHHAuP8G7e7w+nLi7LTfHcBGe0Vyuj
aUM3wqklEbLPn9fDczn2qqzxyAM/OPUoKy/n+HXw+7TXiJz6FWvh1PllhvEW
a+D3ODbISipqvxpO7R+hqXi9Cn6X9lrmGZGxEk7dxyrbYscK+B2OrY4wKJ6y
HE59uywouN8yeA7HulhVj6tbCqdeGuFaeHsJ/G/aa1nWvvDFcOq2VvqjvBfB
b3PMKyLwmbE3nPpcmXrHzwXwW7RXoYvhk/lwaveITOXxefCbHDtZprd5oxec
+oswoL/jXHg27TVCxbrPgVMnlYnXqWfBb3CsTpjR88pMOLVdhG6OxBN+nWNR
Zf4rZs2AU5cJC3WHe8Cv0V4jRNe/usGpg8tSFj1yhV/l2FuhTvvE6XBq4wi/
i6umwa/QXssK5gqnwqmfCYW/dabAszg2NCI5481kOPW2slaPs5Pgl2mvQl/t
zolw6v4R+SenOcMvccyvzGTqACc49T2hvLHeEX6R9hrRcjjHAU69oszHKcIe
foH2KuTqFtnBqTtEGMeNE8EzObawLMb2tw2c+qKwqfypNfw87VXmLTtpBaee
WZZr7i+En+NYutCoSGwJp26SyQ71sICfpb2WNf5VbganThZ6vb5qCj/DsQ+y
nL0HTeDU4jJDozkT4Bm0V6H06YjxcOoqmSbg21/w07TXMs8hnDGcOkyYzcvH
wk9xrEhm4L96DJx6QllQP+vR8HTaq7A6t+MoOPVLmevadyPhaRwzKsvqcX4E
nHqnUP/v3cPhqbRXWeBy12Fw6kFl6s4Dh8JTOLZJ6HKtYQic+oEs0/vuYPhJ
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
OHWUSXa/L7fgxxRMHWzAHtyEU5urgtbGZ8OTaa8m1T1W3oBTvwl2/dviOvwo
7VWVtbz9NTj1HhN93cIr8CO01+DAaxlZcOqhKrX3jsvwwwq21cSl3dRLcGou
OPNCv4vwJNqrSm9uXSac2s8k4Nft83C5gt0NVp0OPwen1lOJPbzPwhMVbLlJ
RpPxGTj1jWDdkz9PwxNoryr/KU9OwakXmBR+Op4Oj1ewC8GiwxvT4NS/36eI
HVPhcbRXE5267ilw6vRgv1j1CXisgn17X2Bz5TiceqqJsFxy7H8s3WVUVGsD
xfExMDCwMDDoLgsVDCwMRLEwMLBQxOCqdA5lYGBhYGBhYGBhYPBMINI5lIGF
gSLXwMDg3e+6++N//T7BsOc8ZzHrDD0We42K3zItno7+UNHYT+8gfYdSjLB2
r/y8n47eFZUVodhH364ULyuszffG0dGDrOOKl+2lb8NeoxqCbPbQ0ZUVbgYt
dtO3KoWldXpO6U46OizKzOdMLD0Ge62I7e2/g442sK5Pn7CdvgV7jXJd22Mb
HZ1Zkda1Joa+GXu1NkxL3UJHr42KWbF1M32TUoiKOo35m+joztYutyw20jcq
hXtU6qI/UXT0rQrt1nmR9Gjs1Tr6ytEIOnp+VM1cr3B6lFIkVzg3HSmlo5ta
pyR1CKNHYq9RWjOeh9DRpyvCfl0Jpkdgr1bVJyOC6OhJUY5OMwLp4dhrRfJX
/QA6+l8rzSNf/ehSpRgdFeiQ7ktHx1VU1cb50MOU4o2Vw77l3nS0XVTSiMEb
6KFKsa1C403L9XT0Uyuf2PJ/6CFK0S+qcvA5Lzo6qsL+WcBaejD2apW42XEN
HW0Spd6v52p6EPZa4VXx3pOOzrVShd9dSQ/EXqPszLZ70NHrKxKKFqygByiF
0kotyGo5Hd0tylO/cRndXylWVuRn5y+lo+9a2XgfW0L3U4r2UfG91i2moxdV
NCpHLaL7KsU1K/c1ndzo6BZRWZovF9B9sNcK6/vX5tPRSVZxy6Pm0b2x18iG
9i6udLRzhdtNw7n0DdirVbrbt9l09NdIs1YZs+jrlWJcRezl/S509EGr+jke
M+nrlOJ9pGsT2xl09IiKtHOtp9P/UYqdVobTK6fS0S8jYxqSnOleSmFTUXci
aAodvdnKZZLTZPpa7DUy9UsvJzraokL7cK0jfQ32ahU99v5EOrowsubDjgn0
1dhrhXOc23g62tcqZXjfcfRVSvEwUuu1xIGO7lkRtqNwDN0Te7WqHnRiNB0t
Ih2r1o+ir1SKThXJm8aMpKPdrTT7drGneyjFzcjA8lfD6Wj1iippyjD6CuzV
ysF041A6+lJkUuEsO/pypWhSoRFobEtHz7Dy0fsxmO6OvUZWZj0cREf/KLff
cNCGvkwpHK0Se3oOpKOPRKor7QbQl2Kv5V6r2/Sno0dbqbo87ktfohR7I+3u
XbCmo9+UJ7iHWNEXK4WtlVr7KZZ09LZIzxt9LOiLsNfy/IV1ZnR0XyublsKU
7qYUkZHxyTtN6GhVeePsxcb0hdirlbukvxEdHRiZdbapIX0B9lpuPa1Yn47W
tor7eVKPPh97jWw47q1LRyvL3RwddOjzlKKrVfpnTW06emWk2aHXvemuSnGn
PHbMzV50dHur+vebetLnYq+RrnvnaNHRV8vThpn2oM9RCjUrw+qf3ejoOZEx
27O60mdjr+V1Noc06ejfli5PV3Whz8JeI1M3DutMRx8v17Zu14nugr1aRpc9
6UBHj4usCbukQZ+pFAfKnU3C2tPR7y1TCpzb0WcoxfBIrQCdtnT0zvIw3U/q
9OlK8cKyOlPWmo4eGOm4fncr+jSl2FSerLW0JR1daampGNCCPhV7jQxc1VyN
jg4tr+qsakZ3xl4tHe4mNqWj9SOTlvk2oU/BXss12o2X0NEPLX1SujXe/M8n
K4VWZOWCt3/+awl6Tbl9i9u/6U5KkWaZeGnLLzq6U6T6bNcG+iSlWFbu1Wj2
k46+Yak68+s73VEpWkfaTc35RkfPL0/4cbiePhF7tVQ7vuYrHS2J9Jw44gt9
AvZanv+p/Wc6OtHSJr7qX/p47DUifvTlOjrasbyxRvqRPk4pDlu675lWS0fX
RWQN1ftAd1CKUeXWrz7X0NF7LeO2Kd7RxyrF64iGgXvf0tG25W5Plr2hj1GK
rZbp0Tav6einEWZWLarpo7HX8tjS0pd0dIRlfeiZF/RR2GuEq7H/czrauDwt
f8Iz+kjs1dLQv0cVHZ0TEaNT84RurxR9yusepj6mo9dZuqzb+og+AnuNSO0x
v5KO7lquLbeooA9XCg9L3HCV0dF3Imo65ZXShylFu3LnO0dVdPQiy5SlXiX0
odhrhFbbkcV0dPPysOsdiuh2SjHbsnr+8wI6+lyEo9rVfLot9lqWfDEij46e
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
APWLuxvoh+TiYJ6Xy9KfdPQHfdWfAT/o8XIxIsDudPPvdPSuvIQpqnr6Qbl4
qa/2PfErHT0owDPB9wv9APaalz9+/Gc6ulLf5t9un+j7sdeA+ANv6+josLzG
kbc/0vdhr/ru77bU0tEGAVm7XD/Q4+TCN8/azvw9HZ2pH/fi1zv6XrnoGdAQ
k/OWjl6b5zbgyBv6HrkQ+umP1rymozsHmEWNqKbvlgv3vFgLjVd09C39+pKq
F/Rd2GuAa8jl53T0/Lw0w/Bn9J3Yq75h3rQqOrpJQIyv3lN6LPaaV9fny2M6
+rS+S4biEX2HXPzwT/XaW0lHT8rT7u5eQd8uF0f0o4VNOR39r3+NR4sy+ja5
GJ3n3LFMRUfH6afcPlNC3yoXb/y1lvgX09F2eWHqE4voMdirfvXVHoV09FN/
x3k1+fQt2GtecrM7eXR0pL7mha259M3Yq3/gzPk5dLRJXtVvi2z6JuxV3yHx
TyYdneufNDnvIX0j9pqn8e1oBh29Xt/nqNcDerRcKP0rx41Mp6O75dnXdVDS
o+RipX7i/udyOvquv/rIqzJ6pFy0z/N6GyHo6EX6qp0z0ugRcnHN387W4D4d
rZaX8PzrXXo49qqvFpN+h45O8vfsvy+VLsVec/Mrl9+mo531bSIH36KHYa/+
8eatbtLRX3Mbi8tT6KFyMU7fPfjcdTr6oH+WQeA1eohcvM+1znW8SkeP0I/z
6XmFHiwXO/0ben9IpqNf5ro9uHuJHiQXNvrpa7dfpKM3+Zt1W3iBHoi95sam
WZ2noy3061c0nqMHYK/+rh0KztLRhblpt46doftjr/qGi9edpqN9/WNaj06k
+8nFw9y6K51O0dE99V1cX56g+8rFGv/UpteP09EiV/t81DG6j1x00o+e4ZJA
R7v71/wyPEr3loubuc6nvh2mo1vrpzhlHKJvwF79ter3x9PRl3LDjngcpK/H
XvWrHWwP0NEz/B0/tt5PX4e95ibvq4yjo3/oadqf30v/Ry4c/QPfBO2ho4/k
VsU67aZ7yUWdnsOQ3rvo6NH+Sc9qY+lr5WJvrsaW+zvo6Dd6Pv1it9PXyIWt
f2WF2zY6eluufUTfrfTV2KteolmTGDq6r796ceFm+irsNdcr6MQmOlqlp9Lf
sJHuib362+WMiaajA3MTvLtE0VfKRY6eWu/qCDpa298zPSWc7iEX63Lz12yU
0tFKPZuus8PoK+Siq3/8feNQOnplbuPyH8H05XJxR89dIzOIjm7vn3XzYCDd
HXvNtV7kGUBHX9WLazXUn74Me/VvuNzGj46enes297EPfSn2qpfe5KI3Hf3b
zywpZAN9CfaaGzt9yno6+rhefUOfdfTFcvHFz/VknRcdPS43bZJYS18kFwf0
DL/uXENHv/eLObx4Nd1NLobn1o3tv4qO3qnnUtvUk75QLl74pcYVe9DRA3O1
R5xaQV+AvepFv/ZeTkdX+NXscHCnz8dec50Hd11GR4fqpVS9XkKfh736aW2+
uZiO1s8N67t5Ed0Ve9WrLp/jRkc/9HMMN11InysXWrnJpg3z6eg1eppFWfPo
c+QizQ83wK50dKfcKr3Vc+mz5WKZnkP2sDl09A2/pA3tZtNnYa+5Gr2eutDR
8/R8lJdm0l2wV7/K1WEz6GhJrr3m1On0mdirXuI9nWl0dKKf+vJPzvQZ2GuO
V3v5FDraUU91Y/dk+nS5OOxn57bUiY6uy0loOXASfZpcjNJTu9zckY7e6+c5
RzWBPlUuXufkS06Pp6Nt9WzO+Y6jO8vFVr/4aeMd6OgnOY0/u42lT8Fe9dxP
vB1NR0f4ZTneHkWfjL3mWH/ZMpKONtaLO+RqT3fCXv0axpiPoKNzctw+/BpG
nyQXffTS9+YMpaPX+ZkNP2JHd5QLRU5s9RpbOrqrXv32EUPoE+XCw891kMZg
OvpOTtrTKhv6BLlop2e46fJAOtrNL8Y6fAB9PPaaU1c2rT8d3VzPRarXjz4O
e/VLNfliTUefy9EuVFjRHbBX3eiAvZZ09BS/Gl13C/pYuTiW45xlY05Hf9FN
Wd/CjD5GLhz8tHqWmdDRB3LCFGeM6aPloka3epW/ER093M+xy0RD+ii5iM1J
vtvDgI5+oavpXqNHH4m9+gW2u6NLR2/MqUrZqkO3x151HRbO16ajzf2SWlj2
oY/AXnM0kv/0oqMLdH1m5/WkD5cLvf8/ME2LjvbJsT/r1YM+TC4ydBOnjuxO
R2v5qf/s0I0+VC5W53gdf65JR6fpqiZe7UK3k4uOfnafIzrT0ctyEuJndKLb
Yq+6amMMOtLRrfw833/VoA/BXnPy96S3p6Mv6toM29eOPhh79Yt/tbwtHT09
p3Hb4Db0QdirrrtNK3U6+rtv1pPyVnQbuZiYY73xXEs6+rBunFVgC/pAufjo
21DqqEZHj8pxC+vZnD5ALvbopht/aEpHv/Y1K7jbhN5fLobkxPpvl9DRMbr1
Ogsbr/7n/bBXX9dMq7//tQRtnZO2rvE3vS/2qmuoVfCLji7xjZEfa6BbY685
dZ7rftLRAbounUf/oFthr76pdzp9p6P75Ggve1lPt5SLf3Sj217/SkcrfGuu
R32hW8iFZo7zApfPdLSHboqa0Se6uVyk+mpd+lZHR7fNCZuV8ZFuhr3qVv/d
X0tHX/F1POPxgW6KveYkO9u+p6Nn6Wr+aF1DN8FefQOPVb6lo39lV004/4Zu
jL3qOnwKek1HH/NNOuhUTTeSi8/ZGqN7v6KjHXR9ampf0A3lYr9v5e77z+no
mmz7obHP6AZyMUw38aVbFR0d66u+re9Tur5cPM/2GtjkCR09QFf1uPARXQ97
9bWLPlFJR5dnJ1huqKDrYq+6aqVjyunoEF/P0C5ldB3sNTvfqFpFR+vp2uSn
lNC15cLbN95vYzEdnZHdqD27iN5HLnrouj80LqSjV/tm/fMjn95bLu5nW/fI
zKOjO+rGyQ7m0nvJxVLfhpWeOXR0SrZbp6HZ9J7Yq256apssOtrV12zp44d0
Lew1O7bNxQw6ulGn/lrIA3oP7NXXdf6UdDr6VHZac20lvbtcfNMxvFgnp6Mn
+sa4CBm9m1wcyq77s1PQ0R91XE4vTqN3lYuRvqlT+t+no/dka39veo+uKRfV
OtEJxXfo6CG+NeNPpdK7YK/Zzv9636ajH+ukHHC4Re+Mvfpqjep6k44Ozw57
9zqF3gl71anedfM6HW3k62i3+Rq9I/aanfxizlU6OltHc6vpFXoHuejtGzig
IZmO/ie76lHWJbqGXMh1HKIOXaSjNX2TLFZfoLeXixXZGqph5+noVB2fkHZJ
9HbYq2+l4dOzdPTCbPu8S2fobbFXnUTfsNN0dDNfde2pifQ22Gu2V4bOKTr6
rI7K69MJujr26mPXXX6cjp6cnSB2H6O3losEHbWVSxPo6M8+nh0HHqW3koux
2fm3mx+ho/fr2CxRHaK3lIt3PvHqp+Pp6GHZjVd9D9JbyMUOHfd54w/Q0c98
spp1309Xw16zrS+8jaOjo3XiZt7eS2+Ovfo0/N6yh442y3ZLdN1Nb4a96qRP
Nt9FR+f7mH37FUtvir1mxx7N2UFHe+vUjzuynd5ELh74uNat2UZH98hO2z9i
K10iF6t0DEdqxNDR931i3lZtpjfKRIfsup2XN9HRS3RcbMM30v/KRIpP6vNp
0XR0y2ztGL0o+h+ZcNWJ7v8lgo6+4FNTqQin/5aJxiznyL1SOnqaToq5exj9
l0yc8tEqsQmlo79lhQW3CKE3yMQEnWqDsiA6+pCPY+6ZQPpPmajNSvbxD6Cj
R+po9pnoT/8hE7t9Ah/08KOjq7Oq1tb40L/LxGAdh253vOnoLT5JaVs30L/J
xOMsDY/56+loKx2fDpbr6PUyEe5TeeuPFx1dnGW/OG8t/atMGOkktk5YQ0f7
+6hf9VpN/yITWVleriNX0dG9dVRNO3rSP8uEl4/d+ecedLQ8K2HG1RX0TzLR
RUftd8RyOnqFj+epGe70f2Xidla+k8EyOrqNjk391yX0OplY6BN/JH0xHX05
q9Fh3yL6R5lopuP+cbkbHe3ik7Vv8EJ6rUyczbK2b7WAjm7QjntTPo/+QSac
fBpiz7nS0QlZbkMC59Lfy8Qn7fRnjnPo6LE+Zlt6zqbXyMS+rNh+H1zo6Hfa
9RV3Z9LfycRQH9eI7TPo6B1ZaWYLp9PfysQzbcNiq2l0dH+fmKBGZ/obmYjO
qtMvmEJHl2m75BybTH8tE2Y+qd7rnOjo4Czt3qMn0atlIl87Or2TIx2N48Ga
lxPor2RiQ5Zz1+vj6egH2in3o8bRX8pEdx+tFS4OdPSqrDANo7H0FzJxT7v6
5rfRdHQHH8dFGaPoz7HXrORWB0bS0de1Na942NOfYa8+gXNtR9DRc7OqmqgP
p1dhr9oOSZVD6ei/3knTz9vRn2KvWRq/gmzp6JPaPiedhtCfyES9d+Wk3oPp
6AlZ9l9rbeiPZSJeO/Hw/YF0dK23ukPsAPojmbDP8qp1609H79ZWxfXtR6+U
iVfediOa9KWjB2UlvC60oldgr9pqsScs6ehH3p6DN1jQy7HX///D25yOlmrb
bO5iRi/DXr3j+1ab0NGGWY3lKcb0UuxV2z18oxEdneWdZTrbkK6SiV5Z1kXG
BnS0l3Zc4A89eolMyLwb9DJ16eguWW7ZB3XoxTKxXDt9g6c2HX3b26zX0D70
Iuw1K1bZpjcdvUC7fvXjnvRC7NXbVfOiFh3dNCvtXkgPegH2qm24fEp3OvqM
d0x77W70fOw1s+5GnSYd7aTt4ia60PNk4qh3astdnenoT5nalxd3oufKxBjt
6Dn9O9LR+7xrJM060HNk4m2m87ni9nT0UO2Uaafa0bNlYru3VoN3Wzq6KjPs
hEMbehb2ql3t2FWdjo7ydvzyuhU9E3vNTD50syUdbaqtOXZzC/pD7NU78MMc
NTo6L7Nqr2lzeoZM6Gg7DG9oSkdv8E6qzmpCfyAT6ZkaOw5J6Oju2j6DVjde
+c/TZcLTu/LpsL//tQR9L9N+U7s/dKVMaGgnWj/9RUcv9lYvv9RAV2CvmV7S
sJ90dAttlcnUH3Q59uptV6jznY4+n5kQ8KmeLsNe+6jpyb/S0VO9PbN2f6EL
mTiRmb9+6Wc6ur6PTc+Bn+hpMjHeO17R/F86Oj6zcZXqI/2+THzo497ldC0d
be+dddf3A/2eTOzKtHYf/56OftUnrl33Gvpd7NW7IeXtWzp6c6bbwttv6Hew
1z7pLWJe09GW3mbJrtX0VOw1M3a2+Ss6uqhPfeOvF/Tb2Ku369mc53S0X2ba
1CPP6LdkIrOP4c81VXR0L++Y4yOe0m/KxNrMuokaT+hoWR+Xz1WP6DdkorN3
avzlSjp6eab2mPAKegr22if6/bRyOtrt9/Og/DL6dZlQqxzRdjJbgj5/89Dh
rFL6NbxecT8sJrAl6G/rXe6lq+hXZeLw1KuTx7Al6NFWGk9FCf0K9tVm9doR
bAl6x7uHf+8U0y/LxMAMw1hbtgRdeSpC+2YRPRm/34iq5IFsCdpo0bCRVwvp
l2QiZ/jBAmu2BL2+57dFFwvoF7GHn9M/mbEl6HulyeFn8+kXZGLp9badjNgS
dOvdK0+czKOfl4lkrwf9ddkStMtkfcXRXHqSTPwyk87oxZagj7d68vJgDv0c
/n5f23p3Y0vQtYp9zeOy6WdlYs/xL3s7sSVo27Cphjuz6GfwfjP/Yko7tgQd
bac+bmsm/TSu/91XlLZiS9AF9YrlGx/SE2XCt1jnezO2BN3rSsim8Az6KZzX
dlR2a3xAR3usHnw2mC09KRPtHfcOaUino68bf3rox5aewPlabcrceiUdLXmZ
9G49W3pcJk6LloH/Kuhop6PL1Neypcdk4nOQLP69nI4+MLeP+Uq2NEEmhg8O
uvNaRke/7FI+aRlbehTX188DHz8XdLR1wa7VbmzpEZlQXfz4+3EaHR20ddJ2
V7b0MM5DK8/2Lr9PR2eMU7vkwpYekok1BktGFN+jozs3TcubypbGY19VPd3y
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
1rO09BzZ0l9CqAb4Xc3QoqODOpaMdmBLG4TQretbLO9BR2fkbF86ki39KcSa
pJov97rT0Z03j48aypb+EOK2+6kut7vR0QvHNEkcxJZ+F6K57kKb613p6KS/
qen92NJvQkx93G1WsiYd/e2292sLtrReiMP7C32TutDRo32sWpqwpV+FeDt9
6/7EznT0jr5vjfXZ0i9CDGzvcOtYJzq68v3xCX3Y0s9CSDP/lh/qSEcbnZm3
sgdb+kmI7KhbP/d1oKPXLdGM6cKW/itEt5HrtXZr0NH3eucnabCldUIs/WU+
dHt7Orp1xeZsdbb0oxDJN6rnbW5HR7vsHf1BjS2tFeLXuoTgyLZ09HHn322b
sKUfhBhvOfdIaBs6ulb9huVvdfp7Ifa87XQ/gC1B2z7wmvK9Nb1GiKcnc556
syXoqHBTr8+t6O+EMHPb2OjFlqALhr2MrW1JfyuEr9ZInVVsCbrXj8OX37ag
vxFCrvo5cjlbgva4NqvwpRr9tRDtd11bvJgtQV9f2+Hz0+b0aiFcndZEzGdL
0BKzrE6VzeivsK+WxidnsyXoSdWRA1RN6S+xL/kzxXS2BL3/2PCZBU3oL7Cv
0PhXk9kS9Mt5372zJfTn2JftTLWJbAnautuVuAeNl//zZ9jX13ZGY9kSdFCR
5w3ZX3oV9nU5Y5w9W4LO2G5QdvcP/Sn2tSp8hR1bgu488en3m7/pT7Avo6Gb
bdgS9MLmB7pf+0V/jH29+Hq2L1uCTkqbZnupgf4I+zpyKdOcLUF/C2zjeu4n
vRL7muNRY8SWoEcPSg889YNegX111mujx5agd3wKPZTwnV6OfeU/Mu/NlqAr
Lwy5G/+NXoZ9xcQ5dWdL0EYenx/H1dNLsS8H5zWd2RL0Ov0Lf3Z+pauwryat
d7RnS9D3nrr32faFXoJ93ZVfas2WoFvHa9tv+kwvxr78gvObsyVoF5cKt4hP
9CLsq/+gfxv/paOPd9gjDWFLC7Gvj3UdftXR0bXZTsf92dIC7OvcuX7fPtLR
Qza1kG9gS/Oxr2VLp3+qpaOjRosXa9nSPOxLp/eGDx/o6II/Ac082dJc7OtR
6Z437+noXrcHGLizpTnY176d11/U0NEe3rVjF7Gl2djXdEfVk3d09HXrM+7z
2NIs7Ktd82/lb+loyftFG2expZnY18N7XUve0NGTTmudmcaWPsS+Iv0G57+m
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
i9fjvlR2G7zZxx0u6fT8yRpabIv7ejtpfcVe7rBSdtC3FbR4He7rdL3Psz3c
YYfd8+WW0eK1uK8VcbHFXtzhlCmdp5rRYhvcl+zaew89ucMdTZnm82mxNe7r
sfyHPA/usGmCm5sRLbbCfR0s7XZnN3c4fKNmmB4tXoP7MgocneXOHa5W/pw6
jRZb4r7+zTW+vYs7rPnqfNlUWrwa95XesSnZjTvsFW7VpkmLV+G+3NIPJe7k
DhcsGzRkAi1eifua6Bp/2ZU73L9PybTRtHgF7qte7WHsDu6wzYPDliNosQXu
61JtXaQLdzjBz8hLiRab477WR/c67cwdbtVvPzOYFi/HfQ21VAvdzh02/JOa
1Z8WL8N9lcuZBW/jDgelOr/uTYuX4r5CCp0CnLjDlS7j//WgxUsEwXvxwSD/
rdxhVfWaYV1p8WLcV0+DpP2O3GGXT+f0O7ZwX4T7yv9dvIcWwdmxK9f93szd
DPe1P6XZnRbB0mtl9/9w4L4Q9zVzm6wrLYItFB7FNG/ibor7+jlm8jZaBMc8
98utt+dugvu6WbVsMy2CG4P1qms3cl+A+9p2xtWOFsG6C9u6vLfjPh/3Nc4i
ZC0tgv2kklVeb+BujPv60OeWJS2CS3Id55av5z4P9xV9/7kFLYKV9qnaP7Xl
Phf3tcandQktgh2mvfUvWsd9Du7rf78AQ4vglJZTlx6s5W6E+yr9oWNMi+CO
pGX379lwN8R9HU1aZUiLYFNHmc8Sa+4GuK/5mz1m0SI4fHS+dKYV99m4r66j
TuvSIri6ynt86hru+rgvyauMKbQI1jw3zfSGJXc93Jdn2EsNWgR7rfrueHU1
91m4L+0lf8fRIrhALjHw0iruMwVh61fpoaq0CO5fbJ94fiX3Gbivq3dnKdMi
2OaIctG5Fdyn474c9too0iI4YW5l0ykL7tNwX6N0vAfRIrhVFNI3xJy7Lu7r
TXOULC2CDbPMJh5bzl0H9xWRIMjQIjjIXWrpkWXctXFfFnZVUrQIrpx8x+XA
Uu5auK9+wzp3oUWwapPnCfES7lNxX4/KRv5bzB12iZ9604sWT8F9HTxu9GsR
dzjbrunpLlo8GfdlaGrXYsYdlla+3OJCiyfhvtq7HviykDts8dJ2oBMtnoj7
SsuJqzPlDseEKWo70GJN3NfO3fkfTLjDDUufr9hAizVwX5qTP75bwB3W7X3M
3YYWq+O+6uqlXs3nDvvdn39qNS1Ww31djBtbZswdLvHtnG5OiyfgvmzXLiid
xx1W0s+qWEyLx+O+lIZsKZzLHXb4jQdeWjwO91VeeuT+HO5wyi1NxXm0eCzu
62TglbtG3OEO588zDGjxGNzXonmPcwy5w6ZqsVYzafFo3Je0qDHdgDsc/tFq
rw4tVsV95aX3vjWbO1x9flDkZFqsgvsSu2pc1+cOa9qU5KjT4lG4rxnqi6/o
cYe9hhx5O5YWj8R9/azdfnEWd7jgmZFIhRaPwH0lRwfHzOQO9w9uVx5Oi5Vx
X06WN87O4A7bmN42UKDFw3Ff4waUhk/nDid0d1k/kBYPw33VFH47MY073Hpn
vG8/WjwU9xV1UC5IlztsuLcmthctVsJ9WRpMPazDHQ7SjbzXnRYr4r4G/TH3
0+YOV3xf+aETLVbAfT1JcfPW4g6rJsl2b5/KfQjuK3BbmCctgl22PBrdNoW7
PO5r/tjbbrQIzlY9YPx9MvfBuK8u78ucaREsXaXn0DSJ+yDcV86ZNkdaBFuc
bTv0eSL3gbgvD4shm2gRHLMyOb5Gk/sA3JdW3+nraRHc0H/rw7ca3OVwX833
La1pEaxbpFpfqc69P+7rio/XKloE+x1+2+uFGndZ3NemmWeX0yK4ZE6E2pMJ
3Pvhvka2Zi2iRbCSaLnZ4/Hc++K+Xie9XkCLYIdMmW0F47j3wX1FbP43hxbB
Kbvyg3LHcu8tCKvNRw2fTYvgjknipOwx3GVwX31f68+gRbBp47SStNHce+G+
Hoat06ZFcPjl7803Vbn3xH35L9k/iRbB1RsSZZNUuEvjvgx6nlejRbDm8E2T
E0Zx74H7+ns3dwwtgr0qlZfHjeQuhftK21s9khbBBaGVrtEjuHfHfbnqdB1G
i+D+S0NCzihz74b70viqMoQWwTYyi26FDefeFfdVlzB3AC2CEwqkXhwfxr0L
7ivOzr4vLYJbfe60Bg7l3hn3tW7YwZ60CDbU8xp8SIl7J9yXYvmlbrQIDvo1
VddXkbsI91V2/L6I/t8PACpSmlbtU6A7JIL3CdPPf4bQ/ySCqvNlD4//3C4R
Hpl16/lTnv4rEVwmrD+98z//kQiDpSXjvw2mf0uE7FrFzO3/+ZdE2HBvt2nj
ILpNIkiff/5yy3/+KRGSvCdv/TSQbpUIFtbH/m78zz8kwp/pDYHVA+gWiRAj
v2Co7X/+LhHmtcYlvpGjv0mEhqed9az+81eJcOLG2qKK/nSzRNA9lmWz8j9/
kQhvtg758kyWbpIIfia7vJf950aJMH7s074l/egGiVDSbWK02X+ulwi7qgMn
PupL10kEpTufhfn/+bNEyI2ctzS/D/1JIjjsia0y+s8fJUIfS9GOO73pWomQ
omPdWf8/f5AIqwdmnMiSoWskQse3QaOm/+dqiRBX4nrzdi/6vUQwvVZipPWf
qyTC1wD1Z8k96XcSIXzzEbuJ//mtRJhl/LElUZp+IxGqVeYcmPCfX0uEw51j
Bsb3oF9JBM137XGj//NLifA821L7ghRdKRG8ztzOH/GfKyTCCI8BK6O60+US
IX+Fy0el/1wmEbZOLXI/3Y1+IRH695/QQ/4/P5cIaV8OngrtSj+TCDaFNWPl
/vNTidD1ikF6cBe6VCIkHIpc0Oc/P5EIS+z/VAR0pkskQqvRqi3S/7lYIpwd
ceu3fye6SCIYdsgGdP3PhRLh06ttij4i+rFEUHQLX9nRkfT/fiQRNk1cuvv3
P/qhRLhZ3zPiRzv9AL0u3ktv/kvfR5/1+yrr/9AFEiFsqO6f2t90vkR4X/5V
8f0vOk8iaIRcmfm6jb4nETwXb7Qu/0nfxevZc/i+p610Ll6//PLIoh/0Hbxe
+09IHrTQgkSIn7nw3b3vtEQi/PjZrZPwjc6RCAY3JSMyv9LZEuHoNg/D1GY6
SyJUjJuy4cYXOhPvFx8afK820RkSwTn64oVLjXS6RMhasy7vfAOdJhF6DFao
PVdP35YI5qVPu0fU0akSIfro0TEhn+lbuOf5xvOPfaJTcL9dO20+8pG+KRF8
JRmHD9TSyRKh2HNngvgDfQO9tDUeedXQ19Hr68f6XdV0EnpdjZHZ8Z6+hl6b
1qg7VdGJ6DVq4CKHd/RV9HpTtG3DW/oKekUcOmbzhk5ALwvD66tf0/Ho1e9v
ifkr+jJ6Pbr1dfFL+hJ6Hdze37SSvohehuOmzKug49Cr/f1yg3L6Anqlnd05
s4yORa+dK0J1XtDn0UuzX+rk53QMetU9eKH+jI5Gr4u+P8c+paPQy3aWvEop
HYleSj91hz+hz6FX+fXVCiX0WfQ6ucVzYDF9Br0WqZzpV0SfRi/pN5m9CukI
9MoLf9X9MX0KvcRL2zs9osPRa0avYe0P6DD0+nlPr+0+HYpeyfvWfi+gQ9DL
SVfclE+fRK+x36I/59En0Kvmyp2ae/Rx9Ira+P7tXToYvSyHd3mZSx9Dr0EV
o17coYPQ68mJOU8E+ih6BS7c+FhCB6LX/O7+BTl0gESw7iJczM2mj6BXjkdB
dhZ9GL08pnxKy6QPoZdWY4+UDPogejVfHJeUTvuj15V1Jglp9AH02qTgGHeb
9kOvkc8ColNpX/R6ffTqmVu0D3pFGBeGpdD70cu8U9Pxm7QYvfpm9jmaTHuj
18Odmodu0PvQy19jie91ei96GXxy3pdE70GvvzHHPa7RXuiVtiZ5ZyLtiV6u
A59uv0p7oJdG8fctV+jd6PX50AD7BNpdIpjEGWrZxtO70GvdXwury7Qbeimm
7lp5id6JXmXbw5ddpF3R68S4NLM4egd6mVWXz79Au6CX9LlfRrG0M3rdW6Gg
f57ejl7e/WZMj6G3odf0h2u0omkn9Gr13TMxit6KXjdmnZsQSTui19af2aPP
0VvQa+yNNyPO0pvRq3pLh9IZ2gG9IlWU5U/Tm9DL8s1suQjaHr0GnrLtc4re
iF4lS32kw2k79AroFds1jN6AXsZ5dztC6PXo1dm75vdJ2ha9snW7tZ6g16GX
xzfVr8fpteg19eq8hmDaBr2+bNz08RhtjV4Jww+9D6Kt0Mu+4vLro/Qa9Bpx
8kF5IG2JXq8W1j0NoFej16nuvYqP0KvQa7kw4eFheiV69fFcmHeIXoFeD6c4
CQdpC/Q60Hg00582R6/Zl66lHqCXo9efdcU3/Ohl6HVbofmqL70UvXY863fZ
h16CXupBk2L304vR67PxskgxvQi9LnRyjfCmzdBrbebJkH30QvRSdEs5tpc2
Ra8XGs+P7KFN0Ov4px8HvOgF6LXw/KD9nvR8iaDTw0pnjwdtjF53B65y303P
Q699xbt3uNNz0Wv64QinXfQc9PphmOHgRhuh1/W/lRt20obo5Zj6x8aVNkCv
Mc5Kljvo2ej1ftwsCxdaH73OVVsvcab10Gv1uX2m2+lZ6IXHt3nb6JnoVdxP
MHCiZ6BXwMN3M7fS09Frnl8nXUd6Gnp10hs5ZQuti15ZPw01NtM66LX7xoZx
DrQ2ek1x9FPZRGuhV5NK3HB7eip6JbzJU9hIT0GvjadqB9rRk9FLeZmU7AZ6
Enq96jVWZj09Eb3C8+ZL2dKa6LXMe3PndbQGevWedqTdhlZHrwffEtqsaTX0
8rv66LsVPQG99O0bmtbQ49Hrz/DedZb0OPRKrVD/sJoei14uJxe9W0WPQS81
s+0vV9Kj0etT9+AXK2hV9IoVrj+xoFXQy8bzyWNzehR6KUz9VrCcHolezxv7
311Gj0Cv4EtTcpbSyui10NY8fQk9HL2k8A29mB6GXrnPQpMW0UPRa29QaoIZ
rYRe0+aXxS2kFdGrpVNbtCmtgF5JmfJnTeghEkHF0W1a+AJaHr1Ga1qemE8P
Rq+qT55HjelB6HXu/JlD8+iB6LXKKst3Lj0AveQGvd43h5ZDr6Lidg8juj96
HTk8zM2QlkWvuUb6zgZ0P/QSta91nE33Ra+sVLG9Pt0HvdydY2z16N7oNXl8
rtUsWga9Gqvfr5xJ90Kv+HNdls+ge6KX3UqVRdNpafQaLjt3wTS6B3q9fLhx
ji4thV5hfv76OnR39Fqqd2m6Nt1NIsj2bivQ0qK7otf9G58mTqW7oJevo7Ta
FLozeumpjh8zme6EXr/fmIycRIvQ69Ypx6ET6Y4cocJ5WaC8Jv0vR1BRk0mU
06DbcwTnj3mFfdTpvzlC1nnvJmk1+k+O0MNmWt9uE+jfOYL5kO+aovH0rxwh
+tnVJX/G0m05QsMxe5fWMfTPHEHHVPnE19F0a47g270yuUGV/pEjFN85+fSj
Ct2SIyjuNWt5P4r+niNs0pUa+GYk/S1HuPld0KoYQX/NETquea54pkw35wgm
W6a6Fw+nv+QIYapN4Q+H0U05wvt3l9LyhtKNOYLGWdsKQYluyBE8Vyr+zlSk
63OE/P7PFW4r0HU5gmxR0IzkIfTnHMH68HyrRHn6U44QP6fz3suD6Y85wo+O
zHOxg+jaHMEg0y0nciD9IUc4ukvzbcQAuga9Jn3uCJGjq9Gr8bxycH/6PXpd
tjIIkKWr0GvDoPX+/eh36DW8xGd/X/otelUejt3Th36DXqFG99x706/Ra0l7
zQ4Z+hV6ydzutq0X/RK9CpxHb+5JV6KXz3hjO2m6Ar30ajat7UGXo9evc4cs
pegy9EpZGW/RnX6RI/zbLvtwSTf6OXpNeFRn2pV+hl61fr2Mu9BP0StGT82w
M12KXtZtC2d1op+gl3yyk66ILkGvp45BUzqu/b+L0euYapLGP7oIvUzeFo9r
pwvRq1tEs8pf+jF6Cctklf/Qj9Brj8xkxd/0Q/TSyV826Bf9AL2+ebvKttH3
0evatBCZn3QBem3+niLVSuejl0ri884/6Dz0emff2v6dvodeZ5QH//pG30Wv
FZU6LV/p3ByhXjZk1Zdm+g56FZp51H2hBfQ6JHX6QxMtQS+jOxnvGukc9Orw
fPmygc5Gr4ypf1/U01no5dakVFpHZ6LXxMuzCj/TGejVYGtz/xOdjl6XFL3v
fqTT0Gv986icWvo2eg07JqR/oFPRq2J+VUoNfQu9Qjp3vl5Np6DXkqyRV97T
N9Gr1y6ji1V0Mnrla9rFvKNvoNf+z35n39LX0WtWbFz4GzoJvdqs8k+8pq+h
181BH4++ohPRa3uJ1OGX9FX0Gn9krF8lfQW9Phgt8K6gE9Arpn2zZzkdj15W
t4+4ldGX0WuwyxXnF/Ql9Cod/9jxOX0RvYJqGuyf0XHotSCy9/qn9AX06rpK
w7qUjkUvQXbxqif0efTyerR9eQkdg17aB4IXFdPR6PVV78aCIjoKvRLbnswp
pCPRyyH5m/5j+hx6jdoqN+MRfRa93qpO1X5In0Gv02/NJz2gT6OXRYSb2n06
Ar1kl4eNKaBPoddjmdsj8+lw9DqYXzY0jw5DL0Nxm/w9OhS9/k0bMuAuHYJe
6d+n9c2lT+YI5TsTLXveoU+g18RNXt0E+jh61SufFUnoYPS6WJn1J5s+hl7r
Q163ZtFB6DV00b+vmfRR9CqXGt6YQQei18k7+p/S6QD0Wuy1rjqNPoJePbX2
v7lNH0avvKaYilT6EHrtv5z77BZ9EL1mrq8uTqH90eunYtdHN+kD6JX8XCU/
mfZDr23H5t65Qfui17gF9lnXaR/0qul88HYSvR+9orMuJV+jxei1Ztf9xETa
G70GTfx8+Sq9D71KP0tfuELvRa+jseOjEug96DXf2vR0PO2FXl0Gbw29THui
l6QkMPgS7YFenkcSAy7Su9FLa06Rfxztjl5f25v2X6B3odfV2333xtJu6LXJ
ZeLu8/RO9Bo1YalrDO2KXm9qXLZF0zvQKyLyxOYo2gW9zFfdtIukndGrX/9n
a8/R29Hr0aMWy7P0NvTyPzBwxRnaCb0M9bWXnqa3old724qFEbQjeqUluxuf
oregl+vWU4bh9Gb00hydPiuMdkCvurcVuqH0JvSKi/g9JYS2Ry/b5YqaJ+mN
6KXUe+b4E7RdjpBXlm+lepzegF4nxXuVg+n16LVoeqTiMdoWvaRbcgYF0evQ
617iW9mj9Fr0Em8S9Q6kbdBrxogRPQJoa/RqrTTocoS2Qq/kkPX/DtFr0Mtp
ke+vg7Qleo3tcaHFn16NXjV37n05QK9CryivD3V+9Er0stTqXutLr0CvgV9G
V/nQFuj15LLxq/20OXoFrncoE9PL0ctY6XCpN70Mvbq8iC/cRy9Fr5xjD+/v
pZfkCMkeC+rv7qEXo9fULjISL3oRejVnqWV40mbodWWX2S0PeiF62U/cdn03
bYpeI+uCrrjTJuj1Ojbp4i56AXqdsi6JcaPno5f54K9nd9LG6NX3iewpV3oe
ej08MvnkDnoueh2YszzIhZ6DXgb/XA8700bo9fd2iN922hC9brvc8t5GG6CX
64QXnk70bPTS+NDqtpXWR6/PkYNdHGk99Ipbpbt1Cz0Lvdb1X71pMz0TvRQf
e6x3oGeg14sDp6030dPR64R+5ip7ehp6mf16uXwjrYtePW7+XWRH66DXva1D
TTbQ2ujlPVpv7npaC72mv7OZbUtPRa8fEd4z1tFT0OvG8mjttfRk9Nra+84k
G3oSeo0pqFKzpieiV7W481grWhO9IqePGrWG1kCv1S1GwyxpdfQaeM1uyGpa
Db1KNh0YsIqegF4BIy72XUmPR695L/N7rqDHoVfn0I/dLOix6JW9qEcnc3oM
eu3uMe7vMno0ek3NXfBzKa2KXl+8tnxbQqugV4JWQONiehR62X+58mkRPRK9
RsQ/rjajR+QIUa/WN75ZSCujV7hSn0pTejh6LX+h8dyEHoZefYIXlyygh6LX
gwXOj+bTSuh1oMvxfGNaEb1mZ9+4M49WQK8/u0qz5tJD0Ct14vfbc2h59NpR
J3fTiB6MXuoXpl4zpAeh1ydri3gDeiB6XRi868JsegB6rX0SFqVPy6GXQsDt
03p0f/R6Mac8dBYti17H/7UFz6T7odfCtCGBM+i+6CW1Y/rB6XQf9Lo7YY3P
NLp3jhC474PXXl1aBr2mRZ3drUP3Qq8fq7Jdteme6HW9/5ttWrQ0ejk+/rd5
Kt0Dvcb4D984hZZCr/f6s9dNpruj17lf69ZMoruh16qb+1dMpLui1wCn80s1
6S7oVTz67kINujN6HXlXbaxOd0Kveae7GqnRIvTqZK6qN4HuyBaSs3rPmzae
/pct/HMvsJ86jm7PFkym7D+oOZb+my2ENU2/PH4M/SdbeB/fcl91NP07W9DY
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
x5mblOjfmULVXxXr9Yr0r0xBPe3NXmsFui1T8HA9FblqCP0zU8jTWCZZLk+3
Zgqydb3eLRpM/8gUrOPyRCaD6JZM4fI67xFzB9LfM4UWxWmGswfQ3zKF2WXf
1s+Qo79mCoEnrvpq96ebM4VyM/sLk2TpL5mCirRynlo/uilT2H6v4sOYvnRj
ppDpfbL7qD50Q6YgNcNszLDedH2msLy1+/whMnRdphB1Q3AY0Iv+nCnUb/U8
3Lcn/SlT0Bk7NaGnNP0xU/CpbnzYrQddmykURV6qF0nRHzIFBUtbmb/d6Br0
Gqio/rMrXY1eJc/MvnWh36NXQNC2xs50FXr9759Pd6Lfodf/fp1aRL9Fr//9
eLXjyv/7DXr9749b/+jX6DVVs//zdvoVen35NLnkL/0Sva6cX/7oD12JXvZW
O/N/0xXoNWJQ6J1fdDl6vSq+ldVGl6HXqcMvbv+kX6DXcqOfya30c/Tq0z74
2g/6GXo9TNWNb6Gfotf//nvM73Qpev3v4zK/0U/Q62/16dNf6RL0un0uM7SZ
LkavHStfBX+hi9BLXbY9oIkuRK/PD4cebKQfo9cFPz2fBvoReq3VW7u3nn6I
Xopt3rvr6Afo9eJGtOtn+j56HXe8s+0TXYBeC1Xfb/5I56NXj7edN9bSeeh1
99SodR/oe+i1b9mcNTX0XfSaLrNxRTWdi14/8g4sfU/fQa/r3hcXVtECem2d
VmD8jpZkClZjvn80fEvnoNf7qz303tDZ6HXOfty013QWeq1WNpn6is5ErwGV
WzRf0hnoVXwyYHwlnY5eAWZXVSvoNPSaJ1WoXE7fRq9OdxoVy+hU9Mr27DP4
BX0LvXb/7xuQTkGvKU2Lez+jb6JX0yXnHk/pZPRKsD3epZS+gV4bFZP/ldDX
0Uv5eemvYjoJvV4FfW8poq+hV/j8Ac2FdCJ6LeusVf+YvopevbMsah/RV9Dr
gduuqod0Anr5aYa/ekDHo5f+59tl9+nL6PXnfHlpAX0JvVKtfhXm0xfRy2WQ
woM8Og691Eum37tHX0CvT4fXSO7SsegVa7QnI5c+j1427Wdv3aFj0EvhdvZ1
gY5Gr+fOb65I6Cj0Ch7fcTGHjkSvhTXDz2fT59BLKnL2uSz6LHrlrrQ9lUmf
Qa99sj4nM+jT6DXt0fmgdDoCvVr87h5Oo0+hV5Jejd9tOhy9HNu6ilPpMPQa
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
9liiHP0nXVhQUZV0uT/9O10IDTlTEitL/0oXqhZbfI3sR7elC+q9+vY/3Zf+
mS7szr8/ObQP3Zou3Nvvszy4N/0jXeg3a+bOABm6JV2wavsR4t+L/p4uXL6Z
dGt/T/pbutCybfOLPdL013Rh9vhRP9170M3pQsCHV4Ndpegv6UJZdJjutu50
U7owymrJ6s3d6MZ0Yfvgnp52XemGdCGz9O7ptV3o+nRBKmhvpmVnui5dWL5A
55VFJ/pzuhDZ9evfJSL6U7pQJ0kYurAj/v/9MV3Q9rLTM/5H16YLPtrD1hq2
0x/ShaKvZd6z/tI16JV4PFr3D12dLmx0ML0z5Tf9Hr1GdXuv8YuuQq83OZ3H
t9Hv0Ov07lGqP+m36GUxeY5yK/0Gvfo12Cn+oF+j1+O4A4Na6FfodXDtRdnv
9Ev0MhxSIPONrkSvf6Ufpb7SFeiVHtijSzNdjl47543710SXoZemyORXI/0C
verTt7Q00M/R66JrwJd6+hl62apfraujn6LX0I+PP3ymS9GrPLrx3Sf6CXqd
tOzz6iNdgl6LB2iW1dLF6cKynkWLSz/QReiVd9C5sIYuRC+xwf+xdJ9hIb59
GMeFikShqJCkqCSjQUolUsgohDJCCWkYaZCG0FCoKJSUVGS0J7pVRkUhJCTJ
KGQUQuE5n+N/vvy8/t7jdx3HfV/XkdvN9B30MuzKLHtFV6FXZ86Da010JXpl
uXYUvqQr0MtVTSa3kb6NXuqvdDJe0LfQ6/XJpekN9E30Sli6M+U5fQO97KRi
Ep/R5eg1pCI/7ildhl73A5/E1NOl6BVu+CvyCX0dvSx+yEfU0QJ69cqYFvKY
LkGvkk12QY/oa+jlM3q330P6KnrpNsT51NJX0OvLsaseD+hi9Lqw6IX7fboI
vZwk/jnfowvRS7l8pFMNXYBeL3xN1lXT+eh1fMraVXfpPPRa8jVg+R06F72k
//+BCZ2DXlUOZQsq6Wz02q/4ek4FnYVeM570NrtNZ6LXnyOqJrfoDPQqmDfb
4CZ9Gb22izrp3aAvodeEkgOTyumL6PXeK02zjL6AXmcnV4wtpdPRy/5jq/J1
+jx6DU+RUBToc+hVt2acfAmdhl6R8pYy1+hU9FpQu0XqKp2CXn3DwyWu0GfR
q3z2JdFiOhm9/HvU9Ciiz6CXQdHnrgI6Cb1+bJfuzKcT0Stz/KT2PPp0oWDs
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
vVff0LpAJ6CXMPStejp9Cr123RdTPU/Ho5de2Filc3QcerXPshiWRp9Er4t/
Nw5JpU+g18aCkIEp9HH0Utl2XvIsHYtejeOqxJPpGPQ68eZDzzP0MfRamiD5
N5E+mi/oDlwx/tdpOhq97gxa8C2BjkKvA3dcP5+iI9Fr5v5D7+PpI+j11zjj
TRx9GL0Kf917eZI+hF47sr8+O0FHoNdEl0F1x+lw9PowRvtBLH0QvVJeLr4b
Q4eh17oTO24fo0PRa8SSo2VH6RD0etI/71o0HYxe0bceF0bRB9BrYUBnTiS9
H70kDOQyjtD70OvGt6nph+kg9Aq4tCLlEL0XvQw3+iRG0IHo1TnqZFw4HZAv
KGc/K445SPujl+vR55FhtB96qS/8Ex5K70GvN30UQ0JoX/Q6XWoUFEzvRi+7
3Wv8DtC70GuInr/PftoHvR58Pu2xj/ZGr/Bz192DaC/0slj/ynkv7YlevUf0
cgqkd6JXyePR6wJoD/TyOTxrlT+9A7105zou96O3o9fXXvsX76G3odeFqykL
fOmt6OXkeWvObtodvUZPapm1i3ZDrxfv+5j40K7odTxZ3cCbdkGvpavn6nnR
W9BLWs55kiftjF5V98M0d9Kb0Wt/2IWxHvQm9DI1u6u8g96IXn/+to3YTjuh
V0HBAPlt9Ab02rFtgsxW2hG9JmguknKnHdDr/Rt3CTd6PXqlJBwRdaXXodfa
FVk9XOi16DV8cG2XM22PXnV3On5sptegV9R+mfZN9Gr0WmCi27aRXoVefX8v
bXGiV6LXjeydzRtoO/Tyd4l54UjbopfB2IJ6B3oFev14+eTheno5emWd+FWz
jl6GXi5LFKrW0jbopTbA4KY9vRS9Xt+yu76GXoJeCQG7r6ymF6OXrUF8/ira
Ol+QGvL9atZK2gq97l96cdGOXoReBzf+S7OlF6KXubJS8gp6AXr1em6SsJye
j17Xjq49sYy2RC/vhYFHbeh56KXb98zhpfRc9PpSWha2hJ6DXum7X+9fTFug
l5OeaKA1bY5eyl9Ufa3o2ejVcG621yLaDL1i1zttX0jPQq8lI4JdF9Az0Uuq
Lm3TfNoUvSoPVzhY0jPQa//c92vm0SboNaN3P7u5tDF6dV8dZzOHNsoXuvM9
La0s6OnotX2Si6U5bYheWh/CzWfTBujVmnzJ1Iyehl5nV9dMn0Xro5e93Jep
M+mp6DXsgbSOKT0FverCJk2YQeuhV6SZtYYJrYte8/9tUzWmddCrT2GUkhGt
jV7l23KGTacno5ef5qMhhvQk9Jr29vtAA3oiev1IGNJ/Gj0BvTJXTOmjT2uh
15bBy3tNpcejl9pdr796tCZ6Ne8//kuXHodep0yKvunQGui14vfTz9q0OnrJ
5nS9n0yrodc9l+FvJ9Fj0Sts7PSmifQY9DJvWvV8Aq2KXj1P7qnTolXQ6+qS
hAfj6dHo5TVAuKtJK6OXzu2Xt8fRo9Drc4BIuQathF7nDZRL1OmR6LXhu2mR
Gq2IXqMur88dS49Ar+cbgzLG0MPRK1b5bLoqPQy9Fj+/kaJCK6DXgGNvE0fT
8uhVsVA8XpmWQ699fdViR9FD0cukzCJKiR6CXl27N0WMpGXRK18vNESRlkGv
bV/OB42gB6PX+PNVfsPpQejVuv6jzzB6IHolj+i/U4GWRq81deO3ytNS+UKr
wpEFW+ToAej1eK6b01C6P3od6X143RBaEr0sr2WskqX7oVcfr/vLZWgJ9Cqb
1L54MN0XvfZ8GLRwEN0HvfTPas8dSIuj1/fVS8ykaTH0ypDzMJGiRdHL+cFR
gwF0b/QaezBPrz/dC71emdVNkqR7olf8v07NfrQIeq0olFOToHugl8x2/dF9
6X95QmqNpq1iH/pvntAR+tZHXpz+kycYzz59UkaM7s4TwkRsr0iJ0l15Qt2V
wQ0SvenfeYKy190/or3oX3mCq/YBRZGe9M88oeiTiXF3D7ozTxA7/3tN57+U
//wjT7B2zPFv/0t/zxNOKbkmtv2hv+UJrc/GlrZ00x15gm5M06vmLro9Twiw
Ptmr8Tf9NU+423+pytNf9Jc8Qb5igNmjn/TnPMEx6LbjvU76U56QaRy4v+oH
3ZYndP82SL35nf6YJ1jkfb91/Rv9IU+I3nq55UoH/T5PeKm5qW9BO92aJ2i2
KGtkf6Vb8gSvM8/nXvpCv8sTylcfcz73mX6bJ0gpLDqY/Il+kyfYPep7MaGN
fo1eh8vunvhIN6PXPN9PRz/Qr9BLfIrUkfd0E3qVfplwsJV+mSc89j2/6EAL
3Yhe+g5bA9/RL9Dr24hI37d0A3pdrsvyekM/Ry/nI7XbX9PP0GvMvG+uzfRT
9GrqLbv5FV2PXnHXdB2b6CfotdzLxv4lXYdegyd72jXSj9Gr+kOMzQv6EXqF
ni2waqAfopfZmnrL53QtevWQ/23+jH6AXsUPFGY+pe+jl+dBA6N6+h56TZ69
Uv8JXYNebf9269TR1eh1rjB+wmP6Lno5bL+m8Yi+kyeUjRzfqPqQrkKvZ2//
KdXSleh17LTS8Ad0BXpZ2c4Yep++jV6SMusG3aNvodftu4H9a+ib6LX3wJk+
1fQN9DKaUd7rLl2OXr9/v/5bRZehV26O6O9KuhS93F3HfK+gr6OXppr5l9u0
gF7vmpw+3KJL0CvpZPDbm/Q19Fq19FzTDfoqeslLVT4vp6+g18Pb7+vK6GL0
OhTYr7aULkKveYaa1dfpQvQS+2FZIdAF6HX9skt5CZ2PXnjcl1yj89Br6ujL
RVfpXPTq+P+GkXQOel069iWjmM5Gr82LBl4oorPQS1VicmohnYleL8uskwro
DPSK890en09fRq9lU6Jj8+hL6DXoa05ULn0Rve6efxSRQ19ArxCHHyHZdDp6
zVIcui+LPo9e/+qm+GfS59Cr+MjyXRl0GnrtnOe98zKdil6TRE9svUSnoFfb
taItF+mz6JXm9czpAp2MXusnd69Lp8+gl+LH4avP00no9fTs9BXn6ET0Orpm
9ZI0+jR6LZL3W5hKJ6CXZG3C3BT6FHrdOiiYnaXj84SMwNlNJsl0HHpN79HT
8Ax9Er1+FSpPSaJPoFfO9pmTE+nj6OU23mH8aToWvca9C1JLoGPQ6+3ps6NP
0cfQK9H2pmI8fRS9Vsm8k4+jo9FLrlpc9iQdhV61B9SkT9CR6BUxY06/4/QR
9JrbtUkslj6MXqK5oSIx9CH0ElzTu4/SEei1W+1OZzQdjl5TXn1sj6IPolf7
yf6fIukw9Lq0VKv1CB2KXpukFr4+TIfkCfEqFW6Nh+hg9GoMPPw0gj6AXicN
Mx+F0/vRy+bH/XsH6X3oNTCjvSqMDkKvu5sG3wql96JX8Gid0hA6EL1mNiy5
GkwHoNffYx4FB2h/9CpadCx7P+2HXh4S+Zf20XvQa2J53bkg2he9Pvr+TN5L
70av1CnypwPpXei17qv+yQDaB70U022P+dPe6FXvsOuIH+2FXtGKcQf30J7o
tfDJlQO+9E706hfZELib9kCvm/P++u6id6BXgOhIbx96O3pNLzHe4U1vQ6+f
XvZuXvRW9MqeHLDZk3ZHL7ePiY47aTf00kgptfegXdHrzZpmux20C3qdlu+9
bDu9Bb1W1qpYb6Od0WtouNn8rfRm9Howe4OFO70JvSJ6HJjpRm9ErzlFqUau
tBN69d5xW9+F3oBeJeNbdbbQjui1613fic60A3rpJWqM20yvR6+vtvPGbKLX
oddFmS2jNtJr0Wtj9cHhTrQ9eo0Ovjh0A70GvRpnVA9ypFej14muT/0d6FXo
tTRXqu96eiV6SbtN7L2OtkOvO2pW/+xp2zwh9MCrrb/X0CvQyzQu8vtqejl6
/V2a/WUVvQy9CqUeflhJ26DXjopvb+3opeg1ca/sK1t6CXp9MNRrWEEvRq+U
HzZPltPW6LU2w7N2GW2FXiM2x1bb0IvQ68nowoql9EL0imqoL19CL0CvhTG/
SxbT89FLwmpYsTVtiV43JAzzrOh56OVfvjJzET0XvQz3+F5YSM9Br84pp1IX
0BbolfX1WtJ82hy9XNMb4y3p2eil7tjj+DzaDL1eK46KnkvPQq/TT2YcmkPP
RC+7yHWhFrQpeg2x3LvPnJ6BXvdFk/1n0yboFV5SvsuMNkYvC+83O2fRRujV
S1ts20x6OnqVfBzjYkobopdPivnGGbQBeunab1xvQk9Dr6/yIauNaX30ulB7
boURPRW9nMIrl0ynp6CXsvmHhYa0Hnq96CE5z4DWRa/jRZqzp9E66LVkx/wZ
+rQ2eklruRpOpSejV9W7iClT6EnotT/x8mQ9eiJ6zbC7N16XnoBef2S+qunQ
WuhVUD1QRZsej17bgyePnExrotcE08UKk+hxeYLn+67tshNpDfQ6mxstPYFW
R6+1brn9tGg19Bqu/lhsPD0Wvepe/RDRpMegV2Tc0D8atCp6LbCZ+lOdVkGv
vtIrOtTo0ehVXuH9aSytjF7+e0+0jqFHoZfB9OLXqrQSev348axRhR6JXlkZ
3U9H04ro5bJ5xGNlegR6qakY3R9FD0ev5obVd5ToYeiVEON3ayStgF62VqdL
FWl59JLtd/3qCFoOve6XNxUMp4fmCQ4H9/TMGUYPQS9zDIAKtCx69WyfeV6e
lkGva+kOZ+Xowejl7bjv9FB6EHrpjEw5OYQeiF5fntw8JktLo1d65LsjMrQU
em2w7BM+mB6AXspi6sGD6P7o1VAyZ+9AWhK9Yr0375Gm+6HXYu0wbylaAr2k
2tJ3DKD7oldlyh23/nQf9Npn37ZZkhZHrxkKAzb0o8XQq7tWa60ELYpe+eEL
V/ale6PXdnP3ZX3oXuilJXLEWpzuiV6tRZnzxWgR9Ere8cBClO6BXvZaHTN7
0/9yhYBhLYONe9F/c4W7jxN1pvWk/+QK8pF2S3VF6O5cwWG+7M6JPeiuXCGj
T82xcf/O/uffuUJ3WXD+mL/0r1zBws/0yag/9M9cIXpa98/h3XRnrvDye668
XBf9I1fQzHSbNvg3/T1X8NyibjfgF/0tVygb27yr70+6I1eQao6L691Jt+cK
dqdsrv77Tn/NFVJXSL/4/Y3+kit0yFT+/d5Bf84VjO/tHfm1nf6UK4SGTTf5
+JVuyxUez+60f/eF/pgrKPfMDHj1mf6QK7he3ZzU8Il+nysUeamUPWmjW3MF
MZ0XzbUf6ZZcwepzTO+aD/S7XCH+vJVq5Xv6ba7Q6thv9o1W+k2uoDvqxgah
hX6NXs/3HCh+RzejV8zUtLy39Cv0Wtx+O/MN3YReAy60XnhNv0SvCkeJtGa6
Eb2CRo4784p+gV4m9fNONdEN6NUVueX4S/o5euVZhkc30s/Qa5vYpUMv6Kfo
NV6oDm2g69Grxfvzvuf0E/RK1pYOeEbXodeatom7n9KP0Ush1cqznn6EXo/s
t217Qj/MFYyOKES51NG16GX5MHvjY/oBeolHPFz/iL6PXmXm31c/pO+h1x6R
Iba1dA166RfrLX1AV6PX9x3LFt2n76JXhpbXvHv0HfRybomdXUNXodeYpMIZ
1XQler2ye2p4l65Ar3jZril36NvotbxmmHYVfQu9ZEIMtSrpm+hVY7pKvYK+
gV6h3b4qt+ly9DLLOzXyFl2GXiLuJQo36VL0uqL+UvYGfR29PJt7DCynBfTS
jh8lWUaXoNcnG1PxUvoaep2TXt/zOn0VvRwr9/4poa+gl1JQ8s9rdDF6PZt+
o+MqXYRexzrffLpCF6KXdabY+2K6AL36O499U0Tno9dtFYuXhXQeegW92Pis
gM5FL+P/HxBB56DXb6vz9/PobPTK61d1J5fOQq+tNz7cyqEz0UvTT7Ism85A
r3dTx1/Loi+j15n2+YWZ9CX0Wn3BNSeDvohe8hsOXb5MX0CvRyMzzl+i09Hr
cP29sxfp8+g1L+rr6Qv0OfQSmz8oLp1OQ69SMe2Y83QqevkKiyPP0SnoNdVn
R3gafTZXGPdN+2hwKp2MXpfbcvem0GfQa3Pq4z1n6ST0GrO20zuZTkSvJgU5
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
x+j198me+kr6EXoVRiY8rKAfotcOS6HmNl2LXhPFmipv0Q/Q60OJyM2b9P0s
4XKKt/L1G/Q99FqrPfNKOV2DXiPa1ueX0dXo9SQlKKuUvoteUfZnL16n76DX
QoWbaQJdhV4SD9+eKaEr0etGuHjCNboCvQLM1U5cpW+jl6HInKNX6Fvo1Vm0
6XAxfRO9snaEhhXRN9DLVSt9fyFdjl7qLVUBBXQZer1O/Lg7ny5Fr9N2/b3y
6OvoZSertT2XFtBrSM0C1xy6BL0eBLttyqavoVe46WGHLPoqell0Z6zJpK+g
V6+8+7YZdDF6lbi1L71MF6GXj/pgq0t0IXrpNmtbXqQL0Otr3BLzC3Q+el2w
8TBNp/PQy0n62PTzdC56KVfmTT1H56DXi7112ml0Nnodn/5TK5XOQq8lnXIa
KXQmekln6quepTPQq2qzrVIyfRm99qvsGnaGvoRepi9ODkmiL6LXn5grAxPp
C+hVgIHtNJ2OXtv7/RVPoM+j14Qbir1O0efQ6/0e479xdBp6nZ1q/+sknYpe
a9v9v52gU9Br+IXEz8fps+hV51j6PpZORq+okc1vYugz6LWgvlfTMTopS4jr
G6Xy/CidiF7llmZ10fRp9PIX2/Agik5ALwNh/91I+hR6/fBOvX2EjkevLO3b
ZYfpOPRyaWu5dog+iV5qqX2LIugT6NVsr5EbTh9HrwSFeRkH6Vj0sn3onB5G
x6CXbMTBlFD6GHrdN7+YGEIfRa+DItVxwXQ0epkXf4o5QEehVy8Pqaj9dCR6
XdOaGLGPPoJe3i2LQoLow+ilk7Q1aC99CL2+2EX6BdIRWUJIumy2TwAdjl4b
amo9/OmD6KUc8s3djw5DrwZT2S176FD0iu3WdfKlQ9BrSZ7Nut10MHpJuXuu
2kUfQK9K9djlPvR+9NrXXLDYm96HXjPi6xd40UHo1W3ze44nvRe98qWHme2k
A9Fre6WBiQcdgF5aQSsNdtD+6NU63VdvO+2HXsmd8ZO20XvQyz7zmuZW2he9
hjk3jnWnd6PXY5Ueo93oXegV+UJJ0ZX2Qa/5sTPkXWhv9OpjvU5mC+2FXuX9
9ko5057o5XfjjMRmeid6TfMrF91Ee6DX96lvemykd6BXZrto9wZ6O3ptuTCm
05Hehl5jN5i3O9Bb0at55Ma29bQ7ep2qD25ZR7uh14qoc81raVf0kp1f+cKe
dkGve2If6tfQW9ArTOj3aDXtjF6zfTTvraI3o1dPnflVK+lN6HW1zeWmHb0R
vbxSI67b0k7opbP28pUV9Ab0+qxwL3857Yhe5x9+yVpGO6CXY8TASzb0evQa
ZTH53FJ6HXo9F1mcvIRei14xxdsTFtP26LXYI/qENb0mS9g5YELuUSt6NXpV
tDw6vIhehV77kn6ELaRXopfJyqEHFtB26NUlOzVwPm2LXnk1y30t6RXotS3E
22sevRy9xs88sX0uvQy9WrqLXOfQNuiVnPdskwW9FL3WuHc7mNNL0EtBY4T9
bHoxej1unm5nRluj15H41TazaCv0slzmZzWTXoRe4gNPW5rSC9GrrFIwn0Ev
QK89QU2mJvR89NI36mlkTFui1/dOZX0jel6WsD4jc6bOdHouejk7O0wwpOeg
1xjVfRoGtAV6vXpxVnUabY5e8bE3lfTp2ei13PrdsKm0GXrJSPYZOoWehV41
N9QG6dEz0SvUb05/XdoUvWbrb+6jQ89AL5GO0F7atAl6XbmQ/ncSbYxenhvu
/JpIG6GXtlLbtwn0dPT6VN//ixZtiF7norQ+jKcN0Mtx/sK3mvQ09FISd28a
R+uj1zPh8HMNeip6xfhk1qnTU9DLWufBAzVaD736f2q/O5bWRa/bqYMrxtA6
6BW0VqdcldZGL+NhS0tU6Mno9fuhR9FoehJ65UUcy1WmJ6LXVov8jFH0BPTS
7PkkXYnWQq93xT9TRtLj0euMh3ySIq2JXqsnTIsfQY9DL/lW29jhtAZ6PUra
FTWMVkevwyvjIhRoNfSaN+RqiDw9Fr3E7zUEydFj0Ks05K/fUFoVvXxnjtw1
hFZBr6l/jHfK0qPR61ue/VYZWhm9LrsHbBlMj0KvzRpJToNoJfQa87p03UB6
JHo1xTevkqYV0StuWe8VUvQI9Fo+UHXJAHp4lrBocJXZwv70MPSqDtowV5JW
QK8QowNm/Wh59DL7mWoiQcuhV4+s2wZ96aHoVezcqteHHoJenqoSk8VpWfSa
3KgxXoyWQa+22HlqovRg9Eqz3jK6Nz0IvRwkwxV70QPRa+TNi/I9aWn0eupX
LSNCS6HXMf3PUj3oAehl1SHV71/if+6PXpIXJ4r9pSXR6/YGK5E/dD/02qu0
rbuLlkAvo6eRnb/pvuj1Kyq7/RfdB71y5z9s+0mLo5e7+PeWTloMvcZdl339
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
vZovqJt0wZrUa/N4H71OWIN6Pfa8r94Bq1Mvze4xpXZYjXoV7NBe2AarUq/F
L07NaYVVqFeiXvn0FliZeokV8fA3w0rU68Jifa4mWJF6TYg/O/gKVqBePsJP
el7C8tSr/wz/xxewHPXa92fDm+ewLPVqczn//BksQ70s22ofPYWlqdczc6GS
J7AU9Vr7eHP+Y1iSehWrX0p7BEtQr2U5DXHlsDj1Sv3/CxKwGPWSvLw15AEs
Sr0i+a6eug+LUK/JPs1H78HC1Mv/+2zXu7AQ9Rqy3+FwBxZMYwYHG+Osb8MC
1OuTYZvpLZifetncn7c+D+ajXi+Vdq/JhXmpl2FS0vJsmId6sZmdizJhbuql
GrJQKh3mol7ZY06iqfBYKuOVcc8QSIZHUllczKev3Dfh4VS2Ytq2JX8S4KFU
9uxsjev3OHgwle0Z0+J8ioUHUtmox60fb2Pg/lQW+VV2eX003JfKFOxjPKqi
4N5UVtE0pbA0Eu5JZds3nfpdEAF3p7KfjwbUMsPhrlQWouHkfSMM7kxl0rfe
3rsSCneksuJFm0bPB8PtqcwsoUwzIAhuS2Xdoqp+3oFwayo7dT79oVsA3JLK
Zv1/AWp/uDmV5XmH6+3wg5tSmcGP8YHmvnBjKmvbe/SxoQ/ckMq8Wrv5tL3h
+lQmtMXWSNULrktlqU9fhCh4wrWpTEt33TNpD7gmlb0uKhKc5Q5XpzLXpQqm
U93gKuqVEn9xgitcSb0kpr/8ux+uoF6XAkX698Fl1GvS8JauvTCjXn4HrrTu
gUup12BbU8NuuIR6HbAQf7oLLqZeHY+3P9wJF1Ev69XX7+yAC6nXi5zW7O1w
AfVaLy2VtA3Op16ll3fFbIU51GsFXRBtgXOoV6ZPR6A5nEW9pPsWnNgMZ1Cv
6N17D2+C06jX1Ndp+zbCKdQr0Kh75wY4iXqN3F9saQgnUq/Dyw4Yr4cTqNeX
pBzddXAc9bIT61NbC8emsqmvQ5Yt1YFjqNfGf+4LtOBo6lXhXjB7DRxFvdQ7
f01bDUdSr7xtK/lWwRHUS+6Z15gqHE694rSLB1TgMOo1o+BvtzIcSr1CFq75
oAQHUy/ua76vFeGgVDbiJcieKcCB1Ov7qXEV8nAA9XL8pVssB/tTrxanAI4s
7Ee9zFsepcjAvtTryaaJ16VhH+qlXW5wSQr2pl53VIPPScJe1GtJxtOTErAn
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
sCj18lKv/JgDi1Cv79kTm7Ng4WSWsmceHRFgIerVEhlcmQYLUi8zvpqSFFiA
ej05PuVWEsxPvbS/m6QnwnzUq9A+PD4B5qVeSxpfXI6DeajXTcPpobEwN/US
v2/hHwNzUa9wpSivaHgsiUVOTHrtGgWPJLHFvjNn7YmEh5NY+UCw9fYIeCiJ
bd8/dm1zODyYxPo/HHq3PgweSGLBVp8kNUPh/iQm/dzKTiUY7ktid9fV3JAP
gnuT2OYSrY9SgXBPEvuifEtmZgDcncROpcs6TvGHu5KYmFRM6ng/uDOJ/a+q
u49rsn7/Pr6KiopslRUV2TQyMrJlZGRky8jIzJaRkaFORUVFnYiAiDhgwLg/
d3+/ndxkZJarqMjMzoxvkZGRkfE1slVUVFZUVFRW1+f74PX747r+ez6uH9+F
B7Bzn89xvI+I69xv/tiBh9qVjHPLp41sx5+3K59Wjq7/ahuOtitFf655erAI
H29Xztv88Q9HtuLBdmXX1wu0b2/Bx9qV2UsPbn5tMx5oV4723/z8C5vw0XZl
431Pjj61Afe3K6cfTJjZuh4faVeCqVKRZy3ua1du3nvay01r8OF2pffqoj/N
q3Bvu5IT+Pa27SvxoXbl5AVLd2xejnvaFXvt+wfWLMNvinqp7lYtXYK7Rb0K
u+7MfAwfFPX6/rrKeY9iRdRrZbhb9wg+IOp17IIzbnkY7xf1erD6nusfwvtE
vd76w3LVg7hL1Gv2hkOXPoBfFPXqjJ6jvh93tium6zLvP+M+/JyoV+tbTScz
cETUK/62vp/n4mdEvZqfOf+bdLxH1Ov0KQ99OgfvFvUqdTo+1OEOUa9fYo++
MxvvEvVaW3rJwTTcLuoV/TGraxZuFfVatNL3TCqW25UN7x79uH0mDol6pc+7
wp+CA6Je+15dap2BfaJeN94o12ixR9TrifbPdkzHLlGvSfFXFSRjh6iXoz5n
3TRsE/U659/HDUlYEvWqyP960VTcJOo19mXS/Ym4QdRr06Pr7pqC60S9vux9
6lYNtoh6Zeu+v2ESrhb1+uD56VMTsFnU695rjAmX4QpRL8X37AXx2CTqNXPC
L7EX4zJRr6fLU/69EJeKeiX+uvXX83GJqJcv96XvzsPFol7nD459di4uFPWq
eWDWwDm4QNTrn4PbD5+F80W9ts58tftMbBT1+u7Jf/adjjeKeq24QvfsaThP
1GtAKn/iFLxO1OuBmDeC/9rHnSvq9WZRjONvvFrUK+27u+v+wjmiXs8vrTH9
gVeIel17pKfwd2wQ9ZLvPnvDr3ipqNfFL9+38hecLerVmNz46E94sahXjHz4
gR9xlqhXyYXqud/jRe3K4p+qH0z7DmeKeq350zbjG7xQ1Ov4hv6kr7Fe1Ovh
zy668ku8QNTrncxHLvoCzxf1mtPjOeczPE/Uq+u2Y6d8ijNEvW7Ye/nYIJ4r
6rVrypIfjuF0Ua8EV2hoAM9pV+6xnxU9dhTrRL3O2jH5/X48W9TLNLLirSM4
TdTr95Xtr/bhWaJeGz768vnDOFXUa2jeNbt78UxRr8UHcuVDOEXU6/0bd7t6
8AxRr4zHv2t4E2tFvQ7EX1/Zjae3Kyk3N2zcdhAni3o99e/eTQqeJuo1ZctP
qw7gJFEvz1czsvfjqaJe5y0uWLgPJ4p6Vb/7QkYXniLqdVL3++wXsUbUa0tn
6s2deJKo1zfXlFz3HE4Q9TL4X5kcwZe1K5M/+l8AAo4X9bq/YvaEPfhiUa/u
X3fG7MYTRb1mrX39zyfwBaJezw6e+tPjWC3qlaRP/7oNTxD1Cr1R9UkLjhP1
uuiWtz4I47NFvep3xx4K4lhRr1MnzVP8+AxRr23W+he9OEbU68eYd/e48ami
XquLJ7Q5sUrUa/C7B7x2/E+bsuGhZdZmKz7Zppx+6MiRqmb8Z5sS1M2dWNqI
x9qUlJdefji/Hv/WpvRef707txaPtik57fLA0hr8c5ty8rKJlz1chUfaFLu1
5rH7KvEPbcp1sX8F7izHJ9qUN8o2Hr9lJ/62TVn862dXTt+Bh9uUn9c/vDxx
O/6qTan7vKf1sm14qE2Z/GjakLoIf96mvPze3qvP3IqjbcqDc69a83c+Pt6m
fLPf1fGLEQ+2Kaabzv72m434WJsSv3vHddE8PNCmRDQ/5R1dh4+2Kfe4c57p
zcX9bcqn5w78eHA1PtKmFJnvu/HlHNzXpkz460D+3hX4cJuya/OMzscNuLdN
mT38+K/+pfhQm3J06aW32LJxj6jXhw3FlsX4TVGv+ap9ZVm4W9Tr4Ja/Chbh
g6Jet36dtj4TK6JeexeXLV+ID4h6TT382iN6vL9NEdU4ZcECvE/U68IX5qTP
x12iXnVJ5lnz8IuiXqrAf7QZuFPUq+i8M6+Zi58T9fq+IuOKdBwR9cr5rfbC
OfgZUa+P175zlg7vEfV68JM41Wy8W9SrR7/gt9twR5syPLu7+cSteJeo1wu3
vP/5Lbhd1Cv5qQv+ezNuFfVqnZT53k1YFvW61Ob8z404JOrVfPpHr9yAA6Je
Z2yLf+567BP12nHi0Y7rsEfU65dl/tC12CXqte6DQcc12CHqFZ07qf5qbBP1
emTfsvKrsCTqdfj6lqLJuEnUK73l8w1X4gZRr1cmJuZcgetEvW60rFp8ObaI
enX8tUt/Ka4W9Zq0aXjuJdgs6uX8/NrbL8IVol5xi9bfdCE2iXpVvL3n2vNx
majXH2k/XHkeLhX12hS54eJzcYmo11dXbY47BxeLei1xP3fqWbhQ1OuDs0fH
zsAFol7zym7+MQbni3opPxV+eSo2inrdsqrrYxXeKOr1zMAf7/9jG3eeqFfi
/Nt6TuJ1ol7+10oP/IlzRb3Ov+lA5xheLepl2fXv7t9wjqjXv5fe2TKKV4h6
bW2scP+MDaJeJ1TdjSN4aZvy4YqC080/4GxRr/9+PbfkBF4s6qV/zGL8FmeJ
er15+O3Vw3iRqNftc85Z8hXOFPV6/oX5Dw3hhaJe065tuvdzrBf1kgPv3RHF
C0S9LlGfP/M4ni/q1VS5MHkQz2tTDsb8bp9yDGeIem1f92H8AJ4r6vXTJxef
dxSni3rlPph1ej+eI+r1abf3r/exTtTr4dSPf3oPzxb16n0qYfhdnCbqNefK
pcffwbNEvV62hfvfxqmiXtozPjv0Fp7ZpuzdtW3K6//BKaJeV3y/8qU38AxR
L7vh8adfx1pRr7P7v2p7DU8X9Sq/J8n3Kk4W9fp931rpFTxN1Gvj9KeqX8ZJ
ol5DLSdKX8JTRb0eu2j6lhdwoqjXEcumtc/jKaJeGScjy57FGlGv1zb9/PBe
PEnU6+Yvbpr/NE4Q9dqzaOucp/Blol5TDr2Y+iSOF/Xy3j42/Ql8saiX+tlb
r34cTxT1qk7cfnkbvkDU62/3/vNbsFrUa8s5/5wZxhNEvb4tu+OfAI4T9Vr+
s2nUh88W9fpo1cFvPThW1GvBf0/7zIXPEPXqnn/3Rw4cI+p1m1L9rg2fKur1
3E09b0hYJeqV9MRZ+5rwP63KPeHL7os04JOtyqcXNTXsqsN/tipFDaccDljw
WKsy4bSt59mr8W+tyq5tw/paMx5tVWaPPGbbWYF/blU+XP3eB1tNeKRV2fDJ
nIvyyvAPrcrpmS8uWlGKT7QqgUPXerJK8LetSsqdwf8uKMbDrUrvS+rL7y7E
X7UqOdPN2bcV4KFW5a/234M35uPPWxX75es/vcaIo63Kdbbjmkkb8fFW5WDs
whUT8/Bgq7J453/azl6Hj7UqP/+a+qUqFw+0KrV5e6b+vgofbVUmf3Fl7vcr
cX+r8vKj9ie/WI6PtCoP9p3x3X+X4b5WZXhuSXLfEny4VTG9+v2GNx/Dva1K
fMryvfsfxYdalb27+0eeewT3iHpNzpjx5MP4TVEv9ytbwg/h7lalcMINLzgf
xAdFvapaf6t/ACuiXn9dlFpxPz4g6pVfu634Prxf1Gv45L6N9+J9ol7LjCdz
7sFdol5Hv7j9sbvxi6Je8x/Z+eBduFPU641Dyj134udEvW6dfersO3CkVVkZ
efaulNvxM6JeU6+umnYb3iPqFfS8qbkV7xb1mhgXe8ktuEPUq27nvefejHeJ
ep3yS91pN+F2Ua+i1b1/aHGrqNcP/z13ZDqWRb1W3f/AV8k4JOr1sSINTsMB
Ua+FKUeOJGGfqFfPExe+PRV7RL3uuPzh1xKxS9TrxSbXC1OwQ9Qr+dSBpzTY
JurVtvXS1klYEvW69JvFngTcJOolZQeaLsMNol5n9n1ijsd1ol477rpy+8XY
Iuo1+qJh80RcLeq1blrrmguwWdTrs+AXS9S4QtQr6/yrMydgk6jXYfPqeXG4
TNTr7rEndGfjUlGvV9Z/MzMWl4h6zfh02vVn4GJRr46FeVfF4EJRryvffPrS
U3GBqJfr1h/PU+F8Ua+4p7Vn/GMdt1HUq1KTf/IvvFHU6w/78z//gfNEvYxn
/jr8O14n6vV1ycxPf8W5ol5Lfij68Be8ulXR9y9/+Z2fcI6o17wP/3z9R7xC
1Ov1jLSu77FB1Ct1/45nvsNLRb2eueG19m9wtqjX1W0q/9d4saiX/+I51i9x
lqjXBXWVNV/gRaJetX937/gMZ4p6/Ws8o+BTvLBVub1w6J51n2C9qNeJR2oN
H+MFol4r3zm06L94vqjXsdlx93+E54l66Z+7/64PcYao11tXN9/6AZ4r6nW7
t++G93G6qFdn3AVT38NzRL2mmR5KeBfrRL1afnFc8A6e3apMi19zNPZtnCbq
1XTskn/fxLNEvU5f8Oiv3ThV1Gv7677vDuKZol4/pwx+puAUUa+1HVcMHMAz
RL0+vXzZ4f1YK+q1qFnu3oeni3r1nvr5vi6cLOp1V+FVz76Ip4l67fsm54lO
nCTqpV2yK/gcnirq9UTf1/YIThT1uiL92rpn8BRRL8dL60x7sEbU65zr9hTu
xpNEvcpD3+d14ARRr7Hzb1i5C18m6rXxf4GHOF7U68uxZx9oxReLemXn/XK3
jCeKeh35NCUthC8Q9br3ocIZAawW9XrtzZeSfHiCqNfMWX9M8uA4Ua89T8+6
yIXPFvW6anLpOQ4cK+rlc7x6ig2fIeqljv3392YcI+pVs133QyM+VdTr7x/K
h+qxStSrYMUbx2rxPy3K5O8+jHm/Bp9sUV5efu/ct6rwny2KfmB/zauVeKxF
GV6gffv5cvxbi2ISb5e7d+LRFuV/63zlHfjnFmXvc3WNru14pEW559p/Djds
wz+0KJ+GN6sri/CJFqXw4i8f3LYVf9uiTGjMsm/agodblF2n9fav2oy/alFu
L7nj4uxNeKhF+VC8Wy7cgD9vUTasmerNWI+jLUrMce+x2Wvx8RYlkHluws1r
8GCLkvKOacl1q/CxFqX3ztHQ5JV4oEVZ2bUmeslyfLRF+Wv6x5MnLMP9LYr9
8QUrY5bgIy3KtISD7X8uxn0tykHbzV+NZOHDLcris5685utFuLdF+WlnwtpP
MvGhFqX2t+bdHyzEPaJeG0478bYevynq9UXh9coC3C3qtfjbjS/OxwdFvfqW
RPbMw4qo1z3v/9SagQ+Ieh1Iv8k7F+8X9UrpKmhOx/tEvZ667sWqObhL1Gty
+PftOvyiqJfnglvzZ+NOUa/zqkty0/Bzol5Vf7yydBaOiHqdzPs7MxU/I+qV
H51930y8R9Trm4dMd6bg3aJehrdev2UG7hD1OjrrtOlavEvU6/5n0hOn43ZR
rzcmV1+WjFtFvWY531JPw7KoVyT2rDOTcEjU65rSeX9fjQOiXqEf63+5CvtE
vSaufPebydgj6lV/dEL0SuwS9Tplnv7oFdgh6lX8qrX3cmwT9fpR+8HBS7Ek
6rWqfeLLl+AmUa/BSxbtvQg3iHotrHc/fiGuE/V6+58B//nYIuqly7/Mdh6u
FvV68cvHLOdis6jX9Y8Gy87BFS3K8bbe4wVnYZOo12U6zfozcZmol/X55ctP
x6WiXmde0/bIabhE1KvMN3T/KbhY1Gv03Knp/0rjLhT1Wl++ZtbfuEDU6/PR
Du1fOF/UKyv326l/YKOo13sfX3fF73hji/LO3Q9suPBXnCfqtf/gM2f9gteJ
es2YOfLvCM4V9XryyRt/+wGvFvXSXLHlxAmcI+rlkjo//xavEPU6N+a3gWFs
EPWqLLrlva/wUlGvP78t/s8Qzhb12rx03yuf48UtStfX7//1bBRniXotvfv2
juN4kahXf1dZaBBninrdl6w4juGFol4Hw6fUD2C9qFfqhXeVH8ULRL32VpuL
+vF8Ua+r//zPhiN4nqhXYMOZOX04Q9Trws8yFh/Gc1uUx2sz6/S9OF3US9Xz
ztxDeI6oV+Ft597eg3WiXt8/s+CmN/FsUa+cKdK13ThN1OuY8/0rD+JZol4P
nnXhxQpOFfV6qzQz7gCeKeo1e8R56n6cIurVufKjsZfxDFGv6z6K//ElrBX1
ap23+MsX8HRRr/gD/o+fx8miXs03fvL+s3iaqNfpj0/q2YuTRL1K4w0HnsZT
Rb1+qW/pfAoninqt/ffz3U/iKaJe0fzEliewRtRr0Ver3I/jSaJe7z76RGMb
ThD1Sn93uLIFXybqtU83rSSM40W9buxcbwzii0W9nrjm6dV+PFHUa5L/h2wv
vkDUyzlB+5Abq0W9zqnYfK8TTxD1qvj1uTvsOE7Uayx39GYrPlvUa9PgzcnN
OFbU66sHiqY04jNEvbLf6IqvxzGiXh/M/HNCLT5V1Ove3bedXoNVol7KFTv+
MuN/ZOWvmdYDP1Xgk7JiezpGNWzCf8rKtMTiO4+X4TFZOej7rqK/FP8mK4vP
X9Z9qASPyspPNUdOf70Y/ywrtf/cfc9LhXhEViZvfdnydAH+QVa6vks+1JaP
T8iKfoV8js+Iv5WV4YEL75c24mFZ2flATVN1Hv5KVi5588/3StfhIVnZm7bx
/C25+HNZuef5zxauXY2jsnL82ocdy3LwcVkplHs+fHgFHpSVCf97gDHgY7Ly
eOPerDlL8YCs3B5zlS81Gx+VlQ9LXB9PX4z7ZSXvp7OuuDoLH5GVmNwdSy9f
hPtkJXB8JHx+Jj4sKykP53x25kLcKyvvvPPRlH8ewIdkZeWc+3JG78c9ol5d
Bx7/9j78pqjXDTO+jt6Lu0W9dj2e9NE9+KCoV8Kl6969GyuiXvaGp964Cx8Q
9TpL9f3Ld+L9ol6mLdMjd+B9ol6/f7Vp1+24S9Rrw+JnA7fhF0W9ht792XYr
7hT1WnxnSu0t+DlRr/c7t+68GUdEvTKSXtp6E35G1OuAf2z9jXiPqNfN581a
cQPeLer1VMX2rOtxh8y+e7xLZr89bpfZZ49bZfbXY1lmXz0OyeynxwGZffTY
J7N/Hntk9s1jl8x+eeyQ2SePbTL747Eksy8eN8nsh8cNMvvgcZ3M/ndskdn3
jqtl9rtjs8w+d1whs78dm2T2teMymf3suFRmH3vzuEtk9q/jYpl967hQZr86
LpDZp47zZfanY6PMvnS8UWY/Os6T2YeO18nsP8e5MvvO8WqZ/eY4R2afOV4h
s78cG2T2leOlMvvJcbbMPnK8WGb/OM6S2TeOF8nsF8eZMvvE8UKZ/eFYL7Mv
HC+Q2Q+O58vsA8fzZPZ/4wyZfd94rsx+b5wus88bz5HZ3411Mvu68WyZ/dw4
TWYfN54ls38bp8rs28YzZfZr4xSZfdp4hsz+bKyV2ZeNp8vsx8bJMvuw8TSZ
/dc4SWbfNZ4qs98aJ8rss8ZTZPZXY43Mvmo8SWY/NU6Q2UeNL5PZP43jZfZN
44tl9kvjiTL7pPEFMvujsVpmXzSeILMfGsfJ7IPGZ8vsf8axMvue8Rky+51x
jMw+Z3yqzP5mrJLZ14xPhtnP3DTusTD7mPFomP3LeCTMvmV8Isx+ZTwcZp8y
HgqzPxlHw+xLxoNh9iPjgTD7kHF/mP3HuC/MvmPcG2a/Me4Js88Yd4fZX4yV
MPuK8f4w+4lxV5h9xLgzzP5hHAmzbxjvCbNfGHeE2SeM28PsD8ZymH3BOBBm
PzD2hNkHjB1h9v9iKcy+X9wQZr8vtoTZ54vNYfb3YlOYfb24NMx+XlwcZh8v
Lgizfxcbw+zbxXlh9uvi3DD7dHFOmP252BBmXy7ODrMfF2eF2YeLM8Psv8X6
MPtu8fww+21xRph9tjg9zP5arAuzrxanhdlPi1PD7KPFKWH2z2JtmH2zODnM
flmcFGafLE4Msz8Wa8Lsi8UJYfbD4vgw+2DxxDD7X7E6zL5XHBdmvyuODbPP
FceE2d/aOG5VmH2t+GSI/ax4LMQ+VjwaYv8qHgmxbxWfCLFfFQ+H2KeKh0Ls
T8XREPtS8WCI/ah4IMQ+VNwfYv8p7gux7xT3hthvintC7DPF3SH2l2IlxL5S
vD/EflLcFWIfKe4MsX8UR0LsG8V7QuwXxR0h9oni9hD7Q7EcYl8oDoTYD4o9
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
M8/L2LiZ52Ns2MzzMNZv5vkX6zbzvIu1m3m+xZrNPM9i9WaeXx/m+9/M8yoe
MfJ8iqNGnkdxn5HnT6wYed7EESPPl1g28jyJJSPPj5l8/0aeF7HRyPMhNhh5
HsR6I89/WGfkeQ9rjTzfYY2R57mH+P6NPL9hlZHnNRzdxPMZVjbxPIblTTx/
YdMmnrewYRPPV1i3ieephfz3bOL5Cas28byEoxt5PsLKRp6HsLyR5x9s2sjz
DjZs5PkG6zbyPPMgr7+R5xes2sjzCo5u4PkEKxt4HsHyBp4/sGkDzxvYsIHn
C6zbwPOEntffwPMDVm3geQFH83g+wEoezwNYzuP9H5vyeL/Hhjze37Euj/fz
B3j9PN6/sSqP92scXc/7M1bW8368gNdfz/svNq3n/RYb1vP+inXreT+9n9df
z/snVq3n/RJH1/H+iJV1vB/O5/XX8f6HTet4v8OGdby/Yd063s/u4/XX8f6F
Vet4v8LRtbw/YWUt70fzeP21vP9g01reb7BhLe8v9/L6a3k/wZq1vH9g1Vre
L3A0l/eHDF4/l/cDLOfy9x+bcvl7jw25/H2/h9fP5e851uTy9xurcvl7jaNr
+Ps8l9dfw99jLK/h7y82reHvLTas4e/r3bz+Gv6eYs0a/n5i1Rr+XuLoav4+
pvP6q/l7iOXV/P3DptX8vcOG1fx9u4vXX83fM6xZzd8vrFrN3yscXcXfpzm8
/ir+HmF5FX9/sGkVf2+wYRV/X+7k9Vfx9wRrVvH3A6tW8fcCR3P4+6Dj9XP4
e4DlHH7/sSmH33dsyOH3+w5eP4ffZ6zJ4fd3Nq+fw+8rjq7k9/N2Xn8lv49Y
XsnvXxqvv5LfN2xYye/Xbbz+Sn6fsGYlvz+zeP2V/L7cyuuv4PcDKyv4fUjl
9Vfw849NK/h5v4XXX8HPN9at4Od5Jq+/gp9frFrBz+vNvP5yfj6xspyfxxRe
fzk/f9i0nJ+3m3j95fx8Yd1yfp5m8PrL+fnBquX8vNzI6xv4+cCKgZ8HLa9v
oP7YZKDeN/D6Buo7ndc3UM/reX0D9Uvm9Q3U6zpebxn1mcb//jLqcS3/e8v4
90/i65fx730NX7+Uf9+pfP1S/j2v5uuX8u+XyNcv5d/rKr5+Cf8+U/j6Jfx7
TObrl/D9a/j6JXy/k/j6bL6/BL4+m+/nMr4+m//+eL4+m//ei/n6x/jvm8jX
P8Z/zwV8/WO8vpqvf4zXi+PrF/O/H8vXL+Z/L4avX8zXq/j6//u/H7tj/Osf
5f9/ZNym/3N03LpHFdX/9/8eVf4fJjXUxw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
g2gJbrBQC0+Q2KvivD+CZkbQEjynX45hgb5exfs+r/81vb2K9z1eptXK3vd3
5Q97Ze97u/abvZL3fT32F3sl73u6hVYret/PbQnsFb3v5Y6f7BW87+OeH+zw
ieIZ01lptbz3/dv+nb28971b97CX875vy7RUzvuerXxjL+t9v9a+spf1vlfH
fmEv432fttAS/PDe15W2z+ylve/Pjnj20t73Zs8n9lLe92UrLcHvK756aP/I
7u99P9Y/sPt734tlWi3pfR9W3rOX9L4Ha+/YS3jff2PfspfwvvdaaLW4933X
9oa9uPc91/GavZj3/dbzir2Y973WSqsWnHdAo0f2l+wW73us/oK9qPf9Vaal
ot73VuU5exHv+6r2jL2I9z01No69sPf91EJLhb3vpban7IVM8StXmUGOJ+yF
vO+hnsfsBb3vn1Zagq+Eb35kd7MX8L5v6rHsBbzvmTKt5ve+Xyox7Pm975Xa
I/Z83vfJ2Ifs+bzvkRZazet9f7Q9YIdft5o7yHGfPY/3fdFzjz2P9z3RSqu5
ve+H9rvs8K9tU/bqd9hzed8HZVrK5X0PVG6z5/S+/2m32HN63/tib7Ln8L7v
WWgph/c9z3aDPbv3/c5xnT27973Oc409m/d9zkpL2bzvcfZo9qw478P7e3WT
Pav3vU2m1Sze9zXFxZ7F+56mGex+3vezWCe7n/e9zEKrmb3vY7ar7Jm972GO
K+yZTJF20ZlansvsmbzvXVZazeh937Lr7Bm971n6JXbZFHlfHpwu05Lsfa9S
LrJn8L5PaRfYM3jfo2LPs6f3vj9ZaCm9973Jdo49nfd9yXGWPZ33Pclzhj2t
9/3ISktpve9FdsGexvs+pJ9mh9Pm87PLtJra+/6jnGJP7X3v0U6yp/K+78Se
YE/lfc+x0GpK7/uN7Th7Su97jeMYewrv+4znKDvsb37PYKXV5N73F/sR9uTe
9xb9MHsynLdtiF2mpWTe9xTlEHtS7/uJFsWe1PteEnuQPYn3fcRCS0m87yG2
A+yS9/3DsZ9d8r53eBzsf10iZ/KOspWW4MT3DPs+9j+uf+8X+l52OPG9QqbV
3y7h372pouxhhxPfI7Td7L9c/94fYiPZ4cT3BgutJrj+vS/YdrHDie8Jjp3s
P13/3g88O9jhxPcCK63+cP17H7BvZ4cT3wP0bezfXf/u/zItwTlx31e2sntc
/+732n/scOJ9PnYL+zfXv/u7hZbgxPu6bTP7V9e/+7ljEzuceB/3bGT/4vp3
/7bSElwd9237BvbPrn/3a309O5x4n5ZpNd717/6sRLDDifdlbR37J9e/+3Fs
ODuceB+20OpH17/7r20tO5x433Vo7B9c/+63njXscOJ91kqr713/7q/21exw
4n1VX8X+zvXvfirTEpx4H1VWsr/FeXH/1Faww4n3zdjl7G9c/+6XFlqCE++T
tmXsr13/7o+Opexw4n3Rs4T9levf/dBKS3DifdC+mP2lSwTh/qcvYocT73sy
rb5w/bvfKQvZ4WK4z2kL2J+7/t3fYuezw4n3NQutPnP9u5/Z5rHDifcxx1z2
ONe/+5dnDjuceN+y0upT17/7lX02O9wI9yk9jP2J69/9SaYlOPG+pMxif+z6
dz/SZrLDQbgPxc5gd7v+3X8stAQn3ndsoeyxrn/3G4edHU68z3ims8e4/t1f
rLQEJ95X7Cr7I9e/+4k+jR1OvI/ItPrQ9e/+oUxlhxPvG9oU9gc4L+4XsZPZ
4cT7hIVW77v+3R9sk9jhxPuCYyL7Pde/+4FnAjuceB+w0upd17/9bx/PDifu
fX0c+x2XCMa+l2kJ3mXe6qiMZb/tEh/+a1dCG8MOV5ps/ogdzX7LJca3a3HV
QkvwiRKXw22j2G+6hPS34TDHSHa4wa2zdT0j2G+4xOxddTNbaQl2Tj/xxD6c
/bpLZAqqcVAPYYeVsodmyrR6zSXWJK/USRnGDj+6v7eENpQ92iUKOUr/jB3C
DgeH7bhqoVXTJXZ2L7bOZmOH31faPMwxmN3lEhXTFgzwDGKHx7rDM1tp1XCJ
Y4dyPbUPZIf/zF95UB/A7nSJen2zzJJpCQ6rsbiTEsx+1SWuZsxQUuvPDmd8
PudnbD/2KzjviZROCy3Bq5eGrrP1Zb/sEg8HSiGOPuxwwbpTAjy92XWX6Jft
Z2YrLcHb34x9au/Ffskl3p75fFDvyQ6XXz18lkyrF11i9LB3nZQe7PDRBoNL
at3ZL7jE79wvfsZ2Y4cDP/V1Wmj1vEvMuuReZ+vKDl9Z1z3E0YX9nEvIo+8H
eDqzw+2adfKz0upZl1hZ8OZTexA7fP9bmyi9E/sZl8hvGLNkWoL7bG4WpHRk
Fy6xbcKlkloHdvhN6wYJsQr7aZcoV+yM00JL8Ohf1ghbe/ZTLnHk+rEQRzt2
+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
shd0idhWN1K4h7DDRSxt7lhotQDOm+DcbrOxw5HXmk50DGbPj/297WJzzyB2
uPLU+vmstJoP+1sR7+0D2eET/lahD2DPi/2d5NgSmZbgBneq9lWC2fNgf+8+
UFnrzw4boeVTuvux58b+7rL7joWW4A7l/XfY+rLnwn0j5baJjj7scMzDIi08
vdlzYn8f2JDPSktw8Jx8H+y92HNgf/fUhN6THX5fJcdSmVazY3+nX95X6cEO
j32SqYrWnT2bSxw/siCluxs7/Hdh2rsWWs2K/d0/bIetKzs8u1bySY4u7Flw
38g8vYWnMzuc6eXvfFZa9cP+PjXxgz2IHV693CP0TuyZsb8Hj14q0xJcMPBT
X6Ujeybs7xzDqmgd2OEd716ndCvsGV3i3bkBdy20BFfQ4nbY2rPLOO/w3pMc
7djhY41iWnjasmfA/s7bNb+VluB6n+98sLdhT4/9fVk5o7dmh6+sv7ZUptV0
2N9jW/VTWrHD7VpcraK1ZE+L/V24SSp3C3b4wffzdy20msYlCpiBO23N2eG+
/52a5GjGnhr3jUm1WnqassNv2x7Jb6XVVNjfJap8tDdhh0f/cZzRG7OnxP6+
WXaZTEvwr527+imN2FNgf08vUVVryA7P6PRfKncD9uQucblM4XsWWoIzJF+/
01afPRn29/08kx312OGV+1a39ASyJ8V9Y1a2AlZagvN3X/rRHsCeBPu7Usaz
el12eGua+ctkWpWwv2NT91fqsMNlD82sqlnZ/xoCczK1uzY7fKjPtHsWWv1j
iITqv3baarHDdTNOmOyoyf7bEKHPvrb01GCH9eMjC1hp9Zch0i/98NFenR1u
M3DIWb0ae4Ihltd5tUymJfhu1uD+SlX2n4bI++ZJVa0KO9zrTM/U7srsPwyx
ZdXDexZagl8N7bzLVon9uyHK4MLvqMgOj8jdvpWnArsH5/1oFrDSEvzzYotP
9vLs3wxRZ93ls3o5dtg+qtFymVa/GuJi03P9lbLscFpcgLUy7F8Mgfmc2l2a
HV7qrHHfQqufDXFn06FdtlLscJ4JlaY4/NnjDdGz9b5WnpLs8BZLmYJWWv1k
iJcJOz7ZS7DDpa8XO6cXZ/9oiOHbNy+XaQk+OLVgsFKM/YMhvivrqmkWdrh2
qdxp3EXZ3xtCTbLqvoWW4PN3skTairC/M0SaPYunOAqzwy1nZGjtKcT+1hBL
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
p9iqpV3k2MQOvx4e1suzkT3OKco2Tl7RSkvwyHzTk4VuYH/qFIc+/76pr2eH
f16euFWm1SdOUSfxX6gZwQ6Hjh3dVFvH/tgpLrX4lNsdzg6nKzLsrYVW3U6B
384nbWvZ4eXmgEUOjT3WKe7+F9fLs4Ydzju5d0UrrcY4Ra92MclCV7PDW0p0
vaWvYn/kFC//3Nkq0xJc+pYyXlnJ/tApRuy61lRbwQ5HTW+Vx72c/YFT/Oh0
9a2FlmBr2SanbMvY7zuFPfmFRY6l7PDF+4G9PUvY7zlFWsepilZagluF1Uoe
upj9rlMs7X7klr6IHb5dqco2mVbvOEXutPvHKwvZ4Z7uss20Bey3nWLzoV15
3PPZ4RfzS7yz0Ootp8Af31O2eexwSI3Cix1z2W86xcGM63t75rDD35/lqWSl
1RtOUfvE6uShs9lhdWm223oY+3WnOD9w6TaZluDUdTNOUGaxX3OKFtnmN9Nm
ssNL3qTO657BHu0Ut87MfGehJTjX6qSnbaHsplN0HzZtscPODm9q8Ku3Zzq7
yyme555QyUpLsP+nr8lDVXbDKYZdGnlbn8YO71/3YZtMq06n+DZqyARlKjtc
s9mrZtoU9qtOMa1gcF73ZHb43Lcn7yy0esUp8OPqtG0SO9x888PFjonsl51i
8YTOfTwT2OGbrW9XstKq7hQ5i7VPETqeHe72y7ytj2O/5BQbrrfYLtMSHLf9
8gRlLPtFpygxrVFzbQw7PKTDubzu0ewXnMJRKuC9hZbgr0lOnraNYj/vFDXu
1ljiGMkOT9lzqI9nBPs5pzg7o1JlKy3BKbvuSxE6nP2sUzSrUOaOHsIOL0y1
c7tMq2ec4vqjYhOVYexw9oObm2tD2YVTdJlbMJ97CDu8vte69xZaPe0UT6vm
FjYbO1w8w6oljsHsp5zC9jRLX88gdnjf0cWVrbR60im+LMqQMnQgO1w9eO4d
fQD7CaeYXDvVDpmWYOE3Y6ISzH7cKZK/klpo/dnhJqen5HP3Yz/mFAtW/Hxv
oSX4mm2csPVlP+oU2ep9WeLoww53zjmir6c3+xGnWPf+XWUrLcFPzg9OGdqL
/bBTFFv74o7ekx0ePKLfDplWDznFnsaPJyo92OH4fD1aaN3Zo5yi6pf7+dzd
2OGJVzp9sNDqQac4veGmsHVlh5ONa7vU0YX9gFM0bunq6+nMDs8r0ryKlVb3
O0X0j0spQ4PY4azRDe7qndgdThG09cwOmZbg8Ml1Jikd2fc5hbvd8RZaB3a4
aMnq+d0K+16nGPj34AcLLcG7b1U4Y2vPvscpPu3as9TRjh2uYi/Vz9OWfbdT
TAjaXsVKS/CpspZUoW3YI50iaYpNd/XW7HCjB/l3yrS6yynmOtZOUlqxw66w
nC21luw7ncKvx4r87hbscMfKfh8ttLrDKfDX7xlbc3Y41p1umaMZ+3anKHJ4
dj9PU3Z4wIIUVa20us0pdvW1pwptwg5/rPH3rt6YfatTVM40eadMS/D4598n
KY3Y/3OKEyfGtNQassPSsvj87gbsW5yiwaCQjxZagmfXfXvGVp99s1MY2QYt
c9RjhzO/fdbPE8i+Cfs78V+ARUvwmtWxqUID2Dc6Rcywbvf0uuxw4Yb3dsq0
ugH7O0/HyUoddnjnp+stNSv7euzvS60LuGuzwxUjnB8ttBqB/T266VlbLXb4
eLOLyxw12dc5xd+C9ft7arDD9T2nq1ppNRz726idOrQ6O3x189F7ejX2tbhv
TKy6S6YlWGlzYLJSlV3D/i5WvpVWhR1++CuygLsy+xrs7xslP1loCe63Y+tZ
WyX21djf04osd1Rkh9912NDfU4F9lVNUKJ2vmpWW4DFJtdSh5dlXYn/fzX5f
L8cO/9mzbJdMqyuwv2dmmqKUZYdndV3QSivDvhz7u0Lagu7S7LCcOuyThVaX
YX/HJDtnK8UOrzyoLnf4sy91igdzf/f3lGSHC/SeWM1Kq0uwv6t5UoeWYIe3
ZRh9Xy/Ovhj3jacfd8m0BJc/NnSKUox9Efb34tetNAs7fCR4QEF3UfaF2N+1
4z5ZaAkOyNL7nK0I+wLs71ePljsKs8P66S7BnkLs850iw8o71ay0BLcdoqQJ
Lcg+D/u73rX7egF2+F7OVpEyrc7FfePDlSlKfna4z4XGrbV87HOwv9eeL+jO
yw6/HhEYb6HV2djfTU6ds+Vhh0fmr7XCkZs9DPv7y+FgTy52OOFK5epWWp3l
FHU3OtKE5mSHQ8eVfaDnYJ+J/d1yV6RMS3D6oiWmKtnZZzhFm59bWmvZ2OHl
0YUKubOyh2J/b42It9ASnHdKnvO2LOx27O/2q1c4/NjhLSWzDfBkZp/uFK/+
LqlupSW4zG05bWgmdhX7O3LeAz0jOxxlT71bptVp2N9BM6cqMjtcp1zSNloG
9qnY3ymmFXKnZ4cvPkiIt9DqFOzv/ePP29Kxw61mf13hSMs+Gfu7x8gBnjTs
8O3KH6pbaXWSU+RJNyRtaGp2uOfjlw/0VOwTsb8P998t0xL8YsGTqUpK9gm4
b/Tr2UZLwQ4Pr/mwkDs5+3js70ydP1toCf7+/NZ5WzL2cdjfJ9utdCRlh9Vl
5gBPEvax2N+DWtSw0hKcJuBy2lCJfYxTtMze6KH+96q3w0vent0t0+po7O+z
dacpf9jh3GtOtNF+s49yih64MLh/scObGh76bKHVkdjfeSpdsCWww/7xe1c6
frKPwP7WSw/0/GCH90fsqGGl1eHY36OLpQv9zg7XwoDWPewh2N+FCu6RaQk+
5wmfpnxjH4b97crVVvvKDrfYsrKw+wv7UOzviVm+WGgJvtlm8QXbZ/Yh2N8Y
lI54drjb7zkDPZ/YbdjfN1LWtNISHLcjNF3oR/bBTlFSlR7pH9jhoR2n7JFp
dRD2d+mf05T37PDXpOPaau/YB+K+ce9zYfdbdnjq3uFfLLQ6APt75rsLtjfs
cMpug1c5XrMHY39XfDHQ84odXpi6X00rrfbH/o5xpwt9yQ7niOr+SH/B3s8p
us67v0emJXh9706q8py9L/Z3tZtttWfscHG5bRF3HHsf3DcS/x9m0BK871iz
i7an7L2xvxdfWuV4wg5XH9BgkOcxey/sb+uZmlZagkWWOulD3ew9sb9fH3uk
x7LDTUW1vTKt9sD+xl9ISgw7fG1IhXbaI/bu2N/19xRxP2SHu+Qq9dVCq92c
IuLDtou2B+zwkwtFVzvus3fF/g7fOMhzjx0ejB/QVlrtgv3dZG360LvscHz+
nDH6HfbOTlHt6/K9Mi3Bk65mnq7cZg/C/t64sJ12ix1ONj5dUfdN9k64b+AH
loWW4PlFU1yy3WDviP39c/pqx3V2OOu1P4M819g7YH9vm1TLSktw+JTv6UOj
2RXs7/ZjYnSTHbbgD7BMq+2dYpAUMl1xscO7b79ppxns7bC/IwcWdTvZ4Sqh
z75aaLUt7hud+1yyXWWHT5WLXe24wt4G+xu/oT2X2eFGD+/WstJqa+zv/R0y
hOrssGv29Rj9Ensr7O+erffJtAR3quKcrlxkb+kUa9M1ba9dYIdjH18o6j7P
3gL7+0i9bxZaggcuPH3Jdo69uVNE9qu9xnGWHf5Y8+hgzxn2ZtjfmavWttIS
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
TJ8OKm3E9gRebmFzCDvcqH+PGO5g9ljY3zWeX5dpCb6TsVOENog9picyffOH
WgPZ4U6RrWv5A9hjYH+vvp1OoSX4zZCm7/T+7NGxv+tdPWb3Y4cHhDWYHfRl
j+aJA7/OdVBpCf5zqWYRsw97VOzviLMx3N7s8PhRlW/ItBEF+1s7HqH1Yofl
3GWHWT3ZJezvKIdq+eHs8IIbxdMrtPHPFbe37n6n6+xwhnEFhd2D/a8rOrTY
Njvozg5vKJC7o0obf1zxOmZEEbMbO5z/XraYblf2367ov2vVDZmW4H2TM2zU
urD/csXvtkuGWZ3Z4fLFUtX2O7H/dMW4+PPTK7QEO48Sv9c7sv9wRfwDM4Td
gR2uPzPenKA9+3dXzOs8qaNKS/Ct0jGKmu3YA1ekTzI2ptuWHW7/4u8NmTa+
uWLd0eEbtTbs8Mt534dZrdm/uiKfPrC234od7lfhU3qFNr64Ym/K3u/1luzw
z7evhd2C/bMryp7qNidozg6PtZ52VGnjkyvO9ulQ1GzGDser9iCm25T9oyvq
pW91U6YleO7nmxu1JuwfXHHDbTzcaswOp1t5ubavsb93RbtB9TIotASvrR35
Xm/E/s4VL7LUOG43ZIfz/Dg9J2jA/tYVfS5U7KTSErx73bGiZn32N674MbxM
LLceO6w2PHBTpo3XrhiTo9gmrS47fPrvzuFWHfZXrohzLX8dvzY7XHfzlgwK
bbx0xZwxOT/otdjh603XH7drsr9wRZp8WecGNdjhNtFXdlJp47kr8ONbzKzO
Dj/fsTiWW439mStyT0xxS6YluHfruZu0quxPXbGrcKIRVhV2OIgzvY5fmf2J
K8r4cTIqtAQbeyd80CuxP3bFqWnRTtgV2eHYHY25QQX2R66oXfJPJ5WW4FkJ
hxUzy7M/dMW1p99iueXY4dSH+9+SacN3Res5HzZpZdnhVd16jrBU9geueFr2
VR2/DDucK3nXjApt3HdFr9ePP+il2eGdx9udsEux33PFt4X35gYl2eFSvVp0
VmnjrivwdlXMLMEOn0ijxXaLs99xRayPF2/JtATXOltns1aM/bYrZi7zRlhF
2eEr/avV9Yuw33JFypqnMiq0BLfKVOGjXpj9pitWfjtywi7EDj+JLDUvKMh+
wxU51uzrrNISHD60SHGzAPt1V+yoZ8d287PDX8Py3ZZp45orSv7etFnLxw6P
vJx9pJWX/aorjkesrevnYYdjjM6cSaGNK66o2Xj5Rz03Ozwjd9qTdi72y664
HGXRvCAnO5ziZrIuKm1ccgXenoubOdjh5ePkOG529ouueNRi6m2ZluDsBWNv
0RT2C67QY40faYWxw9vvRannZ2M/74rPu0ZlUmgJLj7l10c9K/s5V4xoN+Sk
nYUdFsW+zgsys0e6InqCfl1UWoKrP35X3MzEHnLFtAN6HDcjO3xx5ovbMm14
rkjepfMWLQM73LzMo5FWenbXFcuStK3np2OHH764k0mhDccVYceafdLTssM9
5l87aadhP+uKbXrD+UFqdvhThQtdVNo44wo8jkqYqdjhYe+cOG5K9tOuOHqq
yh2ZluBoS05s0VKwn3JFtb7lRlnJ2eGp1Q7X85Oxn3TFhfQlMyu0BCf9sueT
npT9hCua/fcBdknY4aUrt88PErMfd4U/KE9XlZbgbHU2ljATsQtXdMuqxHUT
ssNbfqy+I9PGMVd8uJBxqyazw0XXLx1lJWA/6oqhI1LX9+Ozw0caLsis0MYR
V0TJmfSzHo8drvJv5ik7LvthV0y5Fn9BEIcdPr95cleVNg65Ao/fkmZsdrhJ
MzOuG4v9oCusfNJdmZbg+9FHbtVish9wRdY7P0ZZMdjhrvag+n509v2u2Dzx
c2aFluD3rft81qOx73NF4SJvT9lR2eEhcXssCKKw73XFYf9ZV5WWYGlfx5Km
xL7HFZWn+3Hdf2f/3+FJHVvflWljtysiS97eqv1lhxMlajra+sO+yxWNn12p
7/9mhxcfrp9FoY2drrg359xn/Rc7nLl7zdP2T3bbFZ3LnV0Q/GCHNyWv3E2l
jR2uePdalDS/s8OFTqjx3IB9uysGLTp4V6Yl+GCv4tu0b+zbXPG38u7R1ld2
uFLagg38L+xbXTHx49YsCi3BobO5vuif2be4IuHyDaftT+xwowHZFgYf2Te7
YlHNVd1UWoLvZspQyvzAvskVmQIrnvueHe50LuU9mTY2uiJizbxt2jt2+M3Q
xIb1lj3CFQXrz2jgv2GHByrxsiq0scEVB35P/KK/Zof/XI5+xn7Fvt4VFTaO
WRi8ZIcnjP7bTaWNda7wGg8vZb5gh+U83+O5z9nXuqJh1IH3ZFqCF9z8uE17
xr4G+3tbL8N6yg5nGP+6gf+EfbUrOrbETzAtwRsKPv2iP2Zfhf0dq8MZ+xE7
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
2N+X9k60qrDDezYUbu5XZi+C/T1yRy6FluCyWt7feiX2wq4Ym2vTObsiO3xG
yr4iqMBeCPv7xpo+Ki3BdbdmqmiWZy+I/W0uS+qWY4evN0/zVKaNAq5IW2Dh
Xq0sO9w2ZrJJlsqeH/v77qzmfhl2+PnOBLkV2siH/T15ym+9NDvcp22s83Yp
9rzY30XHrQhKssPf40Xpq9JGHuzvRyMrmiXYYfz4JnWLs+fG/p4x+KlMS3Cc
zl/2asXYc7miTum+k6yi7PDsxO+a+0XYc2J/P++RW6ElOPXR57/1wuw5XNFm
XqfzdiF2eHWPhyuCguzZsb/Lt+mr0hKcK+WdimYBdgX7+23TZG5+dnjnyatP
ZdoIc0WwuME+LR87XLrP+UlWXvZs2N9Va7Xw87DDJ9M5uRXayIr9/bnyHz03
O1zbPX7ezsWexRWzVpRdGeRkh68OPNRXpY3M2N+1S1Qyc7DDeLtK5mZnz4T9
/b3gM5mW4Cfnt+3TFPaMrsi5LvdkK4wd7jk8ooWfjT0D9neDsDwKLcFfs6/+
o2dlT4/9/TfDBTsLOzzq6pKVQWb2dNjfm1L1U2kJjjlmfiUzE3ta7O+mSZK7
GdnhGXlnPpNpIw32d7T4+7UM7HDK25MmW+nZU7ui5Y4YLf107PCKCWPzKLSR
Cvu71b8/elp2OHvhERfsNOwpXREe58fKIDU7vOPBwH4qbaTA/t7zqZKZih3G
23NyNyV7cuzvDm+eybQEixLd92sp2JNhfyd8NtlKzg7XeNqhpZ+MPSn296EH
eRRagi/NbvVXT8qeBPu7260LdhJ2uHnZJquCxOyJXbE82ZV+Ki3Bj17Vq2wm
Yk+E/X08MrmbkB3usbDGc5k2EmJ/9zyzX5PZ4U+VKk2xErDLriieRrT047PD
wz+UyavQRgLs7zMH/urx2OFoy4pdtOOyx8f+7r9rVRCHHZ5Wo0B/lTbiueJi
xq2VzdjsMB5HKdxY7HGxvyPXP5dpCV66OusBLSZ7HOzvISunWDHY4bB66Vv5
0dlju6J7mJVXoSV4668U//Ro7LGwvy/NvWhHZYeLRiRaHURhj4l7Y9T0/iot
wUe1uFVMiT0G9nfuiSncf2f+3+GqUaK/kGkjOvb3DeOA9pcdPr/1zxTrD3s0
979fh9vK/80ON20R5FVoIyr2d4EB//Rf7PCDmB8v2j/Zo2B/3+u5OvjBDnfd
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
yui42Yv8//zvpgW8OkWsyXYP9sI4bw97G6LTAp51//Znb3f2Qjjf1oraqtEC
Hr1jXxejG3tBnCfTrsvodGWHe42ec9FNywI4vz0eM9n+jx1uXT+skk7L/Dgv
7W79xduFHa6VudY2jZb5LHVsfMn/jM7scKmX2TM5ndjzWmpbk+SX3LSAcx78
OdnuyJ7HUhHBLyvptIBTTbn+xduB3WWpKXgBarSARUvzP6M9e25LDTm2MpPT
jh1+m9u45KZlLuxXY8QUuy07fOdzj8o6LXNiL7Zr/tXbhh0+farado2WOSxV
pUDRrkZrdvgAbnBOK/bslir8I/FlNy3gDZ2/TbFbsgdbKkvUk8o6LeD5Ra98
9bZg13B/XKy2a7SAx//Z3tVozp4Ne6770sxOKDv893krblpmxZ4rNWSq3Ywd
7rD8vyo6LbNgz8VtEuNtyg7j27tDo2VmS526UqCb0YQdLl8hYxanMXsmS3nX
xL/ipgWcN/HnqXYj9oyWWtn/QRWdFvDfz+fyNmTPYCmjypEdGi3guJs2dzMa
sKfH+T75oixOfXb445AJV9y0TIc9d6//NLseO4zLfVWdlmmx57bX/+atyw6f
T1N+p0bLNNhzo/J0N+qww0cepcnq1GZPjT1XL/ZVNy3gLea7aXYt9lTYc5nu
VtVpAS8ed/qbtyZ7Suy5F/t3arSAJzVe392owZ4Ce27/3KyOzg4P0uRVNy2T
Y89N6j3drs4Od3nbpppOyyDsuea1v3urscNNjpbapdEyGfZcrpw9jKrscOUZ
KbI5VdiTYs99+nXVTQu4UNtX0+3K7Emw507eqKbTAs6cP/DdW4k9MfbcnN27
NFrAib6vwgGWPRH2XKeZ2ZyK7HCMNfKam5YJseeKeGbYFdjhJwtbVNdpmQB7
DoPXW54dvtKtmFejZXzsuXPZ3EY5dvhEyaSaU5Y9Hvbcsu/X3LSAd8V5NsMu
wx4Xe67X1eo6LeAVl0/88JZmj4M9V36nV6MFPGP1MrdRij22pWInmqY5Jdnh
Ef2G2m5axrLU++tdDbsEO+yu3FTXaSksdW9DZcdbnB1uEVTI1Gj5J6DODs7k
MYqxw/rdBMFOUfbfAXVI/2K7aQEX3/bQsIuw/wqoTakv6jot4OCRRx1vYfaf
AbXo4RZTowUcVHexxyjE7gTURO/EYKcgO/wzw8Drblr+CKiB+AbbBdjhl88a
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
M9ZNjRbw6y9vZxlf2F/6/33+v/OZHcbx7Zebli/8qglucPYndjhy3rpeOi2f
+1VlZ04O8yM7vK/L2JsaLZ/5VeHTYbOND+zwumJtajnv2Z/6VZYltX67aQHP
FaX22u/Yn/j/fV6MTgtYYkCbb9kf+9W30r9uarSA+6x4Odt4w/7Ir57Gu1HL
ec0Ot+/t/+2m5UO/unrV3Gu/YofrVVwVptPygV+dXGvkNF+yw+WSjLyl0TLa
r3bhgG68YIfz3Gpe23nOft+vVlSt/sdNCzjt5qL77Gfs9/xqRopsvXVawHGG
JcllPmW/61e43N/SaAF/qPl0jvGE/Y5fuXdcqe08Zofvpz3xx03L237VYvSO
ffYjdvjc46W9dVre8iu9/tRc5kN2+PDuIbc1Wt70q+KZu841HrDDm8c3qeNE
s9/wq+CXlYSHFvAivGDs++zX/Qrzr49OC3hicILc5j12269+Tv58W6MFPOjd
g7nGXfZrfvWyxYU6zh12uMuxI8JDy6t+dSP3lv32bXa4sbGoj07LK34VwA3J
vMUOV2o34I5Gy8t+tfdUx3nGTXa4YIEGdZ0b7Jf8CsfBWB5awJl+5DlgX2e/
6FdzOqftq9MCThgV22Xa7Bf8amzR93c0WsBfF92dZ1xjP+9Xvf+crutcZYcf
dz8Qy0PLc37V9vz6A/YVdvhyqXl9dVqe9as6y6XLvMwOq7h97mq0PONXZcLa
zjcuscN4udRzLrKf9qvcOFB7aAH/ff6PfYE9yq9SJ07ZT6cFPK3/b5d5nj3S
r2LdfHVXowU8rMrN+cY5dsuv3m0M1HPOssPdk++J7aFlwK/uDll90D7DDofe
m9lPp6Xfr87WGJXHPM0O//28OI2WPr86lKblAiOKHS46Sq/vRLKf8qtNj4rF
8dACzlZPO2Rb7Cf9aqGZtL9OCzgpvsFmgP2EX00Y9+yeRgvYeX51geFnV341
oPHJ+o6PHX6xf2ccDy2P+1Unbfkh+xQ7jDnZX6flMb9q+HZoXvMkO+xv3u2+
RsujflURNxDjBDu8O1eVBo5iP+JX+WcUiuuhBbz6U6bD9nH2w36VoW3CATot
4Fknv+Q1j7Ef8qv4+R/d12gBj55zcaFxlP2gX33+drSBc4QdxvEyroeWB/zq
obX4sH2YHW5dZNIAnZb7/eriwoH5zEPscK3fnaI1Wu7zq2PdGi4yDrLDpc5V
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
e879Opm/CR19vEPMSL0xPR/2XOE1z52N6Oilv0Y3VxvS82LPYfAqDejoYUuL
F5fr0/Ngz/VKvsqqS0c3Kfs8ub8OPbcpqiYSo/TadHSRG8tfOGvRc+G+2jC8
hVqTjk46pImp2Ok5cV8phSPlGnT0s9SJV1tRdBvuqwePUvgVOlrsOjZar0bP
gftq3OKXzqp09Mr6g1uqVejZseeyNvAqleno0a/zlZAr0bOZotfheGusCnR0
y+n3UvrL02VT1Gh1aIxejo4ukXf+K2dZeoQp8PbRSi1DR6fy1o5RStOzmiI4
L1dJuRQd/brLnzVWCXoWU8QWv5XKH0lHn/7rGasXp4djz112v3YWo6PXr+zd
Wi1Kz4w917fGaaUIHT2+YvZScmF6Juy5ZD/XWgXp6Ha3/GH+AvSM2HNb9HF6
fjq67AjnG2c+egbsuZo92qh56eh0eANR8tDTY889zVJazk1Hf9j7bZ2Vk57O
FPe0q6n9Njr6QuPt0XoOelrcV9mnvnVmp6M3v+/cVs1GT4P76njFs4pMR0+a
mbGMHEFPjfsKA9XKQkd3KngxjT+cHob7Km7TeD0zHV3prPbOmYmeCntucft2
akY6OrNa9pySgZ7SFIlKpy0rp6ejv8Z/t8FKS09hisfXz6T1p6Gjr65dN0FP
TU9uihMDx713htHRO6q2bq+moiczxbJUJc8rKelofPmVk1PQk5pi+I6XG61k
dHT3MWY6f1J6Euy5uqs0PQkdrYSP+uBMTE+MPfeyWQc1ER0tHyx6QUlIT4Q9
NzVpeTkBHR3X/OkmKx49IfZcrpPp/RIdfePz0on6v+MhT4A9J4Z+dP4NtYTG
21FH9Q89vilW4xdE+U1HzyqasIIcpMczxZjfDzZbP+no3hePZPDH0SXcV8sX
TtItOtruGPjJ+YP+zxAly9frpH6no21J8l5SvtH/GiIs8K+C/JWO/r3xzhbr
M/2PId4MPZDR/4mOvl197mT9I/23Ic6m7fvZ+YGOPvCoZmf1PT1oiA27bZeV
d3T0vPHBivJb+i9DTGgY2Gq9pqP7y3sz+V/RfxqiPQal/pKOrnu05xfnC3qc
Ico5o7qoz+novG3kK8ozumWI9PmtSvJTOjr+j+vbrMf0H4b4FLMzs/8RHf1g
wfSp+kP6d0Nc6tbtq/MBHX20RJWu6n36N0NslcKvKvfo6MVXv1SW79K/GmLK
6svbrdt09JD+W8P9t+hfDNGl8uRpeiwd3ShFp2/OAP2zISrfKd9NvUlHF9qW
/ppyg/7JEPhyriL76ejEtc/vsK7TPxriW8aNWfzX6Ognz8ZP16/SPxji2r62
351X6OiTk0p3Vy/T3xtiZ9PU15VLdPRy25uq8kX6O0M4P8bstM7T0SNPrsnq
P0d/awjVPWaGfpaObt6h5Q/nGfobQ0QVjuyhnqaji/9K7lNi6K8Nke3882qy
l45OsVTssgz6K0P87Lkiwi/o6JdlRjj1U/SXhriZsKnlPElHe/2FMZfoLwzh
WZ/Yrxyno9cOfqzIx+jPDTFbOa5bR+jocamXyP7D9GeG6PNgsEs/REe32dUg
znmQ/tQQtTAA1QN0dOn68W8o++lPDJEr6/0oeR8dneb1od3WXvpjQ/w9ND+b
fw8d/W5a/5n6bvojQ9xpWeenU6ejz+XJ3UvdRX9oiINf/9xQdtLRG3Fgyjvo
DwyB83ePtY2O1rrMzu7fSr9viAHFHbP0LXR0h781fjk30+8Zot7l7L3VTXR0
hZU/byob6XcNkb/vjRryBjo6Y8Xde6119DuGSJDMlcO/lo7+HNvDra+h3zbE
w83Vgs7VdPTl4Vkd6ir6LUMcs38PKCvpaLw87PIKeqwhljzZ7rGW0dFT9061
+ZfSA4YYih+wvoSO7tq40m/nYvpNQzTJnqmPuoiOrvr+U6yykH7DEEWOX6wp
L6Cjs87cvM+aR/cbImm7iTn9c+noHwU6zNHn0H2GeGaV/eOcTUf7zqTtq7rp
1w0hFr27pcyio/UeZ2vJM+nXDLGy1Pr9lpOOdsWPzuWfQb9qiFHXW8/Vp9PR
PdeW/OucRr9iiBYDU/VTp9LR1au+uq1MoV82RCQGmzyZjs5+b9UBayL9kiFS
7hiV26/R0ZjP8/QJ9IuGeFWn2D/neDo6NnOy/mo0/YIhTr94ekcZR0fvO3Cy
jjyWft4Q66YsO2iNpqPnNB+Wxz+Kfs4Q0f//BqKRdHTfzwUl1wj6WUO0FQkH
qMPp6NpzHt5VhtHPGKJMp6N15aF0NM7pQ9Zg+mlDpP09MK9/EB0tXay3QB9I
jzHEh2V547kG0NH3eksD1f50ryEulLt7T+lHRx9OfLCe3JduGmLzzbmHLQcd
vXBj33z+3nTDEJOG1lqo96KjB1XPGd/Vky4M0QnfQVWloxs8CtxXetBPGQIv
t/pydzq6wPhZR6yu9JOGyNSwV35/Fzo6oVx9kd6ZfsIQX97ICVyd6OhHR6xB
akf6cUNcmeF7oHSgo4+33tVAbk8/Zojt+WYctdrS0Uu/dyvgb0M/aojpMVUW
663p6OELwhO6WtGPGKJ7t6+D1ZZ0dNMSVx4qLeiHDVFN2tZQbk5HF706+ZjV
lH7IEBEYWP4mdHSy/hWW6I3pBw1hVcqQyNWIjn6e/OMQtSH9gCH8t88/UhrQ
0cbWjY3k+vT9htg9csJxqy4dvbpWu0L+OvR9hpiVscxSvTYdPQYHnKsW3WOI
3vveDFVr0tGtJp1+rNjpew1hb7q2sVyDji5pG3vCiqLvwZ772LIw3sBCjg47
GblMr0bfjT03K0USV1U6+k37F8PUKnTdELcKGU+UynT0mZ8rmsiV6LsMgfP8
pFWBjl6/pGkRf3n6TkPM7VlkuV6Ojh5fJklSV1n6DkP0S/hkuFqGjm7nP/5U
KU3fbog6+AblUnR02cFDTlkl6Nuw55SGRf2RdHT61AVW6MXpWw0R70H8ZK5i
dPTHnfdHqEXpWwxxf+zhZ0oROhov32ZyYfpmQxzJMkBYBenoLXhg+QvQNxli
0aHcK/X8dPTkaX+TufLRNxpicMvbI9W8dHTnPPufK3noG7Dnvs5uLuemoyub
DsPKSV+PPTfPXtxvo6PDu+RYpeegr8OewyByZaejv/25MUrNRl+LPXdp9wtF
pqOvrXC1kCPoa7Dn+qimlYWO3llBifSH01djzyWNWK1npqNnxH5P4cpEX2WI
EZuvjVYz0tE9cHApGegrDdHMPq2lnJ6OVtJ39Vpp6SsMUexJpRL+NHQ05v0a
PTV9uSGSa59TusLo6LhGl8aoqejLDPEi25ZXSko6+ua7ia3kFPSl2HPHOsRY
yejova5yJf1J6UsMsaZturV6EjraXeB9Kldi+mJDjLXOjlUT0dGOM+tfKwnp
iwzRelF0azkBHY1z/7QVj77QEKXwn1+io3PGD1un/zsW8gWGSH39VZjrb6gl
9J813nHqH/p87LkBq98ov+noO1VGt5GD9HnYcylbnLF+0tEH7xYr7Y+jz8We
255svW7R0fNHP0vt+kGfgz1X51S0+p2OHpB5+VvlG3029tyLYW3lr3R0vQON
z1qf6W5DlJ9SqIz/Ex2dr3miDfpH+ixDZMj1KI3rAx0d//PR8ep7+kzcV6cW
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
xKFvItP9avUBdGbjvWrVfvQIMt2nNsSiMxvvUev3om9k77k0+X3qHnTm4Wv2
+Whj0Dew95zHkuuaaHRmu2aePdW70cPZe+5D+0TVLnRm471oww709WS6D63f
js5svAedug19HZnuP2uj0JmN9541W9HXkum+s3oLOrPxnrMqEp09AIz3mw2b
0ZmN95r1m9BXk+k+c2oEOrPxHrN2I/oqMt1f1mxAZzbeW1aHo4ex91w/22Oq
9ejM1Sz+1jesRV/J3nNPHq/Vr0FnLjyR/il1NfoK9p4L3TpFuwqdWXYLuKUJ
Q19OdKrhwD7qlejM+4uaJqlWoIeS6b6xIRSd2XjPWL8MfRmZ7henhqAzG+8V
a5eih5DpPrFmCTqz8R6xejH6UjLdH1YtQmc23hs2LEBfwt5zDvfW64PRmd+U
Hf+SGoS+mL3nboZP1c5HZ74SO/WOZh76IjLdB1YHojMb7wGr5qIvJNP9X8Ns
dGbjvV99APoCMt33TfVHZzbe89X6oQeT6X6vRoPObLzXq56FHkSm+7yqmejM
xnu8huno88l0f1c/DZ3ZeG83dSr6PDLd19X6ojPfKPG+p5mCHsjecxe6uqgn
ozMf3VQrRTUJfS57z40vbmSYiM681u7SRv0E9DlEQaUHvqeOR2eeciVkhtYb
fTaR+64x2Zpx6MzGe7bqsegBZLpfq/JCZzbeqzWMRvcn031avSc6s/EebaoH
uh+Z7s9qR6EzG+/Nakaia8h0X1Y9Ap35RJ7ZKZU7+iz2nkt+1sQwDJ15Y8iF
TXo39JnsPTdk94/UoejMMxoEzdIOQZ9BpvuvmsHozMZ7r+pB6NPJdN9VNRCd
2XjP1aBGn0am+636/ujMxnutqa7oU8l0n1XbD53ZeI9V44LuS6b7q+q+6MzG
e6sqZ/QpZLqvauiDzmy8p6rvjT6ZTPdTU3uhM/v7+flpe6JPYu+5HuoHmh7o
zAMrqwaoHdF92HtO/0On6o7O3PxITlNDV/SJRBYLTkbqu6Azl7lG/ErtjD6B
TPdLtZ3QmY33SjUd0ceT6T6p2gGd2XiPVNUB3ZtM90cN9ujMxnuj+nbo48h0
XzS1LTqz8Z6o1g59LJnuh2raoDO7jas/SN0a3Yu951p/TFO1QmduzR4whpbo
Y9h77lLCVn0LdGbjvc/U5uijyXTfU9sMndl4z1PTFN2TTPc71Sp0ZuO9TpUN
ugeZ7nMaGqMzG+9x6huhjyLT/c3UhujMxnubWmv0kWS6r6lpgM5svKeptkIf
Qab7mar66MzGe5mGuuju7D1Xf/82vSU6c5WXS/6m1kEfzt5zpz3namujM79Y
3SFPY4E+jL3nRlUdqq6Fziw2fXFWVRPdjSjF+B+CmqMzx/Ix2/XV0YeS6T5l
ajV0ZuM9Sm1V9CFkuj+pqYLObLw3qa6MPphM9yVVZujMxnuShorog8h0P1Jf
AZ3ZeC8y9V/m//tA9p6r6DZPW/5/V2AuyrZ9ovmLPoC95w79dVP/QWe+ND83
Q1WGribTfUfDL3Rm4z1HvQG9P5nuN+p+ojMb7zVqf6C7kuk+o6YUndl4j1H9
Hb0fme4vqr6hMxvvLRq+oLuQ6b6i/jM6s/Geou4Tel8y3U/UfkRnNt5L1HxA
dybTfUT1e3Rm4z1E1Tt0J/aeizphZ3iLzpwwZcNu/Rv0Puw95zCtkq4YnXl1
mVOwtgi9N3vPsS80mtfozJNiP7urX6H3IhoWcOuCqhCd2XiP0PACvSeZ7g/q
n6MzG+8N6grQe5DpvqD2GTqz8Z6g5im6I5nuB6rz0ZmN9wJVT9C7k+k+oCEP
nTk5dWWMPhe9G3vPhY2vrHuMzhw+ottC7SP0ruw9Z2PxXPMQnXlaSfFI9QP0
LmS636fSozMb7/UZctA7k+k+nz4bndl4j093D70Tme7vae+iMxvv7WnuoHck
03099W10ZuM9PdUtdAcy3c8z3EBnNt7L019H70Cm+3i6a+jMxnt42iz09mS6
f6e5is6scS7wUF9Bt2fvuRqcqLqMzqzO293BcBG9HXvPJQfF6gmduWnI8Go6
Gb0te88NabNEK6Ez/7KqUKgR0e2Iigv/81QL6MzGe3MqHr0Nme7LGS6gMxvv
yekz0VuT6X6c7jw6s/FenDYDvRWZ7sNpzqEzG+/Bqc+i25Lp/pvqDDrzkPZb
OhrS0Fuy99wvv/360+jMttfV5jodegv2ntujCtGmojMb77VpTqE3J9N9NvVJ
dGbjPTZVCnozMt1fMxxHZzbeW9Mnozcl0301XRI6s/GemvYYuopM99M0R9GZ
jffS1InoNmS6j6ZKQGc23kMzHEZvQqb7Z/p4dGbjvTPdIfTGZLpvpj2Izmx2
/mORJg69EXvPbbgxVn0AnblgbOIl1X70huw912p1F0MsOjP/deJB/V50a6Lj
Fx1r6fagM+/ZXme5Nga9AZnui2mi0ZmN98TUu9GtyHQ/TLULndl4L8ywA70+
me6D6bejMxvvgem2odcj0/0vbRQ6s/Hel2Yrel32nntE3uot6Myvju6/oopE
t2TvucVLuxk2ozPTwNHx+k3oddh7rp5DbV0EOrPxHpd2I3ptMt3f0mxAZzbe
21KHo1uQ6b6Waj06s/GelmEtei0y3c/Sr0FnNt7L0q1Gr0mm+1jaVejMxntY
mjD0GmS6f6Veic5svHelWoFuTqb7VoZQdGbjPSv9MvTq7D03s5WlLgSd+XC3
8jDtUvRq7D1XMe+dZgk6c1j2mYnqxehV2XvuUNQ11SJ05onzZ/cwLECvQjTU
ZVCCPhiduUet5nV1QeiVyXQ/Sjsfndl4L0ozD92MTPeh1IHozB+Gaq+r5qJX
InpirelpmI3OfOO1a6I+AL0i+351tkk9nT8689H1pau1fugV2HtuTPYHjQad
eV3LlEnqWfA/mYI/b7ihmgmXy+QrT+tlmA7/lWlElPNR/TT4j0xOU6zr66bC
ZTK1c/iyRusL/5bJuuzWR80U+JdMlW8em6yeDBtk+rp37U3VJPinTM/9J/c2
TIR/yHS3Z69j+glwqUxClXpWuvHwd5nYH99arTf8Taa9Cdc+acbBX2XauPDI
FPVY+ItMi9Vht1Re8GeZZlpO6GMYDX+SaXRBtyS9J/xRJtdUiwY6D/iDTB3Z
A187Cn4vk82Iy581I+F3MpnbHPRVj4BLZPr5dtltlTv8VqbXmV5OhmHwG5n0
EZ2S9W5wsUwXvc2tdUPhIpl0bV6t1w6BX8sU9136ohkMv5Ip8nLsVPUguFCm
0J2L76gGwi9l8p/u4WxQwy9kGtel/XF9f/i5TIP+VW6oc4ULZOp2tyBc2w9+
JlOLOO6rxgV+KlPtwOhp6r5wvkx/nILvqpzhJzKVmLv3NfSB/5MpN7fNCX1v
OE+mrKQKjXS94FyZzi59skHbE34s05HBGd80PeBHMm232jFd7Qg/lGlV4dx7
qu7wA5kC04e4GLrCepl81rZM0XeB78vk5vmnka4znCNTT+M/mO8EZ8vEvm59
13SE78lUT9wyQ+0A35Wp4hb/bFUH+I5Mn3wG9DPYw7dlemrf9KS+HXxLpluG
n411beGbMl24dj9CawffkCkp5lSppg18XaZozaaZ6tbwNZnWO87MUbWCs2Ra
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
+do7uKVIzXJ3zqisuIVIYvVSlboEbi7SlD7jH4e9hZuJ9Gf2hR3cG7ipSAf2
2Yz4WQyrRHK+FVbVUbGNSE/KCii4CG7C9sRhwIpTr+HGIjWZktij5BXciO3J
1qqf7RQ3FGmiFHBiZiFszfbk481Z8S/hBiLtbd6x+dMXsBXbE89teY0V1xfp
8Zovu7yfw/XYnqR5jdpVANcVyfrluerZz2BLtif1Gl2upbiOSOMGLg8b9hSu
LVLpovxeG/NhC5F2J/b7eukJXEskx4fxJ//9B9cUSV/FzL+v4hoiLeqpaRma
B5uLVM//2pNzuXB1kdL32Md8fQxXY3tyPdKzs+KqIn0xfKgR+AiuwvbE3vNq
8kO4skhdfNJXv34Am7E90Vo52SquJFIQv/S7rx6uyPbkfW7q/vtwBZFSVc6z
c3PgfwKNGhnXqoHicoE+hP17Ojob/ivQ1tTpe6PuwX8Ecii4PObWXbhMoNt1
7CyqK/4t0Nz+m64NugP/EqjmgpK1a2/DBoFOHB7RV7oF/xRo+P3UH79vwj8E
elupblovxaUCbe6+aO7iG/B3gexnPWyTdh3+JtD13b2ef7gGfxUo4GrsvvaK
vwhU7UfZWP8s+LNASXa+dRKvwp8EGjKebjy/An8UqCjCNryp4g8CbcgM7+dz
GX4vUJu3RYaYS/A7ga40HnZGfxEuEWjW8JR5lorfCmS2wqLdSILfCJSQEvRy
swwXCzQgP+dAlgQXCfSyluN4M8WvBVrrElO3vwi/EqjlfMOtlQJcKBAd9Nl4
gYdfCjTtntD/Bwe/EIj9kpd1U/xcoENd1p4LugAXCOQ6vTDoZCb8TKBnOwa3
f3sefirQqktJr9oozheo6TfzQzMy4CcCia0CJx46B/8n0OSxd+vnn4XzBPoT
3uVuI8W5Au0/t3PTuDPwY4Gci74P2JkOPxLoP+vxf++mwQ8FWj70wvmaih8I
1HiZzUK307BeoAvJYQ4bdPB9gSbkFRRdTIVzBDKYDzhcfgrOFmiPU+IkZ8X3
BOo1t6r1spPwXYEe7w/IPpsC3xFo6e2b2i8n4NsCWf91GNxJ8S2BznXc9m/O
cfimQON8v1xISoZvCPQ9ymvxqyT4ukC75XOdWiq+JlD3zw3fTjkGZwmkb7E8
Yd9R+KpAC0fnT3mcCF8RqN66fo2sFF8WKC09/r5nAnxJoNGFlbZuPQJfFOhz
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
Xu155UEo3JenCT/2rqqr2JntiV1Z71HLYCee9oyf8k0bAvdhe7JJPnVtKdyb
p0eZLQMqK+7F9uTtelv1ErgnTw2aFOWHLYZ7sD0Z7raHWwQ78jR2xYnRPxfC
3dmepNSq5ai4G0+78udnBS+Au7I9schZcyoY7sLTfZfuziVBcGeeFs6PLrVT
3Imnuod+6mbOhzvylHZv4pz4ebADT54VhNZPA+EOPH3u0qygseL2PG2bvibW
ey5sz1PnnS+9ds2B27E9uTSodvZsuC1P878du15LsR3bk9bm64cFwG14OjV2
rstGf7g125MNd35e8oNb8fT+XOf0fxrYlu1J0Y7Avopb8tSh4Xe70FlwC7Yn
Q71fnJsJN+dpzrLM/V9nwM3Ynhxv4t1ZcVOejuettAycDqt4Glaj4GbyNNiG
pzdO6g2vp8JNeNo0N8HVVnFjntoeqPLb1xduxNO12/5n90+BG/Lk9/fG/NzJ
sDVPVTs52DdQ3IDtiW9U4ehJsBVPg7d9jovygeuzPZHHTLg1Ea7HU/jns/Wq
K67L9qRlwzuDJsCWPF0eHRqxdjxch+3JuidqyRuuzVOlMy5/fo+DLdieFB7K
6KW4Fk9qq0oLFo+Fa7I9GTSrQ5oXXIOnNUuyXn8YA5vz1OJYu/j2iqvzJD/S
+viPhqvxNLXaB6tET7gqT+W9PO4994Cr8HQwIG1zU8WVeXKJrT/IZxRsxtPT
G0vKY0bCldie/H6cqR8BV+RJ1cFpkaXiCmxPJh3oONId/sfRpC3lxZuHw+Uc
lQnTjmQNg/9ytO/Dpclmiv9w5NSsTcP+bnAZR3mjInJWDoV/cxS6+m3khSHw
L44anXYf8mMwbOAo8/mpCt0V/+RofF1LPmgQ/IOjn+qFS04OhEs5iln4oPPb
AfB3jnom9Cxpo/gbRw/1exNnqOGvHC2pXOZ7qD/8hSOrHlMa57vCnzk6q5H1
jRR/4mhsTMuocf3gjxx9y1rvttMF/sDRrp+vK93rC7/nqFs7N7Gm4ncc3Z9w
IsTNGS7haMHmWt02OMFvOarLzX9/sQ/8hqPTJdnHynvDxRx52nSf7qy4iKNP
7tE2y3rBrznatvLnw7M94VccdTo1cfuXHnAhR3ef8sM7KX7J0bzazarMdYRf
cGThukZO6g4/5+hk0MvQV93gAo5GxA9ybKn4GUfvso99nNIVfspRZEXz4/u6
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
ps2PPpXoSDVarnpkNk2kt6kx/WHSjgINHaHG/v6+emPVdLgaDw7YrLyspMPU
aP77/btBCnqjGlO8NN6ZMjpUjb3nVty1T6ND1Ci07O8iS6XXqtFk459sq+N0
sBqTXqBH4jF6lRrRTltSmx+lg9S4fWxMq93JdKAajeo0ijY8TAeoMX5eoUFY
Er1UjZ1X49b8PkgvVuOG7cyKoATaXw2jyLZzKuLpBWqM+fDy4fz99Dw1trmm
ub7YR89V46pq8UXPWNpXjbqNe/S9F0P7qDEq4Lt8/B7aW43wO6fbXt1Ne6lx
uWdo7LAo2lMN/Vin+md20tPVGP69bmivHbSHGhs9bnxRbqenqHHh1O75Ntto
dzX+mU8pPhxBu6kxZK35pJZb6AlqrH9SfCVmM+2qRvagI47GYfRYNX4n+Wm2
bKRd1HD819n6XyjtrMYan4r44PX0SDWyLkoNv6yjndT4YbU6bNFaepgafcMH
/igLpoeosfLVv0Xeq+lBamQ45zx/uJJ2VOPriW1TJwXR/dXoWX98Xl4g3VeN
5f5Nho5cTvdWQ7hxP/3cMrqnGp/sEmz7LaUd1Oge5Z0kLKa7q7Hkk1XTLoto
OzVUbm8iji2ku6hRLip+t15A26rRtVlAQNw82kYN/6Derxr70dZqyO7/nLF9
Dm2lxtu+5/L1fel2anSK3zQixIe2VGPer1FZ373p1moc9zTqtmwWbaFG2dn8
I29n0uZqdGiz18zXkzZTwzd02o4n02lTNY48a6U3dRrdVI3nw54H5U+lTdRo
ezTl3egpdCM1vGsv9L7oThurkTS3213HSbSRGsVXPo/OmEgbqtGqU2Z2twl0
XTU8t63tccKVNlAj4d2Q1HbjaH01Ho2t3SphDK2nhrny6u5mLnSNCtMa7jTY
5Uz/USFuqduauqPoahXu3zat2DCC/qmCaY9Hvr+G01UqTI5Jehg4jP6mQszX
2a7lQ+gvKtyZYnPRbzBdqYJJ5vs+zwbq+q/CxBYa+XRHXf9ViApe0bawv67/
Ktx61C92XD9d/1UwHvjH8EofXf9VGJeI9UN66/qvQuTf8C+neur6r8J17zHz
e/TQ9V8FQzQsltvr+q+CS/tCN+vuuv6rsDUs7kqSna7/KuS+9HRs0VXXfxXq
jGqrie6s678KI1NfdjCy1fVfhc310uI32+j6r8KlBYsb/rXW9V+FWnkOYas6
6PqvwrCu36s+tdf1X4UNO08vWthO138Vzn9c/7zUUtd/Ff5OcJrq1UbXfxUG
CXXz7rfS9V+FdU1uDJlooeu/CmcCd6dfM9f1X4VfdyfbOrXQ9V+F/n3Mk842
1/VfhdVxxU36mOr6r0Lmj+QIdVNd/1Womu73u1MTXf9V6HOmc8CRxrr+qxDU
qqLMopGu/yqkh0gzYo11/Vfhy9NV+Q0b6PqvQo+hA0dsra/rvwoByf9O6Rnq
+q+CplaO3dq6uv6rUOG77chXA13/VeiW42q2pLau/yos7thkx+tauv6roIi4
/+8/PV3/VXj/5kDQo5rj//chFTqP8X7n/pdOVGGB3Mr75m86QYUTDd4Ujqqm
41V4vVgx+sJPOk6FjvnLsvv/oGNVmGvfu4f0nY5RISX65/Gu3+hoFV5+zrY4
/oWOUsFq8qbdlp/pnSrMzhhlEP+JjlQhubnRmiYV9DYVnq3K/xhZTkeoYFkU
42vwgQ5XYdaAaQ/Xv6PDVEhMaOX64w29UYUnv58h4DUdqoLFrJQ+78voEBVm
nF8gn/OSXqtCfNtubZ++oINVeLjx816P5/QqFcxKTxoWlNBBKkwdsXb9mKd0
oAqxKUO+XHpCB6hwt07t+YMe00tVaDr/6pOTRfRiFdyv7XCzf0j7q7Cns9uV
tPv0AhUKIk0dre7R81RoXF6kPlhIz1VhwvikDs3v0L4q7FLPjo+6TfuocLOx
TUPDfNpbhQbL32/adJP2UmFsobqqOo/2VGF7rxWLgq7T01W4Ftvv+certIcK
9ap+T5mfS09RwXkarj/Pod1V2JIVPsTzMu2mQk7LMel3L9ITVKi9rqHteNCu
KjgV30nMPU+PVWHT4Lgmw87RLirgkGfE6bO0swp6em1/9zxDj1Rh6OyXy5RZ
tJMKoZdOlHU8RQ9T4VyHxTMOn6SHqPAn3CHfPIMepMLA19+cYiTaUYW1o0+f
aiDS/VU4nbbebouG7qvCz/pOR2pUdG8V+i2qaxaspHuqsOpmXuRnOe2gwslu
u//5y+juKnyLmhxUdoK2U6FXZYt3s1LpLioETiqe9TCFtlVBlJIL3Y7RNipU
NvMbnXeEtlbBfmXn7BHJtJUKSx98dDh3iG6ngrqfdLxvEm2pwsf4VRbCQbq1
CnbVjrs7J9AWKiya+a/2sXjaXAV59uXg1vtpMxXetdn2cd8+2lQF2w2uvo1j
6aYqzH9u8nBbDG2iQurw++P099CNVHh19ADW7aaNVbA28O7zfRdtpMIcPyv5
0p20oQpHc19bvo2k66rwopNi7+zttIEK7bYvM3yyldZX4b/3vdZPiaD1VDg0
7ufnW+F0jRJPldnzRm+m/yjRutGmJ9hEVysxc9koN8eN9E8lDhbUv5IeSlcp
8bhH/oBu6+lvSrTcG6NOXUd/UWL6N48O7dbSlUrsn9oq/kAwXaHEg8xnxs1W
0+VKNDdP2bRzJf1eiSlrFlTVCaLfKrH3sd2iDYH0ayUKB35+9jOALlOiSdLJ
KYHL6FIl3GrWXP+whH6uxO7/hgzxW0yXKJEP/fQSf7pYiYZWVztNX0g/VsJ1
847EO/PpIiV2lE1sMm4e/UCJvFGmETlz6XtK1D9RVD14Dl2oxBjDpGWnZtMF
SmxbOLvMwYfOV+JqXscZcm/6phJ17d7f6jCLzlNi1C61U9JM+poS4RWBp8w8
6VwlLk/sZxc9nc5RQl/8nVx/Gn1JieFN0XzzVBpKbFwRHvlnMn1eiQv3XP6t
dKezlajp0zDokxt9RonB+++8XTCRzlIi5Oe+WaXj6Uwlzs7wLJzpSmcoUX3G
cvT9sbSkxIDWL89OGEMLSgSvP+FwbTStVuJUyaLjw51ppRI/hjpYnB1Jy5Xo
e+RbVO8RdJoSK/VP11YPp1OVyJizPrjTMDpFia85wz8mD6GPKtHTpq6vxWA6
WYnlW/Me7B2o678SwtuocQ0ddf1X4tOYyYjor+u/Et0VLfro9dP1X4klxsWy
NX10/VdCuSTZ8msvXf+V+JA/d+/inrr+K9HFobPhawdd/5VYuOdjyH/2uv4r
kfZF/FzUTdd/Jd5MXjXP3U7XfyVsTjo+udFF138l/Mz+TRzVWdd/JY6vvpxz
vpOu/0qUFW0d0N9G138lOji6qkVrXf+V8D1o0qFrB13/lTjy597+lPa6/ivx
fNYBY8t2uv4r0fbCrE37LXX9V8K7nVWVSRtd/5VI2vTaP7KVrv9KFJfKn9W2
0PVfiVYjl01Zb67rvxKex3tdrzLT9V+JA3V/Dg5oruu/EkXzs6V3zXT9V6LF
9Y2d5jTV9V8Jjy6jEotNdP1XYt+O+k08Guv6r8S98ltbbjfU9V+JZhNiql2M
df1XYrLGY9klI13/lYgxaVU2sL6u/0rcWf5s+sl6uv4rYXL32K3udXX9V2Ji
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
m1zoUvztWANW2+ST+Ojyk3qcYpNx/wRM9MvGKpskj2l48kAWTrRJ6Y6LA/to
cbxN6jfU7srX4FibfL10hkeXDBxtk8Tz7bLNaXiTTX71utuwlRpvsIlr+tZN
6Sl4nU1G/bv4Tf1kHGWT2CCv8JgkvNYmJ/ZV3qqWiFfbxKXFgW9Wx+OVNhm+
+sczL2JxpE02Xftq6OIYvNwmvwysXXhvM46wibPhTNdZm/BSmwz9KNX4xwYc
bpN1syY3mbgeL7LJ4aMt4s78iMNs4tSx/P3wKLzAJoM2WSIOr8WhNll7N/R+
vzV4rk0O+HebUbAKh9jkbe6Tc91W4lk28amzZ7g9EgfbZFXYyiL37/EMm+z/
deAX2u/wNJu86l7d9kkEnmITb9Xx5glLcZBNvn8Sl1RzCZ5kkz3jAp2jFuMJ
Nnmxq/GKVwvxOJt4ffr7P0vDcKBNli3PnlWxAI+xyc7L/7s8Zz4OsMkT704B
f87DI23iqX0gQXOxv00Wv9ne61wIHmaT7dOWbRk1G/vZ5J8Dfdr88j88xCZd
21SlDgzGvjb5NkpcCmfggTbZemPDmi+mYx+bPBgy4umWqbifTTpb6s7rMAV7
2yS0xrk/soPwf/8na5+bHth0MvayyZ3jU35RTcQ9bdKxc5t+tSdgT5uExP61
ff043N0m5r/t7d8G4q42uRkQpln+Ne5ik7bbPes+Ho09bBJc/8WP8wNwJ5vk
hO97eXMk7mCT67+t+XbaCNzOJq2+HFJ+cTh2t8k0dc2JXw/DrW2S9eLkiRI/
3NImVyYlDRwyFDe3SbPC8bt+HozdbPJNMzePXr64iU00K6/qtg/EjW1y+Q9D
Q48BuJFNmgyYs8nYX/n+22SivvOb5v2U779N1O//Waz2Vr7/NjkfvPNW3T7K
998mjY4s/2ZzL+X7b5Ox7fufcfJSvv82UW14P2RlT+X7b5Ozt4/ufeapfP9t
Um94dNeFPZTvv01GOwKMd7op33+rxH/csElwV+X7b5VTCy7G/t5F+f5bpfbp
zPfjOivff6uM6DYj4vRnyvffKtGJ7e5/1Un5/lvl+KM70w91UL7/Vqk1dus5
7/bK998qw3YuHr6zrfL9t8rGT7yKPndXvv9WKY6o9LS2Vr7/Vql+qcjaupXy
/bfKkD4/Nte0UL7/VvlR81VSw+bK998q8upj5zg35ftvlfdTzkQ6N1W+/1YZ
WJTyz5pPle+/Vda0mjzr30+U779Vita2uBzeSPn+W+XNn3+OetBA+f5bpd9g
i8yur3z/rbLCFNrrWl3l+2+VwurdtkxyVb7/Vvk35Enr0trK998qvY/tTh3x
sfL9t8p3n610OVpL+f5bZXf0wDU+NZXvv1We36/2dLez8v23ypejjs/tUV35
/ltlaV7cH46PlO+/VX6qGxjYzkn5/lul/JpHbJ+3OR8sVplh+GlZl9f4oFWu
zuo3vdW/uMgqUzoeHdbgOd5vlbK7ozyrP8GFVpm05UKzl//gPVa5EDa9+v0H
uMAq43rcqfjjLt5pldIniy6duYXzrTKm4N9Dh2/g7Vb5dXlUbsF1nGeVUX0/
TrX/gbdY5cSb5NXaMuywyvCDzecmXMQ2q/wSZf466hy2WGXo0K59l53FJqsc
rrG73dzT2GCVQSUDXL85gfVWORB77MWoY1hnFZ/RX/858CjWWmV//bKSLwRr
rOJ9LnhnhwM43Sp71Pezmu7Haqt4TV66sfZenGKVnc3eLHq7C6us4nl1fdDj
fJxole161yF/bcPxVun6v7TPL23BsVbZ0r71pyfsONoqne/Y3v1swZusYnf0
uLfdiDdYpeO3hb8Z9XidVczdBv+szsJRVmn7+IRlswavtUrOznGJK9Pwaqu0
+u6P7xem4JVWyeoT8r/gJBxplWavK0aOj8fLraIp+s5rWAyOsEqTH9616rsJ
L7WKevDmWl3X43CrNHJu8KR1FF5kFdUxzZWGa3CYVerFtC12XokX/Pf3adSW
bf8ux6H//T2q92XGg2V47n9/f0p/jroWjkOsUjPVb0HpQjzrv78vE38df3QB
Dv7v74nbpAF75uEZ//39uHK9U24Invbf3wvdvAa6/+Ep//19mPn4VeIMHPTf
34O2K/76cSqe9N/93/ro14ggPOG/e7fF7pk3EY/7777nf2KYMg4HWuXZ57qY
0V/jMf/d78MOy3wDcIBVHudvm/blCDzSKouW9R7WaRj2t0pFr0M9mg3Fw6yy
oHJ4M1df7GeVe/tLq733wUOsMnfNNxVP+mJfq9wadPPird54oFVmVfv20OUv
sY9VbhQ/c5z0xP2sMnPz6pQD3bC3Va6NqLE6vwvubZWprolzzJ9hL6v8fqbJ
1+kdcE+rTE7O8Y5piz2tcnG8R7vVrXF3q4xv8lOdxS1wV6v8Vtb3xf/ccBer
fJ115PqET7GHVc5MH1UyvBHuZJUA9ws/9auPO1jl5M1pWd1ccTur+Ftvb3D/
GLtb5di8RYs+qYlbW8Wvy7+Ta1bHLa1ypOKHwa/e6z+4uVV8d7h8XlGF3axy
cEly4z9f4SZWGeDV/N1vL3Fjq/z80nS3+BluZJW++z7/be9j3MAqe1cV7N/y
D65nlV4DB1iyH2BXq+xyOpaguotrW+WLo2O+X38Lu1hlx8bLwctv4JpW6eYf
PHL+dexsla2173857Q9czSpdfl3S6usy7GQVR9LrmkMu4ncW6TRu/WOvc7jK
IpbGrlc+O4tfW6TdZfXR5qdxpUUMma221T2BX1qk9TRbutMx/NwiutY9op4d
wU8t0vzG3vl3DuHHFsk0+47/vQg/tEjTuSd8Tu/DFRZJ8xjX6dAe/MAin/x9
pf7OXfieRZK3zX5lycd3LFI/vOJmxjZ8yyIJPb87HbsF37RInRdvd6+x43KL
xOzdlBNuwdctUmtl/ZjZRnzVIpt8NEsn6fEVizi/d582IguXWWTd4dyvfDT4
kkWcNvTs0SMNX7DI2mE/u7VLwecsUuXiV+3TJFxqkZWnTv9dKx6fsUhlwsSL
r6PxaYssD7x+8J+N+KRFnjea5yhfh0sssuzio+TzP+BjFnmSEbnq2GpcbJHF
Uz6as28FPmKRf1rGjslbjsUi3/7ZyDtnGT5okfvGrLYp4bjIIvNCOtTZuBDv
t8jtTtuef78AF/73b5/7va4vmIf3WOTm1oPHp4fgAosELxr+U+D/8E6LXPcs
1Q6dgfMtMu1Z0IbeU/F2i1zZfWNh5yCcZ5GgyAWTW07EWyxyqd8z3/rjsMMi
E96u6lLta2yzyLlDzo1fjMIWiwSuS3h71x+bLHLWr8ndK19hg0VG18op/XUI
1lvk1InP9ssgrLPIiPh88y4frLXI8TF9E2x9scYiXzU8sjyzN063yNHzI4Pj
v8RqiwxOPz/iB0+cYpFDQdO+XNoNqywysMXtlnO64ESLFF1bWDPoMxxvkX6G
l49GdsCxFimc9cPvA9riaIv07uhy1LM13mSRgruqvPYt8AaL9NzSLL2JG15n
kfww0w8ff4qjLNK9x+fzqxritRbJe7Jr3KN6eLVFPi/w8blZB6+0SO7yXzpe
dMGRFvms75j6JTXwcotY31yq3F8NR1ik/cGZN7e9z/7gpRYxRt07ZajC4RZp
M3TJ7tRXeJFFsmu81m96icMs0qJkXfSKZ3iBRbSxdZaGPcahFnEbrZ468x88
1yLp9Vt9Ne4BDrFI43PW7l/dxbMskqLu7uZ9CwdbpMHkvR99fgPPsEhiM9+/
W13H0yzierXkQoM/8BSLxOrHHqxehoMs4vK/K/aXF/Aki2xuPzv5/m94gkVq
3Pl75dUzeJxF1jsiQs6ewoEW+ejbt6OPlOAxFvmh26Y+u3/BARZ5+6heW8cR
PNIiq3Zm1M46hP0t8irC/XlCER5mke/75F6L2of9LPLy1RfHl+3BQywSUbQ/
f+4u7GuRp2uHar/JxwMtEj749PqAbdjHIg+rT1w4aAvuZ5GwY9cm9bRjb4s8
iJ7r29GCe1skdNSjzm5G7GWRO3UjP6mjxz0tElLq9PatFnta5K+UmDuPM3B3
i/xvYqPSv9S4q0X+bJq171Iy7mKR6Vfam08kYg+L/KHLiy+Kw50s8s3MXst3
ROMOFrnc9uBM00bcziITbw0bkbYOu1vkvO1sz+gfcGuLjJ0f1HLVatzSIqWf
36ixaAVubpExD+c/Cl6O3SxyOv9p2fhluIlFRi5bdWRYOG5skZJeznl9F+JG
FhlWGZ/WdQFuYJHi/Z/+0GYermeRIWv0oY1CsKtFZNBn42r8D9e2yKBq+f0r
p2MXixwo9u749xRc0yL9Nx+ud30ydrbIvhEjK0sn4GoW6eN6/sbRsdjJIrvP
TD21Zwx+Z5Yvk28V5I7CVWb5afxCvc4fvzZLjyYvNyd9hSvNsq1s7ZJ1Q/BL
s3TNqjX1u0H4uVm2TFf5hfrgp2bxcG/WfWpf/NgstpvGpmN644dm6WDt8tHg
L3GFWUzzdj340hM/MIt7F58Lnbrhe2bRVxQfaNYF3zFLyx2j7a6f4VtmyVpy
SfW+Pb5plmZeM1c+dcflZsl4eXf27Vb4ulk+3Rc+uqw5vmqW1FWvep9qiq+Y
peHAde4HG+MysyQ51an9U0N8ySx1j6Y+M9fDF8wSt7HltfQ6+JxZPva3Hotx
waVmia7dPX91DXzGLDV/3ZO5uBo+bZYNSYPWz3qv++CTZqk2riRsYhUuMUtU
47GT/F/hY2Z5d+n3Qf1f4mKzrM6c1bn7M3zELK+n/t2o7WMsZolsHVH1yT/4
oFn+La+6XfMBLjLLd+aNZ1/dwfvN8mxOvX0Vf+FCsyzxyDD9WY73mOXRgzbx
567hArMs3Ob47pcreKdZ/l78xczCyzjfLPN77vffegFvN8vd50N66n/DeWaZ
s/dUi+QzeItZbq2YUGPDKewwyyyfaw+Xl2CbWcrfzSmb/wu2mGXG4YeHpx3B
JrNcXf/91q8PYYNZpgxzShtShPVmKXOJWdtrH9aZZdKphqEee7DWLBcStGNb
7MIas4wLbN+/Xj5ON8tvjfI6fLQNq83y9UWves9zcYpZfs048O8dG1aZZdSU
YTd+N+NEs5xoefbkaQOON8vwPycXHMrGsWb5xVievVOLo80yNGT+ZmsG3mSW
w52ehmvUeINZfO+vnBKXjNeZ5eDW6n5rE3GUWXwWxXdbEofXmmW/56dNQ6Lx
arN4P8t2mrwRrzTLnt2dHoxYhyPN4hW547zPD3i5WXb28z7QYzWOMIvnW7G1
W4GXmmX7oRGqT5fjcLN0W3duhcsyvMgsW/2mzn6zGIeZpXOtWwEPw/ACs9hP
hPW+MR+HmqVj/Is2F+biuWYxj1n78fHZOMQsbRvWerYvGM8yS875pKt503Gw
WVqlux3LmYJnmEUXZNyRMhlPM0vzFl0yN07AU8yiubZzXeRYHGSWJob+Yd+O
wZPMop5VPHHGKDzBLI06jh401h+PM4vq7kUPv69woFnqbZnRqM8QPMYs8WF3
33QehAPMUrtH+O2WPnikWWKeVJ6p3xf7m6VWwY+F1XrjYWbZuLy26UVP7GeW
6n1T4+71wEPM8uObFt/90RX7muX9AcuMM53xQLOsiermf7gT9jHLmyF7viho
j/uZZUWNQS3s7tjbLJXHjztrW+HeZlkeG/gwvjn2MsvzgN8v/9AU9zTL0vqz
Di9tjD3N8vi3B1vmNMTdzbJIvUwdVA93NUvFpKo1o+rgLmZZ0GzjvIEu2MMs
9/6oO/aLGriTWebq0/t1qIY7mOV2cJsOTd9nfXA7s8xu76hbuwq7m+XGbc9/
qypxa7PMdOwrf/QCtzTLtQVDTt58ipubZWq3U7suPsJuZvn90fjskgrcxCyT
d17d9PN93NgsFyPmhG+/gxuZZXyfh98Y/8INzHLu1fKh6nJczyyBRe+7br6G
Xc1yZm10k5VXcG2zBAxu6LTwMnYxy8nq2vszL+CaZvE/1u78uN+ws1mORW8t
+uoMrmYWv1FeNu9T2MksR+oeSPq8BL8zyeDSr1a0/gVXmeRQyplZDY/g1yYZ
MHFygPMhXGmSn5uW9/r3Z/zSJH2vhLZ5UIifm2Sv7onLtd34qUl6/ff5PbsT
PzbJrrbVrx7ZgR+a5Itbcb/szsMVJtlha7zDkYsfmKT7/GxNlg3fM0ne553W
JZrxHZN0ebj92x8N+JZJHPl9JkZk45sm6bRMBs7T4nKTWHqN8JiSga+bpF3l
bw1Hq/FVkxj2T3kzKBlfMUnrNX/d6pmIy0ySPSjsTMc4fMkkLaq92OsWjS+Y
JLN4jbHORnzOJE0314x79yMuNUnaiKSIJ2vxGZN84uo249YqfNokyWcMwy9H
4pMmqZ/c+YuT3+ESkySM39n8wFJ8zCR1mvR3zl+Mi00SW3b0H1MYPmISl6yA
y2nzsZhk0/SLEj0XHzSJs/uMLatm4yKTrLt5J3VRMN5vEifr4jX/m44LTbJ2
XuXcCVPwHpNUdf4xcPhkXGCSlRUf9+s3Ae80yavtKe27jcX5Jvl+SYu67mPw
dpO8+NLystEonGeSZS+7ltfwx1tM8qRw94lKP+wwyeJVA3f9PRjbTPLPgOO6
6wOxxSTfOgVu+q0/Npnk/pGyxcXe2GCSeRv/983eXlhvkjvDHwzZ0hPrTBJS
e1nX7B5Ya5Kbp998quqKNSYJTtrwfl1nnG6S62Pr3v+uE1abZFrj9HOh7XGK
Sa5cal001R2rTBKUabeOaYUTTXJpqmfS4OY43iQTWu+L9GqKY01yvnzwrM8a
42iTjDWfHNW8Id5kkrNzxveqWw9vMMloj6utnergdSY59SDE5VktHGWSEdv+
eXLbGa81yfHFy/8o+wivNslXPd8Xn3qn/eCVJjn6fPP2g29wpEmG7G2g+akS
LzeJrMj80fICR5hkoE+7bzOe4qUmKXq3ZULsIxxukn6Hvxy4pgIvMknh+qLP
wu/jMJP0HvZVw9l38AKTFLiceT3xLxxqkp6nJt3yL8dzTZKf8Oev/a/hEJP0
CAzd2/0KnmWSbY2eGNpexsEm+fziitjGF/AMk+RmVIuo9RueZpLPpsRNf/0r
nmISa8vGw/85iYNM0v5PnWf5cTzJJEZjx+bni/EEk7QJ2V792GE8ziT6Tn3+
KTyIA03S8v6hS1t/xmNMot3qL/pCHGASt0W/5SbvxiNNku45JXXDTuxvksbP
bq7+fgceZpKU3d/OXZCH/UzSIPL519Nz8RCTJPZb0zfQhn1N4vq2RvuhZjzQ
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
bxVX6NlXxff07KniW3r2U3G5nr1UfFXPPiou07OHii/o2T/FpXr2TvFpPfum
uETPniku1rNfikXPXiku0rNPigv17JEq969nf1S5fz17o8r969kXVe5fz56o
cv969kOV+9ezF6rcv559UOX+9eyBKvevZ/9TuX89e5/K/evZ91TuX8+ep3L/
evY7lfvXs9ep3L+efU7l/vXscSr3r2d/U7l/PXubyv3r2ddU7l/PnmbaB4fo
2c/EwXr2MvE0PfuYOEjPHiaeoGf/Egfq2bvEAXr2LbG/nj1L7KdnvxL76tmr
xD569imxt549SuylZ38Se+rZm8Rd9exLYg89e5K4g579SOyuZy8St9SzD4nd
9OxB4sZ69h9xA7182HvErnr2HbGLnj1H7KxnvxE76dlrxFXZ7DPiymz2GPHz
bPYX8eNs9hZxRTb7ivheNnuK+FY2+4m4PJu9RHw1Wz7sI+KybPYQ8YVs9g9x
aTZ7h/h0NvuGuCSbPUNcnM1+IZZs9gpxUTb7hLgwmz1CXJDN/iDOz2ZvEOdl
sy+IHdnsCWJLNvuB2JDNXiDWZbMPiDXZ7AFidTb7f1iVzd4fjs9m3w9HZ7Pn
hzdks9+Ho7LZ68Ors9nnw5HZ7PHhiGz293B4Nnt7OCybfT0cms2ennL/2ezn
KfefzV6ecv/Z7OMp95/NHp5y/9ns3yn3n83enXL/2ezbKfefzZ6dcv/Z7Ncp
95/NXp1y/9ns0yn3n80enXL/2ezPKfefzd6ccv/Z7Msp95/Nnpxy/9nsxyn3
n81enHL/2ezDKfefzR6c+oMbZ7P/hhtks/eGXbPZd8Mu2ey5Yeds9tuwUzZ7
bbhKxz4brtSxx4af69hfw4917K3hCh37aviejj01fEvHfhou17GXhq/q2EfD
ZTr20PAFHftnuFTH3hk+rWPfDJfo2DPDxTr2y7Do2CvDRTr2yXChjj0yXKBj
fwzn69gbw3k69sWwQ8eeGLbo2A/DBh17YVinYx8Ma3TsgWG1jv0vrNKx94Xj
dex74Wgde154g479LhylY68Lr9axz4Ujdexx4Qgd+1s4XMfeFg7Tsa+FQ3Xs
aeEQHftZOFjHXhaepmMfCwfp2MPCE3TsX+FAHXtXOEDHvhX217Fnhf107Fdh
Xx17VdhHxz4V9taxR4W9dOxPYU8de1O4q459KeyhY08Kd9CxH4XddexF4ZY6
9qGwm449KOX+dew/KfevY+9JuX8d+07K/evYc1LuX8d+k3L/OvaalPvPYp9J
uf8s9piU+89if0m5/yz2lpT7z2JfSbn/LPaUlPvPYj9Juf8s9pKU+89iH0m5
/yz2kJT7z2L/SLn/LPaOlPvPYt8o9YNLstgzwsVZ7BdhyWKvCBdlsU+EC7PY
I8IFWewP4fws9oZwXhb7QtiRxZ4QtmSxH4QNWewFYV0W+0BYk8UeEFZnsf+D
VVns/eD4LPZ9cHQWez54Qxb7PTgqi70evDqLfR4cmcUeD47IYn8Hh2ext4PD
stjXwaFZ7OngkCz2c3BwFns5eFoW+zg4KIs9HDwhi/0bHJjF3g0OyGLfBvtn
sWeD/bLYr8G+WezVYJ8s9mmwdxZ7NNgri/0Z7JnF3gzumsW+DPbIYk8Gd8hi
Pwa7Z7EXg1tmsQ+D3bLYg8GNs9h/wQ2y2HvBrlnsu2CXLPZcsHMW+y3YKYu9
FlylZZ8FV2rZY8HPteyv4Mda9lZwhZZ9FXxPy54KvqVlPwWXa9lLwVe17KPg
Mi17KPiClv0TXKpl7wSf1rJvoty/lj0T5f617Jco969lr0S5fy37JMr9a9kj
Ue5fy/6Icv9a9kaU+9eyL6Lcv5Y9EeX+teyHKPevZS9EuX8t+yDK/WvZA1Hu
X8v+h3L/WvY+lPvXsu+h3L+WPQ/l/rXsdyj3r2WvQ7l/LfscKR8cqWWPA0do
2d/A4Vr2NnCYln0NHKplTwOHaNnPwMFa9jLwNC37GDhIyx4GnqBl/wIHatm7
wAFa9i2wv5Y9C+ynZb8C+2rZq8A+WvYpsLeWPQrspWV/Antq2ZvAXbXsS2AP
LXsSuIOW/QjsrmUvArfUsg+B3bTsQeDGWvYfcAMtew/YVcu+A3bRsueAnbXs
N2AnLXsNuCqTfQZcmckeA36eyf4CfpzJ3gKuyGRfAd/LZE8B38pkPwGXZ7KX
gK9mso+AyzLZQ8AXMtk/wKWZ7B3g05nsG+CSTPYMcHEm+wVYMtkrwEWZ7BPg
wkz2CHBBJvsDOD+TvQGcl8m+AHZksieALZnsB2BDJnsBWJfJPgDWZLIHgNWZ
9P9jVSZ9/zg+k35/HJ1Jnz/ekEl/P47KpK8fr86kn1+5/0z6+JX7z6R/X7n/
TPr2lfvPpF9fuf9M+vSV+8+kP1+5/0z68pX7z6QfX7n/TPrwlfvPpP9euf9M
+u6V+8+k3165/0z67JX7z6S/Xrn/TPrqlfvPpJ9euf9M+uiV+8+kf165/0z6
5pX7z6RfPvmDPTLpk8cdMumPx+6Z9MXjlpn0w2O3TPrgceNM+t9xg0z63rFr
Jv3u2CWTPnfsnEl/O3bKpK8dV2noZ8eVGvrY8XMN/ev4sYa+dVyhoV8d39PQ
p45vaehPx+Ua+tLxVQ396LhMQx86vqCh/xyXaug7x6c19JvjEg195rhYQ385
Fg195bhIQz85LtTQR44LNPSP43wNfeM4T0O/OHZo6BPHFg394digoS8c6zT0
g2ONhj5wrNbQ/41VGvq+cbyGfm8craHPG2/Q0N+NozT0dePVGvq5caSGPm4c
oaF/G4dr6NvGYRr6tXGohj5tHKKhPxsHa+jLxtM09GPjIA192HiChv5rHKih
7xoHaOi3xv4a+qyxn4b+auyroa8a+2jop8beGvqosZeG/mnsqaFvGnfV0C+t
3L+GPmnl/jX0Ryv3r6EvWrl/Df3Qyv1r6INW7l9D/7Ny/xr6npX719DvrNy/
hj5n5f419Dcr96+hr1m5/wz6mZX7z6CPWbn/DPqXlfvPoG9Zuf8M+pWV+8+g
T1m5/wz6k5X7z6AvWbn/DPqRVR9clkEfMr6QQf8xLs2g7xifzqDfGJdk0GeM
izPoL8aSQV8xLsqgnxgXZtBHjAsy6B/G+Rn0DeO8DPqFsSODPmFsyaA/GBsy
6AvGugz6gbEmgz5grM6g/xerMuj7xfEZ9Pvi6Az6fPGGDPp7cVQGfb14dQb9
vDgygz5eHJFB/y4Oz6BvF4dl0K+LQzPo08UhGfTn4uAM+nLxtAz6cXFQBn24
eEIG/bc4MIO+WxyQQb8t9s+gzxb7ZdBfi30z6KvFPhn002LvDPposVcG/bPY
M4O+Wdw1g35Z7JFBnyzukEF/LHbPoC8Wt8ygHxa7ZdAHixtn0P+KG2TQ94pd
M+h3xS4Z9Lli5wz6W7FTBn2tuCqdflZcmU4fK36eTv8qfpxO3yquSKdfFd9L
p08V30qnPxWXp9OXiq+m04+q3H86fajK/afTf6rcfzp9p8r9p9Nvqtx/On2m
yv2n01+q3H86faXK/afTT6rcfzp9pMr9p9M/qtx/On2jyv2n0y+q3H86faLK
/afTH6rcfzp9ocr9p9MPqtx/On2gyv2n0/+p3H86fZ/K/afT75n0wdHp9Hni
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
4shPYIkjL4EL48hH4Pw48hDYEUf+ARviyDtgTRz5BqyKI8+Ao+PIL+CoOPIK
ODKOfAIOjyOPgEPjyB/g4DjyBjgojnwBDowjT4D948gPYN848gLYO458APaM
Iw+APeJ4/4/d43jvj93ieN+PG8Txnh+7xPF+HzvF8V4fV8byPh8/juU9Pr4X
y/t7XB7Le3tcFsv7elway3t6XBLL+3kssbyX//GDC2N5H4/zY3kPjx2xvH/H
hljeu2NNLO/bsSqW9+w4Opb36zgqlvfqODKW9+k4PJb36Dg0lvfnODiW9+Y4
KJb35Tgwlvfk2D+W9+PYN5b34tg7lvfh2DOW9+DYI5b339g9lvfe2C2W9924
QSzvubFLLO+3sVMs77VxZQzvs/HjGN5j43sxvL/G5TG8t8ZlMbyvxqUxvKfG
JTG8n8YSw3tp5feP4X208vvH8B5a+f1jeP+s/P4xvHdWfv8Y3jcrv38M75mV
3z+G98vK7x/De2Xl94/hfbLy+8fwHjnqg0NjeH+Mg2N4b4yDYnhfjANjeE+M
/WN4P4x9Y3gvjL1jeB+MPWN4D4w9Ynj/i91jeO+L3WJ434sbxPCeF7vE8H4X
O8XwXhdXRvM+Fz+O5j0uvhfN+1tcHs17W1wWzftaXBrNe1pcEs37WSzRvJfF
hdG8j8X50byHxY5o3r9iQzTvXbEmmvetWBXNe1YcHc37VRwVzXtVHBnN+1T8
/yrtHMaRbi0DsEXUEbKQkFpCQiUQqBEImb2Be7kF9wLNbvb+/9mqd/de3ne7
vDt0OKHDCR1OWOGEDiessEOHHRL044CbPbp/zenjWs453/fGS3nU/f1fyp/u
7/9S3nR//5fypfv7v5Qn3d//pfzo/v4v5UX3938pH7q//0t50P39X8p/7u//
Ut5z+ObDpXwn55fynHywlN/k3FJek18X8pm8W8hj8stC/pKzhbwlf1/IV/J2
IU/J3xbyk5wu5CX560I+kjcLeUj+spB/5PVC3pE/L+QbebWQZ+TlQn6Rk4W8
IrcW8omDN8cLeUQuLeQPOVrIG/LpQr6Qiwt5Qj5ZyA9yuJAX5OOFfCAXFvKA
fLSQ/+NgIe/Hhwv5Ps4v5Pn4YCG/x7mFvB6/zuXzeDeXx+OXufwdZ3N5O/4+
l6/j7Vyerv/mb3P5OU7n8nL8dS4fx5u5PBx/mcu/8Xou78af5/JtvJrLs/Fy
Lr/GyVxejVtz+TSO5/JoXJrLn3E0lzfj07l8GRfn8mR8Mpcf43AuL8bHc/kw
LszlwfhoLv/Ve3Mwl/fiw7l8F+fn8lx8MJff4txcXotfZ/JZvJvJY/HLTP6K
s5m8FX+fyVfxdiZPxd9m8lOczuSl+OtMPoo3M3ko/jKTf+L1TN6JP8/km3g1
k2fi5Ux+iZOZvFL3za2ZfBLHM3kkLs3kjziayRvx6Uy+iIszeSI+mckPcTiT
F+LjmXwQF2byQHw0k//hYCbvw4cz+R7Oz+R5+GAmv8O5mbwOv07lc3g3lcfh
l6n8DWdTeRv+PpWv6bx5O5Wn4W9T+RlOp/Iy/HUqH8ObqTwMf5nKv/B6Ku/C
n6fyLbyayrPwciq/wslUXoVbU/kUjqfyKFyayp9wNJU34dOpfAkXp/IkfDKV
H+FwKi/Cx1P5EC5M5UHabz6ayn9wMJX34MOpfAfnp/IcfDCV3+DcVF6DXyfy
GbybyGPwy0T+grOJvAV/n8hX8HYiT8HfJvITnE7kJfjrRD6CNxN5CP4ykX/g
9UTegT9P5Bt4NZFn4OVEfqH15mQir8CtiXwCxxN5BC5N5A84msgb8OlEvoCL
E3kCPpnID3A4kRfg44l8ABcm8gB8NNH/52Ci38+HE/19zk/08/lgon/PuYl+
Pb+O9ed5N9aP55ex/jtnY/325pu/j/XXeTvWT+dvY/1zTsf65fx1rD/Om7F+
OH8Z63/zeqzfzZ/H+tu8Gutn83Ksf83JWL+aW2P9aY7H+tFcGus/czTWb+bT
sf4yF8f6yXwy1j/mcKxfzMdj/eHGmwtj/WA+Guv/cjDW7+XDsf4u58f6uXww
1r/l3Fi/ll9H+rO8G+nH8stI/5WzkX4rfx/pr/J2pJ/K30b6p5yO9Ev560h/
lDcj/VD+MtL/5PVIv5M/j/Q3eTXSz6y/eTnSv+RkpF/JrZH+JMcj/UgujfQf
ORrpN/LpSH+RiyP9RD4Z6R9yONIv5OOR/iAXRvqBfDTS/+NgpN/HhyP9Pc6P
9PP4YKR/x7mRfh2/JvpzvEv04/gl0X+rvTlL9Nv4e6K/xttEP42/JfpnnCb6
Zfw10R/jTaIfxl8S/S9eJ/pd/DnR3+JVop/Fy0T/ipNEv4pbif4Ux4l+FJcS
/SeOEv0mPk30l7iY6CfxSaJ/xGGiX1R983GiP8SFRD+IjxL9Hw4S/R4+TPR3
OJ/o5/BBon/DuUS/hndD/RnOhvoxvB3qv3A61G/hzVB/hddD/RReDfVPOBnq
l3A81B/haKgfwsWh/geHQ/2O/e811N+o+H2G+hmcH+pfcG6oX8G7gf4EZwP9
CN4O9B84Heg38Gagv8DrgX4Crwb6B5wM9As4HugPcDTQD+DiQP2fw4F6PxcG
6vv7+Q/U8/fzH6jf7+c/UK/fz7+vPr+ff189vmz+ffV3Tvvq7bzpq6/zuq+e
zqu++jknffVyjvvq4xz11cO52Ff/5rCv3s2Fvvo2B331bM731a8511ev5l1P
fZqznnr0fv499ef9/Hvqzfv599SX9/PvqSfv599TP47Nv6dezHFPfZijnnow
F3vqvxz21Hu50FPf5aCnnsv5nvot53rqtbzrqs9y1lWP5W1X/ZXTrnorb7rq
q7zuqqfyqqt+up9/V710P/+u+uh+/l310P38u+qf+/l31Tufzb+rvslBVz2T
8131S8511St511Gf5KyjHsnbjvojpx31Rt501Bd53VFPfDL/jvohJx31Qo47
6oMcddQDudhR/+Owo97HhY76Hgcd9TzOd9TvONdRr+NdW33u0fzb6nG8bau/
cdpWb+NNW32N1231NF611c84aauXcdxWH+OorR7Gxbb614P5t9W7uNBW3+Kg
rZ7F+bb6Fefa6lW8a6lPcdZSj+JtS/2J05Z6E29a6ku8bqkn3Zt/S/2Ik5Z6
Ecct9SGOWupBXGyp/3DYUu/hQkt9h4OWeg7nW+o3nGup19yZf1N9hrOmegxv
m+ovnDbVW3jTVF/hdVM9hVdN9RNOmuolHDfVRzhqqodwsan+cWv+TfUOLjTV
Nzhoqmdwvql+wbmmegXvGuoTnDXUI3jbUH/gtKHewJuG+kLJ/BvqCbxqqB9w
0lAv4LihPsBRQz2Aiw3nfw4bzvtcaDjfc9Bwnud8w/mdcw3n9Rvzrzufc1Z3
Hudt3fmb07rzNm/qzte8rjtP86ru/MxJ3XmZ47rzMUd15+Fr8687/3JYd97l
Qt35loO68yzn686vnKs7r/Ku5nzKWc15lLc1509Oa86bvKk5X16Zf815klc1
50dOas6LHNecDzmqOQ9yseb8x2HNeY8LNec7DmrOc5yvOb9dmn/NeY13Vecz
zqrOY7ytOn9xWnXe4k3V+YrXVecpXlWdnzipOi9xXHU+4qjqPHRh/lXnHw6r
zjtcqDrfcFB1nuF81fmFc1XnFd5VnE84qziP8Lbi/MFpxXnj3Pwrzhe8rjhP
8Kri/MBJxXmB44rzAUcV5wEuVuz/OazY73OhYn/PQcV+nvMV+/cz86/Yr/Ou
bH/OWdl+nLdl+29Oy/bbvCnbX/O6bD/Nq7L9Mydl+2WOy/bHkfmX7Ye5WLb/
5bBsv8uFsv0tB2X7Wc6X7V85V7Zf5V1sf8pZbD/K29j+k9PYfvOT+cf2l7yO
7Sd5Fds/chLbL3Ic2x9+NP/YfpCLsf0fh7H9Hhdi+zsOYvu5D+Yf279xLrZf
4+zZ/ozTZ/sxXj/bf7339z/bb3H0bH/F4bP9FAfP9k+ce7Zf4uzJ/uid8Z/s
h3j9ZP/DyZP9DkdP9jccPtnP/Gj8J/sXzj3Zr3D2aH/C6aP9CK8f7T9+MP6j
/QZHj/YXHD7aT3DwaP/AuUf7hVPjP9gfcPpgP8DrB+s/Jw/We44erO8cPljP
/9f4D9Zvzj1Yrzm7tz5zem895vW99fd/jH9vveXo3vrK4b31lIN76yfn7q2X
/238O+sjp3fWQ17fWf84ubPecXRnffsv499Zzzi4s35x7s56xdmt9YnTW+sR
r2+tP/9p/FvrDUe31hcOb60nHNxaPzh3a734D+OXrA+clqwHvC75/nNS8r3n
qOT7/u/GL/mec1Dy/eZcyfeasxvfZ05vfI+Lxr/x/eXkxveWoxvfVw5vfE85
uPH95NyN7+W/Gf/a95HTa9/DfzX+te8fJ9e+dxxd+779i/Gvfc84uPb9+mfj
X/tecXbl+8Tple/RPxn/yveHkyvfG46ufF/+0fhXviccXPl+/IPxr3wvOLv0
feD00vfgxPiX3n9OLr3vHF16v//e+JfeZw4uvb9/Z/xL7ytnF95PTi+8j39r
/AvvHycX3rdfGP/C+8XhhfeJgwvvz8+Nf+F94ezc+8Hpuffhb4x/7vnn5Nzz
/tfGP/d8c3jueebg3PMbGv/c88rZmeeT0zPP48+Mf+b5+yvjn3nefmr8M8/X
T4x/5nni4Mzz85fGP/O8/IXxI8/Hnxs/8jzwOnL/j40fud9/ZvzI/f1T40fu
JweR+/cnxo/crz823if354/8+5/cDw4/+f3/0PWf/N5/4PqPft+C6z/6PTn8
6Pf7fdd/9Hv9nus/+H1+1/Uf/B6/4/oP5n/k+g/m+9uuf29+v+X69+bzm65/
7+//Dde/9/cGrn/n7/t117/z9/ya698Z/9D174z3q67/0b//K67/0b/3y67/
0fUHrt//97/k+h/8/68/e7t+75c3hz+kuf/3vx/S/wO9qO90
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\" Profundidade (ft) \"", TraditionalForm], 
     FormBox["\" \"", TraditionalForm]}, {
     FormBox["\"pressure(psi)\"", TraditionalForm], 
     FormBox["\" Janela Operacional \"", TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->Directive[Bold, 14],
  Method->{},
  PlotRange->{{0, 17142.84}, {-16500., 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.678021089240795*^9, 3.6781035575238943`*^9, 3.678103655068598*^9, 
   3.678130076159878*^9, {3.6784578328249006`*^9, 3.678457849356962*^9}, 
   3.6826737720145426`*^9, 3.6826748338632765`*^9, 3.6826757630964255`*^9, 
   3.6826763805537424`*^9, 3.682677385367214*^9, 3.682686655151416*^9, 
   3.68268764566607*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeCompatibleSizeVectors", "[", 
   RowBox[{"refinedvec_", ",", "coarsevecl_", ",", "coarsevecvar_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newvec", ",", "y0", ",", "y1", ",", "x0", ",", "x1", ",", "counter", 
      ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newvec", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"counter", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "coarsevecl", "]"}], "!=", 
        RowBox[{"Length", "[", "coarsevecvar", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", 
         "\"\<N\[ATilde]o \[EAcute] poss\[IAcute]vel realizar o refinamento, \
os vetores coarse devem ter o mesmo tamanho.\>\"", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "coarsevecl", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">=", 
            RowBox[{"Length", "[", "coarsevecvar", "]"}]}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"y0", "=", 
         RowBox[{"coarsevecvar", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"y1", "=", 
         RowBox[{"coarsevecvar", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"x0", "=", 
         RowBox[{"coarsevecl", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"x1", "=", 
         RowBox[{"coarsevecl", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"coarsevecl", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "<=", 
             RowBox[{"refinedvec", "[", 
              RowBox[{"[", "counter", "]"}], "]"}], "<=", 
             RowBox[{"coarsevecl", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}], "&&", 
           RowBox[{"counter", "<", 
            RowBox[{"Length", "[", "refinedvec", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"newvec", ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"y1", "-", "y0"}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"x1", "-", "x0"}], ")"}]}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"refinedvec", "[", 
                   RowBox[{"[", "counter", "]"}], "]"}], "-", "x0"}], ")"}]}],
                "+", "y0"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"counter", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "==", 
           RowBox[{
            RowBox[{"Length", "[", "coarsevecl", "]"}], "-", "1"}]}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"newvec", ",", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"y1", "-", "y0"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"x1", "-", "x0"}], ")"}]}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"refinedvec", "[", 
                  RowBox[{"[", "counter", "]"}], "]"}], "-", "x0"}], ")"}]}], 
              "+", "y0"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newvec", "//", "N"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.673188321273266*^9, 3.6731883255632734`*^9}, {
   3.673189996886915*^9, 3.6731900281197014`*^9}, {3.673191081455345*^9, 
   3.673191110926031*^9}, {3.673191148879202*^9, 3.6731911512383366`*^9}, 
   3.673191186206337*^9, {3.6731912425275583`*^9, 3.6731912456947393`*^9}, {
   3.6731914595479712`*^9, 3.6731915722754188`*^9}, {3.6731922782299953`*^9, 
   3.673192285117389*^9}, {3.6731942036236267`*^9, 3.6731942298658776`*^9}, 
   3.6731942936867886`*^9, {3.677840324053131*^9, 3.67784036827078*^9}, {
   3.6778404321340156`*^9, 3.677840432665761*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "refina", " ", "de", " ", "n", " ", "divis\[OTilde]es", " ", "de", " ", 
    "refl", " ", "at\[EAcute]", " ", "lf"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"refine", "[", 
    RowBox[{"l0_", ",", "lf_", ",", "refl_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dref", ",", 
       RowBox[{"standardref", "=", "100"}], ",", "refinedvec", ",", 
       "lastcoarsedata", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refinedvec", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"dl", "//", "N"}], ",", 
         RowBox[{"{", 
          RowBox[{"dl", ",", "l0", ",", "refl", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"refl", "-", "l0"}], ")"}], "/", "standardref"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lastcoarsedata", "=", "refl"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"lf", "-", "refl"}], "]"}], "<", 
         RowBox[{"10", "^", 
          RowBox[{"-", "8"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dref", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lf", "-", "l0"}], ")"}], "/", "n"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"refinedvec", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "=", "l0"}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dref", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lf", "-", "refl"}], ")"}], "/", "n"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "=", "refl"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "n"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"refinedvec", ",", 
           RowBox[{"lastcoarsedata", "//", "N"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lastcoarsedata", "+=", "dref"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"refinedvec", ",", 
        RowBox[{"N", "[", "lf", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"refinedvec", "//", "N"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6734527454539833`*^9, 3.6734527865023317`*^9}, 
   3.6734530061808963`*^9, {3.673453055779733*^9, 3.6734531018513684`*^9}, 
   3.673453139787538*^9, {3.673453265666738*^9, 3.6734533458743258`*^9}, {
   3.67345338057031*^9, 3.673453380640314*^9}, 3.6734534538655024`*^9, 
   3.67345431961102*^9, {3.67784038354268*^9, 3.6778404020194044`*^9}, {
   3.677840434897897*^9, 3.6778404353362703`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L0", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LF", "=", "14800."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LtoRef", "=", "14799"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nrefs", "=", "50."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refinedl", "=", 
   RowBox[{"refine", "[", 
    RowBox[{"L0", ",", "LF", ",", "LtoRef", ",", "nrefs"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6734532066823645`*^9, 3.6734532146498203`*^9}, 
   3.6734533616812296`*^9, {3.6734534024975643`*^9, 3.673453447160119*^9}, 
   3.6734535886322107`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "refinedl", "]"}]], "Input",
 CellChangeTimes->{{3.6734532327938576`*^9, 3.673453247785715*^9}}],

Cell[BoxData["152"], "Output",
 CellChangeTimes->{3.673453248098733*^9, 3.673454632805934*^9, 
  3.6735274030067854`*^9, 3.673614552660615*^9, 3.6776731001296787`*^9, 
  3.6776731415206523`*^9, 3.6778301258246408`*^9, 3.6778327547113953`*^9, 
  3.677839244478513*^9, 3.6778393373239665`*^9, 3.6778404126861134`*^9, 
  3.678021095776181*^9, 3.678103557800146*^9, 3.678103655341095*^9, 
  3.6781300765048437`*^9, 3.678457849456996*^9, 3.68267377214455*^9, 
  3.6826748340192857`*^9, 3.6826757632524347`*^9, 3.6826763807167516`*^9, 
  3.682677385535224*^9, 3.682686655717448*^9, 3.6826876458740816`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Dado PI e PO, rint e rext, faz o c\[AAcute]lculo da tens\[ATilde]o radial e \
tangencial\
\>", "Subchapter",
 CellChangeTimes->{{3.6644482279963493`*^9, 3.664448279208538*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComputeRadialAndTangetialStress", "[", 
    RowBox[{"r_", ",", "ri_", ",", "re_", ",", "PI_", ",", "PO_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigtheta"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sigr", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"PI", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "-", 
            SuperscriptBox["re", "2"]}], ")"}], " ", 
          SuperscriptBox["ri", "2"]}], "+", 
         RowBox[{"PO", " ", 
          SuperscriptBox["re", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["re", "2"], "-", 
           SuperscriptBox["ri", "2"]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sigtheta", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"PI", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["re", "2"]}], ")"}], " ", 
          SuperscriptBox["ri", "2"]}], "-", 
         RowBox[{"PO", " ", 
          SuperscriptBox["re", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}]}], 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["re", "2"], "-", 
           SuperscriptBox["ri", "2"]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigr", ",", "sigtheta"}], "}"}], "//", "N"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComputeRadialAndTangetialStress2", "[", 
    RowBox[{
    "r_", ",", "ri_", ",", "re_", ",", "PI_", ",", "PO_", ",", "FZ_"}], "]"}],
    ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ez", ",", "sigrr", ",", "sigtt", ",", "sigzz", ",", "a", ",", "b", ",",
        "Pa", ",", "Pb", ",", 
       RowBox[{"nu", "=", "0.30"}], ",", 
       RowBox[{"young", "=", 
        RowBox[{"3", " ", 
         RowBox[{"10", "^", "7"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", "ri"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", "=", "re"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pa", "=", "PI"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pb", "=", "PO"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ez", "=", 
       RowBox[{
        FractionBox["FZ", 
         RowBox[{"Pi", " ", "young", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}]}]], "-", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "nu"}], "young"], 
         FractionBox[
          RowBox[{
           RowBox[{"Pa", " ", 
            RowBox[{"a", "^", "2"}]}], " ", "-", 
           RowBox[{"Pb", " ", 
            RowBox[{"b", "^", "2"}]}]}], 
          RowBox[{
           RowBox[{"b", "^", "2"}], "-", 
           RowBox[{"a", "^", "2"}]}]]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigrr", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Pa", " ", 
           RowBox[{"a", "^", "2"}]}], " ", "-", 
          RowBox[{"Pb", " ", 
           RowBox[{"b", "^", "2"}]}]}], 
         RowBox[{
          RowBox[{"b", "^", "2"}], "-", 
          RowBox[{"a", "^", "2"}]}]], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"a", "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{"Pa", "-", "Pb"}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}], 
          RowBox[{"r", "^", "2"}]}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigtt", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"Pa", " ", 
           RowBox[{"a", "^", "2"}]}], " ", "-", 
          RowBox[{"Pb", " ", 
           RowBox[{"b", "^", "2"}]}]}], 
         RowBox[{
          RowBox[{"b", "^", "2"}], "-", 
          RowBox[{"a", "^", "2"}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"a", "^", "2"}], " ", 
          RowBox[{"b", "^", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{"Pa", "-", "Pb"}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", "^", "2"}], "-", 
            RowBox[{"a", "^", "2"}]}], ")"}], 
          RowBox[{"r", "^", "2"}]}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sigzz", "=", 
       RowBox[{
        RowBox[{"2", " ", "nu", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"Pa", " ", 
            RowBox[{"a", "^", "2"}]}], " ", "-", 
           RowBox[{"Pb", " ", 
            RowBox[{"b", "^", "2"}]}]}], 
          RowBox[{
           RowBox[{"b", "^", "2"}], "-", 
           RowBox[{"a", "^", "2"}]}]]}], "+", 
        RowBox[{"young", " ", "ez"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigrr", ",", "sigtt", ",", "sigzz"}], "}"}], "//", "N"}]}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"di", "=", "12.376"}], ";", "\[IndentingNewLine]", 
    RowBox[{"de", "=", "14"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigt", ",", "sigz"}], "}"}], "=", 
     RowBox[{
      RowBox[{"ComputeRadialAndTangetialStress2", "[", 
       RowBox[{
        RowBox[{"di", "/", "2"}], " ", ",", 
        RowBox[{"di", "/", "2"}], ",", 
        RowBox[{"de", "/", "2"}], ",", "8237", ",", "3629", ",", 
        "\[InvisibleSpace]", "1.312705856587157`*^6"}], "]"}], 
      "\[IndentingNewLine]", "sigz", " ", 
      RowBox[{"Pi", "/", "4"}], 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"de", "^", "2"}], "-", 
        RowBox[{"di", "^", "2"}]}], ")"}]}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6706697658114614`*^9, 3.670669866753235*^9}, {
  3.6706706713962584`*^9, 3.6706707998016024`*^9}, {3.6706799251365414`*^9, 
  3.6706799253525543`*^9}, {3.67068017529585*^9, 3.6706801759208856`*^9}, {
  3.6721503937828193`*^9, 3.672150396908862*^9}, {3.6778404208147244`*^9, 
  3.677840425147792*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Dado dint, dext, PI e PO, faz o c\[AAcute]lculo da tens\[ATilde]o axial (TA) \
devido ao efeito poisson (Bal\[ATilde]o)\
\>", "Subchapter",
 CellChangeTimes->{{3.664448311552986*^9, 3.6644483628565865`*^9}, {
  3.6644484157653522`*^9, 3.664448417752167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeFballoning", "[", 
    RowBox[{"di_", ",", "de_", ",", "Pint_", ",", "Pext_", ",", "nu_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sigr", ",", "sigt", ",", "Fballoning"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sigr", ",", "sigt"}], "}"}], "=", 
       RowBox[{"ComputeRadialAndTangetialStress", "[", 
        RowBox[{
         RowBox[{"di", "/", "2"}], " ", ",", 
         RowBox[{"di", "/", "2"}], ",", 
         RowBox[{"de", "/", "2"}], ",", "Pint", ",", "Pext"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Fballoning", "=", 
       RowBox[{"nu", 
        RowBox[{"(", 
         RowBox[{"sigr", "+", "sigt"}], ")"}], 
        RowBox[{"Pi", "/", "4"}], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"de", "^", "2"}], "-", 
          RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fballoning", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.662756922172928*^9, 3.670599190806378*^9, 3.6706681838563643`*^9, 
   3.6706685887957144`*^9, 3.6706689890700345`*^9, {3.6778404409528294`*^9, 
   3.6778404414215307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeFtemperature", "[", 
   RowBox[{"de_", ",", "di_", ",", "TM_", ",", "TPM_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"young", " ", "=", " ", 
       RowBox[{"3", " ", 
        RowBox[{"10", "^", "7"}]}]}], ",", 
      RowBox[{"alfa", "=", 
       RowBox[{"6.9", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}]}]}], ",", "\[CapitalDelta]T", ",", "T1", ",", 
      "f", ",", "fp", ",", "T2", ",", "Ftemperature"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[CapitalDelta]T", "=", " ", 
      RowBox[{"(", 
       RowBox[{"TPM", "-", "TM"}], ")"}]}], " ", ";", "\[IndentingNewLine]", 
     RowBox[{"Ftemperature", "=", 
      RowBox[{
       RowBox[{"-", "young"}], " ", "alfa", " ", "\[CapitalDelta]T", " ", 
       RowBox[{"Pi", "/", "4"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"de", "^", "2"}], "-", 
         RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ftemperature", "//", "N"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.672150838704226*^9, 3.6721508395948167`*^9}, {
  3.67784044396904*^9, 3.6778404444223766`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeFBend", "[", 
   RowBox[{"de_", ",", "di_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"young", " ", "=", " ", 
       RowBox[{"3.", " ", 
        RowBox[{"10", "^", "7"}]}]}], ",", "area", ",", "Fbend"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"area", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4."}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"de", "^", "2."}], " ", "-", 
         RowBox[{"di", "^", "2."}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fbend", "=", 
      RowBox[{"Pi", " ", "young", " ", "de", " ", 
       RowBox[{"\[Theta]", "/", 
        RowBox[{"(", 
         RowBox[{"100.", " ", "360.", " ", "12."}], ")"}]}], " ", "area"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Fbend", "//", "N"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"resultado", " ", "em", " ", "lb"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6780211178460317`*^9, 3.6780212782004814`*^9}, {
  3.678021340736165*^9, 3.6780213417385445`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"di", "=", "19.124"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComputeFBend", "[", 
  RowBox[{"de", ",", "di", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6780212894184217`*^9, 3.6780213150312433`*^9}, {
  3.6780213512063437`*^9, 3.678021368454167*^9}}],

Cell[BoxData["234900.86157450092`"], "Output",
 CellChangeTimes->{{3.6780212948710365`*^9, 3.67802131539338*^9}, {
   3.6780213469284005`*^9, 3.6780213625053453`*^9}, 3.678103557880743*^9, 
   3.6781036554192843`*^9, 3.678130076616421*^9, 3.678457849541241*^9, 
   3.6826737721855516`*^9, 3.6826748340672884`*^9, 3.682675763293437*^9, 
   3.6826763807687545`*^9, 3.6826773855842266`*^9, 3.682686655788452*^9, 
   3.682687645956086*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeInitialForce", "[", 
   RowBox[{
   "InternalPressIni_", ",", "ExternalPressIni_", ",", "Lvec_", ",", 
    "PipeData_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fpiston", ",", "sz", ",", "di", ",", "de", ",", "alfa", 
      ",", "nu", ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Fi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", 
     RowBox[{"(*", 
      RowBox[{"dados", " ", "do", " ", "tubular"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "interna"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "externa"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "Lvec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fi", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fpiston", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"InternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ai"}], "-", 
        RowBox[{
         RowBox[{"ExternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ao"}]}], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"For\[CCedilla]a", " ", "Pist\[ATilde]o"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fi", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", "Fpiston"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Lvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{"Lvec", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Fi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Fpiston", "+", 
          RowBox[{"w", " ", "lacum"}]}]}], ";"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "For\[CCedilla]a", " ", "axial", " ", "inicial", " ", "total"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Fi", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6730202461562285`*^9, 3.6730206123776875`*^9}, {
  3.673020689436624*^9, 3.67302075438634*^9}, {3.673020801562224*^9, 
  3.6730208263782682`*^9}, {3.673107932687693*^9, 3.673107942102232*^9}, {
  3.673108362477276*^9, 3.6731083698126955`*^9}, {3.677836184738161*^9, 
  3.6778362139627604`*^9}, {3.6778363352282734`*^9, 3.6778364157446055`*^9}, {
  3.6778404464872665`*^9, 3.6778404469718943`*^9}, {3.678025600450048*^9, 
  3.6780256028935184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeInitialForce", "[", 
   RowBox[{
   "InternalPressIni_", ",", "ExternalPressIni_", ",", "Lvec_", ",", 
    "PipeData_", ",", "doglegdata_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fpiston", ",", "sz", ",", "di", ",", "de", ",", "alfa", 
      ",", "nu", ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Fi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", 
     RowBox[{"(*", 
      RowBox[{"dados", " ", "do", " ", "tubular"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "interna"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"\[AAcute]rea", " ", "externa"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "Lvec", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fi", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Fpiston", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"InternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ai"}], "-", 
        RowBox[{
         RowBox[{"ExternalPressIni", "[", 
          RowBox[{"[", "sz", "]"}], "]"}], " ", "Ao"}]}], ")"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"For\[CCedilla]a", " ", "Pist\[ATilde]o"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Fi", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", "Fpiston"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Lvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{"Lvec", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Fi", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "=", 
         RowBox[{"Fpiston", "+", 
          RowBox[{"w", " ", "lacum"}], "+", 
          RowBox[{"ComputeFBend", "[", 
           RowBox[{"de", ",", "di", ",", 
            RowBox[{"doglegdata", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], ";"}]}], 
      RowBox[{"(*", 
       RowBox[{
       "For\[CCedilla]a", " ", "axial", " ", "inicial", " ", "total"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Fi", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.678025611383337*^9, 3.6780256526588926`*^9}, 
   3.6781047611160755`*^9, 3.678104959073612*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeForces", "[", 
   RowBox[{
   "InternalPressinitial_", ",", "ExternalPressinitial_", ",", 
    "InternalPressKick_", ",", "ExternalPressKick_", ",", "Ti_", ",", "Tf_", 
    ",", "Lvec_", ",", "PipeData_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fi", ",", "Fballoning", ",", "Ftemp", ",", "flag", ",", 
      "Ffreemean", ",", "sz", ",", "di", ",", "de", ",", "alfa", ",", "nu", 
      ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Ffinal", ",", 
      "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "as", 
      " ", "condi\[CCedilla]\[OTilde]es", " ", "iniciais"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fi", "=", 
      RowBox[{"ComputeInitialForce", "[", 
       RowBox[{
       "InternalPressinitial", ",", "ExternalPressinitial", ",", "Lvec", ",", 
        "PipeData"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]InternalPress", "=", 
      RowBox[{"InternalPressKick", "-", "InternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]ExternalPress", "=", 
      RowBox[{"ExternalPressKick", "-", "ExternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "\[CapitalDelta]InternalPress", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ffreemean", "=", "0."}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "poisson", " ", "ou", " ", "bal\[ATilde]o"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Fballoning", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFballoning", "[", 
         RowBox[{"di", ",", "de", ",", "#1", ",", "#2", ",", "nu"}], "]"}], 
        "&"}], "[", 
       RowBox[{
       "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "t\[EAcute]rmico"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ftemp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFtemperature", "[", 
         RowBox[{"de", ",", "di", ",", "#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{"Ti", ",", "Tf"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ffinal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ffinal", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Fballoning", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Ftemp", "[", 
        RowBox[{"[", "sz", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{
          RowBox[{"Lvec", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"Lvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lacum", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Lvec", "[", 
               RowBox[{"[", "sz", "]"}], "]"}], "-", "Lcement"}], ")"}]}], "<=",
            "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Cimentado"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Fballoning", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Ftemp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"flag", "=", "True"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Livre"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "No", " ", "primeiro", " ", "passo", " ", "do", " ", "trecho", 
               " ", "livre", " ", "calcula", " ", "a", " ", "m\[EAcute]dia", 
               " ", "das", " ", "for\[CCedilla]as", " ", "de", " ", 
               "temperatura", " ", "e", " ", "bal\[ATilde]o", " ", "somente", 
               " ", "do", " ", "trecho", " ", "livre"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ffreemean", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Fballoning", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Ftemp", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], 
                 ")"}], "/", "i"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"flag", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Ffreemean", "+", 
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Fi", ",", "Ffinal"}], "}"}], "//", "N"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6780257783813343`*^9, 3.678025782275136*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeForces", "[", 
   RowBox[{
   "InternalPressinitial_", ",", "ExternalPressinitial_", ",", 
    "InternalPressKick_", ",", "ExternalPressKick_", ",", "Ti_", ",", "Tf_", 
    ",", "Lvec_", ",", "PipeData_", ",", "doglegdata_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Lcement", ",", "Fi", ",", "Fballoning", ",", "Ftemp", ",", "flag", ",", 
      "Ffreemean", ",", "sz", ",", "di", ",", "de", ",", "alfa", ",", "nu", 
      ",", "young", ",", "w", ",", "Ai", ",", "Ao", ",", "i", ",", 
      RowBox[{"lacum", "=", "0."}], ",", "Ffinal", ",", 
      "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "as", 
      " ", "condi\[CCedilla]\[OTilde]es", " ", "iniciais"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Fi", "=", 
      RowBox[{"ComputeInitialForce", "[", 
       RowBox[{
       "InternalPressinitial", ",", "ExternalPressinitial", ",", "Lvec", ",", 
        "PipeData", ",", "doglegdata"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]InternalPress", "=", 
      RowBox[{"InternalPressKick", "-", "InternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]ExternalPress", "=", 
      RowBox[{"ExternalPressKick", "-", "ExternalPressinitial"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[InternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "InternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressKick] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressKick", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Length[ExternalPressinitial] = \>\"", ",", 
       RowBox[{"Length", "[", "ExternalPressinitial", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", "w", ",", 
        "Lcement"}], "}"}], "=", "PipeData"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ai", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"di", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ao", "=", 
      RowBox[{
       RowBox[{"Pi", "/", "4"}], " ", 
       RowBox[{"de", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sz", "=", 
      RowBox[{"Length", "[", "\[CapitalDelta]InternalPress", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ffreemean", "=", "0."}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "poisson", " ", "ou", " ", "bal\[ATilde]o"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Fballoning", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFballoning", "[", 
         RowBox[{"di", ",", "de", ",", "#1", ",", "#2", ",", "nu"}], "]"}], 
        "&"}], "[", 
       RowBox[{
       "\[CapitalDelta]InternalPress", ",", "\[CapitalDelta]ExternalPress"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calcula", " ", "a", " ", "for\[CCedilla]a", " ", "devido", " ", "ao", 
       " ", "efeito", " ", "t\[EAcute]rmico"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Ftemp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ComputeFtemperature", "[", 
         RowBox[{"de", ",", "di", ",", "#1", ",", "#2"}], "]"}], "&"}], "[", 
       RowBox[{"Ti", ",", "Tf"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ffinal", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ffinal", "[", 
       RowBox[{"[", "sz", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Fballoning", "[", 
        RowBox[{"[", "sz", "]"}], "]"}], "+", 
       RowBox[{"Ftemp", "[", 
        RowBox[{"[", "sz", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"sz", "-", "1"}]}], ",", 
       RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
       RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lacum", "+=", 
         RowBox[{
          RowBox[{"Lvec", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
          RowBox[{"Lvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lacum", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Lvec", "[", 
               RowBox[{"[", "sz", "]"}], "]"}], "-", "Lcement"}], ")"}]}], "<=",
            "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Cimentado"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Fballoning", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"Ftemp", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"flag", "=", "True"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Trecho", " ", "Livre"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "No", " ", "primeiro", " ", "passo", " ", "do", " ", "trecho", 
               " ", "livre", " ", "calcula", " ", "a", " ", "m\[EAcute]dia", 
               " ", "das", " ", "for\[CCedilla]as", " ", "de", " ", 
               "temperatura", " ", "e", " ", "bal\[ATilde]o", " ", "somente", 
               " ", "do", " ", "trecho", " ", "livre"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ffreemean", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Fballoning", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}], "+", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"Ftemp", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "i"}], "}"}]}], "]"}]}], 
                 ")"}], "/", "i"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"flag", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ffinal", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "=", 
            RowBox[{"Ffreemean", "+", 
             RowBox[{"Fi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Fi", ",", "Ffinal"}], "}"}], "//", "N"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6730208513161125`*^9, 3.673020947741886*^9}, {
   3.6730213086480036`*^9, 3.6730216571788282`*^9}, {3.67302171959274*^9, 
   3.6730217279457555`*^9}, 3.673021774996839*^9, {3.673021815286314*^9, 
   3.673021901207467*^9}, {3.6730219365997305`*^9, 3.673021968417989*^9}, {
   3.6730220101308627`*^9, 3.6730220731245756`*^9}, 3.6730221232392645`*^9, {
   3.6730221668179436`*^9, 3.6730221981421995`*^9}, {3.673022247263487*^9, 
   3.673022262107114*^9}, {3.6730308905187635`*^9, 3.673030896958132*^9}, {
   3.6730312475871863`*^9, 3.673031252035441*^9}, {3.673031285251341*^9, 
   3.673031323547531*^9}, {3.6730313545073023`*^9, 3.6730313691701407`*^9}, {
   3.673031431940731*^9, 3.6730314358119526`*^9}, {3.6730314680337954`*^9, 
   3.6730314935372543`*^9}, {3.6730315341055746`*^9, 3.6730316098489065`*^9}, 
   3.673031646889025*^9, {3.6730316786248407`*^9, 3.673031685976261*^9}, {
   3.6730317944154634`*^9, 3.6730318523907795`*^9}, {3.673095757041665*^9, 
   3.6730959113784*^9}, {3.6730959800256815`*^9, 3.673095982682686*^9}, {
   3.6731074161271477`*^9, 3.6731078161700287`*^9}, {3.673108019360651*^9, 
   3.673108026585064*^9}, {3.6731080608650246`*^9, 3.673108101241334*^9}, {
   3.6731081317600794`*^9, 3.673108323351038*^9}, {3.673109056010944*^9, 
   3.673109075754073*^9}, 3.6731091759918065`*^9, {3.6731092640178413`*^9, 
   3.6731092727663417`*^9}, {3.6731694256176167`*^9, 3.673169444111253*^9}, {
   3.673453659153244*^9, 3.6734536811054993`*^9}, {3.6734543883189497`*^9, 
   3.673454431451417*^9}, {3.673454535939393*^9, 3.6734545362344103`*^9}, {
   3.677836569030838*^9, 3.6778365702305727`*^9}, {3.677838372970248*^9, 
   3.677838437271106*^9}, {3.6778389486163816`*^9, 3.677839031719983*^9}, {
   3.677839106115651*^9, 3.6778391436023474`*^9}, {3.67783918051587*^9, 
   3.677839227735691*^9}, {3.6778393241312313`*^9, 3.677839327696776*^9}, {
   3.677840450306182*^9, 3.677840450875273*^9}, {3.678025255613358*^9, 
   3.6780252607367268`*^9}, {3.6780252954150248`*^9, 3.678025347850349*^9}, {
   3.6780257565793743`*^9, 3.6780257640130315`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calcula a resist\[EHat]ncia do tubular \[AGrave] ruptura e ao colapso de \
acordo com a API BUL 5C3\
\>", "Subchapter",
 CellChangeTimes->{{3.6644496813349485`*^9, 3.6644497100935163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputePipeStrength", "[", 
    RowBox[{
    "siga_", ",", "sigy_", ",", "de_", ",", "di_", ",", "young_", ",", 
     "nu_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"de", "-", "di"}], ")"}], "/", "2"}]}], ",", 
       "BurstStrength", ",", " ", "ColapseStrength", ",", "dt", ",", "Ypa", 
       ",", "A", ",", "B", ",", "C", ",", "F", ",", "G", ",", "range1", ",", 
       "range2", ",", "range3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BurstStrength", "=", 
       RowBox[{"0.875", " ", "2", " ", 
        RowBox[{"sigy", "/", 
         RowBox[{"(", 
          RowBox[{"de", "/", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dt", "=", 
       RowBox[{"de", "/", "t"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ypa", "=", 
       RowBox[{"sigy", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox["3", "4"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["siga", "sigy"], ")"}], "2"]}]}], "]"}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           FractionBox["siga", "sigy"]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{"2.8762", "+", 
        RowBox[{"0.10679", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], " ", "Ypa"}], "+", 
        RowBox[{"0.21301", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "10"}]], 
         SuperscriptBox["Ypa", "2"]}], "-", 
        RowBox[{"0.53132", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "16"}]], 
         SuperscriptBox["Ypa", "3"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"B", "=", 
       RowBox[{"0.026233", "+", 
        RowBox[{"0.50609", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], "Ypa"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{
        RowBox[{"-", "465.93"}], "+", 
        RowBox[{"0.030867", " ", "Ypa"}], "-", 
        RowBox[{"0.10483", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]], 
         SuperscriptBox["Ypa", "2"]}], "+", 
        RowBox[{"0.36989", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "13"}]], 
         SuperscriptBox["Ypa", "3"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"F", "=", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"46.95", " ", 
          SuperscriptBox["10", "6"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"B", "/", "A"}], ")"}]}], 
             RowBox[{"2", "+", 
              RowBox[{"B", "/", "A"}]}]], ")"}], "3"]}], ")"}], 
        RowBox[{"Ypa", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"3", 
             RowBox[{"(", 
              RowBox[{"B", "/", "A"}], ")"}]}], 
            RowBox[{"2", "+", 
             RowBox[{"B", "/", "A"}]}]], "-", 
           RowBox[{"B", "/", "A"}]}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox[
             RowBox[{"3", 
              RowBox[{"(", 
               RowBox[{"B", "/", "A"}], ")"}]}], 
             RowBox[{"2", "+", 
              RowBox[{"B", "/", "A"}]}]]}], ")"}], "2"]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G", "=", 
       RowBox[{"F", " ", 
        RowBox[{"B", "/", "A"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"range1", "=", 
       FractionBox[
        RowBox[{"2", "+", 
         RowBox[{"B", "/", "A"}]}], 
        RowBox[{"3", " ", 
         RowBox[{"B", "/", "A"}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dt", "\[GreaterEqual]", " ", "range1"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "young"}], 
            RowBox[{"1", "-", 
             SuperscriptBox["nu", "2"]}]], " ", 
           FractionBox["1", 
            RowBox[{"dt", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"dt", "-", "1"}], ")"}], "2"]}]]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"range2", "=", 
       FractionBox[
        RowBox[{"Ypa", 
         RowBox[{"(", 
          RowBox[{"A", "-", "F"}], ")"}]}], 
        RowBox[{"C", "+", 
         RowBox[{"Ypa", 
          RowBox[{"(", 
           RowBox[{"B", "-", "G"}], ")"}]}]}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "range2", "\[LessEqual]", " ", "dt", "\[LessEqual]", " ", "range1"}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["F", "dt"], "-", "G"}], ")"}], "Ypa"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"range3", "=", 
       FractionBox[
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"A", "-", 
              StyleBox["2",
               FontWeight->"Plain"]}], ")"}], "2"], "+", 
           RowBox[{"8", 
            RowBox[{"(", 
             RowBox[{"B", "+", 
              RowBox[{"C", "/", "Ypa"}]}], ")"}]}]}], "]"}], "+", 
         RowBox[{"(", 
          RowBox[{"A", "-", "2"}], ")"}]}], 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"B", "+", 
           RowBox[{"C", "/", "Ypa"}]}], ")"}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "range3", "\[LessEqual]", " ", "dt", "\[LessEqual]", " ", "range2"}],
          ")"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{
           RowBox[{"Ypa", " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["A", "dt"], "-", "B"}], ")"}]}], "-", "C"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dt", "\[LessEqual]", " ", "range3"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ColapseStrength", "=", 
          RowBox[{"2", "Ypa", " ", 
           FractionBox[
            RowBox[{"dt", "-", "1"}], 
            SuperscriptBox["dt", "2"]]}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"BurstStrength", ",", "ColapseStrength"}], "}"}], "//", 
       "N"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6622027651456428`*^9, 3.662202781724591*^9}, {
  3.6622042159386234`*^9, 3.6622042728428783`*^9}, {3.66220433057018*^9, 
  3.662204384634272*^9}, {3.6622050359365244`*^9, 3.662205051207398*^9}, {
  3.6622050969720154`*^9, 3.6622051035343904`*^9}, {3.662209710444891*^9, 
  3.662209755901491*^9}, {3.6622098141808243`*^9, 3.662209821283231*^9}, {
  3.662219959668113*^9, 3.6622199683156075`*^9}, {3.677840454624588*^9, 
  3.6778404551607*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcula a tens\[ATilde]o de von Mises", "Subchapter",
 CellChangeTimes->{{3.664449722012049*^9, 3.664449730095125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeVonMises", "[", 
    RowBox[{"sigr_", ",", "sigt_", ",", "siga_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sig", ",", "S", ",", "J2", ",", "vm", ",", "teste"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sig", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sigr", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "sigt", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "siga"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"sig", "-", 
        RowBox[{
         RowBox[{"1", "/", "3"}], " ", 
         RowBox[{"Tr", "[", "sig", "]"}], " ", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"J2", "=", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"S", ".", "S"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"3", " ", "J2"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6778300554046583`*^9, 3.677830113839687*^9}, {
  3.6778303393586144`*^9, 3.6778304298960843`*^9}, {3.6778304686887765`*^9, 
  3.6778304768279886`*^9}, {3.677840457930956*^9, 3.677840458430871*^9}, {
  3.6778550612915196`*^9, 3.6778550673319426`*^9}, {3.6826869749557076`*^9, 
  3.6826869914516506`*^9}, {3.6826870404854555`*^9, 3.6826870796906977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeVonMises", "[", 
  RowBox[{"sigr", ",", "sigt", ",", "siga"}], "]"}]], "Input",
 CellChangeTimes->{{3.6778303829676313`*^9, 3.677830384800565*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["3", "2"]], " ", 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"siga", "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], ")"}],
      "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"sigr", "+", 
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], ")"}],
      "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}], "+", 
       "sigt"}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.6826876460780935`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox[
    FractionBox["3", "2"]], " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"siga", "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"sigr", "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}]}], 
       ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "siga"}], "-", "sigr", "-", "sigt"}], ")"}]}], "+", 
        "sigt"}], ")"}], "2"]}]]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6778550234194183`*^9, 3.677855025220448*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["siga", "2"], "+", 
   SuperscriptBox["sigr", "2"], "-", 
   RowBox[{"sigr", " ", "sigt"}], "+", 
   SuperscriptBox["sigt", "2"], "-", 
   RowBox[{"siga", " ", 
    RowBox[{"(", 
     RowBox[{"sigr", "+", "sigt"}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.6778550260364943`*^9, 3.678103558007333*^9, 
  3.678103655547414*^9, 3.6781300768151445`*^9, 3.6784578497574005`*^9, 
  3.682673772293558*^9, 3.6826748341362925`*^9, 3.6826757633754416`*^9, 
  3.6826763808577595`*^9, 3.6826773856712313`*^9, 3.6826866559084587`*^9, 
  3.6826876461140957`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1.3 Press\[ATilde]o resistente de Klever Stewart", \
"Subchapter"]], "Subchapter",
 CellChangeTimes->{
  3.6593716483959255`*^9, {3.660472226181511*^9, 3.6604722271715126`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeBurstResistance", "[", 
    RowBox[{"n_", ",", "de_", ",", "t_", ",", "fu_", ",", "sa_", ",", "po_"}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kdr", ",", "kr", ",", "puts", ",", "pref", ",", "Futs", ",", "pfactor",
        ",", "pfactorNeck", ",", "pM", ",", "pBurstKS", ",", "pburst"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kdr", "=", 
       RowBox[{
        SuperscriptBox["0.5", 
         RowBox[{"n", "+", "1"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "/", 
           SqrtBox["3"]}], ")"}], 
         RowBox[{"n", "+", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kr", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["4", 
           RowBox[{"1", "-", "n"}]], "-", "1"}], ")"}], "*", 
        SuperscriptBox["3", 
         RowBox[{"n", "-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"puts", "=", 
       FractionBox[
        RowBox[{"2", " ", "kdr", " ", "t", " ", "fu"}], 
        RowBox[{"de", "-", " ", "t"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pref", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["0.5", "n"], "*", "puts"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "/", 
              SqrtBox["3"]}], ")"}], 
            RowBox[{"n", "+", "1"}]], ")"}], "+", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Futs", "=", 
       RowBox[{"Pi", " ", "t", "  ", "fu", 
        RowBox[{"(", 
         RowBox[{"de", "-", "t"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pfactor", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"kr", "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sa", "/", "fu"}], ")"}], "2"]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pfactorNeck", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["sa", "2"], 
           SuperscriptBox["fu", "2"]]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["3", 
            RowBox[{"1", "-", "n"}]]}], "+", 
          SuperscriptBox["4", 
           RowBox[{"1", "-", "n"}]]}]]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pM", "=", 
       RowBox[{"pref", " ", "pfactor"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pBurstKS", "=", 
       RowBox[{"po", "+", 
        RowBox[{"Min", "[", 
         RowBox[{"pM", ",", 
          FractionBox[
           RowBox[{"pM", "+", 
            RowBox[{
             SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         FractionBox["sa", "fu"], "\[LessEqual]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SqrtBox["3"], "2"], ")"}], 
          RowBox[{"1", "-", "n"}]]}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"pM", "\[LessEqual]", " ", 
           FractionBox[
            RowBox[{"pM", "+", 
             RowBox[{
              SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pburst", "=", 
            RowBox[{"po", "+", "pM"}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pburst", "=", " ", 
            RowBox[{"po", "+", 
             FractionBox[
              RowBox[{"pM", "+", 
               RowBox[{
                SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pburst", "=", 
          RowBox[{"po", "+", 
           RowBox[{"pref", "*", "pfactorNeck"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"pburst", "//", "N"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6731096170360327`*^9, 3.673109630651811*^9}, {
  3.6778404617945414`*^9, 3.6778404624796343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "1.3 ",
 StyleBox["Press\[ATilde]o resistente de Klever Tamano", "Subchapter"]
}], "Subchapter",
 CellChangeTimes->{
  3.659445920234787*^9, {3.660476701991751*^9, 3.6604767253840895`*^9}, 
   3.660477065700554*^9, {3.6604851570197334`*^9, 3.660485161089739*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_", ",", "fy_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "+", 
      RowBox[{"0.440", " ", 
       RowBox[{"rs", "/", "fy"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hfunc", "[", 
    RowBox[{"ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"0.127", " ", "ov"}], "+", 
      RowBox[{"0.0039", "ec"}], "-", 
      RowBox[{"0.440", " ", "rs"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputeColapseStrengthKT", "[", 
   RowBox[{
   "siga_", ",", "sigy_", ",", "pi_", ",", "d_", ",", "t_", ",", "young_", 
    ",", "nu_", ",", "ov_", ",", "ec_", ",", "rs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ke", "=", "1"}], ",", "sol", ",", "H", ",", "deltapec", ",", 
      "deltapy", ",", "deltapmises", ",", "deltaptresca", ",", 
      RowBox[{"ky", "=", "1"}], ",", "eq", ",", "po", ",", "Fa", ",", "Feff", 
      ",", "Fy", ",", "Ai", ",", "Ao", ",", "As", ",", "kdr", ",", 
      "BurstStrength", ",", " ", "ColapseStrength", ",", "pyc", ",", "pec", 
      ",", "pym", ",", "xi", ",", "Si", ",", "dt", ",", "c", ",", "val"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"deltaptresca", "=", 
      RowBox[{"ky", " ", "2", " ", "sigy", " ", 
       RowBox[{"t", "/", 
        RowBox[{"(", 
         RowBox[{"d", "-", "t"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"deltapmises", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"ky", 
           RowBox[{"(", 
            RowBox[{"4.", "/", 
             SqrtBox["3."]}], ")"}], "sigy", 
           FractionBox["t", 
            RowBox[{"(", 
             RowBox[{"d", "-", "t"}], ")"}]]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1.", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["siga", 
             RowBox[{"ky", " ", "sigy"}]], ")"}], "2"]}], ")"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"deltapy", "=", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}], 
        ",", "deltapmises"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"deltapy", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"deltapmises", "+", "deltaptresca"}], ")"}], "/", "2"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"deltapec", "=", 
      RowBox[{"ke", " ", 
       FractionBox[
        RowBox[{"2.", " ", "young"}], 
        RowBox[{"1.", "-", 
         SuperscriptBox["nu", "2"]}]], 
       FractionBox["1.", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "/", "t"}], ")"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", "/", "t"}], "-", "1."}], ")"}], "2"]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"Hfunc", "[", 
       RowBox[{"ov", ",", "ec", ",", "rs"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ColapseStrength", "=", 
      RowBox[{"pi", "+", 
       FractionBox[
        RowBox[{"2.", " ", "deltapy", " ", "deltapec"}], 
        RowBox[{"deltapy", "+", "deltapec", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"deltapy", "-", "deltapec"}], ")"}], "^", "2"}], " ", 
           "+", 
           RowBox[{"4.", " ", "H", " ", "deltapy", " ", "deltapec"}]}], 
          "]"}]}]]}]}], ";", "\[IndentingNewLine]", "ColapseStrength"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.645890564588749*^9, 3.645890613229531*^9}, 
   3.6458906795713253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcula os fatores de seguran\[CCedilla]a", "Subchapter",
 CellChangeTimes->{{3.664449741620615*^9, 3.6644497506039553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeSafetyFactors", "[", 
    RowBox[{
    "PipeData_", ",", "AxialForce_", ",", "Pint_", ",", "Pext_", ",", "ov_", 
     ",", "ec_", ",", "rs_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"KTStress", ",", "KSstress", ",", 
       RowBox[{"KSSF", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"KTSF", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"APISF", "=", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"BarlowSF", "=", 
        RowBox[{"{", "}"}]}], ",", "i", ",", "barlow", ",", "api", ",", "de", 
       ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", ",", "L1", 
       ",", "L2", ",", 
       RowBox[{"pipe", "=", "1"}], ",", "sigy", ",", 
       RowBox[{"VMSF", "=", 
        RowBox[{"{", "}"}]}], ",", "sigr", ",", "sigt", ",", "area", ",", 
       "VMStress"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "de", ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", ",", 
         "L1", ",", "L2", ",", "sigy"}], "}"}], "=", 
       RowBox[{"PipeData", "[", 
        RowBox[{"[", "pipe", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", 
         RowBox[{
          RowBox[{"Length", "[", "Pint", "]"}], "-", "1"}]}], ",", 
        RowBox[{"i", ">", "1"}], ",", 
        RowBox[{"i", "--"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"L1", ">", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pipe", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "de", ",", "di", ",", "young", ",", "nu", ",", "weigthperfeet", 
               ",", "L1", ",", "L2", ",", "sigy"}], "}"}], "=", 
             RowBox[{"PipeData", "[", 
              RowBox[{"[", "pipe", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"sigr", ",", "sigt"}], "}"}], "=", 
          RowBox[{"ComputeRadialAndTangetialStress", "[", 
           RowBox[{
            RowBox[{"di", "/", "2"}], ",", 
            RowBox[{"di", "/", "2"}], ",", 
            RowBox[{"de", "/", "2"}], ",", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Pext", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"area", "=", 
          RowBox[{
           RowBox[{"Pi", "/", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"de", "^", "2"}], " ", "-", 
             RowBox[{"di", "^", "2"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"VMStress", "=", 
          RowBox[{"ComputeVonMises", "[", 
           RowBox[{"sigr", ",", "sigt", ",", 
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"KSstress", "=", 
          RowBox[{"ComputeBurstResistance", "[", 
           RowBox[{"1", ",", "de", ",", 
            RowBox[{"0.5", 
             RowBox[{"(", 
              RowBox[{"de", " ", "-", "di"}], ")"}]}], ",", "sigy", ",", 
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            RowBox[{"Pext", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"KTStress", "=", 
          RowBox[{"ComputeColapseStrengthKT", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            "sigy", ",", 
            RowBox[{"Pint", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "de", ",", 
            RowBox[{"0.5", 
             RowBox[{"(", 
              RowBox[{"de", " ", "-", "di"}], ")"}]}], ",", "young", ",", 
            "nu", ",", "ov", ",", "ec", ",", "rs"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"api", "=", 
          RowBox[{"ComputePipeStrength", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AxialForce", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "/", "area"}], ",", 
            "sigy", ",", "de", ",", "di", ",", "young", ",", "nu"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"burst", "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltap", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Pint", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"Pext", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"deltap", "=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Pint", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "+", 
               RowBox[{"Pext", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"BarlowSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"api", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"APISF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"api", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"VMSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sigy", "/", "VMStress"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"KSSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"KSstress", "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"KTSF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"KTStress", "/", "deltap"}], ",", 
             RowBox[{"-", 
              RowBox[{"Pint", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "BarlowSF", ",", "APISF", ",", "VMSF", ",", "KSSF", ",", "KTSF"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730989980258226`*^9, 3.6730989996250257`*^9}, {
  3.673109694587468*^9, 3.6731097058831143`*^9}, {3.673109737122901*^9, 
  3.6731098750027876`*^9}, {3.6731238351922646`*^9, 3.6731239294776573`*^9}, {
  3.682687240213879*^9, 3.682687270459609*^9}, {3.682709280490691*^9, 
  3.6827092813777423`*^9}, {3.682709372384948*^9, 3.682709409786087*^9}, {
  3.6827101181986055`*^9, 3.6827101228618727`*^9}, {3.682710312749733*^9, 
  3.6827103731001854`*^9}, {3.682710405969065*^9, 3.6827104538988066`*^9}, {
  3.6827104876257353`*^9, 3.6827105415788217`*^9}, {3.6827106111768026`*^9, 
  3.6827106304819064`*^9}, {3.6827107287905293`*^9, 3.6827107290075417`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MUD DROP DUE TO LOST RETURNS", "Title",
 CellChangeTimes->{{3.6731235613035994`*^9, 3.6731236018309174`*^9}}],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
8ceZL7xniB9ZbXhr/WR8yT0dP7yO3pM1vHmxrIZ/WRhp5yZ8+vpzpS6jQX66
YP2thqdZN6aN1nSrH+pDxK3PoV7QYw7HDa8ekq0HY3OG3XS+c63ZVqtzjRfn
zT/OdOE1/Gda3+MznDVeBdjx9/h8W7wnaPjkkk/S8NN7Mu0+TM+tV0pW3uhp
3eJ07XcysfWSdnElabIY/Tckzl8U18dIX98ePr/RhVfZCxMW1Esy+0ut/3Gm
C6/hP7X0PT6T+2Rn6+ET89z14hpeFrvZ8Hsv768tjrT1b9Ccjed65XtYzVm9
xe8bXuvfNj2r4etzqL5yq7mFY8si1b/XalMbx/QdNrCsrfxPNrBU31Og4b83
euqdDfrdfY/PivpiiQ3vL7Dx14yxPNLW1yun37O5/gKzeYvfN3x2+2c3fHnt
up7duNLTDRzrizSa89L28NZsm1e1Hn4Lrf1Ovn5q3IP7+R6fjdIb/mzaW4qn
PyydO96ke9n18PG238Zj5tuGN/+1uj18ukjTVffmDEe/2WR9fr7Y/WwnG2Y2
Ndz28AtpfY/PwrrHjr7HZyMNfyyzFZH2hoL2uX+m2xKXr9u4xXam6pE/e6Sd
2fCFx2q/MbSxX0q1eaP/kMbqIk0s7B/emu3S1pW1hg9XOrxZD+cuNBwu4Hlf
qvPIXhb2P7z3cg00nAdWvRKyIYV7CG24jAN0Gg6QTMMBcmk4QC4NB8il4QC5
NBwgms/4AOTScIBcGg6QS8MBcmk4QC4NB8il4QC5NBwgl4YD5NJwgFwaDpAr
ruECDlCrM67hAFk0HCCXhgPk0nCAXBoOkEvDAULZtxAgV1zDZRygp+EAuTQc
IJeGA+TScIBcGg6QS8MBcmk4QC4NB8il4QC5NBwg1MssjxENl3GATsMBkmk4
QC4NB8il4QC5NBwgl4YD5AptuIADFD7jA5BLwwFyaThALg0HyKXhALk0HCCX
hgPk0nCAXBoOkEvDAXLFNVzAAWp1xjUcIIuGA+TScIBcGg6QS8MBcmk4QC4N
Bwhl/3CAXHENl3GAnoYD5NJwgFwaDpBLwwFyaThALg0HyKXhALk0HCCXhgOE
epnlUcMBUoQ2XMYBOg0HSKbhALk0HCCXhgPk0nCAXKENF3CAwmd8AHJpOEAu
DQfIpeEAuTQcIJeGA+TScIBcGg6QS8MBcmk4QC4NB4hWZ/zxGy7gADUNB8il
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
AAAAAEDT/wM2/f11
     "], {{0, 858}, {492, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{492, 858},
   PlotRange->{{0, 492}, {0, 858}}], "Title"]], "Title",
 CellChangeTimes->{3.673123986991947*^9, 3.673124852393445*^9, 
  3.6827118677346735`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"burst", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "100", ",", "951", ",", "1901", ",", "2100", ",", "2100", ",", 
     "2581", ",", "2851", ",", "2995", ",", "3409", ",", "3801", ",", "3823", 
     ",", "4237", ",", "4651", ",", "4751", ",", "5065", ",", "5479", ",", 
     "5700", ",", "5893", ",", "6307", ",", "6650", ",", "6721", ",", "7135", 
     ",", "7549", ",", "7600", ",", "7963", ",", "8377", ",", "8550", ",", 
     "8791", ",", "9066", ",", "9205", ",", "9500", ",", "9500", ",", "9618", 
     ",", "9700", ",", "9700", ",", "9950", ",", "10032", ",", "10400", ",", 
     "10446", ",", "10850", ",", "10860", ",", "11274", ",", "11300", ",", 
     "11688", ",", "11750", ",", "12102", ",", "12200", ",", "12516", ",", 
     "12650", ",", "12930", ",", "13100", ",", "13344", ",", "13550", ",", 
     "13758", ",", "13885", ",", "14000", ",", "14100", ",", "14172", ",", 
     "14200", ",", "14300", ",", "14400", ",", "14500", ",", "14586", ",", 
     "14600", ",", "14700", ",", "14800", ",", "14900", ",", "15000"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InternalPressLostCirc", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.36", ",", "1.36", ",", "1.36", ",", "1.37", ",", "1.37", ",", "1.37", 
     ",", "1.37", ",", "246.55", ",", "377.70", ",", "754.03", ",", "1110.09",
      ",", "1130.36", ",", "1506.70", ",", "1883.03", ",", "1973.64", ",", 
     "2259.36", ",", "2635.70", ",", "2837.18", ",", "3012.03", ",", 
     "3388.36", ",", "3700.72", ",", "3764.69", ",", "4141.03", ",", 
     "4517.36", ",", "4564.27", ",", "4893.69", ",", "5270.03", ",", 
     "5427.82", ",", "5646.36", ",", "5896.81", ",", "6022.69", ",", 
     "6291.27", ",", "6291.45", ",", "6399.03", ",", "6473.09", ",", 
     "6473.27", ",", "6700.45", ",", "6775.36", ",", "7109.54", ",", 
     "7151.69", ",", "7518.63", ",", "7528.02", ",", "7904.36", ",", 
     "7927.72", ",", "8280.69", ",", "8336.81", ",", "8657.02", ",", 
     "8745.90", ",", "9033.36", ",", "9154.99", ",", "9409.69", ",", 
     "9564.08", ",", "9786.02", ",", "9973.17", ",", "10162.35", ",", 
     "10277.71", ",", "10382.26", ",", "10473.17", ",", "10538.69", ",", 
     "10564.08", ",", "10654.99", ",", "10745.90", ",", "10836.81", ",", 
     "10915.02", ",", "10927.72", ",", "11018.63", ",", "11109.53", ",", 
     "11200.44", ",", "11291.26"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressLostCirc", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.00", ",", "74.49", ",", "715.43", ",", "1430.94", ",", "1580.91", ",", 
     "1581.06", ",", "1943.30", ",", "2146.45", ",", "2255.12", ",", 
     "2566.93", ",", "2861.96", ",", "2878.76", ",", "3190.58", ",", 
     "3502.39", ",", "3577.47", ",", "3814.21", ",", "4126.04", ",", 
     "4292.98", ",", "4437.85", ",", "4749.67", ",", "5008.49", ",", 
     "5061.49", ",", "5373.31", ",", "5685.13", ",", "5724.00", ",", 
     "5996.95", ",", "6308.76", ",", "6439.51", ",", "6620.59", ",", 
     "6828.10", ",", "6932.40", ",", "7154.94", ",", "7155.92", ",", 
     "7245.04", ",", "7306.41", ",", "7306.57", ",", "7494.80", ",", 
     "7556.87", ",", "7833.76", ",", "7868.69", ",", "8172.72", ",", 
     "8180.50", ",", "8492.32", ",", "8511.68", ",", "8804.15", ",", 
     "8850.64", ",", "9115.96", ",", "9189.60", ",", "9427.78", ",", 
     "9528.56", ",", "9739.60", ",", "9867.52", ",", "10051.41", ",", 
     "10206.48", ",", "10363.23", ",", "10458.82", ",", "10545.44", ",", 
     "10620.77", ",", "10675.05", ",", "10696.09", ",", "10771.42", ",", 
     "10846.74", ",", "10922.07", ",", "10986.87", ",", "10997.39", ",", 
     "11072.72", ",", "11148.04", ",", "11223.37", ",", "11298.62"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"AxialForceLostCircWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "572652", ",", "567361", ",", "521838", ",", "471018", ",", "460366", ",",
      "460355", ",", "434627", ",", "420198", ",", "412480", ",", "390333", 
     ",", "369379", ",", "368186", ",", "346038", ",", "323891", ",", 
     "318559", ",", "301744", ",", "279597", ",", "267739", ",", "257450", 
     ",", "235302", ",", "216920", ",", "213155", ",", "191008", ",", 
     "168861", ",", "166100", ",", "146713", ",", "124566", ",", "115281", 
     ",", "102419", ",", "87680", ",", "80272", ",", "64461", ",", "78890", 
     ",", "73268", ",", "69395", ",", "69396", ",", "57528", ",", "53616", 
     ",", "36166", ",", "33965", ",", "14805", ",", "14315", ",", 
     RowBox[{"-", "5338"}], ",", 
     RowBox[{"-", "6558"}], ",", 
     RowBox[{"-", "24987"}], ",", 
     RowBox[{"-", "27917"}], ",", 
     RowBox[{"-", "44637"}], ",", 
     RowBox[{"-", "49278"}], ",", 
     RowBox[{"-", "64289"}], ",", 
     RowBox[{"-", "70641"}], ",", 
     RowBox[{"-", "83941"}], ",", 
     RowBox[{"-", "92002"}], ",", 
     RowBox[{"-", "103591"}], ",", 
     RowBox[{"-", "113363"}], ",", 
     RowBox[{"-", "123240"}], ",", 
     RowBox[{"-", "129264"}], ",", 
     RowBox[{"-", "134602"}], ",", 
     RowBox[{"-", "139149"}], ",", 
     RowBox[{"-", "142425"}], ",", 
     RowBox[{"-", "143695"}], ",", 
     RowBox[{"-", "148241"}], ",", 
     RowBox[{"-", "152788"}], ",", 
     RowBox[{"-", "157326"}], ",", 
     RowBox[{"-", "161215"}], ",", 
     RowBox[{"-", "161846"}], ",", 
     RowBox[{"-", "166366"}], ",", 
     RowBox[{"-", "170886"}], ",", 
     RowBox[{"-", "175406"}], ",", 
     RowBox[{"-", "179926"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvecini", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "951", ",", "1901", ",", "2100", ",", "2100", ",", "2851", ",", 
     "3801", ",", "4751", ",", "5700", ",", "6650", ",", "7600", ",", "8550", 
     ",", "9500", ",", "9500", ",", "9501", ",", "9700", ",", "9700", ",", 
     "9950", ",", "10400", ",", "10850", ",", "11300", ",", "11750", ",", 
     "12200", ",", "12650", ",", "13100", ",", "13550", ",", "14000", ",", 
     "14100", ",", "14200", ",", "14300", ",", "14400", ",", "14500", ",", 
     "14600", ",", "14700", ",", "14800", ",", "14900", ",", "15000"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "616757", ",", "565942", ",", "515123", ",", "504471", ",", "504460", ",",
      "464303", ",", "413483", ",", "362664", ",", "311844", ",", "261025", 
     ",", "210205", ",", "159385", ",", "108566", ",", "108566", ",", 
     "108539", ",", "97866", ",", "97866", ",", "84491", ",", "60416", ",", 
     "36341", ",", "12266", ",", 
     RowBox[{"-", "11809"}], ",", 
     RowBox[{"-", "35884"}], ",", 
     RowBox[{"-", "59959"}], ",", 
     RowBox[{"-", "84034"}], ",", 
     RowBox[{"-", "108110"}], ",", 
     RowBox[{"-", "132185"}], ",", 
     RowBox[{"-", "137535"}], ",", 
     RowBox[{"-", "142885"}], ",", 
     RowBox[{"-", "148235"}], ",", 
     RowBox[{"-", "153585"}], ",", 
     RowBox[{"-", "158935"}], ",", 
     RowBox[{"-", "164285"}], ",", 
     RowBox[{"-", "169635"}], ",", 
     RowBox[{"-", "174985"}], ",", 
     RowBox[{"-", "180335"}], ",", 
     RowBox[{"-", "185685"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "AxialForceInitialWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.88", ",", "716.30", ",", "1431.80", ",", "1581.77", ",", "1581.92", 
     ",", "2147.30", ",", "2862.80", ",", "3578.30", ",", "4293.80", ",", 
     "5009.30", ",", "5724.80", ",", "6440.30", ",", "7155.73", ",", 
     "7155.88", ",", "7156.18", ",", "7306.39", ",", "7306.54", ",", 
     "7494.80", ",", "7833.80", ",", "8172.70", ",", "8511.70", ",", 
     "8850.60", ",", "9189.60", ",", "9528.60", ",", "9867.50", ",", 
     "10206.50", ",", "10545.40", ",", "10620.80", ",", "10696.10", ",", 
     "10771.40", ",", "10846.70", ",", "10922.10", ",", "10997.40", ",", 
     "11072.70", ",", "11148.00", ",", "11223.40", ",", "11298.62"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "InternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.88", ",", "716.30", ",", "1431.80", ",", "1581.77", ",", "1581.92", 
     ",", "2147.30", ",", "2862.80", ",", "3578.30", ",", "4293.80", ",", 
     "5009.30", ",", "5724.80", ",", "6440.30", ",", "7155.73", ",", 
     "7155.88", ",", "7156.18", ",", "7309.50", ",", "7309.65", ",", 
     "7501.80", ",", "7847.80", ",", "8193.75", ",", "8539.70", ",", 
     "8885.70", ",", "9231.70", ",", "9577.65", ",", "9923.60", ",", 
     "10269.60", ",", "10615.60", ",", "10697.65", ",", "10779.70", ",", 
     "10861.80", ",", "10943.90", ",", "11025.95", ",", "11108.00", ",", 
     "11190.10", ",", "11272.20", ",", "11354.30", ",", "11436.32"}], "}"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"lvec", ",", "lvecini", ",", "ExternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"{", 
    RowBox[{
    "2.172", ",", "2.168", ",", "2.109", ",", "1.994", ",", "1.894", ",", 
     "1.939", ",", "1.964", ",", "2.040", ",", "2.117", ",", "2.122", ",", 
     "2.210", ",", "2.307", ",", "2.331", ",", "2.412", ",", "2.527", ",", 
     "2.593", ",", "2.653", ",", "2.793", ",", "2.921", ",", "2.949", ",", 
     "3.122", ",", "3.318", ",", "3.344", ",", "3.539", ",", "3.793", ",", 
     "3.910", ",", "4.085", ",", "4.305", ",", "4.425", ",", "4.705", ",", 
     "4.488", ",", "4.589", ",", "4.660", ",", "4.660", ",", "4.896", ",", 
     "4.978", ",", "5.385", ",", "5.441", ",", "5.983", ",", "5.998", ",", 
     "6.682", ",", "6.730", ",", "7.542", ",", "7.690", ",", "8.656", ",", 
     "8.969", ",", "10.157", ",", "10.759", ",", "12.286", ",", "13.442", ",",
      "15.543", ",", "17.903", ",", "21.146", ",", "23.771", ",", "26.723", 
     ",", "29.896", ",", "32.692", ",", "33.922", ",", "39.196", ",", 
     "46.402", ",", "56.813", ",", "70.297", ",", "73.107", ",", "100", ",", 
     "100", ",", "100", ",", "100"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"{", 
     RowBox[{
     "100", ",", "69.549", ",", "7.439", ",", "3.836", ",", "2.883", ",", 
      "2.927", ",", "2.951", ",", "3.020", ",", "3.085", ",", "3.089", ",", 
      "3.159", ",", "3.229", ",", "3.246", ",", "3.300", ",", "3.372", ",", 
      "3.411", ",", "3.445", ",", "3.519", ",", "3.581", ",", "3.594", ",", 
      "3.669", ",", "3.746", ",", "3.756", ",", "3.824", ",", "3.903", ",", 
      "3.936", ",", "3.983", ",", "4.037", ",", "4.065", ",", "4.124", ",", 
      "4.107", ",", "4.130", ",", "4.146", ",", "4.146", ",", "4.195", ",", 
      "4.212", ",", "4.286", ",", "4.295", ",", "4.378", ",", "4.381", ",", 
      "4.462", ",", "4.466", ",", "4.529", ",", "4.539", ",", "4.597", ",", 
      "4.614", ",", "4.668", ",", "4.692", ",", "4.742", ",", "4.772", ",", 
      "4.817", ",", "4.856", ",", "4.895", ",", "4.920", ",", "4.942", ",", 
      "4.962", ",", "4.976", ",", "4.981", ",", "5.001", ",", "5.021", ",", 
      "5.042", ",", "5.059", ",", "5.062", ",", "5.083", ",", "5.103", ",", 
      "5.124", ",", "5.145"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Refinamento", " ", "da", " ", "solu\[CCedilla]\[ATilde]o"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refinedl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"dl", ",", 
     RowBox[{"{", 
      RowBox[{"dl", ",", "0", ",", "15000", ",", "200"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "AxialForceInitialWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceLostCircWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "AxialForceLostCircWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressLostCirc", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressLostCirc"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressLostCirc", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressLostCirc"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "Ti"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "lvec", ",", "Tf"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"newlvec", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "100", ",", "950", ",", "1900", ",", "2581", ",", "2850", ",", 
      "2995", ",", "3409", ",", "3800", ",", "3823", ",", "4237", ",", "4651",
       ",", "4750", ",", "5065", ",", "5479", ",", "5700", ",", "5893", ",", 
      "6307", ",", "6650", ",", "6721", ",", "7135", ",", "7549", ",", "7600",
       ",", "7963", ",", "8377", ",", "8550", ",", "8791", ",", "9066", ",", 
      "9205", ",", "9500", ",", "9500", ",", "9618", ",", "9700", ",", "9700",
       ",", "9950", ",", "10032", ",", "10400", ",", "10446", ",", "10850", 
      ",", "10860", ",", "11274", ",", "11300", ",", "11688", ",", "11750", 
      ",", "12102", ",", "12200", ",", "12516", ",", "12650", ",", "12930", 
      ",", "13100", ",", "13344", ",", "13550", ",", "13758", ",", "13885", 
      ",", "14000", ",", "14100", ",", "14172", ",", "14200", ",", "14300", 
      ",", "14400", ",", "14500", ",", "14586", ",", "14600", ",", "14700", 
      ",", "14800", ",", "14900", ",", "15000"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "newlvec", ",", "vmsfwellcat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "newlvec", ",", "colapsesfwellcat"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lvec", "=", "refinedl"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcatwithl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vmsfwellcat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcatwithl", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colapsesfwellcat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lcimento", "=", "9500.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", "8.535"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "9.625"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alfa", "=", 
   RowBox[{"6.9", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"3", " ", 
    RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightperfeet", "=", "53.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "80000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PipeData", "=", 
   RowBox[{"{", 
    RowBox[{
    "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", 
     "weightperfeet", ",", "lcimento"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fi", ",", "Ffim"}], "}"}], "=", 
   RowBox[{"ComputeForces", "[", 
    RowBox[{
    "InternalPressinitial", ",", "ExternalPressinitial", ",", 
     "InternalPressLostCirc", ",", "ExternalPressLostCirc", ",", "Ti", ",", 
     "Tf", ",", "lvec", ",", "PipeData"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputedFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ComputedFfim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WellCatFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AxialForceInitialWellCat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WellCatFfim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AxialForceLostCircWellCat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffini", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ExternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"InternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressLostCircPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressLostCircPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"difffim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ExternalPressLostCirc", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"InternalPressLostCirc", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pressaoini", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "InternalPressinitialPlot", ",", "ExternalPressinitialPlot", ",", 
      "diffini"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \
\(o\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressaosobrevi", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InternalPressLostCircPlot", ",", "ExternalPressLostCircPlot", ",", 
       "difffim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \(o\
\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcaini", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFi", ",", "ComputedFi"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Inicial (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Diogo\\\\Dropbox\\\\figs\\\\compara05ftcimentofini.\
jpg\>\"", ",", "compara", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcafim", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFfim", ",", "ComputedFfim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Final (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedata", "=", 
   RowBox[{"{", 
    RowBox[{"de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedatavec", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", 
        RowBox[{"Length", "[", "lvec", "]"}], "]"}], "]"}], ",", "sigy"}], 
     "}"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PiData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PeData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressLostCirc", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "barlowsf", ",", "apisf", ",", "vmsf", ",", "kssf", ",", "ktsf"}], "}"}],
     "=", 
    RowBox[{"ComputeSafetyFactors", "[", 
     RowBox[{
     "pipedatavec", ",", "ax", ",", "PiData", ",", "PeData", ",", "0.66", ",",
       "13.2", ",", 
      RowBox[{"-", "0.264"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"vmsfplot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vmsfwellcatwithl", ",", "vmsf"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\>\"", ",", 
         "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<von Mises WellCat\>\"", ",", "\"\<von Mises Calculado\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\""}], 
      "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kssfplot", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ktsf", ",", "apisf", ",", "colapsesfwellcatwithl"}], "}"}], 
     ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<fator de Seguran\[CCedilla]a ao Colapso\>\"", ",", "\"\<\>\""}],
          "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Klever Tamano Calculado\>\"", ",", "\"\<API Calculado\>\"", ",", 
        "\"\<Fator de Seguran\[CCedilla]a ao Colapso - WellCat\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682674377544177*^9, 3.6826743777351875`*^9}, {
  3.68268730561362*^9, 3.682687336124365*^9}, {3.682709636057029*^9, 
  3.682709662688552*^9}, {3.6827103792985396`*^9, 3.68271038193369*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressKick] = \"\>", "\[InvisibleSpace]", "76"}],
  SequenceForm["Length[InternalPressKick] = ", 76],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311126623`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "76"}],
  SequenceForm["Length[InternalPressinitial] = ", 76],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.682710731114662*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressKick] = \"\>", "\[InvisibleSpace]", "76"}],
  SequenceForm["Length[ExternalPressKick] = ", 76],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311166625`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "76"}],
  SequenceForm["Length[ExternalPressinitial] = ", 76],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6826866560094647`*^9, 3.682686993920792*^9, {3.682687060557604*^9, 
   3.68268708549403*^9}, 3.682687337672454*^9, 3.6826876462421026`*^9, 
   3.6827096954784274`*^9, 3.682710408271197*^9, 3.682710457511013*^9, 
   3.6827105115741053`*^9, 3.6827105439769588`*^9, 3.6827106357392073`*^9, 
   3.6827107311176624`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJwt0ntIU3EUB/A5o6CsXIbaiyyMCmsOJNCKKT3sj5ReWFaL0uxhrpQKShMi
i9qk0iypG2bNplMrm4/NR1O/c+6lq6gmvcykhF4mPRSCHnTnOQfG5bN7fr9z
fud356RmbtwjlUgkCeLP91yoKugYWTAYK+HY3V2VbfucGkdKh+m0619N72F2
NprnWOL+rMwlIw99b7dY9T15/F6LcW5Z4m3tOXJcAZLnJzmMyvOcXwTvCs/s
t9mF5P5i/P1+sHePt4jXC5inmywMyovJYSWYsfrxH532Ku93E47SkuebBwSy
QofhhKBLr5UlvH8ZjpxcG7NNKCWv16NgSnr+4+xbXK8cE/vUeeMNOnKWATpT
a3+it4zrV2HJhUmxl/z05MJquNN23vDKy7mfu9ix3Pg7RFVBNt7D9yC/bdu1
Bu7vPs5+2dBUaq4k7zdiuq0s+N37Ku63FjXXfx6dJ7tD/lULTdBeS67yLvdf
h3dTk3bK1PfImnosC14lrRBq+DwNuBISVb7UeZ8casKxAJl+X46Rz2dCnTRF
P0tWS640I/eQdlO7gZ3ViPhXtdIUZR05ugmBvj962JJm+F7rM+rJrmaUz4oI
jJc28DxakClu9+EaO/kBYkZOHNJGmng+FviL5SMc7I8WPPSIoTLzvFpxNVpc
8JN9vA2pYnpgfiPPrx0RvobCmshjAN/2mxrZ+4FxM8PXDCc2kz3A1+RTiqIB
tsKKZ8V90xQnWshXrGh5usz/kewBz9sK3+eVUclWdaCqzz92WGnh+Xcg8k34
WGsPO9yG48fEULfyfdgw1xf+beRBG51PYK/vRIjaGqxWtJMbOpEywbxrgpMd
asd1QRBeykHOtePb0NCQPIfdb4dv+Sk7e5UDMjGeBFr5Ph1UX8UOcFJ/BnaW
k/r5wfY6KV/Zwfftonwtu8QFrUajcXnZEjfkL/IWh4bZyGlu3Kmurj6QwXa5
MTomM3tRFz5dVn4KknaSC7tw8X30xd2J7OEuRIlRf42d3D3aX8AA29I9Oo+t
kXZymIfyc9hnPKP1JA72Rw9sIwtU62QOcsJD/AdUX64r
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwt1HtIU3EUB/A1CyHNXIZZWWkYFoYJEviIae8/UrIsk1yYpqVoag8o0172
clFpptTKrNnWtIdt5qZuM79zuofOAptED0xUSMuU0CJ60b3+zoHL5XPv757f
Oedern9q7vZ0oUAgiOEO/rxCUtL2fflolIBiX1dtvvlzajRTJrTnbP/qPhwm
56PZ3xj9Z30hM4rQ93GXSdFbRPelcLWLYh9ILzFHlyAxcKdFLb5C68vgXOdY
8jG/lLm/An+/HfyQ7iyj52VYJp8tGw2uYParxMKNr/7IpTcp3z1YqirfJAzJ
mEPkmIzxuv5eXEn5q3Hk9Jbw3bIq5jgFSuZkXn6Vf5/2U2JWX3bRTJWcOU8F
ubalP9ZZTfvXYvVVj6jr0xTMpY9gT0u+6wxWUj1PsGeN+vc8yUNm9VN885q2
O0mqovqe4eKXbU1VuhrmDDUWmKu9BwZrqV4N6m5PHF0mesz8U4Nir/3GQvET
qr8eA3N3JouynzIXP0ek9wbhQ1kd9dOA8nmhygjrM2YfLY65ixQHTqipPy3q
hSmKRSINc40OhTnS+FYVOa8Rm95phCnieuawJnjyF3rJgmbwtxVZz5ltzVAu
CvLcJGygeeiRy6X7dIucaED494Ic6SotzccIF277IAt52IhuBxcSHc2rBTfD
uAcmyMdfIJVb7nm5kebXiiC+IL8m5ukAnz6+kZwBuPoGbJ6MbWZ2AF8Tz4aU
DZFDTHhd0Tc/pEDPXG6CvifS5aXIQPM2gf+8smrIkjbsKbo/fibaSPNvw/am
xRey3pEDzCgXj9wQH22h92GGekaSeobHC+ZRM+tPRY5rR/i1wbBra1uZG9qh
3PpLsfU92acDxXxEgLmwA1Fc+sxL5P4OpLjp9m5xkjdYMD42Nhbsb6L3acGp
nsCTc3LI7la46/a6/dCT86y4LZPJ3rq2MTutiOO21+8gh9nAl39HTq60wWgw
GArGyAI7DvtaD0kizcxpdtZ/Mdlmx1I+eskrO6HhEy5tZy7tnOpnJIc82cnm
YyAndrH6ZnUwG7sQysVEMtnPgalzPfm8Y2r9/OkW5mEHpn5XCeSYbvwHvg+2
XQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJx90E9I03EUAPAvYgdhJ087DFpZN4tFUiOxfqFGo1ErOgy2kERjQuACDwUR
Y3iYsGq0BQqSFP3Zomi2ZaWznpu5P/481cGDi4FQm3hQ8DDo4vvt7fLeoQdf
fnx47/fe+34PDY5eG25RSjnxGN//xwhw3+OGoMhPcGuPRf0T7spT8f8Ut3Va
9Jvhtj0X/V9wu16Kea+4/W/E/AR35K3Y5x138r3Y7wO3L8ltm+WuC8NH7lCK
25XmNn/irgjH57j9n7ntX7jVV+6CcGSe273Abc1wV4WTi9x3v3Fr37lbgdsn
rAvblrhjwnVhbxaU1l1qW62faxjQ4dt//yXatYaP5ED5Lfk7loPkENpg/ih5
O9fs10l2LYM6bMQJchrdZ0QX2fwD1Ea5XL5xmnwf/WzPMTN2hlxBb0XP1qI9
5L4VUL+Neo0cR3uTBzw758mmPKgYlj/oJfvRa7qum/rJv9DH14PHJi+Q7QVQ
DzftjzoukqfRJzFSDrIqNve9RB5C13Cfn05yoUj3G7xM7iyBKuBz7F4hR0oQ
wHHrWRd5r0T7hK+S3asQuIXx5zo5g8a07nSTrTrlX3vI43rzPgPkqg6akT91
k+xcg30tleeO
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJwt0ntI01EUB/C5RUFZuQy1F1kYGdYcRGAPpvT8I6WHVFYLU3u7SiooTYgs
aotKs0R/YdZsOrXS+dh8NPU75166imrS26SEXiY9FIIe9JvnHLh/fPY7955z
z92s1MMbd8skEkm8uALEJRXXPHVux3DkQKyEI627MtP+OTWOtB/mM+5/1a+P
sDPRPMsa92dFNhk56H27xWboyeHvOozxyBNu686T43KRNHeT06S6yPn58C33
znybmUfuK8Df7wdf7/bl834Bc/QThQFFATm8GNNWPfqj1xXyeTfhLCl+trlf
ICv1GIoPvvJKVcznl+LoqbWLtwkl5PUG5E7af+FR5i2uV4bxvZqcsUY9OcMI
vbm1L8FXyvUrsejShNgrAQZyXhU8u5Jv+BRl3M9d7Fhm+h2qLieb7uF7cMC2
7Toj91eDc182NJVYKsj7TJhqLw15976S+61F9fWfx+bI75B/1UIbvMearbrL
/dfh3eRNyXLNPbK2HktDVkrLhWq+TwOuhS4sW+KqIYeZcTxQbtibZeL7mVEn
TTHMkNeSKyzIPqRLbDeyMxqx+mWtNEVVR45pQpD/hx62pBn+z4b0erK7GWUz
ooJWSxt4Hi04LB73oYiddB+Lh08e0kWbeT5WyMTyUU72RyseeMVQW3herSiM
ETf8ZJ9oQ6qYHnShkefXjih/Q+FN5FGA//jERvY+YMz0iDVDCc1kL/A16bQy
v5+ttOFpQe8U5ckW8jUbWp4slT2U3+d52+D/e6VXsNUdqOyVxQ6prDz/DkS/
iRht62FH2HHiuBiaVn4PO2b7Q9ZGHrDT/QT2+k6EamwhGmU7uaETKeMsO8e5
2GEOXBcE4YUC5GwHvg0ODiqy2H0O+LefdrBXOiEX43GQjd/TSfXV7EAX9Wdk
Z7ionx9sn4vyVR383m7K17GL3dBptVq3jy3xQPE8Z0FYuJ28y4M7VVVVB9LZ
bg9GxmRhz+/Cp6uqT8HSTnJeFy6/j7mclsAe6sJCMeqL2EndI/0F9rOt3SPz
2BrtIId7KT+LfdY7Uk/iZH/0wj4cqV4nd5LjH+A/ZdeuLQ==
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJwt1HtIU3EUB/A5DaHUnEbvh0pSYZgQgY+Y9v5DRbOX1MK0p1hmFpRpL3s5
qTRTbLas2da0UjdzU7eZ3zndQ1dBTSIVkxKyMiW0iF50r79z4Mfls/u753fO
uZcFph1N2u8uEAjiuOXGLSG3lkmK2r8vHYkWUOztrsmxfE6LYUqH7qL9X11/
NjkHLYGmmD/r8piRj4F3O8zKnny6L4WnQxT/QHqVOaYIyUu2WTXia7S/BK61
zkXvcoqZB8vw99uR/v2uEnpehmDFdNlIaBlzgBzzNrz8o5CWU757sFbK32wf
kjGHKTAR53+zTyyn/FU4fi42YqeskjlRiSK/9MKXOffpPBW8Bw7nT1UrmLPU
UOhaB+NdVXR+DVZd94m+6aZkLn4Ex76Uu65QFdXzBLtXa37Pkjxk1tTim7/b
zl1SNdVXjytfNjdX6quZD2kw11I18/2HGqpXi7qK8RPBosfMP7Uo8D9gyhM/
ofob8H7GthTR4VrmgqeImrle+FBWR/00onTWSlWkrZ55tg4nvUTKg6c11J8O
DcJU5QKRlrlaj7xM6ZY2NTmrCRt7tcJUcQNzeDN8+R96yIIW8LeVGU+Z7S1Q
LQjx3ShspHkYcJRL9/E2OdmIiO+5mdIVOpqPCe7c8SFW8rAJz51cSPQ0r1aU
h3MPjJNPPUMat923sInm14YQvqCAZmYPgE+/pYl8CPCcv3jTRHwLsxP4mnwh
rGSIHGbG67KBOWG5BuZSMwyvotxfiIw0bzP4zyujmixpx+78+2PnY0w0/3Yk
NS+8nNFLXmxBqfjTLfGJVnofFmim7NJM8XnGPGJh/anJiR2IuPEh/MaaNubG
DqgSfikT+sizO1HARySY8zoRzaVPv0oe7ETqNP2eWBd5vRVjo6OjoYFmep9W
nH215IxfJtnLBi/9nmk/DOQsGypkMtlbz3Zmlw2J3PGGreRwO/jy7yjIcjtM
RqMxd5QscCB7vu2YJMrCvM/B+i8g2x0I4qOHvLwLWj5hUAdzcddkP58yyRNd
bD5GcnI3q8+7k9nUjZVcjKeQA5yYvDaQLzkn98/xsDIPOzH5d7WdHPcc/wHP
h7Zf
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJyF0E9IVGEQAPDP0kOwp04eFlorbxYrRi1G+cI1khZ9ioeFNcTFxCBohQ4G
IrJ0UNBa0qBAFMVSQ/HVWvm3JrV2ffv2pAcPrSwIuUoHAw8LXpzn7GXm0sB3
+DHzzcz3FQWf1D88q5Ty4cnDc0b9Lx4B9zNuCIt8L7f2UtS/4k6/FvffcruG
RL8Rbveo6D/GrY+Lee+4QxNi/hR35IPYZ5rbmBH7zXK3Gdzuj9xZYfjE3RPl
1ue4Cz9zp4Unv3CHvnJ75rnVAndcOLLI7V/idi1zZ4SNFe6Ob9zad+584G4T
toTdP7gHhbPCjaugtJvmuUS24tSA7nu8dzx1Xjv15TVQIWes3XmB3IO2GSsm
/13L9Ssh6+ugLtpRSp5De+24Ri78Cep3KpV6cIPciR4+qh55Wk5Oow8Gbu8P
3CJ7f4Hases18iS60SgIHN4hO2KgBrG8q5IcQicty3JUkbfQV7fDV97cJXvi
oPp3PS8u3SMPocswotVktZHb9z65Bb2P+2z6yPENel+whlxigorjd/yrJUdM
6MZx26s6+cikffrqyP4EdLdi/GkgL6Mxbfn8ZJdF+fcB8nMr954mcsYCzc5f
byb7knACPw3nkA==
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 11436.32}, {-15000., 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 11436.32}, {-15000., 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731202667*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd1HlIk2EcB/C1JDsRyu6srRK0g7Qs7aJVWlEmuQIlIiuKjIo0s9LusFI7
PLBk5NF0ase2tjmvOeu7W+dr/dGhYZSmpTTLouy0w/b8/GM98PLy4X3fh+f3
/cIr3HFAvIvP4/FC+65/d1OPz5Y0Y88yHi1X74GrE1yNs/89T0GGJiJAbiaL
0qANzate19D/fiaa3rSvcDwht1xF7+mZ9tQX/d9LMGXiwfAZHWRBDrrCKyef
c/Tvl+9qP6mrUYBpb3Q3svPnipzeIANPOz8p330Pc0sRHuRaKxxtR5hjSsAr
3B247cYZZt4tjPvqyLSHXWBOv42AvRcqvXsvMQvkGNm9ZphuUwazSoFhc07N
GzI7i1l0F4HG4o0r3bKZo1WQxqr3JjRLmP3UUF6Pkyg1Oczf1BDLv4g7k/OZ
oUF9hLVwv5+UObkU/gqL3iengObRwnr4GWdxlzGPK0PjPlvMoENFNF8Zghc3
L7n8spj5ZjneayQXr629SfNW4LMtcap/+S3moEq0vhM8nDD1Ds1fBXNgaELU
FTlzbRUmui1uHfBdQXnooGoI+5i38y5zZDVOLeckXtEqykcPPrfk9VsvNXOn
3tlPyGOyqgYD5seZzSka5qP30HZJwN+4rJTyuw9F7IxUYQ/ZDTCI5g7k39FS
nsCj+FGDfLeXMXMAP8yUcGVMOeVrQL00pLyUI2cZkL3LI973bAXlbYB8m/rp
wqBK5i1GNAn/XMt7T4YRg+WTNk+XVTFPN+Gk+6sjgs066sOEaN9cqcOjmrnL
hMbCmKWpFvIGM7pPcjPTj+mZtWZEmdbHB/rXUF8WJDZFtq/pIB+3ILhmx76x
ufeoPwu2cx881OL7zMFWxCl+hYS7gfq0ojXRU+kdRR5uc9pLR46xYV7f+uRp
YH5sQ55s1XjHAXJQLR78KDrfYCfn1OJ2QPvzCm8jM68Oc37asqSnyTvr0LXo
xO+kZnJtHYq2BpUcXGBinmXHaOELpTiDnG5HtMxjpKiL/NmOY57K1cLVZubI
emdeQwvI+np23l6ygEPfv8TneYSFOYlD7NKhjSYNuZNz7icdYWUObcBfHjXB
nA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxd0XlI02EYB/B1UVbYKjONNAszw7uDorTDLjA1i1UWS2gkOCu0E10lZR5b
18Q0lSS1XGpZbunW5mZ+d083I1OhwsQuEiZp0aK7zPf5qxdeXj68v9/7Ps/3
nS9I25E8lsPhxI7Mf+v/4/qyHKldI1jHJETVYXv0OOtRciZc6G7xizjNjGz4
T06bW9GRTfsSROZ8KL2fnc+8TooXua79WHGJvi+EbkPWLOHJAub+Ylw0jfn+
8Ukh/V+GvZty+0RBxcx+5ehb9TUxIq+EzqtAn4QnE70qYw6vQt6Q0t21upzO
v4lze3rdBNduMCdUY7jjrmRRRiXdJ8NV730XzLIq5vQa/MzaJnXrukn31yH5
7fqiOE41c8EdHOZN9dkXIqN66uHUqYNT995mlt/DwplOboC4huprgE8IV3pI
WcucIsfyngA3xes6qleBG6u83V3T7jJ/VWBTllzVFVlP9T9AiHeeV0rqPWZx
I3i/MgvbSu5TP03otXdKZpgbmL2UiPS/M+lIppz6U8JR7e6YzFUw16qQ8frp
UPptcvpDHE97F+oR9YB5pRpLfZ5mPesiczTI2Nr/3JDayGzTQOjpM/iL00R5
NCP5VlhQVQk5UQtBeHTqxlAl5aNDUguv7r2JPKDD6MpXUV4t8Kws0Qo+kTMe
4Uf096BO8UPKrxXyE8dCj81TM48HNLOiSv1V5BTgTPMGT484DbMDeNnZVLr/
DTlcj5hT58NiRc3MRXrMvJw/LONqKW89hsUaxdkaMt8A37kxE4+u1VH+BiyK
mFTf20P2N0LIv2KRHWqh9zCiVvNKu3ncI+ZBI74E8qWGMnKCCVuU3QHF4a3M
TSZ81jc2zLaSvcxond2/4FsomE+bEZUkNMSIyP1mLKx0ivPN5I0WBP7ZkjfA
1dN7WqD2zXUu5pOnWkctqSGnW9HhGBmfyN1WZBbOSQ5eY2BeaUNt65V4kYRc
bsOSbMnvx91kTht2SXRDC/yMzAfaoI2vWHvkINnWht3xvASbihzcDt8ZO3M8
xpqYC9px4fmcnoNx5M/tmJfr3K4uJSfasWOk4ClvyTo7/m0nhZmZ/Ryj/ShE
5BwHBrerfSdYyAMOGF2B/G3TLcyxHfgLDQ+yCA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJw103tMU3cUB/CrI/sDWcYykzGdpNuq81GVxEfYTLbbzjAzyVacmSUDbRgS
ND6qyKBVQrlDQUQoDhQoTtQ5ioAU5GkrfGmL9AHRKMYaTNbJltS4kWbA6P5g
ruac3eTm5nN/j3t+55z7bsbhHXsXCoKQHLlfPp2zK9MqHbODAl/tT326pIoM
kbQPLVsP3xQ7jrL1eHEhf93upSfIkNA8i/HbDonHT+NbzbhqNK+ELFaiq+ct
+2NFOc8/B6msrX5aZyIHatDy4Ze7DL5zvL4OD4KhNxesqCHLGuAtt+b1GC/w
fpfgnYhxvZioIydcxlHlobWGzQ28/xUED6a2TG7/kaz+Cdrf7733zd2L/L1r
6DzjXmHawdY1IV/xfOHkQ14vNOPjsdd+2ZTKNl2HOD2e3vTEzPG0wlW28osl
Wra1DZ/MfT2lmqzn+NrxSq3eW5PFzrbCk9jwc/DZ//F2oOLxgLTlIDvcgUT1
/iWDoVqOvxMuqfDZTA679CaSGrNblHN8fnUXFNdD+joDO64bqt63lb3z5/l8
3bC8U9wTW8S29CBKHmc5H8XW9SK4tvG7qRLOb2IfouteTVcsYgv90AwEjyVX
VJPd/TiU8u+f02+wTbew8S+ZN6nmB7LGhnLbI6U5ji2zQze8J3bazPUM2qHu
iz/5PJ5tvY2drVVP8q5UkfMHoPVnNYWXs8VBxMTKq5KauT+igMBXa3aWKdjZ
gHq5VKTZU0keBfzx5XO1WRWc3yGEfVMe54Gz5OohBLYMTUzmcP+FhyBTKf2b
DWfIaQ4k3N8lmU+Vcf4dCL/8Hc6eJsud0DRl5K6uLuV6OCFI8vv+eu7vP5w0
//Ipro8L6FT6P7CcJHe5YJlZ/2BBezHXaxiyvo8Wbe/+nnxiGNZ/Cp0hm8T1
G8a2SxteDzmKyFvvQL30WtQxj5HreQcBw+IbJY2F5JgRclsB13cE4obIZTtO
Hh+B1lZgWOXWc73dEM1x87UP88gNbggdzRt/e5pLFjwIuKp2rwnlkDMj1qvk
pfNHyG4PxL8L3u+O1pEVXogqe3puwgGyyQvjtjFH6PNs8owXwqpIfvZmkjU+
INIOKUYt2e6j8U2pZNkojItvfPbr/hRy8SiE45EXyk/JwYjF6EdXdcvIyWP4
D7SftXY=
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxd1HlI02EYB/C5JEsLoazssLZK0A7S0rSLVmlGmeQKlIisKDIq0sxqdodd
dmmYMvJoOju3tc15zVnf3Tp/1h8dGkZlWUmzi7LTjrH38Y/1wvPHh9/vfXmf
7wOvcMMO8aZ+PB4v3lVeruK7ytwTsua8qWc+j5ant8DTEk/j6H/fTyFPmxSh
sJBF56GLL6lf1tL3/wW0ve5c6HxIfn4RvYcnO3Ke9u2XYtzonYmT3pAFRehO
rB17zNl3Xqmnw2SeRhkmvNZfLiydLnJ7hRw8XWR2qc8W5ucVuFtsq3G+3MOc
dhW88s1R6y4fYeZdR+A35wVHwgnm3BuI2HqiNrj3DLNAgSEflvjpV+Uxq5Xw
m3ZoxsCp+cyiW4gyXVm5yLuQOVUNWbpmq6RdyhymgepShlSlLWL+roFY8VXc
dbKUGVo0J9nKt4fJmE9WIlxpNYQUlVE/Oth2P+asPnLmwCq0brOn9d9VQf1V
IWZO+9yzz64wX6vGe630dMHSa9RvDb7Ys8aHV19njq5FxzvBvVHjb1L/dbBE
xUtSzimYG+sw2ntOh9cPJeWhh7ol4VPJxlvMyfU4tICTBqWqKR8D+NzcV2+D
NMxdBvd8Yh+Q1Q3wisywWE5pmffexsszAv7K+ZWU3x0o0yflCHvI3oBRNL0f
/6aO8gTuZw7tH7q+ipkD+Almybnh1ZSvEc2y2OpKjpxvROEm/8zQozWUtxGK
dZpHs6JrmdeY0Cb8W1DyngwTBijGrJ4or2OeaMZBnxd7BKv1NA8zUkOLZU7/
euZuM1rL0+blWMkrLPhwkJucu8/ArLMgxbw8Myq8geZlRVZbcueSN+T9VsQ0
bNg2ovg2zc+K9dxHf434DnOMDRnK37GJ3qB52tCRFaAKTiEPsrsdpCen2THD
tT4HGJkf2FEiXzzSuYMc3Yi7PyuOtzjIRY24EdH5pCbYxMxrwrRf9nzZYfLG
JnTPPvAnu53c2ISKtdFXd840M09xYJjwqUqcR851IFXuP0TUTf7iwL4AVZww
zsKc3OzOy7eMbGhm9+0lCzi43pKQJ0lW5mwO6fN8W81achfnPk822MYc34J/
L63Bng==
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxl0XlI02EYB/CVRVlhq8w00izMDO8OitIOu8DULFZZLKGR4KzQTnSVlHls
XRPLVJLUcqlluaVbm5v53T3djEyFChO7SJikRYvuMt/nv154+fHhfX/v+zzf
d54gfXuKG4fDiRuZY0bmWM7/4/rSXKldI1jLJETVIXuMm/UIOQsudLf4R55i
Rg4CJqXPqejIoXUJonI/lN7PKWBeK8WLPNc+LL9I+4ugW589U3iikLm/GBdM
Y75/fFJE/5dhz8a8PlFwMbN/OfpWfk2KzC+h8yrQJ+HJRK/KmCOqkD+k9HCt
Kqfzb+Ls7l53wbUbzInVGO64K1mYWUn3yXDFZ+95s6yKOaMGP7O3St27btL9
dUh5u+5qPKeaufAODvGm+O4NlVE99XDq1CFpe24zy+9hwQwnN1BcQ/U1wDeU
Kz2orGVOlWNZT6C74nUd1avAjZU+Hq6pd5m/KrAxW67qiqqn+h8g1CffOzXt
HrO4EbxfWUVtJfepnyb02jsl080NzN5KRAXcmXg4S079KeGo9nBM4iqYa1XI
fP10KOM2OeMhjqW/C/OMfsC8Qo0lvk+zn3WRORpkbul/bkhrZLZpIPTyHfzF
aaI8mpFyKzy4qoScpIUgIiZtQ5iS8tEhuYVX995EHtBh9MtXUV4t8Kos0Qo+
kTMf4UfM9+BO8UPKrxXy40fDjs5VM48DNDOjSwNU5FTgdPN6L894DbMDeNnZ
VLrvDTlCj9iT58LjRM3MV/WYcalgWMbVUt56DIs1ijM1ZL4BfnNiJxxZo6P8
DVgYObG+t4ccYISQf9kiO9hC72FEreaVdpPbI+ZBI74E8aWGMnKiCZuV3YHF
Ea3MTSZ81jc2zLKSvc1ondU//1sYmE+ZEZ0sNMSKyP1mLKh0igvM5A0WBP3Z
nD/A1dN7WqD2y3Mu4pOnWEctqSFnWNHhGBmfyN1WZBXNTglZbWBeYUNt6+UE
kYRcbsPiHMnvx91kTht2SnRD8/2NzPvboE2oWHP4ANnWhl0JvESbihzSDr/p
O3I9x5qYC9tx/vnsngPx5M/tmJvn3KYuJSfZsX2k4MlvyTo7/i0nh5uZ/R2j
/ShE5FwHBrep/cZbyAMOGF1B/K3TLMxxHfgLHoeyCg==
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw1021MU2cUB/CLkn1AFllmMqYb6bbqdNaNxJegJtttZ5iZZCvOaMlEG6aE
GV+qyKBVQrlDQUQoDhQoKjqVIiIFeXOt8Kct0hfIFsVYg8k62ZIaN9IMGN0H
5u5yzm7yfPjd5+We55xz38o6tHXvfEEQ0uQRI4958nDPLN9Z5ZoZEPhpfxow
pFZmiaSv0brp0G2x4wjbiBfnC97fteQ4GRJaZjB21yXx/Cl8pRvTjOSXksUq
dPW85nysquD1ZyGVtzVMGSzkUC1a13++wxQ4y/vr8SAceTVmWS1Z0Qh/hT2/
x3yez7sE/3i858V4PTn5Mo6oD64yrWvk868gfCCjdWLLRbL2KvS//fT2lz9e
4O9dQ+dp7zLLVrahGQWq5/MmHvJ+oQUfjr7889oMtuUGxKmxzOYnVo7nJjzl
yz9brGfb2/DR7PZJzUQDx9eO+XVGf202O8cOX0rj9fCz/+PtQOXjfmnjAXa0
AynafYsHInUcfyc8UtGz6Vx22W2kNuW0qmf5/touqG5EjPUmdmI3NL2vq3vn
zvH9umF7o6QnoZht60GsMtF2LpZt6EV4VdM3k6Wc35Q+xNW/lKlawBbuQNcf
PppWWUP23sHB9H/+mHqFbfkBa/5U+FNrvyPrHKhwPFJbE9kKJwxDuxOmrFzP
sBPavqQTz5PY9rvYdrP6Sf6VanJBP/TB7OboUrY4gPgEZXVqC/dHLBD6YuW2
chU7B9AulYp1u6vII0AwqWK2LruS8zuIaGDS595/hlwziNDGwfGJXO6/6CAU
GnVwnek0eacLyfd3SNaT5Zx/F6L//Q5nTpGVbuias/LeqynjerghSMr7wQbu
79/dtP7ySa6PB+hUB9+1nSB3eWCb/uBBTHsJ12sIir4NC7Z0f0s+PgT730Xu
iEPi+g1h86XVCyOuYvKme9AuuRZ71Gfmet5DyLToVmlTETl+mNxWyPUdhrha
fhzHyGPD0DsKTSu8Rq63F6I1ca7uYT650Quho2XNr0/zyIIPIU/1rpWRXPIe
2UaNsmzuMNnrg/hX4TvdcQayyg9R48zMS95Ptvhh3jzqinyaQ572Q1gh52fv
HrIuAMjtkG7Wk50Bml+bQVaMwLzo1ie/7Esnl4xAOCa/UH9MDssW4x59b3iT
nDaKfwHGF7V4
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-1.36, 11298.62}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-1.36, 11298.62}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.6827107312896724`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw10A0s1HEYB/A/zkvlJKFD6g61a9mc16xlMSUTZVpztVvrPaEdZS2tGiVj
bVh5SSNpyjnZERdyuueEvE7dKiqalxQLJeRtvZz/8/hv/33/n/1+/9/veR7B
cWnYKX2GYYJ171IuPZFaBz/6ZKadpcqxa8s+C6OHPkdKty47HvqSQ/i/ugVo
uA7aStW7uCQykwoVBy/cnxSRfdPh6KzLJkkfn/bfBvPcsdLmVHJ/Fqi3l7i5
epGZXOitaT+/rWkjmp8HnTmbzf7Zk30LIN6+KaT54ga0qBCixftH73XZ0/kP
wcGpzS9WSA4tAlHHN6E4cT3d9wjSrUwcXT/aoWOKwcRxXGzoTmZKIFGkTftw
yxadIYcFn+rGsi82VM8TiNubt5DoQy4vg9F8PePwbB7Vp4DAgcuWzj/WoSPK
4bHTtEAvkCyqAE7EOZf3D6zRcxWQb6FYLJi3ovqfQtcJa5s9YeSUStBXXvWa
kFtSP1XgYTR8IMuAzFPCmfDg2B2StdSfEhSFquSFKgu07BmYDXtmdnHJMdUQ
LVQUFp1eg/augbYooSJebU7914JuWbWPR26pBa/M7tCAQTOax3PYolufuMNF
i+vATndAzm5Tmo+KvW/n7Er0iArYkK2gedXDlG1bVMZhE/SlF6Db3u1takzz
U0NP6BH/gXpDNAfY+lKlHJonsP25CQzQHcD206vVo/lq2PqTkxh0pob9/1j0
X1+ctwb847nDyq5FtKQBVg3OrM50n0dDA1uvb/ZvtNNL1gnzU+gUNEgm0WNo
JmEcHdqI+wNG0FVohjuE5jWhiz+hr5A93qD7yZw69K5mdEYZpowc1IFp+grz
bg9mDDrh5gD6La2rv2J6t+D63Hd0HprJ/YnJtGJ/nlPok62QNuSddkM7g25p
hVK5XB4knUM7t7FpbrpIdaJfy/6gp9EtDoyGtbidtTBWD61Cp6j10Xzsa4TL
QSehAyWG6BG0TG6EDu6E/4jQb+Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw10XtIU2EYBvCjzq6b3bS2NNukIkhEjIZBgZVpkMHYPymb/hHLCjKHUDQQ
ylihXWiErqRBKUVqimYzm079zDanzcqSsCuGYqMsKvOWJeX7vB44HH6c833v
9zxHcyBXfzBYkqS0//fsU/W5Zu/4i5gdEl+zzjo15yNi1t5Nc7aQ4/o1sDhD
tlvZUhF5Jp6ddJmc/V7N318hPy1iD5SQtVq2VCoS+gxXt3nWwmoHWR7NTrpB
fnciGo4vI1c/W8P7l5PzN7J1t8hpBVE87zY56k0kbL5DHklgS5Vk94XVsK2K
fHFIxeepJhu3s+tqyLF2JZ+vlvzn2yr4cB3Zn8qOv0d23FwJT8JHpyL4/PXI
r2cX3kf+u+Gcx4n8IWxlA/IbV3A+OL9hOVzxAPnD2OZG5D+0DE58iPxtSzm/
C/mVbJ9LmCoa41SDYdxHE9lVrIDTm8kZKXLux02emlgEB+DSyoXcVwt5q2EB
fLKV/Fo+n/trI1taQ2GZwHyzjPuEXZoQ2A9nvAziftsx3yrBxe3Cp8vNTMiZ
SULfcN7zadj4iFy/eQoW8E/7OLyuA+t/j8KFcF7mD3ikQ9jKPjSZCr7Cusfk
odQA7IRNYYOw0iPUu1qOd1W+hfPZ2l54wCNOy8derV/SDCd7hfQpQu+01Aj8
T68QlrPhOcl+WN4pBtw7z2tL+mFzpzBnaXZHWj/CffD1lmE40Yf3E19gh08k
1trK9137DktdZMWWUdgE9/SOwT740rFJOLYb6xdPwzZYUfEX/tUtHPv39GbH
SO3k9CdkrzkIdsMb2oJhtZ98TiGDrfCwIRQOwClV8+C0HvEPfs+nvw==
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10A0s1HEYB/D/cV6qO0nIS8pb7Vo257Vby2JKJsq05mq31ntCO8paWjVK
xtqw8pJG0pRzsiMu5HQPIQ67ulVUNC8pFkrI23q5/Z/Hf/vt+//s9/v//s/z
OB2XRpwyZBgmVL84+mXA4BOtcw6gV2bGTaocv7bsszB26HO0dOuyE6E/Nczx
V48TGq6Drlr1LiGFzKRD1cEL96eEZP9MODrnvknS70jnb4N5/nh5Wzp5IAfU
28s8PXzJTD701XWe39a6Ee1YAN15m83+OZD9iyDRoTWs7eIGtLAYYsX7x+5p
Hej+h+DsqgmIF5DDS0DY9U0gTl5P/3sEmVamLh4f7dFxpWDqMiE28iIzZZAs
1GV8uGWHzpLDol9tS8UXW6rnCSTsLVhM9iNXVsBYIcckMteG6lNA8OBlS7cf
69BRlfDYdcaJE0wWVgE36pz7+wfW6PkqKLRQLBUtWFH9T0F7wtp2TwQ5rRoM
lFd9J+WW1E8NeBuPHMgxJNso4UxkaPwOyVrqTwmKYlXqYo0FWvYMzEZ8srV8
clwtxAoUxSWn16BFdaCJESgS1ebUfz3ot1X7bMjt9eCb3RMeNGRG83gOW/T7
k3f4aHED2OsvyNvNo/mo2P/tnFuJHlUBG7IVNK9GmLbTxGQdNkVfegH64z0i
ngnNTw294UcCBxuN0Fxg60uXcmmewPbn6WSI7gK2nz4dh+bbxNafmsKgs5vY
74/F/vXHeTdBYCJ/RKldQkuaYdXQ7OpsrwU0NLP1+uf+Rru+ZJ20MI1OQ4Nk
Cj2OZpIm0OEteD5oFF2DZvjDaJtWdOkn9BWy9xv0AJnbgN7Vhs6qwJSRQ7ow
ea8w7/ZixqGTbg6i39K++iumqB3357+jC9BM/k9MpgP785lGn+yAjGFRxg3d
LLq9A8rlcnmIdB7tpmHTnLdEdaJfy/6gZ9DtzkwTa3Ena0E8B61Cp6kN0I7Y
1yifi05BB0uM0KNomdwYHdoN/wGaSG/m
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10WtIk1EYB/BXnV03u2nNNNukIkhEjIZBgZVpkMHwS4rTD7GsIHMIRYNB
GSu0C43QlTQopUhN8dLMplPPss1ps7Ik7Iqh2CiLyrxlSfr8H184H36c97zP
+f9f9aG8tMNBkiSlzq6A2RU4u8K/1Owffxm9S+Jnztln5n1MzNmzZd5Gcmy/
GhbnyFYzWyoiz8SxE6+Scz6o+P1r5GdF7IESskbDlkpFfF/m9R3u9bDKRpZH
sRNvkd+fioLjysjVz9fx98vJps1s7R1yakEkz7tLjnwbARvukUfi2VIl2Xlp
LWypIl8eCuf7VJN1O9l1NeQYq5LvV0v++30NfLSO7Ethx9WTbbdXw5Pw8akw
vn8D8qexCx8g//1QzmNH/iC2shH5das4H2xqXAlXPET+ELahCfmPrIATHiF/
+3LO70B+JdvrEPqKptjwwRDuo5nsKFbA6S3kjGQ59+MkT00sgf1waeVi7quV
vD1zEXy6jfxGvpD7aycb24JhmcB8g4z7hB3qINgHZ7wK4H5dmG+W4GKX8Grz
suJzZxLRN5z/YhrWPSY3bJ2CBfzLOg5v6MD5P6NwIZyf9RMe6RCWso/N+oJv
sPYJeSjFD9thfcggrHQL1Z7Wk12V72ATW9MLD7jFWfnY643LWuAkj5A+h6XZ
jTUC/9MjhPF8aG6SD5Z3igHn7ouakn7Y0CkM2eq9EeZPcB98s3UYTvBif+Ir
bPOKhFpL+YEbP2Cpi6zYNgrr4Z7eMdgLXzkxCcd04/zSadgCKyr+wb+7he3g
vt6caMlFTn9K9hgCYCe8qT0QVvnIFxQy2AwPZwbDfji5agGc2iP+A5BHp8E=

         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Inicial (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731379678*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw10QtQTGEUB/DdSqRsRbFEj0HeZsejYUxKk8dUKINhZIbFyKDkkSLynhCV
WtksKqUtjxalaPHf9mFL0WiJ0lRKlimllC00tj2fb+bO//7uN/d+55zrJgxb
tc2Mw+EEGK+BHFjvo9wWsVvOxIwvfoXu/70DoS2PGtyqXJmjUDT1TERcDDNO
gBu2xubXtP/7Z/HmouMQpcyF7B0Pf0mfZ4oVMy5BnVO/b6fQmdwgwsJCVY5X
8Tj2vhhG1o9wYHaVoCLFnVe7ayz73g0srW2+FKl2IgvSoUu8VxTkzIwMvHvc
eWzmwTHkwEx8TVr4dUblaHZeFni/i/lvJjPvycbMuU49Wcf57PwcrAg7VBVV
M4qckIvshs8Ou2czu95BrKavcnPcSLLsLqp55QVdzY6svjx8uX04U+3JHCJD
e+Jad/FlB1bvfdiWF5jvbh9BNtxHTI2PefQyZjyALDPFa3z6cHLsQxjLuarv
tWf95CM+f1aUfBUzvwB7PU6H+9y2Y/0V4NyViiwXC2bpI3QIA+1Dn/BYv4Ww
u5b33X7XMPK8Imw5EnInbJwN6/8xGj87yKNfDSVrjb6cOmzwcSs2jydws16v
vTdrCHldMYQxo06ubbZk85Ejo+utZ79oEFkvx0CkLbFg83qKv9YXpFUGM3Lk
M2wxlteWy2Xze46bqteTRcEcsgUQ6Z/uNX9svzfNE0gwRCQsO/qbXA70pd9y
GdpkIAsUmBIcX+K4uIecrEA1t+5Kdk4X2aDAtBNnksqsf5CDSzBHojvygd9J
RglSxWLx6MR28gQl8nzb/HSt38ixShjb9/HwayG3Kk39QdpIDlQh5LyocYNV
DTlfhU9OQZuGayrJfDU2LhBU87qfkqPVSAv6tD35lAT0/9T4m3bTrN5RQ/bV
IDq8++SrIB1Zyp6L6ihtXlCGNlHuIcNWT9a9wIGtr71XP2wlz9Mi0Vkqacvt
IEu0ptz0p5PMKYVKaVzLu8lbS1EjXxnee/0XWVuKd5rK/Qc7esnTyxAhnBSR
vOgPOaEMAr6NpXlSP/lnmSkDQzkKk9e9NDnyHJcsJ6fdMiO7lpssU5iTT5EF
Hy3IerbfM4gcUIF/9iCcXA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw10XtIU1EcB/DN+ap0+Sidz2YWRQnagxD/WmQUNGwVhYuQsnwWZSmZ2gM0
yMLUtELTDNN8DCufZTnnT6du0xWGZlAImfhANE1taYam53u8cLh87uHe7/n+
rlfopaNhZgKBQL60lu8hrSHtcze89gr4tewz21YcRcs29Eq5E5h3pHBTMnOu
78r+XVKnNqaJ6jfAsgzmbjtuymIuivKEvz9ijm3x4O/nMu9z45bmMzvGufPv
PWMeMLrBfoXMNZu56Tlzyk1XWFHMfOyLC897weztxx1TyjydKuH55czafmc4
U8WcHcAtrWA+m+0EV75k3jW2np/vNfrv546sRP+n6/h5q9Df5AjPwrGHuaka
/csc4NQa9BdyK2rRX2kPS+rQv9qO94NT1nCXvaF4+ySXUr2Y933LfCDRFvav
Zx7ebsP7v2O+07ca1sNbMlbxebxn1sms4eAG5ogpSz4fNbNVsQU8ApceN+fz
akS+lQi+pkF+vZDPrwn50QLYnOjnRtPOIP8FGeYJp+fNw0b448Is7NfMLA41
wQ/hoLZpeBZO3/oLPtVCP2KHOpNcp2BqofwmG2VY1gS8SUseYVenVROjcKqW
fPSm4VH5EDympQtxosN7VP2wopVyEhobRsVf4dpWqqicOVli6IIlbRSjFHY9
WauBry9Z/anQ3yOf8P/aKDDD/X6CuB0ObCfrXI06Ud4Dly09PxTunfGgD7bR
UY+oazLr/AAco6PFwccRB8UjcI+OHD5ToG/VGOyvJ7tFZa2lahLO11P8kb+3
wuenYIGBLibX6TTy3/A5A41HX+l1LvgD6w0UMF7rnTAxB/t00O4i27Ru2T84
s4OqHJ1mPbMW4JkOclWk6aouC5qZgzvJ4FngcSJNCKs7qaEhx05dYgZLjRR5
TxV+ulkE3zaSb94rieGbOTxipMFy7yaFyQKWf6D/Oou13w==
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10QlQjGEYB/DdNkfKEsWmdAxymx3XMCYd45oKZTCMzLAYGZQcHUTOJmel
Vm0WldKWo0UpWvy3PWwpGi0RTYdQppRStqSx9nl7Z975f7/vm+97n+f5XETB
a3bwOByOr3FzjduMQ+t9hIsnu+RMSv/mXeA64F0I+vqozqXSmTkChdOiQy9E
MeMkuMHrrH5PH3h+Fm8u2Q5VyZ3IHrHwkfa6JVkw4zI02bUHdoscyXViLC5Q
Z7sXjWfvS2Bk7WgbZmcpypNc+R/3OLDv3cDyj42XwzX2ZGEa9PH3Cv0dmZGO
d487js8KG0f2y0BzwuLmmRV27LxM8P8UCd5MYd6XhVnz7LszTwjY+dlYFXy4
MqJ6LDkuB1l1X2z2zmF2voMYbW/F1gtjyPK7qOKX5Xc22rL6cvHt9pEMjRtz
oBxt8etdJVdsWL33MaIsn7e3bTTZcB9R1V68yBXMeAB5RpL7hLRR5JiHMJZz
tanHmvWTh9i82RGKNcyCfOyffybE6/ZI1l8+ziWXZzqZM8seoV3kZx30hM/6
LcDIa7k/rPcMJy8oxLajgXeCx1ux/h+j/ouNIvLVMLLO6Cspw4ecsGDzeAIX
y426e7OHkjcUQRQ19tT6xsFsPgqkd7516xcPIjcp8D9Sl5mzeT3FX8uLskqD
GTn8GbYZy2vN4bL5PcdN9esp4gAO2RwI90lzX+jQ70HzBOIMoXErjv0hlwG9
abechn02kIVKTA2ILbZd2k1OVKKKW5Ocld1JNigx/WR0QqnlT3JAMeZK9Uc/
CDrIKEaKRCKxi28jT1Qhd0mrt77lOzlGBWP7XvO9v5JbVKb+IKsn+6kReF5c
v8mimpynRoO9/5ZR2gqyQIPNi4RV/K6n5EgNUv0bdiaeloL+nwZ/U2+a1dpq
yUu0iAzpOvXKX0+WsfviGkqrF5RBnyn3kTGiiax/gUPbX3usfdhCXqBDvKNM
2prTTpbqTLmlr4PMKYFaZVwru8jbS1CtWB3Sc/03WVeCd9qKg2HtPeQZpQgV
TQ5N9Owjx5VCKLAazEvoJ/8qNaVfEEdp8oaXJoef45IV5NRbZmTnMpPlSh75
NFn4yZzcxJ53DyL7luMfB6ecXg==
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10XtIU2EYBvDNeat0eSnvmmZRlKBdCPEvI6OgYasoNELK8lqUpWRqF9Cg
FUtNKzTNMM3LsPIyy9rU1+s2XWFoBoWQiRdE09TWzNDm93weeP/4ncM5z/e8
xyfy0tEokUAgkJhGaBoz00S0R3TO3/DZK+DXss9sW3EcLVvX782dwrwjg5vS
mfP9V57fJbWsUS5q2AAHZzH32nFTDnNJnBf8/RFzYqsnfz+feZ87t3chs2OS
B//eM+YhvTscUMxct5mbnjNn3HSDpaXMx7648rwXzL4B3AnlzLMyF55fydw2
6AxnK5hzg7i9q5jP5jrB1S+Zd02s5+d7jf77uWOr0f/pOn7eGvQ3OMJGOPEw
N9Wif4UDLKtDfyG3VIn+4fawSz3619rxfnDGGu6KN5Rsn+ZarhXzvm+ZD6Ta
woENzKPbbXj/d8x3BlbDWnhL1iq+j/fMmmBrOEzFHDNjyfejZrYqtYDH4PLj
5nxfjci3EsHXmpDfIOT7a0Z+vAA2J/q50bAzNHAxGPuEMwsWYD38cdEIB7Qw
iyMN8EM4tGMWNsKZW3/Bp1rpR+JId5rbDEytVNhsEx6VMwVvaiPPqKuziqlx
WNZGflrD6LhkBJ5oowtJosN7FIOwtJ3yUhpV4+KvsLKdqqrnTpbpemCXDkoI
F/Y8WdsEXzdZ/ak40LOQ8P86KCTL436KuBMO6STr/CZ1qqQPrjDdPxTtm/Vg
ALbRUJ+oZzrn/BCcoKGl4ccxB8VjcJ+GHD5TiH/NBByoJbulcKWlYhou1FLy
kb+3ohdmYIGOLqbXa5okv+FzOpqMv9LvXPQH1uooaFLpmzI1D/t10e4SW3lv
8D84u4tqHJ2MXjmL8FwXuUnlmprLghbmsG7SeRV5npALYXU3qVR5duoyM9hb
T7H3FNGnW0TwbT35F7xy0X0zh8f0NFzp2yw1WMCSD/QfTAO14Q==
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-179926., 573180.8874417653}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Final (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-179926., 573180.8874417653}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.6827107314616823`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731509685*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.6827107315696883`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731631692*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6826866564204884`*^9, 3.6826869943338156`*^9, {3.6826870609966288`*^9, 
   3.6826870858740516`*^9}, 3.6826873380294743`*^9, 3.6826876466781273`*^9, 
   3.682709695853449*^9, 3.6827104086922207`*^9, 3.6827104579130363`*^9, 
   3.682710511982129*^9, 3.6827105443959827`*^9, 3.68271063613923*^9, 
   3.682710731669694*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd0ntMU1ccB/A7KG4g8lBoC2iEACGNCEyZlk2x6oKZiBIgpGOETTITIQTq
IwHjxsNnq4KIM77aoYADxhCsOEbt5re0paWwzcAiMahjSgY6MzZ8hPpAMb9f
//EmJzef3HPOPfl+T1huUdoWN0EQNsyMN29b8nLN6i/eUQj8SDJyPrj5ict5
2JxZNpy/2OVdaFGeq3jhx8YePMkyRVU9Fvi7BkG1o/43BtiKo+hv8rErzrNR
g3K9vLSliD1yAkuNufHiRNf60xizHnlQ7s0O1SL9b8ujpJZXq2i/WkwdtFme
L2HHnYdO5jjRbpgmow4ljcm2oSx2agO2XI9fdfcee+QCEjt1XSkqXq9qhFOy
I1Dp7vp/M9IzJBs1G9nV32NiMPPlo29d5/kBmT6L9boJdnsrBsVt+8eTOA9F
G2Ly50udOvbWdqTqw0uSX7DjLuHhjbHKtdlu5KlLkB4qiZaDDT3mFe+uOixz
J6svoyzfuPP4KXZqB7TvxxzL8hKRpVcw4lucmlLBHrkCdeDR0bBpdtOP0Hx+
qnX7Xg+yqhMrTBLrkzmzyPKfEBQyGRBRyxa68Kdss256+btkexesvncjZcPs
agMMqvU70w68R1ZeReX1QY+/5J6cjxH/Tqah7xl73IjKk4Vz98KL8/oZFSn3
1Ye1s8klv0CzrGkgu9Sb87sG8+SCa8275pBFQM5UQf0/xT6cJ1C3wlroWeNL
7gcc5jWteTl+nK8JhfHlnQo3f/I3Jji//q7BdpE9ZULxZx/5GFRzydnd6FHk
e2Qns9GNW1uFogrRPHKEGbl+yoQOO1ttRlzB5XRjYwD5oRleQ/WqlYcCuR8L
JhqCSyNPiskdFtQM3gkfa5ZwX1aUO9d3//ZASv7KCrFnzOrolcHcnxW+8sDY
AVMI+eMeZIh+31RQuID77IEQ8n+b/6aFZG8bnEPqskqEcr823Ltw1hL6Xxj5
Dxv0nlX1QdvCuW87ks68yjrtH0nW2qF8WpewLSqKLPTiXHDs7YgDMvKXvdjf
E5u36Gw02d6L2lkJo4mxceRoB3YMR101XlxCrnYgIGS3Qeu+jPzYAW+3RQfF
XR+SlX2Yuc1S0VMF2diHZ6UzF3zpOnJoP95Mv5mURt7XDzrXp+Txt7zhV7wG
yA2HmA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw10XtM01cUB/AfilvFgrApEFDWusIEacXX6DZHK2JGwUczotSIRImEYgVK
NKIdSwwsE+aI1WAKSmYgMhiIlBUfsAJfbLGlViNaH6ioc8vEigM2RiAw2cy5
/ePm3k9Ocs9LmJH3ZeYsjuOS/j9vb85mPX0mPEv+9skNOjG549O0/pYU8jdO
fBuXkv7rzUSywInvjmmfdgbGk83X0ZcizYo+sJasug7N7znjn2+IJY85sEEa
vbXxwiqy3oEbF/pLE3xXkKMdkD0R7vhtgYRs78VHEfmBWYNR5D292C42ZA5t
W0rmemGqm2oYi40gV9lxUOZXO5EnIkvtaHclNVa8WkJ22fDkoSJ9skpI1tpg
/ExrLD0sIPNteBMzUxH4dxi5/hqax73U58SLyQnX0FW8e0JVGUp+1oPXhzR5
+ZIQcmEPFD63Xw7/EUwO7sHokenwgM4gcqsVuU06w/fNgWSlFVH61h8+vLKQ
PGSBq6u22e1aQC6x4J7odmXRbGaRBQFrRu28+PfJuIoOnm53cD5z2lVsaTiS
aP7xPfJEN/ihSdrVQwHk8m6oJWpxhYw5phu+vZG6srP+ZCfwgdkZUO3DrAYG
j+15XjzjR/YGFJqRvpdTvmR5F2Q64bSNx3yoE5ed+hN6EZ9s7AD/4MdC16Z5
5EEzsm0H1uiLfcgCM06m/qmss84lq37B2ozJtGh/Zn07/Jb+K9qWySPb2yBy
Ny5KtrxL5tqwSrHrk/2RzNIrWPHq7o2VhnfYfi9j4930oJl5zPWX0PZVznzl
0TlsfxchdYcsM/GYgy/ihXdko+O4N9tPK0ZG9qmXL2IuMUG8KWW0pGk2m//P
CPed/kK/nnmiBXNGiu4PD8xi822Bot+ozC5kVhuR83qstDOMWd4M/5rkNyar
F5tXEyI74m6F5jILzqNcnhXfFcKsb0DNZDU/18Gx/n+CXSJc4vU1s7YOsaHt
BcqVzM9qEWbUrC5wzcion3MoupNgM81ncdRgceH4X7lxzDHVmBJZMvr2MsvP
wn0pUZxYziyoQpRbpDG0e/JXYvPeo926AU++U3h+f6uhftrz/0l495SpHgex
+uXH0XR+vdcDCTNXioHs8YLMdcwoQvLTnf+kbvHED+NR6nBEmcrjbPwHQzaF
1g==
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxd0n1MU1cYBvArFCcM+VBoC8wMAoQ0IqAyLZti3RaWiSgBQiojqEQTIQTq
NAHjxsec2OpAhjPqbIcCDhhDsOIYtdOntKWl4GZgkRj2wZAM5sjYQA11Dtfl
ffvPbvL+8cu9556T5zkR+SUZ+z0FQdjumiWu8XCNLXWjZuueJQqBH0lW3iv3
33a7AHuzK8YK17h9BO3KS1XPAtj4AI9zTDG1jwR+r0FIw2TgvWG24jSGWv3s
ists1KNSLy9vL2GPn8V6Y36iONm9/gKmrB89rPRlh2uR+atlPqX9+Rb6XwMW
Ttgsf69jJ1yGTuY422VYJKMRZS2pttEcdnoz9t9N3DLxgD1+Bck9ut40Fa9X
tcApORSs9HTv34bMLMkOzQ523ReYHcn+Z/4z93m+RLbfGr1ult3VgRFx5/Hp
FM5D0Ym4wpekTh37QBfS9ZFlqc/YCdcwc2+q5o1cD/LCNUhPlsXKwYYeK0uP
1p6SeZLV11FRaDx85jw7vRvatXEf5/iIyNIbGPcvTU+rYo/fgDr49GTEIrv1
K2h2n+9495gXWdWDTSaJ9fHypWT51wgJmwuKamALvfhZtle3uPEFsr0XVv+J
aNkYu84Ag2rb4YzqZWTlTdTcHfH6Re7N+Rjxx1wGBp+yp42oOVe84hh8OK9v
UJX2m/qU9kVy2S1oNrQO55b7cn63YZ5bdbvtyHKyCMhbKGr6vdSP8wQaN1mL
vev9yUOAw/x6R0FeAOdrQnFiZY/CI5D8iQnO9z9vtl1lL5hQ+s5rfgbVCnJu
H/oVhV65qWz04YcDQkmVaCU5yoz8AGVSt52tNiOh6HqmsSWIPGOGz2iTavPJ
YO7Hgtnm0PLoc2JytwX1Iz9FTrVJuC8rKp3b+r59KCW/Z4XYO25r7OZQ7s8K
f3lw/LApjPxmP7JE3+0sKl7FffZDCPurM3Dny2RfG5yj6ooahHO/Njy4ctES
/mcE+Xsb9N61TSEHI7lvO1I+fZ5zITCarLVD+aQx6WBMDFkYwKXQ+B+jqmXk
fQM43h9fsPpiLNk+gIalSZPJ8QnkWAcOjcXcNF5dR65zICjsqEHruYH8yAFf
j9UnxL2vkpWDcN1mqeiJgmwcxNNy1wVf/xY5fAj/fX4/JYP84RDoXLvI0//z
9jv4F9mFh5o=
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10X1M02cQB/BfBbcOC8LmgICy1hUmjFZ8G93maEWMFOZsRpQuMjKJhGIF
SjSiHUsMLBPmiNVgChvRQEQQRMqKL7ACX2yxpVYjWl/YRJ1bJlYcsDECgclY
7ukflzyfXHL33J0oq+DTbB+O41LmgzcfC+aDs9u+/yEyR/H/kxt2YXrHBxmD
bWnkr134JiEt89cbyWShC98e0T3qDk4kW65hIE2WE7tvPVl9Ddrf8yY/2hRP
nnBikyx2W/P5NWSDE9fPD5Yn+a8ixzohfyja8dsSKdnRj3eiCoNzhmPIu/rx
mcSYPbJ9BZnrh7lhpmkiPopc48B+eUD9VIGYLHOg053SXPV8Odltx8OflZnT
NSKyzg7ThzpT+UEhWWDHy7i5quC/I8iNV9E6ydOcliwjJ11FT+nOKXV1OPlx
H14c0BYUSsPIxX1Q+t16NvpHKDm0D+OHZiODukPI7Tbkt+iN37UGk1U2xBja
T759+U3yiBXunvpWj3sJucyKu+Jb1SU+zGIrgtaNO/iJb5BxBV18/c7QQuaM
K9jadCjZcuZ18lQvBOEpurUjQeTKXmikGkmVnDmuF/790fqKU4FkF/CWxRVU
68esAYaP7HpSOhdA9gWU2rGBZzP+ZEUP5HrRrJ3PfKAbl1yGYwaxgGzqgmD/
eyL3lkXkYQty7fvWGUr9yEILjqf/qWqwvUZW/4T1WdMZsYHMhk4ErPhXvD2b
T3Z0QOxpXppqfZXMdWCN8ov390Yzyy5j1fM711cbX2H3vYSP72SGzC1ibryI
ji/zFqsOL2T3uwCZJ+xdM5859AKe+kY3O4/6svu0Y2xsj2blUuYyMyRb0sbL
WnzY/n9EpP/sZsNG5qk2LBwruTc6tIDttw3KQZMqt5hZY0Lei4ny7ghmRSsC
61Jfmm08tq8WRHcl3AzPZxaeQ6UiJ7EnjNnQhLrpWkG+k2Pzn4VDKlrO+4pZ
14D48M4i1Wrmx/WIMGnXFrnn5DTPaZTcTrKbF7M86rCsePKv/ATmuFrMiK1Z
A7uZFafguZgsSa5kFtYgxiPWGju9/avxye7Dvfohb78TeHJvm7Fx1lv/OHz7
KtQPQtj/FUfRcm4j776UmSvHUO5kUfYGZpQg9dHn/6Rv9eYP4pf00agKtde5
+A9UZoXY
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 21.11719417978351}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\"", 
         TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 21.11719417978351}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"von Mises WellCat\"", "\"von Mises Calculado\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.6827107317426987`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw10wtMU1ccBvCbok4tAUFQfGDLQ6QISnn4LoOVonRiBERRAYFRAopYY8JQ
UQkzTKNbxbAhDCQjJTx8gUIpivrVPqk4fOGTRGZHBLXJNkenGZmb+R9ucnLz
y0lO7v/7zvXJ3pOk4HEcJ/9/fXpLKzfFzPv2cDT36RnpQ5jr0u56jZJ8tA/f
Hfd5I3mRSxb2Iemj0ic0IYvccxvzq/4u6O/aTk69jRbZ8N3n07eQ/7LC4au6
kdecTD5lxSR3xfJ2r0RysBX5d5LWi0I2kC29qB0oVAv/lJNzehEk3lDoK19H
5nohC5ybI3WLI9daMDr+k0m5JJa8woK2vRXbPlN9QX5ohv+DhCf1ATFkpRlG
t4JA+cPPyc5mpHdo2gobJeRmEyJtXu+Cr6wmx5rAO7t5Z+nYSvKQEek19tSo
r1aQS4ywO/LXbnQsI3sZIeat1bxujSR3GGA7k1a0+2AEeaMBYffU2qOKcPJb
PWqynXJSFGHkY3oozYk1WcVisr8eVS8zxXl1oWTcwjS+rSiudSk57RYyWzVx
0pAl5Pc6aO09/G+sweRKHUr9+EWCQ4vJoTrcNY5ZW2RB5D7ggOeQ00WBiJwH
1NZ99PXjB5InAWW2IG3ClEXk6JuQ/FPWFDAjgFx8A+4hFbLwRQvJbdfhCFeb
Nsf7k0d6sP/+l79u/dqPLOzBvikxZzsv+ZJTr8GzfUB07g8f8qmr+HAgY85k
CbOlG7+7/jvySiUkc93obVzQsGtAwPrWImWxh7+uegHrtwumlenO0wq8WZ8a
XM/Lbjwhn8/668SgVDYzN2Ie66sTh5X8tzbRXNZPB97r340bRHNYH1cgemEr
TQ33YvlfhouxMtgcN5vl3Q5vxWynhuxZLN92PIPAri/3ZHm2IeoX3bD2sgfL
7xK0BhOvf3gmy+sCDPuS12UImYXnkVxc8lSV5c7yaIXLjrLq0WY3Nn8LRrU5
TlLHDDZvE3LVKTa/eOahRkzmPa2skrqyedT4Pi1jz5mrbB8NmH5e0G9Yxc4P
/RkeEfdKM6dOfF89Xq4fNLmsYfMIa2G1QFwyzubnqnG/O7EpqXwizx/Q3HX6
cUw96wencSEyauoRO+s7WoVY90P2hb+x+8Qdx+Pi4bFHP07c5zI8qpPoBl+x
/4nbj4ox7/KTzvHM+fgPbLmHGw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw11HtMU3cUB/BLRWUTB0phCNiHgnasIXWTjS1YO4MSKIsdm6Y4nQ6KULNI
BeOAqCzVjUfcwAoJQk1RYVKcD1AeRYQvYCkt3UNl2Zz/dLqxRrcZJprilriZ
c3aTm5tPcpOb8/2e35XnFmXniwRByPzvfvb8xTkhv67dqRGeXX4v/L0fNr7f
rCcf9qJpjtV6NaAjy7w48CQiWHEngzwwga8fzAz9MZVG1k8g6Uny6p2H3yLP
eHDWI10bt0xNrvNA8mNyovGjN8lKDzILj5rth14nj7vRsiPnfIUymWxwY5Ut
7MbQ2lfJghuH2pvvG0+vIlvH4Q9vnNq8XkVOGUfZvEpjjCqJPOnCvZFb+rgE
JdnkwrrPlFd6chLJoS5MZ/3qnRpVkNvH4LL9tW82ZyU5bQxHLN+8uyhqBdnn
hHPxnF2W6Xjyfica7b2I9i8nRzvROrRAcfvxMvLla+jo3NIyuYStu4Yss6gm
faOc/PsopPY38kvqZeSqUaRess0Xfyslx4/C5dBuXFMrIWME9pk+uatqKXnr
CMIUbV13dseRA8OI3NwhEhfGkuuHYWrMuOU3xZBVw+gPrROdrV5C9gKf6Erk
6gvR5EIg9YFFUf7zi+RgoFSSlJkgZWuG8PF3Sy0HC6LIpYM4v0t0s8QRSb54
FUUqZdXnEWz/AL7Me9yg3icmywZQXZx3b68vgqy/gq1Hjx1oe4dd14/t27r2
2NyLyeMOZD5cGBWfzhYcyA0aUxs8i7jvPpzYHl8fyGabenF//401Db5w7rMH
P5Quj20tZvu6UdmdU/t9CDu6GxWPBgNFG8K4n8vIWF8622d+gfu4BEWZc8+8
sYWcfxf+DJ7cbQhnBzrxT7Y6/6cdoZxvJxzXU19O713AeV5E1qfWvzdFsDUX
UP60IrV27/Oc1znU1FS2xNx+jvP5CtKnp38r2MCu60Dnw7snJD0hPL8ddzOO
N0sT2aYzEKvLy2JPzef52jC7LW5FooSta4V10Dx30zl+H6dg2KIL0o7w91Un
UfXo5pm31/E8GhvEHU3a9pWcj8yKBO2RlLyw//M/DtnctFCNmfv0NWB6dYku
4OT9gAUnX3nJ+pqe91FTi+LIIENeE++7UI2UinKh4D0+XzAj92C/IsrI51ko
wwdfuI+FFPL/QzDiXx43fh4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJw10wtMU1cYB/CKBBWQiiKwDQlqiRJfRYMydVLE2BiJoNQIpD5ifFVEiIIB
2qnotOKz2uIjQlAjKqiID/BBbf+lRaA8VHSZRtGqMxImM2ijbFYZzf3vJjf3
/nLO+XK+7ztn5MqMRas9RCJRfN/r/gpPiuz/v+KYyq4voQm0Cq2/qHcpH8jp
XPTOmDvCki8TjB1YkTVq/fw1kzleAO8FWRmpvSGCZYegTwtMLPn8A+cfQUjB
LemfXYGCHYU4ey7VP+LtMK4/gQk2V3f68yGCw4rQTx47S3t4MOOVYFbB/kiF
wkew9DTUTX9IRgYNYvwzuFarrzQHDhCceBbfs9eEmlNoRykWzs1oSi2mM8+j
cO91cckrWlSGp61fkt6EDxSsK0d2z8sOl4oOu4QK+au8gAq68jLKL1fJdZ9o
2RXsXJb96GE097OuEkvFUcuHbaWlVzENzk6Fle65ivIKi0k5yJv7v4bz8RsX
GxLoPddhnTqjTn2UTryBenS/vNlOB1ch5Sf/6UfDWQ9HFSIvHtO2ptMXqvvi
+2m01XTmTTz1N4abeunoW3inU/ZfMs+X+d+GWLmpfYWebriNJQODctraad0d
hDyJUXmNZT+SazBbPdT1YhMdZkSkZLJmsJnuMCImatmdeb5+rNddtG1IzvVM
oXNMSJv5zuVxjpaZsdv0zWe8k/YEpuQeiVPMFrOegHea5q+3OroZGCd3lrU4
aKkF3RODuouDeX4MFsiPb1NoY+keCx6OevbP1vW0shZ+5frvu/Np1OLRC4eP
voyWWNFWLUmf30bvscIZVJZR8ZV+b4Wp5MdJ7RJ/9seGTkNiat4C+oYNvx80
Fh/IoYPrMM6wXRF5htbUoSVWOzrOTjv63PlMd7+LnnMPeXGKX4eIh7Kf97B2
7M9Jy6W0bz0ahy+OCF1EZ9bDnZ0xi35cj789Cm01x+joBlj2uQIza+iiBlxx
Hz8HLWpE9L8fgrM9eR9XNcIMtV0VQTc04n7pmNdbEujxdpxyp7+F1tlREJU8
9WMR7bSjJ+lN6UkbndwEr/zCuH3vaWMT+lZ75Q8PEBzWjM3rDndpYujfmlH9
6dvjHBXd0YwA9wU00PEt+A9/Tox4
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw103tMU2cYBvCzVp1aAoIw8YItF5EiKOXiZa4MVorSiREQxzZgwCgBRawx
YejQEWbYjM6KwSEMJCMlXOYFFEpx6J7aK5UNb3glEa1EUJt4o3MZmcO8Hyd5
//jlS07O+zzf8c3ZkazkcxynmJz3Joc3ObKqzbELf9gXw717RvsR7raip0Gr
Iu/vx08HfJ9K7+eRRf1IfqvyDUvMJvdexqLqvwsHur8kp11Gq3zkyr3Zn5Ff
2+D0U1/Mb0khH7FhmodyVYd3EjnEhoI/kzeIQzeSrX2oGyzSiF4qyLl9CJZs
LPJTrCdzfZAHLciVuceT66wYm/jFrFoeR15tRfvOyi/eV39CvmFBwPXE2w2B
sWSVBSb3wiDFjY/JLhZkdGrbi5qk5BYzouzer0LOrSXHmcE7sWVr2fga8rAJ
GbWOtOivV5NLTXA4C9Ztcq4ke5sg4a3TPmmLIncaYT+eXrz920jyJiPCr2p0
+5UR5GcG1Obwc1OV4eQfDVBZkmqzSyTkAAOqH2ZJ8uvDyLiEWQJ7cXzbCnL6
JWS1aeNlocvJb/TQOXoF39tCyFV6lPkLioV7l5HD9LhiGre1yoPJ/cAer2H+
aaGYnA/U1b/18xcEkacB5fZgXeKMpeSYPyD9t7w5cE4gueQiPEIr5RFLl5Db
L8AZoTFvSQggj/Zi97VPH3z+jT9Z1ItdM2JPdJ3xI6f9Dq+OQfFvL3zJR87j
nz2Z86dLma09eO723+hjtYjM9aCvaXHjtkEh61uH1GWeAfqaxazfbpjXZLjM
KvRhfWpxIT+n6aBiEeuvC0My+dy8yIWsry7sUwme2cULWD+deGN4NWEUz2d9
nIP4vr0sLcKb5X8WrqaqEEv8PJZ3B3yU8/iNOR+wfDtwF0KHocKL5dmO6L/0
I7qzniy/M9AZzbyBkbksr1Mw7kpZnyliFp1ESknpHXW2B8ujDa5fldeMtbiz
/Vsxpsvly5xz2L7NyNOk2v0TmIebMJ13p6pa5sb20eBweuaO4+fZORox+6Rw
wPghe3/Yr/CMvFqWNXPq+xrwcMOQ2fUjto+oDjYrJKUTbH+uBtd6kpqTK6by
PIaW7qO3YhtYPziKU1HRM79zsL5j1Ijz2OtY8ojdJ+4AbpWMjN/8eeo+l+Nm
vVQ/9Jj9T9xuVI77VBxySWAuwP996Ycd
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw11GtMk2cUB/CXgsomDpTLELAXBe1YQ+omG1uwdgYlUBY7Nk1xOh0UoWaR
CsYBUVmqG5e4gRUShJqiwqQ4L6Bcigh/wFJauovKsjm/dLqxRrcZJpriljiW
c/Yk58MveZMn53/O88pyi7LzAwVByJyrgLkSzdUvjgnZDc0utfDf8Xng6/2w
8f1mHfmIB02BFss1v5Ys9eDg0/Ag+d0M8sAEvn44M/THVBpZN4Gkp8lrdh15
izzjxjm3ZF3cchW5zg3xj8mJho/eJCvcyCw8ZrIdfp087kLLzpwLFYpkst6F
1dbQm0PrXiULLhxub35gOLOabBmHL6xxassGJTllHGXzKw0xyiTypBP3R27r
4hIUZKMT6z9TXO3JSSSHODGd9atnalRObh+D0/rX/tmcVeS0MRw1f/Pu4qiV
ZK8DjiWBu83T8eQDDjTaehHtW0GOdqB1aKH8zpPl5CvX0dG5tWVyKVt7HVkm
UU36Jhn591FIbG/kl9RLyVWjSL1sXRDxrYQcPwqnXbNpba2YjBHYZvpkzqpl
5G0jCJW3dd3dE0f2DyNyS4coojCWXD8MY2PGbZ8xhqwcRn9Inehc9VKyB/hE
WyJTXYwmFwKpD83y8p9fJAcBpeKkzAQJWz2Ej79bZj5UEEUuHcSF3aJbJfZI
8qVrKFIqqj4PZ/sG8GXekwbV/giydADVxXn393nDybqr2Hbs+MG2d9h1/dix
vWuv1bWEPG5H5qNFUfHpbMGO3IAxld69mOfdh5M74uv92WxjLx4cuLm2wRvG
8+zBD6UrYluL2d5uVHbn1H4fzI7uRsXjQX/RxlCezxVkbCid7TO9wPO4DHmZ
Y+/8sUWcfxf+DJrcow9j+zvxT7Yq/6edIZxvJ+w3Ul9O713IeV5C1qeWvzeH
s9UXUf6sIrV23/Oc13nU1FS2xNx5jvP5CpJnZ34r2Miu60Dno3snxT3B3L8N
9zJONEsS2caziFCVl8WeXsD9tWF2e9zKRDFb2wrLoGne5vP8PU5Dv1UboBnh
+5WnUPX41tm313M/aisiOpo07as4H6kFCZqjKXmh/+d/AtJ5aSFqE8/T24Dp
NSVav4P3A2aceuUly2s63kd1LYojA/R5TbzvQjVSKsqFgvf4fcGE3EP98igD
v2ehDB984ToeXMj/D8GAfwEvZ34g
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw10wtQzFscB/CVJlRakeqSJmxD47W5k5tnm4wdo1G0RjXrMcZrJTWUqXa5
8lp5Lrt5jJowQiF5lEdr97vtptoeiDsYYnGNpismdsi1ZJv9+s+cmf9nzjm/
Ob/f75zhy9MWrOwtEAhinaOXc7gJfn9Jkt9/hVHlHV+D42gFmqcrd8rvS+ls
dE+dPcyUK3EZ27AsY8Tauasmcj4PnvMy0pK7g1yWHIQ2xT++6MsfXH8YQXk3
xf92+Ltsy8eZs8m+YW8Hcf9xjLM4OlOfD3A5pAC9pNEz1If6M14RZuTtC5fJ
vFwWn4Ky4bFoeEA/xj+Nq9XacqN/H5fjz+Bn5qpgYxJtK8b82WkNyYV0+jnk
77kmLHpFC0rwtPlrwpvQvi5rSpHZ9bLNoaBDLqJM+irHr4wuv4TSSxVSzWda
chnbl2Q+fBDJ86wpx2JhxNJBW2jxFfwFe7vMTHddQWmZySDv58nzX8W52PUL
dXH07mswT5paozxCx19HLTpf3milAyuQNNR3ypFQ1sNWgfALR9XNqfT5Smd8
H5W6kk6/gae++lBDNx15E+808t6L5ngz/1sQyje0LtPSdbewqG9AVksrrbmN
oCdRCo/R7EdiFWYqBzpebKBD9AgXTVT1N9JtekRFLLk9x9uH9bqDlnWJ2e5J
dJYBKdPeOdzO0hIjdhl+eI210+7An9mHY2Qzhawn4Jmi+u+thm4ExkjtJU02
WmxC5/iAzsJA3h+dCdJjf8vU0XSXCQ9GPPu2ZS0tr4ZPqfbnrlwa1Xj4wual
LaFFZrRUilLnttC7zbAHlKSVfaffm2EoGjKhVeTL/ljQrotPzplHX7fgnwP6
wv1ZdGANxui2ysJP06oaNEWrR8ZYaZvT7c809zroWXeREyPbPEA4kP28i9Wj
JycsFdPetagfvDAseAGdXoue7PQZ9KNafHDLt1QdpSPrYNrr8E+vogvqcLnn
+tloQT0i//8YmOnO97iiHkYorYowuq4e94pHvd4UR4+14mRP+ptojRV5EYmT
PhXQdiu6Et4Un7DQiQ3wyM2P2fue1jfAudsjd7CfyyGN2LjmUIcqit7RiMrP
Px5lKei2Rvj1PEAdHduEX5DGjHo=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 45.6837134743174}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"fator de Seguran\[CCedilla]a ao Colapso\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 45.6837134743174}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Klever Tamano Calculado\"", "\"API Calculado\"", 
       "\"Fator de Seguran\[CCedilla]a ao Colapso - WellCat\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6826866561354723`*^9, 3.6826869940077972`*^9, {3.6826870606476088`*^9, 
   3.6826870855860353`*^9}, 3.682687337761459*^9, 3.68268764637111*^9, 
   3.682709695575433*^9, 3.6827104083672023`*^9, 3.6827104576030183`*^9, 
   3.682710511668111*^9, 3.682710544070964*^9, 3.6827106358282127`*^9, 
   3.682710731831703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3 Equa\[CCedilla]\[ATilde]o de estado limite de Klever-Tamano", \
"Subchapter",
 CellChangeTimes->{{3.6603975138303375`*^9, 3.6603975213087654`*^9}, {
   3.660472987602577*^9, 3.660472991152582*^9}, 3.6604777498156834`*^9}],

Cell[CellGroupData[{

Cell["3.3.1 Vetor gradiente", "Section",
 CellChangeTimes->{{3.64344989397775*^9, 3.643449920993295*^9}, {
   3.659279350380483*^9, 3.6592793541039114`*^9}, {3.659281596946475*^9, 
   3.6592816022319775`*^9}, {3.659281994025936*^9, 3.6592819948724947`*^9}, {
   3.659440760630747*^9, 3.6594407667552896`*^9}, {3.660472748952243*^9, 
   3.660472756172253*^9}, {3.6604728641324043`*^9, 3.660472868882411*^9}, {
   3.6604730020825977`*^9, 3.6604730108926096`*^9}, 3.660477747768566*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.660393195080319*^9, 3.660393221440827*^9}, {
   3.6603936773579035`*^9, 3.6603936776859226`*^9}, {3.6666256316605144`*^9, 
   3.66662563472012*^9}, {3.666628512830321*^9, 3.6666285175965934`*^9}, {
   3.666628728170771*^9, 3.666628733611582*^9}, {3.6666289878267717`*^9, 
   3.6666290082812095`*^9}, {3.666629144168975*^9, 3.6666291729444304`*^9}, {
   3.6666391608754005`*^9, 3.6666391648016253`*^9}, {3.6826764670816917`*^9, 
   3.6826764728960238`*^9}, {3.682676566838397*^9, 3.6826765713906574`*^9}, {
   3.682677182585616*^9, 3.6826771934902396`*^9}, {3.682677662528067*^9, 
   3.682677667791368*^9}, {3.682677711199851*^9, 3.682677802414068*^9}, {
   3.6826778539110136`*^9, 3.6826778620384784`*^9}, {3.6826782091803336`*^9, 
   3.682678224707222*^9}, {3.682678267754684*^9, 3.6826782692987723`*^9}, {
   3.6826783385957355`*^9, 3.6826783511224527`*^9}, {3.68267846314686*^9, 
   3.6826784670730844`*^9}, {3.6826845522391357`*^9, 
   3.6826845539102316`*^9}, {3.682684827652889*^9, 3.682684837452449*^9}, {
   3.682685159146849*^9, 3.682685160858947*^9}, {3.6826853564551344`*^9, 
   3.682685359457306*^9}, {3.68268571863785*^9, 3.682685719478898*^9}, {
   3.6826863996648026`*^9, 3.6826864236651754`*^9}, 3.6826864682817273`*^9, {
   3.682686514784387*^9, 3.6826865155044284`*^9}, 3.6826877963026857`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeGrad", "[", 
    RowBox[{
    "siga_", ",", "sigy_", ",", "pint_", ",", "pext_", ",", "de_", ",", "t_", 
     ",", "young_", ",", "nu_", ",", "X1_", ",", "X2_", ",", "X3_", ",", 
     "X4_", ",", "X5_", ",", "X6_", ",", "X7_", ",", "X8_", ",", "X9_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "NofD", ",", "x7", ",", "nYieldStrength", ",", "x3", ",", "PintofD", 
       ",", "x8", ",", "nDe", ",", "nt", ",", "x2", ",", "nYoung", ",", "nNu",
        ",", "x4", ",", "x5", ",", "x6", ",", "x1", ",", "PextofD", ",", "x9",
        ",", "gx", ",", "grad", ",", "subst"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gx", "=", " ", 
       RowBox[{
        RowBox[{"x1", "*", 
         RowBox[{"ComputeColapseStrengthKT", "[", 
          RowBox[{
           RowBox[{"NofD", "*", "x7"}], ",", 
           RowBox[{"nYieldStrength", "*", "x3"}], ",", 
           RowBox[{"PintofD", "*", "x8"}], ",", "nDe", ",", 
           RowBox[{"nt", "*", "x2"}], ",", "nYoung", ",", "nNu", ",", "x4", 
           ",", "x5", ",", "x6"}], "]"}]}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PextofD", "*", "x9"}], "-", 
          RowBox[{"PintofD", "*", "x8"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"grad", "=", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x3"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x4"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x5"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x6"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x7"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x8"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x9"}], "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subst", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NofD", "\[Rule]", "siga"}], ",", 
         RowBox[{"nYieldStrength", "\[Rule]", "sigy"}], ",", 
         RowBox[{"PintofD", "\[Rule]", "pint"}], ",", 
         RowBox[{"nDe", "\[Rule]", "de"}], ",", 
         RowBox[{"nt", "\[Rule]", "t"}], ",", 
         RowBox[{"nYoung", "\[Rule]", "young"}], ",", 
         RowBox[{"nNu", "\[Rule]", "nu"}], ",", 
         RowBox[{"PextofD", "\[Rule]", "pext"}], ",", 
         RowBox[{"x1", "\[Rule]", "X1"}], ",", 
         RowBox[{"x2", "\[Rule]", "X2"}], ",", 
         RowBox[{"x3", "\[Rule]", "X3"}], ",", 
         RowBox[{"x4", "\[Rule]", "X4"}], ",", 
         RowBox[{"x5", "\[Rule]", "X5"}], ",", 
         RowBox[{"x6", "\[Rule]", "X6"}], ",", 
         RowBox[{"x7", "\[Rule]", "X7"}], ",", 
         RowBox[{"x8", "\[Rule]", "X8"}], ",", 
         RowBox[{"x9", "\[Rule]", "X9"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "gx", "}"}], ",", "grad"}], "}"}], "/.", "subst"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6666267029361176`*^9, 3.666626798185294*^9}, {
  3.6666268347833633`*^9, 3.6666270795262194`*^9}, {3.6666274154856462`*^9, 
  3.666627420968256*^9}, {3.66662772393108*^9, 3.666627889248187*^9}, {
  3.666628238728643*^9, 3.6666282437599306`*^9}, {3.6666283144559746`*^9, 
  3.6666283270466948`*^9}, {3.6666283746544175`*^9, 3.6666283811267877`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateRVDataVC", "[", "RVdata_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rvvec", "=", 
       RowBox[{"{", "}"}]}], ",", "rvdata", ",", "i", ",", 
      RowBox[{"RVX", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "RVdata", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rvdata", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", "13"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rvdata", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "=", 
         RowBox[{"RVdata", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"RVX", ",", " ", 
          RowBox[{"CALCPAR", "[", "rvdata", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "RVX"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.666629231820348*^9, 3.6666293906946435`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3.2 Montagem do problema", "Section",
 CellChangeTimes->{{3.64344989397775*^9, 3.643449920993295*^9}, {
   3.659279350380483*^9, 3.6592793541039114`*^9}, {3.659281596946475*^9, 
   3.6592816022319775`*^9}, {3.659281994025936*^9, 3.6592819948724947`*^9}, {
   3.659440760630747*^9, 3.6594407667552896`*^9}, {3.660472748952243*^9, 
   3.660472756172253*^9}, {3.6604728641324043`*^9, 3.660472868882411*^9}, {
   3.660473024452629*^9, 3.660473026592632*^9}, 3.6604777638954887`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SolVector", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IndiceConfiabilidade", "[", 
    RowBox[{
    "PiData_", ",", "PeData_", ",", "AxialForceData_", ",", "CasingData_", 
     ",", "RandomVarsData_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CsVsBeta", ",", "i", ",", "area"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CsVsBeta", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDe", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDi", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nt", "=", 
       RowBox[{"nDe", "-", "nDi"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYoung", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nNu", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYieldStrength", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nDe", "^", "2"}], " ", "-", " ", 
          RowBox[{"nDi", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "PiData", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PintofD", " ", "=", 
          RowBox[{"PiData", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Internal", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"PextofD", " ", "=", 
          RowBox[{"PeData", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "External", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NofD", "=", 
          RowBox[{
           RowBox[{"AxialForceData", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "/", "area"}]}], " ",
          ";", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Axial", " ", "Load", " ", "at", " ", "depth", " ", 
           "D", " ", "in", " ", "psi"}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NRV", "=", 
          RowBox[{"Length", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RVX", "=", 
          RowBox[{"CreateRVDataVC", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"NLS", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NP", " ", "=", " ", "20"}], ";", "\[IndentingNewLine]", 
         RowBox[{"CDFLIMPLOT", "=", 
          SuperscriptBox["10", 
           RowBox[{"-", "2.5"}]]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PRINT", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "vx", ",", "fx", ",", "GX", ",", "GRADX", ",", "X1", ",", "X2", ",",
            "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", ",", "X8", ",", 
           "X9"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"SetLimitStateVectors", "[", "NRV", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"DesignPoint", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"DPCREATE", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"LSPARALLEL", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"BuildRVParameterVectors", "[", "RVX", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"print", "=", 
          RowBox[{"ComputeGrad", "[", 
           RowBox[{
           "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", ",",
             "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", ",", 
            "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", ",", 
            "X8", ",", "X9"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<g,gradg = \>\"", ",", "print"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GX", "[", "fx", "]"}], ":=", 
          RowBox[{
           RowBox[{"ComputeGrad", "[", 
            RowBox[{
            "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", 
             ",", "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", ",",
              "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", 
             ",", "X8", ",", "X9"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GRADX", "[", "fx", "]"}], ":=", 
          RowBox[{
           RowBox[{"ComputeGrad", "[", 
            RowBox[{
            "NofD", ",", "nYieldStrength", ",", "PintofD", ",", "PextofD", 
             ",", "nDe", ",", "nt", ",", "nYoung", ",", "nNu", ",", "X1", ",",
              "X2", ",", "X3", ",", "X4", ",", "X5", ",", "X6", ",", "X7", 
             ",", "X8", ",", "X9"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"GAUSSIAN", " ", "=", " ", "True"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<NORMAL\>\""}], "&&", 
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<DETERM\>\""}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"GAUSSIAN", " ", "=", " ", "False"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "NRV"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"RX", "=", 
          RowBox[{"IdentityMatrix", "[", "NRV", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "RX", "]"}], "\[Equal]", " ", "1"}], ",", 
           RowBox[{"CORRELATED", " ", "=", "False"}], ",", 
           RowBox[{"CORRELATED", " ", "=", " ", "True"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"cov", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RX", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "w"}], "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "w", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "NRV"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", "1", ",", "NRV"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\n", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "Jyz", ",", "Jzy", ",", "Jzx", ",", "Jxz", ",", "Jxy", ",", "Jyx"}],
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jyz", ",", "Jzy"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobYZ", "[", "RX", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jxz", ",", "Jzx"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobXZ", "[", 
           RowBox[{"RVX", ",", "MEAN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Jyx", " ", "=", " ", 
          RowBox[{"Jyz", ".", "Jzx"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Jxy", " ", "=", " ", 
          RowBox[{"Jxz", ".", "Jzy"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "4.", " ", "Busca", " ", "pelo", " ", "ponto", " ", "de", " ", 
           "projeto", " ", "e", " ", "\[IAcute]ndice", " ", "de", " ", 
           "confiabilidade"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ConvergenceCrit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"100", ",", "\"\<DELTA_BETA\>\"", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "3"}]], ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"xh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"yh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vg", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"FindDesignPoint", "[", "lsn", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"lsn", ",", "1", ",", "NLS"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"BETA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<BETA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ALFA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<ALFA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"SolVector", ",", 
             RowBox[{"{", 
              RowBox[{"revestimento", ",", 
               RowBox[{"-", 
                RowBox[{
                 RowBox[{"data", "[", 
                  RowBox[{"[", "w", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", "selectedTube", ",", 
               "PextofD", ",", "PintofD", ",", "NofD", ",", 
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", "w", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "BETA"}], "}"}]}], "]"}],
            ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"CsVsBeta", ",", 
           RowBox[{"{", 
            RowBox[{"BETA", ",", 
             RowBox[{"-", 
              RowBox[{"PiData", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "CsVsBeta"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6603930780226235`*^9, 3.6603930821738615`*^9}, {
   3.6603931122685823`*^9, 3.660393129220552*^9}, {3.6603934233243737`*^9, 
   3.660393444119563*^9}, {3.6603938786194153`*^9, 3.6603938897690525`*^9}, 
   3.660393949440466*^9, {3.6603939972241993`*^9, 3.660394001799461*^9}, {
   3.6603942594081955`*^9, 3.6603942615973206`*^9}, {3.6603960774021783`*^9, 
   3.6603960805283575`*^9}, {3.660471711231296*^9, 3.6604717125103693`*^9}, {
   3.6666167009904356`*^9, 3.6666167576189356`*^9}, {3.6666186005268207`*^9, 
   3.6666186101932383`*^9}, {3.666624608736518*^9, 3.666624710430303*^9}, {
   3.6666259623217297`*^9, 3.6666260250154467`*^9}, {3.6666260596793113`*^9, 
   3.6666260631621175`*^9}, {3.66662617755214*^9, 3.666626298139964*^9}, {
   3.666627100901058*^9, 3.6666272048608522`*^9}, {3.6666273747443705`*^9, 
   3.6666273753235717`*^9}, {3.6666274759823585`*^9, 
   3.6666275005592036`*^9}, {3.6666279039508142`*^9, 3.666627930050863*^9}, {
   3.6666294086168766`*^9, 3.6666294440537415`*^9}, 3.682674762382188*^9, {
   3.6826750903809485`*^9, 3.682675121819747*^9}, 3.6826751931178246`*^9, {
   3.6826752376903744`*^9, 3.6826753390671725`*^9}, {3.6826753739631686`*^9, 
   3.682675464466345*^9}, {3.6826755297060766`*^9, 3.6826756392963448`*^9}, {
   3.682675699999817*^9, 3.682675731567622*^9}, {3.682675828175148*^9, 
   3.6826758666303473`*^9}, 3.6826763248535566`*^9, {3.682676654058386*^9, 
   3.6826766960727887`*^9}, {3.6826768653004684`*^9, 3.682676873476936*^9}, {
   3.6826772053249164`*^9, 3.6826772146134477`*^9}, {3.6826778712730064`*^9, 
   3.682677923279981*^9}, {3.68267800840085*^9, 3.6826780153192453`*^9}, {
   3.6826781350000906`*^9, 3.682678161301595*^9}, {3.6826784399735346`*^9, 
   3.6826784536603174`*^9}, {3.6826786258051634`*^9, 3.6826786275242615`*^9}, 
   3.6826853172768936`*^9, {3.6826875781342072`*^9, 3.6826876056367807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CsVsBeta", "=", 
  RowBox[{"IndiceConfiabilidade", "[", 
   RowBox[{
   "PiData", ",", "PeData", ",", "ax", ",", "pipedatavec", ",", 
    "KTRandomVarsData"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6826758890336285`*^9, 3.6826759122099543`*^9}, {
   3.682675967041091*^9, 3.682675967537119*^9}, {3.6826760070493793`*^9, 
   3.682676007648413*^9}, 3.6826760396572437`*^9, {3.682677417135031*^9, 
   3.6826774176300597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14.93657378273492`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.86253556593826`", ",", 
     RowBox[{"-", "200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.130582352372052`", ",", 
     RowBox[{"-", "400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.595971308474768`", ",", 
     RowBox[{"-", "600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.18256104338034`", ",", 
     RowBox[{"-", "800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.848613816721207`", ",", 
     RowBox[{"-", "1000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.569437762084888`", ",", 
     RowBox[{"-", "1200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.329500688430723`", ",", 
     RowBox[{"-", "1400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.118546459673562`", ",", 
     RowBox[{"-", "1600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.929524455144431`", ",", 
     RowBox[{"-", "1800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.757296405085569`", ",", 
     RowBox[{"-", "2000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.59796163357889`", ",", 
     RowBox[{"-", "2200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.44969240942713`", ",", 
     RowBox[{"-", "2400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.363023301764603`", ",", 
     RowBox[{"-", "2600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.750735262782337`", ",", 
     RowBox[{"-", "2800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.083540379154503`", ",", 
     RowBox[{"-", "3000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.372061464155186`", ",", 
     RowBox[{"-", "3200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.624849706732043`", ",", 
     RowBox[{"-", "3400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.848179731809209`", ",", 
     RowBox[{"-", "3600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.047104263537202`", ",", 
     RowBox[{"-", "3800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.225749196705893`", ",", 
     RowBox[{"-", "4000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.386824744119847`", ",", 
     RowBox[{"-", "4200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.532994892762067`", ",", 
     RowBox[{"-", "4400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.666312267960334`", ",", 
     RowBox[{"-", "4600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.788359042627135`", ",", 
     RowBox[{"-", "4800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.90084082682234`", ",", 
     RowBox[{"-", "5000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.00469806313068`", ",", 
     RowBox[{"-", "5200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.100962352872005`", ",", 
     RowBox[{"-", "5400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.19061939298491`", ",", 
     RowBox[{"-", "5600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.274164796932848`", ",", 
     RowBox[{"-", "5800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.352273824012878`", ",", 
     RowBox[{"-", "6000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.425654337970132`", ",", 
     RowBox[{"-", "6200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.494735342081418`", ",", 
     RowBox[{"-", "6400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.559932712594652`", ",", 
     RowBox[{"-", "6600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.62135436679399`", ",", 
     RowBox[{"-", "6800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.67966677937318`", ",", 
     RowBox[{"-", "7000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.735021297594539`", ",", 
     RowBox[{"-", "7200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.787669857562218`", ",", 
     RowBox[{"-", "7400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.8379670161085`", ",", 
     RowBox[{"-", "7600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.88579546440897`", ",", 
     RowBox[{"-", "7800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.931550311421459`", ",", 
     RowBox[{"-", "8000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.975439285240624`", ",", 
     RowBox[{"-", "8200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.017561330873193`", ",", 
     RowBox[{"-", "8400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.058080092556525`", ",", 
     RowBox[{"-", "8600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.09693252822561`", ",", 
     RowBox[{"-", "8800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.134524834163633`", ",", 
     RowBox[{"-", "9000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.17067674221764`", ",", 
     RowBox[{"-", "9200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.205720917930357`", ",", 
     RowBox[{"-", "9400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.236838303317654`", ",", 
     RowBox[{"-", "9600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.269897379807018`", ",", 
     RowBox[{"-", "9800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.302089909439578`", ",", 
     RowBox[{"-", "10000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.333350528993781`", ",", 
     RowBox[{"-", "10200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.363742087966994`", ",", 
     RowBox[{"-", "10400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.393406075241511`", ",", 
     RowBox[{"-", "10600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.422275522419786`", ",", 
     RowBox[{"-", "10800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.450513886162298`", ",", 
     RowBox[{"-", "11000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.47805894644889`", ",", 
     RowBox[{"-", "11200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.504955109323317`", ",", 
     RowBox[{"-", "11400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.531328395999829`", ",", 
     RowBox[{"-", "11600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.55712980592355`", ",", 
     RowBox[{"-", "11800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.582458447937528`", ",", 
     RowBox[{"-", "12000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.607278055711044`", ",", 
     RowBox[{"-", "12200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.631688671263682`", ",", 
     RowBox[{"-", "12400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.655659408327093`", ",", 
     RowBox[{"-", "12600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.679247795485056`", ",", 
     RowBox[{"-", "12800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.702472890140145`", ",", 
     RowBox[{"-", "13000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.725354331787766`", ",", 
     RowBox[{"-", "13200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.747928349197231`", ",", 
     RowBox[{"-", "13400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.770192859209558`", ",", 
     RowBox[{"-", "13600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.79219781486893`", ",", 
     RowBox[{"-", "13800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.813943284092245`", ",", 
     RowBox[{"-", "14000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.835478488343192`", ",", 
     RowBox[{"-", "14200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.856795120849318`", ",", 
     RowBox[{"-", "14400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.877910037965096`", ",", 
     RowBox[{"-", "14600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.898833770656157`", ",", 
     RowBox[{"-", "14800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.919582529047892`", ",", 
     RowBox[{"-", "15000"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.682676430460597*^9, 3.6826765079340277`*^9, 
  3.6826765861805034`*^9, 3.6826767104346104`*^9, 3.682677435283069*^9, 
  3.6826779506655474`*^9, 3.6826780396566377`*^9, 3.682678198023696*^9, 
  3.682678238917034*^9, 3.682678298561446*^9, 3.6826784073306675`*^9, 
  3.6826785842707877`*^9, 3.682678736454492*^9, 3.6826846725220156`*^9, 
  3.682684867116146*^9, 3.6826852782556615`*^9, 3.6826854550297728`*^9, 
  3.682686753414036*^9, 3.68268774725288*^9}]
}, Open  ]],

Cell[BoxData["  "], "Input",
 CellChangeTimes->{{3.6826822135113688`*^9, 3.6826822150684576`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ktsf", ",", "CsVsBeta"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Depth (ft)\>\"", ",", "\"\<Surface Casing\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<safety factor and reliability index(\[Beta]) \>\"", ",", 
        "\"\< Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<safety factor\>\"", ",", "\"\<reliability index(\[Beta])\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682676428277472*^9, 3.6826764300775747`*^9}, {
  3.682687381617967*^9, 3.6826873848891544`*^9}, {3.6826875339876823`*^9, 
  3.682687538687951*^9}, {3.6827119042777634`*^9, 3.6827119485252943`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxNx1tIk3EcxvHXNG876GwHxa2yhjRyqBh5YzIxZ+ScXXgksDxlapHiQpIR
STIoHGFGYHpRQ4tkBA3LBk9ruvT9h04iekUrdcHIGaI3qbHSfn/CB748fDSV
TeaqXYIgaLfa/j/Ml9+RG5MlbE/5Acoa/6nyGu4gg69dp/l+m9vFIKXe+Xxw
kPsWQ1yZMSwXuc0Mtb+nbk4uc6sZzg1cGDDtiyX/FOFvUGf3p3O/EaGvKGgZ
LeW2ieieDVzxWrmLRbQtSFJhhozcOoHHPXPn9ZFx5Pvj6JPqOi8GuV++h3Em
sjG8dID80YdXKuuZllgFeW0M63lfHuZfUpL3j+FJVahC+qUi60eRF11ivzGZ
QDZ50Vy92x6MUJOb3iGw1mY6O8y96kHO9FW3ZYd/6MXMmFLNP1vvejDfWpDD
ysnClheKUiY2jYf/+0HHUrUjPok8DHwLTYtvFUfIXjcc7Fn9SCK3043oupHM
xcKjZPlrPD3UaUuf05Ivu+DZ60qqXOE2uOA7ZtnULSaT8QJ92daMqEEdWTsE
ezFTmL9yO58jdMLWrJpJIU850Djf1X7dnkqu7cdx8V7P0A5bTssDG7I08soj
1HfvcW5c43b2oig3PJ4Yf5Kc1QX/J8OsrNdAFkrwF0tx3v4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxNzG1IU3EYBfBLimEgaNkLNqSI2XLerpuKs6EYJIUYmTlp9iEyapvZRgbu
Q1JZmhJMNKhAmQZRxGSRjs0hCge7rq3dZYZQZinYCGcorvyy0sj4P5EHHg4/
Hjh7aywVFzZxHJe5fn/bJI8+6V/MLeYoBiFZ6pz+Zz2SzIHqHVnk4g6Ex9/E
hNs5zC/sSIgUjaVcJS/3oK9jRbVQTTY+wkdTi2t2g5vyFY4vA2rmt09xSHO8
17umoj0n4uU3bl2PkhXPURL/+8NaHhkDsLV1dSfYspmPeIAu2ZbxFnKdB6V5
uepWn8C8awiWbZ2Nlx4fpP0RuN/prp21k8URfHJES5Q2ntkL+I9+nvl6L4u5
fRSTsqmLev1/y4zPhmsrmW+uu7XpfYaQSv/vo/gZFyhM3+BYalu0WVQyW17C
cJIvn9OQy0VsvvJwTtufyawag/W+aqiOJ2/1Qdfg2s05DzD/8KHMV6AzZ5Mn
X0F9ZrpHM6hgdvuR46rvzT9MfhCA9Vi9c1Daz2x9jXML/sL2U+TTQaTN67T7
tOS7QcTxYW8pTx4OomZCTErcTl4KQpBdNkRWM5j3SDDyVbFvYXKFBMdUrTI5
RG6WkLIqnqh0kz0Slgsmfnnt5HkJffLE80V3yGkhdJtNOyNmclkIfwBmCeD1

         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxNx1tIk2Ecx/HXVt520NkOhltlDWnkMDHyxmRizsg5u/BIYHnK0iLFiSgj
kmRQOMKMwPSihhbJCBqWDX6t6dL3CZ1E9IpW6oKRKyRvSmM1/T+EX/hefLSV
jZYqmSAIuugx0bdF/8v8+Z25cVnCRqp3UNUETpbXcIcY/B167deb3G4GKe3W
x/1D3DcYEspMEYXIbWGo/TN9feo7t4bh7OD5QfPuePIPEYHLmuyBdO5XIgwV
Bc1jpdx2ET1zwSs+G3exiLZFSSrMkJNbJvGwd/6cQZZAvjuBfqmu60KI+/lb
mGZlDZHlveT3frxQ2043xyvJq+P4nffpfv5FFXnPOB5VhSukX2qyYQx5sSWO
9ql9ZLMPTdU7HKEYDbnxDYKrbeYzI9w/vciZueqxbvE3g5gZV6rdtO22Fwst
BTmsnCxEvViUOrluOvjf9zqXq52JyeQR4Et4RnytPET2eeBkT+pHk7hdHsTW
jWYuFR4mK17i8YEue/q8jnzJDe8ud3LlCrfRDf8R67p+KYWMZ+jPtmVsH9KT
dcNwFDOl5TO36ynCx+1N6tlU8rQTDQvdHa2ONHLtAI6Kd3qHt9h6ShFckx8j
rzxAfc9O19o1blcfinIjE0mJJ8hZ3Qh8MM7J+4xkoQT/AFfZ3wA=
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxNzF9IU3EYxvFTE8NA0LI/2Igipst5Om4qzoZikBSiaOai2UVk1DazjQza
RVFZmhJMNKhAmQZhxGShjs0hCg92XFs7ywyhzP6AjXBG4aqblUaD3xv5wvfi
wwvP7gZr7RkZx3E5idYlWp/IrIgNDH8tKOPojEKa1D3/zwakWoL1W3PJZV2I
TL+ICzfzmYccSI6WTqVfJC/3YbDrp3qpnmx6gLfmNvfHNW4pUjo/jWiYXz7C
fm1Vv29VTXsuJCmu3bgaIyufoDzpz5vVQjJGYO/o6U225zEf9AI98o3TbeQm
LyoKCzTtfoF5+xism7uvnHu4j/Yn4Hmlv3zSQRYn8M4ZK1fZeWYfEDj0/sPn
O7nMnZOYlc+dNRj+W256PN5Yx3w94faW11lCBv2/T+KXLFiyc43jGR2xVlHF
bH0K4xG+ZkFLrhGx4cL9Bd1wDrN6Cra76rEmnrzJD/0l9w7OtZf5hx+V/mK9
JY88+wyaE/N92lElsyeAfHdzf9EB8r0gbIebXaNSNrPtOU4tBUo6j5KPh5C5
qNft0ZFvhyDjI74KnjweQsOMmJqyhfwtBEF+3hhdyWLeJcHEH4t/iZBrJTjn
GlVpYXKrhPQVsbrOQ/ZKWC6e+e1zkBclDCpSTpfeImeG0Wsxb4tayJVh/AVy
ueD3
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 41.22722962724004}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\" Depth (ft)\"", TraditionalForm], 
        FormBox["\"Surface Casing\"", TraditionalForm]}, {
        FormBox[
        "\"safety factor and reliability index(\[Beta]) \"", TraditionalForm], 
        FormBox[
        "\" Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Tamano\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 41.22722962724004}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"safety factor\"", "\"reliability index(\[Beta])\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.682677437584201*^9, 3.6826780483651357`*^9, 3.6826783171355085`*^9, 
   3.682678420703432*^9, 3.6826785995546618`*^9, 3.682685467189468*^9, 
   3.6826867582663136`*^9, 3.6826868754610167`*^9, 3.682687385978216*^9, 
   3.6826875408430743`*^9, 3.68268775092309*^9, {3.682711920578696*^9, 
   3.682711949044324*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "7\[CloseCurlyQuote]\[CloseCurlyQuote] PRODUTICTION TIEBACK ",
 "Evacuated Casing",
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3U1y+ky/mGHyMcg2sg1myRJORhmeVIVpqk5SlTqzdwmsxuOzD+8kEwII
pG516wOMMerfdZXref4WWJLt1o0kZPjP/+N//dPh3+92u//9n87/+ad//r//
5V/+5Z//9b/9x/Mn//Vf/8///B//4fyP/37+z//7d7vd5d8nAAAAAAAAgM35
Pu53I4ev4ab7v/u7nicUX5LeCdbwJDtTjI3fMk76dcL++D2+Kflk9CXDF4Sw
+8fOhw8fPjbxkcWrqP0wZbgpv1Nlnz9K7f/8d+fDhw8f6z+yfi3v21fvke/b
R4k9L7Pb7f5tnW7YvmShT8xq5kuqN71wbR9dq0dX9YlFPKeb1cpf99nOmZxf
Up6379N97f6+u7k4f1//ElhH7X9C7XlGuqP+dcjCfa369fP8htqzt56oZb31
qVf7lyx6W7UX/N9SnpKvXpOTPhVb1P38YKD221c8Kz/oJ18e9yeO5m5fsT8c
Fh/81f6HAte+chFhVqZiyN7cR27ocxFTl1kWN01cq3O6/hzD/vja0W0padaL
ZE89bZ/fuOJQT+1/KHDt72aecLzITkdkO7HFOYxA6tfkXH8Y1QeC8w2ut2/P
5an2dKe8+tR78ghQecTfrR8Uav9Dal8bgRPXFlZ2R518Jqyu7eOncMbhzh4B
ii3Ivv2zi3iC2o+HWeUEw/0ezj3A3b3ioz+gS4+D78/Vq/3STWo/Natfr30x
6G7TPK0InWGPfTLTt83ldfv2J1dg/kzbtV9O/WlN7e/38AdBcLXmjyfuW9LM
eXu1f34RT1B75+3hB5JNINs+ztOHK3Hql2Wd1P75RTxB7evX5OSXCrsmByZM
XW+fbhjT19vnl2cuXqil9j+h9vWdiuTiAtfbw4dQ+59Qe2Ar1P4n1B7YCrX/
CbUHtkLtf0Ltga1Q+59Qe2BDVgZf7X++6A3VXuqhPWr/NLUHNuSh2q9sxZpZ
PbSSwWv/wh/7yjurPbRH7Z+m9sBT+j+cXfyz2de8d1VH7Z8WvfbDH8bW3mQh
eSur7oW8K6P1lX9a++Cr7jzxIj0r31LkuZf/KWa+9CqJbNjwelLDy+NU36bq
Ze9d1VlT+y4Uav/DRX9C7VfObbn21RFZG5xTtX/1y+a8p/bjx7WXhdh7EQZS
ffnv6stdvuy9q04Ppl7tf7joD6n9y4Lfmx+cX4fu9e3zsTj/kpj9SM7exu04
nprcsz+aHb+Rd/FuzpfljuZfXdxlhtmiqi85279AYX//7m7Zw1v/SbGgyZkn
rxSd/GyPtyOA2uG/Q4CtyAZzfgx8u8d963jv69uniVD7Hy76c2q/Zrbra5/t
0M8MztTKG/t/9e/cmn9tds/dTO2Ll5atvtZsvripl+qvrGl6/9vdkp9F8U5E
c0flw6ejdze6fofDg8Z45Z3y2YzRaOl/p+W287r3rjot1f7RPjyUnYd+PGr/
qh/7+l/oqtrfnyYq4jv+ZGzurazS29Kczh7nVnaGZzeH+kxqi6t8STppcvWy
Hf/xplt9I4BMcW4sPXFUbYS3B9uI9bvxb9y3L+Mw76HsPPTjUfuVZn47v1L7
m3WDMzXzVlbj1/yern0+yIc3d6vec+q80eLi6itWfOOTCy1P43QmttzJhY4f
Sm+nyWbmyYf6OlQ2k0fP2z9T+/UWZ6X284t+T+3nZ/jC33hq1Rurjb9iqr/b
2bevnkYZndj66h9oZve9H6t9+ghif357hl/bsB/Sn7wbX/bwqveueiG1X1z0
J9T+ZeonbWYHZ27mmpyJE+mVx5HKefvRNW3lefv+WdSF8/aLtU9OrUysXnd6
Jj3VUj71MDHzcvrwHU4+c2HXfjOqz60/eL19/rTUO5+mV/vFRTdV++xM87o3
VitNXm9fu0imftRwX4vkL0z6Fbte+FC9JueUbyCzi6t9w+MNdWr1hke/6jqM
Zr68b99d9zNxTY7W8yZqv7joxmrPe9l35yOsT73aP7GI9T9bwW+X2vMR1H7N
otUe2Dq1X7NotQe2Tu3XLFrtga1T+zWLVntg69R+zaLVHtg6tV+zaLUHGrA+
+Gr/6CKkHvgcar+4aLUHGqD2i4tWe6ABar+4aLUHGqD2i4tWe6ABar+4aLUH
GqD2i4tWe6ABar+4aLUHGqD2i4tWe6ABar+4aLUHGqD2i4v+7dpLPfAeK4Ov
9o8uQu2Bj6L284tWe6ANaj+/aLUH2qD284tWe6ANaj+/aLUH2qD284tWe6AB
K1Ov9k8sQu2Bz6H2i4v+7doLPvAGar+4aLUHGqD2i4tWe6ABar+4aLUHGqD2
i4tWe6ABar+4aLUHGqD2i4tWe6ABar+4aLUHGqD2i4tWe2Dr1qde7Z9YhNoD
H0Lt1yz6DbUXfOBXqf2aRas9sHVqv2bRag9sndqvWbTaA1un9msWrfbA1qn9
mkWrPbB1ar9m0W+ovdQDv2198NX+0UWoPfA51H5x0WoPNEDtFxet9kAD1H5x
0WoPNEDtFxet9kAD1H5x0WoPNEDtFxet9kAD1H5x0WoPNEDtFxet9kAD1H5x
0WoPtGFl8NX+0UVIPfBR1H5+0WoPtEHt5xet9kAb1H5+0WoPtEHt5xet9kAb
1H5+0WoP4Xwf97ubw1c/9evQTdofv09PTMxmvT8c9um830Lt5xfdWu3XDePz
vc7/7P6bf/39nqMZrFtqZew/LV2RJ+Z7WaN3b2tsxHlsJVvC7d/DiEnGzvqJ
d/2kt4/Ah1Kv9g8t4iODv3YYT9T+Uth+gA4zWPTqgX198BhmeFmtVz6QENt5
POV7QtfPkqnDeF4/sZ/ZyPuCv6b2fbvU/qFFrA/++2q/fhh/HS7/6/7bqwzd
a2TT6dkDxuVgNdHfefrgYqh2P6XcHJLHrHLNqvMfNrLqeh6PlYX1xzvn78Jj
SVjJIB9GweMTex+8b5+GS+0fWsT65r9x3z61bnBmriUtb5+q/S4tcL/bkx5c
FMe799v7+1W2ibl1rM5/eDirH8b031Py1cM/HTnElRy/ZqOuGKaLE7NZfmLt
y2o9NHO1Xxn8v6j90jCeMewnl12dGMz1gX2P8ELQ8wOS2oTpFS0eYnoL65ku
o/b0Be3LH+Zb37cvk1U1NfMgtS9/IB9f+xXDeI3+EePB2ifnLpMnCYo1TBTb
y+w6jud/Sk/vFI9Qk6eh6j8gQhg9M3TxkvP2f1z79abmMDXzOLWfmv7Dn+2v
WDuMa6b2sh+offI879ywn999nzlvX5t/9Uvt2zOlso2c6pc1PDAxnc3f1P7n
1P6trf6hB4ZxVXZNTpLOIb/DElY9BFQ3lO754eqJpvr3MRyrVOc/Oi20qvbO
28eVPM9/cx8fr7jePn/q6J3X5Pyc2m+o9g8O46r6Ze79nK+Xt8xVNDmnkv55
ycw1ORPrNHG9fXX+E+d25s843b/ocLRvDye131TtecYGj7jh5eZDp/ZsVnoY
ZMce1P5G8IG2qX1H7YG2qX1H7YG2qX1H7YG2qX1H7YG2qX1H7YG2qX1H7YG2
qf1J6oEYZlqn9gDNUHu1ByJQe7UHIlB7tQciUHu1ByJQe7UHIlB7tQciUHu1
ByJQe7UHIlB7tQciUHu1ByIIXnupB+KYKp7aA7RE7QEiUHuACNQeIAK1B4hA
7QEiUHuA5gW/3v4k+EAMaq/2QARqr/ZABGqv9kAEaq/2QARqr/ZABGqv9kAE
aq/2QARqr/ZABGqv9kAEaq/2QPPmQ6f2AG1Q+47gA21T+47aA21T+47aA21T
+47aA21T+47aA21T+47aA21T+47aA21T+5PUAzHMtE7tAZqh9moPRKD2ag9E
oPZqD0Sg9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg9moPBDGVuwi1
l3ogDrUHiEDtASJQe4AI1B4gArUHiEDtAZoX/Hp7tQeCCF77k+ADMai92gMR
qL3aAxGovdoDEai92gMRqL3aAxGovdoDEai92gMRqL3aAxGovdoDEai92gPN
mw+d2gO0Qe07gg+0Te07ag+0Te07ag+0Te07ag+0Te07ag+0Te07ag+0Te07
ag+0Te1PUg/EMNM6tQdohtqrPRCB2qs9EIHaqz0QgdqrPRCB2qs9EIHaqz0Q
gdqrPRCB2qs9EIHaqz0QQfDaSz0Qx1Tx1B6gJWoPEIHaA0Sg9gARqD1ABGoP
EIHaAzTP9favXDmATxW89ifBB2JQe7UHIlB7tQciUHu1ByJQe7UHIlB7tQci
UHu1ByJQe7UHIlB7tQciUHu1ByJQe7UHmjcfOrUHaIPadwQfaJvad9QeaJva
d9QeaJvad9QeaJvad9QeaJvad9QeaJvad9QeaJ6/rpJ6IAK1V3sgArVXeyAC
tVd7IAK1V3sgArVXeyACtVd7IAK1V3sgArVXeyACtVd7IAK1V3sgguC1l3og
jqniqT1AS9QeIAK1B4hA7QEiUHuACNQeIAK1B2ie6+1fuXIAnyp47U+CD8Sg
9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg
9moPNG8+dEFqfxJ8oHVq31F7oG1q31F7oG1q31F7oG1q31F7oG1q31F7oG1q
31F7oG1qf5J6IAZ/XaX2QARqr/ZABGqv9kAEaq/2QARqr/ZABGqv9kAEaq/2
QARqr/ZABGqv9kAEaq/2QARqr/ZABMFrL/VAHFPFU3uAlqg9QARqDxCB2gNE
oPYAEag9QARqD7Tl+7jfXe2P3/3Er0M57YGJ2Zz3h8N+d/j61W/i1WZyp/Yf
ph/AiftoTG8bD8H7yJ0YvdCa85C/bQXnf93G/GUT6SYO/3pg4l0/qXLbpwte
+9PGgn9VDLPLhCHjl7j3n10fBYY7Z7dBm4bY1ycOW9D6if1MRrYUfLXffu2L
sZ2N21HcN7hHAg85j/H98Tg6F3OdmOwRXT9ZPzGduX17tX+b0TAri97fo3IT
tC49oO3TnW0L90/WT8xmrvZq/y5l7YtBd5tWPaKFtv1wN77pfft/m9BS7ae+
x7MWa3+/RzZuIYivQyXXLzlvr/ZzE19O7Z23h3nDJjHs8AzXMowuv1k38U7t
pye+nNrXr8kZprgmB/qLZ2pX1Pzkevv88szNXZOj9r+9zi9W3alILg1zvT1Q
Uvvt1R7gQTOpV3uAZqi94AMRqL3aAxGovdoDEai92gMRqL3aAxGovdoDEai9
1ANBzARf7QGaofZqD0Sg9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg
9moPRKD2ag9EELz2Ug/EMRV8tQdoidoDRKD2ABGoPUAEag8QgdoDNM8VmL+9
wgCfIHjtBR8IQu3VHohA7dUeiEDt1R6IQO3VHohA7dUeiEDt1R6IQO3VHohA
7dUeiEDt1R5o3kzq49Re8IHmqb3aAxGovdoDEai92gMRqL3aAxGovdoDEai9
2gMRqL3UA0HMBF/tAZqh9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg
9moPRKD2ag9EoPZqDwQxFfwItZd6IA61B4hA7QEiUHuACNQeIAK1B4hA7QGa
F/x6e7UHgghee8EHglB7tQciUHu1ByJQe7UHIlB7tQciUHu1ByJQe7UHIlB7
tQciUHu1ByJQe7UHmjeT+ji1F3ygeWqv9kAEaq/2QARqr/ZABGqv9kAEaq/2
QARqr/ZAEK63l3ogArVXeyACtVd7IAK1V3sgArVXeyACtVd7IAK1V3sgArVX
eyACtVd7IAK1V3sgArVXeyCIqeBHqL3UA3GoPUAEag8QgdoDRKD2ABGoPUAE
ag/QPNfbCz4QgdqrPRCB2qs9EIHaqz0QgdqrPRCB2qs9EIHaqz0QgdqrPRCB
2qs9EIHaqz3QvJnUqz1AM9Re8IEI1F7tgQjUXu2BCNRe7YEI1F7tgQjUXu2B
CNRe7YEgZoIfpPZSD0Sg9moPRKD2ag9EoPZqD0Sg9moPRKD2ag9EoPZqD0Sg
9moPRKD2ag9EoPZqD0QQvPZSD8QxFXy1B2iJ2gNEoPYAEag9QARqDxCB2gNE
oPYAzQt+vb3gA0GovdoDEai92gMRqL3aAxGovdoDEai92gMRqL3aAxGovdoD
Eai92gMRqL3aA82bSb3aAzRD7QUfiEDt1R6IQO3VHohA7dUeiEDt1R6IQO3V
Hhr0fdzvOoevclo2/evQTdgfv4evr07MZrM/HPbJzD+f2m8q9flozUdjett4
CN5H7sTohcZcRny3FVy2i/uYP08t6ny5fbjn7ebqxOIrKrd9upngq/2HKoZZ
OqS7od5/dn0UGO6c3QZNOg/6bHPoPsmmnoZb71vHsFlVJ/b3H9lS8NV++7Uv
9lmycTsa4RvcI4GH1GufhXrYiy/vWf/yZOb27dX+bUbDrCx6f4/KTdC8/ExO
3/DskPf672wDuX9SndhT++mJL6f2ldoXg+42rXYTtO/+PNb++FU7gXPfMuzb
q/2HW679/R7VU5UQSH2P5z710fP2aj838eXU3nl7mDUM+4lN4Tx5fM3O6Jqc
YuJp+FK1V/u3qV6Tk18/7JocQuufkk1Ge3KVcroNPHi9fX55pmtyfpXa13cq
kisOXG8PlNR+e7UHeJzaqz0QQfDaSz0Qx1Tw1R6gJfO1X/9A8Oe1f/S7UHsg
FLUHiEDtASJQe4AI1B5oSvHeVeVbAd3/CDHKe1edVlyBqfafqHxhtNEQTtVv
vb9iWm27ON8wfkG1+VcFeetrhiSv+faqVfrhnxtv8CVTmlZ/76rs9uJ1dCK/
d1UXyWZq31Twb2mqvEzf3OAc3XqreT7ukxd83UDtX3Gvk5cSas/8SxZnU7x3
1VDIlmo/dYdt1f462q4v2l0dZuub3I3o8XZxexXY7rXxi1deu+/S7I/HQzrW
v7LPxp92X3I57t31izwmB8qVg+ZiDunE/hA6/XaSA/VVq5TNdvplQsezzdeu
bELlh1OuvMeSXzZb+9o+T37PSK9vn+axsdpX77at2t9MjLRHYz8+pp3pUDbI
73dM3/PzPuvKtGzvOfkkfRHB+TmkK3oNZ177ZJOsbYzVGZ7G8y3VZpvs+FUO
+Ks/nPHKq/1vq7131XBTvlsR+L2rFtvYQO1H92yk9vfnjuolGd+a7r7MPCFV
W+J4j3o0sXaYPLk7NVqN/v1DywPt9DX858/blwudOHKfmDAhXZPiJzX/wxmv
vNr/vqn3rhr99mLv25dh7G2u9t1qR6n9zfw70RbjOd2hH3aIZpe4XPtU/0Tw
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
PlJYU/v0e/9KHgLSh7DyeOFr+gmF8/d43pcbPa/B55scMMnO+fE7G/n94fCp
Hw/27Qtq/+eG8Ta1PzxTy6mNIg/7OMV9OadqP1qNckNYXMRTtU91W+J5PftN
clT+Xn2du9ofL+es0ul8vqkBU17McHkon9hjf/S8vdp31P5X9eNtdM7h+dpv
dt++vH9a+H537qs8opnYtz+v1ehpbj7fmgG/sG9/f6zfFdfklBPVPqX2v2pU
p5fUfu15+9EzXOU58G62j5y3f7r2U+t82yqrG2OypY/XOX+Wtv/B8vkeq/1u
uFDzlJ+ceex6+/w5oJNrcn6T2q+6lnJlRSeuybld9J5cwNYfHV9OekxckzOM
/8Vrcn5Q+3Khu/yanH7icESfXok3fU1OuhQ+38Im8N6Plqj9n/vz8Rzqg8/3
54Ok1QGj9n/uz8dzqA8+358PklYHzOZq31jqTx82tpv/gMjS4Ks9QKvK2pcf
71mTqRVQe4CfW1P7t+3bqz3ALylrP3pW9J21ry5a7QF+Tu0BIlB74EN9H/e7
4VWRLp8N+ulfh27CPn3PnPUTs3nvD4d0iS2pXoGp9n9gGMeVkTYxyM+Tr6O2
+NruhvvN9bnUh/zkuj0y/vv7P/qFqft2+ciK1taB7bqNgeH3eJ5Q/FKH33Ty
O18/sZhNuyOn3LH/wNoHCP5lWA/jsIhbbZD3sT/fePuC/muna5/OZvjCBU/X
/lnXx6VsG38m+GzZtfT741c6lsYj+n7H+x2Ggbd+YrK0TIPB72v/j4lrYD6k
9ulNDdY+G8VlhKuD/D54x197HaVfh+vriR2yITse4ffPL3O4HL7uho0iHfDz
n/bL7ffCkzt0S8jWsP+kOp+Zn0C6g1Z85bCxFpvzdYHHysL6g/rz9+6x5FNl
gzZrcnYcO9wh2d1ZM7FcUOv79mlUP7b2/R3i1b42yNOyF/v2k0tJh3F6JJDP
9jaP/l/JF9amFTePN5zk27v/szafU7EGpeS22j5b5Vj9+t2Nv6PRt+nI4WOl
4yMb38VIurh/sn5iuaCma18t6sfW/h/X4v32yrxdfianMg6LQZ49Qsw89zSa
T6asdX7SKNkpGrqaLnRi6yg2nGKla/NJfxirtrb+frWHh+rGWz2onzp04hNM
t/f2K7Rvv1q19r0/rH23AmFqP6T4eqZyLj7jQZ4+FgwPGlOLqN1a7+EpfxZ4
dBoneXQpY1luOLf7lKdxao9SS/VNvjhd7XxW87Wvn1zi8yzW/jXn7aPUfiS9
6W9rv2YlW7Swa3u7ub5jO/vE65raL+/bz1wTUUzJTqykj2Pz3+PMefvk8az6
7ZRniOzbb1r668vGxfmG8XUNo7OL6yYWC2q39jM+p/YB5Ofe585j3wZ5fqr6
dfv2q8/b11e5f1q22HC6ve/09E15Lj1bo+o1OdWzuKPTQqtq77z9RuSDMzkZ
mf7KXnG9ff6UT5PX5MxQ+7dKr2opbiwGeb47OpzamK3WutrXrpZJx391RUcT
7/effIpt6RvOvqnsLsk5m+HPYCbO7czVfviiw9G+PcGpPSGEPHKHlNrTrvT6
JDv2hLYr/sb2t5eo9gDv9+e1F3yAN1B7gAjUHiACtQeIQO0BIlB7gAjUHiCC
P6+91AO8h7+lBYhA7QEiUHuACNQeIAK1B4hA7QEiUHuACNQeIAK1B4hA7QEi
UHuACP6w9lIP8E5d8NUeoG1qDxCB2gNEoPYAEag9QARqDxCB2gM0z/X2ABH4
W1qACNQeIAK1B4hA7QEiUHuACNQeIAK1B4hA7QEiUHuACNQeIAK1B2jeLgmv
2gO06s9rL/gAb6D2ABGoPUAEag8QgdoDRKD2ABGoPUAEf157qQd4D39LCxCB
2gNEoPYAEag9QARqDxCB2gNEoPYAEag9QARqDxCB2gNEoPYAEag9QAR/WHup
B3inLvhqD9A2tQeIQO0BIlB7gAjUHiACtQeIQO0Bmud6e4AI/C0tQARqDxCB
2gNEoPYAEag9QARqDxCB2gNEoPYAEag9QARqDxCB2gM0b5eEV+0BWvXntRd8
gDdQe4AI1B4gArUHiEDtASJQe4AI1B4ggj+vvdQDvIe/pQWIQO0BIlB7gAjU
HiACtQeIQO0BIlB7gAjUHiACtQeIQO0BIlB7gAj+sPZSD/BOXfDVHqBtag8Q
gdoDRKD2ABGoPUAEag8QgdoDNM/19sAf+z7ud4ev/p+57oZ8+u3Op9PXoZuw
P34Ps6tOPKWz3x8O+2EmUfhb2repDuPzxPOQ7P47c9fKsF23wAcGdH/3B79u
eZk/mSHNu7W5NkLON92H/vmfMwNr9HBRTCy+IuSYTE/jvK32du/7YTxd+3Qo
JoP+Ac/W/idCbkQ87Vr6/fGrOmzSYT/eRO53uH/VMPCqE5OlVY4botjd8/vm
2nfBj1r7bJflMuC6//bGo/T++WXIXw5Bd8PALgdtfxh7P1hN55bNuf/y88ok
s6rfJ5nD/nisLbi25vnEya+tLiX9Tmlabdjk07JQD3vxwyNAvv80mljONORu
yT/+rvbvWeIHWh5oo3tcPr2P5PyU5W0o5we8w8TdTO2Tqd3X1DaEyiKu61Au
d+57y+Y8t8752sXbGsOqDJt8bPWbwO2T67+zu9w/qU4sFxSv9u9vb7nEeMFf
cVqmOG9fnJI85Scy+3mmE5MjgrL25Wiv3FRbxOSRwsSUqYVmS+l/IPclxtsY
Qyt/3bNbyW2U2Ld/hNr/gTXn4KeG4mRp70O8OPqdq/3Ubnl9i6gt4mW1T1W+
ERpX/Lrnt5L7PsGj5+1D1/50PW/fa3uhH2LVE65rat/Uvr3LeGKrPFGVbyXZ
ZnO+dTjfNz4HWJ9YLMgA49dVLy2o3Wu59qvP2yfTktPhxTVrD5y3f23tl5ZC
81ZchJac3UxvevB6+9EzQ8YYv2jdtZTraj9xTc59s0j+gKTfUq5XxFSvyTkN
43/xmpyF2hdPOSzVvlgTtQcAAAAAAH7F/wcIk46F
     "], {{0, 857}, {506, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{506, 857},
   PlotRange->{{0, 506}, {0, 857}}]], "Input"]
}], "Title",
 CellChangeTimes->{{3.6731869027567735`*^9, 3.6731869181384*^9}, {
  3.6731903053545585`*^9, 3.6731903061656046`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"burst", "=", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "100", ",", "1480", ",", "2960", ",", "4440", ",", "5920", ",", 
     "7400", ",", "8880", ",", "9066", ",", "10360", ",", "11840", ",", 
     "13320", ",", "13885", ",", "14800"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.09", ",", "90.91", ",", "1345.50", ",", "2690.90", ",", "4036.40", ",",
      "5381.80", ",", "6727.30", ",", "8072.70", ",", "8241.80", ",", 
     "9418.20", ",", "10763.60", ",", "12109.10", ",", "12622.71", ",", 
     "13454.41"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.09", ",", "90.91", ",", "1345.45", ",", "2690.90", ",", "4036.35", ",",
      "5381.80", ",", "6727.25", ",", "8072.70", ",", "8241.79", ",", 
     "9418.15", ",", "10763.60", ",", "12109.05", ",", "12622.68", ",", 
     "13454.41"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AxialForceInitialWellCat", "=", 
    RowBox[{"{", 
     RowBox[{
     "414946", ",", "411149", ",", "358709", ",", "302469", ",", "246229", 
      ",", "189989", ",", "133749", ",", "77509", ",", "70441", ",", "21269", 
      ",", 
      RowBox[{"-", "34971"}], ",", 
      RowBox[{"-", "91211"}], ",", 
      RowBox[{"-", "112681"}], ",", 
      RowBox[{"-", "147451"}]}], "}"}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"AxialForceEvacuatedCasingWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "303906", ",", "300110", ",", "247670", ",", "191430", ",", "135190", ",",
      "78950", ",", "22710", ",", 
     RowBox[{"-", "33530"}], ",", 
     RowBox[{"-", "40598"}], ",", 
     RowBox[{"-", "89770"}], ",", 
     RowBox[{"-", "146010"}], ",", 
     RowBox[{"-", "202250"}], ",", 
     RowBox[{"-", "223720"}], ",", 
     RowBox[{"-", "258490"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressEvacuatedCasing", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.00", ",", "0.05", ",", "0.77", ",", "1.54", ",", "2.31", ",", "3.08", 
     ",", "3.84", ",", "4.61", ",", "4.71", ",", "5.38", ",", "6.15", ",", 
     "6.92", ",", "7.21", ",", "7.74"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExternalPressEvacuatedCasing", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.09", ",", "90.91", ",", "1345.45", ",", "2690.91", ",", "4036.36", 
      ",", "5381.81", ",", "6727.27", ",", "8072.72", ",", "8241.81", ",", 
      "9418.17", ",", "10763.62", ",", "12109.07", ",", "12622.71", ",", 
      "13454.44"}], "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"{", 
    RowBox[{
    "3.426", ",", "3.423", ",", "3.228", ",", "2.820", ",", "2.394", ",", 
     "2.032", ",", "1.744", ",", "1.517", ",", "1.492", ",", "1.337", ",", 
     "1.193", ",", "1.075", ",", "1.036", ",", "0.977"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"axialsfwellcat", "=", 
   RowBox[{"{", 
    RowBox[{
    "3.426", ",", "3.469", ",", "4.204", ",", "5.439", ",", "7.701", ",", 
     "13.187", ",", "45.843", ",", "31.050", ",", "25.644", ",", "11.597", 
     ",", "7.130", ",", "5.148", ",", "4.654", ",", "4.028"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"{", 
     RowBox[{
     "100", ",", "100", ",", "8.646", ",", "4.503", ",", "3.114", ",", 
      "2.414", ",", "1.980", ",", "1.665", ",", "1.631", ",", "1.427", ",", 
      "1.249", ",", "1.110", ",", "1.065", ",", "0.999"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Refinamento", " ", "da", " ", "solu\[CCedilla]\[ATilde]o"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"refinedl", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"dl", ",", 
       RowBox[{"{", 
        RowBox[{"dl", ",", "0", ",", "14800", ",", "10"}], "}"}]}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LF", "=", "14800."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lcimento", "=", "14799.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nrefs", "=", "1000."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refinedl", "=", 
   RowBox[{"refine", "[", 
    RowBox[{"L0", ",", "LF", ",", "lcimento", ",", "nrefs"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressinitial"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceInitialWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "AxialForceInitialWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AxialForceEvacuatedCasingWellCat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{
    "refinedl", ",", "lvec", ",", "AxialForceEvacuatedCasingWellCat"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressEvacuatedCasing", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "InternalPressEvacuatedCasing"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressEvacuatedCasing", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "ExternalPressEvacuatedCasing"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "Ti"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tf", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "lvec", ",", "Tf"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "vmsfwellcat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"axialsfwellcat", "=", 
   RowBox[{"MakeCompatibleSizeVectors", "[", 
    RowBox[{"refinedl", ",", "lvec", ",", "axialsfwellcat"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colapsesfwellcat", "=", 
    RowBox[{"MakeCompatibleSizeVectors", "[", 
     RowBox[{"refinedl", ",", "lvec", ",", "colapsesfwellcat"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lvec", "=", "refinedl"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmsfwellcatwithl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vmsfwellcat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"colapsesfwellcatwithl", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"colapsesfwellcat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"axialsfwellcatwithl", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"axialsfwellcat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"di", "=", "6.094"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alfa", "=", 
   RowBox[{"6.9", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"3", " ", 
    RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightperfeet", "=", "38"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "95000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PipeData", "=", 
   RowBox[{"{", 
    RowBox[{
    "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", 
     "weightperfeet", ",", "lcimento"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fi", ",", "Ffim"}], "}"}], "=", 
   RowBox[{"ComputeForces", "[", 
    RowBox[{
    "InternalPressinitial", ",", "ExternalPressinitial", ",", 
     "InternalPressEvacuatedCasing", ",", "ExternalPressEvacuatedCasing", ",",
      "Ti", ",", "Tf", ",", "lvec", ",", "PipeData"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputedFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ComputedFfim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WellCatFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AxialForceInitialWellCat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WellCatFfim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AxialForceEvacuatedCasingWellCat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffini", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ExternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"InternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressEvacuatedCasingPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressEvacuatedCasing", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressEvacuatedCasingPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressEvacuatedCasing", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"difffim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ExternalPressEvacuatedCasing", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         RowBox[{"InternalPressEvacuatedCasing", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pressaoini", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "InternalPressinitialPlot", ",", "ExternalPressinitialPlot", ",", 
      "diffini"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \
\(o\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressaosobrevi", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InternalPressEvacuatedCasingPlot", ",", 
       "ExternalPressEvacuatedCasingPlot", ",", "difffim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \(o\
\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcaini", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFi", ",", "ComputedFi"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Inicial (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Diogo\\\\Dropbox\\\\figs\\\\compara05ftcimentofini.\
jpg\>\"", ",", "compara", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcafim", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFfim", ",", "ComputedFfim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Final (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedata", "=", 
   RowBox[{"{", 
    RowBox[{"de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pipedatavec", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"lvec", "[", 
       RowBox[{"[", 
        RowBox[{"Length", "[", "lvec", "]"}], "]"}], "]"}], ",", "sigy"}], 
     "}"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PiData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressEvacuatedCasing", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PeData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressEvacuatedCasing", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "barlowsf", ",", "apisf", ",", "vmsf", ",", "kssf", ",", "ktsf"}], "}"}],
     "=", 
    RowBox[{"ComputeSafetyFactors", "[", 
     RowBox[{
     "pipedatavec", ",", "ax", ",", "PiData", ",", "PeData", ",", "0.66", ",",
       "13.2", ",", 
      RowBox[{"-", "0.264"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"vmsfplot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vmsfwellcatwithl", ",", "vmsf"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\>\"", ",", 
         "\"\<\>\""}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<von Mises WellCat\>\"", ",", "\"\<von Mises Calculado\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ktsfplot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ktsf", ",", "apisf", ",", "colapsesfwellcatwithl"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<fator de Seguran\[CCedilla]a ao Colapso\>\"", ",", "\"\<\>\""}], 
        "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Klever Tamano Calculado\>\"", ",", "\"\<API Calculado\>\"", ",", 
       "\"\<Fator de Seguran\[CCedilla]a ao Colapso - WellCat\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "14800"}], ",", "0"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6827128173649893`*^9, 3.682712817973024*^9}, 
   3.68271300042546*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressKick] = \"\>", "\[InvisibleSpace]", 
   "1102"}],
  SequenceForm["Length[InternalPressKick] = ", 1102],
  Editable->False]], "Print",
 CellChangeTimes->{3.682712776763667*^9, 3.682712818637062*^9, 
  3.6827130021735597`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "1102"}],
  SequenceForm["Length[InternalPressinitial] = ", 1102],
  Editable->False]], "Print",
 CellChangeTimes->{3.682712776763667*^9, 3.682712818637062*^9, 
  3.6827130021745596`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressKick] = \"\>", "\[InvisibleSpace]", 
   "1102"}],
  SequenceForm["Length[ExternalPressKick] = ", 1102],
  Editable->False]], "Print",
 CellChangeTimes->{3.682712776763667*^9, 3.682712818637062*^9, 
  3.6827130021765594`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "1102"}],
  SequenceForm["Length[ExternalPressinitial] = ", 1102],
  Editable->False]], "Print",
 CellChangeTimes->{3.682712776763667*^9, 3.682712818637062*^9, 
  3.68271300217856*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJwt3Hs40/8bx3E5VSTl2AkpU9FIJaUw1SK1hKgUofRVOdcKIYcIUVISIULO
RVrOzGE5zqFIcqiElESOEfl9Xr9r/dP1UM32ft6799lcV7JWDobW3FxcXEd4
ubjwu0BbgqOGQK4WF+fX3JZGV2qzBaWsNp76+oYVc+9OvekjzY4cOzP5P2So
/t3lSlmX5Wxzr/Q6s69wYb5Rsxfnz32YVYK72lL5/ChOGsQty9xipp66ODG/
K5Dz928zb6c/FjWxD6FcuDfkXqocysz16F9h0hzK+fdhzBTS/AbvwTDKSl6T
pZmND5iRbEm1DL5wzu1FMNeklLHrZSIoNVdLnkQ5RDK/jdVYDe2K5Nz+Y+ZL
rbdTQsceU9y+y6sECMcy3W9/DFayj+F8vzimTluPrH7AE4r4c50vBcfjmYH3
6B1qzXGc7/+UaZ87TdLtjqfYffubmp2cwDzW5eF4YvAp5/4kMnfxcBfa/Emg
sNZmOadMJTGlN/nzufIlce5fMlNeVsLujsgzipTpud1PdFKYpiqa74mvc+5v
KvOu9nmt/M0pFPr9FbwPI9KYLIM7KQ27Ujn3P505Y/l6ee+BNEpDfX198LcM
prJzt9u0UTrn8TxnnvPh711qmUGR5/cO91V7wYwMU6LJ2WdyHl8Ws+Gpyetd
159TSp+sUi6uyGLy5HjK6Ae84DzebOZDz22vX+hlUS4VXbmfN5jNefxZnMf/
knk9MZeLeTybItneMJUjmsM5j2zOeeQwLWt3H2o695JSMbHx9Ivdr5hG/z+f
l5zzecU8MFIa/tkph+Ig4stMO8vgnFcO57wYTEWJ/Z9HPF9RVit3yT27/Zpz
fgzO+eUyBVf65PEEMyhVh9QC43NyOef5mnOeeUzKpjTZlZGvKZdt7g1Fd+Rx
zjeXc775TPqut0FKz3IpMn6DBo94Cjjnncc57wJm2sGZsX05eZQ64uHeVyzk
nH8+5/wLmZ9PrjM7ycynuJQ8WXXXqIjTo4DTo4gpf39ypy27gCLXMe0ZdL2Y
ueLZTvNxo0JOnxKmYL6br/vHQkrTlNFXv4QS5lxdUQqvZRGnVylzpPsfm7gd
irvYcx3vulJmz2/KmJh9Macfk9nK67siZryY8mAFr0mJK5NZLcnSIF0v4fRk
MgsUFp7NXFBK+SGvsqhIqIyZqXEwQDWglNO3jDj/f1csFjIpFFXzgvz4MmZA
eFdnkh6T07uMyXvZU2EwhEl5uO+2ba5qOdP7qIzLlmYmp385c47MZNHFyig/
DfKkGTXlTFdBS9HC42WceahgTg4ssOR6XEbZa9HX9NKsgun85ulzancZZz4q
mL8S9s0GyZZTHtmL+Gb9rmBe8u492HSunDMvlcyP7zrNxFLKKb/ctVSf+1Vy
nl/lnPmpZLL7pX2jlSoo+2/bfktfyeLMUwVnnljM0mmLFDlGBSUqMjIyNZPF
ma8KznyxmC+XJLAzdldSRpLfHErWfsOZt0rOvL1hJsn0jW4vr6QceD02l9j6
hjN/LM78VTH/ie00L9FlUaIr12Y9vVDFmUcWZx6rmCuk6kUONrIoo29pVnFz
VZz5fMOZz2rmNpJF1TvjNxTdL25isfeqOfP6hjOv1Uwaefy6eecbSuxw8pvH
pBrO/FZx5reGaaMasOW7VRVlfK7FJTK/hjPPVZx5rmWayow5OH+vougt4VaM
oNUybXX5jV5vrubMdy3T02nljhmHakrcKuWuB19qmb1JLm81cqo5817HFFN2
I3lNVlMmN56+G0avY1LzrruU76rhzH8dk67tUcfrUUOhqQVqhy6uZybVekrr
MGs4z4d6ZquRl1MgTy0lgfp6LCSmnsnX5V1Zd6CW8/yoZ/JyzOaYfujoJ1g8
WO8H3J8vPQObHapeGEL4+MYhsXrCSQIHSHD1w0JleKimYi+8iy9ID1YN1LaA
Uy+fsIY9dEs94FU98l4wa6HGY/j20YkoWKiqIA+eLalgwMb+O9/DduSwJjgG
959w92OLQbiPd/vyO4T1BZT52YTJldlKMNNlbi1M91U+DG/5VrcbLt6beQGO
N44ygfm4FW/BIpU2TjCtLCUR9t2qFgyHe8mXw+NxfMlwl1biJ9hauKUMJs3L
zsHvPZ52wnY4b8IHfjpOwQwPqZ1wrqmWSAPhuT2PjeGNNUJkmDq74jIcqdap
A4cUPgyFBZ6lWcGtbmLP4etirh6wlHpYHfzTR+cRbD0t/B02+y2eA2fmhfCH
Emaf6WXDE9cE5WDNhpcDsAbmg/CLPd48jYT9JvnPwGvT9aVhNuOmO3xvpfQu
WJzOHQVzB/w0gs22e+XClycL7OGksbkWuPdcYCA89PL6KHzs3fFEWNV5Wvge
YZa2fCnsoXKNDO/IGm+HWSPjenCydMU4LIR5Jrwi5J5wE/o7jPjBgX/PKMAx
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
mKXp0wM/1/niBv//PzMZqGf+DzTKjmE=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxF3Hs40///x3EJJS0SSSKSlFBCScnkkNSSipKURCXH1CqFlBaJKDmk5pBj
ac5zDEPLWaQlQlErkaQQaR+/9+N77bp+/dN1u9T2fr3uz733fm/XRcnRc5+z
oICAwB4hAQH8Pa8j2ctgXpGhAP+PUpHplk1tDuSqhiTTwquOrHmBEZ+02rz4
9mbdUPNfU7fZh7wix/v03corrP8GmJvWtQXwf36dVfb82eHLwjTyWQPikZcH
sS5FJPuxN9/i//vbLB2nuEQJjzCyy91h38p1Eayph3V9Gm0R/P9/j9UhbHJu
/9A9sqyQzQLGq/sspmelkI9wFP/xYlgr9p8sjl8eQ66/UJEQ5/mAtfWWpNuL
zQ/4j/+QdbCyYvng/ofky99WaQWLx7POjp9pF/eg858vkRW6ViZINziBLJ21
o6/0YBKrPec4XaMtkf/8j1kfGzddJPcmkd2/Tj/JTU9mDX8hWe0fesw/nhTW
31mf1U5OJpPZijneGX9SWXPkS4njS+UfXzpLSi+i97ZkGln+sNOWhB0ZLKX/
HW86/3ifsDQ9tt7LVc8gUyOXCEXHPOUf/xP+8WeyLFIGTDvMnpJbmpqaQr8+
468nk7+eLJZT1/2pfw7PyKtErkUFbsrmr4/BX18Oy1/CiLHiSha5MmHpuvKa
HNbt/603m7/eXNbu5AvrUyxyyK7Pz0cWD+Xy15/DX38ey7Zi97yig7lkmc6W
P/mL8vn7kcvfj3zWyc4Vn+ud8sg146uPZG8p4O9PHn9/CljnxybLu8/mkz0l
A1lPTzD5+5XP3y8m65r4q5gR/wKy3LqelWm3C/n7x+TvXxHrjlrqWcFQJrl2
16ZbSflF/P0s5O9nMeuh6ZVd0g8KyedO3x1+9L6Yv79F/P0tYWU4WKmsTisi
L6cNWcXOLuXvdzF/v0tZzCuqM/r5xeRGYrmRa8v4+1/C3/8yVk007x2FVUK+
VJGwNHz/c36PUn6P56zW3PY8h+ZS8sr3U/4hV8r5fcr4fSpYPU1PQs91lZFb
/+z/REuu4Pd6zu9VyRr8evXkza/Pyb5SWTuuNVby+5Xz+7FYfwRtyA/Gysn3
lwjZVPiw+D0r+D1ZLCEF9aXPZlWSB1dpzX1OquL3reT3rWI5+uifPTaHRSbr
Hi0tSapiudscWJViweL3rmKl/iX1DoSxyNHGt92KdKtZPfG1URptLH7/apa0
8TWKt1QV+btVsQKzvpq156u+cNHBKv481LBu3h57Ph1XRd7uwG3Ns69hVazL
Ok/ureLPRw1rov2UOk2pmhzrIRmYM1rD0rykRMxLNX9eXrDWOMTGLcioJv/w
NdTNor3gz081f35esHLcA+fEataQTW67fc2UZbPO/W+eavjzxGZtuuJxXolZ
Q4578ODBEwabP181/Plis8qDbfuebnlB/pn+cle60Uv+vL3gz9tLlkm0yR6d
6hdks8LfvBTOS/78sfnzV8tqSF5XVm7OJj96oZjz2KWWP49s/jzWsqxyl67e
8YpN/vWa4pjIq+XP50v+fNaxOiqEo1qtX5LN+y5Lxd+t48/rS/681rGONv2c
dbj7JTl+JP3lQ5V6/vzW8ue3nvW5873HJ8da8hjvzaUHJfX8ea7lz3MDq+y7
SYHbt1qyxXzBtTGUBtb5VwLGuep1/PluYKnnPW8b96wjJy5d13O/r4G1kxkk
o59fx5/3RpamSrCo30QdeWL1kfB71EbWoqjg6crN9fz5b2RNCt0aFvSrJ1M2
3TKKEG1i9Zy/9cGUVc9/PTSxqj/fague3UBONi38HUZvYqUdCKlpNGvgvz7+
3818UwVte2HpUItB2CRHdQq231U3J4zwoqMTi5oIp84zU4H7xdia8HB9zXY4
tyRyJ6x7y8gBvnbK0Qn2M6/0g/dKa12F2XMMHsLLa2YewKTa0mL4h1dLAWx9
U+8tXK5AfwXTcfyEQ5tcB2GukM7CO4SPXNYXbias8SJXE167WlQRpgau2w3/
5XTow+XbGS5wfWCaNSwsuDYIjtWiesGUqowU+NQH49twVMCqanhTmGQa3GOY
8gEW2dLHglVmlHgwZyD7PeyO/SacEu0/ATP95PXgcyaUhS2EeVsfWsPbf8mp
w6b/lpyDJRMHzeCwsugIuI9SchzmXJbKgnOmg3xhef17jfDVJzYxsPOU+Dd4
z0GVPJhRHCYSQVhBeKwJHr8othIezqv+ChtgPgg/d7gr+IowbULkGHx7gYM8
3My84Qsffq6pB0tTBePgNWd4+2B7nYAieFKmyR1O/c17A9ex44Lh4bwrv+CY
cy7JsK73lPhdwieV9CpgP62LGrDuK5FOmP1zzAIW8uP8hkmYZ8Jv1FIWtKK/
508anPzOew1M1/RIhr1vGpnA3OEhFmykI3EM1mC49MIS/b0+MNXt6zT8IZxx
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
l+H//TKTgSbW/wEl65Vu
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1: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
D5n1mvq4PzeDn/uinPpCRzdDfXHGVwJ2PTHfNcNO/+8D7HpShjaDO3DqrwLy
y6gZmdmP/xaQX72aYXJh8n7GBt1dTeAsehhMfUPUTYgytn5EfVbyJsjf3sum
vpmyJtieGyunPmdpE3z+vN3vCfklaYK43+ixjO29M5tgrP/3DDZ/TtwEl9Mj
Nzwhv5KaEDYvzPcJ+SVogqzPt+HUl8ZvgvWbK4nUJ41qgtfJYQXUpwxrQpJj
cAvNG15qgqHh4KFP2bzZ+SY4vbow+Sn5dbIJIX7Gzk/JryNNkDqc3faU/NrX
BMsefc8wFnlsb4Jn8slo6ju6qQkC315img9a3QTNrONlT8kv1yY4dnd3PyW/
FjXBHz7mz8ivP5og8emcwdig4rcmmNsd+IuxfdvUJrh3tXgx9jWa2AR+4t6g
Z+SXVRPUB1Wx1Gczsgl2M3ZmMbaYP7wJ3HZ5HeO1nAFNyHy2tW8C+dWnCSbe
NWMSyK9uFTjT/pmTQH61qhDVUrEugfxqVEEuWH80gfyqUsHWq+Q6zed9VsHH
ZvVzmq/9qIK4qfAjzXdnq2D8+G818ZBUFVx2fxz8nPwSqRA22WUSY97MZyrI
FLlOjEucY1Wwjl28lbHFxjsqeO3I+vc5+cVTIWnCwtvPya8rKhg2pL1kLOIF
qODEn1tKffH/qhCyTaylvjRfFaTjf/8ukV2P1FsFyzrR/xLJr50qeN77bUUi
+bVFBcGWF3sTya91KmjGzghkbD/hbxUcq58+pD6HJSr4R9tmMua5zldBsulx
LfV5zFbBXP/vh+TX/1Rwl8VYviC/JqvAj/z5d8a+0eNUUG+4t5axKHGUCnY/
jj3ygvwyVYFbFnWN+ioGqZAZ8WMC9bX1VcFkXUQe9Rn10D1/i5HN1GfRoUTU
5+uDkti8rUoJebjZRMb282uVsF19ZWES+VWm1Nk9zIMxb9cnJcRFQacYi7i5
ShhfHxRFfVfTlXBZdSGF+mJSlAgzMy6hvpTnSsgKzmioL++REtahX38L8uue
El5/nZwO8uumEknDe7kyth9yTQnDj8f2MPa1ClLC6VJ3AMivs0qEuPjEUJ+z
nxLSoZ0Z1LfxkBKWH7xrGK/13qOEZ1BLbyGbP7dVCcHSvaOF5NcGJTSDVLOF
5NcqJRzf7VgjJL+WKeEfID8sJL/+VELivPUq9Sl/V8J8QM1Tmjf8VQn3rE0S
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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJwt3Ak0lH8bxnHZKpKSpRRSRkVDipTCqAapSRGVIpT+KntNIWSJECWRKCKE
UKTJzlgm61iKJEslpCSyRuR9rvdM53Q6n5Yx8/vec88z45xkrR2NbHi4uLgO
8XJxLSB+5SZ+CrQlOmkK5GpzcX7MbWl0ozZbUspqE6ivr1sz9+wwmD7U7MSx
C5P/Q4ba351ulHVZLrZ3S68x+woX5hs3e3P+3JdZJbizLY3Pn+KsSdyyzE1m
2skLE/M7gzh//xbzVvrDFaYOoZTzd4c8SpXDmLme/StNm8M4/z6cmUqa3+Az
GE5ZxWu6NLMxghnNllDP4Ivk3F4Uc01qGbteJopSc6XkcYxjNPPbWI310M5o
zu0/ZL7UfjsldPQhxf27vEqgcBzT49bHECWHWM7Xi2fqtfXIGgY+pog91/tS
cCyBGXSX3qHeHM/5+k+YDrnTJP3uBIr9t79p2SmJzKNdnk7HB59w7k8ScycP
d6Htn0QKa22WS+pUMlN6UwCfG18y5/6lMOVlxe1vizylSJmd3fVYL5VppqL1
nvh9zv1NY97ROaedvzmVQr+3kvd+1DMm68jt1IadaZz7n86csXq9vFf3GaWh
vr4+5FsGU9ml233aOJ3zeJ4zz/ry9y61yqDI8/tE+qm/YEaHK9HkHDI5jy+L
2fDE9PXOa88ppY8llYsrspg8OV4yhoEvOI83m3nfa9vrFwZZlItFl+/lDWZz
Hn8W5/G/ZF5LyuViHsumSLQ3TOWsyOGcRzbnPHKYVrW7DjSdfUmpmNh46sWu
V0zj/5/PS875vGLqjpRGfnbOoTiK+DGfnWFwziuHc14MpqL4vs8jXq8oq5W7
5J7ees05Pwbn/HKZgqt883hCGJSqA+pBCTm5nPN8zTnPPCZl0zPZVdGvKZds
7w496sjjnG8u53zzmfSdb4OVnuZSZPwHjzzgKeCcdx7nvAuYz/bPjO3NyaPU
EQ/3nmIh5/zzOedfyPx8Yp35CWY+xbXkseQd4yJOjwJOjyKm/L3JHXbsAopc
x7RX8LVi5sqnOyzGjQs5fUqYgvnufh4fCylNU8Zf/RNLmHN1Ram8VkWcXqXM
ke5/bOJ2KB6iz/V86kqZPb8pY6IOxZx+TGYrr9/K2PFiSsRKXtMSNyazWoKl
SbpWwunJZBYoLDyTuaCU8kNeZVGRUBkzU3N/oFpgKadvGXH+/y5bLmRSKGoW
BfkJZczAyK7OZAMmp3cZk/eSl8JgKJNyf+8tu1y1cqbPYRnXLc1MTv9y5hyZ
yaKLllF+HsmTZtSUM90ErVYUHivjzEMFc3JggRXXwzLKHsu+ppfmFUyXN0+e
U7vLOPNRwfyVuHc2WLac8sBBxC/rdwXzok/v/qaz5Zx5qWR+fNdpLppaTvnl
oa323L+S8/wq58xPJZPdL+33SKmCsu+W3bf0VSzOPFVw5onFLJ22TJVjVFBi
oqOj0zJZnPmq4MwXi/lySSI7Y1clZSTlzYEUnTeceavkzNsbZrJM36hqeSVF
9/XYXFLrG878sTjzV8X8J7rDokSfRXlUuTbryfkqzjyyOPNYxVwpVS+yv5FF
GX1Ls46fq+LM5xvOfFYzt5Esq96ZvKHof3EXjbtbzZnXN5x5rWbSyOPXLDrf
UOKGU948JNVw5reKM781TFu1wC3fraso43MtrtH5NZx5ruLMcy3TTGbM0eV7
FcVgCbdiFK2WaafPb/x6czVnvmuZXs6rts84VlPiJZW7Ir7UMnuTXd9q5lRz
5r2OKarsTvKerKZMbjx1J5xex6TmXXMt31nDmf86Jl3Hs47Xs4ZCUw/SCVtc
z0yu9ZLWY9Zwng/1zFZjb+cgnlpKIvX1WGhsPZOvy6eyTreW8/yoZ/JyzOaY
fuDwJ1gsxOAH3J8vPQObH6heGEr42MYh0XrCyQK6JLj6fqEyPFRTsQfeyRds
AKsF6VjCaZeO28Ce+qWesGSPvDfMWqj5EL51eCIGFqoqyINnSyoYsEnAjvew
PTm8CY7F/Sfc/dByEO7jVV1+m7ChgDI/mzC5MlsJZrrOrYXpfsoH4S3f6nbB
xXsyz8MJJjGmMB+34k1YpNLWGaaVpSbBflvVQ+BIb/lyeDyeLwXu0k76BNsI
t5TBpHnZOfi955NO2B7nTVj3p9MUzPCU2gHnmmmLNBCe2/3QBN5YI0SGqbMr
L8HR6p16cGjh/TBY4Okza7jVXfQ5fE3UzROW0givg3/66j2AbaaFv8Pmv8Vy
4My8UP4wwuzTvWx44qqgHKzV8HIA1sR8EH6x24enkbD/JP9peG26oTTMZtzw
gO+ukt4Ji9G5Y2DuwJ/GsLmqdy58abLAAU4em2uBe88GBcFDL6+NwkffHUuC
1Vymhe8SZunIl8KeKlfJ8Pas8XaYNTJuAKdIV4zDQphnwitD7wo3ob/jiD8c
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
FuzaJmIJs7R8e+Dnel/c4f//ZyYD9cz/AcaajmM=
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxF3AswVP//x3EJJW0kkkQkKaGEkpKVS1KbVJSkJJJcktpKIaWNRJRcUuuS
a2nd1zUs2txFbCKUakskKUTar/95/WZn/s2Y5jFqnc/n+d6z5+zOUHI8s895
toCAwB4hAYFZxN+CxNe8zmQvg3lFhgL8P0pFpls2tTmQqxqSTAuvOrLmBUZ8
0mrz4tubdUPNf03dZh/yihzvU3crr7D+G2BuWtcWwP/+dVbZ82eHLwvTyGcN
iEdeHsS6FJHsx958i//vb7N0nOISJTzDyK53h30r10Wwph7W9Wu0RfD//z1W
p7DJuf1D98iyQjYLGK/us5hnKoV8hKP4jxfDWrH/ZHH88hhy/YWKhLgzD1hb
b0m6v9j8gP/4D1kHKyuWD+5/SL78bZVWsHg86+z46XZxTzr/5yWyQtfKBOkG
J5Cls3b0lx5MYrXnHKdrtCXyf/5j1ofGTRfJfUlkj6/TT3LTk1nDX0hW+4ce
848nhfV31me1k5PJZLZijnfGn1TWHPlS4vhS+ceXzpLSi+i7LZlGlj/stCVh
RwZL6X/Hm84/3icsTc+t93LVM8jUyCVC0TFP+cf/hH/8mSyLlAHTTrOn5Jam
pqbQr8/468nkryeL5dR9f+qfwzPyKpFrUYGbsvnrY/DXl8PylzBirLiSRa5M
WLquvCaHdft/683mrzeXtTv5wvoUixyy2/PzkcVDufz15/DXn8eyrdg9r+hg
Llmmq+VP/qJ8/n7k8vcjn3Wya8Xneqc8cs346iPZWwr4+5PH358C1vmxyfKe
s/nkM5KBrKcnmPz9yufvF5N1TfxVzIh/AVluXe/KtNuF/P1j8veviHVHLfWs
YCiTXLtr062k/CL+fhby97OY9dD0yi7pB4Xkc6fuDj96V8zf3yL+/pawMhys
VFanFZGX04asYmeX8ve7mL/fpSzmFdUZ/fxiciOx3Mi1Zfz9L+HvfxmrJpr3
lsIqIV+qSFgavv85v0cpv8dzVmtue55Dcyl55bsp/5Ar5fw+Zfw+Fazepieh
57rLyK1/9n+iJVfwez3n96pkDX69evLm1+dkX6msHdcaK/n9yvn9WKw/gjbk
B2Pl5PtLhGwqfFj8nhX8niyWkIL60mezKsmDq7TmPidV8ftW8vtWsRx99M8e
m8Mik3WPlpYkVbE8bA6sSrFg8XtXsVL/kvoGwljkaOPb7kW61aze+NoojTYW
v381S9r4GsVbqor83apYgVlfzdrzVV+46GAVfx5qWDdvjz2fjqsib3fgtubZ
17Aq1mWdJ/dV8eejhjXR7qJOU6omx3pKBuaM1rA0LykR81LNn5cXrDUOsXEL
MqrJP3wNdbNoL/jzU82fnxesHI/AObGaNWST2+5fM2XZrHP/m6ca/jyxWZuu
eJ5XYtaQ4x48ePCEwebPVw1/vtis8mDb/qdbXpB/pr/clW70kj9vL/jz9pJl
Em2yR6f6Bdms8DcvhfOSP39s/vzVshqS15WVm7PJj14o5jx2reXPI5s/j7Us
q9ylq3e8YpN/vaY4JvJq+fP5kj+fdazOCuGoVuuXZPP+y1Lxd+v48/qSP691
rKNNP2cd7nlJjh9Jf/lQpZ4/v7X8+a1nfe565/nJsZY8xuu49KCknj/Ptfx5
bmCVfTcpcP9WS7aYL7g2htLAOv9KwDhXvY4/3w0s9bznbeNn6siJS9f13u9v
YO1kBsno59fx572RpakSLOo3UUeeWH0k/B61kbUoKni6cnM9f/4bWZNCt4YF
/erJlE23jCJEm1i952+9N2XV858PTazqz7fagmc3kJNNC3+H0ZtYaQdCahrN
GvjPj/93M99UQds+WDrUYhA2yVGdgu131c0JI7zo6MSiJsKp88xU4I9ibE14
uL5mO5xbErkT1r1l5ABfc3F0gv3MK/3gvdJaV2H2HIOH8PKamQcwqba0GP7h
1VIAW9/UewOXK9BfwXQcP+HQJrdBmCuks/AO4SOX9YWbCWu8yNWE164WVYSp
get2w385nfpw+XaGK1wfmGYNCwuuDYJjtaheMKUqIwV2eW98G44KWFUNbwqT
TIN7DVPewyJb+lmwyowSD+YMZL+DPbDfhFOi/Sdgpp+8HnzOhLKwhTBv60Nr
ePsvOXXY9N+Sc7Bk4qAZHFYWHQH3U0qOw5zLUllwznSQLyyvf68RvvrEJgZ2
nhL/Bu85qJIHM4rDRCIIKwiPNcHjF8VWwsN51V9hA8wH4ecOdwVfEaZNiByD
by9wkIebmTd84cPPNfVgaapgHLzmNG8fbK8TUARPyjR5wKm/eR1wHTsuGB7O
u/ILjjnnmgzrek+J3yV8UkmvAvbTuqgB674S6YLZP8csYCE/zm+YhHkm3KGW
sqAV/c/8pMHJb73XwHRNz2TY+6aRCcwdHmLBRjoSx2ANhmsfLPGxzwemun+d
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
CGft6L8M/++XmQw0sf4Pt7uVcA==
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxtmXtczPkf71vEopZFKNvKruSyuW3hx7bSal1WctmyS+OeJXKPXCIyrEuk
C0KZKLlNigZJr5li6KKLmJSadJvuUzNT032mM3P283b+OfvPPp6P1+f9mu/3
/X02zWTU+h3L3HsaGBgs7mVg8JXu/z0M/n//PWsa5OMmTE6PcHxydL3IwGCG
IMHEh/FuHSe7Djt5WvhD7O7NF4WHRAa+e2ru2Aey/LguP2n1Oy4Ld9n1+3hr
5CldfsW9fFYYO39WZCCSLBW5RQi3XJQfFk4K0J3/rDg/IpLNB+rOV1/gfLot
NO3l+g0/O1iXqyb+FHqX9V3Wsc89fr9oYdo+3Li6I1R33kWw6lAk67+mY2tR
3/oI4cGaMVP+HRCuO9//0o6EcPZ6PB0n3s+4Gio0iZlX+nxFhI63JVsdDmav
f1N/vzF9Es8LPas678ZF39Lx9QKhzwl2PZE6buur8N0rFFvE7r7TGqVjg5Lj
xwrw3/VF6zhg/qS9e4XmKzfOujHvjo4rvNfsP8Gu966OTzhFx58XegUN73Xp
8j0dD7rY6h3Mrv++jtceunY5VJj19u3bc1UPdBzrPvtJOLufGP3r3dlVGyEc
0/tYiN/0hzoeG/byQCS7v1gdLwk06RstFN4wm5T0Us/ep/65cpfdb5yOg58c
6B8t3Ppib9Czujh2/7T/Rzqe+1ai29+wgqzWx4Mfs32Es33ouf7lhuuhwpfq
sW4PZ8Xr+IpuP8FsP3oOKJ6O88Idg/xE9zYI2L5OsH3pmeex5NRe4YhJ0tG3
zz5h+6th+3uq45yqLM+9wjd/TD8d8fgp2+cJts9n+vs13x93Xrhn80X59cJn
bL/BbL8JOrbZ0PNSqHAkt27plZ7P2b7D2b71XHstqiZCmKG73aAJiWz/5I+e
Z55c8HW00Bs3zC4sf8Gex132PPT8IMXRKFo4urD9yJlDSTo+ntmk299/zwc6
dsuPkEcIc1qXl3Nv6Xnj6xsvwtnzEup4eFFnWKjw8JCYeccy9PxKueJoMHt+
Ih0rvtmcfF4YPLyXKw7oeclMixMn2PPU89qMWP+9wtoxU75+YZys35/FD6Oa
8N/z1bP99nm/+ArtbVc/T4jQc6wyaPNZ9rz13JbityFQeOm3s9ue2qbo2MI/
adBl9vz1bL+iNfmasH7ps+8FaXp+EHBlBo/58FLHIi/bgJtCh7WynEccPees
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
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.04999673913061997, 13454.41}, {-14800., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.04999673913061997, 13454.41}, {-14800., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.6827130023235683`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd3Hs8k///x3EJpYjkWBYVpaRURCErRIQih0gqoXIqIhGKUEIiRMghRE0O
Tahp1HJWZEWZUq2IFTJRVt/r+fv469c/bvcb2fV+P167dl3brZYd8bFy5efj
47MQ4OPD1///J/WELoumWaFf15xjVBl2hH5zfOzX1LmnM/alD1cYz5JybtNf
Xup77NqTYHrmFgvBG9mvZr4fTjdMm7ycf61b/5TevDd5CtF0zmTugopw1szP
X6Gb3SvY9WFLv/7xa5xzT9Yn0BV6/8x3L/808/cT6WPz97Zz1nzRlxOwXUB5
cZ3+XKcg4XTewMzvS6V/Ep6u3rR4SL8poPZWuk8afeqZfcZYAmfm99+kz6E7
POmePaIfNLhywyWxLPo10mV1bf3RmcfLpi8JfpiTGjSmL1Vi3F9jl0Mv6GZL
/KL+nHn8XLr6ZsmLtqPj+l5f/xSVFebRa5J2cKlrJ2aO5zbdcPSkm9SxX/oM
xVLfO7/y6S8sbr05nTc5c3yF9P332ky6+qb0SQ5HdW4Z35k53j8zx1tE93Zf
o5pkM63vnyQrkJJaPHP8vJnjv0uPWB4tatX6V7+9tbU19uu9mfXwkf9bTwm9
9fvomUs5fOSVQheSI7Tuz6xvFvm/9ZXSbXcrDn7tnUV+cmvxetrT0pn18pP/
W28Z/UORhYOx7Gyyx+PTSVVDZTPrn03+b/3ldI85IS0F1gJkmZ72XxWLKmb2
Q4D8335U0LlH7+oKXRUkP+WqHLiv82Bmf4TI/+3PA3pYfQ/FtVmI7CMRQS92
oc7s1xzyf/tFpc9TnKvAEJxLXrKepVRwpXJm/+aS/9u/h3SWhUKynL4wucFM
63JOxUP6VIKyCO2tMPm//ayiS79SjTgUMI/sd+waJ+NdFX2j1MbfsyXmk//b
32q6hZ32qULKfLJC5NDeG7Nr6B5p2wZMd4mQ/9vvGnr0O0Pn759FyC3EcpNU
H9Fvk8xeXzsvSv5v/x/R65z3mmvKLyAH1t5afNX6MZ2VY/es++EC8n89HtM3
5b3+HGUjRlZ6NxUaE0yjT3V4ZW7+KTbTp5bufJ5f1c9EnPzyl/WnyLxaer2M
xRyzVPGZXk/oSvfTPi3/Ik4+J1lifKHlCT16J/vJb42FM/3o9EGWekZnxELy
dVkB29qzdPpu/3OBxZ0LZ3rS6fdFGveFL5Mgf1u5Ye5j0Tr6wtuLNjiclJjp
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
oJX+P/KrbW4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxF3Hk4VP/fx3GpIULZSiLJkmiSQkpTk8gWlZqkkNK0iCRfkpokSwsTCYXI
ElKImCxZjmWyJ4WUpGRJmpIsSVP3ef0u13X7x/WwzJzzeb7nzDkzF8qH3G2Y
ggICAtazBATwWfR1yimaaMEmgekP5QITw7UtTvSK+iSTJ36HCNGA8E86Laem
fZoI1LywvHbdWfrSnNPHbpSfI/5+5qzVbrk4/f1LxNOSzH2+lCC6B428ZaXL
hE94Cou77ur0z4cQuodjE+edZNOP3+CdL9cOJybjaj9SW8Knfz+CeE0x9tw1
FEFfOGuPRFZzJMFxL591lhI1fXu3CKdtjmV3lW7R67zL7sa6xxAjFlo+z9bF
TN9+HHHJ/JcOb1cc3XdQXefK3ARCyow7JH0yfvr+EomUrRGp66/cpctmm34s
tk0iYpMfPVrVkjh9/8lEj3K0mPH7JLrbwFRGbnoKoZl0/rjtUPL09twjTi9x
fubyK4XOXZJz+v5EKlF811zlAiV1evvSiX9XzfjhUml0xX2HDe+a3ifEUxfj
69Pbm0HIE6M5T1bcp3vdlJsVfesBodFZf61uXcb09j8k9MYTD7/b+oD+vLGx
MXQgkzCSPLPx+66H0/uTTexYYSUneDCTri7kHxWw9hFhb6oyInMya3r/cgiX
Q5MNy85l08vvymuXVuUQZ1jN5P4+mt7fXMKo8WV5mkUO/UTJfzcLh3KJujel
K1a15Ezv/2Ni+8D9mCLbXPqCN88n8qTziPbRm0Jb3udOr0ceYS/o59l4+DG9
akzD/pFhPvFprssHxtDj6fXJJ1wUGVbdHnl0d6kA4oEzhxjWpBcf+5U3vV4c
4oyB1rKRC/n0RdpdqmkhTwi+yfzIcxTO9PoVEC5PnIwooRx6jeXaq0l5BYTE
+Kvh61JPptezkHisZ3pXLuYJ3fPYDd6dzkJij1exVbJSwfT6FhG/86l/tNIK
6EpBQztvzywmEkYTH3BWFE6vdzFhpCtjtymvkN5A7u5NrafEZ8/LwnXriqbX
/ykRmvebY0MU0X3K7sqH7SohVv10I3sUT/coIUpmhrYwm4rpqp2TF66dKyW2
/K/P0+k+ZUTd4kMPfd4+pb+Y2PUpKKVsulfJdK9yon2dQVDIQAn9vEy2qX9D
OeHwv36l0/0I4tNuiQMJo6X0SLlZe8rOEtM9y6Z7EsSwe69B7oxy+hd1ndkl
4hXTfcun+1YQe5OjBQ4JE3S6nmNxUVIFccgvh5NmQUz3riBiVVzchtgEPXpL
iGuBXiXxqkZFbVULMd2/kpjj2vXuP5kK+tedhYs5dZXElnm3IotsK6bnoYo4
l79j29/YCrqRU9+Lxw5VRP5e0Vlb3ldMz0cV8fVP1dPLypX02yelAnJ+VBGq
SSxyXiqn56WaULo6ulzyfiX92/lNetlB1dPzUzk9P9VEWnR3dOzKKrpxiOvA
w4Vc4vj/5qlqep64BPVe/UxVThU9NiYmJiOLOz1fVdPzxSXycjmnsgyr6cPp
zyzTNz+bnrfq6Xl7RqwvT+zSr6ymb33yk3+v7dn0/HGn56+GIBpDLAgzLv1O
9ZKc5OM1ROCuGTMoodzpeawhTN96F5g3c+kjL60OJfJrCNGDX92uSz2bns9a
omngoOorxjO62UdfmYQbtcSNk6/fLoh5Nj2vtcTusW037N89oyd8T38Wp1ZH
LDhfaZqkVDM9v3XEW0GDv32Hauij/FafmKI6IuFqVr5mWs30PNcTUdr82+6D
NXQLMUGtW1b1xBJ3Nit/Re30fNcTD7MVD02619IT5bW7Ij/WE0UjN77R8mqn
572BSDgU8eHieC19XMM+LMKrgQh8GfGyal3d9Pw3EMeNblYLseroVmuvbg4X
aSSsH998Yk7UTT8eGonVSyPvh86sp6eYPPnJjm8kFkRExjZvrZ9+fPy/m6bd
v8mZA8uGWnyBOTydF7CDZa0wm3RgnMAQnCq6VQ3eZd5MeUGaV1dlBC+diF8C
613d7ASP3HM1hFlm5Sy4wsZwD8wVpsXB4QKiHrB4TXEhfCC7IwRmBBu0wyvt
09PgeGw/ab6IdwXcN0tX8jrppgLjdzC1OnclfIcpPQF7BWhvg09I90i2kC41
yjoOr6/IWQFTBLUuwyLufqawVcX9e3CHgvUhOOqieiV8v16BBXdtutcNn/EZ
ugWr/VPmw1vVix/Dblhv0rKtV5pgDkvRAO71t/0M8zfEMeB8bfWZL0mb/JHz
hAO6RhVh9tPocNgmpMoAbvOVyYaV10XsghXXRzTAw/1OJ2Hm5NxBuDxS+yqc
VcgWCid93ehvCjx2Zo4q7DjcWAbTMB+kqQlxb+CgcaED8B9Ll1G4iRN4Hm6Y
NJj7Cv29BGPh2HRhTdhB92IB7MJoN4ZTf/Jb4XUzUw/AvMfnRuDZuZ6+sN7p
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
50bi/wB/hX+3
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxF3Hs4k//jx3GJlFqUQ5GlZFJCyumjVpNDiERNyilFDlkpUUKKlpIVOaUc
QouIiCE1bjSHnEqUEqVIp5WIEvLd63e5rl//dD2uiu1+vr3cm+tq+f4jtu7C
QkJC20WEhPC7+MtMX6p46Wah6V9xEpHhT1v20aqepJuUhO4ncs/ZGFe3+E77
GHF5Ro+pgm4gTangmGdMZRCht5mj/LDlzPSfhxHZIeMUT2Em7ShV8JEVIwi5
R4YrZXQvTv/9S8TFvxGq1V4smlcMP7hSM5oIURiIK22Jnv73V4mSDZEylz9d
pcmJ2M3Pa40jvu9VT3ATjp/+eInE23kDJzYqJNIaAirSrh9JIl5VvtwjrZs0
/fFvEG3H6jd8s75BO/VZReuCRCrRSHlAfuyVMv35bhKPO+9M3QhPo8nkb+0t
351OvDVpHnzQcnP682cQDmm8XnZXOo0xMH6nMCuT6PzDbYv5lDH9eG4Ru2xL
akJGMmm8ZQXHsn+ziae5+cVewuzpx5dFmPtWKtElbtPIe902pG3NJqLcs6Jp
ClnTj/cO0bz3yj+1Vdk0/9jFIgmJOYTEjhM+i3TvTD/+XMLGxOW1sFEOraWp
qSlq4C5x1WCr2Xfr3Onnk0+0a2qWvHK8S1OZdTY+XO8eIUNZpMzzypt+fgXE
bvmpmIKAfFplmrwmt6aAuCYxIHi+96afbyHBCBsoMTIroB16dDy27GshMT+k
i/GgpWD6+d8n8k+0KmvSC2mLXrX8LpIqIqyP1XTd6iqcvh5FxA+f0qvy++/T
akZUHe9tKCZiPHLNoz/dn74+xcS6/WlCs44U0Y4sDCdyDnCINsfY0qCRounr
xSH8dkcc/hlUTFui2a18+1IJIWUbRPEQ5kxfv1LizEINl+4LHFrdNr2L6UWl
hOPRdUk7JUqmr2cZof9U93lDfAnNzzOGn9xVRkhpbiDRFEqnr+8D4gdr89aS
jFKaIvOrzbWZ5UTjN6Oza1aVTV/vciJrm9nDjHtltEbB041Ve0icy7EcWaz7
YPr6PyT2zbHRvPLoAe1kRZr8lZ2PiI2edC9Ro/LpHo+IT573lgU1lNOUu8ZO
RwZxiYsHMl8OWj+c7lNBrHJOvHzwxUPa0987PzAzK4gn9pdM3jg+mu5VSXjv
DJ2w+fCIFiydv/VsYyUxd7tfUZ0Xd7ofQdw18/CmDnJpcYtF7CoCCcLKyGF5
UUDFdE+C4FOtO1UnK2hfVLRmPyJVEZf1ja6khldO960iVBSO1M4RJWg0Hefy
B+lVhEVdTKyxGTHdu4rY7uMdHHqJoCUYXfIp1akmdi4wci9vIab7VxO7S5Zs
H1lQRftmU7aU01BNODj80l1Lr5o+DzWEi1Cz4qFrVbQt+/qf3neqIdzY7Nm3
u6qmz0cN4Wlx+ue7pdW0a4cXhhf8rCEO/bB7vWR/9fR5eUyUn37LsWNX074H
b9bJZz4m5gbviYn5VD19fh4TDoHPfZrUamjGl3wGcuV4xN0AKzOxIzXT54lH
TPrVrdhyv4Z2PSkp6U4ej7A6ajgVPFIzfb54RMrhh69L9R/TBrNqt2UZ1hLf
D+mUDAU9nj5vtcQmr3sx6pWPaaYlw5O3OmqJywdXMTyFedPnr47oOZBplmnC
oyU/XlaQ4VVHaLqSlXsu8KbPYx0R6pw4tbiJRxtqs9p/c7KOaHVY0LVTonb6
fNYTinsulVy2raWZ9Z6STo2pJ3ztRK82xNdOn9d6ompnKEPkVS0t9UdW7Q1K
A7HAZsxss0Ld9PltIFy3+ymfcqmj/ZpsP5n0oIG4v40/VZxRN32enxA3+v6t
Huyvo1nME1ZLtHpCGN48Y6e2qn76fD8hPjkIhx30qafdlNfsjut9Qoylv1NI
v1c/fd4bif1Bv2ReDdXTRlUdr1z1bySads2WWKDbMH3+GwkdDYXZ5oENNCu9
i4bRc5qINLG1M84+apj+emgixHqN/pZNNdAyTUqGWSlNhG/57uHBLU+mvz7+
383T5s5Wmv9TYJkoiy+w+O5vqrDTtnoxlsC72SVGMFvclALfGj7jDPMbarbA
Pw23BcI6Fw33wZujZeLgELPKEDiq520+zBOj3oBfrclpgEl15WWwStDxPph+
Xv8F7NewaQpOweMXmFg0R35I4H4R7QWXBZ5/8Lk2rP64UAN2KE6xhv3DNS3h
bGFPb5i7Jc8LHtmxjgmLCqtFwFvSJtJgq6rsW/AVfm05HH9GpRru3hDTAXdv
vvUWXh3pMAhTppZPwic6KXOHBWbgegv8WGWQAnNCyPrwAv9yGjy58QYddqk5
5wCbTCz2g+8usA6AWQ8TouExF7kYuOOUdD5smv8hFyYbXG2EYyfyamH3MYnP
8DuLk71wXhlrVrTA6klbJuCRE3OV4aCBeYt+CUzF+RC4XuelFswcneUCy5xL
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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxl3Hs8k///x3GEUkRyLIuKUlIqopAVIkKRQySVUDkVkQhFKCERIuQQoiaH
JtQ0ajkrsqJMqVaUFTJRVt/r+fv479c/bvcb2fV+P167dl3brZYe9rV2m8XH
x2cpyMfHT3wV4Pv/f9KO67FoWpUG9S25xlXhh+k3xsd+TZ19MmM/+nClCb+0
S7vBsjK/o1cfh9CzNlsKXc95OfP9CLpR+uSlgqs9Bif1577OV4yhcybz5ldG
sGZ+/jLd/G7hzvebBwyOXeWcfbwuka7Y92eeR8XHmb+fRB+bt6eDs/qzgbyg
3XzK82v0Z7qFiafyB2d+Xxr9o8h0zcZF3wyaA+tuZvim06eeOmSOJXJmfv8N
+my64+OeWSMGwUMr1l8Uz6ZfJV3S0DEYnXm8HPrikAe5acFjBtKlJgO19rn0
wh625C/qz5nHz6NrbJK6YDc6buD95U9xeVE+vTZ5O5e6ZmLmeG7RjUZPuEsf
/WXAUCrzu/2rgP7c8ubrU/mTM8dXRN93t920u3/KgOR4RPemye2Z4/0zc7zF
dB+P1WrJttMGAclygqlpJTPHz5s5/jv0yGUxYtZtfw062tra4r7cnVkPH/m/
9ZTS276Pnr6Yy0deIXw+JVL73sz6+Mn/ra+MbrdLaehLHz/58c1F62hPymbW
K0D+b73l9PfFlo4mcrPIno9OJVd/K59Z/yzyf+uvoHvODm0ttBEky/Z2/Kpc
WDmzH4Lk//ajks49ckdP+IoQ+QlXdf893fsz+yNM/m9/7tPDG3opbi3CZF/J
SHqJK3Vmv2aT/9svKn2u0hxFhtAc8uJ1LOXCy1Uz+zeH/N/+PaCzLBVT5A1E
yI3m2pdyKx/QpxJVRGlvRMj/7Wc1XealWuTBwLlk/6NXOZlvq+kbpDf8niU5
j/zf/tbQLe11ThZR5pEVo77tuT6rlu6ZvnXQbKco+b/9rqXHvDVy+f5JlNxK
LDdZ7SH9Fsn81dVzYuT/9v8hvd5lj4WWwnxyUN3NRVdsHtFZufZPex7MJ//X
4xF9Y/6rT9G24mTlt1NhsSE0+lSnd9amn+IzferoLucE1PxNJcgvftl8jMqv
ozfIWs42T5OY6fWYrnwv/eOyzxLks1KlJudbH9NjdrAf/9ZcMNOPTh9iaWR2
RS4gX5MTtKs7Q6fvCjgbVNK1YKYnnX5PtGlvxFJJ8tcV6+c8EqunL7i1cL3j
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
G4EDWXD72ocr4epoFh2W/q5jDDNTez/CzpSqw/BYIVP4Evp7aZ6DxR90roI5
ahVZ8JrG9l2w1rd1D+Gdr5t94dASSg/s/oWRBDOOqU3Akb/qqbDYquKFLwjn
zK7rgW0HV6yHabK1f+CsoluW8JuVVUti0d99mRf8S7tiG6y+IucSLGVaegQO
YJOK4PUOJTEw7daNp7Dl0cISWOiI/AfYMyivHbZYnvYPvngxewRO+SBF6iRc
cD1j4WX0z03aAjfcTt0EqxyScIDfVSftg72VEgLg6aaEszD13bxkWL439ibM
y75UBm8aim6AjQ/M7oBtpiLYcDwp6ht8QiR8Thz69wmIdBGOlw9Rg0mZ51bA
JatOW8JuTn8N4cbN/idhyqKzh+BPO32vwdzeqTCY39HzAayffjoTXnLc4w0c
5cCtgXWDXXlwu6z/a9gh1kUpHv1fj4zDARlOhrBzqo/kS8JJJfbucIHt8Dr4
Xq3NJZgjddwCbmuxugtrdX85Dg+9MX8Ohya7XYSFv5mMwQzrjwXw8j+G0gno
L3noCUyeR9aBbTv738POi/Wc4KzE/X/hYDWdMJht9WZxN+E0Xc1cWF3cYTN8
31zjKRzQwbSDO53WfIFp8Tan4O+eqnOvoL9F51V43lllddhC1OoerBqntBtO
aW1rg40zFfxhVqzZV/jwXblUWMWsaTaTcPgjqRrYW2SHCpzZJtEHU5uebIdr
+kT/wbyYbQfhV8NzliWiv8njUPjntKAxHC+sfwOWEOM/CjMZtdWwOokXC5Oi
dF7BZupTFNjNqOon7KHPfQFTZmkueEX4gsXoT5jbUL4WznXmyFxF/4h1u+A6
76HNcNQ2yjH4bSh7P9zOpxYDT8YPhMPS9Nu3YOlsVh7sHL6iAd5Q2suAC7be
egdb1TEHYQ5vKQ/26uicl4T+tJuLXhO+1N++Fg49S9KBC78374EZujds4Sd/
GadgsT9y/vD7+Q1psG1taiLMW1JXC2edkSqFF62rZcFsnaRWWNugii8Z/SfF
h+C9VhXL4YAH8cI9hE+6lO6AaYHzlOEE35JjsNCmS9vgO+GFcbAFV9gFbrqS
dw9OuX/hLMy+md0Fs/wFMmCBsgwurLLx3ANYkZ4qdw39x3jdsN6LJF2YWh4y
Bu97n3AA5p2YEu8lHDgSex421jitDifzxdyC43+Mm8FlEpGNMLPU7yjcoRT+
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
95+ZDLbR/weEim1w
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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
/t8/M/ncSPwfEWR/uQ==
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 13454.44}, {-14800., 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 13454.44}, {-14800., 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.6827130025055785`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw13Hk8VdvDx3FzSSKzSlFI6SSFpMSpREqSSCJJSmVI7inJkCQNTikhQiQk
Q8ZM0TYc81QREkUkoSRjyLO+v3r6p/u+t46992ettdfS6yZzzGm/LQcbG9te
LjY2/Iwf140l6f/+kc1DS/VI1pQEvagqWueF1zHqt+fpl+9i/t/nqAuFjxZN
7JagL089Z3f31SVqZKbRVXJE/N9/v0I5a85r1ggXp+PnmGV+1Hd3LVWLHeL/
fv0t6vTL/wI9BsTop+4Our9SCqB6pxJ+Rt4X+/f771HHN380pLaI0SW5TBck
19+nOt1EUjq7Rf99Xgh1JG/XfE6mKL3yfOGjMKdQqm3S87Ssqui/z39ImW3K
rNBpF6G79ckrXxeIpJpc++RP+or8+3pR1P6cpb7XaSJ00RTdzryD0VT9uPHn
hCbhf1//MbVn4w16tYcw3YFcWFp8DIWvMyAn/O96nlA7X/ya4a8TorOkU889
HY+likcVLJTOC/27vniKPL68fUuF6FLmxzc/0n1KkduVOFe28N/1JlDk8s4H
Oi6kMwIluIJDnlHk4xozxRb+u/5EagP58a5QkF5XU1Pj35tE4V+PnxD8dz8p
FC094oeEgCBdnsc7yGfjc8r4c+zD/xwF/t1fKmVwTNAsu3AB/dWjRUoFJamU
LnmAvxcs+He/aRT9aE/DFit++hlyYTn9aRR53Eyv5/P/3X86RS5/V/EsH128
tW48QziDWtsuy8O9j+/f88igFCzuFOtGzaOXkPt+vjmTWk4C3Bzi/fd8Mqkl
5L5rtXnpTkI+1DObLEqMfI7A3bn/nlcWJUgC7e+cQ1+s1C4bd+sFRZ7a2SDl
Of+eXzZFPobW4s1DL9+98UZ0Rjb1p9G1b9Eb7n/PM4eaIDdsuZyb7mJ3dzC8
LYf6+cbgWNQ5rn/PN5fqN8pZ+rmYk77Mt9/oAWce1dOwvE1OmPPf886jyO2G
2Nlw0KvJ7QYq5lMtdePGiRns/55/PkU+TvA7JzvdlYzzO8YvKZKhZt0Btn89
XlI3QxyFevVmtWVx35cKKM+g7bfs+2a0//YppM6RrzN8Y1q7gYwr35hC6gTp
cmH1lPbfXq8o8zvFo9NVk9ruIim63tWvKANmiOOVMxPaf/tRFP2Wfe+c+ePa
9yW4TAsvUpTqDfpRZtKo9t+eFKXgJ9YqZDCi/U1eee5L/iJqCe5zcFj7b98i
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
/we28GkU
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw13Hk0lP/DxnEJISLZEqGQFEXIVxFCEoqQZMuWCkmRhGSrhGQnJHtC9p1u
sm9JyL6FZEtCiPrN9dTTP53XqZi535+Za2acE6/pDS0LcjIyMg0KMjL8Lk35
xrM6nUOe7N+vAsWxkXFtDvnKxpdKBfdNCXGvnXJbNnb+sz2R9U4jVjBpp/ye
LHurZ2/vESKbvdZPq///n3sQaQrF+teX2OVvytB+SuB+SAh6zBX5xbD/+/tP
iKTKvWyZSuzyV5/Nurw9FEjs2XTR4f0s279/H0TEygV8nA9lk99Jobst430I
scv9nSiTLNu/rxdORLxdeXpkglW+wbHiRdSNSILlj/CcdgDrv6//nAiSNVNz
lGSVd/4qIPqIIZZgcItICx9k+ff94gi/8hbqYh8WeZbMUyMlF14SNBvkV3pF
WP59/3jC57hUza8uZnmbL79eZackEJtdbPZy3Wf+d3sSCffS+Aey+5jla3iy
7FN/JhEba5+GjN/v+Hf7UghnaXrZB3d2yHPpmx97cSqV+HlXITqee8e/2/uK
uF18Z+1dHZO8QzA7RVh4GjG/kq43foPp3+1/TdhIjRZQsTPJtzY3N/t9SSem
7rCxCBLb/92fTOJKodqt01bb5QWoHoR6Hn1DjC0/+HCNcfu/+5dFXJYsPORX
xCj/9gXHofJ3WcSgw4x/hgnjv/ubTVzK551ppWaUv152O7hoOpvI+poRMnyZ
4d/9zyHSrNg19+Zsk2fraf2ZuyOXSPziQW9Jvu3f9cglYi1nG1K16OXfLQka
vDmWR0SMX/CZjqf7d33yiCDzKgWRH1vlbzB5Emlm+YTf54N/7E5u/Xe98gkf
0/DS3GBa+V2HBviSnxQQ7iObnJY/0/y7foWEk4m1+H/iNPJ1Z44+fplbSNgP
dc3f86L+dz2LCGsj+YyKji3yt6yezUb3FRGWA6+vbuLf8u/6FhMmBqwCig5U
8tze05oRm0sI/T73UZ8ayn/Xu4TQ0p+ObWChlG8i3d3gA6WEWo/OJTpLin/X
v5RQ1iPYzhZslneqeMHx9HwZIfdJqOMZ1eZ/PcoIad3QwA5dcnm+vlU333vl
hHjnHzW2lE3/+lQQB7Wv0ej/JJNv+3n+s3dCBbHvY0dN9Cmyf73eEgqJbhRv
D/2Rc2HOPPWg6S0hGX/eVbFtQ+5vP4IQjBNcbrBblwthp9CtuEsQnLEbtme3
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
         "]]}}, {{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw13Hk8VdvDx3FzSSKzSlFI6SSFpMSpREqSSCJJSmVI7inJkCQNTikhQiQk
Q8ZM0TYc81QREkUkoSRjyLO+v3r6p/u+t46992ettdfS6yZzzGm/LScbG9te
LjY2dvIzB9vfH9eNJen//pHNQ0v1SNaUBL2oKlrnhdcx6rfn6ZfvYv7f56gL
hY8WTeyWoC9PPWd399UlamSm0VVyRPzff79COWvOa9YIF6fj55hlftR3dy1V
ix3i/379Ler0y/8CPQbE6KfuDrq/UgqgeqcSfkbeF/v3++9Rxzd/NKS2iNEl
uUwXJNffpzrdRFI6u0X/fV4IdSRv13xOpii98nzhozCnUKpt0vO0rKrov89/
SJltyqzQaRehu/XJK18XiKSaXPvkT/qK/Pt6UdT+nKW+12kidNEU3c68g9FU
/bjx54Qm4X9f/zG1Z+MNerWHMN2BXFhafAyFrzMgJ/zvep5QO1/8muGvE6Kz
pFPPPR2PpYpHFSyUzgv9u754ijy+vH1LhehS5sc3P9J9SpHblThXtvDf9SZQ
5PLOBzoupDMCJbiCQ55R5OMaM8UW/rv+RGoD+fGuUJBeV1NT49+bROFfj58Q
/Hc/KRQtPeKHhIAgXZ7HO8hn43PK+HPsw/8cBf7dXyplcEzQLLtwAf3Vo0VK
BSWplC55gL8XLPh3v2kU/WhPwxYrfvoZcmE5/WkUedxMr+fz/91/OkUuf1fx
LB9dvLVuPEM4g1rbLsvDvY/v3/PIoBQs7hTrRs2jl5D7fr45k1pOAtwc4v33
fDKpJeS+a7V56U5CPtQzmyxKjHyOwN25/55XFiVIAu3vnENfrNQuG3frBUWe
2tkg5Tn/nl82RT6G1uLNQy/fvfFGdEY29afRtW/RG+5/zzOHmiA3bLmcm+5i
d3cwvC2H+vnG4FjUOa5/zzeX6jfKWfq5mJO+zLff6AFnHtXTsLxNTpjz3/PO
o8jthtjZcNCrye0GKuZTLXXjxokZ7P+efz5FPk7wOyc73ZWM8zvGLymSoWbd
AbZ/PV5SN0MchXr1ZrVlcd+XCijPoO237PtmtP/2KaTOka8zfGNau4GMK9+Y
QuoE6XJh9ZT2316vKPM7xaPTVZPa7iIput7VrygDZojjlTMT2n/7URT9ln3v
nPnj2vcluEwLL1KU6g36UWbSqPbfnhSl4CfWKmQwov1NXnnuS/4iagnuc3BY
+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
TL7WUP8HSM9pFg==
         "]]}, {
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw13Ak0lP3DxnEJISLZEqGQFEXIowghCUVIsmVLhaRIQrJVQrITkj0h+043
2bckZN9CsiUhRP3neuvtnE7ncyrN3N/fzDUzzonX9IaWxWYyMjINCjKyTaRf
yUk/pSnfeFanc8iT/ftRoDg2Mq7NIV/Z+FKp4L4pIe61U27Lxs5/tiey3mnE
CibtlN+TZW/17O09QmSz1/pp9f//fQ8iTaFY//oSu/xNGdpPCdwPCUGPuSK/
GPZ/f/4JkVS5ly1TiV3+6rNZl7eHAok9my46vJ9l+/f3g4hYuYCP86Fs8jsp
dLdlvA8hdrm/E2WSZfv39cKJiLcrT49MsMo3OFa8iLoRSbD8EZ7TDmD99/Wf
E0GyZmqOkqzyzl8FRB8xxBIMbhFp4YMs//69OMKvvIW62IdFniXz1EjJhZcE
zQb5lV4Rln//fjzhc1yq5lcXs7zNl1+vslMSiM0uNnu57jP/uz2JhHtp/APZ
fczyNTxZ9qk/k4iNtU9Dxu93/Lt9KYSzNL3sgzs75Ln0zY+9OJVK/LyrEB3P
vePf7X1F3C6+s/aujkneIZidIiw8jZhfSdcbv8H07/a/JmykRguo2JnkW5ub
m/2+pBNTd9hYBInt/+5PJnGlUO3Waavt8gJUD0I9j74hxpYffLjGuP3f/csi
LksWHvIrYpR/+4LjUPm7LGLQYcY/w4Tx3/3NJi7l8860UjPKXy+7HVw0nU1k
fc0IGb7M8O/+5xBpVuyae3O2ybP1tP7M3ZFLJH7xoLck3/bveuQSsZazDala
9PLvlgQN3hzLIyLGL/hMx9P9uz55RJB5lYLIj63yN5g8iTSzfMLv88E/die3
/rte+YSPaXhpbjCt/K5DA3zJTwoI95FNTsufaf5dv0LCycRa/D9xGvm6M0cf
v8wtJOyHuubveVH/u55FhLWRfEZFxxb5W1bPZqP7igjLgddXN/Fv+Xd9iwkT
A1YBRQcqeW7vac2IzSWEfp/7qE8N5b/rXUJo6U/HNrBQyjeR7m7wgVJCrUfn
Ep0lxb/rX0oo6xFsZws2yztVvOB4er6MkPsk1PGMavO/HmWEtG5oYIcuuTxf
36qb771yQrzzjxpbyqZ/fSqIg9rXaPR/ksm3/Tz/2Tuhgtj3saMm+hTZv15v
CYVEN4q3h/7IuTBnnnrQ9JaQjD/vqti2Ife3H0EIxgkuN9ity4WwU+hW3CUI
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
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-147451., 437041.1285973374}, {-14800., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Inicial (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-147451., 437041.1285973374}, {-14800., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.6827130026785884`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJw13Hk8VN/jx3HZyl6yVFIUUpqkkJRQKSlJRbImKZUlaUpCSZMWooQIERIh
22QL1zL2rSIJhUiSkqwhv/P++vz6Z3o+Ytx7X+eee854PJI+7nTQlp2NjW0/
JxsbXvHnlq+w9n9/ZfPQVLHMURbWLqqK1nl19Tj11/PM649tC/7zeepSwZMl
UzcWaK9IPW93v/AKNTzd6CpJ+/9/v045a/A2b2uar43XmOU+1E93TZVjHvP/
+/q71JnXFwK9ZOdrn74/4F6oGEDVjx36ovNY6L/vf0BVXCx4cqtfUHsxp7Fg
cv1DqnhE3rx6i+B/7xdCkW9fJOgroF1Jvi7MKZR69We68UAb/3/v/5jCS+Ba
fm23PjmlW0KRVOLvt/rv3fn++3lRVOw5Dd7Ftbzaoim7O3OPRFORv+LLzCR5
//v5T6kQR2HvSAcebYfeyYS0+BiKfJtmZ/68/44nlrpr3zu5UnCeNksq9fzz
sTiK0W+YfdJy7n/HF09dJSeYkMKtLWl6YsuT3c+py+Q4fvzj+u94EyhyeAPr
DLi06YGLOINDEinydgnOTzj/O/4X1EnyJ/MXh3ZdTU2Nb28SdaynYcWYJsd/
55NCkbf9vDmAXVuO2yvIe9NL6tCXuMfuHXP+O79USv/4fJPC9XO0C58sUcwv
SaV2d7qJsHux/Xe+adR1qir69tMZrbPkQmb3p1HksJYI7finNXv+6f/r8/DL
lJZ4S91YxsIMyiJ3D/+SG5Nas9cjgzLMXsZ4IvNXq4R0ebklk9pJAsiwxrVm
r08mpZZZcTHRdkzLSdibSrRhUmvTI34pco9qzV4vJkVe7JjPhrUkFNtlnt19
RYmQ41Lf/Udr9vplUXOTlppSvb+1yvduuh2dkUVNJvx+q3NrUGv2emZTnwz8
QoINf2q5kOsY3ppNsfB1D/q1Zq9vDpVMTjjp3Tet5STMI45c6uGOu/ZZIl+1
Zq93LkWGo2Wx0RetanK6gQp5lOWWzwa1wR1as9c/j/Il/VNftmq5kuvif+g1
ZU56lCm915rt8ZpaY5m7py2jQUumdcLzzpV8aujFUtPus2Vas30KKKlNt7Wl
Ol5pNZBxzYgpoK5Vr2idEHTQmu1VSNmR01wvxKTcyYl7VRdSj4LIAXqzqNl+
FDX1Vv94lGYD9XARp3HBZYpai5+T30TN9qQoS9L7wpZW6ruc0rzXAkVUBTqY
d1CzfYuojgnPM7ESXygtFcvcnOgiapzcn6Efe6jZ3kXUAnYFn3uh36hgXBeV
YmoNjsukn5rtX0xtJ8fnKv6T+kFCMyuLKZqPWIvq2UFqdjyUUOq3tY+lVf2m
tpOBmW5RQu0iN4TCmj/U7PgooQ76hTg+uz1MPcJ1/F1CWfoXj0j1jVCz46WU
OkPO87Hu2P/mhRRGKXWJdBF7Pk7Njp9Syptcj4C5f6md5H1fLGZR/uSG5Ds1
Sc2OJxYVHhoayiibosLIa0Iyi3r+uFSKTe4fNTu+WFRmxK94N8YMNRhftjde
u4zqIOPF7Txb0ex4K6O+Nqxo3bRiTtEuMm5jm8r+d54jb+YUzY6/cmqIXP90
L/ai8FKp1Keny6kJcoM5KXEUzY7Hcmqm0bVvbSdHEb4uarqc4jIWpH0P4Cya
HZ8VFF9zzLl4La4iXXLfRd6voBaYbM48MchVNDteK/53HaWjuIsw7zyWraSW
4YY2mFs0O34rKYyr8Jm5RZhXQ3MqqTXm/sVHX84rmh3PVdT6dhlucSueIj1+
doUQ/SpKlYzHRkHeotnxXUVt/Wzgd7+AtyhqiWL7w86q/3Xa78hXNDveqykc
F/8y/qJReXP/B/RqypDMF5W1/EWz47+aOkLG100PgSJ9Mo4DeGooC3J4O2iC
RbP3Qw1lQ+ajOe2CRTE6r/74RdRQp8n9UeArVDR7f9RQp/5z7X9O53dOgkV9
9b7D0+lXhmCLvRVz/Yh1j95UKySO490lCwfOBHjCA5Ul2+FPcY9LYRUy7uDV
+57xUsQeuoUe8IWh1AMwa67GY7jwUV4wLFCemw3zapa1wUY31d7DRuT4i4gj
cPzEUXdb7eAeTuUF94j7lb6mwLTStHWw6ofBYZjurbgP9vKcVC8mzt+efBqu
keH2grlwXxGLV88vh/WLnsfCx50lBEqIg67JFcPJ4nKH4HbN2M/weP76UFh2
Rnoa3kGuN+yA6018j1yXUmKmh6Qa3JJ64Cw8vfWxESxzxCwN1pla5AI7TduO
wX55wQFwbsw5DRZxk5tICsyld8UbllR/UA0fGGRUwrYTQn3w4+AAoTLi5Gw/
7gDir+TnwCOX+GRgJTI+YA2MD2L326mdMGOU2wouV8xbVY7+zBvusPB7lgMs
SmcPgy3cGzJgC+VrWfBzMj3CceQ5Dv+p6NGsQH8yTuBtToMMWOX8hNB94tui
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
Q/0fgLbfyA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw13Hs0VO/fxnEJRUgyopqijChEERUhRAk5JqFSRKFUUwjJIRIlxxASUook
p2S0R8Z5ijLfCCURJYfIKeE316Onf6zXSux9vz/3nr1n1krS4YyZIycHB4cx
FwcHvqrbbD9aG7lcm+Pfn5IE9/Ifasu16XVpekVXHIhtremr+b8I//M5Il+s
1Vv+urD2urxzzrdfXSYUrQVbjZX+/+8DiCfxOqpnW5dpe2jwfUhfG0Js/OAZ
e/vqsn/ff4PIEs0dzZddpu1ye8Dn1eZIQsrqq2lzk9C/fx9F3IsVyxvzEtIW
57ISzHkbQ5BZRoIr1gn9+3nxhLIsT+vZmKXatRfLUxPPJBAKD8/GPu8W/Pfz
kwiZDW2m48qC2t7fpZVCl6YQ6x7oCW4PFvj3++4Rqyl5dZdZ/NqkXP0vpQfT
CNGMlSHlFP5/v/8+IbQ+WGfBxSXabr3Tj55lpRN894fmdKr4/h1PBsElaVN2
TZRPmyGRd+7hRCYxm1rpWevE++/4sojJNZtV+IsXa5NtTuxM1X9IjCQn/DJe
tPjf8T4ifq7myr19cJE2NVqMKy4+m+hOcj/VnMXz7/gfE59WtkqvmOTWftPQ
0BDe+4RoSdD5esiA+9/55BLvxHJT797h0pbmuRobqPqUaIgXs/3ct/Df+eUR
VaKBYuu2L9R+lbpyM+11HkHEDjSfuM7573yfEaUi1rezWhdony67EF3S/4wo
iK4w+iG74N/55xO5wvJ88t4c2ita30w8X/6cMF2/OeJzzJzW/Ho8J/QkuXgc
VWa1Xo/J2D7dWUBsX9vq94P1V2t+fQoIeXLuxJmL01pnhAOJ7OOFhOSqwLNj
on+05terkCCJW3/3Lp7UWrW5Q+rBjSKCd4W8A4f1hNb8+hUTUyKcbcGTY1rV
hqrX054XEwPCH8yXJPzWml/PEuKL0JOGyO2jWuedbw/cbSshWIJX9UQ//tKa
X98XRC2/VXmS97DW2uB+0zsLSwlvkpX77m2DWvPrXUrYLOM4anSpX6uefbrR
m14SuwWyTa1L+rTm1/8lsZHXQuf4VI+WZ3nqylvmZYQw96yy+46vWvM9yog/
HA+lvS53akm1TfmFXaYRlVPpiou92rTm+5QTQb8mlq+ZZmk1Tph/DU4vJ2y/
G05s9W3Umu/1irCu0CyMnmVo+Yjk6l+tf0UMH3874cddpDXfjyA4JK7t4svZ
pBUjxmVV7kUQeR2RA03fC4n5ngShdkVCkTbMIH5IKy0uE6ATDfplBQYXG4n5
vnTir4lz05bfLEJLxb70RRqdkLMWGVx9ro2Y700nFBSPBi/07CTidG64FqtU
EHuUi6Int30l5vtXEPZq/PcHxnqIn6YlawprKwhvdYe8roI+Yn4eXhNRWiXl
H873E7uP9jTm270msnUFmQ1bBon5+XhNHJPKH+j0HCbuuAsH5v16TbhJd1w4
3PKLmJ+XSsJLZvFfluooMeijqZIbXEkEb9waeCD+NzE/P5VEtJw9X/34GKF7
w7X3sTiDSFW4flvPaoKYnycG8VixQIwonCQSExISHuUwiOItn1N3kP4Q8/PF
IF4r820ovDBNDGdVGWZpVxFvt6nkbm7+S8zPWxXRpnZUJXvrLLGnaHQmg1VF
9O24USYVPUfMz1814b2mLc3Ei4N+t1Ii775LNeGferaHX3YBfX4eq4lrEjyy
dS0L6CPvjBzuzVQT4WlJriGhnPT5+awhotYp5emqLaQbfPEWSbldQ9xJrxpd
0LeQPj+vNUSKlK3qq3guespQVlUSpZbIzPzl7aPPTZ+f31risXRI+fYJbvrv
mWbPhBe1xLOs1ZwTD3jo8/NcR5TI5OsVWC2i7+Pn3BRvVEeUP9K/7sGzmD4/
33VE5caOBoWixfR7Kzd3xHypI+oenxP66chLn5/3eqJRbrHFIxIffVzG9lYU
tZ5oyUmOd2Lw0efnv574pLC1bT11Cd1I9bp2JG8D0f20Zs0XKX76/H5oIH4o
2jukNPPT0/WKRiOSG4g7h1vcOjlF6fP7o4GI+2fmP4drBaXCpPB9P+AAimIT
bGdYsyiCbW++ds4vbGfy7aHA7kMhyvBA7evd8InmrU6wynXto7DNi8/xsK/B
K1/4QMqNWpixSCMJ1g9UnYYFqktL4F3OX+W62La8pvYfrGx0yx5OxvGzvXHL
zki4h0t52U22JVb00mH5ymcKsOjfqFGYGrh5P7zkyy7KV7Zpu3NcYM6qH1Yw
N+emEHgyOy4UNqI/zIAHb+0uhWP9pSvgnguD/XCHZsZn+OOhRHI325Q5yRm4
cdceE9gN68121foRf7jQl6wGly1OyYdn1JMs4YKBvd2w3l+x83D2uzFSD9sR
L+Mi4XvFafowy1skF467a+QFk3dE1cPhV6eyYceppd/hAKfMdjinJIInku2L
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
A+Zrua8DM3YFdMF7CWMq/H//mUlfA/E/k+Jm6w==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw13Hk0Vd/Dx3FzmUuGSopCSjcpJCVUSkpSkYxJSmVIuiWh0E0DUUKECImQ
MVM4hmueKpJQiCQpyRjy7M/P9+mf22vFdc5577PP3tdaSZ1wPGTDzsLCcoCD
hYWVvLKxzP255Suk9d9fWdw1lC1ylYS0iqujtV9dO0H99Tj7+mP7wv98gbpc
+GTp9I2FWitTL9jeL7pKjcw0uUjQ/v/fvSgndZ6W7c0LtPAas8KH+ummoXzc
fcF/X3+XOvv6YqCnzAKtM/cH3YoUAqiG8cNftB8L/vf9D6jKS4VPbg0IaC3h
MBJIbnhIlYzKmdVsFfjv/UIo8u2LBXz5tarI14U5hlKv/sw0HWzn++/9H1N4
CVzHp+XaL6t4SzCSSvz9Vu+9G+9/Py+Kij2vzrOkjkdLJGVPV97RaCryV3y5
qQTPfz//KRXiIOQdac+tZd83lZAWH0ORb9PoKpj/3/HEUnft+qZWCczXYkqm
Xng+HkcxBgxyTlnM++/44qlr5AQTUri0JExObn2y5zl1hRzHj3+c/x1vAkUO
b3C9PqcWPXAxR3BIIkXeLsHpCcd/x/+COkX+ZP5i16qvra317Uuijvc2rhzX
YP/vfFIo8raftwSwaclyeQZ5b35JHf4S99itk/W/80ul9E4sMC7awKpV9GSp
QkFpKrWny1WYzZPlv/NNo7yo6ujbT2c1z5ELmTOQRpHDWiq485/m3Pmn/6/P
wy/TmmKt9eMZizIo87y9fEtvTGnOXY8MyiBnOeOJ9F/NUtLl5dZMahcJIM2c
0Jy7PpmUamblpUSbcU1HIW8q0TqLWpce8UuBa0xz7nplUeTFNuvZiKa4Qof0
s7uvKGFyXGp7/mjOXb9sal7SMhOq77dmxb7Nt6MzsqmphN9vtW8Nac5dzxzq
k75fSLDBT01nch3D23IoJr7uwYDm3PXNpZLJCSe9+6a5goR5xJ5HPdx51y5b
+Kvm3PXOo8hwtCgx/KJZQ043UD6fstj6Wb8uuFNz7vrnU76kf+rLNk0Xcl38
D7+mzEiPcsX3mnM9XlNrLfL2tmc0akq3TXrcuVpADb9YZtJzrlxzrk8hJbn5
tpZk5yvNRjKuGTGF1PWalW2TAvaac72KKFtymhsEsyg3cuKeNUXUoyBygN5M
aq4fRU2/1TsRpdFIPVzMYVR4haLW4ecUNFNzPSnKgvS+uLWN+i6rOP81fzFV
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
6fHTVVPon/zBEn6tlXwGZtgZucPzvmW/hOvkm8LgQ/dKRmGRAYMcOEKpbus0
+pN1EPztY4snHEfOC97k2V0BD8rVLIgn9lg9yD+D/t901sNVdeOHYXfs74mF
L7KFwUzynIQtl/J3wvyyJTfhREpM9h/692rEwqOnVtrBEbEFxbAmPy0d7rXe
+hm+m7F5Aqatyp2G3x/bsX0W/btVlj4nlmLRuwEXRGduhu2eHa2GOa02GsLZ
+08sYPEj/fF5BDEb6QYHkfsM1gu9HA53RL5Ihh9peHXDMhZrauAvvb5yrMT2
EvHf4PW+IQ5wFlm3JRBf2fg0E54hHeCyD0l/YW1TSS1Y8Fq2Jhux39JIC9hE
puQm3Nwq7gbH1dTWwhL4/IR4yKlFiJ3YxlgsG966uNsYThYLaoJvFv6IhEff
Cw3Db06O98DqZJ+YSLyMl02eg5hB5n34dBqfE1wn7KsLpx8Vy4ZFmrht4ZkZ
qRnYPNCHAevErtvJSRxH9hFwoO7m2/AgmRfgT0NaDbDyG5ZP8JqQ/SJcxO4B
HlPwRfWjpjBTf3rxC+KiL1bRMD9ZZ8I8d+z6YMP68cOw4YbLtHnEEX50Jzjq
vacz3Lv/zz14wM03F6bxOSXBKqtCZmE6WYfAnlXR2vOJC8j7wrWOSXdhTt3v
HEnEYqLZb2A9btuV8InXxWLc6E/2tXDyiVpzuIM8p+CJ+S0xsAw+tyTe+bKr
H7bnsnwE3zP8ocCD/sz2LLh1aowOz9wweQdLP2V9DWvv+jAEO+rwsfGiP7uR
QDJx3k9RHbi55J08zBkkdQ+W8DLYCx/cuq4JtiHrYvhxl8pSPvQn4xz+6qN1
HB4tqo6GFdfvfwarX9Mpgt2ajH7AjO3l7XCFq9VGfvQn6yZYSMrOBRYpKBZL
ITavuFQIm+PzP+Ln9p4cAui/teAQ/GeRry48+FftPLw9LzgAVs7L8YNvH49+
D7tfUXkBN3ElLRNEf9XMSnhF8qsTMP8EmQCJzx4ufg4bkn3aS+KsyZqfcASZ
d2GWqPdKC9Bf+cV2eN/uLleYhs8riYN/DFAwPfPZFbjrwRjXQvQn63h43RZW
PZhz09NM+PJn3kBYb3jFW7iEIdoKB6VF/IL510mtEEL/8+L8qcTGb+VtYBmy
zoNjXFRewPa/RHXgn8u1fsNZKQ9t4C3MfZsXob+9kDd845yRO6xNC4iCGxZa
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
mXyrpf4PEpXfyg==
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-360680.61455822416`, 320562.34396878234`}, {-14800., 0}},
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Final (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-360680.61455822416`, 320562.34396878234`}, {-14800., 0}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.6827130028085957`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.682712777501709*^9, 3.682712819252097*^9, 
  3.682713002932603*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.682712777501709*^9, 3.682712819252097*^9, 
  3.682713002934603*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.682712777501709*^9, 3.682712819252097*^9, 
  3.682713003008607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.682712777501709*^9, 3.682712819252097*^9, 
  3.6827130030106077`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
rvnfUq7DTWraLLi5WfoYLDuW+wl+2TGgDdtmaUzCnr3lsnCKM1PqGfZmNOLP
7A5u/81btsAbOVc/wzrDaQdgIaEDBMxIX38ebpm/OgquvfjiPpwuzeMOS21c
mwh7yX88CVvi/gd7syZtBxybqvQN3rz5riLc5xjNG4q90TohCKuRFeTg9h1b
v//hmv4rXBvO2rugHGYnLzsK36P2xMOkc0+vwlbHibswlftyAKudeWIPh/0I
zIBFL17cDXclSNTDX1yMVGAy7tewN7fl58G0VWJzw7A33pO/OFyzvvushk/6
19fCgnGiO2GN0IRU2Nj27imYFHvrIRyoKHQb7kw5fBFu6/QIh3OyN5rAStG8
BfCDojmbYceTN5thm4ov4jBTgTMOa77NGZnhmvOFe3/Jtdgnv0bYIHJyE9zV
YceEfa2u7Ifze3WD4Kblow7wo9HFV2HZdidv+DRn0By2DRuIh7WFKrfCKccc
2bC4WNQSeGxpbwfcI33t9zT6t9jxRHDNkjdpgRlPv8vC/mvWFMC1R7j3w9ib
zbxhsNSSjsMwRauZDlt+tLoCS+qnH4djg9v84Z9771HgPjOLdJigWsvDaoua
6+Cg4//xwvQms1/wuTMLO36jf0CjSCT25uKPEph0yHQVLH2tOBqmStTrw323
QzzhMNy/c13i7WQLdz2qvgk/8d+1Eyab7AqDz4cqrIJpC8rzYP3YKWGY9Ub/
I7wk9W3PFPo/LBmDB7ITK2HjfboSUdibottJcCCpcCP8tOLIfbitRmsffPHt
JgdYySf3HLzzk4gx7Ij3G9ibzq9kmCnKjIOHe3Pnw5zKzWVw+eijgUn0v5f2
FQ7j2NfDvkbrZ2Fnoe3pcJPwi2XPuTYSk3kMy5av0YSXLx6+BNveiTeHR+Wr
DsIpBko0uGrNc1V4TCD6MRyx2VUK1sH7I65pWqbjE+jvEV4L79Ff+wGu3b6s
F1Yw5suBpfiezonmepz66QlsWSytDNccz7gGx94K3AE/P+N9FO6jSFjDLhdP
asFqs343YONrmstgeuH8UHiluzhnHP3pPrnwlPfPNpiE93PYG/+SQpg64zUK
x4Q+jYDD8gXFY7A3sZduwV2uHhvgA6m7rWGyJq8xrPxqxXaYNnXjLDxd9HsF
zMqZ8YLfVjTww4IurrFw/Nukb2PorzFZAtM/ubPhwHHaF9i082gc3Mbkvv/E
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
s8yi
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJw13AlUjP3DxvH2FImUFKmoLBlbm6fFFKUsoRghSRRFSTJUGks1IkW0iTba
o7RN2qbultGepJAWlDZp39Xonevl7xzH+Rxk5v7+muueOof8aUdTG14uLq79
fFxc3JxfeTg/w0rlUi/bztfl+vfjush+5/OH5+sWVT43yLp5mug1qksIXvc/
XybMvEzbiv8I667i/K1HhdcJVmHDksEPwv9+34PYOnNk9/JEYV0nHeFP0bLe
RJR60w3DG//78/eJhZfNM50PCevaPep3L9zkT1xPbu2NXPu/v/+Y6O2xlK1m
C+lK8R1ZmPwukDBTaD88VS/07+OFEBuK8vmdbgrpVlwtiHzqGEqIRV+y7FAW
+vfxnxFTXgo5lM/zdN16lbbcFY0g2s5+Fiv3mvfv34siSo187TW3zNOVSDH8
nmv2nEhar/v2Vavgv3//BeG/YExW1kdQ16F7JjEtPpqgDsS7PlIX/Pd4Ygjz
OvMPvB0CuizOZUuYjCX00kVJVx8K/Ht88QT9uiWv5jYBXZnj1lqRhgnEPOPm
jNlv/P8ebyJxf6WZdeE9fl1qwDK+4JAkQmSoXtxjK/+/x/+S8C/az9Jv5tOt
ra6u9u1+RYgHVFIFvfj+PZ8UIth6l1LlBj5dJYHbQZ4arwlp9eKPvo28/55f
KhEuuN37wA1e3cJI6U3MklRCrilHQ2wN77/nm0bIRB4T+NnCo3sh/0pAdl8a
cfnBwrGyxzz/nn86UUYr+R5rxKMr2VQ7mbEkg1jh4PLO8w/3v+uRQTidIDGt
Mrl1S8bXnnitlUm83dueRD7P/e/6ZBLSWiFPZOS4dR3FPImkMwzCcf2+OzON
XP+uF4MoleK+0nSfS3f5plaFuPtZhJRQltUbPa5/1+8N4ZG9+2SGAJdu2V6N
e88z3hDR1o+CnELmyH+vZzax4+jDi+7yc2Rn20f9Yc3ZRPteP0Pvl3/If69v
DnGbfF/usdofsiy9z+QJby4hp3JvOqyQTf57vXOJQiXv+vjdbHIV5+kGKOcR
FtL0l+kfZsl/r38eMSvi6cW0mCW7FERKPzyUTzzjvm1R3j1D/tsjnzhr4Jya
5zNDVmievuFznUm0SildLSbNkP/2KSAOD3zWqqj7Ta6bPNRBjy4gqorvc9c5
/yb/7VVI7AjZXvZx6W+yu3iK4e2qQiLnwrBva840+W8/gtisG2P648Q0OXAZ
35ECV4KIFzdb1jc3Rf7bkyBW9gq1Db+YIv9U2jIvX6SICGbmR08ZTJH/9i0i
2raE2lwZmyTrqp3MzXleRIQZZWrdS5wk/+1dRPgfnNTqPzVJDt553/6NWjHh
dVRT22TZJPlv/2LC9RRNm/FugvzLJHslo6KYcLAltKW8J8h/z0MJYXWJV4e2
fYK841RnXbpFCXHEZZfO9/Fx8t/zUULsuXVPxyB5nPzkophn6nAJsf1utU6i
9Tj573kpJZao3nsXuW6cPOBOVkuhlxIdpHnasQNj5L/np5RIX+OdkJQxRta/
b9/9UopFeMgLSKS6jJH/nicWYbKcfpuhM0Z+GhoampjMIuQl+AZyecbIf88X
ixhe6HmcKBslD8W/3Ruv95Yg5vGUsXxHyX/P21vCn+e2SpXJKHlX1ig7pvEt
YTk7F1m3dJT89/yVEaQvP35e7Boh43XxhV0ZoaG9ylU6a4T89zyWEXoRloJv
6SPkkXrj01HsMmIvV3iQE2Xk3/ksJyinv6yWURwhG313E494VE5Ylkqml48N
/zuv5YSdEkX3SukwOWIw/u0zxQrC+e7jWtnA4X/nt4Kg/Xx3ourMMHmM3eAS
mlNBeO8T6buqMvzvPFcSFbd+7wsWGibvWcCjHGJcSdx2k3tb8HXo3/muJDSv
7CJ3M4bIUdKbWgO/VxKpDaKnfX2H/p33KuLxujrdqzZD5Im1Jx4+plYRV274
y57aPvTv/FcRZh8O/tktOUQ21rin5y9UTVw+uCr33LfBf58P1YT67xfXtB4P
kqMNskb9wquJmejVaqL6g/8+P6qJ2X+u+ef6VzMSsITvnp9wAuPDxEKOLfaW
C/pxTCt4+QmOFd6lCB8q88yG+ytKdsDr6sxDYbV7eqfguc8qbjDNqJAGN3yf
bw6zBHWewUk/O7RgkbLcbPjWaN4KmHJn20f4yGwAW4TjcDx+jpX57dvgTj7V
xQ845l6oXwiTStM2wp+WroiCqZ6b9sGvZMduwcwdyXawx9pqK5ifR9kbProl
ZgdsXJQQA2/UdF8NB91SKob5dh7mg1vJMV/hpr0bOhdwrDgnz4ZfH+Z7Czvg
enNMt2iJgxk0mW3w8bOZ3jBb+xkF3uzoawsbzC5zhgVcrHfDfnnB/nDLLe31
cKObeAqcdk98Piyj+bgK9n78q28+xzbTor2wxbPSajg520/An2OVmLBkePza
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
37hXRsPsS9OiTRz70l94wQabr5Hg0w/cbGC/wbE98LYQ011wY8plW3hh1Po1
sMzFITrckcAzD7YhXYyGc9K+9DDR/1cfAT/MTa+Ax1/atcE2JT5JsM6F7hlY
s/r0fZi+3kbqC/amUdMerultV4e7WsWMYYnEU4fh/K6fJNjCts0JfjRYvBCO
XXPiIXxu6ulgPvp3Nb2Cdbid62C1OLNKeInw3jSYZtPYDfeIrX4MsxQO8Tdj
b5bPXIZFftStggMVPhyCKdH7deHzpJeqcPjpaguYrO4pAXfK77kOS5DNJ/LQ
/3vZE7jPUOUTTI0yyIKJg/OzYaZlyQc4+FjHE5hfVm8Ytj+d5wobtxUsbMHe
XAg4DgeFa2+Al125oAW3nsjdDfe771wBK67Ydg4uoS9n56J/M8MLDn0w2goz
nqq8gC+GVBXA7GNphbB+VHQkbCC1qRWWTrx+C/b7/Oo3PJR2yApuDFm/rJVj
Vq7yDljGLEENflbCuxq2Wap0CHaqbuaFkxujL8GGjRk/ctA/UP4BvKLtPgvW
ORz5Eh7pOhMH05fIVMDlg1recE390y44YmqJLSzxeBlfG8fO3L+MYAuTYHl4
t3DpOjh2kTgZll0SJgz3v3t0Ah5ffqUvG/0firrBlQr7qmHafr8QOIqkkAyz
ROYz4Kvqs36wSM3dengfueEiTPEVGILljV4dgMP3eol8xd4c9NoMdwrzKMM1
x04shkmVN43g6NOqI2/Q/x7bBna5sOADzDS67gnvv/IjA+afNx0FK9DyA2Hj
sqsF8G96IBUOujPWDL97YH8EbjW4PA3HhuhrwIr8Q0u/YW+iViyDHUodVOGD
iWNTWejv2WcCK6VXN8HsHXaO8GxuTC5swNPtC9eXuD+D/Yqsk+CE6sPucOOt
9jKY1rjBApbRPdUJH2rj2w7bzLXyfMfedLeshJMLzOXgP4OZcwz0pzXpwA1T
vt9gHR0zcziJ26YIps82uMC3hHVewDV5psEwZYmEJyxxvS4DVl7Rfwa20Nz/
HuZWZOnDsdNVA/AnUrgi3J+9e0E7x6/UqQKwmkvZOtiDbNydif4aBobwUSPF
cpg1UWwNbzRhJ8AiWboeMO/xxnswhVoQCTedTj4Ph6tqM+HXF+h74c7RnC8w
/YrFBpiUoTEFH6epicDUywyJDuzNHZGBDPTfoqICCzzsrIX5h1MPwi0hzNew
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
NfF/u4PMpA==
         "]]}, {
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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
b8LHqR5dyzRuzs0lOCffPjEfGacqNY5fvu3JJAQ94s/k7pr4d37kEJz3rfQf
ryb+nQ85xPHf8pE1Myb/zX820Vtw9/OdY5P/5j2bSPSb6SVWPPlvvrOItdX5
tdYrpv7Ncxbxhe9hx6XAqX/zm0kEriw2PDw09W9eM4hR31WC8624/+Yzg1ge
bH/hehH33zymEwFfCzip6n/+zV86USCgJhby9M+/eXtHvM2YKbts9vS/+Uoj
klZ8XLvTc/rfPKURjh7WV/h6pv/NTyqRMcPafcFqPoO/85JKrOvrGzt4gs/g
73ykELlLfs3Vi+Yz+DsPKcQe04mJlDY+g7/93xIX4tfmvZLjN/jbO5nwo43w
iVrwG/ztm0yQlN83FdL5Df72TCLeSo7mp33iN/jbL4kwInR2v58rYPC31xvi
N/+ujV92CBj87ZNIuF+WVim8JWDwt0c8cVykKfH4ewGDv8f/NZESM0s/TEDQ
4O/xfkW46z1TXqMvaPD3+MYRGn7Zz7nuggZ/j+dLItj1xmT5W0GDv8cvlrja
YPfTsVvQ4O/xiiYG5dZJM5YIGfw9Pi+IsmP3ddXNhf4djyiiaqH58u93hP7t
/3PitpwJzYcp9G9/Iwn9lnZa4W+hf/sXQXRuyH54Vpr0b3/CiYd8z2bv3kz6
t/1hxI3JX43yJ0j/tjeE+P4oXudlIOnf9j0m+KfGh5ITSP+25yGRLye9bFYZ
6d/nPyC6Fj1Qu9ZB+vd5QQS3WoToH/nf+98hmD53GGtmCP97P3+i7/sXfVUJ
4X+/f41wceK3YMkI//t5TyJxydUtQ+T/vX6WSE8pNX0j9z/bE/8HHtfHYg==

         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0.9138469884257, 0}, 
     PlotRange -> {{0.9524954962960738, 3.426}, {-14800., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.9138469884257, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"Fator de Seguran\[CCedilla]a - von Mises(Triaxial)\"", 
         TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0.9524954962960738, 3.426}, {-14800., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"von Mises WellCat\"", "\"von Mises Calculado\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.6827130033496265`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
7+g=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxN2Wk4VG8Dx3HZihKFEEJRWlDWUgxJJFQKLWRrilAopaIsjVKUXcmWJVmm
KGOphmOZhLSSJEJG9mSLmDzz6+/F88r1uWbmnDP39z73OWfIOZ62IHNycHCY
cnNw4G94wkCokUMviaEb2Dn74zWxI9U1Hfa7ws2ApR72PYc1iOBMWOyRy0d4
kIPvBqxR0NMHZ+jfdIP9np3gNGbbNlBgD9xNdEvAopW3N8Fe1eRNcD3XUhFY
7k2XMUzZET3xl+3fDU72sA5lWTM80NJ5Hh5n3HkOL/rucBum8komwWZ97Q9g
slGiP/z4l10pLH1dxgnWnGprhBtf3TeEv3McHYTD+OQV4YIFrdy72DY0ecAP
5wjZSMGsG4qDLLYrxVvUYFpd9lt4Vvbwbth9kdIT2GltsyOsYPY4Gu7edPAi
3Bq26Twcrt0UAce8eXoItjGwyoLNBDW3weamjQTMs7d4xb/tWR74DNPDtefB
945+/Al7v3/xfYbtiRMW803YVlpKegn7er5fATMtyh/CUpf2asKJUQY34b6r
b81gywaGO/zpljkZFhA13gv33Kn3hRmWtaqwTJppNOwXayoK+1DrcmCNpje/
p9GnyKQSHhTb9wW+U1HzBc44+PEFbFdvPALb3rVMhg0/V/PtRv8vTQGw1fed
cnD98sPH4BtDjM0w5cjXnXDb1I69sE7C0bWwNU/VCXj8a/vCf/sXMrgCU6Wd
hv6wXSJVEQuTjzLfwamK+o9g6eQTT+FsdYIBN37rjYGb9UitcJismw+sbFY6
Bhs6DB2G0w/pLDJF//seOrDu8RerYFrniAw87bV1K+y+ypsT7rzyzAJWOPa7
awrjGbrlJNyafqEaFo4vDoBjmNNZsEOm1l3YbPXlULixoDAP5jnBcRp2r9B4
BdMzA/fB694VfIO9e7jVYd42td+w0tpry+BFA08Wm6G/C9/UJNub/mxaDSdm
32yBfRfk68CW/QKl8M9lGy1hgQ3hKTBF4bEbzHBbGgRvUVe+CvtRo8mwqAH1
HqwxtMwYFrHY8BQeVL677t/7HXJq4YzTkgJwgMe6Ttg2L/Hnb7YHr2RNwaK/
ZD7Al24rLjFH/02pBfDG5ExFmOIlHwcveLxaD9Z5+uACzFuWYQ2PjyrawGve
yp+Gqeo5urDLt7RgmOytJAc3/FyZBEsXPuaC7TlSaXDjxKbuCbaFlsjVw2Fa
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
+cN0+EqOehvMw7n+Gvx+a8E4TN9OdYF3vVYTSEX/IBVTuNvmqTysVJWvDD8Y
VN0GM7nVl8DXLz/ZDycaFo6GsR0lqOoKWwZv/gTTU/IDYYHqZ8WwoOqmeJgx
X+ceHFCZlw/7GZf5wcstN9bAGiH69nBT9+N2eLCmcjtc5KMyCWfw71SAS/gf
C6ah/+5X8+HOBOU1sGioSV8o20oqj3Th+tevX/+/38xZ9tsQLUSul5SG409k
X78Yi9QSjvSSfDDe+18T0ibny17E4vmJPT/42PNlXsXr0Q+9pJWYz2V1hNkp
wdUmQn2kCZx/3nVE7+TnsVfmfaQ6rBfr64jwpVmpvrf6SClY3zpqiYdOyvPd
3/aRvLEex9US1bGHh9KW9JNMcP0wqyV8t6epbrDsJ8lQ2Nc7rlpCWmTstVB8
P2kM1+eSGuKUlsqwbXs/qQb3E6drCMtegVkZxQFSEu5/FGoITdu9Q06eA6Qz
uF9reUW0p1mbab0YIBl3sO8vI14Rp1Ns9jxcMEiSPsy+HzZ6RQyY7GtkWA2S
RnD/zqomjtZd9El+MEiqxvPG02qCeqIhxnBykJSA5yOXaiKnyfRwze4hkiee
52SqCeHDv95uuz9E2lnIfv5sfEnkdEgOPJkcIkmqsJ+Xb74kbvU8TyJZ/CQN
4/le/yURMvqx8zf1J4mB3yN+M4gLJvI9kzzDpHj8fkJlEK6nwq1Xag6TTi8N
IrKdGMTL90rBV08Mk3bcdPuRI8Egwil6zhvih0kS3FaLqW+riHmci3PXvBkm
DeH3P0oVIVGvVn2V6xepEr9Xbq0iPjy/s2S/9i/SnVNLg/J+VRIb7vDkpXr9
Irn/mM7Kz6wkzH811FzN/UXabs9898S2krBoTbm9sOcXSaz5ze+nwpXEhbSs
PSYKI6QB/H+gpoK43K0QanlshFSO/2dcqSDcnjwRNsgYIcUa3HQr0qggJD/J
Sq3rGSG5vjgbVdxfToivK9FdpTRK0tM4+qzkfjmh99vyrvHZUZLoI6OOZ9bl
hLBBnHwRfZTUh/8fCpQTpwPyQkL5xkhlyctV6JUEYd1sMdNjPUaKFue2Kr1A
EOb2PdNDD8dILhGDvmUqBCGSNXu9cmaM5CvyyCigroyYl/3A/tb+cdJq3oCY
IK0yojHdT/cidZz07vf+75S0UiLyrstqGv8E6WLv6k3XBUuJ1TIjhR6uEyT5
lqnLNy7RiY2/mymdbyfmzo8XxLn3N2Z2bP49dz68IBw/qXl/Sv89N/+fE1ap
dIEW0cm5+f6cGBMdepNwc3Jufj8jLl+gHXDjnZqbz88I+8JTYfeDp+bmbwmh
t+RtVMKiP3PztZjwn/md+fLOn7n5yTZj2jRq/fTcfCwiNFfVhgcwpufmXxFx
/On0B6kTM3PzrZBY+2r4GscS1tz8ohHvd3tu+VzJmptPNMIgxu6yo//fuflT
QBwnuTw9YzQ7N18KCPO6A3Ezizj0/psfT4nz3YpXL/ty6P03H54Sq8V9TBtH
OPT+6/+EsE3Y0J/lMU/vv975hMOFyI7nE/P0/uvLdn+QBJPCqfdfzzzCqi8p
YYUMl95//fIIvr+l1sGVXHr/9XpMmC4bVz1+llvvvz6PCKc3+1u3qfHo/dcj
l4gYpda9mser99/45xCLuRNEl3Xy6v033tnEqsyTy8M/zdf7b3yzCK/66I3i
nQv0/hvPh4TwhdxVqxbw6/03fpmE6gFqQbvpQr3/xiuD0PN4T3anLdL7b3zS
CVXVlXuWGy+eG480IuV8Bfk4r9Dc908lhsU6Eyp4l8x93/uE8fDistvrl859
vxTCMS5NWdNPeO77JBHnNsVU9POKzh3/PWIvM7drqmnZ3PHeJbrD4o9U80jM
HV8cEfmpb3DrY8m544kmmrRTdxVxysztP5L4fmzi6M10ubn9hRObX0leZ/rJ
z23/JnEnvGuYdlFxbnvXiKwg9/nR3spznw8kuEofhhtqqs+9/xKxQka/7+sG
3bnXvQg38kWprvnmc3Yk/gdrXD/V
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJw13Hk4VP/fx3HJkrJFlmSSQqSRikgxhJKixKQSkvRVESnabCWUiGSJkJJI
1uxEh0x2RYgkJZIs2Ua2ye+87rr9w+PCOOfzfM+Zc85cF+njTgfs2NnY2Iw5
2Njw+e/HYe3//yrLZ69Emsoh7bKaR/p5XseJwb45r/Qy+j+7EHJ703ozjE21
V2e62N99dZWwybTck9Wx/9/3rxPqCpLH7Rr3ap/TXPwhQcqfSB11p9oP7Pr3
87eJ1UWdU6c5dbVP3R1yf7UhhFDm9LjZobX93++HEpIRWlJfXTZpL+c4yJ/2
NowQNGZzqDeS/vd4kcRCzZEchtsq7Wq30ofRTlFE6xudclN9qX+P/4BIEk6Q
kIylaF/pl9t4UyCOuHSM43zPxIp/fy+eMEizq03dK6Etkr7ra5H5I2L5zJs1
rk/E//39x8TPnfLumnOi2o59s8+ykhKIonu3mjnNRP5tzxPi9pef6xueC2sz
VmW6JP9OJCyoe30jFgr9274korZVVJrTdak25ciJbQ93JRObeQoDar8L/tve
Z0TMNouJu4cEtV3viXNERKYQ3J9mijPDBP5t/3OiTZsWrHmJX7uhrq4usC+V
SE70OV5jwfdvf9KJK4urVM1pvNpyXNfCfdQyCEMnXp6e1Uv+7V8msaJ5/ydn
rsXarx5KbCh5nUkMqodnsPoX/dvfLCI/y6zD5sgi7TMvL9wrGMgiQmazh7hr
uf/t/wvCXl+YLX0bt7ZYe8PvbOFsQjvYRcgslevfemQTy9sbZWYkubRfM+WP
ZmzLIUZXb1SLD+L8tz45RI1DyO6dfzi0nYR8iBTbXOJx3i+LwbMc/9Yrl7jK
tu9saNdC7RUbOmWe3s4jTA3TvdX3L/y3fvnE4UW6naq/2bUr96jdepSdT6zO
E5Ojx7H/W88CYsB28OwFfXbt8/Z3h2I6CojspWX59wYX/FvfQsL9VThb9r0F
2lK+Ayb3FxYR+o6ndzdpLPi33kUE/wpa6OhXNu1acnfvKRYTrVXCHYK32P6t
fzER5/ZjjbIym/al0ocSwaYviQaDK+1x6fO0vz1eEsfU1725QJ2nyXRMewZc
LSFaZ7wSnFP/0P72KSX2lrR4Oyj+ob37bfrNN6GUKPdStLJPYdH+9npFqO+4
tu2EAovmvix917XaV0Q6xwfxY8lztL/9CEKmcv2kxdo5Wpg4x8HSywQRfev6
e/Ons7S/PQlCcG9bpqnsLO2n3MZFL/nKCD9+pTv7nszQ/vYtI87x5pk7q87Q
tFWtigoflRHJVeUv+xqnaX97lxFCf7RvmrtM0yJ0bzvkq5YTVze/Mq0Umqb9
7V9O9NhrSqllT9EGTQpW5laXE0ZxxT+fmk7R/s7DayL//dY80YnftB3Het+9
sHxNrOIpuOYX9pv2dz5eE7e0thhNqvym3T8r5JM5+poYO58jfrJlkvZ3XioI
Vnd4t13gJG3Ynaaa7ltBrKQusvLUnaT9nZ8KQuvilfaIGSZN77ZD3/PlDMK6
bNAsI4tJ+ztPDMJrifW7SnsmLToqKupZGoOIpzfu+SLFpP2dLwZBPNStnGqd
oI0kvdmTpPOG+Nqfu2PpnQna33l7Q7CryJcq6E/QduaNs560vCFWe0Zv3TE3
Tvs7f5UELS6RXfv1OC2mYlXm41OVRMGN3EyTgHHa33msJJTPMKxsTcZpY01G
x+NZlUSySQuvq/g47e98VhHS6r1Ffl1jNIOvV5bF3a0iolYy7e8/HaP9ndcq
Yiknp1iK4xgt7lfSmwey1UTAwDJGscoY7e/8VhPsTTLn62dHaROs5ktRhdXE
lQIV6a7yUdrfea4hnBj3g26HjtIMedkVI41qiKRVx5frHR+l/Z3vGuLzVcXE
uY2jtHiJDZ1hX2uIFW/2Gfiwj9L+znstUa6xdK66dYQ2KX80ONS1lrDPaMoQ
fD5C+zv/tQS/TJitudcIzUjtlk4ITx2Rc58uFmc6Qvv7fKgjLPjEanvWjtAS
9PPGg2LriIUcWayDU7/+PT/qCI5/rv/nuletH2GRQMOfcNjVuXzYck8VdxDp
o2qrw+HExTtlYZnxXS7wUPXrHfBguuM+WPWWzjE45/S99bCHwSsP2F2ukAdm
cGs+gPW6P3+nk+arLCqAeeM4KmC6n3or3HJ43SM4FttPOlZkvyfcy6Gy9A5p
u0ZXC5hakaUEU4MeqMOuPhv2wkyDMhG4ZEfaKbiEo2/MjDQnu6I/7EvwvoON
ypKfwEbum9LgcG+5clhE/VAA3El70gV3jnv8B8vOS7PgxIwEPdgR603a8Uy1
NJzrQVGHVdf++mNKmrX9AR1mdS/7BOvPiZ+HGXEahXBQcUQIHHTkWATccmVZ
OnxQ1O88TNEIrYVXNj3fD9tNC/TD34MaqXBaQRBXCOn03b8Xw8yLS2RgN07K
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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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
EeJ/1VHv6g==
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN2Wk4VG8Dx3HZihKFEJKipFD2FEMSCZVCC9kakSWRUlGWKEXZlZAsyTJF
GUuFY5mEJEWSLMnInmwRk2d+/b14XnR1fa6ZOefM/b3Pfc4ZknZnTMlsLCws
RuwsLIuY/7My/4UnDIXq2/aTaFoB3fM/3hK7U5zTYN+r7DRY7PHAS1iFCM6A
hZ44fYSHWbhuwir5fQNwus4tF9j3xSlWA6atAnj2w71ErwgsWHlnG+xRTd4G
17OtFIAl3/UYwEG7o6f+Mv27yd4G1gxa1QoPtXVfgCdpd1/Cy77b3oEpnKJJ
sPFA1yOYrJ/oBz/9ZV0Ki9+QsIdVZzqa4eY3D/Xg7ywnhuEwLikZOH9JO/te
pvUMH3HD2XyWYjDjpswwg+lK4TYlmFqX1QDPrz22D3ZdJvcMtt/UagdLGz+N
hnu3HbkEt4dtuwCHa7REwDHvnh+FLXXNM2FjXtWdsIlRMwFzHCha8297Zoc/
wyXhGovg+yc+/oS9Gl99n2N66pTpYkOm5VaSXsM+ZxvXwHTT8sew2OUDqnBi
lO4teOBagzFs1kRzhT/dNiHDPIIGB+C+u/U+MM2sVhGWSDWKhn1jjQRhb0pd
NqzS8u73LPoUGlbCw0IHv8B3K2q+wOlHPr6CresNxmCre2YPYL3P1Vz70P9L
iz9s/n2PJFy/+thJ+OYITR0OOv51D9wxs/sArJlwYhNswVF1Cp782rX03/75
dK/CFHH7kT9MF4tVxMLkE/T3cIqMzhNY/MGp53CWMkGDmzv7Y+BWbVI7HLbW
xRuWNy6dgPVsR47BaUc1lxmh/0N3TVjL4dV6mNo9JgHPeuzYAbuu92KFu6++
MIWlT/7umcF4hm4/DbenXayG+eOL/OEY+mwmbJuhdg823nAlFG7OL8iFOU6x
nIFdK1TewCUZAQdh2ff5nbBXH7syzNmh9BuW23R9Fbxs6NlyY/R34pqZZnrb
n20b4MSsW22wz5I8TdhskKcU/rlqqxnMsyU8GQ6SfuoC01xWBsLbleWvwb6U
aDIsqEu5D6uMrDKABUy3PIeH5e/J/nu/bXYtnH5GlAf2d5fthq1yE3/+Znr4
auYMLPhL4gN8+Y7MChP035aSD299kCEDB3lIxcFLnm7QhjWfP7oIc5alW8CT
4zKW8MYGqTMwRTlbC3bqTA2GyV5yknDTz3VJsHjBUzbYhiWFCjdPbeudYppv
hWQ9HKaW/wbukUzugfW8VbPhDkWJOZhRVBQGz+km8e9H/xkNd3inmfhm2FWj
xBROcUjYBUtfJqnAMt6ix+D2l+VCcGtI/Fk4Zk73zyTm432RENhY8/VX+D7l
bjLMccWgDC4oEyqCS0prH8JjjbENsNe80TX4cI/gD1hOu8EB/joV/Rem+x3c
C1/jElh1AP3LP26GTcSi5GAzVvPlsI7CSj2YR/fz6ATOr10RljAt8NhHONKM
7xzsW/WVCv9yvHMLVuGwvgu7+yxPhYf1vl2ChcLDXsDpwfZW8PfUZR9gq2o6
CX5feKsfFlziuA7uquNedBD9DQbYYeGuEGE4KMTlxzjTZyeWbIU1a0dq4NEl
N/ThSe6zOXC0+GJrmLJv/DZ8VDH4PEwO9ToL6+pz3IbF638fgg9aXkuHm3ku
qcJBZ9lK4DCTOWG4LTigCda7c2V2DOORsGgIZjSwdMCTeX5spujPF0jAxdXz
q2HXgxypcHL7FUVYOvJ6EJw9ztgLt3/gcoRbuXxt4Rj+UEN489o5b9j48HI5
OF31cjjMERPOC2sZ/8mAS5pXjv1i+q/9xTLYa1VME9x9afoTLGchVAgPRFwY
gelx9+7BQplTHIfQ/7OoD2xLeInDZiJJJ+BPLRPKMM+xtTqwy09PI5gWn7Ie
3rJ43B72bZPihJdKeFyGVcQy+kaZXq72KxIettxUB6vtd8+C0xOzKbDfqZ/l
sFWHXDg8dtWtFRaUyPWAb9wdHoXrrRXNYM08lyWH0T85Xw1eXTsoAWt+U10N
i3w/rQZPShbP/cT4zPWbwBS7HZ3wdUEnB5icWlIOT8j3+cLiPaQ0ONDgVAzc
LFURDGvY9ebAYeTdTjC/D7kK1nv0eh/MF9vTBjN6DeThbbn24zB1Yx0ffL62
m9sM/R2Nx0eYbu+xXQdLZzY0w87zXdvh9v6DRbDoapuDcIxsUzw8rtzpCBs7
m/vCQ/tP+MEcOZ+t4cXO7XFwydCxXfDeYMunsJdcuxT89GHba1jOzXoxrF5y
rAOmP/nWP8w0/XPrJJz40/4tXDhxhMcc/bf2PoEpfJ+lYJ6zjhHwmy0WO2Fa
3oAnzLr30yHYd8zFHCaTzZxhFaWf6vCIf1MAPOx5VhSOTjoUD6fnjzOGmLZ/
+SEPtpr06oItPh+sgQVVpytg58n3XXD9+UvpcNrKA9NwUOHcdZhjawOvBfpP
XzkNXzc22QhPqi8yhjc512vBlIuBCvDUDSNzmPyCYyXc+6jOFRafvT4xiNer
DIPg5h3cLbDc95oEOMwntBgOWbQ3H9YrWZ4Ac619UwczGOFX4Cwt/e8wVYvf
Fj5r9foP7Ho1Rhe29tFbeQT9CaENsNv9qk1wO0v8Ejj5ha4OHKMjNjiA42mt
OAIbByTVwx4zOu4wR+XaXHi5SPl1uIQtNRL+qK79APbaLe0FvzxSVgDLBWVY
wK+9td7BdNomDXjybgkdTuTMEYP3Fu9kwGb68vP9TJe3vhQ4iv43cr/BVn80
tsC0N4pVsKjoC13Yl4v6CJ7fsf04rGKoFgIvtirygIdvFjvDSlfUbsLpdTtM
4MAHBQ9hq2WlW+E/hEoxLGiszQ9HdOe/h+vDKib7mN7HrtwHB73b/RmW2/B8
HtbkrX4BKxgoCh1D//17E+Ejp/PkYUp43VX4cejWPTC50dgOFnr61AoWX/l+
N0xplPeCm01NN8IOE5RQOCyqiQsmCcmlwXpN5kM/sL5o5LyEGQKt7+BTVps/
wlSz43nwU7+sAdg1tj0KFkvbxHoc/Vusz8M51Y9F4Hah7iOw3eDGbXDMkZM7
4J28GQaw8b1ecVhdaYMNzPHFkQU+apF+AS5ZPdjdy/SDy1J3YK/jrjSYKzn1
ESyX8DMDjq5aVwrTv569Cev3P2yGE8UnXGCx5ZLDsNmJ8/thIaVkdkv0fzC9
DVY5IiEG0zovCcDnfZOUYN+1jCk6019TxPfBKrZXW+FTbxLs4OGHi17BgiOi
l+D07sAkmM5/PwK2Ws/p/+/z21dnwoInb9jDU9b3CLg+jXsPrBws/BkOoofK
wHE5cT9hzQ28S2Gxj6sWW6G/Q8RwD9O0mZg1MCWD/z0cu1ZQFSb3xTyDr+tH
G8Pim4Rj4EQ3fjLc7BR/Af4cE+kDh2WJHYNVS1ZEw3qDSTvhwp7wbJixWVIC
tl/GVwlTXVIXwbLKd77ArhTpnu84XyyXj8HSIxmvYflrYVwn0F9eNhO2z1km
CcecybkFE0231GHjXHk3WIfBfQDm+JV7AO6WvnkKLtmmpARnmnBdhb08qIJw
3IUbsbDcc7XpbqZTkhc/genjxV/g1ppgGpyovLME3jrO0Q6beZU+gLPEgiZg
ngLtANhkD/sya/SfqjgJ87oHrod91fT04al7rDtgFe/qTTBblb8pPFy0dxms
OMJyGk6fqRv5xnSwsJ8/bKVh0gjP75q/Cwtefv8cTnC9kgvXvzSNhS3vMqrh
oLkmb5hU6dMJa2paHIf1R2an4EnfVk3YS+Tychv0Lz2+Fq7a/UcaJs+3s8Lb
3S9qwuLaNvQuphvvTx+Gm/26q+Hb1Rdc4LDyk1mw2/hUIKzH+iMU9pQ4fx9m
7HI6Ayfum3wGUwMHD8L9F87Vwq5VrsrwsbTxb7A0x+gq+Od7jxm4Xc9jphP9
GL/4bNE/eKINviZ7VgY2rj5fCgdbjJJgjiUzyXDOtTMWcInB5UB4Jm/EDfYK
YZBh+07XYFiu9qoBPLVsOBGmc7Nuhp9ouFDhxH3XeP5t33HwLWwWyjnagf3H
nu6BeepvfIDTq/pnYRrPUircP+bIb4f+JmFxsJlknyyscof3Etyx/9QueLgh
whKOvdJ7FE7nEyDBjhTyWdjqYKwkfPJrzw1YMFKYHQ5cejIZrv8Q39vOdKXG
90I4iF+8Bt5y2q4B1jz8IBvOv/etF56MlrwN29fY/IUpzanusMpMp6A9+q/a
cOjf5zdZy8HiFo9V4D1HO3bDzXGywvC1ECtLOOxzzp+vTA8Uf/WE9UQU2mHX
geO3YMbRvDJ4tWhbCkyNV0qBe/cdewG7tlGvwZ0+rY2wtJj6KXiMcqQfbrd8
sReW72xhOYn+iTu3wGF8FsKwcUfpcph31ycFmENC51cb0wWeZvpwiXXlR/ha
etMJ2CtZrwD2bDl0Hpb7Vn0XDub6GAbTJQ0vw692mKbDiXZvrWARt8ZXsFmq
iTYcn3ygCebpeb8O3vGxYRCmSR3igNk597OR0Z/c/OMLvo/6u9WwyiOLWpjF
xVgRHu5tzYGVH7zdC6dvtLwDh37YZwtbOXachbk467xhwUybw3DmdsNwuL6/
WxV2da3JgINkySKw+UODMljT+cdsK9M2zdWf4Mlspw44ikt/BKYMDRIwXfM1
hwP6y7mlwvYeeuKwuNtoEPz3UZUy3PzEwxF+1aZrBIf9nDCEU/gq7WG9rRfk
YIrerssww32GF269VB4JU/Muj31Gz1ztLNh1jNEEP6CXlcPSSn6FsKooqRVu
92SNh8cPlI7CMfnXfOCmYM0lp9B/ktMa/vLqlQTMoRqiA7OP71CDS84vlYIP
bnppAnsVhnHCVdYaDrDcNG9/C9NHYot9Ybp6ZB0sWK8eAydeFHgCj7EV5cBm
L2LD/1lDrQrmmRX2hIU8Ctpg2o77ZrBNpso47Osjrg6/7crndkT/kgerYVth
5XXwMEOS8QmfP/B8O5yuldYJj11XPAhbXd1QAf8sy3OEBYnHaTD/9FY/uJ5l
83X4yNbcODhIh+IElzsqPIU1AxSMYNOHT17DkxV58jDrF7kOmMKmvAJuW0mZ
hMm7C8abmW7Zt4XHCf2D1D/BE9eypeBm2osiWK1Udiccxql5H076nXkI1tMv
84Vlt21yhhnXdWzg1tOPA2Dqm8pdcFbaxnjYlWuPNJzS8SgPljZ8sxguEd5Q
A7ffNBxoYnrONL0Ljql7+xa2CZOaho2X7X8K/6hO5T2N/saNEXAE6/qNcEnY
oXOwvWaKFuz1rtkcNveWNIfleI9sh08/T3aF6fu/iMKPRySC4MRwy78fmV4s
+yABNmvs6IJvk9fkwzwrbSthpYeJdTDN9Hs6vKhd7DvsG0W+AY8KJ/yBVZp+
nIY5zERXOqO/wGljWCsifhOcbjakAN+rF9GBrWLdVsJC3PeOwIItoxMfMD57
hN3heiHPFjgwMO46HHRkshj2IFY9gDXvXUiA/RkxBfBk68wVuEhD8B1MWe1j
C/N6R9Nh8vG/unAolZ8Biyf4bYDlxiMFXND/KysXPLZ15RY4TDxosBHnn1uE
Lqx3YvE7uD+H7zjMSArJhYUH73jA1M6lUbD7Jt6bsOva215w36nbD2FpW74j
cMAjnmK4/WGkBqxHD30Px3QLiMObpJb1wcbr4+bfY/ztb83DHCdFumH7FG4h
V/RPu18F538LkYe96OIZsIwk1x5YbkNyCFxmc8MKpjusc4H9kxd7wYkZaSaw
TVdwKGzWt2Eb7LiWMw3m2ZTJD0faBL2EaU6bpxqY7kpm/wj7ZlE+w6bfAgdg
lUGFl3CvJBurG/pvfpYIp9oFiMDpLsp+8JXURdtgK0qBHRzU42cAC46o68GZ
0iw2cL38y43wmMPVC3DQGU1u2Pbx39uwZm7Z0Dump/p9H8GTozoNcOZmRglM
2VaVBwe5+jTDZI890XDg09khWPz5m/Nwxq9L7GfQf9zwKPxT6Y8oHKZcvwM+
cv6iEqzntX8NPFA0bQgzqI0s8P3ZC3YwderQ93qmz2n9vgi7qn2iwWf8z0fA
0t5HHsNhVZOP4faiLzfhxsVeBBwzY+kKb9830QIba3Tuhytve/6EOS7bKsIe
H8Y43dH/5XcBeO8qjzWw1xz591umNY/9UoHlNPta4WNJ7sYw3ff0K/h+98+T
cGLpUBI8t+GMD2w27+YPBzuPRME82r/sYYVc12yY5ue5B2ZMDFXAvuWTMvDv
7S5fYBVW76Uwz9XBX/Dwrj/DdTi+qtNcZ9E/0Oc9nMM1sBa2qvr7DN6830kd
FuTwj4Gbovv2w/V6bN5w2pdTp+Cg4KBjcPTaH1dgzerFmvBjB4dYeHLxTQm4
K4dOgSkGy1jhneMnaTA55HZPLdaX7T1fYfFavmqY7Gc/ATdzR2XC8tXdSz3Q
f59gKLx6ud16WC80zg2WNfumATPeihyEbRNsTGEqT4ISXPy90wl2NVmzClbe
bO0PS99Jnq7B9cej4y7c3rCuDX7wwioXjuFLL4FvsLZXw8YHNybD0YaWnTBH
ZGYAXB3ZNgWXfNhMhkXbji33RH/+J/pw3Pov0rDc4a2ysLLLUU2YHv1sGTyV
//kwnNis/PMNro8MCxfYbFVhI/xjT0sgzGOxPR8WCDe/D9PiXsbC5NbmZ7Dv
Z82L/z6/zqwWVhEhjsNeLk3f4OGju7RgxYJDM3B6fNVaWJjlI9859G/bwwZL
GJrKwIJiNfRqzJfoRhJcb7nvDRzbccACDkqsz4KXbHrvBmt27A+Dkz33B8OT
az6cgY+XvkuEKdaHTeHtXCZUmJz8SRneebj+LSz+7YgQbPPAqAdulmybec00
ZaBuFg6zs/oKi6nu4/dC/9TOUjjXv1YWZny3fQifrt+7C6ZK9QTCuiI1R2FX
soPDP5MNzsLSj/oM4JN51Tfg9t7Tm//tj7EnGY7ZOMwDixi+LoSNHc+M0rA+
xeo1wByZvz7Ax79X9cIl/Z5UWGnr7r+wl+xUHKzgWyl4Hv2dvS/BB2p3ycH0
7D+WcJRQxW44cciHBM+d1LGEzeTmJeGQZ4QnzOPmzw6rsmjfgmlP2H5UMc1l
UpYC+/4MqoE5E7RewCpbl+TAEgMljfCw+83bsI26Zj+cnrfsLFwV/IrlAvqP
3T4EGzbvEIYFlVaowrPrXyrA9Z5RwnCdh4Y+HJQvOFvJdGl58QlYczKuHW7h
234enlRZTcCCNkVhMOV8Qgp8/qlaOkwuXBMEz/4teAWLTyefgtNNVJvgZvX1
hrBHEnUQDruYvgW2H1Fm80b/Fxt54Qta+athxp/MXxVMP7utpAhTd2xpgnk7
n+2FXX2eFMDhCoq2sHTJ1nuwsl+eN9zOeHYZnnu/NRyO0VI5AQ9J5mbAxlcL
tf+97qFQBnMQ29fDSlVPPsElLK844NuC8iOwl45WXznTS09ROC6ifwBRC1OK
tojD9IpdFNiTO0cZTmSj3YFPWG42gs1263vAbk+y7GGeoJrDcCKL7GWYRtun
Bk+aZkbCvpzvRGD3dJksWEX/wByB/U9nlMPD1z90wA2GG1vh9DeHy+GCxEej
sBVXSypcNiq95BL6Gx4Nhkd10yXg+pttjrBunJQaHFRntQ8uGkg1gTWXdcnB
ZlrrHeBJIzs+WCAyxRemhPWMlTE9TpeMgcnvHJrh2e0Pc2Bx3v5CeOPttVVw
837neNi7+0EbHBY+7AMPqkqMw3qNZ6zhgFtJ3JfRf8WYDkzqEl8HU03PScHi
KonbYdeoKU5Y4qbYQVi6ybu/FOtb531HuF1gtg6OVBb1g2PMfJ/ArDfj42Dj
2Plw+G6nyFOYo8XfEz6ocu81XCLEbg7L3hLugL2OBKvDm7/FTcJy95aIwvvV
hHh80L/1JqME2wuLlYITV/N0wRw9gjths+N3KuBojZhDME/CinR4T4SAM0z7
GnUdFu+LCoB9xVedhsVI/PGwyom7RjApNjIPHk5arQD7Da+ogdM7E1bAfbsj
umCrtRITr3B+JvBNw4K2Dz/BMhN3eH3R/+H6YvjPPt6NcFB3+n34d+ptLVhz
vcwVeOUcjzk8aZ9lAx86HOYKU9K26MIFOcuCYDL9iTSswxGaAItv2LYEHrJa
mg83OzwfeIn5WHCzDg7LUKmHn/Fyf4f1+gqfwu8cQ/7ADBmNSHhpxZKVV9Df
6dU52FX0xibYNUvLAp44t1gHlh4ktsMJ74KPwO2bdcVgJxlOdzjGhfb3BdNW
AUHXYWOK/jf4zFf2BzDHSE0lTFG9VgCXyBs9gpdGsL2Dvc68uwGHDQbQYbnc
A87wtj2sDJg++sEYnkv2F7iK/tvMtsJDsyxbYDOPlpXwX3M/XZjn+dHJYqw3
z+aPwbTxthb4Ds9VD9hX+cQLmNfpbwis4tWVAOdW+T6Eh6l2V2HPtYwiOH2q
xxa28/F5D1upndoNu3+e/QELevdvgFOUL8/D9UXOXPCf8D+r/NB/ZniwiGmv
4YvysKaG+zt4peGMHjx5aSwX/vTI2wqmvDwXBZeyTZ+DyXNTXvAbmwuhsLjm
xSPwTMlUKtzsO6sBG4qefwmHlfqKw5Xekx9gvfn5+UJczz6dG4AZpIBueK3y
xCJ/9Pdjp8FskZ4isGt5cAbMPTq2FZZm5boJK5t4GMDtu265wIE5v6zhmECe
/fAs99kLsHHVnW1whNPobZiDY6UAvP/NmUdwiV70VAHTcht/lsBewataYeVg
t2ZYrvruS/gofXgIpi8WTYIzdruyB6C/QaIfLJQ2JAqbhUjYwzlsLkowT+1D
PdjeftAQpnFLycA6laftYN99j7j/ef3ARVglVGaYyrRDoFMEPPw2qwF+9r3v
MZzOI/cMFtntSMBWJk+j4ay0Hy2w4J1tF2A7jlM/4fqG50fh7Q69nIHoz6e6
E1apJq+BNQ8WrYEtZOgq8GSExiI4KeSkMUz58Op7PtNLBr+fhMn8pNdwtJG9
Dyx+uPwxvOdJdxTcHK17Cxbns8uGw5pprrCQx7cKWG+VwQFYqcnmC8wwr1WE
z6l2/YKpcUaCcOtda65r6P/53e/nTJ+c7VgLS4sc/AKvOHFCHW4/+vEVTCfa
98Mx8WYP4C/rrU7Bxm0t/vBE8NcrMIfYsZOw4sDxWLjE8useOMq4jQJ7JZ7Y
BIvlHaPBch1dS2GawJevMH2N/cgzvN/76AScaE1/Dwd//bw0CP2TTz2H72kf
WQ/zfOuPgVvSWjRgmqSLN6zCZWEK+9qNHIOLXT85wSqp7pqw7Qczf3j4+5gE
vFmt+S6cLuXFCgslHM6Frci/e/Lw+qKmaljw0cVq2NbhUCdc3zubCZfVfZiC
gzZeCYW1tpkuD0Z/R5YzcFdsozQ8+TjgIJwxd0ATpvSzK8Mxdu8Pw2TZ66vg
9Df7XWBxZ66ZXKab5RsC4ebsW22wQozJfThsiKcUzpytfwbryYUnw3vtjGth
huvKQJin5u03mPokmgxPKxjNwK4/VxnArHF1fNfRf+s9WXjbX0MZuN1dlAe+
Qa4lwTF5iT+fMr2ofq8FbDwm8QGOV65xgzmUUvLh4wkGwXCJp1QcrMn+JhH2
yn90Ed7jok+F5SZlLGGvptdvYbpKthZctXNPD5x4Xk4SVkunzcJmhU/Z4Pc8
evw30H96W+8TpsPPV8nCNPX8N7B7p+4u2PeiajZ8zqDyKKzyoigMTsjbdRYe
/qPhDvevrrgBp+8oMYUtr+kkw1Y+JBX41zBRCAuWlAvBjy20G+B6hu4fCuZn
eVkvHKT1+it8czPpL6x51aAMzo0pFQxB/7Lah/DveU05mMJifA0+ebpkN0zW
aXD493rTTktYPODgXjib9MoTbq74uBkOytpxCw5jM18OXxN8mQLr7f48moP5
5afxAmZcO/YRHh4sboSptK9U+LDF9n7YldP6LtxTUcRyE/31v12CY+TVheH2
6/ZWsHN8oQIc84ZOgsmcavqwMZfjOjjQo+AEzGE4wA6/7lA5D5fcdPmRjfNn
HzUM9qobqYGLC5XTYbllZ3NgB6n8VzDdaPw2rB6h1AQnhnmdhRX+PhuEzd79
PgQbOiuy3UJ/3kuq8K3Peath2v45YXhIb5si7Bt+ZTYL1/fnuXthlUaWDlhc
cqstPLwikICHbz/1htNNOVLhb3Py4bBV1PUgePb0kwxYsInLEVZulSuD6wVC
DeFIfconOMhsuRwsXLBlBNaMDeeFX0nlcISi/6eVY5lMh0RtFocpQjFN8EXW
bGWYfESoEL51VtYIFr937x5c2ZVpDze3ivrAaw9sugyHrU46ASeXPY6E9Y6v
1YF1FWSyYMb9lPXw8gcZ5TD1qxQnPLN8YyvsKp7R9xjX/6uPRmHpE5vqYK2f
0kvC0D8pmwLHWKdLwDGdcuHwivdSarDx2lwP+Ll2mgnMYatoBp/PW+8AlzzM
V4Nt1qX6wl7dqqth56h1MbDc+uK5DKbvs6fkwHT7HZ3wmJdkFZyYVlIOO/1I
boPN6KQ0mPPo2nGYZ0NFMFxb+4D7Nvo77HaCn+6UWAf7ZrzeBxc/SdoOq/QZ
yMM9a9cchIdl6vhglahERzjdyXj8EdM5HOJ+sFVWQzOs550QBwsOHiyCWQdF
n8L1m5vi4S6r+6/hIBdzX7j//eoOWJPy2Rrm3x0/CU8OH9sF2xSK8NxBf/l2
KfiT7D0pmHzGejF8Okl4Jyye+60/nel1K+8egptH7d/CrMFCznAYc/mDF/2J
DYD1PBwj4E1uq+JhxrMBT9izOyYPpo67mMPfzAVrYFfln+rwubroLlja66wo
LKstMA23U8cZaUyzUaN4w9F/yqvrn2X5N8LGatMVsPSDSC2Yw/tSOnxaYKU5
XFI0dx1uCYlwhb1mrpyGyfN8QbCcxiJjWNgrPAGmXwpUgH8N8ObDiS85VsKD
NnfqYLO56xOpmK8ty7/DPJrcLbCh8e0/MM03tBimVvKsjED/0uUJsLZG2CZY
ZT78CjySu0wHHibx28IVG0OPwOl+Mbrwi6Sl7rBVudAGuEnw1nVYkDV+Cbwq
jPsBXL9LbDCF6UvsNwvgoMCkeniRD9c7WLNqbS78ePwGHZ5kT42EfZyXMGCK
nrQXfOb7dYFI9A/OsIBDji/eAotXb9KAKz8G68LNi3PE4HVGnMfhMAP5+YfY
flWQB6wXkvsNPqDJcRNm1ChWwWsKrj2EqdzURzCvAnsx7LpPLQRe/zjwPSwd
WuwMH5dk64Pb3+4wganxAfNwDE/pVlhNgFUoCv1NtPnhjjB/eZjjTsVkMtPp
ixftgUsadn+Go/z9rGAvvuoX8MPZ+XOw3MG9ifBnr6uhMD2i7iqsOPo3FU78
YGwHU05feQmb8b/fDZvQGR9gnsOmG2EBG98BmBbdxAXPfZlbFI3+zeZDD5he
au4jAqusan0H72yc3QoPmx/Pg6OMLhvA6XHtUf/e/+aPNWz12fo8nK176QIs
KNJ9BD5dNnMbrj96cgd8YMfFR3BQfK84fLxwugTWbHNkgUOUvJvhSdHB7iSm
25/+HoIplq40+NCWC+wx6J/4MwMeeTwlCot3nL0JZ0mfV4Kb10y4wKEpk4Zw
mPX5/XCUhJcdrJc8vQ0uSZi4CDO6LgnAPKvPRcBUScZUItO+ceOPYVe7q62w
oKAnAUunLnoFN0SOtcDt3wOT4Kd8Hj/hGClOfzj39i/OWPQn37CHvyw7uwbm
eMS9B5a6NaoCl/SGysCRXO7GsNdG3qWwzI2fJ2E5x4jhBMwfzjM+MP0x/3u4
KGgkCk5k3t7Dxexu2bCZrHAM/CVwuALmcY6/AEuyuX6Badlix+DQgKFfsO9Q
0k54LasLVxz6y0lKwO/9B9fCw66pi+CMRc7qcPoT6Z77TKf5D+yHrX5mvIYr
Fp0+BQtulc2EuQP6r8D17jm3YHdWp1g4KE/eDWYE9FFgzbHcA3A2myMNnlRU
UoL9rv34ClM8qYLwBY5TEzA5X206nuno4N6ld9F/svgL/Gmxw3q4WWVnCbw9
hK4Bh50vfQBXcJNNYb1C7QD4TGiPE8z4XXES1l5+0h+mquvpwyrh3+/Crher
N8HGK+1zYekXe5fBodHd1XD7n7qRe7ierbLrhGN2mDTCZ+99m4KNfd4/h4XF
bJffQ/8S01i4L6lLGi5hNHnDrZI2mrCXlsVxeDCt8zAsd7VVE5aWsXaB6WXH
18KB2R2BcCJLByvMqXDiPmymY0O/i/F81v4M5glgHieuX6pWtTCt4mQWbPfi
6zfYl+1H6L/XtSxnYJXdTmfgrIo2vnj0vzZ4EGbTPy4Dp9NcleGAui8k2Ipz
dBW8/sAxC1hQ32MmDuPR1OoG11+faIObjh4NhoPenC+Fv3V8ToQ1uWaSYYGT
R6jw5N7LgbBzf8tbmHKTQYbpbhY9MLnuqgEcNPFpFhZfxroZ3nPJnP8++htd
44E3s3yShcPCOEdjsR4Hm+2C9d7d+AA7Lms+CjOWL6XCRZGHz8LU/WFx8FaR
phuwazjvJbjuwaFkWLoxwhK+seFjIdy+QoAEu1JMG+AY01hJ+ILyh17YOEqY
HU5+efAvzNEU3xvD9NiuRsEE9BcQr4HJtQfkYC+zB9nw7MH3u2G5WMnbcEHr
fkuY/inVHY62bfCEE4U2HILj+01uwWZHHqvApWffpcA895gLAtPL/hi/gGmt
OX+imb4cUN8I+65WaIdXLDXuh1WO55XBdVFvWRLR/75SCpwuZiQMp3+lXoMf
pdcpwFbi6qfgWvl9+rDgiRd7/22vqPYEXJ+0cwvsp2N4Hg7qLF0O89XVhMGa
a3V+RTFdfnhvOjxpU/kRTuh48wqmPNQrgGMdDZpgMnM6w0Vj1YOw+HrDy/Cs
jz5bEvrbv7WC7RZXr4bD0ky04fGIPYqwHv39OjhN7PVemCF9iAO+lKFnC1Md
mn9EYr1SpHnDrhkWtXBEye5wWLqvNQeuN6jKgNtlLO/ASk26ZXCMU8dZuMS6
8hNsnGVzGD49uGsE5hjsVoVJFyo4HqD/ZrIIrMy2Sxz2cvkxG4H15k65MixH
ceqAQ0R1jGD68CABD2YQ9nCivFsq7K6sfRk2OzMaBIuWl0XCPLnMG16cj8ak
LJg2OmEIf/lSWg77brsgB4+e0mqFVTxmeOFNkyWj8PCzy2Ph2H+A5pJk9B9n
NME8fCUSsJWyXyH8PHGnGizoxRoPX9n8ygSup17zgV2LdzjAQVOc1rCf/ktf
WFMtRAcuaNaIgScvLJWCl598kQNTisI44dtj26tg8gxv/x2Mt39xGyyuEVkH
T/NuH4ebLwk8gb8nFXE/RP+XseHwLzn1dbDenLAnLF1SuB1m7LxvBl81UjsI
U33F1eGptgJH2LX0wWo4xlnVD5ael2TcZtpylhoHt5PSOuHdt1SewjF+Gypg
E1Hqa9i4/HEafDVbuQPmYN18HW7ckT8Jl+yiOMF73yrxpKB/oIIR3Gv5XAqW
q8qThx8NK+6E6ezKK+AbV54dghP1CsbDmI7iVXSGzYLVP8ElyXkBME/1iyKY
V3FbPExbrHkf9q/MzYN9Dcp84dVmW2tglRAdG7il92kXPFxTuQsu9FaYhtO5
90jDxdxPeVPRf9+bxXB3gvxGWDDUcCCUaTmFJ1pw/du3b//f7xa8tnOEGiLZ
T0rF8Scyr1+0ZUoJx/tJ3hjvQ28JccMLZa9i8fzEnB9czPmyqOLt+Id+0jrM
57I6wtiNd4Mh3wBpCuefVx3RP/154o3JAKkO68XmOiJ8ZWaKz+0BUjLWt2+1
xGN7+cWuDQMkL6zHcbVEdeyxkdQVgyRDXD+MawmfXamKW8wGSRJBzOsdWy0h
LjDxli9+kDSB63NxDeGmpjBq1TVIqsH9xJkawqyfZ15CZoiUhPsf6RpC1erA
iP3ZIZIn7tfa3hBdqRbGaq+GSAbfmPeXEW+IM8mW+x8vGSaJH2PeD+u/IYYM
DzbTzIdJY7h/Z1QTJ+oueT94NEyqxvPG82qCcqopRm96mJSA5yOnaiK7xehY
zb4R0lk8z0lUE/zHfjXsfDhC2lPAfP5sfk1kfxMdejY9QhJVYD4v33pN3O57
mUQy/UkaxfO9zmsiZPxj92/KTxINv0f8phEXDaX6pjlGSfH4/YRCI5zdwi3W
qY6SzqwMJLLsacTrRrnga6dGSbtvufzIFqER4UHajlviR0ki7ObLKQ1VxCLW
5Tkb342SRvD7X1AVIVKvVH2N7RepEr9X7qgiPry8u+KQxi/SXbeVgbm/Kokt
dzlyUzx+kVx/zGbmZVQSJr+aaq7l/CLtsqG/f2ZVSZi2J99Z2veLJNT67vdz
/kriYmrmfkPpMdIQ/j5QU0Fc6ZUONTs5RirH3zOuVhAuz57x66aPkWJ1b7kU
qlQQop/Wisn2jZGcX52LKhosJ4Rli7XWy42TtFVOvCh+WE5o/za7Z3BunCT4
RP/bC4tygl83TqqwZJw0gL8f8pQTZ/xzQ0K5JkhlD1YrlFQShEWr6VyfxQQp
WpjdvPQiQZjY9M2OPJ4gOUUM+5QpEIRA5vyNyrkJko/AE33/ujJiUdYjm9uH
JkkbOP1jAtXKiOY0X61LlEnS+9+HvgellhKR95w2ULmnSJf6N2y7wVtKbJAY
K3B3niJJtc1cuXm5hNj6uzWou2Fq4fx4RZxvvDm3W/33wvnwirD7pOT1Ke33
wvx/SZinlPC0CU4vzPeXxITgyLuEW9ML8/sFceUi9bAL58zCfH5B2BS4hT0M
nlmYv8WE9oqGqIRlfxbmaxHhN/c74/XdPwvzk2narFHU5tmF+VhIqK6vDfen
zS7Mv0LC4fnsB7FTcwvzrYDY9Gb0OssKxsL8ohKN+85u/1zJWJhPVEI3xvqK
nd/fhfmTTziQnJ576s8vzJd8wqTucNzcMhbt/+bHc+JCr8y1Kz4s2v/Nh+fE
BmFvo+YxFu3/+j8jrBK2DGa6L9L+r3ceYXsx8tvLqUXa//VlejBQhB7Eqv1f
z1zCfCApYY0Em/Z//XIJrr+lFsGVbNr/9XpKGK2aVHQ4x679X58nhP27Q+07
lTi0/+uRQ0SMU+reLOLU/m/8s4nl7AmCq7o5tf8b7yxifcbp1eGfFmv/N76Z
hEd99Fbh7iXa/43nY4L/Ys769Uu4tf8bvwxC8TAlv8toqfZ/45VOaLs3kl2p
y7T/G580QlFx3f7VBssXxiOVSL5QQXbg5Fv4/inEqFB3QgXnioXv+5AwGF1e
dmfzyoXvl0zYxaXKq/ryL3yfJOL8tpiKQU7BheO/Txyg5/TMtKxaON57RG9Y
/PFqDpGF44sjIj8NDO94KrpwPNFEi0bK3kJWiYX9RxLfT06duJUmubC/cEL9
jegNuq/UwvZvEXfDe0apl2QWtnedyAx0XRztJb/w+QCCrfRxuJ6q8sL7LxNr
JHQGvm7RWnjdg3AhXxLrWWyyYDvif/zkP9c=
         "]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1: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

         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{0, 10}, {-14800, 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"fator de Seguran\[CCedilla]a ao Colapso\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 10}, {-14800, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Klever Tamano Calculado\"", "\"API Calculado\"", 
       "\"Fator de Seguran\[CCedilla]a ao Colapso - WellCat\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6827127769256763`*^9, 3.6827128188090715`*^9, 
  3.682713003826654*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3UFu615DxuEKGLANhmyhM1gCTJiCRKZIH0iIGUvoajpmH3cxpY0b59g+
PnHutd/U8fMo+r5bJ3Gd/o/9ix0n+bt/+49/Ov3Vy8vLf/7t5//807/+9z/8
5S//+j///DefP/zj//zXv//bX3/+418+/+fvP2/z9e8PAAAAAMj49fb6MnJ6
v151+Xd/088Jk7uUN4LdcUiWOcbGVsZ9OU94ffs1vqr4YXSX6x1Ie/nfFxcX
F5ddXAYbr0l6rlOuVw1vVNkbkp4HePhAcnFxcVl+GWy/bu/1VG8x3OtRHvbs
5eXl/5bp1qFVfulvzKpxlxUXbBXrLurqf/aF/7k/vfykv+pTmb7W03fkHKHX
7urJaz71u8AOSc/qpIcbyl2Y99OgIufEnH8eXlE7/cCZBuyX9KxOerhh+jJO
9Qy38lyCSWo+yyQ97NTy7kjPctLDDXNnUE+umjnz7eNcHkfc2Cvp2cLTpEd9
tlI/w+3ckmqVPq/wvh6eiPRsQXoAGqRnC9ID0CA9W5AegAbp2YL0ADRIzxak
B6BBerYgPQAN0rOFp0mP7gAbWV4f6VlIegDapGd10gPQJj2rkx6ANulZnfQA
tEnP6qQHoE16Vic9AG3SszrpAWiTntVJD0Cb9KxOegDapGd10gPQJj2re470
6A6wqYX1kZ6FpAfgJulZl/QA3CQ965IegJukZ13SA3CT9KxLegBukp51SQ/A
TdKzLukBaFvYHelZ7jnSoz7AdqRnddID0CY9q5MegDbpWZ30ALRJz+qkB6BN
elYnPQBt0rM66QFok57VSQ9Am/SsTnoA2qRnddID0CY9q5MegIbl3ZGe5aQH
oEF6tvA06VEfYAvSswXpAWiQni1ID0CD9GxBegAapGcL0gPQID1bkB6ABunZ
wtOkR3eAjSyvj/QsJD0AbdKzOukBaJOe1UkPQJv0rE56ANqkZ3XSA9AmPauT
HoA26Vmd9AC0Sc/qpAegTXpWJz0AbdKzOukBaJOe1UkPQJv0rO450qM7wKYW
1kd6FpIegJukZ13SA3CT9KxLegBukp51SQ/ATdKzLukBuEl61iU9AG0LuyM9
y0kPQJv0rO450qM+wHakZ3XHSM+vt9eXsde3X5PrTu/D+72fprcHjkZ6VneM
9Fx8ZWaQl68J16Z8lab/6Zyk640H1wFHIj2rO3Z6Pnsy3NG53uDzqlFpJt0C
jkF6Vnfo9Ezz0t+ichVwUNKzuqOnZ7Ib8z2tdhVwTNKzOump3+Lz/+31AGfS
s7pDp8drPcAC0rO6Y6dndBqbM9yACulZ3cHT86V484739QBT0rO6Y6UH4E7L
uyM9yz1NetQH2IL0bEF6ABqkZwvSA9AgPVuQHoAG6dmC9AA0SM8WpAegQXq2
ID0ADdKzhadJj+7Acxq9E/z65Y6/NXF43evptOTzsZbXR3oWOlB6rh9NMPoY
t7PiS0s//1n/9NA1P9zgzk+E+40PkJt8NWv9/r/30XSTmX//PXzQHev6XukG
n3bV/VB8z+PyiRf9QF02YqVndUdJTzHAqv8sR2I1PWt/pFsmPePIrlaFysx9
0hArO2fn9e29GGyDNfMy6pZPLGe84HlZT3pWd5T0lAYfT10M6e7f76fu+3qG
Y7H9Qdb9SB6sIG/jqcUt+/38X8PVavjs7rI/MZp/9dd9zXBytGHyudzdgyhv
391ssJ72P0x+0ezMiy+bKP62b9/7RtW13s4Ry/xaPT32eh7vgOkZ7Oo0Bmdp
4ZX9v877SOOJo1u+NNJTTO3uM5kw/XVzXz1UWdLy9t83K/4Wl38OZj+aU+Xw
ez/noo/Xgo0X3pE5lpo8JbuuJJMRdmviZJ7S8yDHSs/lpcVJCcY/jLW+tLS8
rty2T4NS3nK6m9BcHeozqf26yl3KSbOLN9glGpSn9vjnXkgapmfyVLU5T6ia
Oc3gfCSueL60cOJontLzIMdKz7dlu+SlxpeWDoZua9s+GuTfW965Wy56VbT2
6+oLNnngs790erStP+7Xnvlo+rjr30czG/OEqtk6VJ+9LJsoPY92yPSUW8Lq
6yzVe8zFYD97PdWjXaPjj9enh829kvvSU+bMng53Gh9wm55NuXziZJ7S8yBH
SU/92Fr/EsXtAdg4w23mxZdK1Cqv9YxWkOlrPf1pADde67mZnuII2Mzidccn
yiNi05erZmY+nX59hLOvdtnpYYnRYCtPwPmNieN5dqP+Rn2kZ3VHSc/g1Yna
6FyyGZx9X0/tlLP6/lR/9Pn6TrZ+wc7nxA1eTi1+U7mCNH9d7QEPbz2/eNcU
V5dhNPPbez3dWXSLNwfwQ0nP6o6THrLs1fA8pGd1z5Ee3fl5pIensrA+0rOQ
9ADcJD3rkh6Am6RnXdIDcJP0rEt6AG6SnnVJD8BN0rMu6QG4SXrWJT3AD1W8
LbrycQbVt3XfnjiYtW8pfZQDpWfZMP41+y2l5WcZLP8gstGHZa/hD78s1dcV
sA/FW8NqH3k1+bSpJRMvtvkMt26rtco28PdmdfD0rPuXX6k+S4fxTHoGX/E5
/ryZhrW3842PkoOnMvys2eZH/i6f2M9sZIXPcOs3WX++AfztWUnPun/8FdKz
fBhXv6W0MnTb3z5w+fSycuekvds1+NjOudWh+Tme1flfV7L6tyTc+ipVYeMn
uP8LSdtfibL2Xk+5vfrDrd+fzEp6/vw/wXRWf7bXU7r/+3q6zXrr829Hg3m6
0z/a7ZocCbhc3/o46tYyVud/bWt9B+/2V6lKDw9XHGaofgT98omDWa6Wnk23
e79x93uveoit0/PbD7Y6qzXSc2sYN1z3IKYb+ZnBXB/YlyLcqMvk222Wft1N
f7vag7qxnKMvFZIeHmv4BOhH7vXc+zz5rllVzS3nQdIz/YPc24u7/hOskZ4F
w3iJPl93pqc4xFy8sDRZwsJkfWku43j+H+VRuEkuZ48W1v9AkDZ6afPLKq/1
/E56ltt6Vo1f8b+HSc/c9J/zn+lq6TCumdv/uCM9tW9qq+/1NFaE9pel1r4J
bnpXez3sQmWF/aifJHTHxHI2d6TnR5Ge21v7n+OOYVw1OMOt2I7XvmN0UY+q
K0p3gkPrezxnz3Crzn909G5RerzWw49QnDXz7TJY13hfz/C1z3veLvF40rOj
9Nw5jKvqb6fp53z9jtGZTXpx6Kt8G1vjDLeZZZp5X091/jOH4NoHBi93Or3Z
64GfRnp2lB5+xw6PRcBza291pYfdKncQ7fLAzyI9HfUBiJGejvQAxEhPR3oA
YqSnIz0AMdLTkR6AGOnpSA9AjPR0pAcgRno+dAcgzqcZSA9AmPRID0CY9EgP
QJj0SA9AmPRID0CY9EgPQJj0SA9AmPRID0CY9EgPQJj0SA9A2MHTozsADzG3
+ZUeADYiPQCESQ8AYdIDQJj0ABAmPQCESQ8ASQd/X8+H+gDESY/0AIRJj/QA
hEmP9ACESY/0AIRJj/QAhEmP9ACESY/0AIRJj/QAhEmP9ACESY/0ACS1t7rS
A8DqpKejPgAx0tORHoAY6elID0CM9HSkByBGejrSAxAjPR3pAYiRng/dAYjz
llLpAQiTHukBCJMe6QEIkx7pAQiTHukBCJMe6QEIkx7pAQiTHukBCJMe6QEI
kx7pAQiTHukBCDt4enQH4CHmNr/SA8BGpAeAMOkBIEx6AAiTHgDCpAeAJCdX
b7ZQANQdPD0f6gMQJz3SAxAmPdIDECY90gMQJj3SAxAmPdIDECY90gMQJj3S
AxAmPdIDECY90gMQJj3SA5DU3uoeJD0f6gMQJD0d6QGIkZ6O9ADESE9HegBi
pKcjPQAx0tORHoAY6elID0CM9HzoDkCct5RKD0CY9EgPQJj0SA9AmPRID0CY
9EgPQJj0SA9AmPRID0CY9EgPQJj0SA9AmPRID0DYwdOjOwAPMbf5lR4ANiI9
AIRJDwBh0gNAmPQAECY9AIRJDwBJ3tez2UIBUHfw9HyoD0Cc9EgPQJj0SA9A
mPRID0CY9EgPQJj0SA9AmPRID0CY9EgPQJj0SA9AmPRID0BSe6srPQCsTno6
6gMQIz0d6QGIkZ6O9ADESE9HegBipKcjPQAx0tORHoAY6elID0CM9HzoDkCc
TzOQHoAw6ZEegDDpkR6AMOmRHoAw6ZEegDDpkR6AMOmRHoAw6ZEegDDpkR6A
MOmRHoCwg6dHdwAeYm7zKz0AbER6AAiTHgDCpAeAMOkBIEx6AAiTHgCSDv6+
ng/1AYiTHukBCJMe6QEIkx7pAQiTHukBCJMe6QEIkx7pAQiTHukBCJMe6QEI
kx7pAQiTHukBSGpvdaUHgNVJT0d9AGKkpyM9ADHS05EegBjp6UgPQIz0dKQH
IEZ6OtIDECM9H7oDEOctpdIDECY90gMQJj3SAxAmPdIDECY90gMQJj3SAxAm
PdIDECY90gMQJj3SAxAmPdIDECY90gMQdvD06A7AQ8xtfqUHgI1IDwBh0gNA
mPQAECY9AIRJDwBJTq7ebKEAqDt4ej7UByBOeqQHIEx6pAcgTHqkByBMeqQH
IEx6pAcgTHqkByBMeqQHIEx6pAcgTHqkByBMeqQHIKm91T1Iej7UByBIejrS
AxAjPR3pAYiRno70AMRIT0d6AGKkpyM9ADHS05EegBjp+dAdgDhvKZUegDDp
kR6AMOmRHoAw6ZEegDDpkR6AMOmRHoAw6ZEegDDpkR6AMOmRHoAw6ZEegLCD
p0d3AB5ibvMrPQBsRHoACJMeAMKkB4Aw6QEgTHoACJMegM38ent9OXt9+9VP
fD9Np90xcTDn19Pp9eX0vumDWJv39Wy2UKvrB3DhMhrL68ZD8DJyZ0YvsKHP
9e97lfz81/cK+LW+dhOv/7pj4kU/qXLdT3fw9HzsrD5nk2H2NeHalK/S9D+d
k3S98eA6YHPX8tQnXlfn5RP7mYzsqT7Ss//0TMb2YNyOSrPDp0ewX58r3Ovb
2+iQ2Xli8Vzx/MPyieXM7fU81KHTM81Lf4vKVUBQedyh78hgxbz8sHziYObS
80hHT89k0H1Pq+7rAzF/uIPz1Hs9/zfjmdIz9xg/PWN6LrcYjFsg7/1Uaccq
r/VIz+MdOj1e64Ef7Lp+Xp8KXs8MGp3MtmzihfQ82rHTMzqNzRlu8KP0p6LV
zk/7k/f1DM+83t0ZbtITXto/VX2GU5xo6X09wA8nPftLD8CeNbpznPSoD0CS
9EgPQJj0SA9AmPRID0CY9EgPQJj0SA9AmPRID0Ce9/XoDkCY9EgPQJj0SA9A
mPRID0CY9EgPQJj0SA9AmPRID0CY9EgPQJj0SA9AmPRID0DYwdOjOwAPMVcf
6QFgI9IDQJj0ABAmPQCESQ8AYdIDQJKTq8OLCsDB06M+AHnSIz0AYdIjPQBh
0iM9AGHSIz0AYdIjPQBh0iM9AGHSIz0AYdIjPQBh0iM9AEmN7hwnPeoDkCQ9
0gMQJj3SAxAmPdIDECY90gMQJj3SAxAmPdIDkOd9PboDECY90gMQJj3SAxAm
PdIDECY90gMQJj3SAxAmPdIDECY90gMQJj3SAxAmPdIDkDdXnyOkR3cAHkJ6
AAiTHgDCpAeAMOkBIEx6AAiTHgCSvK9HfQDCpEd6AMKkR3oAwqRHegDCpEd6
AMKkR3oAwqRHegDCpEd6AMKkR3oAwqRHegCSGt2RHgC2ID3qAxAmPdIDECY9
0gMQJj3SAxAmPdIDECY90gMQJj26A5DnLaXSAxAmPdIDECY90gMQJj3SAxAm
PdIDECY90gMQJj3SAxAmPdIDECY90gMQJj3SA5A3V58jpEd3AB5CegAIkx4A
wqQHgDDpASBMegAIkx4AkryvR30AwqRHegDCpEd6AMKkR3oAwqRHegDCpEd6
AMKkR3oAwqRHegDCpEd6AMKkR3oAkhrdOU561AcgSXqkByBMeqQHIEx6pAcg
THqkByBMeqQHIEx6pAcgz/t6dAcgTHqkByBMeqQHIEx6pAcgTHqkByBMeqQH
IEx6pAcgTHqkByBMeqQHIEx6pAcg7ODp0R2Ah5irj/QAsBHpASBMegAIkx4A
wqQHgDDpASDJydXhRQXg4OlRH4A86ZEegDDpkR6AMOmRHoAw6ZEegDDpkR6A
MOmRHoAw6ZEegDDpkR6AMOmRHoCkRneOkx71AUiSHukBCJMe6QEIkx7pAQiT
HukBCJMe6QEIkx7pAcjzvh7dAQiTHukBCJMe6QEIkx7pAQiTHukBCJMe6QEI
kx7pAQiTHukBCJMe6QEIkx7pAcibq88R0qM7AA8hPQCESQ8AYdIDQJj0ABAm
PQCESQ8ASd7Xoz4AYdIjPQBh0iM9AGHSIz0AYdIjPQBh0iM9AGHSIz0AYdIj
PQBh0iM9AGHSIz0ASY3uSA8AW5Ae9QEIkx7pAQiTHukBCJMe6QEIkx7pAQiT
HukBtvXr7fWlc3qfThtMfz91E17ffl3vX504mM3r6fRazPznk55ddWc4Woej
sbxuPAQvI3dm9ALb+Vr9ulXyayW9rICfUyep+Lr+esvvq6sTJ/eoXPfTNeoj
PT/UZJiVQ7ob6v1P5yRdbzy4Dtja5xo4WDe7HwZTP67XXlbV6zpendjffmRP
9ZGe/adn8gRqMG5HI3yHT49gv+rpGVTjun8zvWX97sXM7fU81KHTM81Lf4vK
VUDS8IBbH5TBkYnzvwdr6+WH6sSe9Dza0dMzGXTf02pXAVGXF2Jf395rx9ku
q6m9Hun54W6n53KL6hFl4DHqzwUvU+99rUd6Hu/Q6fFaD/xc13VwZr38nDw+
A250httk4sf1rtLzUMdOz+g0Nme4wU/Sn1NQrHrFuyHKFfLO9/UMz7x2hlve
wdPzpThlxvt6gB9OevaXHoCdkx7pAcibq09jo/0z03Pvo9AdgEeRHgDCpAeA
MOkBIEx6AAiTHgDCpAdgK5NvKZ1+6ePlbeBH+ZbSjwXv63nu9Oy1PtNPEB0N
4VL92stHi9bWi88rxp882v6QqOhHSBUfjrrWIv3hBz7s8BO0SKl/S+ng+sln
vB35W0q7LfbTpOepdny+t5OVz7NtDc7Rtd9pGY774mPad5CeNW714WPu2FT7
Ww8GU3xL6XVz/UzpmbvBvtJzHm3n7/2oDrPlgehG9Hi9+P7s9u67fiYfUXp5
fvX69nYqx/r74Kfxj91dvo4IvPS/8q04hFA5nDCZQzmxP7hQPpziEMaiRRrM
dv7DvcezHS7ddJtQ+eNMF17YjqSZntqzweEtj/R9PeW2+snSU73ZvtLzbWak
3Vue8d5+Y6M4GOSXG5ZfNX+ZdWXaYL+i+KH8tN32HMoFPW/Fh+kpVsnaylid
4cd4vlO12RbPQiuHQqp/nPHCS8+h1L6l9HrV8AnXgb+l9OaG+gnSM7rlk6Tn
8npjfbM2vrZ8LtV4EbP2G8f7GqOJtQMIs8/tRovRf2399BBE+Z1E7dd6pr90
5pjGzIQZ5ZJM/lLtP8544aXnYOa+pXQ0lA621zMy3Ur3dpeebrGr6Xn08v6x
2ZHWehJfGc/lrs712VnzN95OT6k/k+Gu9LTnUHyhcPUw2JJFKh9XMwWVL6O4
HoVr7WqNjsIV3wsmPYc1eKIzWVcP9y2lDeXN9pie/gYLH+ZuzI+09rP472vr
T+Gb2bojPZPff3d65vdlytkN4zI+CtZepMGc517rqc22eld7PcyqncH2/VNl
4B3nW0oX2nt6nk39VZDxD3PXDl+uWHevZ/i6RmWduZme6r+ar/WMF2m8o1Sd
4eCRjfaepovdz3Z09G5RerzWc2y1bymdeaZ3oG8pXUh6fpbJ86f60aT6tb/G
B5zn71v5jfWtaznyJ2vanemZWVf7I+aVM9yKY2D9m+uaizQy876e2mznDsG1
0nO90+nNXg8sJz2wguc9MAKre5k5AfvRy3UlPfxgxX6no22w2E7Toz4A+yU9
AIRJDwBh0gNAmPQAECY9AIRJDwB53lIKQJj0ABAmPQCESQ8AYdIDQJj0ABAm
PQCESQ8AYdIDQJj0ABAmPQCE7S49ugPwBMr6SA8AAdIDQJj0ABAmPQCESQ8A
YdIDQJKTqwEI21161Adg76QHgDDpASBMegAIkx4AwqQHgDDpASBMegAIkx4A
wqQHgDDpASDpZbJV30V61Adgv6QHgDDpASBMegAIkx4AwqQHgDDpASBsp+nR
HYBd85ZSAMKkB4Aw6QEgTHoACJMeAMKkB4Aw6QEgTHoACJMeAMKkB4Cw3aVH
dwCeQFkf6QEgQHoACJMeAMKkB4Aw6QEgTHoACJMeAJK8rweAsN2lR30A9k56
AAiTHgDCpAeAMOkBIEx6AAiTHgDCpAeAMOkBIEx6AEh6mWzVpQeATe00PeoD
sF/SA0CY9AAQJj0AhEkPAGHSA0DYTtOjOwC75i2lAIRJDwBh0gNAmPQAECY9
AIRJDwBh0gNAmPQAECY9AIRJDwBh0gNAXlmfn58e3QF4AtIDQJj0ABAmPQCE
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
+H8E2/2H
    "], {{0, 856}, {553, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{553, 856},
  PlotRange->{{0, 553}, {0, 856}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"burst", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "100", ",", "1040", ",", "1900", ",", "1980", ",", "2100", ",", 
     "2100", ",", "2920", ",", "3800", ",", "3860", ",", "4800", ",", "5700", 
     ",", "5740", ",", "6680", ",", "7600", ",", "7620", ",", "8560", ",", 
     "9500", ",", "9500", ",", "9501", ",", "9700", ",", "9700", ",", "9950", 
     ",", "10400", ",", "10850", ",", "11300", ",", "11750", ",", "12200", 
     ",", "12650", ",", "13100", ",", "13550", ",", "14000", ",", "14100", 
     ",", "14200", ",", "14300", ",", "14400", ",", "14500", ",", "14600", 
     ",", "14700", ",", "14800", ",", "14900", ",", "15000"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"InternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.05", ",", "75.30", ",", "783.40", ",", "1431.20", ",", "1491.40", ",", 
     "1581.72", ",", "1581.87", ",", "2199.50", ",", "2862.35", ",", 
     "2907.50", ",", "3615.60", ",", "4293.50", ",", "4323.60", ",", 
     "5031.70", ",", "5724.65", ",", "5739.70", ",", "6447.80", ",", 
     "7155.73", ",", "7155.88", ",", "7156.18", ",", "7306.39", ",", 
     "7306.54", ",", "7494.80", ",", "7833.80", ",", "8172.70", ",", 
     "8511.70", ",", "8850.60", ",", "9189.60", ",", "9528.60", ",", 
     "9867.50", ",", "10206.50", ",", "10545.40", ",", "10620.80", ",", 
     "10696.10", ",", "10771.40", ",", "10846.70", ",", "10922.10", ",", 
     "10997.40", ",", "11072.70", ",", "11148.00", ",", "11223.40", ",", 
     "11298.62"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitial", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.05", ",", "75.30", ",", "783.35", ",", "1431.20", ",", "1491.40", ",", 
     "1581.71", ",", "1581.87", ",", "2199.45", ",", "2862.35", ",", 
     "2907.50", ",", "3615.55", ",", "4293.50", ",", "4323.60", ",", 
     "5031.65", ",", "5724.65", ",", "5739.70", ",", "6447.75", ",", 
     "7155.73", ",", "7155.88", ",", "7156.18", ",", "7309.50", ",", 
     "7309.65", ",", "7501.80", ",", "7847.80", ",", "8193.75", ",", 
     "8539.70", ",", "8885.70", ",", "9231.70", ",", "9577.65", ",", 
     "9923.60", ",", "10269.60", ",", "10615.60", ",", "10697.65", ",", 
     "10779.70", ",", "10861.80", ",", "10943.90", ",", "11025.95", ",", 
     "11108.00", ",", "11190.10", ",", "11272.20", ",", "11354.30", ",", 
     "11436.32"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AxialForceInitialWellCat", "=", 
    RowBox[{"{", 
     RowBox[{
     "616810", ",", "611466", ",", "561176", ",", "515161", ",", "510886", 
      ",", "504471", ",", "504460", ",", "460596", ",", "413512", ",", 
      "410306", ",", "360016", ",", "311863", ",", "309726", ",", "259436", 
      ",", "210215", ",", "209146", ",", "158856", ",", "108566", ",", 
      "108566", ",", "108539", ",", "97866", ",", "97866", ",", "84491", ",", 
      "60416", ",", "36341", ",", "12266", ",", 
      RowBox[{"-", "11809"}], ",", 
      RowBox[{"-", "35884"}], ",", 
      RowBox[{"-", "59959"}], ",", 
      RowBox[{"-", "84034"}], ",", 
      RowBox[{"-", "108110"}], ",", 
      RowBox[{"-", "132185"}], ",", 
      RowBox[{"-", "137535"}], ",", 
      RowBox[{"-", "142885"}], ",", 
      RowBox[{"-", "148235"}], ",", 
      RowBox[{"-", "153585"}], ",", 
      RowBox[{"-", "158935"}], ",", 
      RowBox[{"-", "164285"}], ",", 
      RowBox[{"-", "169635"}], ",", 
      RowBox[{"-", "174985"}], ",", 
      RowBox[{"-", "180335"}], ",", 
      RowBox[{"-", "185685"}]}], "}"}]}], ";"}], "\n", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressKick", "=", 
   RowBox[{"{", 
    RowBox[{
    "454.64", ",", "545.46", ",", "1400.00", ",", "2181.89", ",", "2254.55", 
     ",", "2363.55", ",", "2363.73", ",", "3109.09", ",", "3909.15", ",", 
     "3963.64", ",", "4818.18", ",", "5636.40", ",", "5672.73", ",", 
     "6527.27", ",", "7363.65", ",", "7381.82", ",", "8236.36", ",", 
     "9090.81", ",", "9091.00", ",", "9091.36", ",", "9272.63", ",", 
     "9272.81", ",", "9500.00", ",", "9909.09", ",", "10318.18", ",", 
     "10727.27", ",", "11136.36", ",", "11545.45", ",", "11954.54", ",", 
     "12363.63", ",", "12772.72", ",", "13181.81", ",", "13272.72", ",", 
     "13363.63", ",", "13454.54", ",", "13545.45", ",", "13636.36", ",", 
     "13727.26", ",", "13818.17", ",", "13909.08", ",", "13999.99", ",", 
     "14090.81"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ExternalPressKick", "=", 
   RowBox[{"{", 
    RowBox[{
    "279.52", ",", "354.77", ",", "1062.80", ",", "1710.64", ",", "1770.84", 
     ",", "1861.15", ",", "1861.30", ",", "2478.87", ",", "3141.76", ",", 
     "3186.91", ",", "3894.94", ",", "4572.88", ",", "4602.98", ",", 
     "5311.01", ",", "6004.00", ",", "6019.05", ",", "6727.08", ",", 
     "7435.04", ",", "7155.75", ",", "7156.05", ",", "7242.34", ",", 
     "7242.42", ",", "7350.56", ",", "7545.29", ",", "7740.02", ",", 
     "7934.74", ",", "8129.47", ",", "8324.20", ",", "8518.92", ",", 
     "8713.65", ",", "8908.38", ",", "9103.10", ",", "9146.38", ",", 
     "9189.65", ",", "9232.92", ",", "9276.19", ",", "9319.47", ",", 
     "9362.74", ",", "9406.01", ",", "9449.28", ",", "9492.56", ",", 
     "9535.79"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AxialForceKickWellCat", "=", 
   RowBox[{"{", 
    RowBox[{
    "640998", ",", "635653", ",", "585363", ",", "539349", ",", "535073", ",",
      "528659", ",", "528648", ",", "484783", ",", "437700", ",", "434493", 
     ",", "384203", ",", "336051", ",", "333913", ",", "283623", ",", 
     "234402", ",", "233333", ",", "183043", ",", "132753", ",", "171933", 
     ",", "171916", ",", "165304", ",", "165308", ",", "157033", ",", 
     "142140", ",", "127247", ",", "112352", ",", "97462", ",", "82569", ",", 
     "67675", ",", "52782", ",", "37890", ",", "23120", ",", "20011", ",", 
     "16902", ",", "13793", ",", "10684", ",", "7583", ",", "4500", ",", 
     "1418", ",", 
     RowBox[{"-", "1665"}], ",", 
     RowBox[{"-", "4748"}], ",", 
     RowBox[{"-", "7831"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ti", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Tf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lcimento", "=", "9500.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", "8.535"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"de", "=", "9.625"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alfa", "=", 
   RowBox[{"6.9", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"3", " ", 
    RowBox[{"10", "^", "7"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightperfeet", "=", "53.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PipeData", "=", 
   RowBox[{"{", 
    RowBox[{
    "di", ",", "de", ",", "alfa", ",", "nu", ",", "young", ",", 
     "weightperfeet", ",", "lcimento"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Fi", ",", "Ffim"}], "}"}], "=", 
   RowBox[{"ComputeForces", "[", 
    RowBox[{
    "InternalPressinitial", ",", "ExternalPressinitial", ",", 
     "InternalPressKick", ",", "ExternalPressKick", ",", "Ti", ",", "Tf", ",",
      "lvec", ",", "PipeData"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputedFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Fi", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ComputedFfim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WellCatFi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AxialForceInitialWellCat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"WellCatFfim", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AxialForceKickWellCat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"lvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressinitialPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressinitial", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffini", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ExternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"InternalPressinitial", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressKickPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressKick", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressKickPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressKick", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"difffim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InternalPressKick", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", 
        RowBox[{"ExternalPressKick", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"lvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pipedatavec", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "de", ",", "di", ",", "young", ",", "nu", ",", "weightperfeet", ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", "lvec", "]"}], "]"}], "]"}], ",", "sigy"}], 
      "}"}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pressaoini", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "InternalPressinitialPlot", ",", "ExternalPressinitialPlot", ",", 
      "diffini"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \
\(o\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pressaosobrevi", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "InternalPressKickPlot", ",", "ExternalPressKickPlot", ",", "difffim"}],
       "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Press\[ATilde]o (psi)\>\"", ",", "\"\<\>\""}], "}"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(o\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(i\)]\)-\!\(\*SubscriptBox[\(P\), \(o\
\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", 
        " ", "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcaini", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFi", ",", "ComputedFi"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Inicial (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Diogo\\\\Dropbox\\\\figs\\\\compara05ftcimentofini.\
jpg\>\"", ",", "compara", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcafim", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WellCatFfim", ",", "ComputedFfim"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<For\[CCedilla]a Axial Final (lbf)\>\"", ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<WellCat\>\"", ",", "\"\<Calculada\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptyDiamond]\>\""}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\Diogo\\\\Dropbox\\\\figs\\\\compara6000ftcimentofkick.\
jpg\>\"", ",", "compara", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ax", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ffim", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InternalPressKickPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InternalPressKick", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExternalPressKickPlot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ExternalPressKick", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"lvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "lvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "barlowsf", ",", "apisf", ",", "vmsf", ",", "kssf", ",", "ktsf"}], "}"}],
     "=", 
    RowBox[{"ComputeSafetyFactors", "[", 
     RowBox[{
     "pipedatavec", ",", "ax", ",", "InternalPressKickPlot", ",", 
      "ExternalPressKickPlot", ",", "0.66", ",", "13.2", ",", 
      RowBox[{"-", "0.264"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"kssfplot", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"kssf", ",", "barlowsf"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Profundidade (feet)\>\"", ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<fator de Seguran\[CCedilla]a ao Colapso\>\"", ",", "\"\<\>\""}], 
        "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Klever Tamano Calculado\>\"", ",", "\"\<API Calculado\>\"", ",", 
       "\"\<Fator de Seguran\[CCedilla]a ao Colapso - WellCat\>\""}], "}"}]}],
     ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", "Red", ",", "Dotted"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\"", ",", " ", 
       "\"\<\[EmptyDiamond]\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.682688507898387*^9, 3.682688601274728*^9}, {
   3.6826886727258143`*^9, 3.6826887153242507`*^9}, {3.682708357737913*^9, 
   3.682708369361578*^9}, 3.6827090968321867`*^9, {3.6827092183141356`*^9, 
   3.6827092255075464`*^9}, {3.6827094789590435`*^9, 3.682709522476532*^9}, {
   3.6827101501354322`*^9, 3.682710214974141*^9}, {3.682710252862308*^9, 
   3.682710264332964*^9}, {3.6827103947904253`*^9, 3.682710398699649*^9}, {
   3.6827105577687473`*^9, 3.6827105641471124`*^9}, 3.682710654813298*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressKick] = \"\>", "\[InvisibleSpace]", "42"}],
  SequenceForm["Length[InternalPressKick] = ", 42],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.682710413657505*^9, 3.682710462339289*^9, 3.682710566146227*^9, {
   3.6827106403864727`*^9, 3.6827106560843706`*^9}, 3.6827107359819407`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[InternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "42"}],
  SequenceForm["Length[InternalPressinitial] = ", 42],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.682710413657505*^9, 3.682710462339289*^9, 3.682710566146227*^9, {
   3.6827106403864727`*^9, 3.6827106560843706`*^9}, 3.6827107359849405`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressKick] = \"\>", "\[InvisibleSpace]", "42"}],
  SequenceForm["Length[ExternalPressKick] = ", 42],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.682710413657505*^9, 3.682710462339289*^9, 3.682710566146227*^9, {
   3.6827106403864727`*^9, 3.6827106560843706`*^9}, 3.6827107359869413`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length[ExternalPressinitial] = \"\>", "\[InvisibleSpace]", 
   "42"}],
  SequenceForm["Length[ExternalPressinitial] = ", 42],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.682710413657505*^9, 3.682710462339289*^9, 3.682710566146227*^9, {
   3.6827106403864727`*^9, 3.6827106560843706`*^9}, 3.682710735988941*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxN0D1IQlEUB/BHW9FSOERTbdKQRLPo0CcYhRAkvKlIggJrCnRxaAiHaDKN
SiMwghJJepap3fzq4z0hKJBGqSEoKrT23jv/A3ngcflxzjvn3Ns763HOt0iS
1Kd/xrkdNuLIJnEMGvHotEMuQfatw/ZNUdH0kINwYlfQ/xNb8Pee8JniozUl
BC9EhUFv6t90Wvbhhxj1T8ox7neCfIptjmO+7RgWp5T3lxLwkIL5L+wlBf0O
k3BXWrj1iMkK988iv8guZnEfywV8LmjfdOMS3sjjPk0eq3lN/T+wX/eKta06
F8ggX8+L6sGyNdBk6j+ShT0FOJyDp4rY5+MKHijRfZ4jAu4sU71j/BpuwFqd
/XSD/E4ePrul9xHDBTh4R7Z/sVfvMS9UhGdUeh93jh1QqV/7Kzujor61BH+q
tJ/Lwu7RUD/Ndmqo97LXNNRH2YpG+0hl9hvXv7O7K6Lwa5YnO8qwoyL+ANI4
70o=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxN0V0oQ2EYB/CTlBIutAtzxY2WMkm503ahuLDSLoROiSJFzZ2am124WMrH
1ZgiSlvK1to4Yx96nX342FmpKcmNRXIlGRfunPP8n7KnTm+/877v/3nfc9qn
Xc6ZGkmSOvXHGHf8Rh3ZJK5eo0pOOzQuippebi9s34RlHxzZFbTfsQV/7onD
xf76B2UbntsXpvBg2R3/96xeb9YD+C4gjHYxOcB5IUFjnG0JU77ZdgyLKM17
chF4QEH/F/aCQvmBYAxuScCywvlp9JtnZ9OUJ7rP4TNB501UkvC6KpaNF1Ue
KrtN1m/Yo5vGtRTmv1T0qzJ9L0cadmXg4AU8kqX9z5KAe3J0n8cQuzkPT1zC
FXadCt9f0X1KJ+zTa+RPZWDfDdyUhZdu4SR7rID9r+zVAvIbc3CqgP/Vx/7A
+soku02j9b9etlOj+0hR9opG/Rqe2ArWm2vz8LtG+R1d7NaikDfUH8soe7go
/gBmlfZf
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQjR9EHmBomAkEK/eDuQ4TDqBIb5iLyv8wD8hf5/6w
qgWiPmMBqjyYPwth3oVlaOatReVrrAPykew/sAlV3mUbKj9nG6r5ErvQzN+L
yj+yF1X9jgOo8n2H8PIbQPwKEaCHORzAAp+w8MFABsLPPwzl60D4AUcOMJw9
c+YMjymEb3gUKm8D4Qsdg8j3OEL4n6F8HlcI/8rxAwxpQNDmAeFvPQGV94Hw
p52E6veH8MtPQfmBEH7E6QMNIP1mwRB+F5T/LATC3wPkg4J/ZhiE/w7IB2o/
4xMB4Sucgaj/FgnhB0H5y6Ih/JYzEP2RsRD+tjNQ98VD+C/OHDgAMi8mAcKX
OnvAAeyeRAjf5+wBAGZlspA=
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN0D1IQlEUB/BXTUVL4RBNtUlDEs2iQ59gFEKQ8KYiCQqsKdDFoSEcosk0
sozACEok6VmmdvOrj/eEoEAapYagqNDae57/gTxwefw4551z7u2dddnnWyRJ
6tNPk36a9bMdrMeRReIYrMej3Qo5BNmzDls3RUnTQ/bDsZCg/ye24O9d4TFE
RytKAF4IizrdiX/T17QPP0Sof1yOcL8T5BNsYxTzLcewOKW8txCDhxTMf2Ev
Keh3GIe7ksKpR0RWuH8a+UV2Po37mC7gc0H7JmuX8EYW92nwWMVt6P+BvbpX
zG3lOV8K+WpWlA+Wzb4GU/+RNOzKwcEMPJXHPh9X8ECB7vO8J+DOItXbxq/h
GqxV2U83yO9k4bNbeh8xnIP9d2TrF3v1HvMCeXhGpfdxZtg+lfq1v7JTKupb
C/CnSvs5TOweDfXTbLuGejd7TUN9mK1otI9UZL9x/Tu7uyRyv0Z5sqMI20ri
D97o70w=
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN0TlIA0EUBuD1AEHUQlIYK20kCEZEsJOkELQwIClEZUEUFEEhdkJsUlgE
waPyAkVBEgQTQqIbzSHj5vDIBoQIIjYGRaxEjBZ27r7/gXkwDN/OzP92dlsn
Xc6pKkmS2vVRoY9KfexsG3Vkk7i6jSo47dCoyGt6ub2wfR2WN+DQrqDzjk34
c08czvfWPihb8My+MAX7i+7ov6f1erMewHc+YbSLyD7OCwiao2xLkPLNtmNY
hGndkwnBfQr6v7DnFMr3+SNwUwyWFc5Pot8sO52kPNF5Dp8Jet9YKQ6vqmLR
eFDmgaLbZP2GPbppXklg/UtFvzLT93IkYVcK9l/AQ2k6/ywJuCtD93kMsBuz
8NglXGLXqPD9Fd2ncMI+vUb+RAreuIEb0vDCLRxnj+Rw/pW9nEN+fQZO5PC/
etgf2F8aZ7dotP/Xy3ZqdB8pzF7SqF/dE1vBfnN1Fn7XKL+tg92cF/Ka+mMZ
Zg/mxR9zRfZh
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGDQAmJGIGZiIAQiDzA0zASClfvBXIcJB1CkN8xF5X+YB+Sv
c39Y1QJRn7EAVR7Mn4Uw78IyNPPWovI11gH5SPYf2IQq77INlZ+zDdV8iV1o
5u9F5R/Zi6p+xwFU+b5DePkNIH6FCNDDHA5ggU9Y+GAgA+HnH4bydSD8gCMH
GM6eOXOGxxTCNzwKlbeB8IWOQeR7HCH8z1A+jyuEf+X4AYY0IGjzgPC3noDK
+0D4005C9ftD+OWnoPxACD/i9IEGkH6zYAi/C8p/FgLh7wHyQcE/MwzCfwfk
A7Wf8YmA8BXOQNR/i4Twg6D8ZdEQfssZiP7IWAh/2xmo++Ih/BdnDhwAmReT
AOFLnT3gAHZPIoTvc/YAAHMVspI=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.0500000000001819, 11436.32}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.0500000000001819, 11436.32}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68271041374751*^9, 3.6827104624312944`*^9, 3.682710566241232*^9, {
   3.682710640482478*^9, 3.682710656175376*^9}, 3.682710736085947*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxN0s1LAkEUAHCJTnqLvoyQOkTmIegPEDwURnhQL2V4CvogAj0UQgUZ5MUi
uxQYGGkhXZIQklU0nuu3u5JF0TVPBUqEUp2Kdue9gwPL8OPNvHnzZocXHNbF
DoVCoZM+eVa+XDj1q9sGBY3p2mZ3RLVLtgGbXo/RhiOQwwVVEH0TgFO/368O
kD/P0K4QeuUcxuw+fqPNcv7xmSt0NQwVURRN3gjlu2b5jT9kbQTXP0bREIUl
eXTG0JMxkFbXElryWgwaFk4ztRNH9yfY+nAmSflTwGk89YdncjaF+XsBzQE7
fzmdRh/y7P7uNrP+kN2S9VIDzYM8xps87m8z7UM7MmCVCtifz6DNWbh06pV9
o1n0RA6+tXZfqEXuymN9kEO38qy/8YM8+qmA97UV0LdFVk91pIg+KYGP/9La
m2RXmdX3dldCzwkYb5C9Au5Xl9FJAfMbyR8Cnr9OHhKxvhDZKsKW9CDBe/Ke
yN6/55ccE0H+3bw6Af0ugqdu4f5myQMV7J+HbKrAP5u+8vs=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxN0U8ow1EcAPBZlHDS1DgMt5ED7Wq1pJblYLughlKk0Kzm/0XhMrKdlK2h
JilZiFmz2Xe/zYb9VkS5cHBYKZI2HHaQ93vfb3j16/V57/f9vu/7vtp+i2lA
LpPJ6tknzQHV4otxyqqT0eBumCB3g0Yabida54TYp9rsCLrQ+x5wCGxh141+
XwfXGhsKD3poE+Mr/lxy7x0L93jR19vwamQnLu1Qvj2Qzr/JkNU+mFX49E+j
PjQcoh8O0K1+kJjPk0f88MXKk0eO0Mog8Nl2QvnDkBZFsWyeHA8DC59R6IPo
AAArT1tSGkavCDwecqe/5vEf6DnmLfZ7pyGE+1kBTOwCw//M++UnW2I8v2Ga
8nfE+f2Lms/QTefYn29yeQKqpeeJRtC5BO9vZQug75JQZ3YI417y8QXv921h
FL16CVqWsHGQPHnF619OkrtSuP9ItqcwPksOpTB/sYB+S/F6lCpyjcjfP6Qh
m0Rg24HeNvKCyN+roI/sF8EqHWgjP4vAuu/T28lVad6PzAa5PQ0/+YzykQ==

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxN0lsoRFEUBuChvEgpPMjDRHmYPBFvLklEoZBCeVIuRYikZFCuSUa5kyHX
iDGUMUT9jXE9R1EyFAkvQhKRUKx91k5WnXZfu732v1cnKK8sI99dp9OF0CfW
yfJoT9dtfqxOljXxusbvtFA6BxHhVL5V7NgufP9QVRrZ1hH0ON4MuZF17Gcz
igpE1bOLxlDrZ0m8/ucPQ67JsdTIPppG00O6Xf/VKvstQMuT0MY2WJBp1zc/
nHewsYx5kc/cxY63QVtXpUtsOJugBm7dbP91DAxSxfTK/pt8PlnauYk2cX9v
P9sO3r8aZHc6uH+0+c9eLrpAuoGcbaIBrI3y/osDoHGY/rlGvP9gjF22hSGR
p3qcneaEeF568CQ7bBtOOu99PMX22cENNdg1zrBfd7Q8DSGz7JNdzuOaY6/s
QYz3rXGe3bePJHqOJdTCrj5AGl1YfLnIzla0eWfprex2BSLuZ6r0hoIWmo/Z
KP2k4J0uiFuQDlRRIX6fC+kMFY80zmavJXaTChHHECVtU6GKKpa+U7V8pcPS
AYe4p/MeinTKIX4By4rxeQ==
         "]]}}, {{
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN0r1LQlEUAPDXx6Rb9GWE1BCZQ9AfIDgURjioSxlOQR9EoEMhVJBBLhbZ
UmBgpIW0JCEkKhrH57fvSRZFa04FSoRSTUXPe87ghcvjx7n33HPPfcMLVtNi
B8dxamm2SbNdmrKXC5tmdVvL0ZiubHYH5btkM7DP6zFaewTNcE7uQ9944dTj
8Si85M8ztN2PXjmHMYub32hxM//4zBW6HICSKIp6V5DyXbP8uh+yKojrH0No
CMFSc3SG0ZNhkFZXYiryWhhqxohyaieK7o+x9YFUnPInIKJ0Vh+eyekE5u8F
dATY+cvJJPqQZ/d3tJj1h+yQrJEaaBjkMV7ncX+LaR/amgKTVMD+fAptSMOl
TSPrG02jJzLwrbK4/Q1yVxbrgwy6kWX9jR5k0U85vK85h77Ns3rKI3n0SQHc
/JfKUifbi6y+t7sCek7AeI3sEnC/ooiOC5hfR/4Q8Px18pCI9fnJJhG2pAfx
3ZP3RPb+Pb/ksAjN382lFtDvIjirxsjfLHmghP1zkvUl+AeobvL9
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN0U0oRFEUAOA3fkrDSqOw8LNDFjRbSlITWZjZoPyUIoWGGv8bhQ0ys1Jo
UCMpeSGeacyYM2/GDN6dIsqGhYVSJBksLOS+e064dXt9975z7rnnFnbYbZ3J
kiSV8GngM4lPb970k3VkoEqiIVw6RG4Gsz6WXegqF4Q/ilqcviX0jhucKl/Y
Wka/rsDSIh8mN7p7DeOz/my88fQHWj3oiw14tvITZzcp3zbo518+kItkGDfJ
lvs+GQ176NtddI0COr++yL0KfPLykoL76GwfiK/jkPIHIM4Yy5gkRwLAw8dM
Fh/aC8DLqzSmB9DzqoiHxNGvRfw7eoJ7nf/eWOfH/TcVbPwCPf8s+qWQ7WGR
v26U8jdExP1TK47R5SfYn29yZhTy9ecJBdGJqOhvTjWgr2NQ3OJUBz3kg1PR
76uUEHrhDCp5wrIu8vC5qH8uRm7ScP+OPKNh/BvZr2H+NBX9ool6svPIBUy8
v99MtjHg2962WvIUE+9laCcrDAb0Ax3kRwa8+7JlhpwbF/14WCXXx+EHBkvy
kw==
         "]]}, {
        Directive[
         PointSize[0.01388888888888889], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Dashing[{0, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxN0l9I01EUB/BN8SUGge4hehgGPQyfEn1LY0RioIEOIYU9CbPBokUhwmgp
qDUkmuB/xSk1FWVbW9Ba0eDLWlvt9xsUhFNQZPoiTSSKRaSQ5/7ORTxw+fHh
cs/93sPvUrfLai/X6XQ1tPS0ymgF7jeey+/ZLTpZkeaC27h+R7oL9XVUVb1s
yyiO/1M99LAj8xhPlsy2q4/ZP/1w9IjqZzsW8cgYbi6c8V+zzZeMDrK/LmOo
2B43HT2V/ULQ8jR52eYwOuKm4eLmMzZeIyjy+UfZN2LQvm+l78aw8ZIa6MfY
F95jeobq2oTsn+DzLdKpBLzi/okpdhy8vzPDfp7k/o3+UxvydIH0ALnTRwN4
t8D7v5IAjcN3xm7x/uwi2/URsyJP3wt2Wwriee2XA+zaT0jR+fPfltiVaexS
g4xnhf07reUZqFllf89wnvwa+81niPGWBoPsyS+4Sc8JXwmz+7Joowud26/Y
nYo279umCHtEgYj775b0BwVPaD5+j/Shgj90wfWQdLWKB+L32ZK2qjigcQ4b
ouwhFSKOuUE6pkIV5ZTeV7V89+akL+bwg85XKNKtOZwA2Drxew==
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 14090.81}, {-15000., 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"Press\[ATilde]o (psi)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 14090.81}, {-15000., 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(i\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\)-\\!\\(\\*SubscriptBox[\\(P\\), \\(o\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68271041374751*^9, 3.6827104624312944`*^9, 3.682710566241232*^9, {
   3.682710640482478*^9, 3.682710656175376*^9}, 3.682710736170952*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxtzU8og3EYB/CfvWiSaKZeWrzbaTmIm8vqVZKDg3aa2kF6yUGtnezmVRM5
LCe50HuSEb2prSV/Xoz9YbW0o4OVssskJuzE+3x/StpTv9/T53l+z/NzTgW8
0xbGWO/PMbMZhTvXEPsT9uivJwzz7pecsLxGVoI9sL5J3ujjftki+7Pd8KyG
+X/OOxxwfpsseTr5vn2ytZnbfUCWvzpg45B8b22Hh+Pk0JMNnoMn91ph8Yg8
GG3i+0/w/zJ3EpYVAU4YmF+syuTIRU3rC7DKrT1+oP9a27pWgQOXZKaW4fEk
3p8W4YEr9N9TsO2arLalUH/jXirCBdQfRspwLE1ZClfg9Qz6ShWez1JOu9g5
2XdD/sxwr8LuYB18DPtEC/wMr5xxS7fkxIwAe+FSSz0chsUYdxwe9TfAJTgk
NMJdOfLOLvdYzvgGvrCeKA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxtzk0ow3EYB/C/DTWSmvf3bQfhoMjBRU2ZFAft4KXhsGY50CgllLzMkoOW
w6QQkoyGxLDID7MxFHJWDl6iSazJcmDP9+e2p56ePn3r2yPXGtTNIkEQ8v42
eFNebJX+G0WpwCfoPOu/61nQ5TI5rDSzwlvNxEJHFrw+TXbmc7/PkDs9mXDL
bEj/pKfDV4vkhpIU3mcjF0Vz56ySW78TYLZBjpfEwWV2/PMkhVvtTLe0nb+7
EgsnO8iTVgnv3yfnjnA74UmdGN5h7LTa0CgdDCjJY0ch7eiD+7nVD1/IP0Jb
O+eDDcfMPHfn0A144WonOZzdwwUnTGnqeR0PuGGpi7Hu4XhvlJuRP12svUmu
SjPew7ducq/KC2+dsuI183zbkA+2nJEzdAG4y8Omaiuu9QrhkFx3TraccY/C
rvYweA/2J4ngNzj7gFt2Qa7Ri2E1bIoJh42wfZPbDj9qIuBnOFEcCadeksuX
uasu2S8dFfEO
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxtzU8og3EYB/Df9qJJoqFGi3c7LQdxc1GvkhwctNPUDtJLDmrtZDdTEznI
SS70nmREb2pryZ8XY39YLe3oYKXsMokJO5nn+yhpv3p+T5/n+T3PzzHpc09J
QojuSpgqYRY4uTvnoPhzWsO/Hjd+7l7ZAStrZNXfBeub5I0e9ssW2ZvuhGc0
zP9z1m6Hs9tkeaCd9+2TLQ1s1wFZ+WqDjUPyvaUFHoqSA09WeBae2GuCbUfk
/nA97z/B/0vsOKyoEhwzML9QVsirF1Wtz8NBtvb4gf5rdetaCfZdkkWwCI/F
8f40D/ddof+egK3X5GBzAvU39mIezqH+MFyEI0nKcqgEr6fQV8vwXJpy0inO
yZ4b8meKvQK7/Cb4GPbYzPAzvHzGlm/JsWkJdsOFxho4BNsi7Cg84q2FC3BA
qoM7MuSdXfZoxvgGy2CeKg==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxtzk0ow3EYB/A/QyGpeX83B+GgyMFFTSHFQTt4yctBI4dplBJKXkZy0HKY
FEKSl7wkhkUezDZjhXZWO3iJJiGyHMzz/bntqe/h07e+PYpGrapJJklSljd+
3vh7E/e0VvZ5k1Yoiftz1vK/a+jPJakKWKmnXGftxEJ7Crw5zTZnC7/OsDvs
yXDLrE//JCbCV4vsuoI4sbfGzgsVzlhna76jYNpiRwZHwEVG/PMghzVGUi/t
Zu+vhsOxJvbkcrDYP2Rnjgib4Um1DN4jslVo6+UDHiV77MSnTb1wn7Dq7gv9
m283zn3A2lPSz92a1P1uuMLMDiAXnHNGyuHu53GPFZZbiLqGIt0hVmK/W6it
QVGcoHPBTiu7p9gN79gof0M/3zr4ARvO2UlqD9xpp6mq0uvmNOmYXX3BNpwL
j8KWNj/4AP6M8Ydf4PQj4dRLdmWzDFbBw2EBsA42bgsb4fvaQPgRjpYFwfEO
dsmKcLmDfgEpxfEQ
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Inicial (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-185685., 616827.1478112369}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68271041374751*^9, 3.6827104624312944`*^9, 3.682710566241232*^9, {
   3.682710640482478*^9, 3.682710656175376*^9}, 3.6827107362439556`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxd0c8rg3EcB/AvloMcRspaqY3Skx8H5Q94yMFB0XLYboi1g+wgObg8NKUl
dliPkuEkKRplpE1PPPNje1YrciM5zUVPrBwoPJ/3R7Fvfb/vXn0+fb7f+rpH
gp6xciFEy8+20lrGclOX+LOq/L/2adbZfO+G5Qh5Z8oFx2Pk7kG2uY7+RnZg
k2wvcVJtgPNbqB85ed4uuRhiS3vktsl6WDsgG3N1cE+CPDrMHofX+mtgxwnm
x6p5foq8PcPWYYe3Ej7WyAudAl46Ixc+bf88xFbYWjvXX+HHEve2VsDBc9R9
ZfCATjbtXzK5I00WEx9w7QXuy77Db3BEKsK3l+T4vAkfXuE96WdYvSbLyhM8
ncH86B3szaI/fAOHYWU2DyfZZgZ+gcWDDrsMeCMFe9jRfTjEllQ4wbatIgvs
RfyrcOaQK6fIvpz2DSnslc4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ7XQx6P2adcqODFAA4j9ogfEjD4D4f34rQvgOE8D8
jikKEP6GuWC+RDGU/2EemP/BAcrPWIDBb1209F7mFVkI/8IyMP/kFymoeWvB
/IWHoHyNdWD+zQ3iEP6BTWB+4wERCN9lG5gvOB/Kz4HwPXsFIXyJXQc4Xb33
FkvwQs3fC+Yzf+eB8I9A+MWX2SD8HQfA/MfrGSD8vkMYfMvJwoKN0axgfgOQ
/+ap1/MJ3SwQ+U+HDhi0vZi2EYnfc3H1W4k2Zgg///CBoM1rn/ivZ4TwA44c
mN6dvF1x438HMN/w6IGbky5vKWb+A+ELHTugnjylXyLsB4T/+diBjWozattW
fIHwrxw/8EGXo/rGrw8Q/tYTB04sVbi0ZdYrCH/ayQMPdDTWTbB/DOGXnzpg
Ef58+4WT1yH8iNMHHqQUlPftuQLhd50+cCKx8ZbzhosQ/p7TBwokXj3g9DwL
4b87fUAh9yJPj+FxCF/hzIGGjsfd7OIHIfygMwcYuu4c6vmzFcJvAcqnhZkq
zV4M4W8DyksY5oRwNx8A81+cOXAgd117p8ZaCF/q7AGGs0Vh4Ud3Qfg+Zw8A
AMsC9wE=
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxd0c8rw3EYB/DPbDnIYaSsldooffPjoPwBX3JwWNFy2G4IOcgOkoPLl6a0
xA7rq5bhJCkaZaRN3/jOj+27WpEbyWku+sbKgWKe96PYU8/n6dXz9Hw+9XEP
B7yjViFESyktpawQCGOlqUv8iaqxX/u1n7P53g3LYfLOtAuOx8jdA2xzHfON
7PFNsr3MSbUBzm+hf+TkfbvkYpAt7ZHbpuph7YBszNfBPQnyyBB7Al7rq4Ed
J9gfq+b9KfL2LFuHHb5K+FgjL3YKePmMXPi0/fMgW2Fr7dx/hR/L3NtqhQPn
6PstcL9ONu1fMrkjTRaTH3DtBe7LvsNvcFgqwreX5PiCCR9e4T3pZ1i9JsvK
EzyTwf7IHezLYj50A4dgZS4PJ9lmBn6BxYMOuwx4IwV72ZF9OMiWVDjBtkVR
C+wl/Ktw5lBXT1E9Oe0bNpyV0A==
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyDiamond]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxlzF1IWnEYBvBjtj6oXdiCDkGgDTYZBXkR1NXsYxd9wELCNnbVXFFQJHnR
xRgkM2vpSircKNa2RjHYPOlKHVHwZpa6o5ApbEUMwUYifcgKGiWs0/89QdAD
z8WPBx7J0y5Fi5CiqHtcBVxTuFYGFYdfmdsVFJ8LR3SXfgwXTp5J0HIT8cCY
GG19R0xreCcmiRNy3m0frrlvavp3e7gAvT5D7DvO5/8sxB9dvKUM8aY1Dw3f
iLWQi652EIve8+5A17wWoekFyHxQt6Shb/L/S8TCk2y0G60JpaG/A3F0lkIP
ua65fPSWSPvkBnEv570/tbsmQyruf11Qoo+ZbVdsDH7Zp/VCdNcKKOYsOw9n
BegGN7wxqJwS2385sWwVNkdC8xphEp2zBndVY8O08h/6aA1sd96+0H8+Roc9
kCjOeP7rNIG2e8E7Ld6YH4+jzT6IFEkZ0/0ouucHlDXtOtd9P9GPWIg8U/cM
LYbRgyx4m7VbVdYgepEFNR2PZNYE0AcsiDuD2UaZBy32Q+9A1JCet4xW+IEa
3HYZk3a0jttblaWFE5/QDm6nZR2NWS+BOOYH6GT6X0kt6PwAUIFuZdPqAro+
AOfXsvcD
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-7831., 644950.4674287217}, {-15000., 0}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox["\"For\[CCedilla]a Axial Final (lbf)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-7831., 644950.4674287217}, {-15000., 0}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"WellCat\"", "\"Calculada\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "Automatic"}], "}"}]}],
                "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68271041374751*^9, 3.6827104624312944`*^9, 3.682710566241232*^9, {
   3.682710640482478*^9, 3.682710656175376*^9}, 3.6827107363239603`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6827104140385265`*^9, 3.6827104627233114`*^9, 3.682710566533249*^9, {
   3.682710640800497*^9, 3.682710656476393*^9}, 3.6827107363879642`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6827104140385265`*^9, 3.6827104627233114`*^9, 3.682710566533249*^9, {
   3.682710640800497*^9, 3.682710656476393*^9}, 3.6827107364319663`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6827104140385265`*^9, 3.6827104627233114`*^9, 3.682710566533249*^9, {
   3.682710640800497*^9, 3.682710656476393*^9}, 3.68271073649197*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.6827104140385265`*^9, 3.6827104627233114`*^9, 3.682710566533249*^9, {
   3.682710640800497*^9, 3.682710656476393*^9}, 3.6827107365229716`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQnZNr6XTCms2BAQSkzh6wuxD3ZGMKlP/izAFd20TD
pj4of9uZA5sL9+vY7ITyW84c+KzlIvnkCZQfdObAUsdtmi2C7BC+wpkDDhJP
b2vZQ/nvTh+o+asZcicXyt9z+oBQ5pfzC+dC+V2nDxjaP7lXfw7Kjzh9oGyh
UlXyTg4Iv/zUgfmbfINu7OeE8KedPBDA6VDE+5wLwt964kDZbTG2KaY8EP6V
4wcuVse5Hd3MC+F/Pnbg7lvzusU5/BC+0LEDCdKm33O3C0D4hkcPnLa3KVd7
LgjhBxw5IP5Y2bw4WBjCzz98QOlVPxeDvQiE/+nQgY0X2wXMkfjfLj448p5f
FMxv6Dt0QCon6+1HKJ8ByJ9k1PPuhJcknL9kcpf503tQ/o4DB5KsU7ifTpKC
8I/sPaD+8+RG7elQ/oa9BxLWzTN3KJKG8CV2HXgrxcV9pk8Gws/ZdiAz7YXl
kjlQvsu2A3rG2nFLWOUg/AObDhx5e6LsC4sChK+x7oB5P0/7Pgkof8PaA598
lnVK1itC+BeWHdhWv6T/f40yhJ+x4MDuo5YbVWoR/Ig309qD70H5H+YduFCz
Y266sgrUvLkH5u9532XiqwHhO0w40DsrioPhmCGEzxB5AADv39U7
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxNx11IU3EcxvHjoqVZLLcOG8ZC6WWLhLIMoUUzmBBdiCyEDMq5lXQoNBiy
QeBqRNGKvUD0cqErXEKQOZStUZs+zrncdqwxVoQUFRimFxGzu1am/v6ED3x5
+FSbu4znJRzHaZdb+a9lM66hHUU9t7LKadwtcUX6LjN/F3HDnDmnG2MOiyif
ONPhkf0hXxdRmF/IBdqZjSI+Rd9v94SYq0S0XvmQM5f/Jf/I4BU/r6ixMEcz
6G85cKwYZXZlUJF2uL6olsinMnibqBvVC1zDqm1ppG49Liu2lZDvpaCenetw
dkvIoSl8NuksxaF15PxrTM5Y88eV68mLSQi9SttoSEqWJ1Fnv/1u18NScu0k
Sp/JfAfzG8nNCTSnbW801zaTuybgP1yQbzgiIxfi2Cbt/HZxjRcdfLTTvGXV
V91xeGT3pV5mbtnOsy/GfbsV/531SysECU+OAPqp6cZ+g5KciKGnKWxvMjIH
Y7i5YE/tlVeSVS+hmFMf1QfU5EthuO+cjg9nmQ1hxHwn/PU11WQMYyt/SGMV
dpK1zxEO/BrY9JQ5OAjVb9MTnXYPOTsA3tR40uDeR77wCFWD3uzYGnc/+Oiz
WvaTf/ZhNuIQ2nPMwV6MyJZqW5z15AYvksJIjyZlIHOt+AdG793u
         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYC4pxcS6cT1mwODCAgdfaA3YW4JxtToPwXZw7o
2iYaNvVB+dvOHNhcuF/HZieU33LmwGctF8knT6D8oDMHljpu02wRZIfwFc4c
cJB4elvLHsp/d/pAzV/NkDu5UP6e0weEMr+cXzgXyu86fcDQ/sm9+nNQfsTp
A2ULlaqSd3JA+OWnDszf5Bt0Yz8nhD/t5IEAToci3udcEP7WEwfKbouxTTHl
gfCvHD9wsTrO7ehmXgj/87EDd9+a1y3O4YfwhY4dSJA2/Z67XQDCNzx64LS9
Tbnac0EIP+DIAfHHyubFwcIQfv7hA0qv+rkY7EUg/E+HDmy82C5gjsT/dvHB
kff8omB+Q9+hA1I5WW8/QvkMQP4ko553J7wk4fwlk7vMn96D8nccOJBkncL9
dJIUhH9k7wH1nyc3ak+H8jfsPZCwbp65Q5E0hC+x68BbKS7uM30yEH7OtgOZ
aS8sl8yB8l22HdAz1o5bwioH4R/YdODI2xNlX1gUIHyNdQfM+3na90lA+RvW
Hvjks6xTsl4Rwr+w7MC2+iX9/2uUIfyMBQd2H7XcqFKL4Ee8mdYefA/K/zDv
wIWaHXPTlVWg5s09MH/P+y4TXw0I32HCgd5ZURwMxwwhfIbIAwD8R9U9
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxNx1tIk3Ech/F3k5Zm8ebW2DAWSoctEsoyhBbNYEJ0IbIQMijnVtJLocGQ
DQJXI4pW7ADR4UJXuIQgcyhbozb9OudyB2uMFSFFBYbpRcTsrpUtf3/CB56L
T62px3CujOM4TWlRaXHpLxVzzpHtRR33r+pZ3BE5wwOXmL9lcN2UPqudYA5l
UDl1usvN/yZfy6CwuJTzdzIbMvgYebfNHWSuyaD98vucqfIP+XsaL+WLsjoz
cySNwbb9R4sRZmcaVSm787NyhXwyjTfxhnGdwDWt2ppC8uajimKHiHw3CdX8
QpejV0wOzuCTUWsujpSR868wPWfJH1OsIy8nIPQrrONBCVmaQIPt1tudD8rJ
9dMof8p7D+Q3kFvjaE1ZX6uvbiL3TMF3qCBdf5gnF2LYKun+emGNl+3ySLdp
86qvuGJw8/ckHmauZMeZ55PeXbL/zvokVYJYTg4DupnZ5kG9ghyPoq8lZGsx
MAeiuLFkS+6RVpOVLyBbUB3R+VXkiyG4bp+KjWaZ9SFEvcd9jXW1ZIxii/yg
2iLsIGueIeT/ObTxCXNgGMpfxsdazW5ydghyY/MJvWsv+fxD1Ax7shNr3Hv/
g9di3kf+MYD5sF3ozDEH+jHGr9S3ORrJTR4khLE+dVJP5trxF1NX3fA=
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20.66894727630777}, {-14900., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Profundidade (feet)\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}, {
        FormBox[
        "\"fator de Seguran\[CCedilla]a ao Colapso\"", TraditionalForm], 
        FormBox["\"\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 20.66894727630777}, {-14900., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Klever Tamano Calculado\"", "\"API Calculado\"", 
       "\"Fator de Seguran\[CCedilla]a ao Colapso - WellCat\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68271041374751*^9, 3.6827104624312944`*^9, 3.682710566241232*^9, {
   3.682710640482478*^9, 3.682710656175376*^9}, 3.682710736588976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.2 Equa\[CCedilla]\[ATilde]o de estado limite de Klever-Stewart", \
"Subchapter",
 CellChangeTimes->{
  3.6592806332041535`*^9, {3.6594407757248473`*^9, 3.6594407935075064`*^9}, {
   3.660472770932274*^9, 3.66047277562228*^9}, 3.6604776679450006`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeBurstResistance", "[", 
    RowBox[{"n_", ",", "de_", ",", "t_", ",", "fu_", ",", "sa_", ",", "po_"}],
     "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "kdr", ",", "kr", ",", "puts", ",", "pref", ",", "Futs", ",", "pfactor",
        ",", "pfactorNeck", ",", "pM", ",", "pBurstKS", ",", "pburst"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kdr", "=", 
       RowBox[{
        SuperscriptBox["0.5", 
         RowBox[{"n", "+", "1"}]], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "/", 
           SqrtBox["3"]}], ")"}], 
         RowBox[{"n", "+", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kr", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["4", 
           RowBox[{"1", "-", "n"}]], "-", "1"}], ")"}], "*", 
        SuperscriptBox["3", 
         RowBox[{"n", "-", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"puts", "=", 
       FractionBox[
        RowBox[{"2", " ", "kdr", " ", "t", " ", "fu"}], 
        RowBox[{"de", "-", " ", "t"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pref", "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["0.5", "n"], "*", "puts"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"2", "/", 
              SqrtBox["3"]}], ")"}], 
            RowBox[{"n", "+", "1"}]], ")"}], "+", "1"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Futs", "=", 
       RowBox[{"Pi", " ", "t", "  ", "fu", 
        RowBox[{"(", 
         RowBox[{"de", "-", "t"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pfactor", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"kr", "*", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"sa", "/", "fu"}], ")"}], "2"]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pfactorNeck", "=", 
       SqrtBox[
        FractionBox[
         RowBox[{"1", "-", 
          FractionBox[
           SuperscriptBox["sa", "2"], 
           SuperscriptBox["fu", "2"]]}], 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["3", 
            RowBox[{"1", "-", "n"}]]}], "+", 
          SuperscriptBox["4", 
           RowBox[{"1", "-", "n"}]]}]]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pM", "=", 
       RowBox[{"pref", " ", "pfactor"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pBurstKS", "=", 
       RowBox[{"po", "+", 
        RowBox[{"Min", "[", 
         RowBox[{"pM", ",", 
          FractionBox[
           RowBox[{"pM", "+", 
            RowBox[{
             SuperscriptBox["0.5", "n"], " ", "puts"}]}], "2"]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", "pBurstKS"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.666640136686214*^9, 3.666640157869426*^9}, {
  3.666640449714118*^9, 3.6666404628178673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ComputeGrad", "[", 
    RowBox[{
    "n_", ",", "de_", ",", "t_", ",", "fu_", ",", "sa_", ",", "pi_", ",", 
     "po_", ",", "X1_", ",", "X2_", ",", "X3_", ",", "X4_", ",", "X5_", ",", 
     "X6_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "NofD", ",", "x7", ",", "nYieldStrength", ",", "x3", ",", "PintofD", 
       ",", "x8", ",", "nDe", ",", "nt", ",", "x2", ",", "nYoung", ",", "nNu",
        ",", "x4", ",", "x5", ",", "x6", ",", "x1", ",", "PextofD", ",", "x9",
        ",", "gx", ",", "grad", ",", "subst"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gx", "=", " ", 
       RowBox[{
        RowBox[{"x1", "*", 
         RowBox[{"ComputeBurstResistance", "[", 
          RowBox[{"n", ",", 
           RowBox[{"x4", "*", "de"}], ",", 
           RowBox[{"x2", "*", "t"}], ",", 
           RowBox[{"x3", "*", "fu"}], ",", "sa", ",", 
           RowBox[{"x5", "*", "po"}]}], "]"}]}], "-", 
        RowBox[{"x6", " ", "pi"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"grad", "=", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x1"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x2"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x3"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x4"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x5"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{"gx", ",", "x6"}], "]"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"subst", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "\[Rule]", "X1"}], ",", 
         RowBox[{"x2", "\[Rule]", "X2"}], ",", 
         RowBox[{"x3", "\[Rule]", "X3"}], ",", 
         RowBox[{"x4", "\[Rule]", "X4"}], ",", 
         RowBox[{"x5", "\[Rule]", "X5"}], ",", 
         RowBox[{"x6", "\[Rule]", "X6"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "gx", "}"}], ",", "grad"}], "}"}], "/.", "subst"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.666640186340054*^9, 3.6666402208110256`*^9}, {
   3.6666403215687885`*^9, 3.66664042736784*^9}, 3.666640995149315*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IndiceConfiabilidade", "[", 
    RowBox[{
    "PiData_", ",", "PeData_", ",", "AxialForceData_", ",", "CasingData_", 
     ",", "RandomVarsData_", ",", "kns_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CsVsBeta", ",", "KSRandomVars", ",", "area", ",", "w"}], "}"}],
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CsVsBeta", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDe", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nDi", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nt", "=", 
       RowBox[{"nDe", "-", "nDi"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYoung", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nNu", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"nYieldStrength", "=", 
       RowBox[{"CasingData", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{
        RowBox[{"Pi", "/", "4"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nDe", "^", "2"}], " ", "-", " ", 
          RowBox[{"nDi", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"w", "=", "1"}], ",", 
        RowBox[{"w", "\[LessEqual]", 
         RowBox[{"Length", "[", "PiData", "]"}]}], ",", 
        RowBox[{"w", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PintofD", " ", "=", 
          RowBox[{"PiData", "[", 
           RowBox[{"[", 
            RowBox[{"w", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Internal", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"PextofD", " ", "=", " ", 
          RowBox[{"PeData", "[", 
           RowBox[{"[", 
            RowBox[{"w", ",", "1"}], "]"}], "]"}]}], ";", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "External", " ", "Pressure", " ", "at", " ", 
           "depth", " ", "D", " ", "in", " ", "psi"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"NofD", "=", 
          RowBox[{
           RowBox[{"AxialForceData", "[", 
            RowBox[{"[", 
             RowBox[{"w", ",", "1"}], "]"}], "]"}], "/", "area"}]}], " ", ";",
          " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Nominal", " ", "Axial", " ", "Load", " ", "at", " ", "depth", " ", 
           "D", " ", "in", " ", "psi"}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"KSnfactor", "=", "kns"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NRV", "=", 
          RowBox[{"Length", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RVX", "=", 
          RowBox[{"CreateRVDataVC", "[", "RandomVarsData", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"nUltimateStrength", "=", " ", 
          RowBox[{"1.1875", " ", "nYieldStrength"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NLS", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"NP", " ", "=", " ", "20"}], ";", "\[IndentingNewLine]", 
         RowBox[{"CDFLIMPLOT", "=", 
          SuperscriptBox["10", 
           RowBox[{"-", "2.5"}]]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PRINT", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "vx", ",", "fx", ",", "GX", ",", "GRADX", ",", "X1", ",", "X2", ",",
            "X3", ",", "X4", ",", "X5", ",", "X6"}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"SetLimitStateVectors", "[", "NRV", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"DesignPoint", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"DPCREATE", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"LSPARALLEL", " ", "=", " ", "False"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"BuildRVParameterVectors", "[", "RVX", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GX", "[", "fx", "]"}], " ", ":=", 
          RowBox[{
           RowBox[{"ComputeGrad", "[", 
            RowBox[{"KSnfactor", ",", "nDe", ",", 
             RowBox[{"nt", "*", "X2"}], ",", 
             RowBox[{"nUltimateStrength", "*", "X3"}], ",", 
             RowBox[{"NofD", "*", "X4"}], ",", 
             RowBox[{"PintofD", "*", "X6"}], ",", 
             RowBox[{"PextofD", "*", "X5"}], ",", "X1", ",", "X2", ",", "X3", 
             ",", "X4", ",", "X5", ",", "X6"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"GRADX", "[", "fx", "]"}], " ", ":=", " ", 
          RowBox[{
           RowBox[{"ComputeGrad", "[", 
            RowBox[{"KSnfactor", ",", "nDe", ",", 
             RowBox[{"nt", "*", "X2"}], ",", 
             RowBox[{"nUltimateStrength", "*", "X3"}], ",", 
             RowBox[{"NofD", "*", "X4"}], ",", 
             RowBox[{"PintofD", "*", "X6"}], ",", 
             RowBox[{"PextofD", "*", "X5"}], ",", "X1", ",", "X2", ",", "X3", 
             ",", "X4", ",", "X5", ",", "X6"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"GAUSSIAN", " ", "=", " ", "True"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<NORMAL\>\""}], "&&", 
              RowBox[{
               RowBox[{"TYPE", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", " ", 
               "\"\<DETERM\>\""}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"GAUSSIAN", " ", "=", " ", "False"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NRV"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"RX", "=", 
          RowBox[{"IdentityMatrix", "[", "NRV", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "RX", "]"}], "\[Equal]", " ", "1"}], ",", 
           RowBox[{"CORRELATED", " ", "=", "False"}], ",", 
           RowBox[{"CORRELATED", " ", "=", " ", "True"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"cov", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RX", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"SDEV", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "NRV"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "NRV"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\n", 
         RowBox[{"ClearAll", "[", 
          RowBox[{
          "Jyz", ",", "Jzy", ",", "Jzx", ",", "Jxz", ",", "Jxy", ",", "Jyx"}],
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jyz", ",", "Jzy"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobYZ", "[", "RX", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Jxz", ",", "Jzx"}], "}"}], " ", "=", " ", 
          RowBox[{"JacobXZ", "[", 
           RowBox[{"RVX", ",", "MEAN"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Jyx", " ", "=", " ", 
          RowBox[{"Jyz", ".", "Jzx"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Jxy", " ", "=", " ", 
          RowBox[{"Jxz", ".", "Jzy"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "4.", " ", "Busca", " ", "pelo", " ", "ponto", " ", "de", " ", 
           "projeto", " ", "e", " ", "\[IAcute]ndice", " ", "de", " ", 
           "confiabilidade"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"ConvergenceCrit", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"100", ",", "\"\<DELTA_BETA\>\"", ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "3"}]], ",", "0", ",", "0"}], "}"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"xh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"yh", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vg", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", "NLS", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"FindDesignPoint", "[", "lsn", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"lsn", ",", "1", ",", "NLS"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"BETA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<BETA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ALFA", " ", "=", " ", 
          RowBox[{"DPGET", "[", 
           RowBox[{
            RowBox[{"DesignPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"{", "\"\<ALFA\>\"", "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"CsVsBeta", ",", 
           RowBox[{"{", 
            RowBox[{"BETA", ",", 
             RowBox[{"-", 
              RowBox[{"PiData", "[", 
               RowBox[{"[", 
                RowBox[{"w", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "CsVsBeta"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6666405024511347`*^9, 3.6666406961222115`*^9}, {
  3.666640744660988*^9, 3.6666407715215244`*^9}, {3.6666408030173264`*^9, 
  3.6666408188912334`*^9}, {3.666640858580504*^9, 3.66664086464085*^9}, {
  3.682687945649228*^9, 3.682688037271468*^9}, {3.682688073278528*^9, 
  3.682688107527487*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KSRandomVarsData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<meKS\>\"", ",", "\"\<NORMAL\>\"", ",", "1.004", ",", 
       RowBox[{"0.047", "*", "1.004"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<APIyield\>\"", ",", "\"\<NORMAL\>\"", ",", "1.1", ",", 
       RowBox[{"0.0422", "*", "1.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Thickness\>\"", ",", "\"\<NORMAL\>\"", ",", "1.0069", ",", 
       RowBox[{"0.0259", "*", "1.0069"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Nax\>\"", ",", "\"\<DETERM\>\"", ",", "1.0", ",", "0.3"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Pext\>\"", ",", "\"\<DETERM\>\"", ",", "1.0", ",", "0.01"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Pint\>\"", ",", "\"\<DETERM\>\"", ",", "1.0", ",", "0.01"}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.682711352642212*^9, 3.68271138232891*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CsVsBeta", "=", 
  RowBox[{"IndiceConfiabilidade", "[", 
   RowBox[{
   "InternalPressKickPlot", ",", "ExternalPressKickPlot", ",", "ax", ",", 
    RowBox[{"pipedatavec", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "KSRandomVarsData", ",", "0.104"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682688162866652*^9, 3.6826881798676243`*^9}, {
   3.6826882183548255`*^9, 3.6826882426982183`*^9}, 3.682688384562332*^9, {
   3.682688449626054*^9, 3.682688475545536*^9}, {3.682710759325276*^9, 
   3.6827107795094304`*^9}, {3.682710897093156*^9, 3.682710897660188*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20.92849194657666`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.85769343753`", ",", 
     RowBox[{"-", "100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.172216104676455`", ",", 
     RowBox[{"-", "1040"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.512450802794675`", ",", 
     RowBox[{"-", "1900"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.449489906176517`", ",", 
     RowBox[{"-", "1980"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.35513603421047`", ",", 
     RowBox[{"-", "2100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.3549759102551`", ",", 
     RowBox[{"-", "2100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18.698786387270506`", ",", 
     RowBox[{"-", "2920"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.991098362305117`", ",", 
     RowBox[{"-", "3800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.943336635628853`", ",", 
     RowBox[{"-", "3860"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.21090465737895`", ",", 
     RowBox[{"-", "4800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.550882077434427`", ",", 
     RowBox[{"-", "5700"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.522690422042388`", ",", 
     RowBox[{"-", "5740"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.887750214455668`", ",", 
     RowBox[{"-", "6680"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.319179432591879`", ",", 
     RowBox[{"-", "7600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.307369093157243`", ",", 
     RowBox[{"-", "7620"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.775720773458879`", ",", 
     RowBox[{"-", "8560"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.286917652618186`", ",", 
     RowBox[{"-", "9500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.1745102062254`", ",", 
     RowBox[{"-", "9500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.164876838262039`", ",", 
     RowBox[{"-", "9501"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.039422239119416`", ",", 
     RowBox[{"-", "9700"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.039293223178891`", ",", 
     RowBox[{"-", "9700"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.883826778279841`", ",", 
     RowBox[{"-", "9950"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.61110163262556`", ",", 
     RowBox[{"-", "10400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.346160012232316`", ",", 
     RowBox[{"-", "10850"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.088720148613659`", ",", 
     RowBox[{"-", "11300"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.837891450554858`", ",", 
     RowBox[{"-", "11750"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.594591773321689`", ",", 
     RowBox[{"-", "12200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.357853855397114`", ",", 
     RowBox[{"-", "12650"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.127377493621315`", ",", 
     RowBox[{"-", "13100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.899838848305292`", ",", 
     RowBox[{"-", "13550"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.66319459035475`", ",", 
     RowBox[{"-", "14000"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.615503172146465`", ",", 
     RowBox[{"-", "14100"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.588460710385794`", ",", 
     RowBox[{"-", "14200"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.541084699893592`", ",", 
     RowBox[{"-", "14300"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.493968231267074`", ",", 
     RowBox[{"-", "14400"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.447112838525484`", ",", 
     RowBox[{"-", "14500"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.400513989251369`", ",", 
     RowBox[{"-", "14600"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.354158871456123`", ",", 
     RowBox[{"-", "14700"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.308051938333818`", ",", 
     RowBox[{"-", "14800"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.262194723955721`", ",", 
     RowBox[{"-", "14900"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.216622096653103`", ",", 
     RowBox[{"-", "15000"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6826882584581194`*^9, {3.682710757216155*^9, 3.682710776075234*^9}, {
   3.6827108905697827`*^9, 3.682710918439377*^9}, 3.6827113678620825`*^9, 
   3.6827114025690675`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"kssf", ",", "CsVsBeta"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\< Depth (ft)\>\"", ",", "\"\<Surface Casing\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<safety factor and reliability index(\[Beta]) \>\"", ",", 
        "\"\< Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Stewart\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<safety factor\>\"", ",", "\"\<reliability index(\[Beta])\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[EmptyCircle]\>\"", ",", " ", "\"\<\[EmptySquare]\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6826882800923567`*^9, 3.682688298754424*^9}, {
  3.6827109431727915`*^9, 3.6827109666521344`*^9}, {3.682711980150103*^9, 
  3.6827119910547266`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQnZNr6XTCms2BAQSkzh6wuxD3ZGMKlP/izAFd20TD
pj4of9uZA5sL9+vY7ITyW84c+KzlIvnkCZQfdObAUsdtmi2C7BC+wpkDDhJP
b2vZQ/nvTh+o+asZcicXyt9z+oBQ5pfzC+dC+V2nDxjaP7lXfw7Kjzh9oGyh
UlXyTg4Iv/zUgfmbfINu7OeE8KedPBDA6VDE+5wLwt964kDZbTG2KaY8EP6V
4wcuVse5Hd3MC+F/Pnbg7lvzusU5/BC+0LEDCdKm33O3C0D4hkcPnLa3KVd7
LgjhBxw5IP5Y2bw4WBjCzz98QOlVPxeDvQiE/+nQgY0X2wXMkfjfLj448p5f
FMxv6Dt0QCon6+1HKJ8ByJ9k1PPuhJcknL9kcpf503tQ/o4DB5KsU7ifTpKC
8I/sPaD+8+RG7elQ/oa9BxLWzTN3KJKG8CV2HXgrxcV9pk8Gws/ZdiAz7YXl
kjlQvsu2A3rG2nFLWOUg/AObDhx5e6LsC4sChK+x7oB5P0/7Pgkof8PaA598
lnVK1itC+BeWHdhWv6T/f40yhJ+x4MDuo5YbVWoR/Ig309qD70H5H+YduFCz
Y266sgrUvLkH5u9532XiqwHhO0w40DsrioPhmCGEzxB5AADv39U7
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxNzG1IU3EYBfBLimEgaNkLNqSI2XLerpuKs6EYJIUYmTlp9iEyapvZRgbu
Q1JZmhJMNKhAmQZRxGSRjs0hCge7rq3dZYZQZinYCGcorvyy0sj4P5EHHg4/
Hjh7aywVFzZxHJe5fn/bJI8+6V/MLeYoBiFZ6pz+Zz2SzIHqHVnk4g6Ex9/E
hNs5zC/sSIgUjaVcJS/3oK9jRbVQTTY+wkdTi2t2g5vyFY4vA2rmt09xSHO8
17umoj0n4uU3bl2PkhXPURL/+8NaHhkDsLV1dSfYspmPeIAu2ZbxFnKdB6V5
uepWn8C8awiWbZ2Nlx4fpP0RuN/prp21k8URfHJES5Q2ntkL+I9+nvl6L4u5
fRSTsqmLev1/y4zPhmsrmW+uu7XpfYaQSv/vo/gZFyhM3+BYalu0WVQyW17C
cJIvn9OQy0VsvvJwTtufyawag/W+aqiOJ2/1Qdfg2s05DzD/8KHMV6AzZ5Mn
X0F9ZrpHM6hgdvuR46rvzT9MfhCA9Vi9c1Daz2x9jXML/sL2U+TTQaTN67T7
tOS7QcTxYW8pTx4OomZCTErcTl4KQpBdNkRWM5j3SDDyVbFvYXKFBMdUrTI5
RG6WkLIqnqh0kz0Slgsmfnnt5HkJffLE80V3yGkhdJtNOyNmclkIfwBmCeD1

         "]]}}, {{
        Directive[
         PointSize[0.016666666666666666`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptyCircle]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYC4pxcS6cT1mwODCAgdfaA3YW4JxtToPwXZw7o
2iYaNvVB+dvOHNhcuF/HZieU33LmwGctF8knT6D8oDMHljpu02wRZIfwFc4c
cJB4elvLHsp/d/pAzV/NkDu5UP6e0weEMr+cXzgXyu86fcDQ/sm9+nNQfsTp
A2ULlaqSd3JA+OWnDszf5Bt0Yz8nhD/t5IEAToci3udcEP7WEwfKbouxTTHl
gfCvHD9wsTrO7ehmXgj/87EDd9+a1y3O4YfwhY4dSJA2/Z67XQDCNzx64LS9
Tbnac0EIP+DIAfHHyubFwcIQfv7hA0qv+rkY7EUg/E+HDmy82C5gjsT/dvHB
kff8omB+Q9+hA1I5WW8/QvkMQP4ko553J7wk4fwlk7vMn96D8nccOJBkncL9
dJIUhH9k7wH1nyc3ak+H8jfsPZCwbp65Q5E0hC+x68BbKS7uM30yEH7OtgOZ
aS8sl8yB8l22HdAz1o5bwioH4R/YdODI2xNlX1gUIHyNdQfM+3na90lA+RvW
Hvjks6xTsl4Rwr+w7MC2+iX9/2uUIfyMBQd2H7XcqFKL4Ee8mdYefA/K/zDv
wIWaHXPTlVWg5s09MH/P+y4TXw0I32HCgd5ZURwMxwwhfIbIAwD8R9U9
         "]]}, {
        Directive[
         PointSize[0.016666666666666666`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["\[EmptySquare]", {0., 0.}], 
          "InsetString"], CompressedData["
1:eJxNzF9IU3EYxvFTE8NA0LI/2Igipst5Om4qzoZikBSiaOai2UVk1DazjQza
RVFZmhJMNKhAmQZhxGShjs0hCg92XFs7ywyhzP6AjXBG4aqblUaD3xv5wvfi
wwvP7gZr7RkZx3E5idYlWp/IrIgNDH8tKOPojEKa1D3/zwakWoL1W3PJZV2I
TL+ICzfzmYccSI6WTqVfJC/3YbDrp3qpnmx6gLfmNvfHNW4pUjo/jWiYXz7C
fm1Vv29VTXsuJCmu3bgaIyufoDzpz5vVQjJGYO/o6U225zEf9AI98o3TbeQm
LyoKCzTtfoF5+xism7uvnHu4j/Yn4Hmlv3zSQRYn8M4ZK1fZeWYfEDj0/sPn
O7nMnZOYlc+dNRj+W256PN5Yx3w94faW11lCBv2/T+KXLFiyc43jGR2xVlHF
bH0K4xG+ZkFLrhGx4cL9Bd1wDrN6Cra76rEmnrzJD/0l9w7OtZf5hx+V/mK9
JY88+wyaE/N92lElsyeAfHdzf9EB8r0gbIebXaNSNrPtOU4tBUo6j5KPh5C5
qNft0ZFvhyDjI74KnjweQsOMmJqyhfwtBEF+3hhdyWLeJcHEH4t/iZBrJTjn
GlVpYXKrhPQVsbrOQ/ZKWC6e+e1zkBclDCpSTpfeImeG0Wsxb4tayJVh/AVy
ueD3
         "]]}, {}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20.92849194657666}, {-15000., 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\" Depth (ft)\"", TraditionalForm], 
        FormBox["\"Surface Casing\"", TraditionalForm]}, {
        FormBox[
        "\"safety factor and reliability index(\[Beta]) \"", TraditionalForm], 
        FormBox[
        "\" Critical Case: Kick - Assumption: Partial full of gas - Failure \
check: Klever-Stewart\"", TraditionalForm]}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 20.92849194657666}, {-15000., 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"safety factor\"", "\"reliability index(\[Beta])\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.016666666666666666`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "Automatic"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6827109303310566`*^9, 3.6827109674821815`*^9}, {
  3.6827119815771847`*^9, 3.6827119916077585`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1345, 676},
WindowMargins->{{Automatic, 237}, {86, Automatic}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 256, 5, 52, "Input"],
Cell[817, 27, 2777, 76, 286, "Input"],
Cell[CellGroupData[{
Cell[3619, 107, 3396, 110, 172, "Input"],
Cell[7018, 219, 371400, 6102, 240, "Output"]
}, Open  ]],
Cell[378433, 6324, 4961, 120, 412, "Input"],
Cell[383397, 6446, 3157, 75, 412, "Input"],
Cell[386557, 6523, 638, 16, 112, "Input"],
Cell[CellGroupData[{
Cell[387220, 6543, 134, 2, 31, "Input"],
Cell[387357, 6547, 600, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387994, 6560, 186, 4, 62, "Subchapter"],
Cell[388183, 6566, 6680, 188, 576, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394900, 6759, 268, 5, 62, "Subchapter"],
Cell[395171, 6766, 1310, 35, 112, "Input"],
Cell[396484, 6803, 1249, 32, 112, "Input"],
Cell[397736, 6837, 1149, 31, 112, "Input"],
Cell[CellGroupData[{
Cell[398910, 6872, 367, 8, 72, "Input"],
Cell[399280, 6882, 435, 6, 31, "Output"]
}, Open  ]],
Cell[399730, 6891, 3589, 91, 332, "Input"],
Cell[403322, 6984, 3438, 90, 332, "Input"],
Cell[406763, 7076, 8144, 190, 792, "Input"],
Cell[414910, 7268, 10205, 217, 792, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425152, 7490, 199, 4, 62, "Subchapter"],
Cell[425354, 7496, 7691, 209, 948, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433082, 7710, 125, 1, 62, "Subchapter"],
Cell[433210, 7713, 1634, 40, 152, "Input"],
Cell[CellGroupData[{
Cell[434869, 7757, 178, 3, 31, "Input"],
Cell[435050, 7762, 917, 33, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436004, 7800, 1004, 34, 57, "Input"],
Cell[437011, 7836, 604, 14, 40, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437664, 7856, 201, 3, 62, "Subchapter"],
Cell[437868, 7861, 4386, 122, 616, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442291, 7988, 280, 6, 62, "Subchapter"],
Cell[442574, 7996, 4031, 109, 404, "Input"],
Cell[446608, 8107, 120, 2, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446765, 8114, 131, 1, 62, "Subchapter"],
Cell[446899, 8117, 9089, 220, 632, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456025, 8342, 115, 1, 90, "Title"],
Cell[456143, 8345, 11294, 191, 898, "Title"],
Cell[CellGroupData[{
Cell[467462, 8540, 32830, 809, 2612, "Input"],
Cell[CellGroupData[{
Cell[500317, 9353, 534, 10, 23, "Print"],
Cell[500854, 9365, 542, 11, 23, "Print"],
Cell[501399, 9378, 534, 10, 23, "Print"],
Cell[501936, 9390, 544, 11, 23, "Print"]
}, Open  ]],
Cell[502495, 9404, 24608, 512, 244, "Output"],
Cell[527106, 9918, 25826, 532, 244, "Output"],
Cell[552935, 10452, 17488, 364, 244, "Output"],
Cell[570426, 10818, 17951, 371, 244, "Output"],
Cell[588380, 11191, 778, 15, 40, "Message"],
Cell[589161, 11208, 780, 15, 40, "Message"],
Cell[589944, 11225, 778, 15, 40, "Message"],
Cell[590725, 11242, 862, 17, 21, "Message"],
Cell[591590, 11261, 18480, 383, 244, "Output"],
Cell[610073, 11646, 25939, 533, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636049, 12184, 231, 3, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[636305, 12191, 483, 6, 63, "Section"],
Cell[636791, 12199, 1361, 18, 31, "Input"],
Cell[638155, 12219, 3755, 87, 192, "Input"],
Cell[641913, 12308, 2094, 57, 272, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644044, 12370, 486, 6, 63, "Section"],
Cell[644533, 12378, 14513, 310, 1627, "Input"],
Cell[CellGroupData[{
Cell[659071, 12692, 450, 9, 31, "Input"],
Cell[659524, 12703, 8184, 236, 212, "Output"]
}, Open  ]],
Cell[667723, 12942, 98, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[667846, 12947, 1244, 31, 92, "Input"],
Cell[669093, 12980, 16568, 350, 226, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[685734, 13338, 13399, 227, 947, "Title"],
Cell[CellGroupData[{
Cell[699158, 13569, 25126, 702, 2052, "Input"],
Cell[CellGroupData[{
Cell[724309, 14275, 293, 7, 23, "Print"],
Cell[724605, 14284, 299, 7, 23, "Print"],
Cell[724907, 14293, 293, 7, 23, "Print"],
Cell[725203, 14302, 296, 7, 23, "Print"]
}, Open  ]],
Cell[725514, 14312, 108561, 1886, 244, "Output"],
Cell[834078, 16200, 111635, 1938, 244, "Output"],
Cell[945716, 18140, 76598, 1333, 244, "Output"],
Cell[1022317, 19475, 75780, 1319, 244, "Output"],
Cell[1098100, 20796, 523, 11, 40, "Message"],
Cell[1098626, 20809, 523, 11, 40, "Message"],
Cell[1099152, 20822, 523, 11, 40, "Message"],
Cell[1099678, 20835, 609, 13, 21, "Message"],
Cell[1100290, 20850, 75720, 1321, 244, "Output"],
Cell[1176013, 22173, 111690, 1936, 244, "Output"]
}, Open  ]],
Cell[1287718, 24112, 11225, 189, 871, "Input"],
Cell[CellGroupData[{
Cell[1298968, 24305, 21714, 562, 1492, "Input"],
Cell[CellGroupData[{
Cell[1320707, 24871, 361, 7, 23, "Print"],
Cell[1321071, 24880, 371, 8, 23, "Print"],
Cell[1321445, 24890, 361, 7, 23, "Print"],
Cell[1321809, 24899, 369, 8, 23, "Print"]
}, Open  ]],
Cell[1322193, 24910, 21616, 463, 244, "Output"],
Cell[1343812, 25375, 22164, 471, 244, "Output"],
Cell[1365979, 25848, 15507, 332, 244, "Output"],
Cell[1381489, 26182, 15737, 336, 244, "Output"],
Cell[1397229, 26520, 601, 12, 40, "Message"],
Cell[1397833, 26534, 601, 12, 40, "Message"],
Cell[1398437, 26548, 598, 12, 40, "Message"],
Cell[1399038, 26562, 685, 14, 21, "Message"],
Cell[1399726, 26578, 16352, 345, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416115, 26928, 258, 4, 62, "Subchapter"],
Cell[1416376, 26934, 3109, 87, 397, "Input"],
Cell[1419488, 27023, 2456, 61, 172, "Input"],
Cell[1421947, 27086, 11761, 261, 1545, "Input"],
Cell[1433711, 27349, 994, 25, 52, "Input"],
Cell[CellGroupData[{
Cell[1434730, 27378, 593, 11, 31, "Input"],
Cell[1435326, 27391, 4473, 131, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1439836, 27527, 1197, 31, 92, "Input"],
Cell[1441036, 27560, 16362, 346, 225, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
