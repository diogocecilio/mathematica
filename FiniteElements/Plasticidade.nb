(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1910361,      35370]
NotebookOptionsPosition[   1906193,      35252]
NotebookOutlinePosition[   1906540,      35267]
CellTagsIndexPosition[   1906497,      35264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", "NumericalDifferentialEquationAnalysis`"}]], "Input",
 CellChangeTimes->{
  3.692906590042447*^9, 3.692963009107127*^9, {3.6937520608669825`*^9, 
   3.6937520814121575`*^9}, {3.693752570762147*^9, 3.69375257221723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "a", " ", 
    "ser", " ", "imposta", " ", "no", " ", "do\[IAcute]nio", " ", "do", " ", 
    "elemento"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Forcing", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "0"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6942896338533*^9, 3.694289656192539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "os", " ", "pontos", " ", "e", " ", "os", " ", "pesos", 
    " ", "da", " ", "regra", " ", "de", " ", "integra\[CCedilla]\[ATilde]o"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntegrationRule", "[", "order_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vecPtosPesos", ",", "pts", ",", "w", ",", "matpsts", ",", "xi", ",", 
       "eta"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vecPtosPesos", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"GaussianQuadratureWeights", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "order"}], "+", "1"}], ",", 
          StyleBox[
           RowBox[{"-", "1"}], "TI"], ",", 
          StyleBox["1", "TI"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"pts", "=", 
       RowBox[{"vecPtosPesos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", "=", 
       RowBox[{"vecPtosPesos", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matpsts", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pts", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"pts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"[", "j", "]"}], "]"}], " ", 
            RowBox[{"w", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], " ", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "pts", "]"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "pts", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "matpsts"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6921751076778727`*^9, 3.6921751504306355`*^9}, 
   3.6926893425580797`*^9, {3.6927894363658743`*^9, 3.692789437973966*^9}, {
   3.692789477149207*^9, 3.692789477325217*^9}, {3.693210452932535*^9, 
   3.6932104534115624`*^9}, 3.693412794253273*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Retorna", " ", "os", " ", "pontos", " ", "e", " ", "os", " ", "pesos", 
      " ", "da", " ", "regra", " ", "de", " ", 
      "integra\[CCedilla]\[ATilde]o"}], "  ", "-", " ", "order"}], " ", "=", 
    " ", 
    RowBox[{
     RowBox[{
     "ordem", " ", "polinomial", " ", "das", " ", "fun\[CCedilla]\[OTilde]es",
       " ", "de", " ", "base", "  ", "eltype"}], " ", "=", " ", 
     RowBox[{
     "1", " ", "quadril\[AAcute]tero", " ", "2", " ", "tri\[AHat]ngulo"}]}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IntegrationRule", "[", 
    RowBox[{"order_", ",", "eltype_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vecPtosPesos", ",", "pts", ",", "w", ",", "matpsts", ",", "xi", ",", 
       "eta"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"eltype", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"matpsts", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5773502691896257"}], ",", 
                 "0.5773502691896257", ",", "1."}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "0.5773502691896257", ",", "0.5773502691896257", ",", "1."}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5773502691896257"}], ",", 
                 RowBox[{"-", "0.5773502691896257"}], ",", "1."}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5773502691896257", ",", 
                 RowBox[{"-", "0.5773502691896257"}], ",", "1."}], "}"}]}], 
              "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"matpsts", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.7745966692414834"}], ",", 
                 "0.7745966692414834", ",", "0.30864197530864174"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "0.", ",", "0.7745966692414834", ",", "0.4938271604938271"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "0.7745966692414834", ",", "0.7745966692414834", ",", 
                 "0.30864197530864174"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.7745966692414834"}], ",", "0.", ",", 
                 "0.4938271604938271"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.", ",", "0.", ",", "0.7901234567901237"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "0.7745966692414834", ",", "0.", ",", "0.4938271604938271"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.7745966692414834"}], ",", 
                 RowBox[{"-", "0.7745966692414834"}], ",", 
                 "0.30864197530864174"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.", ",", 
                 RowBox[{"-", "0.7745966692414834"}], ",", 
                 "0.4938271604938271"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.7745966692414834", ",", 
                 RowBox[{"-", "0.7745966692414834"}], ",", 
                 "0.30864197530864174"}], "}"}]}], "}"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"matpsts", "=", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "/", "3"}], ",", 
                RowBox[{"1", "/", "3"}], ",", 
                RowBox[{"1", "/", "2"}]}], "}"}], "}"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"matpsts", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", "6"}], ",", 
                 RowBox[{"1", "/", "6"}], ",", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"1", "/", "3"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"2", "/", "3"}], ",", 
                 RowBox[{"1", "/", "6"}], ",", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"1", "/", "3"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", "6"}], ",", 
                 RowBox[{"2", "/", "3"}], ",", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], " ", 
                  RowBox[{"1", "/", "3"}]}]}], "}"}]}], "}"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"order", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"matpsts", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", "3"}], ",", 
                 RowBox[{"1", "/", "3"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "27"}], "/", "48"}], " ", 
                  RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", "5"}], ",", 
                 RowBox[{"1", "/", "5"}], ",", 
                 RowBox[{
                  RowBox[{"25", "/", "48"}], " ", 
                  RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "/", "5"}], ",", 
                 RowBox[{"3", "/", "5"}], ",", 
                 RowBox[{
                  RowBox[{"25", "/", "48"}], " ", 
                  RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"3", "/", "5"}], ",", 
                 RowBox[{"1", "/", "5"}], ",", 
                 RowBox[{
                  RowBox[{"25", "/", "48"}], " ", 
                  RowBox[{"1", "/", "2"}]}]}], "}"}]}], "}"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"matpsts", "//", "N"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6934974783798847`*^9, 3.693498639636305*^9, {3.693498744260289*^9, 
   3.69349874601939*^9}, {3.6937554073503904`*^9, 3.69375543251783*^9}, {
   3.6942894257333345`*^9, 3.694289514840691*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Dada", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ",
      "o", " ", "vetor", " ", "de", " ", "carga", " ", "globais"}], ",", " ", 
    RowBox[{
    "aplica", " ", "condi\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", 
     " ", "definida", " ", "em", " ", "n\[OAcute]s"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{
    "Kglob_", ",", "Fglob_", ",", "node_", ",", "type_", ",", "ek_", ",", 
     "ef_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"position", ",", "i", ",", "j", ",", 
       RowBox[{"kglob", "=", "Kglob"}], ",", 
       RowBox[{"fglob", "=", "Fglob"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"type", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"type", "\[NotEqual]", "1"}], " ", "&&", " ", 
         RowBox[{"type", "\[NotEqual]", "2"}]}], ",", 
        RowBox[{
        "Print", "[", 
         "\"\<Unknown type. Specify 0 for Dirichlet, 1 for Newman or 2 for \
Mixed.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"position", "=", 
       RowBox[{
        RowBox[{"node", " ", "2"}], "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Dirichlet", " ", "-", " ", 
          RowBox[{"Specified", " ", "Solution"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "2"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "2"}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"position", "+", "i", "-", "1"}], ",", 
                   RowBox[{"position", "+", "j", "-", "1"}]}], "]"}], "]"}], "*=", 
                RowBox[{"ek", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"fglob", "[", 
              RowBox[{"[", 
               RowBox[{"position", "+", "i", "-", "1"}], "]"}], "]"}], "=", 
             RowBox[{"ef", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"type", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "2"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"fglob", "[", 
              RowBox[{"[", 
               RowBox[{"position", "+", "i", "-", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"ef", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"kglob", ",", "fglob"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6926539510483675`*^9, 3.6926539638715906`*^9}, {
  3.6926561474810925`*^9, 3.692656192199375*^9}, {3.6926597058172927`*^9, 
  3.692659720855719*^9}, {3.6926598048150663`*^9, 3.69265982969711*^9}, {
  3.6926598708811827`*^9, 3.692659908820449*^9}, {3.6931444262400007`*^9, 
  3.6931444269670424`*^9}, {3.693248051164854*^9, 3.693248051995902*^9}, {
  3.6934839019306602`*^9, 3.693483915145416*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "as", " ", "fun\[CCedilla]\[OTilde]es", " ", "de", " ", 
    "forma", " ", "e", " ", "as", " ", "derivadas", " ", "de", " ", 
    "tri\[AHat]ngulos", " ", "e", " ", "quadril\[AAcute]teros"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Compute2DShape", "[", 
     RowBox[{"order_", ",", "eltype_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Zeta]1", ",", "\[Zeta]2", ",", "\[Zeta]3", ",", "a", ",", "b", ",", 
        "xi", ",", "eta", ",", "psis", ",", "dpsis"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eltype", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "Quad", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"psis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.25", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "xi"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
                RowBox[{"0.25", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "xi"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "eta"}], ")"}]}], ",", 
                RowBox[{"0.25", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "xi"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "eta"}], ")"}]}], ",", 
                RowBox[{"0.25", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "xi"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "eta"}], ")"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dpsis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.250"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}]}], ")"}]}], ",", 
                  RowBox[{"0.250", " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}]}], ")"}]}], ",", 
                  RowBox[{"0.250", " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"-", "0.250"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], 
                    ")"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "0.250"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"-", "0.250"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                  ",", 
                  RowBox[{"0.250", " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                  ",", 
                  RowBox[{"0.250", " ", 
                   RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], "}"}]}], "}"}]}],
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"psis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xi", " ", "eta", 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
                RowBox[{"xi", " ", "eta", 
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "/", "4"}]}], ",", 
                RowBox[{"xi", " ", "eta", 
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
                RowBox[{"xi", " ", "eta", 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "+", "1"}], ")"}], "/", "4"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "eta"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "xi"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"eta", "+", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "eta"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "+", "1"}], ")"}], "/", "2"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "xi"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"eta", "+", "1"}], ")"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"eta", "-", "1"}], ")"}], "/", "2"}]}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"xi", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"xi", "-", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"eta", "+", "1"}], ")"}], 
                 RowBox[{"(", 
                  RowBox[{"eta", "-", "1"}], ")"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dpsis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "+", 
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", "xi"}], "+", 
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi"}], "+", 
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "+", 
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "eta", 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi"}], "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "-", 
                   RowBox[{"0.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], 
                    ")"}]}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}], 
                   "+", 
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "+", 
                   RowBox[{"0.250", " ", "eta", " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", "eta", " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "+", 
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{"0.250", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}], 
                   "+", 
                   RowBox[{"0.250", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "-", 
                   RowBox[{"0.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", "xi", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}]}],
                   ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}], 
                   "-", 
                   RowBox[{"0.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", "xi"}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "eta"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], ")"}]}], 
                   "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "eta"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1.0"}], "+", "xi"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "+", "xi"}], 
                    ")"}]}]}]}], "}"}]}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eltype", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Zeta]1", "=", 
           RowBox[{"1", "-", "xi", "-", "eta"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Zeta]2", "=", "xi"}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Zeta]3", "=", "eta"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"psis", "=", 
              RowBox[{"{", 
               RowBox[{
               "\[Zeta]1", ",", "\[IndentingNewLine]", "\[Zeta]2", ",", " ", 
                "\[IndentingNewLine]", "\[Zeta]3"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dpsis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.0"}], ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.0"}], ",", "0", ",", "1"}], "}"}]}], 
               "}"}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]",
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"psis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "*", "\[Zeta]1", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]1", "-", 
                   RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"2", "*", "\[Zeta]2", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]2", "-", 
                   RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"2", "*", "\[Zeta]3", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]3", "-", 
                   RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"4", "*", "\[Zeta]1", "*", "\[Zeta]2"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"4", "*", "\[Zeta]2", "*", "\[Zeta]3"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"4", "*", "\[Zeta]3", "*", "\[Zeta]1"}]}], "}"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"dpsis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2.0"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.50", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"2.0", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"2.0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.50"}], "+", "xi"}], ")"}]}], "+", 
                   RowBox[{"2.0", " ", "xi"}]}], ",", "0", ",", 
                  RowBox[{
                   RowBox[{"4.0", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"4.0", " ", "xi"}]}], ",", 
                  RowBox[{"4.0", " ", "eta"}], ",", 
                  RowBox[{
                   RowBox[{"-", "4.0"}], " ", "eta"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2.0"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.50", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"2.0", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", "0", ",", 
                  RowBox[{
                   RowBox[{"2.0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.50"}], "+", "eta"}], ")"}]}], "+", 
                   RowBox[{"2.0", " ", "eta"}]}], ",", 
                  RowBox[{
                   RowBox[{"-", "4.0"}], " ", "xi"}], ",", 
                  RowBox[{"4.0", " ", "xi"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4.0"}], " ", "eta"}], "+", 
                   RowBox[{"4.0", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}]}], "}"}]}], 
               "}"}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]",
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"psis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"9", "/", "2"}], ")"}], "*", "\[Zeta]1", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]1", "-", 
                   RowBox[{"2", "/", "3"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]1", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"9", "/", "2"}], ")"}], "*", "\[Zeta]2", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]2", "-", 
                   RowBox[{"2", "/", "3"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]2", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"9", "/", "2"}], ")"}], "*", "\[Zeta]3", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]3", "-", 
                   RowBox[{"2", "/", "3"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]3", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]1", "*", 
                 "\[Zeta]2", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]1", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]1", "*", 
                 "\[Zeta]2", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]2", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]2", "*", 
                 "\[Zeta]3", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]2", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]2", "*", 
                 "\[Zeta]3", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]3", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]3", "*", 
                 "\[Zeta]1", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]3", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"27", "/", "2"}], ")"}], "*", "\[Zeta]3", "*", 
                 "\[Zeta]1", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Zeta]1", "-", 
                   RowBox[{"1", "/", "3"}]}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                "27", "*", "\[Zeta]1", "*", "\[Zeta]2", "*", "\[Zeta]3"}]}], 
               "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"dpsis", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.33333333333333330", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.33333333333333330", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.66666666666666660"}], "+", "xi"}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], 
                    ")"}]}], "+", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.66666666666666660"}], "+", "xi"}], ")"}], 
                    " ", "xi"}], "+", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], ")"}], 
                    " ", "xi"}]}], ",", "0", ",", 
                  RowBox[{
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}], "-", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], 
                    ")"}]}], "+", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}], "-", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], ")"}], 
                    " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{"13.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], 
                    ")"}]}], "+", 
                   RowBox[{"13.50", " ", "eta", " ", "xi"}]}], ",", 
                  RowBox[{"13.50", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                    " ", "eta"}], ",", 
                  RowBox[{
                   RowBox[{"-", "13.50"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                    " ", "eta"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "13.50"}], " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"13.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", 
                  RowBox[{
                   RowBox[{"27.0", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"27.0", " ", "eta", " ", "xi"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.33333333333333330", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.33333333333333330", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", "0", ",", 
                  RowBox[{
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.66666666666666660"}], "+", "eta"}], ")"}],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], 
                    ")"}]}], "+", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.66666666666666660"}], "+", "eta"}], ")"}],
                     " ", "eta"}], "+", 
                   RowBox[{"4.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                     " ", "eta"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "13.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}], "-", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{"-", "13.50"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], ")"}], 
                   " ", "xi"}], ",", 
                  RowBox[{"13.50", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "xi"}], ")"}], 
                   " ", "xi"}], ",", 
                  RowBox[{
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                     " ", "xi"}], "+", 
                   RowBox[{"13.50", " ", "eta", " ", "xi"}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "13.50"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                     " ", "eta"}], "+", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.33333333333333330"}], "+", "eta"}], ")"}],
                     " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "+", 
                   RowBox[{"13.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "13.50"}], " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "-", 
                   RowBox[{"13.50", " ", "eta", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}], "+", 
                   RowBox[{"13.50", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.66666666666666660", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}]}]}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "27.0"}], " ", "eta", " ", "xi"}], "+", 
                   RowBox[{"27.0", " ", 
                    RowBox[{"(", 
                    RowBox[{"1.0", "\[VeryThinSpace]", "-", 
                    RowBox[{"1.0", " ", "eta"}], "-", 
                    RowBox[{"1.0", " ", "xi"}]}], ")"}], " ", "xi"}]}]}], 
                 "}"}]}], "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"psis", ",", "dpsis"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.693498895105917*^9, 3.693498896568001*^9}, {
  3.693500125441288*^9, 3.6935001306355853`*^9}, {3.6935106078185472`*^9, 
  3.693510641370466*^9}, {3.693511060439436*^9, 3.6935110623015423`*^9}, {
  3.693751924554186*^9, 3.693752080590111*^9}, {3.6942895969280357`*^9, 
  3.6942896220596795`*^9}, {3.694289681136983*^9, 3.694289694256606*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "as", " ", "coordenas", " ", "x", " ", "e", " ", "y", " ", 
    "e", " ", "o", " ", "jacobiano"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeData", "[", 
    RowBox[{"Coords_", ",", "psis_", ",", "GradPsi_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "=", "0"}], ",", 
       RowBox[{"y", "=", "0"}], ",", "Jac", ",", "xi", ",", "eta", ",", "co", 
       ",", "dx", ",", "dy"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Jac", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "+=", 
          RowBox[{
           RowBox[{"psis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "+=", 
          RowBox[{
           RowBox[{"psis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Jac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"GradPsi", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Jac", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"GradPsi", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Jac", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"GradPsi", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Jac", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], "+=", 
          RowBox[{
           RowBox[{"GradPsi", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"Coords", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "psis", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"psis", ",", "GradPsi", ",", "Jac", ",", "x", ",", "y"}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6926888356909685`*^9, 3.6926888372977715`*^9}, {
   3.692689656086034*^9, 3.692689666028653*^9}, {3.6934025367041674`*^9, 
   3.6934025399523535`*^9}, {3.6934040324217176`*^9, 
   3.6934040335487823`*^9}, {3.693404416242671*^9, 3.69340442793834*^9}, {
   3.693482858848999*^9, 3.6934828820083237`*^9}, {3.6934843594318275`*^9, 
   3.6934843625570064`*^9}, {3.6934844655008945`*^9, 
   3.6934844736293592`*^9}, {3.6937521309819927`*^9, 
   3.6937524403946905`*^9}, {3.693752474867662*^9, 3.693752475459696*^9}, {
   3.6937525157870026`*^9, 3.6937525320589333`*^9}, {3.6937535178203154`*^9, 
   3.6937535218115435`*^9}, 3.693753555652479*^9, {3.6937539751214714`*^9, 
   3.6937539995608697`*^9}, {3.6937543904382267`*^9, 
   3.6937543912682743`*^9}, {3.6937545573977757`*^9, 
   3.6937545804600954`*^9}, {3.6937547282275467`*^9, 3.6937547364790187`*^9}, 
   3.6937572656256776`*^9, {3.6937573015297313`*^9, 3.693757316577592*^9}, {
   3.6942897082030306`*^9, 3.694289733334675*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "cada", " ", "ponto", " ", "de", " ", "integra\[CCedilla]\[ATilde]o", 
    " ", "na", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ", "no", 
    " ", "vetor", " ", "de", " ", "carga", " ", "elementar"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContributeElastic", "[", 
    RowBox[{"data_", ",", "weight_", ",", "order_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "C", ",", "k", ",", "B", ",", "fu", ",", "InvJac", ",", "GradPsi", ",", 
       "nnodes", ",", "Jac", ",", "GradPhi", ",", "DetJ", ",", "wpLocal", ",",
        "psi", ",", "ek", ",", "ef", ",", "x", ",", "y", ",", "i", ",", "j"}],
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"psi", ",", "GradPsi", ",", "Jac", ",", "x", ",", "y"}], 
        "}"}], "=", "data"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nnodes", "=", 
       RowBox[{"Length", "[", "psi", "]"}]}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"DetJ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"InvJac", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Jac", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Jac", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Jac", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"Jac", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}], "/", 
        "DetJ"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"GradPhi", "=", 
       RowBox[{"InvJac", ".", "GradPsi"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"nu", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"nu", " ", 
        RowBox[{"young", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"nu", "^", "2"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wpLocal", "=", 
       RowBox[{"weight", "  ", "DetJ"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fu", "=", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], "+", "fu"}], "]"}], "]"}], " ", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Forcing", "[", 
              RowBox[{"x", ",", "y"}], "]"}], " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", "wpLocal"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "i"}], "+", "1", "+", "fu"}], ")"}], "]"}], 
           "]"}], "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Forcing", "[", 
              RowBox[{"x", ",", "y"}], "]"}], " ", 
             RowBox[{"psi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", "wpLocal"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], "  ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", " ", "nnodes"}], "}"}]}], "]"}], 
         ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", " ", "nnodes"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.692545357034218*^9, 3.6925453634278316`*^9}, {
   3.692546403587562*^9, 3.692546408918974*^9}, {3.6925465754563227`*^9, 
   3.69254657933013*^9}, {3.6926904948937445`*^9, 3.692690510306571*^9}, 
   3.692690686961885*^9, {3.692690820005928*^9, 3.6926908721650395`*^9}, {
   3.692691654853261*^9, 3.6926916566638646`*^9}, 3.6926973580710154`*^9, {
   3.6937530072641134`*^9, 3.6937530096792517`*^9}, {3.6937549690623217`*^9, 
   3.693755008531579*^9}, 3.6937599392976027`*^9, {3.694289768278736*^9, 
   3.6942898156248198`*^9}, 3.694293550603312*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "cada", " ", "ponto", " ", "de", " ", "integra\[CCedilla]\[ATilde]o", 
    " ", "na", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ", "no", 
    " ", "vetor", " ", "de", " ", "carga", " ", "elementar"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ContributePlastic", "[", 
    RowBox[{
    "data_", ",", "weight_", ",", "order_", ",", "dsol_", ",", 
     "plasticstrain_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hardeningvariable", "=", "0"}], 
       RowBox[{"(*", "Perfeitoplastico", "*)"}], ",", "C", ",", "k", ",", "B",
        ",", "fu", ",", "InvJac", ",", "GradPsi", ",", "nnodes", ",", "Jac", 
       ",", "GradPhi", ",", "DetJ", ",", "wpLocal", ",", "psi", ",", "ek", 
       ",", "ef", ",", "x", ",", "y", ",", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"stress", ",", "strain"}], "}"}], "=", 
       RowBox[{"ComputeStress", "[", 
        RowBox[{"dsol", ",", "young", ",", "nu"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "updatedstrain", ",", "updatedstress", ",", "hardeningvariable"}], 
        "}"}], "=", 
       RowBox[{"ApplyStrainComputeStress", "[", 
        RowBox[{
        "strain", ",", "plasticstrain", ",", "sigmay", ",", "young", ",", 
         "nu", ",", "hardeningvariable"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"updatedplasticstrain", "=", 
       RowBox[{"strain", "-", "updatedstrain"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"psi", ",", "GradPsi", ",", "Jac", ",", "x", ",", "y"}], 
        "}"}], "=", "data"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nnodes", "=", 
       RowBox[{"Length", "[", "psi", "]"}]}], " ", ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"DetJ", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", 
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", 
         RowBox[{"Jac", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"InvJac", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Jac", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"Jac", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Jac", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{"Jac", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}], "/", 
        "DetJ"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"GradPhi", "=", 
       RowBox[{"InvJac", ".", 
        RowBox[{"Transpose", "[", "GradPsi", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"C", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"nu", "^", "2"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"nu", " ", 
        RowBox[{"young", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"nu", "^", "2"}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"C", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "=", 
       RowBox[{"young", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wpLocal", "=", 
       RowBox[{"weight", "  ", "DetJ"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fu", "=", 
       RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", " ", "nnodes"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], "+", "fu"}], "]"}], "]"}], " ", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Forcing", "[", 
               RowBox[{"x", ",", "y"}], "]"}], " ", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"updatedstress", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], 
              RowBox[{"GradPhi", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"updatedstress", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], 
              RowBox[{"GradPhi", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], " ", ")"}], "*", 
           "wpLocal"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ef", "[", 
           RowBox[{"[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "i"}], "+", "1", "+", "fu"}], ")"}], "]"}], 
           "]"}], "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Forcing", "[", 
               RowBox[{"x", ",", "y"}], "]"}], " ", 
              RowBox[{"psi", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"updatedstress", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], 
              RowBox[{"GradPhi", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"updatedstress", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], 
              RowBox[{"GradPhi", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}], ")"}], "*", 
           "wpLocal"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", " ", "nnodes"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], "  ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ek", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{
                 RowBox[{"2", " ", "i"}], "+", "1", "+", "fu"}], ",", 
                RowBox[{
                 RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], "]"}], "+=", 
             RowBox[{
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], " ", 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "  ", 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], 
                 RowBox[{"C", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], 
                 RowBox[{"GradPhi", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}]}]}], ")"}], 
              "wpLocal"}]}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6937417727435355`*^9, 3.6937417736475873`*^9}, {
   3.693742294795395*^9, 3.6937422997476788`*^9}, {3.693746532198761*^9, 
   3.6937465550620685`*^9}, {3.6937466033178287`*^9, 
   3.6937466060939875`*^9}, {3.6937467546614847`*^9, 
   3.6937467710684233`*^9}, {3.693746822172346*^9, 3.6937469298925076`*^9}, {
   3.69374696560355*^9, 3.6937470305392647`*^9}, {3.6937471108408575`*^9, 
   3.693747151954209*^9}, {3.693747442463825*^9, 3.693747566765935*^9}, 
   3.6937476455434403`*^9, {3.693747748790346*^9, 3.693747751815519*^9}, {
   3.693748002689868*^9, 3.69374800604206*^9}, {3.6937577795760736`*^9, 
   3.6937578001282496`*^9}, {3.693757836215314*^9, 3.6937578394795003`*^9}, {
   3.693757974566227*^9, 3.693757976407332*^9}, {3.693759725034348*^9, 
   3.6937597894020295`*^9}, {3.693759841674019*^9, 3.6937598490094385`*^9}, {
   3.6942934960656166`*^9, 3.6942935308224773`*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"ApplyStrainComputeStress", "[", 
    RowBox[{
    "etrial_", ",", "epsp_", ",", "sigmay_", ",", "young_", ",", "nu_", ",", 
     "epbarn_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"H", "=", "0"}], ",", "G", ",", "K", ",", "trialstrain", ",", 
       "updatedstrain", ",", "trialstress", ",", "S", ",", "P", ",", "j2", 
       ",", "phi", ",", "gamma", ",", "updatedstress", ",", 
       "hardeningvariable"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"G", "=", 
       RowBox[{
        RowBox[{"(", "young", ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"K", "=", 
       RowBox[{
        RowBox[{"(", "young", ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"3", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"trialstrain", "=", 
       RowBox[{"(", 
        RowBox[{"etrial", "-", "epsp"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"hardeningvariable", "=", "epbarn"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"P", "=", 
       RowBox[{"K", " ", 
        RowBox[{"Tr", "[", "trialstrain", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"S", "=", 
       RowBox[{"2", " ", "G", 
        RowBox[{"(", 
         RowBox[{"trialstrain", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "3"}], " ", 
            RowBox[{"Tr", "[", "trialstrain", "]"}], 
            RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ")"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", 
         RowBox[{"Tr", "[", 
          RowBox[{"S", ".", "S"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"phi", "=", 
       RowBox[{"q", "-", " ", "sigmay"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"phi", "\[GreaterEqual]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"gamma", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", "-", "sigmay"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", "G"}], " ", "+", "H"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"S", "*=", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"gamma", " ", "3", " ", "G"}], ")"}], "/", "q"}], 
             ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"updatedstrain", "=", 
          RowBox[{
           RowBox[{"S", "/", 
            RowBox[{"(", 
             RowBox[{"2", "G"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "3"}], ")"}], 
            RowBox[{"Tr", "[", "trialstrain", "]"}], " ", 
            RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"hardeningvariable", "=", "gamma"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"updatedstrain", "=", "trialstrain"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"updatedstress", "=", 
       RowBox[{"S", "+", 
        RowBox[{"P", " ", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "updatedstrain", ",", "updatedstress", ",", "hardeningvariable"}], 
       "}"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{3.6937584562727785`*^9, 3.6937595496243153`*^9, 
  3.694293476612382*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", 
    " ", "o", " ", "vetor", " ", "de", " ", "carga", " ", "elementar"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CalcStiffElastic", "[", 
    RowBox[{"order_", ",", "elcoords_", ",", "eltype_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "GradPsi", ",", "Dphi", ",", "vecPtosPesos", ",", "Dpsi", ",", "nnodes",
        ",", "Dx", ",", "DetJac", ",", "psi", ",", "InverseJac", ",", 
       "InverseDx", ",", "gradphixy", ",", "wlocal", ",", "x", ",", "i", ",", 
       "ef", ",", "ek", ",", "j", ",", "psis", ",", "GradPhi", ",", "J", ",", 
       "DetJ", ",", "InvJ", ",", "wpLocal", ",", "laplacianContribute", ",", 
       "L2Contribute", ",", "Ex", ",", "F", ",", "y", ",", "f", ",", "xi", 
       ",", "eta", ",", "w", ",", "intrule", ",", "intpts", ",", "l", ",", 
       "h", ",", "Jac", ",", "data", ",", "npts"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nnodes", "=", 
       RowBox[{"Length", "[", "elcoords", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intrule", "=", 
       RowBox[{"IntegrationRule", "[", 
        RowBox[{"order", ",", "eltype"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"psis", ",", "GradPsi"}], "}"}], "=", 
       RowBox[{"Compute2DShape", "[", 
        RowBox[{"order", ",", "eltype"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npts", "=", 
       RowBox[{"Length", "[", "intrule", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xi", ",", "eta", ",", "w"}], "}"}], "=", 
          RowBox[{"intrule", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"ComputeData", "[", 
           RowBox[{"elcoords", ",", "psis", ",", "GradPsi"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ek", ",", "ef"}], "}"}], "+=", 
          RowBox[{"ContributeElastic", "[", 
           RowBox[{"data", ",", "w", ",", "order"}], "]"}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "npts"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6925454826660705`*^9, 3.6925454850372744`*^9}, {
   3.69268888756706*^9, 3.692688907551695*^9}, {3.6926889485605807`*^9, 
   3.692688948841381*^9}, {3.692690481851121*^9, 3.6926904874993315`*^9}, {
   3.6926906611106396`*^9, 3.6926906910762963`*^9}, {3.6926908908312764`*^9, 
   3.692690894250683*^9}, {3.692691055266967*^9, 3.6926910578877716`*^9}, {
   3.6926928051765194`*^9, 3.69269280542612*^9}, {3.6934045051377554`*^9, 
   3.693404538657673*^9}, {3.6934045750987573`*^9, 3.6934045775218954`*^9}, {
   3.6934830409834166`*^9, 3.693483051808036*^9}, {3.6934839636691914`*^9, 
   3.6934839941849365`*^9}, {3.693484431957976*^9, 3.693484432406001*^9}, {
   3.6934965848477783`*^9, 3.693496610725258*^9}, {3.693496681059281*^9, 
   3.6934967017084618`*^9}, {3.693496740609687*^9, 3.693496749987223*^9}, {
   3.693496964000464*^9, 3.6934969784302893`*^9}, {3.693497077663965*^9, 
   3.6934970966480513`*^9}, {3.69349736797357*^9, 3.6934973733648787`*^9}, {
   3.6934974043976536`*^9, 3.6934974066837845`*^9}, {3.69349743791057*^9, 
   3.693497439636669*^9}, {3.693498940369506*^9, 3.693498940522515*^9}, {
   3.6935013747757463`*^9, 3.693501381960157*^9}, {3.6937537554499073`*^9, 
   3.693753779428279*^9}, 3.693753841441826*^9, {3.6937540205190687`*^9, 
   3.693754024344287*^9}, {3.6937545903966637`*^9, 3.693754608940724*^9}, {
   3.693754688035248*^9, 3.6937547442514634`*^9}, {3.6937550240574675`*^9, 
   3.6937550386333013`*^9}, {3.6937550785285826`*^9, 3.693755098602731*^9}, {
   3.693755294822954*^9, 3.693755296863071*^9}, 3.693755346510911*^9, {
   3.6937553983428755`*^9, 3.693755400838018*^9}, {3.693757246865605*^9, 
   3.6937572570581875`*^9}, {3.6937573245770493`*^9, 3.6937573302973766`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", 
    " ", "o", " ", "vetor", " ", "de", " ", "carga", " ", "elementar"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CalcStiffPlastic", "[", 
    RowBox[{
    "order_", ",", "elcoords_", ",", "eltype_", ",", "elmemory_", ",", 
     "plasticstrain_", ",", "dsol_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "npts", ",", "Dphi", ",", "vecPtosPesos", ",", "Dpsi", ",", "nnodes", 
       ",", "Dx", ",", "DetJac", ",", "psi", ",", "InverseJac", ",", 
       "InverseDx", ",", "gradphixy", ",", "wlocal", ",", "x", ",", "i", ",", 
       "ef", ",", "ek", ",", "j", ",", "psis", ",", "GradPhi", ",", "J", ",", 
       "DetJ", ",", "InvJ", ",", "wpLocal", ",", "laplacianContribute", ",", 
       "L2Contribute", ",", "Ex", ",", "F", ",", "y", ",", "f", ",", "xi", 
       ",", "eta", ",", "w", ",", "intrule", ",", "intpts", ",", "l", ",", 
       "h", ",", "Jac", ",", "data", ",", "localelementmemory"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nnodes", "=", 
       RowBox[{"Length", "[", "elcoords", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ek", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ef", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"nnodes", " ", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"intrule", "=", 
       RowBox[{"IntegrationRule", "[", 
        RowBox[{"order", ",", "eltype"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"npts", "=", 
       RowBox[{"Length", "[", "intrule", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"localelementmemory", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "npts", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "npts"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xi", ",", "eta", ",", "w"}], "}"}], "=", 
          RowBox[{"intrule", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"ComputeData", "[", 
           RowBox[{
           "xi", ",", "eta", ",", "elcoords", ",", "order", ",", "eltype"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"eltype", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ek", ",", "ef", ",", "newplasticstrain"}], "}"}], "+=", 
             RowBox[{"ContributePlastic", "[", 
              RowBox[{
              "data", ",", "w", ",", "order", ",", "dsol", ",", 
               "plasticstrain"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ek", ",", "ef", ",", "newplasticstrain"}], "}"}], "+=", 
             RowBox[{"0.5", 
              RowBox[{"ContributeElastic", "[", 
               RowBox[{
               "data", ",", "w", ",", "order", ",", "dsol", ",", 
                "plasticstrain"}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"localelementmemory", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "=", "newplasticstrain"}], ";"}]}],
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ek", ",", "ef", ",", "newplasticstrain"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxV0oQ2EABuATVmKlJBcknQxJmjFXhIXkQp1o0Yi2rKTQSCikmamR/zKs
GA21diVrp2xiLD9RVkRuSApHmyRExvd+F08Pq2mv0oYxDJNE4E5OyX/pBYVK
ZqXXpb55CocERd+6bheXv075sPllga4pyDcWkY3fQXq9adWCRTrNMj6fV/HY
LDqkh0yPp3i5ueAMi9dsG8Vk34qDPtAsybQYBMVGtFKKRRn3ubhhM1uO03qS
DXvktpveYRzR0vWJGaHsB7vXQzIv+eNXnIMZNpE9InN5NRJsfWCzsMvulOJx
/YwcK+d28vBp+CCHA/uVVVhetNWAL7fj1Lgv/U+P4x32ITzLj43gybsLelOK
exSbG9/pIf9o+TFZ55qkP/uvuk/Ii7ynB0+cxV6XDAuKWt54ixMslw94TP/2
hH221gB+kR4EcaR4mysl/3W4VLgiSj2N3c5+usdZbcHaGO8S/gdpzvxf
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Monta", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ",
     "o", " ", "vetor", " ", "de", " ", "carga", " ", "globais"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords_", ",", "topol_", ",", "order_", ",", "forcing_", ",", 
     "eltype_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fu", ",", "nels", ",", "p", ",", "i", ",", "j", ",", "sz", ",", 
       "Kglob", ",", "k", ",", "rows", ",", "cols", ",", "el", ",", "colglob",
        ",", "rowglob", ",", "Fglob", ",", "Ke", ",", "Fe", ",", "ik", ",", 
       "co"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "order"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nels", "=", 
       RowBox[{"Length", "[", "allcoords", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rows", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"allcoords", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sz", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "nnodes", "]"}], "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\< Length[nnodes] = \>\"", ",", " ", 
        RowBox[{"Length", "[", "nnodes", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<  nels rows= \>\"", ",", "  ", 
        RowBox[{"nels", " ", "rows"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cols", "=", "rows"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Kglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", " ", "sz", "}"}], ",", 
         RowBox[{"{", " ", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"co", "=", 
          RowBox[{
           RowBox[{"allcoords", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "//", "N"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Ke", ",", "Fe"}], "}"}], "=", 
          RowBox[{"CalcStiffElastic", "[", 
           RowBox[{"order", ",", "co", ",", "eltype"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Ke = \>\"", ",", 
             RowBox[{"Ke", "//", "MatrixForm"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"fu", "=", 
          RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"rowglob", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"colglob", "=", 
                RowBox[{"topol", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "colglob"}], "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "j"}], "+", "fu"}]}], "]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "cols"}], "}"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Fglob", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", "rowglob"}], "+", "fu"}], "]"}], "]"}], "+=", 
             RowBox[{"Fe", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "rows"}], "}"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "nels"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Kglob", ",", "Fglob"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQrSZbu/VH02tHx7lbt4PosLpze0B0S8kzMH3moOkD
EF3inQemH+XHPwPRtRlmL0G03/4ixp9A+uyl21IgOonLOwREt3ytBdNipX9r
fwFpqwSXOhA989GDSSBa4PzeaSD6qUTZEhDN6H9+OYiek3xpNYh+9urGGhCt
x/XjMIhWm2B5BETv3e901aD5teMiK9nbIPrdp76nILrun9wzEL162WQtWyAt
EBahDaLz5r05bAekWSaJHwPRadcC1jgA6Q+Xw8C03WGGx05Ael3SGzCtUfjW
Yk7La0cO7d9WILo/f5Y9iF4ivBpMXzS95wyinZbpe4BovaZ7wSA6YtPcSBAd
k7EsAUSLzZ2VCKLd3ti0HwLSDI2rO0B0SfMdM/fW147zl+e6guiJJrs9/dqA
9mpfAtMAd0ndlg==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Monta", " ", "a", " ", "matriz", " ", "de", " ", "rigidez", " ", "e", " ",
     "o", " ", "vetor", " ", "de", " ", "carga", " ", "globais"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"AssemblePlastic", "[", 
    RowBox[{
    "allcoords_", ",", "topol_", ",", "order_", ",", "forcing_", ",", 
     "eltype_", ",", "sol_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fu", ",", "nels", ",", "p", ",", "i", ",", "j", ",", "sz", ",", 
       "Kglob", ",", "k", ",", "rows", ",", "cols", ",", "el", ",", "colglob",
        ",", "rowglob", ",", "Fglob", ",", "Ke", ",", "Fe", ",", "ik", ",", 
       "co"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "order"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nels", "=", 
       RowBox[{"Length", "[", "allcoords", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rows", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"allcoords", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sz", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "nnodes", "]"}], "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\< Length[nnodes] = \>\"", ",", " ", 
        RowBox[{"Length", "[", "nnodes", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<  nels rows= \>\"", ",", "  ", 
        RowBox[{"nels", " ", "rows"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cols", "=", "rows"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Kglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", " ", "sz", "}"}], ",", 
         RowBox[{"{", " ", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Fglob", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "sz", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", "nels"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"co", "=", 
          RowBox[{
           RowBox[{"allcoords", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "//", "N"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dsol", ",", "plasticstrain"}], "}"}], "=", 
          RowBox[{"Memory", "[", 
           RowBox[{"[", 
            RowBox[{"loadstep", ",", "k"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Ke", ",", "Fe", ",", "newplasticstrain"}], "}"}], "=", 
          RowBox[{"CalcStiffPlastic", "[", 
           RowBox[{
           "order", ",", "co", ",", "eltype", ",", "plasticstrain", ",", 
            "dsol"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Memory", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"loadstep", "+", "1"}], ",", "k"}], "]"}], "]"}], "=", 
          "newplasticstrain"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Ke = \>\"", ",", 
             RowBox[{"Ke", "//", "MatrixForm"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"fu", "=", 
          RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "rows"}], ",", 
           RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rowglob", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "i"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "cols"}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"colglob", "=", 
                RowBox[{"topol", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "j"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "colglob"}], "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", " ", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", " ", "j"}], "+", "fu"}]}], "]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "fu"}]}], "]"}], "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "fu"}]}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Kglob", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "rowglob"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "colglob"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}], "+=", 
                RowBox[{"Ke", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"2", "i"}], "+", "1", "+", "fu"}], ",", 
                   RowBox[{
                    RowBox[{"2", "j"}], "+", "1", "+", "fu"}]}], "]"}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Fglob", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", "rowglob"}], "+", "fu"}], "]"}], "]"}], "+=", 
             RowBox[{"Fe", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Kglob", ",", "Fglob"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.693756978723268*^9, 3.6937569796513205`*^9}, {
  3.694293590929383*^9, 3.6942935941741886`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dado", " ", "dois", " ", "ids", " ", "extremos"}], ",", " ", 
    RowBox[{
    "retorna", " ", "uma", " ", "topologia", " ", "e", " ", "as", " ", 
     "coordenas", " ", "completas", " ", "intermedi\[AAcute]rias", " ", "aos",
      " ", "n\[OAcute]s", " ", "de", " ", "um", " ", "elemento", " ", 
     "linear"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DefineLineNodes", "[", 
     RowBox[{"id1_", ",", "id2_", ",", "nnodes_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "A", ",", "B", ",", "tol", ",", "linenodes", ",", "i", ",", "ids", ",",
         "elss"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"A", "=", 
        RowBox[{"nnodes", "[", 
         RowBox[{"[", "id1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"B", "=", 
        RowBox[{"nnodes", "[", 
         RowBox[{"[", "id2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tol", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "3"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"linenodes", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ids", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"x", "=", 
           RowBox[{"x", " ", "Linha", " ", "vertical"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"B", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "tol"}], " ", "&&",
              " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"A", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", "tol"}]}], ",",
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"B", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"linenodes", ",", 
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"ids", ",", "i"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"y", "=", 
            RowBox[{"y", " ", "Linha", " ", "horizontal"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"B", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", "tol"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"A", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", "tol"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Between", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"A", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"B", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"linenodes", ",", 
                  RowBox[{"nnodes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"ids", ",", "i"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"elss", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", 
          RowBox[{"Length", "[", "ids", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"elss", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nnodes", "[", 
               RowBox[{"[", " ", 
                RowBox[{"ids", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"nnodes", "[", 
               RowBox[{"[", " ", 
                RowBox[{"ids", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], " ", "]"}], "]"}]}], 
             "}"}]}], " ", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"elss", ",", "ids"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "dado", " ", "a", " ", "ordem", " ", "polinomial", " ", "gera", " ", "as",
      " ", "fun\[CCedilla]\[OTilde]es", " ", "de", " ", "forma", " ", 
     "definidas", " ", "no", " ", "elemento", " ", "mestre"}], " ", "-", "  ",
     "lineares"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeShape", "[", 
    RowBox[{"order_", ",", "var_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "npoints", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"npoints", "=", 
       RowBox[{"order", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tab3", "[", 
        RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"j", "\[Equal]", "i"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"poli3", "[", 
        RowBox[{"j_", ",", "n_"}], "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"n", "-", "1"}], ")"}]}]}]}], ",", 
           RowBox[{
            RowBox[{"tab3", "[", 
             RowBox[{"j", ",", "n"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPoli", "[", "n_", "]"}], ":=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"InterpolatingPolynomial", "[", 
          RowBox[{
           RowBox[{"poli3", "[", 
            RowBox[{"i", ",", "n"}], "]"}], ",", "var"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"ListPoli", "[", "npoints", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "list", "]"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ListPoli", "[", "npoints", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.693259194985586*^9, 3.693259206842264*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "linear"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineDirichlet", "[", 
     RowBox[{
     "EK_", ",", "EF_", ",", "nodes_", ",", "id1_", ",", "id2_", ",", "ek_", 
      ",", "ef_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "x2", ",", "y1", ",", "y2", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", 
        RowBox[{"Ek", "=", "EK"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"els", ",", "ids"}], "}"}], "=", 
        RowBox[{"DefineLineNodes", "[", 
         RowBox[{"id1", ",", "id2", ",", "nodes"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "els", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"el", "+", "1"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "2"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"k", "=", "1"}], ",", 
               RowBox[{"k", "\[LessEqual]", "2"}], ",", 
               RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ek", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"ids", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", "j", "-", 
                    "2"}], ",", 
                    RowBox[{
                    RowBox[{"2", 
                    RowBox[{"ids", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "+", "k", "-", "2"}]}], 
                   " ", "]"}], "]"}], "*=", 
                 RowBox[{"ek", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "k"}], "]"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"ids", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", "j", "-", 
                 "2"}], "]"}], "]"}], "=", 
              RowBox[{"ef", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Ek", ",", "Ef"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.693258245090255*^9, 3.6932582667854958`*^9}, {
   3.693258669647538*^9, 3.6932588365990877`*^9}, {3.693258886623949*^9, 
   3.6932589001907244`*^9}, {3.6932590895655565`*^9, 
   3.6932590944628363`*^9}, {3.693259224133253*^9, 3.6932592277734613`*^9}, {
   3.693265166339963*^9, 3.6932651727713313`*^9}, {3.693265276709276*^9, 
   3.6932652785883837`*^9}, 3.6937566905827875`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "solu\[CCedilla]\[ATilde]o", " ", "e", " ", "a", 
    " ", "derivada", " ", "definida", " ", "por", " ", "elementos"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeSol", "[", 
    RowBox[{
    "topol_", ",", "coords_", ",", "order_", ",", "coefs_", ",", "eltype_"}], 
    "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "X", ",", "InvJ", ",", "GradPhi", ",", "GradPsi", ",", "nels", ",", 
       "dsol", ",", "xa", ",", "xb", ",", 
       RowBox[{"k", "=", "0"}], ",", "i", ",", "phi", ",", "sol", ",", 
       "phisz", ",", "j", ",", "xx", ",", "J", ",", "co", ",", "h", ",", 
       RowBox[{"x", "=", "0"}], ",", "psis", ",", "id", ",", 
       RowBox[{"y", "=", "0"}], ",", "xi", ",", "eta", ",", "Jac", ",", 
       "DetJac", ",", "kk"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"psis", ",", "GradPsi"}], "}"}], "=", 
       RowBox[{"Compute2DShape", "[", 
        RowBox[{"order", ",", "eltype"}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"nels", "=", 
       RowBox[{"Length", "[", "topol", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dsol", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", "nels", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "=", "0."}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", "0."}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"kk", "=", 
          RowBox[{"Length", "[", "psis", "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"id", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x", "+=", 
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", 
                RowBox[{"id", ",", "1"}], "]"}], "]"}], " ", 
              RowBox[{"psis", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"y", "+=", 
             RowBox[{
              RowBox[{"coords", "[", 
               RowBox[{"[", 
                RowBox[{"id", ",", "2"}], "]"}], "]"}], " ", 
              RowBox[{"psis", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}]}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "kk"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Jac", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"x", ",", "xi"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"y", ",", "xi"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"x", ",", "eta"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{"y", ",", "eta"}], "]"}]}], "}"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"DetJac", "=", 
          RowBox[{"Det", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"InvJ", "=", 
          RowBox[{"Inverse", "[", "Jac", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"GradPhi", "=", 
          RowBox[{"InvJ", ".", "GradPsi"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"id", "=", 
             RowBox[{"topol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"psis", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", " ", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"sol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"psis", "[", 
                RowBox[{"[", "j", "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", "duxdx", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j"}], "]"}], "]"}], 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", " ", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", "duxdy", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j"}], "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"2", "id"}], "-", "1"}], "]"}], "]"}]}], " ", 
              ")"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", "duydx", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "j"}], "]"}], "]"}], 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", "duydy", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dsol", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "4"}], "]"}], "]"}], "+=", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"GradPhi", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "j"}], "]"}], "]"}], " ", 
               RowBox[{"coefs", "[", 
                RowBox[{"[", 
                 RowBox[{"2", "id"}], "]"}], "]"}]}], " ", ")"}]}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "kk"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", "x"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", "y"}], ";"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nels"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"sol", ",", "dsol", ",", "X"}], "}"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6937562528277493`*^9, 3.69375632521789*^9}, {
   3.693756490986371*^9, 3.6937565159587994`*^9}, {3.6937565688318233`*^9, 
   3.69375656894283*^9}, 3.693756601623699*^9, {3.6942936055154085`*^9, 
   3.6942936057962093`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6927417645891333`*^9, 3.692741780533046*^9}, 
   3.6928845635479293`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "as", " ", "tens\[OTilde]es", " ", "nos", " ", 
    "elementos"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeStress", "[", 
     RowBox[{"dsol_", ",", "young_", ",", "nu_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"strain", ",", "gradu", ",", 
        RowBox[{"lambda", "=", 
         RowBox[{"young", " ", 
          RowBox[{"nu", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "nu"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "nu"}]}], ")"}]}], ")"}]}]}]}], ",", 
        RowBox[{"mu", "=", 
         RowBox[{"young", "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ",", "dudx", ",", 
        "dudy", ",", "dvdx", ",", "dvdy", ",", "i", ",", "eps", ",", "stress",
         ",", "ex", ",", "ey", ",", "exy", ",", "C"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"strain", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "dsol", "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stress", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "dsol", "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "dsol", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dudx", ",", "dudy", ",", "dvdx", ",", "dvdy"}], "}"}], 
           "=", 
           RowBox[{"dsol", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ex", "=", "dudx"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ey", "=", "dvdy"}], ";", "\[IndentingNewLine]", 
          RowBox[{"exy", "=", 
           RowBox[{"(", 
            RowBox[{"dudy", "+", "dvdx"}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"strain", "=", 
           RowBox[{"{", 
            RowBox[{"ex", ",", "ey", ",", "exy"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "1"}], ",", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<{dudx,dudy,dvdx,dvdy} = \>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"dudx", ",", "dudy", ",", "dvdx", ",", "dvdy"}], 
                 "}"}]}], "]"}]}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"C", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", "3", "}"}], ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"young", "/", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"nu", "^", "2"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"nu", " ", 
            RowBox[{"young", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"nu", "^", "2"}]}], ")"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"C", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "3"}], "]"}], "]"}], "=", 
           RowBox[{"young", "/", 
            RowBox[{"(", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"stress", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"C", ".", "strain"}]}], ";"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"gradu", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dudx", ",", "dudy"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dvdx", ",", "dvdy"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"eps", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"gradu", "+", 
              RowBox[{"Transpose", "[", "gradu", "]"}]}], ")"}], "/", "2"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"stress", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"lambda", " ", 
             RowBox[{"Tr", "[", 
              RowBox[{"eps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], 
             RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", "mu", " ", 
             RowBox[{"eps", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"stress", ",", "strain"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.692884568145192*^9, 3.692884624944441*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "linear"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineNewman", "[", 
     RowBox[{
     "EF_", ",", "fx_", ",", "order_", ",", "vecnodes_", ",", "vecids_", ",", 
      "normalorperpendicular_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Jac", ",", "DetJ", ",", "yy", ",", 
        RowBox[{"vertOrHor", "=", "0"}], ",", "h", ",", "F1", ",", "F2", ",", 
        "F3", ",", "x0", ",", "xf", ",", "y0", ",", "yf", ",", "k", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "node", ",", "iel", ",", 
        RowBox[{"id", "=", 
         RowBox[{"{", "}"}]}], ",", "idy", ",", "cos", ",", "sin", ",", 
        "cos1", ",", "cos2", ",", "cos3", ",", "sin1", ",", "sin2", ",", 
        "sin3", ",", "x1", ",", "x2", ",", "x3", ",", "y1", ",", "y2", ",", 
        "y3", ",", "h1", ",", "h2", ",", "co1", ",", "co2", ",", "co3", ",", 
        "coord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "vecids", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "el"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"shapes", "=", 
           RowBox[{"ComputeShape", "[", 
            RowBox[{"order", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"co", "=", 
           RowBox[{"vecnodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"x0", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"xf", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "co", "]"}], ",", "1"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"y0", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"yf", "=", 
           RowBox[{"co", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "co", "]"}], ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"h", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xf", "-", "x0"}], ")"}], "^", "2"}], " ", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yf", "-", "y0"}], ")"}], "^", "2"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"cos", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sin", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               RowBox[{"yf", "-", "y0"}], ")"}], "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"vertOrHor", "=", "1"}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"cos", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";"}], "*)"}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               RowBox[{"xf", "-", "x0"}], ")"}], "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"vertOrHor", "=", "2"}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"cos", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"xf", "-", "x0"}], ")"}], "/", "h"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"yf", "-", "y0"}], ")"}], "/", "h"}]}], ";"}], "*)"}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"vertOrHor", "\[Equal]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", "\"\<(*inclinado*)\>\"", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"xx", "=", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"shapes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{
               RowBox[{"co", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "vertOrHor", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"J", "=", 
           RowBox[{"D", "[", 
            RowBox[{"xx", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vecPtosPesos", "=", 
           RowBox[{"GaussianQuadratureWeights", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"4", " ", "order"}], "+", "1"}], ",", 
             StyleBox[
              RowBox[{"-", "1"}], "TI"], ",", 
             StyleBox["1", "TI"]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xix", ",", "w"}], "}"}], "=", 
           RowBox[{"Transpose", "[", "vecPtosPesos", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"integralxi1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"fx", "[", "xx", "]"}], 
                    RowBox[{"shapes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "J"}], ")"}], "/.", 
                  RowBox[{"xi", "\[Rule]", 
                   RowBox[{"xix", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "xix", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "shapes", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"normalorperpendicular", "\[Equal]", "1"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "direcao", " ", "x", " ", "no", " ", "1", " ", "e", " ", "no",
                  " ", "2"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "direcao", " ", "y", " ", "no", " ", "1", " ", "e", " ", 
                  "no", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "direcao", " ", "x", " ", "no", " ", "1", " ", "e", " ", "no",
                  " ", "2"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "direcao", " ", "y", " ", "no", " ", "1", " ", "e", " ", 
                  "no", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";"}]}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"normalorperpendicular", "\[Equal]", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F3", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", 
                  " ", 
                  RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F3", " ", "cos"}]}], ";"}], "\[IndentingNewLine]", 
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F3", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", 
                  " ", 
                  RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F3", " ", "cos"}]}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F4", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"normalorperpendicular", "\[Equal]", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F3", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F4", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", 
                  " ", 
                  RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F3", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F4", " ", "cos"}]}], ";"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F1", " ", "sin"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F2", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F3", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "]"}], 
                  "]"}], "+=", 
                 RowBox[{"F4", " ", "sin"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", 
                  " ", 
                  RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F1", " ", "cos"}]}], " ", ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F2", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F3", " ", "cos"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Ef", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"vecids", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "-", 
                    "1"}], "]"}], "]"}], "+=", 
                 RowBox[{"F4", " ", "cos"}]}], ";"}]}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Ef"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6932330599021997`*^9, 3.6932330895718966`*^9}, {
   3.6932331676493626`*^9, 3.6932331937148533`*^9}, {3.6932332498780656`*^9, 
   3.693233270267232*^9}, {3.6932333451575155`*^9, 3.693233360052367*^9}, {
   3.6932334003086696`*^9, 3.693233402155775*^9}, {3.6932334371567774`*^9, 
   3.693233490096805*^9}, {3.693233522163639*^9, 3.6932335969729185`*^9}, {
   3.6932336271516447`*^9, 3.6932336376822467`*^9}, {3.693235252728622*^9, 
   3.693235254291712*^9}, {3.6932353156632214`*^9, 3.693235320045472*^9}, {
   3.6932383263544235`*^9, 3.693238329704615*^9}, {3.69324574973522*^9, 
   3.69324575025825*^9}, {3.6932488934810324`*^9, 3.6932488984503164`*^9}, {
   3.6934051810874176`*^9, 3.6934052192726016`*^9}, 3.6934052538655806`*^9, 
   3.6936453712478046`*^9, {3.6936454522234364`*^9, 3.6936454906956367`*^9}, {
   3.6936455946465826`*^9, 3.693645691647131*^9}, {3.6942936596631036`*^9, 
   3.694293659943904*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Calcula", " ", "a", " ", "contribui\[CCedilla]\[ATilde]o", " ", "de", " ",
     "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "de", " ", "contorno", " ", 
    "em", " ", "elemento", " ", "inclinado"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ContributeLineNewmanCurverd", "[", 
     RowBox[{
     "EF_", ",", "fx_", ",", "order_", ",", "vecnodes_", ",", "vecids_"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Jac", ",", "DetJ", ",", "yy", ",", 
        RowBox[{"vertOrHor", "=", "0"}], ",", "h", ",", "F1", ",", "F2", ",", 
        "F3", ",", "x0", ",", "xf", ",", "y0", ",", "yf", ",", "k", ",", 
        RowBox[{"Ef", "=", "EF"}], ",", "els", ",", "ids", ",", "el", ",", 
        "i", ",", "shapes", ",", "xx", ",", "J", ",", "xi", ",", "xix", ",", 
        "w", ",", "integralxi1", ",", "vecPtosPesos", ",", "co", ",", "newco",
         ",", "j", ",", "node", ",", "iel", ",", 
        RowBox[{"id", "=", 
         RowBox[{"{", "}"}]}], ",", "idy", ",", "cos", ",", "sin", ",", 
        "cos1", ",", "cos2", ",", "cos3", ",", "sin1", ",", "sin2", ",", 
        "sin3", ",", "x1", ",", "x2", ",", "x3", ",", "y1", ",", "y2", ",", 
        "y3", ",", "h1", ",", "h2", ",", "co1", ",", "co2", ",", "co3", ",", 
        "coord"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"el", "=", 
        RowBox[{"Length", "[", "vecids", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "el"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"shapes", "=", 
           RowBox[{"ComputeShape", "[", 
            RowBox[{"order", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"co", "=", 
           RowBox[{"vecnodes", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "==", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"co1", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h1", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co2", "=", "h1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"co", "=", 
              RowBox[{"{", 
               RowBox[{"co1", ",", "co2"}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"co1", "=", "0"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h1", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co2", "=", "h1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"h2", "=", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}], " ", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"co", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}], "^", 
                 "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co3", "=", 
              RowBox[{"h1", "+", "h2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"co", "=", 
              RowBox[{"{", 
               RowBox[{"co1", ",", "co2", ",", "co3"}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"xx", "=", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"shapes", "[", 
               RowBox[{"[", "i", "]"}], "]"}], " ", 
              RowBox[{"co", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"order", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"J", "=", 
           RowBox[{"D", "[", 
            RowBox[{"xx", ",", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"vecPtosPesos", "=", 
           RowBox[{"GaussianQuadratureWeights", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"4", " ", "order"}], "+", "1"}], ",", 
             StyleBox[
              RowBox[{"-", "1"}], "TI"], ",", 
             StyleBox["1", "TI"]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xix", ",", "w"}], "}"}], "=", 
           RowBox[{"Transpose", "[", "vecPtosPesos", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"integralxi1", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"fx", "[", "xx", "]"}], 
                    RowBox[{"shapes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "J"}], ")"}], "/.", 
                  RowBox[{"xi", "\[Rule]", 
                   RowBox[{"xix", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"w", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "xix", "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "[", "shapes", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos1", "=", 
              RowBox[{"x1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin1", "=", 
              RowBox[{"y1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos2", "=", 
              RowBox[{"x2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin2", "=", 
              RowBox[{"y2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "x", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "sin1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "sin2"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "direcao", " ", "y", " ", "no", " ", "1", " ", "e", " ", "no", 
               " ", "2"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "cos1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "cos2"}]}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos1", "=", 
              RowBox[{"x1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin1", "=", 
              RowBox[{"y1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos2", "=", 
              RowBox[{"x2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin2", "=", 
              RowBox[{"y2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"x3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos3", "=", 
              RowBox[{"x3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin3", "=", 
              RowBox[{"y3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "cos1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "cos2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F3", " ", "cos3"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", " ", 
               RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "sin1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "sin2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F3", " ", "sin3"}]}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"order", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"F1", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F2", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F3", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"F4", "=", 
              RowBox[{"integralxi1", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"coord", "=", 
              RowBox[{"(", 
               RowBox[{"vecnodes", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ")"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y1", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos1", "=", 
              RowBox[{"x1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin1", "=", 
              RowBox[{"y1", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x1", " ", "x1"}], "+", 
                 RowBox[{"y1", " ", "y1"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y2", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos2", "=", 
              RowBox[{"x2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin2", "=", 
              RowBox[{"y2", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x2", " ", "x2"}], "+", 
                 RowBox[{"y2", " ", "y2"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"x3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y3", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos3", "=", 
              RowBox[{"x3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin3", "=", 
              RowBox[{"y3", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x3", " ", "x3"}], "+", 
                 RowBox[{"y3", " ", "y3"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"x4", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"y4", "=", 
              RowBox[{"coord", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cos4", "=", 
              RowBox[{"x4", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x4", " ", "x4"}], "+", 
                 RowBox[{"y4", " ", "y4"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"sin4", "=", 
              RowBox[{"y4", "/", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"x4", " ", "x4"}], "+", 
                 RowBox[{"y4", " ", "y4"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F1", " ", "cos1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F2", " ", "cos2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F3", " ", "cos3"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vecids", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "-", 
                 "1"}], "]"}], "]"}], "+=", 
              RowBox[{"F4", " ", "cos4"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"direcao", " ", "y", " ", "no", " ", "1"}], ",", " ", 
               RowBox[{"2", " ", "e", " ", "3"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F1", " ", "sin1"}]}], " ", ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F2", " ", "sin2"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F3", " ", "sin3"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Ef", "[", 
               RowBox[{"[", " ", 
                RowBox[{
                 RowBox[{"vecids", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "4"}], "]"}], "]"}], " ", "2"}], "]"}], 
               "]"}], "+=", 
              RowBox[{"F4", " ", "sin4"}]}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "Ef"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6931422329475517`*^9, 3.693142320242545*^9}, {
  3.6931438207133665`*^9, 3.693143821016384*^9}, {3.6931442520610385`*^9, 
  3.693144328930435*^9}, {3.6931447289103127`*^9, 3.6931447298383656`*^9}, {
  3.6931466624529047`*^9, 3.693146711773726*^9}, {3.69314700312239*^9, 
  3.6931470154020925`*^9}, {3.693210821012588*^9, 3.6932108222786603`*^9}, {
  3.6934052433519793`*^9, 3.693405318967304*^9}, {3.694293667229117*^9, 
  3.694293670115122*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Encontra", " ", "os", " ", "nos", " ", "e", " ", "a", " ", "topologia", 
    " ", "de", " ", "uma", " ", "linha", " ", "vertical", " ", "ou", " ", 
    "horizontal"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "XYorR_", ",", "linecoord_", ",", "radius_", ",", "nnodes_", ",", "tol_", 
     ",", "order_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "k", ",", "nodes", ",", "tabnodes", ",", "rangesearch", ",", "i0", ",", 
       "j", ",", "elids", ",", "elnodes", ",", "xc", ",", "yc", ",", "i", ",",
        "a", ",", "newnodes", ",", "new", ",", "ids", ",", "vecids", ",", 
       "h"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"elids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"elnodes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xc", "=", 
          RowBox[{"nnodes", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"yc", "=", 
          RowBox[{"nnodes", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"xc", "-", "linecoord"}], ")"}], "]"}], "<", "tol"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"yc", "-", "linecoord"}], ")"}], "]"}], "<", "tol"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"XYorR", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"h", "=", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", "xc", ")"}], "^", "2"}], " ", "+", " ", 
               RowBox[{
                RowBox[{"(", "yc", ")"}], "^", "2."}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"(", 
                 RowBox[{"h", "-", "radius"}], ")"}], "]"}], "<", "tol"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"elids", ",", "i"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"elnodes", ",", 
                 RowBox[{"nnodes", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "elnodes", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "Smaller"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"newnodes", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"new", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"vecids", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"XYorR", "\[Equal]", "1"}], "||", 
         RowBox[{"XYorR", "\[Equal]", "2"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "elnodes", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"new", ",", 
              RowBox[{"elnodes", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"ids", ",", 
              RowBox[{"elids", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "new", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"newnodes", ",", "new"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"vecids", ",", "ids"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"new", "=", 
                RowBox[{"{", 
                 RowBox[{"new", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ids", "=", 
                RowBox[{"{", 
                 RowBox[{"ids", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nodes", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newnodes", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"new", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ids", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "a", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", 
               RowBox[{"Length", "[", "elnodes", "]"}]}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"elnodes", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"nodes", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"elnodes", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "nodes", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"newnodes", ",", "nodes"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"nodes", "=", 
                RowBox[{"{", 
                 RowBox[{"nodes", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"i0", "=", "0"}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", 
          "\"\<Possivel BUG!, Modificar rangesearch para o tamanho de \
elemento em uso! \>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"rangesearch", "=", 
          RowBox[{"h", "/", "30"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<rangesearch = \>\"", ",", "rangesearch"}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"tabnodes", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"radius", " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{"radius", " ", 
               RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"Pi", "/", "2"}], ",", "0", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}], " ", 
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"rangesearch", " ", "10"}], ")"}]}]}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ids", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "tabnodes", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "nnodes", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<Abs[(tabnodes[[i]]-nnodes[[j]])] = \>\"", ",", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tabnodes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{"nnodes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "]"}]}], "]"}], 
                ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Norm", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"tabnodes", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "-", 
                    RowBox[{"nnodes", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "]"}], 
                   "\[LessEqual]", "rangesearch"}], " ", "&&", " ", 
                  RowBox[{"i", "\[NotEqual]", "i0"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"ids", ",", "i"}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"i0", "=", "i"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "ids", "]"}], "\[Equal]", 
               RowBox[{"order", "+", "1"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"vecids", ",", "ids"}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"ids", "=", 
                RowBox[{"{", 
                 RowBox[{"ids", "[", 
                  RowBox[{"[", 
                   RowBox[{"order", "+", "1"}], "]"}], "]"}], "}"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"newnodes", ",", "vecids"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6932336978466883`*^9, 3.693233762799403*^9}, {
   3.6932338042947764`*^9, 3.6932339130859985`*^9}, {3.693234114669529*^9, 
   3.693234115298565*^9}, {3.6932343687470613`*^9, 3.6932343690670795`*^9}, {
   3.6932346048965683`*^9, 3.693234666674102*^9}, {3.693234706665389*^9, 
   3.6932347450335836`*^9}, {3.693234786616962*^9, 3.69323480720914*^9}, {
   3.693234855745916*^9, 3.693234900001447*^9}, 3.6932356466441526`*^9, {
   3.6932357067315893`*^9, 3.6932357068185945`*^9}, {3.693235748330969*^9, 
   3.693235748482978*^9}, {3.693235844802487*^9, 3.69323587056196*^9}, {
   3.6932359200977936`*^9, 3.6932360113920155`*^9}, {3.6932360432018347`*^9, 
   3.693236127719669*^9}, {3.693249023497469*^9, 3.6932490271596785`*^9}, {
   3.6932490919753857`*^9, 3.693249095399581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"allcoords", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}]}], "}"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"topol", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eltype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nnodes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"kE", ",", "fE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "kE", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6934834792764854`*^9, 3.6934836571146574`*^9}, {
  3.69348379982582*^9, 3.693483824793248*^9}, {3.6934972353249826`*^9, 
  3.6934972462296066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.693483651970363*^9, 3.6934836578316984`*^9}, {
   3.6934838005128593`*^9, 3.693483825028261*^9}, 3.69348400298244*^9, 
   3.693497146388896*^9, {3.693497236261037*^9, 3.693497246843642*^9}, 
   3.693497381459341*^9, {3.6934974606438704`*^9, 3.693497485790309*^9}, {
   3.69349875913614*^9, 3.6934987677156305`*^9}, 3.693498850538368*^9, 
   3.693498967438054*^9, 3.6935014738844147`*^9, 3.6935015411512623`*^9, 
   3.6935016142434425`*^9, 3.6935139767012367`*^9, 3.6935203366447678`*^9, 
   3.693520738561756*^9, 3.6935215270468545`*^9, 3.6935227720540648`*^9, 
   3.693522914026185*^9, 3.693550481807042*^9, 3.6935505130908318`*^9, 
   3.6935507283811455`*^9, 3.6935536837338095`*^9, 3.693554320603236*^9, 
   3.6936464556328278`*^9, 3.6937529713220577`*^9, 3.6937530262481995`*^9, 
   3.6937533836356406`*^9, 3.69375343257444*^9, 3.6937535334512095`*^9, 
   3.693753788596803*^9, 3.6937538507423573`*^9, 3.6937538964619727`*^9, 
   3.6937539869401474`*^9, 3.6937540371540194`*^9, 3.6937541266991415`*^9, {
   3.693754376848449*^9, 3.693754397636638*^9}, 3.693754755349098*^9, 
   3.6937549330422616`*^9, {3.69375504858287*^9, 3.6937550508640003`*^9}, 
   3.6937551104434085`*^9, 3.693755308592742*^9, 3.693755348574029*^9, 
   3.6937554501868405`*^9, 3.6937564215533996`*^9, 3.6937570133532486`*^9, 
   3.693757277890379*^9, 3.693757340562964*^9, 3.693757497553943*^9, 
   3.6937598793161726`*^9, 3.693759946149995*^9, 3.6942942188572865`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.693483651970363*^9, 3.6934836578316984`*^9}, {
   3.6934838005128593`*^9, 3.693483825028261*^9}, 3.69348400298244*^9, 
   3.693497146388896*^9, {3.693497236261037*^9, 3.693497246843642*^9}, 
   3.693497381459341*^9, {3.6934974606438704`*^9, 3.693497485790309*^9}, {
   3.69349875913614*^9, 3.6934987677156305`*^9}, 3.693498850538368*^9, 
   3.693498967438054*^9, 3.6935014738844147`*^9, 3.6935015411512623`*^9, 
   3.6935016142434425`*^9, 3.6935139767012367`*^9, 3.6935203366447678`*^9, 
   3.693520738561756*^9, 3.6935215270468545`*^9, 3.6935227720540648`*^9, 
   3.693522914026185*^9, 3.693550481807042*^9, 3.6935505130908318`*^9, 
   3.6935507283811455`*^9, 3.6935536837338095`*^9, 3.693554320603236*^9, 
   3.6936464556328278`*^9, 3.6937529713220577`*^9, 3.6937530262481995`*^9, 
   3.6937533836356406`*^9, 3.69375343257444*^9, 3.6937535334512095`*^9, 
   3.693753788596803*^9, 3.6937538507423573`*^9, 3.6937538964619727`*^9, 
   3.6937539869401474`*^9, 3.6937540371540194`*^9, 3.6937541266991415`*^9, {
   3.693754376848449*^9, 3.693754397636638*^9}, 3.693754755349098*^9, 
   3.6937549330422616`*^9, {3.69375504858287*^9, 3.6937550508640003`*^9}, 
   3.6937551104434085`*^9, 3.693755308592742*^9, 3.693755348574029*^9, 
   3.6937554501868405`*^9, 3.6937564215533996`*^9, 3.6937570133532486`*^9, 
   3.693757277890379*^9, 3.693757340562964*^9, 3.693757497553943*^9, 
   3.6937598793161726`*^9, 3.693759946149995*^9, 3.6942942188572865`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{2, 1}, {5, 2}, {4, 6}, {1, 4}}, 
     PolygonBox[{{1, 2, 3, 4}}]]}, {{InsetBox["1", {2, 1}, {-1, 1}], 
     InsetBox["2", {5, 2}, {-1, 1}], InsetBox["3", {4, 6}, {-1, 1}], 
     InsetBox["4", {1, 4}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{{2, 1}, {5, 2}, {4, 6}, {1, 4}}]}}}]], "Output",
 CellChangeTimes->{{3.693483651970363*^9, 3.6934836578316984`*^9}, {
   3.6934838005128593`*^9, 3.693483825028261*^9}, 3.69348400298244*^9, 
   3.693497146388896*^9, {3.693497236261037*^9, 3.693497246843642*^9}, 
   3.693497381459341*^9, {3.6934974606438704`*^9, 3.693497485790309*^9}, {
   3.69349875913614*^9, 3.6934987677156305`*^9}, 3.693498850538368*^9, 
   3.693498967438054*^9, 3.6935014738844147`*^9, 3.6935015411512623`*^9, 
   3.6935016142434425`*^9, 3.6935139767012367`*^9, 3.6935203366447678`*^9, 
   3.693520738561756*^9, 3.6935215270468545`*^9, 3.6935227720540648`*^9, 
   3.693522914026185*^9, 3.693550481807042*^9, 3.6935505130908318`*^9, 
   3.6935507283811455`*^9, 3.6935536837338095`*^9, 3.693554320603236*^9, 
   3.6936464556328278`*^9, 3.6937529713220577`*^9, 3.6937530262481995`*^9, 
   3.6937533836356406`*^9, 3.69375343257444*^9, 3.6937535334512095`*^9, 
   3.693753788596803*^9, 3.6937538507423573`*^9, 3.6937538964619727`*^9, 
   3.6937539869401474`*^9, 3.6937540371540194`*^9, 3.6937541266991415`*^9, {
   3.693754376848449*^9, 3.693754397636638*^9}, 3.693754755349098*^9, 
   3.6937549330422616`*^9, {3.69375504858287*^9, 3.6937550508640003`*^9}, 
   3.6937551104434085`*^9, 3.693755308592742*^9, 3.693755348574029*^9, 
   3.6937554501868405`*^9, 3.6937564215533996`*^9, 3.6937570133532486`*^9, 
   3.693757277890379*^9, 3.693757340562964*^9, 3.693757497553943*^9, 
   3.6937598793161726`*^9, 3.693759946149995*^9, 3.6942942188572865`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Length[nnodes] = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm[" Length[nnodes] = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6934836519793634`*^9, 3.693483657838699*^9}, {
   3.69348380052686*^9, 3.693483825039262*^9}, 3.693484002999441*^9, 
   3.6934971463998966`*^9, {3.693497236276037*^9, 3.6934972468546424`*^9}, 
   3.693497381471342*^9, {3.6934974606538715`*^9, 3.69349748580431*^9}, {
   3.693498759149141*^9, 3.6934987677276316`*^9}, 3.6934988505533686`*^9, 
   3.693498967451055*^9, 3.693501473911416*^9, 3.693501541180264*^9, 
   3.693501614266444*^9, 3.693513976728238*^9, 3.693520336652768*^9, 
   3.693520738567756*^9, 3.6935215270738564`*^9, 3.6935227720820665`*^9, 
   3.6935229140981894`*^9, 3.6935504818360434`*^9, 3.693550513118833*^9, 
   3.693550728408147*^9, 3.693553683765812*^9, 3.6935543211332664`*^9, 
   3.693646455676831*^9, 3.693752971349059*^9, 3.6937530262562*^9, 
   3.6937533836436415`*^9, 3.69375343258444*^9, 3.69375353345921*^9, 
   3.693753788609804*^9, 3.693753850750358*^9, 3.693753896466973*^9, 
   3.693753986950148*^9, 3.6937540371660204`*^9, 3.6937541267231426`*^9, {
   3.69375437685845*^9, 3.693754397651639*^9}, 3.693754755358099*^9, 
   3.6937549330522623`*^9, {3.6937550485948706`*^9, 3.6937550508760014`*^9}, 
   3.693755110457409*^9, 3.693755308597742*^9, 3.693755348581029*^9, 
   3.693755450197841*^9, 3.6937564215614*^9, 3.6937570133762503`*^9, 
   3.69375727790138*^9, 3.6937573405709643`*^9, 3.693757497580945*^9, 
   3.693759879324173*^9, 3.6937599461569953`*^9, 3.6942942188572865`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  nels rows= \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["  nels rows= ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.6934836519793634`*^9, 3.693483657838699*^9}, {
   3.69348380052686*^9, 3.693483825039262*^9}, 3.693484002999441*^9, 
   3.6934971463998966`*^9, {3.693497236276037*^9, 3.6934972468546424`*^9}, 
   3.693497381471342*^9, {3.6934974606538715`*^9, 3.69349748580431*^9}, {
   3.693498759149141*^9, 3.6934987677276316`*^9}, 3.6934988505533686`*^9, 
   3.693498967451055*^9, 3.693501473911416*^9, 3.693501541180264*^9, 
   3.693501614266444*^9, 3.693513976728238*^9, 3.693520336652768*^9, 
   3.693520738567756*^9, 3.6935215270738564`*^9, 3.6935227720820665`*^9, 
   3.6935229140981894`*^9, 3.6935504818360434`*^9, 3.693550513118833*^9, 
   3.693550728408147*^9, 3.693553683765812*^9, 3.6935543211332664`*^9, 
   3.693646455676831*^9, 3.693752971349059*^9, 3.6937530262562*^9, 
   3.6937533836436415`*^9, 3.69375343258444*^9, 3.69375353345921*^9, 
   3.693753788609804*^9, 3.693753850750358*^9, 3.693753896466973*^9, 
   3.693753986950148*^9, 3.6937540371660204`*^9, 3.6937541267231426`*^9, {
   3.69375437685845*^9, 3.693754397651639*^9}, 3.693754755358099*^9, 
   3.6937549330522623`*^9, {3.6937550485948706`*^9, 3.6937550508760014`*^9}, 
   3.693755110457409*^9, 3.693755308597742*^9, 3.693755348581029*^9, 
   3.693755450197841*^9, 3.6937564215614*^9, 3.6937570133762503`*^9, 
   3.69375727790138*^9, 3.6937573405709643`*^9, 3.693757497580945*^9, 
   3.693759879324173*^9, 3.6937599461569953`*^9, 3.6942942188572865`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.40700537039847917`", "0.10497213608864414`", 
      RowBox[{"-", "0.3007423148369002`"}], 
      RowBox[{"-", "0.13962096406964897`"}], 
      RowBox[{"-", "0.09023425923918157`"}], 
      RowBox[{"-", "0.11549609327001611`"}], 
      RowBox[{"-", "0.016028796322397343`"}], "0.15014492125102094`"},
     {"0.10497213608864414`", "0.5455153920101771`", 
      RowBox[{"-", "0.0729542974029823`"}], 
      RowBox[{"-", "0.02861923657942477`"}], 
      RowBox[{"-", "0.11549609327001611`"}], 
      RowBox[{"-", "0.277012815230826`"}], "0.08347825458435428`", 
      RowBox[{"-", "0.23988334019992621`"}]},
     {
      RowBox[{"-", "0.30074231483690017`"}], 
      RowBox[{"-", "0.07295429740298229`"}], "0.7029641997528022`", 
      RowBox[{"-", "0.1426787663262281`"}], "0.05185072749745212`", 
      "0.08122312090263167`", 
      RowBox[{"-", "0.4540726124133543`"}], "0.1344099428265787`"},
     {
      RowBox[{"-", "0.13962096406964897`"}], 
      RowBox[{"-", "0.028619236579424764`"}], 
      RowBox[{"-", "0.1426787663262281`"}], "0.39391511445526217`", 
      "0.14788978756929835`", 
      RowBox[{"-", "0.18234707374720815`"}], "0.13440994282657873`", 
      RowBox[{"-", "0.18294880412862924`"}]},
     {
      RowBox[{"-", "0.09023425923918157`"}], 
      RowBox[{"-", "0.11549609327001611`"}], "0.051850727497452134`", 
      "0.14788978756929833`", "0.31649933863867985`", "0.10797898099760755`", 
      RowBox[{"-", "0.2781158068969504`"}], 
      RowBox[{"-", "0.1403726752968898`"}]},
     {
      RowBox[{"-", "0.11549609327001611`"}], 
      RowBox[{"-", "0.277012815230826`"}], "0.08122312090263167`", 
      RowBox[{"-", "0.18234707374720815`"}], "0.10797898099760753`", 
      "0.4688003700732196`", 
      RowBox[{"-", "0.07370600863022311`"}], 
      RowBox[{"-", "0.00944048109518545`"}]},
     {
      RowBox[{"-", "0.016028796322397343`"}], "0.08347825458435426`", 
      RowBox[{"-", "0.45407261241335417`"}], "0.13440994282657873`", 
      RowBox[{"-", "0.2781158068969504`"}], 
      RowBox[{"-", "0.07370600863022311`"}], "0.7482172156327019`", 
      RowBox[{"-", "0.14418218878070985`"}]},
     {"0.15014492125102094`", 
      RowBox[{"-", "0.23988334019992621`"}], "0.13440994282657873`", 
      RowBox[{"-", "0.18294880412862927`"}], 
      RowBox[{"-", "0.1403726752968898`"}], 
      RowBox[{"-", "0.009440481095185436`"}], 
      RowBox[{"-", "0.14418218878070987`"}], "0.4322726254237409`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.693483651970363*^9, 3.6934836578316984`*^9}, {
   3.6934838005128593`*^9, 3.693483825028261*^9}, 3.69348400298244*^9, 
   3.693497146388896*^9, {3.693497236261037*^9, 3.693497246843642*^9}, 
   3.693497381459341*^9, {3.6934974606438704`*^9, 3.693497485790309*^9}, {
   3.69349875913614*^9, 3.6934987677156305`*^9}, 3.693498850538368*^9, 
   3.693498967438054*^9, 3.6935014738844147`*^9, 3.6935015411512623`*^9, 
   3.6935016142434425`*^9, 3.6935139767012367`*^9, 3.6935203366447678`*^9, 
   3.693520738561756*^9, 3.6935215270468545`*^9, 3.6935227720540648`*^9, 
   3.693522914026185*^9, 3.693550481807042*^9, 3.6935505130908318`*^9, 
   3.6935507283811455`*^9, 3.6935536837338095`*^9, 3.693554320603236*^9, 
   3.6936464556328278`*^9, 3.6937529713220577`*^9, 3.6937530262481995`*^9, 
   3.6937533836356406`*^9, 3.69375343257444*^9, 3.6937535334512095`*^9, 
   3.693753788596803*^9, 3.6937538507423573`*^9, 3.6937538964619727`*^9, 
   3.6937539869401474`*^9, 3.6937540371540194`*^9, 3.6937541266991415`*^9, {
   3.693754376848449*^9, 3.693754397636638*^9}, 3.693754755349098*^9, 
   3.6937549330422616`*^9, {3.69375504858287*^9, 3.6937550508640003`*^9}, 
   3.6937551104434085`*^9, 3.693755308592742*^9, 3.693755348574029*^9, 
   3.6937554501868405`*^9, 3.6937564215533996`*^9, 3.6937570133532486`*^9, 
   3.693757277890379*^9, 3.693757340562964*^9, 3.693757497553943*^9, 
   3.6937598793161726`*^9, 3.693759946149995*^9, 3.694294218872886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"allcoords", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "1"}], "}"}]}], "}"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"topol", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eltype", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nnodes", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"kE", ",", "fE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "kE", "]"}]}], "Input",
 CellChangeTimes->{{3.6934837688250465`*^9, 3.693483796729643*^9}, {
  3.6934838459454575`*^9, 3.6934838626724143`*^9}, {3.693485125760659*^9, 
  3.693485135000188*^9}, {3.6934971277218285`*^9, 3.693497129973957*^9}, {
  3.693497252702977*^9, 3.6934972789734793`*^9}, {3.693498840138773*^9, 
  3.693498848049226*^9}, {3.6934989714582844`*^9, 3.6934989731923833`*^9}, {
  3.693499029617611*^9, 3.6934990565041485`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "0.5`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.3`", ",", "1"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6934989735634046`*^9, {3.693499042281335*^9, 3.693499057161186*^9}, 
   3.693501473949418*^9, 3.693501541222266*^9, 3.693501614304446*^9, 
   3.6935139767512393`*^9, 3.693521527098858*^9, 3.6935227721440697`*^9, 
   3.6935229141251907`*^9, 3.6935504818620453`*^9, 3.6935505131448345`*^9, 
   3.693550728437148*^9, 3.693553683798813*^9, {3.6935543242224436`*^9, 
   3.693554325943542*^9}, 3.6937530471993976`*^9, 3.6937534403688855`*^9, 
   3.6937539928234844`*^9, 3.693754039189136*^9, 3.6937541275511904`*^9, 
   3.6937543997897615`*^9, 3.6937547575922265`*^9, 3.6937549348973675`*^9, 
   3.6937550508980026`*^9, 3.6937551104784107`*^9, 3.6937553486020308`*^9, 
   3.6937554502198424`*^9, 3.693756421596402*^9, 3.693757013394251*^9, 
   3.6937573420890512`*^9, 3.693757497601946*^9, 3.693759881133276*^9, 
   3.6937599475380745`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6934989735634046`*^9, {3.693499042281335*^9, 3.693499057161186*^9}, 
   3.693501473949418*^9, 3.693501541222266*^9, 3.693501614304446*^9, 
   3.6935139767512393`*^9, 3.693521527098858*^9, 3.6935227721440697`*^9, 
   3.6935229141251907`*^9, 3.6935504818620453`*^9, 3.6935505131448345`*^9, 
   3.693550728437148*^9, 3.693553683798813*^9, {3.6935543242224436`*^9, 
   3.693554325943542*^9}, 3.6937530471993976`*^9, 3.6937534403688855`*^9, 
   3.6937539928234844`*^9, 3.693754039189136*^9, 3.6937541275511904`*^9, 
   3.6937543997897615`*^9, 3.6937547575922265`*^9, 3.6937549348973675`*^9, 
   3.6937550508980026`*^9, 3.6937551104784107`*^9, 3.6937553486020308`*^9, 
   3.6937554502198424`*^9, 3.693756421596402*^9, 3.693757013394251*^9, 
   3.6937573420890512`*^9, 3.693757497601946*^9, 3.693759881133276*^9, 
   3.6937599475430746`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{0, 0}, {0.5, 0.5}, {0.3, 1}}, 
     PolygonBox[{{1, 2, 3}}]]}, {{InsetBox["1", {0, 0}, {-1, 1}], 
     InsetBox["2", {0.5, 0.5}, {-1, 1}], InsetBox["3", {0.3, 1}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{{0, 0}, {0.5, 0.5}, {0.3, 1}}]}}}]], "Output",
 CellChangeTimes->{
  3.6934989735634046`*^9, {3.693499042281335*^9, 3.693499057161186*^9}, 
   3.693501473949418*^9, 3.693501541222266*^9, 3.693501614304446*^9, 
   3.6935139767512393`*^9, 3.693521527098858*^9, 3.6935227721440697`*^9, 
   3.6935229141251907`*^9, 3.6935504818620453`*^9, 3.6935505131448345`*^9, 
   3.693550728437148*^9, 3.693553683798813*^9, {3.6935543242224436`*^9, 
   3.693554325943542*^9}, 3.6937530471993976`*^9, 3.6937534403688855`*^9, 
   3.6937539928234844`*^9, 3.693754039189136*^9, 3.6937541275511904`*^9, 
   3.6937543997897615`*^9, 3.6937547575922265`*^9, 3.6937549348973675`*^9, 
   3.6937550508980026`*^9, 3.6937551104784107`*^9, 3.6937553486020308`*^9, 
   3.6937554502198424`*^9, 3.693756421596402*^9, 3.693757013394251*^9, 
   3.6937573420890512`*^9, 3.693757497601946*^9, 3.693759881133276*^9, 
   3.693759947546075*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Length[nnodes] = \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm[" Length[nnodes] = ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6934989735734053`*^9, {3.6934990422923355`*^9, 3.693499057172187*^9}, 
   3.693501473961419*^9, 3.6935015412392673`*^9, 3.693501614317447*^9, 
   3.69351397675624*^9, 3.693521527108858*^9, 3.69352277215007*^9, 
   3.6935229141311913`*^9, 3.6935504818690453`*^9, 3.693550513152835*^9, 
   3.693550728444149*^9, 3.6935536838078136`*^9, {3.6935543244614573`*^9, 
   3.6935543262205577`*^9}, 3.693753047207398*^9, 3.693753440376886*^9, 
   3.6937539928324847`*^9, 3.6937540392011366`*^9, 3.6937541275631905`*^9, 
   3.6937543998057623`*^9, 3.6937547576052275`*^9, 3.6937549349103684`*^9, 
   3.693755050906003*^9, 3.6937551104904113`*^9, 3.6937553486110306`*^9, 
   3.693755450227843*^9, 3.6937564216064024`*^9, 3.6937570134002514`*^9, 
   3.6937573421010523`*^9, 3.6937574976089463`*^9, 3.693759881140277*^9, 
   3.693759947551075*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  nels rows= \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["  nels rows= ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6934989735734053`*^9, {3.6934990422923355`*^9, 3.693499057172187*^9}, 
   3.693501473961419*^9, 3.6935015412392673`*^9, 3.693501614317447*^9, 
   3.69351397675624*^9, 3.693521527108858*^9, 3.69352277215007*^9, 
   3.6935229141311913`*^9, 3.6935504818690453`*^9, 3.693550513152835*^9, 
   3.693550728444149*^9, 3.6935536838078136`*^9, {3.6935543244614573`*^9, 
   3.6935543262205577`*^9}, 3.693753047207398*^9, 3.693753440376886*^9, 
   3.6937539928324847`*^9, 3.6937540392011366`*^9, 3.6937541275631905`*^9, 
   3.6937543998057623`*^9, 3.6937547576052275`*^9, 3.6937549349103684`*^9, 
   3.693755050906003*^9, 3.6937551104904113`*^9, 3.6937553486110306`*^9, 
   3.693755450227843*^9, 3.6937564216064024`*^9, 3.6937570134002514`*^9, 
   3.6937573421010523`*^9, 3.6937574976089463`*^9, 3.693759881140277*^9, 
   3.6937599475520754`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.4038095238095238`", "0.09523809523809526`", 
      RowBox[{"-", "0.7276190476190475`"}], 
      RowBox[{"-", "0.057142857142857176`"}], "0.3238095238095237`", 
      RowBox[{"-", "0.038095238095238064`"}]},
     {"0.09523809523809526`", "0.20380952380952386`", "0.009523809523809525`", 
      RowBox[{"-", "0.1942857142857143`"}], 
      RowBox[{"-", "0.10476190476190478`"}], 
      RowBox[{"-", "0.009523809523809514`"}]},
     {
      RowBox[{"-", "0.7276190476190475`"}], "0.009523809523809514`", 
      "1.5752380952380949`", 
      RowBox[{"-", "0.2857142857142857`"}], 
      RowBox[{"-", "0.8476190476190474`"}], "0.27619047619047615`"},
     {
      RowBox[{"-", "0.057142857142857176`"}], 
      RowBox[{"-", "0.1942857142857143`"}], 
      RowBox[{"-", "0.2857142857142857`"}], "0.7085714285714286`", 
      "0.34285714285714286`", 
      RowBox[{"-", "0.5142857142857142`"}]},
     {"0.3238095238095237`", 
      RowBox[{"-", "0.10476190476190478`"}], 
      RowBox[{"-", "0.8476190476190474`"}], "0.34285714285714286`", 
      "0.5238095238095237`", 
      RowBox[{"-", "0.2380952380952381`"}]},
     {
      RowBox[{"-", "0.038095238095238064`"}], 
      RowBox[{"-", "0.009523809523809514`"}], "0.27619047619047615`", 
      RowBox[{"-", "0.5142857142857142`"}], 
      RowBox[{"-", "0.2380952380952381`"}], "0.5238095238095237`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6934989735634046`*^9, {3.693499042281335*^9, 3.693499057161186*^9}, 
   3.693501473949418*^9, 3.693501541222266*^9, 3.693501614304446*^9, 
   3.6935139767512393`*^9, 3.693521527098858*^9, 3.6935227721440697`*^9, 
   3.6935229141251907`*^9, 3.6935504818620453`*^9, 3.6935505131448345`*^9, 
   3.693550728437148*^9, 3.693553683798813*^9, {3.6935543242224436`*^9, 
   3.693554325943542*^9}, 3.6937530471993976`*^9, 3.6937534403688855`*^9, 
   3.6937539928234844`*^9, 3.693754039189136*^9, 3.6937541275511904`*^9, 
   3.6937543997897615`*^9, 3.6937547575922265`*^9, 3.6937549348973675`*^9, 
   3.6937550508980026`*^9, 3.6937551104784107`*^9, 3.6937553486020308`*^9, 
   3.6937554502198424`*^9, 3.693756421596402*^9, 3.693757013394251*^9, 
   3.6937573420890512`*^9, 3.693757497601946*^9, 3.693759881133276*^9, 
   3.693759947555075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"10", " ", 
    RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"allcoords", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}]}], "}"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"topol", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eltype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nnodes", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "KE", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "1", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "2", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "4", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "2", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6000", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "3", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6000", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "KE", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"KE", ",", "FE", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deformed", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
     RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabdeformed", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"deformed", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"deformed", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVisDef", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", 
         RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"tabdeformed", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVisDef", ",", "meshVis1", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"KE", ".", "sol"}], "-", "FE"}], ")"}], "//", 
  "Chop"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.6935590393911357`*^9, 3.693559085550776*^9}, {
  3.6935591654113436`*^9, 3.69355918685457*^9}, {3.693566852360012*^9, 
  3.6935668526890306`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "6"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.693759948558133*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.693759948561133*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.693759948567133*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{0, 0}, {10, 0}, {10, 6}, {0, 6}}, 
     PolygonBox[{{1, 2, 3, 4}}]]}, {{InsetBox["1", {0, 0}, {-1, 1}], 
     InsetBox["2", {10, 0}, {-1, 1}], InsetBox["3", {10, 6}, {-1, 1}], 
     InsetBox["4", {0, 6}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{{0, 0}, {10, 0}, {10, 6}, {0, 6}}]}}}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.693759948570133*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Length[nnodes] = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm[" Length[nnodes] = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6935590912611027`*^9, {3.6935591694135723`*^9, 3.6935591873625994`*^9}, 
   3.6935668535910826`*^9, 3.693574810345183*^9, 3.693753050520588*^9, 
   3.693753444026095*^9, 3.6937540408622317`*^9, 3.693754127937212*^9, 
   3.6937544008418217`*^9, 3.693754758820297*^9, 3.6937549368554797`*^9, 
   3.6937550509400053`*^9, 3.693755110526413*^9, 3.6937553486420326`*^9, 
   3.693755450258845*^9, 3.6937564216394043`*^9, 3.6937570134282527`*^9, 
   3.693757343183114*^9, 3.693757497638948*^9, 3.693759882683365*^9, 
   3.6937599485711336`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  nels rows= \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["  nels rows= ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6935590912611027`*^9, {3.6935591694135723`*^9, 3.6935591873625994`*^9}, 
   3.6935668535910826`*^9, 3.693574810345183*^9, 3.693753050520588*^9, 
   3.693753444026095*^9, 3.6937540408622317`*^9, 3.693754127937212*^9, 
   3.6937544008418217`*^9, 3.693754758820297*^9, 3.6937549368554797`*^9, 
   3.6937550509400053`*^9, 3.693755110526413*^9, 3.6937553486420326`*^9, 
   3.693755450258845*^9, 3.6937564216394043`*^9, 3.6937570134282527`*^9, 
   3.693757343183114*^9, 3.693757497638948*^9, 3.693759882683365*^9, 
   3.6937599485731335`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.334554334554334`*^6", "1.7857142857142857`*^6", 
      RowBox[{"-", "1.1294261294261292`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], 
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "1.0378510378510376`*^6"}], "137362.63736263762`"},
     {"1.7857142857142857`*^6", "6.874236874236872`*^6", 
      "137362.63736263744`", "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142854`*^6"}], 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}], 
      RowBox[{"-", "5.720390720390719`*^6"}]},
     {
      RowBox[{"-", "1.1294261294261292`*^6"}], "137362.6373626375`", 
      "4.334554334554334`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "1.0378510378510375`*^6"}], 
      RowBox[{"-", "137362.63736263762`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], "1.7857142857142857`*^6"},
     {
      RowBox[{"-", "137362.63736263744`"}], "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], "6.874236874236873`*^6", 
      "137362.6373626375`", 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142854`*^6", 
      RowBox[{"-", "3.4371184371184367`*^6"}]},
     {
      RowBox[{"-", "2.167277167277167`*^6"}], 
      RowBox[{"-", "1.7857142857142854`*^6"}], 
      RowBox[{"-", "1.0378510378510375`*^6"}], "137362.63736263756`", 
      "4.334554334554334`*^6", "1.7857142857142854`*^6", 
      RowBox[{"-", "1.129426129426129`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}]},
     {
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.63736263762`"}], 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142854`*^6", 
      "6.874236874236872`*^6", "137362.63736263747`", 
      "2.2832722832722827`*^6"},
     {
      RowBox[{"-", "1.0378510378510376`*^6"}], 
      RowBox[{"-", "137362.63736263756`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], "1.7857142857142854`*^6", 
      RowBox[{"-", "1.129426129426129`*^6"}], "137362.6373626375`", 
      "4.334554334554334`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}]},
     {"137362.6373626376`", 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142857`*^6", 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.63736263747`"}], "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], "6.874236874236872`*^6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.6937599485761337`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.334554334554334`*^18", "1.7857142857142857`*^6", 
      RowBox[{"-", "1.1294261294261292`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], 
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "1.0378510378510376`*^6"}], "137362.63736263762`"},
     {"1.7857142857142857`*^6", "6.874236874236873`*^18", 
      "137362.63736263744`", "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142854`*^6"}], 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}], 
      RowBox[{"-", "5.720390720390719`*^6"}]},
     {
      RowBox[{"-", "1.1294261294261292`*^6"}], "137362.6373626375`", 
      "4.334554334554334`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "1.0378510378510375`*^6"}], 
      RowBox[{"-", "137362.63736263762`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], "1.7857142857142857`*^6"},
     {
      RowBox[{"-", "137362.63736263744`"}], "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], "6.874236874236874`*^18", 
      "137362.6373626375`", 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142854`*^6", 
      RowBox[{"-", "3.4371184371184367`*^6"}]},
     {
      RowBox[{"-", "2.167277167277167`*^6"}], 
      RowBox[{"-", "1.7857142857142854`*^6"}], 
      RowBox[{"-", "1.0378510378510375`*^6"}], "137362.63736263756`", 
      "4.334554334554334`*^6", "1.7857142857142854`*^6", 
      RowBox[{"-", "1.129426129426129`*^6"}], 
      RowBox[{"-", "137362.6373626375`"}]},
     {
      RowBox[{"-", "1.7857142857142857`*^6"}], 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.63736263762`"}], 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142854`*^6", 
      "6.874236874236872`*^6", "137362.63736263747`", 
      "2.2832722832722827`*^6"},
     {
      RowBox[{"-", "1.0378510378510376`*^6"}], 
      RowBox[{"-", "137362.63736263756`"}], 
      RowBox[{"-", "2.167277167277167`*^6"}], "1.7857142857142854`*^6", 
      RowBox[{"-", "1.129426129426129`*^6"}], "137362.6373626375`", 
      "4.334554334554334`*^18", 
      RowBox[{"-", "1.7857142857142857`*^6"}]},
     {"137362.6373626376`", 
      RowBox[{"-", "5.720390720390719`*^6"}], "1.7857142857142857`*^6", 
      RowBox[{"-", "3.4371184371184367`*^6"}], 
      RowBox[{"-", "137362.63736263747`"}], "2.2832722832722827`*^6", 
      RowBox[{"-", "1.7857142857142857`*^6"}], "6.874236874236872`*^6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.693759948579134*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[{{
     1.3842253521140604`*^-12, -8.076590534316685*^-29}, {12.000000000001384`,
      4.0382952671585585`*^-29}, {12.000000000001384`, 5.64}, {
     1.38422535211406*^-12, 5.64}}, PolygonBox[{{1, 2, 3, 4}}]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{0, 0}, {10, 0}, {10, 6}, {0, 6}}, 
     PolygonBox[{{1, 2, 3, 4}}]]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.6937599485821342`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.6937599485831337`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0.0020000000000013844`", ",", "0", ",", 
   "0.0020000000000013844`", ",", 
   RowBox[{"-", "0.0003599999999999999`"}], ",", "0", ",", 
   RowBox[{"-", "0.00036000000000000013`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.693559091205099*^9, {3.6935591693875713`*^9, 3.6935591873345976`*^9}, 
   3.693566853573081*^9, 3.693574810314181*^9, 3.693753050509587*^9, 
   3.693753444015094*^9, 3.6937540408462305`*^9, 3.6937541279262114`*^9, 
   3.693754400832821*^9, 3.693754758807296*^9, 3.6937549368424788`*^9, 
   3.693755050927004*^9, 3.693755110512412*^9, 3.693755348632032*^9, 
   3.693755450248844*^9, 3.6937564216274037`*^9, 3.6937570134172525`*^9, 
   3.693757343170113*^9, 3.6937574976259475`*^9, 3.6937598826713643`*^9, 
   3.6937599485851345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", 
   RowBox[{"10", " ", 
    RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"allcoords", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"10", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"topol", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "3"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eltype", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"nnodes", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "6"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "1", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "2", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "3", ",", "0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "2", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6000", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ApplyNodeBC", "[", 
    RowBox[{"KE", ",", "FE", ",", "4", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6000", ",", "0"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "KE", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"KE", ",", "FE", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deformed", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
     RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabdeformed", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"deformed", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"deformed", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVisDef", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", 
         RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"tabdeformed", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVisDef", ",", "meshVis1", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "//", "Chop"}]}], "Input",
 CellChangeTimes->{{3.693755487278962*^9, 3.693755489989117*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.6937599499912148`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.6937599499952145`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.693759949999215*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{0, 0}, {10, 0}, {0, 6}, {10, 6}}, 
     PolygonBox[{{1, 2, 3}, {2, 4, 3}}]]}, {{InsetBox["1", {0, 0}, {-1, 1}], 
     InsetBox["2", {10, 0}, {-1, 1}], InsetBox["3", {0, 6}, {-1, 1}], 
     InsetBox["4", {10, 6}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{{0, 0}, {10, 0}, {0, 6}, {10, 6}}]}}}]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.693759950001215*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Length[nnodes] = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm[" Length[nnodes] = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.693755483134725*^9, 3.693755490818165*^9}, 
   3.693756423628518*^9, 3.6937570151513515`*^9, 3.6937573446371965`*^9, 
   3.6937574994290504`*^9, 3.693759884751483*^9, 3.6937599500032153`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  nels rows= \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["  nels rows= ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{{3.693755483134725*^9, 3.693755490818165*^9}, 
   3.693756423628518*^9, 3.6937570151513515`*^9, 3.6937573446371965`*^9, 
   3.6937574994290504`*^9, 3.693759884751483*^9, 3.6937599500042152`*^9}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"6.501831501831502`*^18", "3.5714285714285714`*^6", 
      RowBox[{"-", "3.2967032967032967`*^6"}], 
      RowBox[{"-", "1.923076923076923`*^6"}], 
      RowBox[{"-", "3.205128205128205`*^6"}], 
      RowBox[{"-", "1.6483516483516481`*^6"}], "0", "0"},
     {"3.571428571428571`*^6", "1.031135531135531`*^19", 
      RowBox[{"-", "1.648351648351648`*^6"}], 
      RowBox[{"-", "1.1538461538461538`*^6"}], 
      RowBox[{"-", "1.923076923076923`*^6"}], 
      RowBox[{"-", "9.157509157509156`*^6"}], "0", "0"},
     {
      RowBox[{"-", "3.2967032967032967`*^6"}], 
      RowBox[{"-", "1.6483516483516481`*^6"}], "6.501831501831502`*^6", "0.`",
       "0.`", "3.571428571428571`*^6", 
      RowBox[{"-", "3.205128205128205`*^6"}], 
      RowBox[{"-", "1.923076923076923`*^6"}]},
     {
      RowBox[{"-", "1.923076923076923`*^6"}], 
      RowBox[{"-", "1.1538461538461538`*^6"}], "0.`", 
      "1.031135531135531`*^19", "3.571428571428571`*^6", "0.`", 
      RowBox[{"-", "1.648351648351648`*^6"}], 
      RowBox[{"-", "9.157509157509156`*^6"}]},
     {
      RowBox[{"-", "3.205128205128205`*^6"}], 
      RowBox[{"-", "1.923076923076923`*^6"}], "0.`", "3.571428571428571`*^6", 
      "6.501831501831502`*^18", "0.`", 
      RowBox[{"-", "3.2967032967032967`*^6"}], 
      RowBox[{"-", "1.6483516483516481`*^6"}]},
     {
      RowBox[{"-", "1.648351648351648`*^6"}], 
      RowBox[{"-", "9.157509157509156`*^6"}], "3.571428571428571`*^6", "0.`", 
      "0.`", "1.031135531135531`*^7", 
      RowBox[{"-", "1.923076923076923`*^6"}], 
      RowBox[{"-", "1.1538461538461538`*^6"}]},
     {"0", "0", 
      RowBox[{"-", "3.205128205128205`*^6"}], 
      RowBox[{"-", "1.6483516483516481`*^6"}], 
      RowBox[{"-", "3.2967032967032967`*^6"}], 
      RowBox[{"-", "1.923076923076923`*^6"}], "6.501831501831502`*^6", 
      "3.5714285714285714`*^6"},
     {"0", "0", 
      RowBox[{"-", "1.923076923076923`*^6"}], 
      RowBox[{"-", "9.157509157509156`*^6"}], 
      RowBox[{"-", "1.648351648351648`*^6"}], 
      RowBox[{"-", "1.1538461538461538`*^6"}], "3.571428571428571`*^6", 
      "1.031135531135531`*^7"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.6937599500072155`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[{{9.228169014093735*^-13, 0.}, {
     12.000000000000922`, 0.}, {9.228169014093737*^-13, 5.64}, {
     12.000000000000924`, 5.64}}, PolygonBox[{{1, 2, 3}, {2, 4, 3}}]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[{{0, 0}, {10, 0}, {0, 6}, {10, 6}}, 
     PolygonBox[{{1, 2, 3}, {2, 4, 3}}]]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.6937599500102158`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0.0020000000000009225`", ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.00035999999999999997`"}], ",", "0.002000000000000923`", 
   ",", 
   RowBox[{"-", "0.00036`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6937554831267242`*^9, 3.693755490807164*^9}, 
   3.693756423621518*^9, 3.693757015143351*^9, 3.6937573446231956`*^9, 
   3.6937574994200497`*^9, 3.6937598847394824`*^9, 3.6937599500112157`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.693554850715557*^9, 3.693554879156184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"topol", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\elschapacomfuroleft.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ",", "1"}], 
      "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodesAll", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
noschapacomfuroleft.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodes", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"N", "[", 
     RowBox[{"nnodesAll", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allcoords", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"nnodes", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"topol", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"edges", " ", "are", " ", "straight"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eltype", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{
     RowBox[{"Assemble", "[", 
      RowBox[{
      "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", 
       "eltype"}], "]"}], ";"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"KE", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "870", ",", "644", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "871", ",", "645", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tol", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radius", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiusdir", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coordy", "=", "0"}], ";"}], 
  RowBox[{"(*", "naoprecisa", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "radiusdir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",",
      "order"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "KE", "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"ContributeLineNewmanCurverd", "[", 
    RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"KE", ",", "FE", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "7000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deformed", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
     RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabdeformed", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"deformed", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"deformed", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVisDef", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", 
         RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"tabdeformed", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVisDef", ",", "meshVis1", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6932101365214376`*^9, 3.6932101409416904`*^9}, {
   3.6932102381732516`*^9, 3.6932102485018425`*^9}, {3.6932103093493223`*^9, 
   3.693210314068592*^9}, {3.6932110057601547`*^9, 3.6932110216020613`*^9}, {
   3.6932110760071726`*^9, 3.693211117007518*^9}, 3.693211170270564*^9, 
   3.693211200854314*^9, {3.693243577729961*^9, 3.6932436570254965`*^9}, {
   3.6934831197749233`*^9, 3.6934831278623857`*^9}, {3.6934971329921303`*^9, 
   3.6934971359582996`*^9}, {3.693498834294439*^9, 3.6934988363535566`*^9}, {
   3.693501682493346*^9, 3.6935016835094047`*^9}, 3.6935103148687916`*^9, {
   3.693521024225095*^9, 3.6935210313695035`*^9}, {3.6935504312731514`*^9, 
   3.693550431278152*^9}, {3.6935519735490894`*^9, 3.6935519738454905`*^9}, {
   3.693752057881812*^9, 3.6937520806101117`*^9}, {3.693754116312547*^9, 
   3.693754117823634*^9}, 3.6937541753769255`*^9, {3.6937542806149445`*^9, 
   3.6937542829120765`*^9}, {3.6937544503576536`*^9, 3.693754484468605*^9}, {
   3.6937555178167086`*^9, 3.693755528359312*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}, {{InsetBox["1", {1000., 1000.}, {-1, 1}], 
     InsetBox["2", {1000., 964.285714}, {-1, 1}], 
     InsetBox["3", {964.285714, 1000.}, {-1, 1}], 
     InsetBox["4", {964.389265, 964.385104}, {-1, 1}], 
     InsetBox["5", {1000., 928.571429}, {-1, 1}], 
     InsetBox["6", {928.571429, 1000.}, {-1, 1}], 
     InsetBox["7", {928.778531, 964.484493}, {-1, 1}], 
     InsetBox["8", {964.492817, 928.770207}, {-1, 1}], 
     InsetBox["9", {928.985633, 928.968986}, {-1, 1}], 
     InsetBox["10", {892.857143, 1000.}, {-1, 1}], 
     InsetBox["11", {1000., 892.857143}, {-1, 1}], 
     InsetBox["12", {893.107426, 964.60074}, {-1, 1}], 
     InsetBox["13", {964.49407, 893.095243}, {-1, 1}], 
     InsetBox["14", {893.357708, 929.201481}, {-1, 1}], 
     InsetBox["15", {928.98814, 893.333344}, {-1, 1}], 
     InsetBox["16", {1000., 857.142857}, {-1, 1}], 
     InsetBox["17", {857.142857, 1000.}, {-1, 1}], 
     InsetBox["18", {857.43632, 964.716988}, {-1, 1}], 
     InsetBox["19", {964.495324, 857.420279}, {-1, 1}], 
     InsetBox["20", {893.255839, 893.478431}, {-1, 1}], 
     InsetBox["21", {857.729783, 929.433976}, {-1, 1}], 
     InsetBox["22", {928.990648, 857.697701}, {-1, 1}], 
     InsetBox["23", {857.523537, 893.623518}, {-1, 1}], 
     InsetBox["24", {893.153969, 857.755381}, {-1, 1}], 
     InsetBox["25", {1000., 821.428571}, {-1, 1}], 
     InsetBox["26", {821.428571, 1000.}, {-1, 1}], 
     InsetBox["27", {821.7778, 964.920847}, {-1, 1}], 
     InsetBox["28", {964.465681, 821.600023}, {-1, 1}], 
     InsetBox["29", {822.127029, 929.841693}, {-1, 1}], 
     InsetBox["30", {928.931363, 821.771474}, {-1, 1}], 
     InsetBox["31", {857.317291, 857.81306}, {-1, 1}], 
     InsetBox["32", {821.769206, 894.178404}, {-1, 1}], 
     InsetBox["33", {892.983541, 821.96986}, {-1, 1}], 
     InsetBox["34", {785.714286, 1000.}, {-1, 1}], 
     InsetBox["35", {1000., 785.714286}, {-1, 1}], 
     InsetBox["36", {786.11928, 965.124705}, {-1, 1}], 
     InsetBox["37", {964.436039, 785.779766}, {-1, 1}], 
     InsetBox["38", {786.524274, 930.24941}, {-1, 1}], 
     InsetBox["39", {928.872078, 785.845246}, {-1, 1}], 
     InsetBox["40", {821.411383, 858.515116}, {-1, 1}], 
     InsetBox["41", {857.035719, 822.168246}, {-1, 1}], 
     InsetBox["42", {786.014875, 894.733291}, {-1, 1}], 
     InsetBox["43", {892.813113, 786.184339}, {-1, 1}], 
     InsetBox["44", {750., 1000.}, {-1, 1}], 
     InsetBox["45", {1000., 750.}, {-1, 1}], 
     InsetBox["46", {821.02586, 822.882366}, {-1, 1}], 
     InsetBox["47", {750.35263, 965.252683}, {-1, 1}], 
     InsetBox["48", {964.339622, 749.879481}, {-1, 1}], 
     InsetBox["49", {785.505476, 859.217171}, {-1, 1}], 
     InsetBox["50", {856.754148, 786.523431}, {-1, 1}], 
     InsetBox["51", {750.705261, 930.505365}, {-1, 1}], 
     InsetBox["52", {928.679243, 749.758963}, {-1, 1}], 
     InsetBox["53", {750.142453, 895.264579}, {-1, 1}], 
     InsetBox["54", {892.603333, 750.125244}, {-1, 1}], 
     InsetBox["55", {785.016, 823.596486}, {-1, 1}], 
     InsetBox["56", {820.640336, 787.249616}, {-1, 1}], 
     InsetBox["57", {714.285714, 1000.}, {-1, 1}], 
     InsetBox["58", {1000., 714.285714}, {-1, 1}], 
     InsetBox["59", {749.579645, 860.023792}, {-1, 1}], 
     InsetBox["60", {714.585981, 965.38066}, {-1, 1}], 
     InsetBox["61", {856.527423, 750.491525}, {-1, 1}], 
     InsetBox["62", {964.243204, 713.979197}, {-1, 1}], 
     InsetBox["63", {714.886248, 930.76132}, {-1, 1}], 
     InsetBox["64", {928.486408, 713.67268}, {-1, 1}], 
     InsetBox["65", {784.526524, 787.9758}, {-1, 1}], 
     InsetBox["66", {714.270031, 895.795866}, {-1, 1}], 
     InsetBox["67", {892.393554, 714.066149}, {-1, 1}], 
     InsetBox["68", {748.769384, 824.528952}, {-1, 1}], 
     InsetBox["69", {820.014553, 751.123076}, {-1, 1}], 
     InsetBox["70", {713.653815, 860.830413}, {-1, 1}], 
     InsetBox["71", {856.300699, 714.459618}, {-1, 1}], 
     InsetBox["72", {678.571429, 1000.}, {-1, 1}], 
     InsetBox["73", {1000., 678.571429}, {-1, 1}], 
     InsetBox["74", {678.80914, 965.638736}, {-1, 1}], 
     InsetBox["75", {964.330574, 678.17178}, {-1, 1}], 
     InsetBox["76", {679.046852, 931.277472}, {-1, 1}], 
     InsetBox["77", {747.959122, 789.034112}, {-1, 1}], 
     InsetBox["78", {783.501684, 751.754628}, {-1, 1}], 
     InsetBox["79", {928.661147, 677.77213}, {-1, 1}], 
     InsetBox["80", {712.522768, 825.461418}, {-1, 1}], 
     InsetBox["81", {819.388771, 714.996537}, {-1, 1}], 
     InsetBox["82", {678.380137, 896.6215}, {-1, 1}], 
     InsetBox["83", {892.547316, 677.93154}, {-1, 1}], 
     InsetBox["84", {677.713422, 861.965528}, {-1, 1}], 
     InsetBox["85", {856.433485, 678.090949}, {-1, 1}], 
     InsetBox["86", {746.190242, 752.849015}, {-1, 1}], 
     InsetBox["87", {711.39172, 790.092423}, {-1, 1}], 
     InsetBox["88", {642.857143, 1000.}, {-1, 1}], 
     InsetBox["89", {1000., 642.857143}, {-1, 1}], 
     InsetBox["90", {782.476843, 715.533456}, {-1, 1}], 
     InsetBox["91", {643.0323, 965.896812}, {-1, 1}], 
     InsetBox["92", {964.417943, 642.364362}, {-1, 1}], 
     InsetBox["93", {643.207457, 931.793625}, {-1, 1}], 
     InsetBox["94", {928.835886, 641.871581}, {-1, 1}], 
     InsetBox["95", {676.025778, 826.961333}, {-1, 1}], 
     InsetBox["96", {819.127907, 678.410278}, {-1, 1}], 
     InsetBox["97", {642.490244, 897.447134}, {-1, 1}], 
     InsetBox["98", {892.701078, 641.79693}, {-1, 1}], 
     InsetBox["99", {708.878799, 753.943403}, {-1, 1}], 
     InsetBox["100", {744.421361, 716.663919}, {-1, 1}], 
     InsetBox["101", {641.77303, 863.100643}, {-1, 1}], 
     InsetBox["102", {856.56627, 641.72228}, {-1, 1}], 
     InsetBox["103", {674.338133, 791.957139}, {-1, 1}], 
     InsetBox["104", {781.822329, 678.729607}, {-1, 1}], 
     InsetBox["105", {607.142857, 1000.}, {-1, 1}], 
     InsetBox["106", {1000., 607.142857}, {-1, 1}], 
     InsetBox["107", {607.387519, 966.192483}, {-1, 1}], 
     InsetBox["108", {964.47297, 606.523239}, {-1, 1}], 
     InsetBox["109", {607.63218, 932.384967}, {-1, 1}], 
     InsetBox["110", {639.528788, 828.461249}, {-1, 1}], 
     InsetBox["111", {928.94594, 605.90362}, {-1, 1}], 
     InsetBox["112", {818.867043, 641.824019}, {-1, 1}], 
     InsetBox["113", {606.935116, 898.501214}, {-1, 1}], 
     InsetBox["114", {706.365878, 717.794383}, {-1, 1}], 
     InsetBox["115", {892.6772, 605.615929}, {-1, 1}], 
     InsetBox["116", {670.678317, 756.162496}, {-1, 1}], 
     InsetBox["117", {742.750068, 679.613858}, {-1, 1}], 
     InsetBox["118", {606.238051, 864.617461}, {-1, 1}], 
     InsetBox["119", {637.284545, 793.821854}, {-1, 1}], 
     InsetBox["120", {781.167815, 641.925758}, {-1, 1}], 
     InsetBox["121", {856.408459, 605.328237}, {-1, 1}], 
     InsetBox["122", {571.428571, 1000.}, {-1, 1}], 
     InsetBox["123", {1000., 571.428571}, {-1, 1}], 
     InsetBox["124", {571.742738, 966.488154}, {-1, 1}], 
     InsetBox["125", {964.527997, 570.682115}, {-1, 1}], 
     InsetBox["126", {603.788077, 830.720063}, {-1, 1}], 
     InsetBox["127", {572.056904, 932.976308}, {-1, 1}], 
     InsetBox["128", {818.922264, 605.1048}, {-1, 1}], 
     InsetBox["129", {667.018502, 720.367853}, {-1, 1}], 
     InsetBox["130", {703.677808, 680.49811}, {-1, 1}], 
     InsetBox["131", {929.055994, 569.935659}, {-1, 1}], 
     InsetBox["132", {632.477836, 758.381589}, {-1, 1}], 
     InsetBox["133", {571.379988, 899.555294}, {-1, 1}], 
     InsetBox["134", {741.078776, 642.563797}, {-1, 1}], 
     InsetBox["135", {892.653321, 569.434927}, {-1, 1}], 
     InsetBox["136", {601.338104, 796.822664}, {-1, 1}], 
     InsetBox["137", {570.703072, 866.134279}, {-1, 1}], 
     InsetBox["138", {781.436069, 604.881362}, {-1, 1}], 
     InsetBox["139", {856.250648, 568.934195}, {-1, 1}], 
     InsetBox["140", {568.047367, 832.978877}, {-1, 1}], 
     InsetBox["141", {662.131749, 682.81054}, {-1, 1}], 
     InsetBox["142", {627.671126, 722.941323}, {-1, 1}], 
     InsetBox["143", {535.714286, 1000.}, {-1, 1}], 
     InsetBox["144", {1000., 535.714286}, {-1, 1}], 
     InsetBox["145", {536.362476, 966.701236}, {-1, 1}], 
     InsetBox["146", {700.989737, 643.201837}, {-1, 1}], 
     InsetBox["147", {964.577128, 534.881918}, {-1, 1}], 
     InsetBox["148", {537.010667, 933.402471}, {-1, 1}], 
     InsetBox["149", {818.977485, 568.385581}, {-1, 1}], 
     InsetBox["150", {595.34114, 762.578667}, {-1, 1}], 
     InsetBox["151", {929.154256, 534.049551}, {-1, 1}], 
     InsetBox["152", {741.575874, 604.883566}, {-1, 1}], 
     InsetBox["153", {536.608117, 900.22881}, {-1, 1}], 
     InsetBox["154", {565.391662, 799.823474}, {-1, 1}], 
     InsetBox["155", {893.058791, 533.318793}, {-1, 1}], 
     InsetBox["156", {536.205566, 867.055149}, {-1, 1}], 
     InsetBox["157", {781.704322, 567.836967}, {-1, 1}], 
     InsetBox["158", {856.963327, 532.588035}, {-1, 1}], 
     InsetBox["159", {589.344177, 728.334671}, {-1, 1}], 
     InsetBox["160", {620.58569, 685.122971}, {-1, 1}], 
     InsetBox["161", {657.244995, 645.253228}, {-1, 1}], 
     InsetBox["162", {534.879407, 834.840018}, {-1, 1}], 
     InsetBox["163", {701.715679, 604.88577}, {-1, 1}], 
     InsetBox["164", {558.204445, 766.775746}, {-1, 1}], 
     InsetBox["165", {500., 1000.}, {-1, 1}], 
     InsetBox["166", {1000., 500.}, {-1, 1}], 
     InsetBox["167", {500.982215, 966.914317}, {-1, 1}], 
     InsetBox["168", {819.917839, 531.797743}, {-1, 1}], 
     InsetBox["169", {964.626259, 499.081722}, {-1, 1}], 
     InsetBox["170", {501.964431, 933.828634}, {-1, 1}], 
     InsetBox["171", {742.072971, 567.203335}, {-1, 1}], 
     InsetBox["172", {533.553247, 802.624886}, {-1, 1}], 
     InsetBox["173", {929.252517, 498.163443}, {-1, 1}], 
     InsetBox["174", {501.836245, 900.902327}, {-1, 1}], 
     InsetBox["175", {893.464261, 497.202659}, {-1, 1}], 
     InsetBox["176", {501.70806, 867.976019}, {-1, 1}], 
     InsetBox["177", {782.872351, 531.007451}, {-1, 1}], 
     InsetBox["178", {530.21838, 773.80428}, {-1, 1}], 
     InsetBox["179", {658.473835, 605.662364}, {-1, 1}], 
     InsetBox["180", {551.017228, 733.728018}, {-1, 1}], 
     InsetBox["181", {613.500253, 647.304618}, {-1, 1}], 
     InsetBox["182", {857.676006, 496.241876}, {-1, 1}], 
     InsetBox["183", {501.711446, 836.701159}, {-1, 1}], 
     InsetBox["184", {575.141257, 690.368994}, {-1, 1}], 
     InsetBox["185", {702.44162, 566.569703}, {-1, 1}], 
     InsetBox["186", {501.714832, 805.426298}, {-1, 1}], 
     InsetBox["187", {743.622247, 530.00046}, {-1, 1}], 
     InsetBox["188", {465.435073, 966.590873}, {-1, 1}], 
     InsetBox["189", {820.858192, 495.209906}, {-1, 1}], 
     InsetBox["190", {464.285714, 1000.}, {-1, 1}], 
     InsetBox["191", {1000., 464.285714}, {-1, 1}], 
     InsetBox["192", {526.883512, 744.983675}, {-1, 1}], 
     InsetBox["193", {466.584432, 933.181746}, {-1, 1}], 
     InsetBox["194", {964.882647, 463.302777}, {-1, 1}], 
     InsetBox["195", {467.207152, 899.867682}, {-1, 1}], 
     InsetBox["196", {929.765293, 462.31984}, {-1, 1}], 
     InsetBox["197", {502.232315, 780.832814}, {-1, 1}], 
     InsetBox["198", {467.829873, 866.553618}, {-1, 1}], 
     InsetBox["199", {894.120536, 461.307159}, {-1, 1}], 
     InsetBox["200", {784.040379, 494.177936}, {-1, 1}], 
     InsetBox["201", {615.231992, 606.438958}, {-1, 1}], 
     InsetBox["202", {659.702676, 566.0715}, {-1, 1}], 
     InsetBox["203", {502.749797, 756.239331}, {-1, 1}], 
     InsetBox["204", {704.372143, 528.993468}, {-1, 1}], 
     InsetBox["205", {469.040772, 834.052943}, {-1, 1}], 
     InsetBox["206", {858.475779, 460.294479}, {-1, 1}], 
     InsetBox["207", {560.938336, 652.403317}, {-1, 1}], 
     InsetBox["208", {529.696824, 695.615017}, {-1, 1}], 
     InsetBox["209", {470.251672, 801.552268}, {-1, 1}], 
     InsetBox["210", {745.171522, 492.797585}, {-1, 1}], 
     InsetBox["211", {504.525583, 719.465791}, {-1, 1}], 
     InsetBox["212", {821.757252, 459.146758}, {-1, 1}], 
     InsetBox["213", {429.887931, 966.267429}, {-1, 1}], 
     InsetBox["214", {428.571429, 1000.}, {-1, 1}], 
     InsetBox["215", {1000., 428.571429}, {-1, 1}], 
     InsetBox["216", {474.803007, 772.434416}, {-1, 1}], 
     InsetBox["217", {431.204433, 932.534857}, {-1, 1}], 
     InsetBox["218", {965.139034, 427.523833}, {-1, 1}], 
     InsetBox["219", {432.578059, 898.833037}, {-1, 1}], 
     InsetBox["220", {930.278069, 426.476238}, {-1, 1}], 
     InsetBox["221", {616.963731, 565.573297}, {-1, 1}], 
     InsetBox["222", {662.451912, 527.836651}, {-1, 1}], 
     InsetBox["223", {479.354343, 743.316564}, {-1, 1}], 
     InsetBox["224", {433.951686, 865.131217}, {-1, 1}], 
     InsetBox["225", {785.038725, 457.999038}, {-1, 1}], 
     InsetBox["226", {894.776811, 425.41166}, {-1, 1}], 
     InsetBox["227", {566.542611, 607.949886}, {-1, 1}], 
     InsetBox["228", {706.302665, 491.417234}, {-1, 1}], 
     InsetBox["229", {436.370099, 831.404728}, {-1, 1}], 
     InsetBox["230", {859.275552, 424.347082}, {-1, 1}], 
     InsetBox["231", {438.788512, 797.678238}, {-1, 1}], 
     InsetBox["232", {508.376419, 657.502016}, {-1, 1}], 
     InsetBox["233", {746.817532, 456.42302}, {-1, 1}], 
     InsetBox["234", {447.3737, 764.036018}, {-1, 1}], 
     InsetBox["235", {482.167654, 693.947907}, {-1, 1}], 
     InsetBox["236", {822.656311, 423.083611}, {-1, 1}], 
     InsetBox["237", {394.312226, 965.928609}, {-1, 1}], 
     InsetBox["238", {620.531681, 526.679834}, {-1, 1}], 
     InsetBox["239", {392.857143, 1000.}, {-1, 1}], 
     InsetBox["240", {1000., 392.857143}, {-1, 1}], 
     InsetBox["241", {455.958889, 730.393797}, {-1, 1}], 
     InsetBox["242", {395.767309, 931.857217}, {-1, 1}], 
     InsetBox["243", {965.239211, 391.930728}, {-1, 1}], 
     InsetBox["244", {665.201148, 489.601802}, {-1, 1}], 
     InsetBox["245", {572.146885, 563.496454}, {-1, 1}], 
     InsetBox["246", {397.14111, 897.495539}, {-1, 1}], 
     InsetBox["247", {930.478421, 391.004313}, {-1, 1}], 
     InsetBox["248", {786.03707, 421.82014}, {-1, 1}], 
     InsetBox["249", {398.51491, 863.133861}, {-1, 1}], 
     InsetBox["250", {708.596339, 454.847001}, {-1, 1}], 
     InsetBox["251", {895.128491, 389.923818}, {-1, 1}], 
     InsetBox["252", {517.853229, 609.460813}, {-1, 1}], 
     InsetBox["253", {400.79494, 828.24243}, {-1, 1}], 
     InsetBox["254", {859.778561, 388.843324}, {-1, 1}], 
     InsetBox["255", {403.07497, 793.350998}, {-1, 1}], 
     InsetBox["256", {748.463542, 420.048455}, {-1, 1}], 
     InsetBox["257", {624.099631, 487.78637}, {-1, 1}], 
     InsetBox["258", {576.812802, 524.399743}, {-1, 1}], 
     InsetBox["259", {823.403795, 387.576963}, {-1, 1}], 
     InsetBox["260", {409.780515, 757.037705}, {-1, 1}], 
     InsetBox["261", {667.572292, 452.689016}, {-1, 1}], 
     InsetBox["262", {358.736521, 965.589789}, {-1, 1}], 
     InsetBox["263", {357.142857, 1000.}, {-1, 1}], 
     InsetBox["264", {1000., 357.142857}, {-1, 1}], 
     InsetBox["265", {360.330185, 931.179578}, {-1, 1}], 
     InsetBox["266", {965.339387, 356.337622}, {-1, 1}], 
     InsetBox["267", {527.330039, 561.41961}, {-1, 1}], 
     InsetBox["268", {361.70416, 896.158042}, {-1, 1}], 
     InsetBox["269", {416.486061, 720.724412}, {-1, 1}], 
     InsetBox["270", {930.678774, 355.532387}, {-1, 1}], 
     InsetBox["271", {787.029028, 386.310603}, {-1, 1}], 
     InsetBox["272", {710.890014, 418.276769}, {-1, 1}], 
     InsetBox["273", {433.735212, 678.600498}, {-1, 1}], 
     InsetBox["274", {363.078134, 861.136505}, {-1, 1}], 
     InsetBox["275", {895.480172, 354.435977}, {-1, 1}], 
     InsetBox["276", {365.219781, 825.080132}, {-1, 1}], 
     InsetBox["277", {450.984363, 636.476584}, {-1, 1}], 
     InsetBox["278", {860.281571, 353.339566}, {-1, 1}], 
     InsetBox["279", {581.47872, 485.303032}, {-1, 1}], 
     InsetBox["280", {750.080448, 384.518647}, {-1, 1}], 
     InsetBox["281", {626.548245, 450.531032}, {-1, 1}], 
     InsetBox["282", {367.361427, 789.023759}, {-1, 1}], 
     InsetBox["283", {533.093924, 522.119652}, {-1, 1}], 
     InsetBox["284", {468.518709, 594.272065}, {-1, 1}], 
     InsetBox["285", {669.943436, 415.776231}, {-1, 1}], 
     InsetBox["286", {824.151278, 352.070315}, {-1, 1}], 
     InsetBox["287", {372.18733, 750.039393}, {-1, 1}], 
     InsetBox["288", {322.727845, 965.252799}, {-1, 1}], 
     InsetBox["289", {321.428571, 1000.}, {-1, 1}], 
     InsetBox["290", {1000., 321.428571}, {-1, 1}], 
     InsetBox["291", {324.027119, 930.505598}, {-1, 1}], 
     InsetBox["292", {965.214821, 320.780246}, {-1, 1}], 
     InsetBox["293", {713.131867, 382.726691}, {-1, 1}], 
     InsetBox["294", {486.053055, 552.067546}, {-1, 1}], 
     InsetBox["295", {325.254932, 895.241819}, {-1, 1}], 
     InsetBox["296", {788.020985, 350.801065}, {-1, 1}], 
     InsetBox["297", {930.429642, 320.131921}, {-1, 1}], 
     InsetBox["298", {377.013233, 711.055028}, {-1, 1}], 
     InsetBox["299", {326.482745, 859.97804}, {-1, 1}], 
     InsetBox["300", {895.166837, 319.174547}, {-1, 1}], 
     InsetBox["301", {582.561395, 447.092804}, {-1, 1}], 
     InsetBox["302", {538.857808, 482.819693}, {-1, 1}], 
     InsetBox["303", {628.996859, 413.275693}, {-1, 1}], 
     InsetBox["304", {328.003798, 823.679306}, {-1, 1}], 
     InsetBox["305", {859.904031, 318.217172}, {-1, 1}], 
     InsetBox["306", {751.697353, 348.988839}, {-1, 1}], 
     InsetBox["307", {493.410273, 516.829277}, {-1, 1}], 
     InsetBox["308", {673.698491, 380.313416}, {-1, 1}], 
     InsetBox["309", {385.30277, 663.253089}, {-1, 1}], 
     InsetBox["310", {329.524851, 787.380572}, {-1, 1}], 
     InsetBox["311", {824.083949, 317.115531}, {-1, 1}], 
     InsetBox["312", {715.373721, 347.176613}, {-1, 1}], 
     InsetBox["313", {332.274119, 748.763813}, {-1, 1}], 
     InsetBox["314", {286.719169, 964.915809}, {-1, 1}], 
     InsetBox["315", {285.714286, 1000.}, {-1, 1}], 
     InsetBox["316", {1000., 285.714286}, {-1, 1}], 
     InsetBox["317", {965.090255, 285.222871}, {-1, 1}], 
     InsetBox["318", {287.724052, 929.831619}, {-1, 1}], 
     InsetBox["319", {788.263868, 316.01389}, {-1, 1}], 
     InsetBox["320", {419.184189, 579.083316}, {-1, 1}], 
     InsetBox["321", {393.592306, 615.451151}, {-1, 1}], 
     InsetBox["322", {930.18051, 284.731455}, {-1, 1}], 
     InsetBox["323", {288.805704, 894.325597}, {-1, 1}], 
     InsetBox["324", {444.776071, 542.715481}, {-1, 1}], 
     InsetBox["325", {500.76749, 481.591008}, {-1, 1}], 
     InsetBox["326", {634.265114, 377.90014}, {-1, 1}], 
     InsetBox["327", {538.574545, 443.654577}, {-1, 1}], 
     InsetBox["328", {583.644071, 408.882577}, {-1, 1}], 
     InsetBox["329", {894.853501, 283.913117}, {-1, 1}], 
     InsetBox["330", {289.887357, 858.819575}, {-1, 1}], 
     InsetBox["331", {335.023388, 710.147054}, {-1, 1}], 
     InsetBox["332", {752.044699, 314.16031}, {-1, 1}], 
     InsetBox["333", {677.453546, 344.8506}, {-1, 1}], 
     InsetBox["334", {859.526491, 283.094778}, {-1, 1}], 
     InsetBox["335", {290.787816, 822.27848}, {-1, 1}], 
     InsetBox["336", {453.726622, 511.538902}, {-1, 1}], 
     InsetBox["337", {824.016621, 282.160746}, {-1, 1}], 
     InsetBox["338", {291.688275, 785.737385}, {-1, 1}], 
     InsetBox["339", {339.045455, 666.028375}, {-1, 1}], 
     InsetBox["340", {715.825529, 312.30673}, {-1, 1}], 
     InsetBox["341", {501.155443, 447.532771}, {-1, 1}], 
     InsetBox["342", {421.617521, 531.075497}, {-1, 1}], 
     InsetBox["343", {592.323617, 373.812165}, {-1, 1}], 
     InsetBox["344", {462.677172, 480.362322}, {-1, 1}], 
     InsetBox["345", {397.378493, 554.971452}, {-1, 1}], 
     InsetBox["346", {788.506751, 281.226714}, {-1, 1}], 
     InsetBox["347", {639.53337, 342.524588}, {-1, 1}], 
     InsetBox["348", {250., 1000.}, {-1, 1}], 
     InsetBox["349", {1000., 250.}, {-1, 1}], 
     InsetBox["350", {250.672108, 964.789735}, {-1, 1}], 
     InsetBox["351", {964.974422, 249.694804}, {-1, 1}], 
     InsetBox["352", {292.360908, 747.488232}, {-1, 1}], 
     InsetBox["353", {251.344215, 929.579471}, {-1, 1}], 
     InsetBox["354", {538.291283, 404.489461}, {-1, 1}], 
     InsetBox["355", {929.948843, 249.389609}, {-1, 1}], 
     InsetBox["356", {373.139466, 578.867407}, {-1, 1}], 
     InsetBox["357", {252.052774, 893.887155}, {-1, 1}], 
     InsetBox["358", {426.898543, 504.823471}, {-1, 1}], 
     InsetBox["359", {343.067523, 621.909697}, {-1, 1}], 
     InsetBox["360", {894.558868, 248.54384}, {-1, 1}], 
     InsetBox["361", {252.761333, 858.19484}, {-1, 1}], 
     InsetBox["362", {678.762364, 310.170539}, {-1, 1}], 
     InsetBox["363", {752.392044, 279.331781}, {-1, 1}], 
     InsetBox["364", {293.033542, 709.23908}, {-1, 1}], 
     InsetBox["365", {859.168892, 247.698071}, {-1, 1}], 
     InsetBox["366", {463.73634, 451.410966}, {-1, 1}], 
     InsetBox["367", {253.124245, 821.714335}, {-1, 1}], 
     InsetBox["368", {501.543395, 413.474535}, {-1, 1}], 
     InsetBox["369", {398.45897, 519.435513}, {-1, 1}], 
     InsetBox["370", {432.179565, 478.571445}, {-1, 1}], 
     InsetBox["371", {601.003163, 338.741754}, {-1, 1}], 
     InsetBox["372", {823.731505, 246.808654}, {-1, 1}], 
     InsetBox["373", {550.382119, 369.72419}, {-1, 1}], 
     InsetBox["374", {716.277338, 277.436847}, {-1, 1}], 
     InsetBox["375", {253.487157, 785.23383}, {-1, 1}], 
     InsetBox["376", {641.699198, 308.034348}, {-1, 1}], 
     InsetBox["377", {517.312283, 386.711427}, {-1, 1}], 
     InsetBox["378", {292.788141, 668.803661}, {-1, 1}], 
     InsetBox["379", {375.572798, 530.859588}, {-1, 1}], 
     InsetBox["380", {400.070464, 498.108041}, {-1, 1}], 
     InsetBox["381", {788.294118, 245.919238}, {-1, 1}], 
     InsetBox["382", {214.285714, 1000.}, {-1, 1}], 
     InsetBox["383", {1000., 214.285714}, {-1, 1}], 
     InsetBox["384", {214.625047, 964.663661}, {-1, 1}], 
     InsetBox["385", {964.858588, 214.166738}, {-1, 1}], 
     InsetBox["386", {464.795507, 422.459609}, {-1, 1}], 
     InsetBox["387", {253.461985, 747.494708}, {-1, 1}], 
     InsetBox["388", {433.571578, 451.933139}, {-1, 1}], 
     InsetBox["389", {214.964379, 929.327323}, {-1, 1}], 
     InsetBox["390", {329.305209, 585.03462}, {-1, 1}], 
     InsetBox["391", {929.717176, 214.047762}, {-1, 1}], 
     InsetBox["392", {215.299844, 893.448714}, {-1, 1}], 
     InsetBox["393", {680.071182, 275.490477}, {-1, 1}], 
     InsetBox["394", {352.686625, 542.283663}, {-1, 1}], 
     InsetBox["395", {894.264235, 213.174563}, {-1, 1}], 
     InsetBox["396", {487.291219, 393.432914}, {-1, 1}], 
     InsetBox["397", {401.681958, 476.780569}, {-1, 1}], 
     InsetBox["398", {752.205748, 244.338731}, {-1, 1}], 
     InsetBox["399", {562.472956, 334.95892}, {-1, 1}], 
     InsetBox["400", {215.635309, 857.570105}, {-1, 1}], 
     InsetBox["401", {373.280903, 504.678078}, {-1, 1}], 
     InsetBox["402", {292.54274, 628.368243}, {-1, 1}], 
     InsetBox["403", {604.24369, 304.846931}, {-1, 1}], 
     InsetBox["404", {522.901027, 357.873742}, {-1, 1}], 
     InsetBox["405", {858.811293, 212.301364}, {-1, 1}], 
     InsetBox["406", {253.436814, 709.755585}, {-1, 1}], 
     InsetBox["407", {215.460674, 821.15019}, {-1, 1}], 
     InsetBox["408", {434.963591, 425.294833}, {-1, 1}], 
     InsetBox["409", {496.333283, 368.933392}, {-1, 1}], 
     InsetBox["410", {823.446389, 211.456563}, {-1, 1}], 
     InsetBox["411", {716.117377, 242.758225}, {-1, 1}], 
     InsetBox["412", {457.270156, 400.154401}, {-1, 1}], 
     InsetBox["413", {643.865027, 273.544108}, {-1, 1}], 
     InsetBox["414", {403.406816, 452.455313}, {-1, 1}], 
     InsetBox["415", {215.286039, 784.730276}, {-1, 1}], 
     InsetBox["416", {346.491342, 511.248114}, {-1, 1}], 
     InsetBox["417", {252.15269, 670.954158}, {-1, 1}], 
     InsetBox["418", {370.989008, 478.496567}, {-1, 1}], 
     InsetBox["419", {788.081486, 210.611762}, {-1, 1}], 
     InsetBox["420", {473.039044, 373.391293}, {-1, 1}], 
     InsetBox["421", {528.489772, 329.036058}, {-1, 1}], 
     InsetBox["422", {315.542896, 548.159544}, {-1, 1}], 
     InsetBox["423", {1000., 178.571429}, {-1, 1}], 
     InsetBox["424", {178.571429, 1000.}, {-1, 1}], 
     InsetBox["425", {566.788182, 301.659514}, {-1, 1}], 
     InsetBox["426", {964.660686, 178.595299}, {-1, 1}], 
     InsetBox["427", {178.588556, 964.534795}, {-1, 1}], 
     InsetBox["428", {432.115955, 405.186989}, {-1, 1}], 
     InsetBox["429", {285.470953, 591.201834}, {-1, 1}], 
     InsetBox["430", {680.058978, 241.072015}, {-1, 1}], 
     InsetBox["431", {929.321371, 178.619169}, {-1, 1}], 
     InsetBox["432", {178.605682, 929.069591}, {-1, 1}], 
     InsetBox["433", {214.563062, 747.501183}, {-1, 1}], 
     InsetBox["434", {405.131674, 428.130058}, {-1, 1}], 
     InsetBox["435", {495.419936, 346.023294}, {-1, 1}], 
     InsetBox["436", {607.484218, 270.952108}, {-1, 1}], 
     InsetBox["437", {178.679178, 893.10359}, {-1, 1}], 
     InsetBox["438", {752.019451, 209.345682}, {-1, 1}], 
     InsetBox["439", {893.843514, 177.747715}, {-1, 1}], 
     InsetBox["440", {449.744805, 377.849193}, {-1, 1}], 
     InsetBox["441", {373.091772, 451.523537}, {-1, 1}], 
     InsetBox["442", {178.752674, 857.13759}, {-1, 1}], 
     InsetBox["443", {250.868565, 632.152731}, {-1, 1}], 
     InsetBox["444", {858.365656, 176.87626}, {-1, 1}], 
     InsetBox["445", {406.961754, 410.219576}, {-1, 1}], 
     InsetBox["446", {213.840085, 710.272091}, {-1, 1}], 
     InsetBox["447", {429.268319, 385.079144}, {-1, 1}], 
     InsetBox["448", {644.000578, 239.385805}, {-1, 1}], 
     InsetBox["449", {340.296059, 480.212565}, {-1, 1}], 
     InsetBox["450", {178.516307, 820.689192}, {-1, 1}], 
     InsetBox["451", {715.957417, 208.079603}, {-1, 1}], 
     InsetBox["452", {464.917286, 349.068311}, {-1, 1}], 
     InsetBox["453", {822.783053, 176.112402}, {-1, 1}], 
     InsetBox["454", {309.901601, 515.011042}, {-1, 1}], 
     InsetBox["455", {532.054651, 297.153808}, {-1, 1}], 
     InsetBox["456", {494.506589, 323.113196}, {-1, 1}], 
     InsetBox["457", {408.791834, 392.309095}, {-1, 1}], 
     InsetBox["458", {571.103409, 268.360108}, {-1, 1}], 
     InsetBox["459", {278.399166, 554.035424}, {-1, 1}], 
     InsetBox["460", {375.194536, 424.550508}, {-1, 1}], 
     InsetBox["461", {178.27994, 784.240795}, {-1, 1}], 
     InsetBox["462", {787.20045, 175.348544}, {-1, 1}], 
     InsetBox["463", {211.517238, 673.104655}, {-1, 1}], 
     InsetBox["464", {680.046773, 206.653552}, {-1, 1}], 
     InsetBox["465", {245.652811, 595.362993}, {-1, 1}], 
     InsetBox["466", {342.776729, 450.591762}, {-1, 1}], 
     InsetBox["467", {1000., 142.857143}, {-1, 1}], 
     InsetBox["468", {142.857143, 1000.}, {-1, 1}], 
     InsetBox["469", {964.462783, 143.02386}, {-1, 1}], 
     InsetBox["470", {607.969065, 237.077574}, {-1, 1}], 
     InsetBox["471", {142.552064, 964.40593}, {-1, 1}], 
     InsetBox["472", {382.628993, 403.344082}, {-1, 1}], 
     InsetBox["473", {928.925566, 143.190577}, {-1, 1}], 
     InsetBox["474", {434.414636, 352.113328}, {-1, 1}], 
     InsetBox["475", {177.314789, 747.398222}, {-1, 1}], 
     InsetBox["476", {142.246986, 928.811859}, {-1, 1}], 
     InsetBox["477", {751.145421, 174.37598}, {-1, 1}], 
     InsetBox["478", {412.239043, 367.125492}, {-1, 1}], 
     InsetBox["479", {893.422793, 142.320866}, {-1, 1}], 
     InsetBox["480", {142.058512, 892.758467}, {-1, 1}], 
     InsetBox["481", {456.795528, 324.745329}, {-1, 1}], 
     InsetBox["482", {304.260307, 481.862539}, {-1, 1}], 
     InsetBox["483", {497.321119, 292.648102}, {-1, 1}], 
     InsetBox["484", {390.063449, 382.137655}, {-1, 1}], 
     InsetBox["485", {535.619529, 265.271559}, {-1, 1}], 
     InsetBox["486", {141.870038, 856.705074}, {-1, 1}], 
     InsetBox["487", {857.920019, 141.451155}, {-1, 1}], 
     InsetBox["488", {209.194391, 635.937219}, {-1, 1}], 
     InsetBox["489", {644.13613, 205.227502}, {-1, 1}], 
     InsetBox["490", {273.31186, 518.773969}, {-1, 1}], 
     InsetBox["491", {176.349637, 710.555648}, {-1, 1}], 
     InsetBox["492", {345.257398, 420.970958}, {-1, 1}], 
     InsetBox["493", {715.090391, 173.403416}, {-1, 1}], 
     InsetBox["494", {571.937552, 234.769342}, {-1, 1}], 
     InsetBox["495", {141.57194, 820.228195}, {-1, 1}], 
     InsetBox["496", {822.119716, 140.768241}, {-1, 1}], 
     InsetBox["497", {240.437056, 558.573255}, {-1, 1}], 
     InsetBox["498", {358.296232, 396.468587}, {-1, 1}], 
     InsetBox["499", {141.273841, 783.751315}, {-1, 1}], 
     InsetBox["500", {786.319414, 140.085327}, {-1, 1}], 
     InsetBox["501", {679.3769, 172.240261}, {-1, 1}], 
     InsetBox["502", {174.302716, 673.920438}, {-1, 1}], 
     InsetBox["503", {608.453912, 203.203039}, {-1, 1}], 
     InsetBox["504", {304.470213, 447.322303}, {-1, 1}], 
     InsetBox["505", {395.209766, 349.17184}, {-1, 1}], 
     InsetBox["506", {371.335065, 371.966216}, {-1, 1}], 
     InsetBox["507", {205.834669, 599.524152}, {-1, 1}], 
     InsetBox["508", {419.084468, 326.377463}, {-1, 1}], 
     InsetBox["509", {460.536982, 292.461945}, {-1, 1}], 
     InsetBox["510", {500.135649, 262.183009}, {-1, 1}], 
     InsetBox["511", {107.142857, 1000.}, {-1, 1}], 
     InsetBox["512", {1000., 107.142857}, {-1, 1}], 
     InsetBox["513", {964.121719, 107.324775}, {-1, 1}], 
     InsetBox["514", {106.857346, 964.213569}, {-1, 1}], 
     InsetBox["515", {928.243438, 107.506692}, {-1, 1}], 
     InsetBox["516", {268.224555, 483.512513}, {-1, 1}], 
     InsetBox["517", {750.27139, 139.406278}, {-1, 1}], 
     InsetBox["518", {106.571834, 928.427138}, {-1, 1}], 
     InsetBox["519", {140.066515, 747.29526}, {-1, 1}], 
     InsetBox["520", {535.94444, 231.855982}, {-1, 1}], 
     InsetBox["521", {892.541336, 106.809677}, {-1, 1}], 
     InsetBox["522", {106.368853, 892.194866}, {-1, 1}], 
     InsetBox["523", {235.7138, 523.63082}, {-1, 1}], 
     InsetBox["524", {643.663409, 171.077106}, {-1, 1}], 
     InsetBox["525", {172.255795, 637.285229}, {-1, 1}], 
     InsetBox["526", {856.839234, 106.112661}, {-1, 1}], 
     InsetBox["527", {106.165872, 855.962593}, {-1, 1}], 
     InsetBox["528", {572.771695, 201.178576}, {-1, 1}], 
     InsetBox["529", {714.223366, 138.727229}, {-1, 1}], 
     InsetBox["530", {138.859189, 710.839206}, {-1, 1}], 
     InsetBox["531", {202.474947, 563.111085}, {-1, 1}], 
     InsetBox["532", {304.680119, 412.782067}, {-1, 1}], 
     InsetBox["533", {820.862684, 105.576559}, {-1, 1}], 
     InsetBox["534", {105.671421, 819.601801}, {-1, 1}], 
     InsetBox["535", {423.752845, 292.275788}, {-1, 1}], 
     InsetBox["536", {464.278435, 260.178561}, {-1, 1}], 
     InsetBox["537", {322.676683, 386.238865}, {-1, 1}], 
     InsetBox["538", {608.179487, 169.291411}, {-1, 1}], 
     InsetBox["539", {499.951328, 228.942621}, {-1, 1}], 
     InsetBox["540", {340.673248, 359.695664}, {-1, 1}], 
     InsetBox["541", {678.707027, 137.82697}, {-1, 1}], 
     InsetBox["542", {784.886134, 105.040456}, {-1, 1}], 
     InsetBox["543", {362.140397, 336.307662}, {-1, 1}], 
     InsetBox["544", {266.163697, 444.052845}, {-1, 1}], 
     InsetBox["545", {105.176971, 783.241009}, {-1, 1}], 
     InsetBox["546", {169.539612, 601.410618}, {-1, 1}], 
     InsetBox["547", {137.088194, 674.736222}, {-1, 1}], 
     InsetBox["548", {383.607546, 312.919659}, {-1, 1}], 
     InsetBox["549", {230.990543, 488.688386}, {-1, 1}], 
     InsetBox["550", {536.269351, 198.440405}, {-1, 1}], 
     InsetBox["551", {71.4285714, 1000.}, {-1, 1}], 
     InsetBox["552", {1000., 71.4285714}, {-1, 1}], 
     InsetBox["553", {963.780655, 71.6256898}, {-1, 1}], 
     InsetBox["554", {71.1626271, 964.021208}, {-1, 1}], 
     InsetBox["555", {748.906453, 104.482747}, {-1, 1}], 
     InsetBox["556", {198.115739, 528.487672}, {-1, 1}], 
     InsetBox["557", {104.483436, 746.724657}, {-1, 1}], 
     InsetBox["558", {927.56131, 71.8228081}, {-1, 1}], 
     InsetBox["559", {70.8966827, 928.042417}, {-1, 1}], 
     InsetBox["560", {643.190688, 136.926711}, {-1, 1}], 
     InsetBox["561", {891.659879, 71.2984874}, {-1, 1}], 
     InsetBox["562", {70.679194, 891.631264}, {-1, 1}], 
     InsetBox["563", {572.695565, 167.505716}, {-1, 1}], 
     InsetBox["564", {428.421221, 258.174113}, {-1, 1}], 
     InsetBox["565", {135.317198, 638.633238}, {-1, 1}], 
     InsetBox["566", {166.823429, 565.536007}, {-1, 1}], 
     InsetBox["567", {855.758448, 70.7741666}, {-1, 1}], 
     InsetBox["568", {390.929806, 283.467115}, {-1, 1}], 
     InsetBox["569", {70.4617052, 855.220112}, {-1, 1}], 
     InsetBox["570", {712.926771, 103.925038}, {-1, 1}], 
     InsetBox["571", {103.789901, 710.208305}, {-1, 1}], 
     InsetBox["572", {462.599402, 226.351725}, {-1, 1}], 
     InsetBox["573", {264.10284, 404.593176}, {-1, 1}], 
     InsetBox["574", {819.605651, 70.3848759}, {-1, 1}], 
     InsetBox["575", {499.767007, 195.702233}, {-1, 1}], 
     InsetBox["576", {227.270003, 451.973288}, {-1, 1}], 
     InsetBox["577", {287.057135, 376.009144}, {-1, 1}], 
     InsetBox["578", {69.7709024, 818.975408}, {-1, 1}], 
     InsetBox["579", {607.905061, 135.379784}, {-1, 1}], 
     InsetBox["580", {310.01143, 347.425111}, {-1, 1}], 
     InsetBox["581", {193.756532, 493.864259}, {-1, 1}], 
     InsetBox["582", {329.071027, 323.443484}, {-1, 1}], 
     InsetBox["583", {677.37107, 103.247445}, {-1, 1}], 
     InsetBox["584", {133.244555, 603.297083}, {-1, 1}], 
     InsetBox["585", {537.235117, 164.945357}, {-1, 1}], 
     InsetBox["586", {102.460039, 674.246263}, {-1, 1}], 
     InsetBox["587", {783.452855, 69.9955851}, {-1, 1}], 
     InsetBox["588", {69.0800996, 782.730704}, {-1, 1}], 
     InsetBox["589", {348.130624, 299.461856}, {-1, 1}], 
     InsetBox["590", {398.252066, 254.01457}, {-1, 1}], 
     InsetBox["591", {163.257495, 531.400307}, {-1, 1}], 
     InsetBox["592", {747.541515, 69.559216}, {-1, 1}], 
     InsetBox["593", {1000., 35.7142857}, {-1, 1}], 
     InsetBox["594", {35.7142857, 1000.}, {-1, 1}], 
     InsetBox["595", {963.565609, 35.8128449}, {-1, 1}], 
     InsetBox["596", {68.9003557, 746.154055}, {-1, 1}], 
     InsetBox["597", {35.5813135, 963.685886}, {-1, 1}], 
     InsetBox["598", {425.247475, 223.76083}, {-1, 1}], 
     InsetBox["599", {572.619435, 133.832856}, {-1, 1}], 
     InsetBox["600", {641.815369, 102.569853}, {-1, 1}], 
     InsetBox["601", {927.131218, 35.9114041}, {-1, 1}], 
     InsetBox["602", {35.4483414, 927.371772}, {-1, 1}], 
     InsetBox["603", {358.106767, 274.658442}, {-1, 1}], 
     InsetBox["604", {101.130178, 638.284221}, {-1, 1}], 
     InsetBox["605", {131.171911, 567.960929}, {-1, 1}], 
     InsetBox["606", {890.855785, 35.6492437}, {-1, 1}], 
     InsetBox["607", {35.339597, 890.841477}, {-1, 1}], 
     InsetBox["608", {460.920368, 192.52489}, {-1, 1}], 
     InsetBox["609", {223.549462, 415.25819}, {-1, 1}], 
     InsetBox["610", {711.630176, 69.1228468}, {-1, 1}], 
     InsetBox["611", {501.774669, 162.384998}, {-1, 1}], 
     InsetBox["612", {188.376308, 459.893731}, {-1, 1}], 
     InsetBox["613", {854.580351, 35.3870833}, {-1, 1}], 
     InsetBox["614", {68.7206118, 709.577405}, {-1, 1}], 
     InsetBox["615", {35.2308526, 854.311183}, {-1, 1}], 
     InsetBox["616", {398.803082, 227.171021}, {-1, 1}], 
     InsetBox["617", {159.691562, 497.264607}, {-1, 1}], 
     InsetBox["618", {368.08291, 249.855028}, {-1, 1}], 
     InsetBox["619", {606.782307, 101.289143}, {-1, 1}], 
     InsetBox["620", {283.863647, 328.694257}, {-1, 1}], 
     InsetBox["621", {818.179234, 35.1924379}, {-1, 1}], 
     InsetBox["622", {34.8854512, 817.864112}, {-1, 1}], 
     InsetBox["623", {261.70863, 351.897073}, {-1, 1}], 
     InsetBox["624", {302.230531, 306.932608}, {-1, 1}], 
     InsetBox["625", {538.200883, 131.45031}, {-1, 1}], 
     InsetBox["626", {99.6174224, 603.191117}, {-1, 1}], 
     InsetBox["627", {239.553613, 375.099889}, {-1, 1}], 
     InsetBox["628", {676.035113, 68.6679211}, {-1, 1}], 
     InsetBox["629", {320.597414, 285.170959}, {-1, 1}], 
     InsetBox["630", {67.8318849, 673.756305}, {-1, 1}], 
     InsetBox["631", {128.399252, 534.312942}, {-1, 1}], 
     InsetBox["632", {781.778117, 34.9977926}, {-1, 1}], 
     InsetBox["633", {34.5400498, 781.417042}, {-1, 1}], 
     InsetBox["634", {372.358688, 230.581213}, {-1, 1}], 
     InsetBox["635", {332.105767, 262.668423}, {-1, 1}], 
     InsetBox["636", {422.073729, 189.347547}, {-1, 1}], 
     InsetBox["637", {465.905111, 158.761826}, {-1, 1}], 
     InsetBox["638", {571.749245, 100.008434}, {-1, 1}], 
     InsetBox["639", {745.497729, 34.779608}, {-1, 1}], 
     InsetBox["640", {182.996084, 425.923203}, {-1, 1}], 
     InsetBox["641", {34.4501779, 744.803999}, {-1, 1}], 
     InsetBox["642", {640.440049, 68.2129953}, {-1, 1}], 
     InsetBox["643", {98.1046668, 568.098012}, {-1, 1}], 
     InsetBox["644", {1000., 0.}, {-1, 1}], 
     InsetBox["645", {0., 1000.}, {-1, 1}], 
     InsetBox["646", {399.354098, 200.327472}, {-1, 1}], 
     InsetBox["647", {155.2437, 464.503867}, {-1, 1}], 
     InsetBox["648", {963.350563, 0.}, {-1, 1}], 
     InsetBox["649", {0., 963.350563}, {-1, 1}], 
     InsetBox["650", {66.943158, 637.935205}, {-1, 1}], 
     InsetBox["651", {503.782331, 129.067764}, {-1, 1}], 
     InsetBox["652", {0., 926.701127}, {-1, 1}], 
     InsetBox["653", {926.701127, 0.}, {-1, 1}], 
     InsetBox["654", {205.622507, 386.107023}, {-1, 1}], 
     InsetBox["655", {343.61412, 240.165887}, {-1, 1}], 
     InsetBox["656", {376.634466, 211.307398}, {-1, 1}], 
     InsetBox["657", {890.05169, 0.}, {-1, 1}], 
     InsetBox["658", {0., 890.05169}, {-1, 1}], 
     InsetBox["659", {125.626592, 500.664955}, {-1, 1}], 
     InsetBox["660", {709.217342, 34.5614234}, {-1, 1}], 
     InsetBox["661", {34.3603059, 708.190956}, {-1, 1}], 
     InsetBox["662", {0., 853.402253}, {-1, 1}], 
     InsetBox["663", {853.402253, 0.}, {-1, 1}], 
     InsetBox["664", {605.659552, 67.1985031}, {-1, 1}], 
     InsetBox["665", {538.130513, 98.1475531}, {-1, 1}], 
     InsetBox["666", {257.715864, 309.963403}, {-1, 1}], 
     InsetBox["667", {350.866658, 221.144484}, {-1, 1}], 
     InsetBox["668", {275.390034, 290.421732}, {-1, 1}], 
     InsetBox["669", {65.9902901, 603.08515}, {-1, 1}], 
     InsetBox["670", {293.064205, 270.880061}, {-1, 1}], 
     InsetBox["671", {95.962231, 535.089756}, {-1, 1}], 
     InsetBox["672", {0., 816.752817}, {-1, 1}], 
     InsetBox["673", {816.752817, 0.}, {-1, 1}], 
     InsetBox["674", {236.360125, 327.785002}, {-1, 1}], 
     InsetBox["675", {430.035554, 155.138653}, {-1, 1}], 
     InsetBox["676", {673.095091, 34.3339605}, {-1, 1}], 
     InsetBox["677", {33.9159424, 671.955688}, {-1, 1}], 
     InsetBox["678", {306.104768, 250.678404}, {-1, 1}], 
     InsetBox["679", {150.795838, 431.743126}, {-1, 1}], 
     InsetBox["680", {215.004387, 345.606601}, {-1, 1}], 
     InsetBox["681", {470.889854, 124.998761}, {-1, 1}], 
     InsetBox["682", {0., 780.10338}, {-1, 1}], 
     InsetBox["683", {780.10338, 0.}, {-1, 1}], 
     InsetBox["684", {358.119196, 202.123082}, {-1, 1}], 
     InsetBox["685", {171.691401, 397.114157}, {-1, 1}], 
     InsetBox["686", {375.923062, 187.369442}, {-1, 1}], 
     InsetBox["687", {393.726928, 172.615802}, {-1, 1}], 
     InsetBox["688", {122.111092, 469.114003}, {-1, 1}], 
     InsetBox["689", {319.14533, 230.476746}, {-1, 1}], 
     InsetBox["690", {570.879056, 66.1840109}, {-1, 1}], 
     InsetBox["691", {65.0374221, 568.235096}, {-1, 1}], 
     InsetBox["692", {504.511781, 96.2866725}, {-1, 1}], 
     InsetBox["693", {636.972841, 34.1064977}, {-1, 1}], 
     InsetBox["694", {0., 743.453943}, {-1, 1}], 
     InsetBox["695", {743.453943, 0.}, {-1, 1}], 
     InsetBox["696", {33.471579, 635.720419}, {-1, 1}], 
     InsetBox["697", {93.8197952, 502.0815}, {-1, 1}], 
     InsetBox["698", {329.374628, 211.707756}, {-1, 1}], 
     InsetBox["699", {187.695552, 356.955856}, {-1, 1}], 
     InsetBox["700", {254.078483, 273.343296}, {-1, 1}], 
     InsetBox["701", {236.983111, 291.047155}, {-1, 1}], 
     InsetBox["702", {271.173854, 255.639437}, {-1, 1}], 
     InsetBox["703", {0., 706.804507}, {-1, 1}], 
     InsetBox["704", {706.804507, 0.}, {-1, 1}], 
     InsetBox["705", {339.603925, 192.938765}, {-1, 1}], 
     InsetBox["706", {538.060144, 64.8447961}, {-1, 1}], 
     InsetBox["707", {437.997378, 120.929758}, {-1, 1}], 
     InsetBox["708", {142.095782, 403.424751}, {-1, 1}], 
     InsetBox["709", {602.493113, 33.5992516}, {-1, 1}], 
     InsetBox["710", {63.5252103, 535.866571}, {-1, 1}], 
     InsetBox["711", {401.709488, 142.759586}, {-1, 1}], 
     InsetBox["712", {118.595592, 437.56305}, {-1, 1}], 
     InsetBox["713", {216.954225, 306.641876}, {-1, 1}], 
     InsetBox["714", {32.995145, 601.205912}, {-1, 1}], 
     InsetBox["715", {284.295122, 237.051974}, {-1, 1}], 
     InsetBox["716", {472.820267, 93.0684134}, {-1, 1}], 
     InsetBox["717", {352.492026, 174.411411}, {-1, 1}], 
     InsetBox["718", {160.386717, 368.305112}, {-1, 1}], 
     InsetBox["719", {196.925339, 322.236597}, {-1, 1}], 
     InsetBox["720", {297.416389, 218.464512}, {-1, 1}], 
     InsetBox["721", {91.2655204, 471.441567}, {-1, 1}], 
     InsetBox["722", {0., 670.15507}, {-1, 1}], 
     InsetBox["723", {670.15507, 0.}, {-1, 1}], 
     InsetBox["724", {365.380127, 155.884057}, {-1, 1}], 
     InsetBox["725", {308.165548, 200.252135}, {-1, 1}], 
     InsetBox["726", {568.013385, 33.0920055}, {-1, 1}], 
     InsetBox["727", {505.241231, 63.5055812}, {-1, 1}], 
     InsetBox["728", {32.5187111, 566.691405}, {-1, 1}], 
     InsetBox["729", {62.0129985, 503.498045}, {-1, 1}], 
     InsetBox["730", {172.662736, 332.990128}, {-1, 1}], 
     InsetBox["731", {318.914706, 182.039757}, {-1, 1}], 
     InsetBox["732", {0., 633.505633}, {-1, 1}], 
     InsetBox["733", {633.505633, 0.}, {-1, 1}], 
     InsetBox["734", {409.692048, 112.90337}, {-1, 1}], 
     InsetBox["735", {112.500163, 409.735345}, {-1, 1}], 
     InsetBox["736", {249.283503, 240.398812}, {-1, 1}], 
     InsetBox["737", {441.128754, 89.8501543}, {-1, 1}], 
     InsetBox["738", {133.395725, 375.106376}, {-1, 1}], 
     InsetBox["739", {232.766931, 256.264859}, {-1, 1}], 
     InsetBox["740", {88.7112455, 440.801634}, {-1, 1}], 
     InsetBox["741", {216.250359, 272.130907}, {-1, 1}], 
     InsetBox["742", {262.485476, 223.425545}, {-1, 1}], 
     InsetBox["743", {330.399581, 163.273449}, {-1, 1}], 
     InsetBox["744", {373.383422, 130.380519}, {-1, 1}], 
     InsetBox["745", {535.827853, 32.422398}, {-1, 1}], 
     InsetBox["746", {31.7626052, 534.731066}, {-1, 1}], 
     InsetBox["747", {275.687448, 206.452278}, {-1, 1}], 
     InsetBox["748", {197.548325, 285.49875}, {-1, 1}], 
     InsetBox["749", {148.400133, 343.743659}, {-1, 1}], 
     InsetBox["750", {474.75068, 61.1380657}, {-1, 1}], 
     InsetBox["751", {60.4199485, 473.769132}, {-1, 1}], 
     InsetBox["752", {599.326674, 0.}, {-1, 1}], 
     InsetBox["753", {0., 599.326674}, {-1, 1}], 
     InsetBox["754", {341.884456, 144.507141}, {-1, 1}], 
     InsetBox["755", {178.846291, 298.866593}, {-1, 1}], 
     InsetBox["756", {286.956467, 188.796513}, {-1, 1}], 
     InsetBox["757", {298.225486, 171.140749}, {-1, 1}], 
     InsetBox["758", {106.404733, 381.90764}, {-1, 1}], 
     InsetBox["759", {84.1955982, 413.248595}, {-1, 1}], 
     InsetBox["760", {413.273324, 84.1706283}, {-1, 1}], 
     InsetBox["761", {503.64232, 31.7527906}, {-1, 1}], 
     InsetBox["762", {381.386717, 104.876982}, {-1, 1}], 
     InsetBox["763", {31.0064992, 502.770727}, {-1, 1}], 
     InsetBox["764", {157.629919, 309.024399}, {-1, 1}], 
     InsetBox["765", {0., 565.147714}, {-1, 1}], 
     InsetBox["766", {565.147714, 0.}, {-1, 1}], 
     InsetBox["767", {123.705293, 350.447061}, {-1, 1}], 
     InsetBox["768", {230.707751, 226.265406}, {-1, 1}], 
     InsetBox["769", {215.073565, 240.666921}, {-1, 1}], 
     InsetBox["770", {444.260129, 58.7705502}, {-1, 1}], 
     InsetBox["771", {58.8268986, 444.040219}, {-1, 1}], 
     InsetBox["772", {243.777229, 210.402872}, {-1, 1}], 
     InsetBox["773", {199.439378, 255.068436}, {-1, 1}], 
     InsetBox["774", {349.393915, 120.943359}, {-1, 1}], 
     InsetBox["775", {308.307136, 152.135487}, {-1, 1}], 
     InsetBox["776", {256.846707, 194.540338}, {-1, 1}], 
     InsetBox["777", {181.931256, 267.202763}, {-1, 1}], 
     InsetBox["778", {136.413548, 319.182205}, {-1, 1}], 
     InsetBox["779", {267.931622, 177.55535}, {-1, 1}], 
     InsetBox["780", {318.388786, 133.130225}, {-1, 1}], 
     InsetBox["781", {473.92151, 30.5690329}, {-1, 1}], 
     InsetBox["782", {0., 533.595562}, {-1, 1}], 
     InsetBox["783", {533.595562, 0.}, {-1, 1}], 
     InsetBox["784", {164.423133, 279.337089}, {-1, 1}], 
     InsetBox["785", {30.2099743, 473.430735}, {-1, 1}], 
     InsetBox["786", {79.6799509, 385.695555}, {-1, 1}], 
     InsetBox["787", {279.016536, 160.570362}, {-1, 1}], 
     InsetBox["788", {99.010453, 357.150464}, {-1, 1}], 
     InsetBox["789", {385.417894, 78.4911022}, {-1, 1}], 
     InsetBox["790", {356.903373, 97.3795761}, {-1, 1}], 
     InsetBox["791", {55.8910339, 416.761845}, {-1, 1}], 
     InsetBox["792", {416.8546, 55.4378866}, {-1, 1}], 
     InsetBox["793", {145.016206, 288.755053}, {-1, 1}], 
     InsetBox["794", {114.014861, 325.787747}, {-1, 1}], 
     InsetBox["795", {212.132, 212.132}, {-1, 1}], 
     InsetBox["796", {288.396422, 142.26899}, {-1, 1}], 
     InsetBox["797", {197.803712, 225.551907}, {-1, 1}], 
     InsetBox["798", {225.551907, 197.803712}, {-1, 1}], 
     InsetBox["799", {325.404408, 111.506198}, {-1, 1}], 
     InsetBox["800", {502.043409, 0.}, {-1, 1}], 
     InsetBox["801", {0., 502.043409}, {-1, 1}], 
     InsetBox["802", {182.628398, 238.005966}, {-1, 1}], 
     InsetBox["803", {238.005966, 182.628398}, {-1, 1}], 
     InsetBox["804", {444.200699, 29.3852751}, {-1, 1}], 
     InsetBox["805", {29.4134493, 444.090743}, {-1, 1}], 
     InsetBox["806", {125.60928, 298.173017}, {-1, 1}], 
     InsetBox["807", {166.671042, 249.440848}, {-1, 1}], 
     InsetBox["808", {249.440848, 166.671042}, {-1, 1}], 
     InsetBox["809", {297.776307, 123.967618}, {-1, 1}], 
     InsetBox["810", {74.3912802, 361.115721}, {-1, 1}], 
     InsetBox["811", {360.929106, 73.1134787}, {-1, 1}], 
     InsetBox["812", {52.9551692, 389.483471}, {-1, 1}], 
     InsetBox["813", {149.999975, 259.807586}, {-1, 1}], 
     InsetBox["814", {259.807586, 149.999975}, {-1, 1}], 
     InsetBox["815", {91.6161734, 332.393289}, {-1, 1}], 
     InsetBox["816", {389.449071, 52.1052229}, {-1, 1}], 
     InsetBox["817", {332.420029, 89.8821706}, {-1, 1}], 
     InsetBox["818", {0., 473.092339}, {-1, 1}], 
     InsetBox["819", {473.092339, 0.}, {-1, 1}], 
     InsetBox["820", {105.120109, 304.629262}, {-1, 1}], 
     InsetBox["821", {27.9455169, 417.243125}, {-1, 1}], 
     InsetBox["822", {417.289503, 27.7189433}, {-1, 1}], 
     InsetBox["823", {132.686585, 269.061789}, {-1, 1}], 
     InsetBox["824", {269.061789, 132.686585}, {-1, 1}], 
     InsetBox["825", {304.437592, 103.865777}, {-1, 1}], 
     InsetBox["826", {49.7721073, 365.080977}, {-1, 1}], 
     InsetBox["827", {114.805011, 277.163828}, {-1, 1}], 
     InsetBox["828", {277.163828, 114.805011}, {-1, 1}], 
     InsetBox["829", {69.1026094, 336.535886}, {-1, 1}], 
     InsetBox["830", {364.954838, 48.8473813}, {-1, 1}], 
     InsetBox["831", {0., 444.141268}, {-1, 1}], 
     InsetBox["832", {444.141268, 0.}, {-1, 1}], 
     InsetBox["833", {336.440317, 67.7358552}, {-1, 1}], 
     InsetBox["834", {84.6309378, 311.085506}, {-1, 1}], 
     InsetBox["835", {311.098876, 83.7639364}, {-1, 1}], 
     InsetBox["836", {26.4775846, 390.395506}, {-1, 1}], 
     InsetBox["837", {390.378307, 26.0526115}, {-1, 1}], 
     InsetBox["838", {96.4318248, 284.079011}, {-1, 1}], 
     InsetBox["839", {284.079011, 96.4318248}, {-1, 1}], 
     InsetBox["840", {417.724405, 0.}, {-1, 1}], 
     InsetBox["841", {0., 417.724405}, {-1, 1}], 
     InsetBox["842", {46.5890455, 340.678483}, {-1, 1}], 
     InsetBox["843", {63.7521934, 315.070735}, {-1, 1}], 
     InsetBox["844", {340.460605, 45.5895397}, {-1, 1}], 
     InsetBox["845", {315.022951, 63.0688162}, {-1, 1}], 
     InsetBox["846", {24.8860537, 366.203158}, {-1, 1}], 
     InsetBox["847", {366.140089, 24.4236907}, {-1, 1}], 
     InsetBox["848", {77.6457021, 289.777724}, {-1, 1}], 
     InsetBox["849", {289.777724, 77.6457021}, {-1, 1}], 
     InsetBox["850", {391.307542, 0.}, {-1, 1}], 
     InsetBox["851", {0., 391.307542}, {-1, 1}], 
     InsetBox["852", {42.873449, 319.055964}, {-1, 1}], 
     InsetBox["853", {318.947025, 42.3736961}, {-1, 1}], 
     InsetBox["854", {58.5270885, 294.235565}, {-1, 1}], 
     InsetBox["855", {294.235565, 58.5270884}, {-1, 1}], 
     InsetBox["856", {23.2945227, 342.01081}, {-1, 1}], 
     InsetBox["857", {341.901871, 22.7947698}, {-1, 1}], 
     InsetBox["858", {0., 367.32534}, {-1, 1}], 
     InsetBox["859", {367.32534, 0.}, {-1, 1}], 
     InsetBox["860", {39.1578526, 297.433445}, {-1, 1}], 
     InsetBox["861", {297.433445, 39.1578526}, {-1, 1}], 
     InsetBox["862", {21.4367245, 320.363766}, {-1, 1}], 
     InsetBox["863", {320.309297, 21.1868481}, {-1, 1}], 
     InsetBox["864", {0., 343.343137}, {-1, 1}], 
     InsetBox["865", {343.343137, 0.}, {-1, 1}], 
     InsetBox["866", {19.6209364, 299.35767}, {-1, 1}], 
     InsetBox["867", {299.35767, 19.6209364}, {-1, 1}], 
     InsetBox["868", {321.671569, 0.}, {-1, 1}], 
     InsetBox["869", {0., 321.671569}, {-1, 1}], 
     InsetBox["870", {300., 0.}, {-1, 1}], 
     InsetBox["871", {0., 300.}, {-1, 1}]}, 
    {RGBColor[0, 0, 1], PointBox[CompressedData["
1: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
      "]]}}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.69375412037878*^9, 3.6937541463142633`*^9}, 
   3.69375417720403*^9, 3.6937542845601707`*^9, 3.693754431642583*^9, 
   3.69375448526265*^9, {3.6937547609974213`*^9, 3.6937547703989587`*^9}, 
   3.693754938982601*^9, 3.6937550513370275`*^9, 3.6937551109284363`*^9, {
   3.6937553237626095`*^9, 3.6937553490410557`*^9}, 3.6937554506568675`*^9, 
   3.693755529819395*^9, 3.693755986289504*^9, 3.6937564241895504`*^9, 
   3.6937570157013826`*^9, 3.6937573464533005`*^9, 3.6937574999590807`*^9, 
   3.6937598869556093`*^9, 3.6937599518023186`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\" Length[nnodes] = \"\>", "\[InvisibleSpace]", "871"}],
  SequenceForm[" Length[nnodes] = ", 871],
  Editable->False]], "Print",
 CellChangeTimes->{{3.69375412038078*^9, 3.6937541463172636`*^9}, 
   3.693754177220031*^9, 3.6937542845771713`*^9, 3.693754431659584*^9, 
   3.693754485278651*^9, {3.693754761012422*^9, 3.6937547704139595`*^9}, 
   3.6937549389986024`*^9, 3.6937550513530283`*^9, 3.693755110943437*^9, {
   3.6937553237766104`*^9, 3.693755349055056*^9}, 3.6937554506718683`*^9, 
   3.6937555298343964`*^9, 3.693755986304505*^9, 3.693756424204551*^9, 
   3.693757015716384*^9, 3.693757346468302*^9, 3.6937574999740815`*^9, 
   3.6937598869706097`*^9, 3.693759951817319*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  nels rows= \"\>", "\[InvisibleSpace]", "1818"}],
  SequenceForm["  nels rows= ", 1818],
  Editable->False]], "Print",
 CellChangeTimes->{{3.69375412038078*^9, 3.6937541463172636`*^9}, 
   3.693754177220031*^9, 3.6937542845771713`*^9, 3.693754431659584*^9, 
   3.693754485278651*^9, {3.693754761012422*^9, 3.6937547704139595`*^9}, 
   3.6937549389986024`*^9, 3.6937550513530283`*^9, 3.693755110943437*^9, {
   3.6937553237766104`*^9, 3.693755349055056*^9}, 3.6937554506718683`*^9, 
   3.6937555298343964`*^9, 3.693755986304505*^9, 3.693756424204551*^9, 
   3.693757015716384*^9, 3.693757346468302*^9, 3.6937574999740815`*^9, 
   3.6937598869706097`*^9, 3.6937599518183193`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3GVUVWu78HEDOxBFxS4MMLYJ9oVit2IXdqAoomIgBnYLioGNLW4sxO5O
EAVBRYm1iLXWnAiKHe8+44zz5XnHOuOwH3hQ93+PscfPD/e41zXvOddcfPpX
GjG51+ic2bJlG5vzv///r3//939vBBERERERERERERERERERERERERERERER
ERERERERERERERERERER8e9YNE7aHSitF0N4hZu7uyryfejkp+Hj1CyfK7N8
9TL53M45inQJDLxv2VknBQu9jg8YFZNh+59y9Lnu7arI5RHPbK2r6iT/vD/3
aLNn3P7ZssX4N+lvkB6NR9+okl2VPZc8+y96Yvx+dVtfrfO1As/kfZ891dzM
NLLKrY/X+Igko+v7DwmpnGuMQRK79VST86qypHHazmoRxvdvOO1I5MeTWglo
PCPRzE4ngbNzujtuNqT7urytB0/x6BAvxy8cKJ5rg05SrwW1tL9nfJ9XrW4U
isquSEunnu/aDUyUUlJ9iLcmMsufL0RERERERERERERERERERERERERERERE
RERERERERERERERERERE/GfZLeLqpOGpOpl+oEWFVzaKfDUrtqH7oF+/6+hR
9a57cVdFCtveCOlRRSdzNrVsX+JbdIbtX/5q5bBqoxUxbb7itGtqkgQEfp30
2SPj9p/a+9qRuwMMcmzCple5cqgy6c6poPxPjd+Xps1fNrvzKlxMq1VJmPIl
TgyXzWc4vzbeb1yTurh2cC+D2FSIK2j+XZFSDr23nHhsfP8zLb573T6slTwt
XwS9bqqT4fXbfOrgY5A1MSXW7B4cL8/rftswdqdO3kT1a5vnsfEe46oGCdX7
ZFfEZnPsgXf9EiXn1pVJLi/oMSIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiYubY7seITZPcFOlX4/j7Sw10Yh5UMCy0ekyWz5VZ1j99
uGSAuSJzvb9+PDRBlSXlY2eEFk3OsP3bRN1f+vB7uJSsHbO2fAGNuLS7oZ30
3Hj/ML2eSa2YIB1V2ZE6vKxjD0W6L1B768T4/o3bL0iyKxgm38+GmhUrGScu
V04E1KuhM7q+4rkTBpv2WtHabGq2OYdOLrXvmRA+1XhH8fudgLwpBkX8zL0r
r3url3X6V2P8ArXpvq7bw66WvDbZIFt6jyrf74VWppoW67O6WIjR9d7Wg6d4
dIiX4xcOFM+1QSep14Ja2t8zPiciIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiImJm2OFSvyvFnBQZf9J3rGkunXjfKvJgZEB0ls/173pp
asd7MxwUuaPvuq/6WlXyOu3XJlXPuH7jNJ8/N1W7Fi5zDspHZyVObsRNOKmJ
y7h+Y4/8Owbs7KfKoJqH7wcsUeTwwn05/3hofH/XC2daTzv7VLL1nGqxUo2V
fi4XQso0Mt5vfF4/MdpkiFZOz87joi+sk1ddSn+2cjfeRfx2epiTSawiFpM/
TupwTy9FXKziW3fUSj93u5ftJhjEc/Teipdua6XDoHEXU1YFG91nTUyJNbsH
x8vzut82jN2pkzdR/drmeUyPERERERERERERERERERERERERERERERERERER
ERERERERERERERERfw4jvymR5X0V6fu29Qrfczrxz+G2e8uS2Cyf69/1xAuN
x/deEVLpUsE5+45r5PEnbSvHfRnXUQwvWvTjAFtV4s85WF0sqIj18dOtfqxN
zLD97U5YVH87JV6Weq+aO81fJ08cLb3rRhjvGW49tjystf0TGVxMEUfbWFka
EFVx1mTjncYTbfwXpl1WRfd4R+E/hiTL21NJjQf6Ge9YHu49a5frJIOY1FlW
fFuYVtKa2GzJ/TnYaL/R2D5nWnz3un1YK3lavgh63VQnw+u3+dTBh04jIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJmjt7Oe81K+Sny
qqnlmssROunVaptdjrBfv7tozJmbN02qEBYhdbd9n98/RSPW5aZ3LuaVcT3G
/l6VSpnVU2Vv1Of9394ZZP1WjdKkV8b1GF8FVdpZZnm81MtWy2vlGZ24rhtd
4ONr493Cidljx/s2fCIevVLG1K8bKxULRY67NsV4j7FQaeeVN3ep4j7pbBuL
rarYPlobWH2b8f1zV+y8dpGrQdIKOWwcl6CVORbzfE3sQ9J9Xd/vBORNMSji
Z+5ded1bvazTvxrjF2i839hw2pHIjye1EtB4RqKZnU4CZ+d0d9xMvxERERER
ERERERERERERERERERERERERERERERERERERERERERHxd1S7yuzO8Rx66dXi
4KMSdoo0DKo7594wNcvn+lUdVeNp8d6uirTcZ+rYwlInvrEbN3j8iM7yuf7V
eienbO7lpMiN4DHRX3Pp5E1LR/eHx36+OR/ZN5oocxNl/BSv3SFP9DJtTMqU
7suUdO9TUsxi2x8Olwt7O5++FBMn3i8XhmxPSH8vMV/NjyXrbTXI/scjS3+v
pkq3np/L5tSl//vSwmTpjY1dVYn3W3nnxjBFNjX+Eb7OKeP6jRve5dtoFxQn
UVOWdnpbIUlMZ1Wzq6boja7f+PBLyYJ3tJJWMPiVU2edfKua81m5ncY7hF+O
3fJtsVyVD0rdAbVbq9LQoufI14HG9++TbVizBY8UCfQZol81Xy/z83Yxnb1c
Y3T94C0BgWPuGiRouHv7wSMTpFM28xtOpcKNrj/Rxn9h2mVVdI93FP5jSLK8
PZXUeKBfsiS6t5+7YahW/pz6uedDU530qxVtc8zd+HWtSV1cO7iXQWwqxBU0
/65IKYfeW0485n2IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiI+DM5oNZjbbF8erlnZjP3hL0iJ0/sGJ88gm7Y33XG3gYL/SYr4nakyQHT
0jrZaFEwNqf25+sTZpQmR7LHuboq8uBE+evHLXUy6nNgryPZYrJsnu6lP+aP
6JMoM9r65P58QS+mGnflwuz0dxeNOf9b+yYOp8PFz2XgoEqJcZLb1/v9Bm3G
9Q+NuSIgx+x6Fw0Su9zL3qapKj0udy4yOU2VY3fWBK+xUyW1tZPp0j8UqWwz
ps0cXWKGfW65ORvXHq2skcqFTc1bDkmSJu0XvPc2M94hHLNtztU6O7TySV0Q
e6WBTorWqhBYyMv4epmdp9BzL1Uq2HUdcfqv906DOIelnvmMr4/J3f1tyyeK
rDSLlBneelnzLGpesTPGe4x7O7SfmHzXIP0nlrY6MTpBnh4p3d23svEeY6HS
zitv7lLFfdLZNhZbVbF9tDaw+jbj8xiz4rkTBpv2WtHabGq2OYdOLrXvmRA+
1fg+/YeEVM41xiCJ3XqqyXlVWdI4bWe1CN7DiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIj4n9W1SqPda99HyMTxyx4FZddKFcegCi9X
Zn53MbNNHeh4fU9MmHxsN8Vt6bw4SRtXoUtSbl2G7T/B4XDNfa6hcsRbu8fu
cYzo/Svlz7ku4/YfVCbXtddVVDnTvsfqKtcN4hZpu3VNSILR9dsGRk8TrSod
jj1ek69YlBR8XzlsX/XBRtf3yTas2YJHigT6DNGvmq+X+Xm7mM5ebrz3uPXY
8rDW9k9kcDFFHG1jZWlAVMVZk3VSfsbQ+15nnkrTfWrzsmqsZLs8poo0Mn4O
TZu/bHbnVbiYVquSMOVLnBgum89wfv3rP2+IiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiPhzejnPIgeXm5HSfXbOl9XbaCWtq8OGCn6/
bwdvm8eM49cKh8sgqz7XtvvESS9L6/2vf2Tc9b4c1a3koJ6hctOzwo93V2JE
jQm3b+iTcT3G8TmaXMzdXJUyU/xdx5ZXxHpRuXKpFxONrl/u/d15TKgqF7pW
O+LeOEpWzR8ZapF3qNH1Mbm7v235RJGVZpEyw1sva55FzSt2xniPcWL22PG+
DZ+IR6+UMfXrxkrFQpHjrk1J//Vqsld3HVogTJoU7mazt0SclDYdkr1PDeP7
dFtfrfO1As/kfZ891dzMNLLKrY/X+Ijf97lFRERERERERERERERERERERERE
RERERERERERERERERERERERExP/ftGP7+ydP08vmQ2aaQ/MVMXnr4WW9VM3y
uf4pDh50pdGk7Yq07bXJo+xtnfTZZl6n8oFYo+svNi0R7uupyI5Ev6mXhuvk
u0VXzYydMVl+Hf+uFyofdRl+TS/PcxXY5nJEkfLjD3nU2a1KeGKUXUW7CAle
fDvv+IMamVd3yf4eBzOum+fZ+VO/1CV6mTbiQ+uIFYrcmVjK3XZ1xj3/seW/
fQ/pHi1LytguTm6QIMWv2jhcvWO8E/hsmb9r6WwJ4r5x3qlHX3QSEx2cOyWP
YnR9TN2RzRsNU8UuzSV/xQOKFNra+YhXpYzrN07z0ObqGmyQva0+FLfySBDr
gJPdNHPDja7f8crq05UqqlRf59Pk6DWDHKi5Ps+w4ASj678cu+XbYrkqH5S6
A2q3VqWhRc+RrwP1RtfbnbCo/nZKvCz1XjV3mr9OnjhaeteNMEiP/DsG7Oyn
yqCah+8HLFHk8MJ9Of94aPw5mdr72pG7AwxybMKmV7lyqDLpzqmg/E957yEi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+jrpbzQgdsUsv
lZVWrk22KOLYr3zl6z70x/6utfxa7ByzT5HXVSIDmmp1YvhUtvCsNOMdxYwy
za+4/7ONirh6XXG3DdCJ07AhLsPHZP7nZpSHvpRcsz5VL7XPHbwYcFuRWyNj
ijoeV8X3qOvRLV8jZEKN8O3+JlpZofh+1q3IuO6iMY8/dDmcy1Mv148sOWS6
TJFcKeN+rF2Zcd+LyQ3ca3xtHi3Fm85b3skqQQ4nORmcrxnvJe4QH7uzZgny
9WF+1xu59GK/on+Hl4WM9xjj8qiN/burErzizb1d4xQ5WTZecszLuHNr/f6J
ydQnBikZsMOh69oEaZU3x4mWt4z3GMfnaHIxd3NVykzxdx1bXhHrReXKpV5M
NLpeZucp9NxLlQp2XUecHqFKgziHpZ75DEbXvwqqtLPM8nipl62W18ozOnFd
N7rAx9fG1xvzTGrFBOmoyo7U4WUdeyjSfYHaWyf/27nF+Dfpb5AejUffqJJd
lT2XPPsvesL7ExERERERERERERERERERERERERERERERERERERERERERERER
EfF3tHjSzHvdpynSbJ3dy/M1dTI/cNCFL0VjsnyuX9Vefa/eWJtkkBCL/as6
OajytlzMgr4myVk+17867vXb3bYNnsmc0ftf3LLUSKm9gSatQzO/i5hetR0P
3Ow5UJUnO/Kefb1Okcb1zEyPJ6R/TtW9s512WJh0WrDozQK7OBnSZurnb6WN
9xKNeTjbzjoV2mpljP+wseOz6+TSxLZvKk9Nfycws61d7/H4e1GK7F3g8KT7
Ob1kO3ez2JkKWqPrFx+ruHDiX9eh6m6nDNVrpfTNL/V9e4Vk2fwbH34pWfCO
VtIKBr9y6qyTb1VzPiu38+c7Z0RERERERERERERERERERERERERERERERERE
RERERERERERERET8z7ttWsmU1pMV6TOvxKL9FjrJ1tp/Wf+Y6Cyf61f10Ida
Hy+tNciwz58iFldUpbDNgTDreDXL58osV80d1sCs9TPp3Xj59QK1NHJpXqei
KcFZ12O0jLCPaNtDlbrn6xRNclKkg0m2HKmLMm6egUXWzE3bEyZDsu/40Gd4
nPSu6FxrWZH09xjT66sNft/31dZKj5DJgZbvkkS9tneA3YTM7wpW6bpC3ROj
SLGSeyJe3NFL91sL169pa7zH6Dbj9rZP0wzytvakhdVTteJ5qWv/Ds4hWfY8
jNk252qdHVr5pC6IvdJAJ0VrVQgs5EWPERERERERERERERERERERERERERER
ERERERERERERERERERERERGzzrsXRthE71Rk5ol63weE6OT1isaFa16OzfK5
flXdFka3DT4UIWW2F75o+VIjM9c3v/50U9Z1EY2ZmM+6YpdGqrza51L5s4ki
0efNnz5yT8zyuf7V0ROHlzk+WSNh8bG1by5LEodi1c2n1Ex/xy9kUSl7z6FP
pNX90/dOtYkVdYKpZZMJ6e83Wv+otKFsgCoBi5u4WTgkSw+XkS6DtiWne5+d
P+5Mf1BJlfhFprrO5w2yclkXrxoXEjLs3FJ9Yk/7jjeI08K5fd9mi5EzXVS3
0y/djK6vXe/x+HtRiuxd4PCk+zm9ZDt3s9iZCsZ7jzF1RzZvNEwVuzSX/BUP
KFJoa+cjXpWMn+cEh8M197mGyhFv7R67xzGi96+UP+c64+s3vMu30S4oTqKm
LO30tkKSmM6qZldN0RtdH1606McBtn+d5zkHq4sFFbE+frrVj7WJMs3nz03V
roXLnIPy0VmJkxtxE05q4ox/H8tfrRxWbbQips1XnHZNTZKAwK+TPnvQxUVE
RERERERERERERERERERERERERERERERERERERERERERERET8mVxx6rFLqd2K
XKtX2vfTU510uL3gbL37dBT/rlGFVk9ddjZCarTaUPpZnEbe7K37ZpjPz9dR
zCgTTL+YfaqpylhPQ5FLMQbZ9KDv8xoVs67H6Fe4+6QzRzVisazIqPdHkmTD
hTIN39qlv7toTGV3797vsz2RQs2C8ulLxEqfntZjQ2alv8eYXvP3jbMasUmV
1EZRm6Vdsnisr5t8ZkOyrOxy1f9qU1VWDbAvtbWUItNedyo643jGnf+HBSef
fZ1kkKfFW/X3/RItG+eczj7+nPEeY5WuK9Q9MYoUK7kn4sUdvXS/tXD9mrbG
e4xxedTG/t1VCV7x5t6ucYqcLBsvOeYZ/768HNWt5KCeoXLTs8KPd1diRI0J
t2/oY/z8y83ZuPZoZY1ULmxq3nJIkjRpv+C9t5nx56G/V6VSZvVU2Rv1ef+3
dwZZv1WjNOmV/vNsE3V/6cPv4VKydsza8gU04tLuhnbSc+PXdcrR57q3qyKX
Rzyzta6qk/zz/tyjzR6T5d9vRERERERERERERERERERERERERERERERERERE
RERERERERERERPzPWdZp9pyPhxW5vqHxwXafdaLJnrTHtlZcls/1TzF8xeWd
ljlVqdg8JG1ae4NYRF2YFbkm3uj6c/sKzY6/Gin9AmOeVbfXSh/zWpOX7v71
+5O337beXXarKrWS7OudWqxKPuvFa5eMMkiCf3zfnBah4l64c9m4vTHSKO2p
UnVHxvUY2zgHD2vvkiDjessXm2Z66d2tx7KdtZUM23/biOwHQ0r8dX8nHn96
z8sgNuVaBDfokWB0fUrhPypXG2eQs7eiXYuc00rNmTv29a8UnGX35dkyf9fS
2RLEfeO8U4++6CQmOjh3Sp6MOx9ERERERERERERERERERERERERERERERERE
RERERERERERERERExMz2VrUvecKOKhIfmzRzX0G9nAp1Mss2mO7i37WN2buJ
B78qcqd8n3lv6xiky+NJB8t0N95RzChbnvAbrmify/Nsg7cf89GK28paT9eH
/jo9xgLZ3wTkmaSK45pphoEvFKlineYx8ZBOijTQmpUvHirTcznZzdwTI4WT
Oq/akoHdRWPWGrFi8uWtCeK50LniXQe9RPRK8WvSPON6gwtTn/a73USVWrO2
1Eoqrsgyx+Q9zw8kGl1fZMDpNzbOBlnsbrHKNkQrtS1MU32Ds67HuEN87M6a
JcjXh/ldb+TSi/2K/h1eFqLHiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIj/PHf7RRTYsECRqYt8JkcN0UnA7vCPw3xisnyuf4rb7Mem
7mgQIX4bnN539NOIs8uzj/aHjfcYi1at2Kf6TJ28fh4z+HaKQUr4uZ60q69m
+XX8u+ZbMX1pmZKvxKbU4n775sTLApsBLk8H6aSd+UBvq63hf53Lqxr9n8fJ
0M3B7p+SMq5XucukQP63tVUpYVnje6Mkg+zpPeqNTwPjfcV0W3awttdTvZQu
0flti7++Vx109x8U2DDb+PMwIvvBkBKqVJx4/Ok9L4PYlGsR3KBHgtH1O3/c
mf6gkirxi0x1nc8bZOWyLl41Lhhfn16VsYO3DesZLbPNrcc+bpggq3d9Xdv+
rvGuZupAx+t7YsLkY7spbkvnxUnauApdknIbX9/CZOmNjV3/mt9v5Z0bwxTZ
1PhH+Don4/f3xAuNx/deEVLpUsE5+45r5PEnbSvHfUlyaWrHezMcFLmj77qv
+lpV8jrt1yZVTza6j0fVu+7FXRUpbHsjpEcVnczZ1LJ9iW/RWf49QERERERE
RERERERERERERERERERERERERERERERERERERERERMSMN+Rj7gm11iviZDqy
y8BdOql4WnuyZ+vYLJ/rVzWg+YqNhXURorQfFLXpi0bEe9rY4NUZ1wk0Zmmr
ggW9Gujk9DqnJTnuG2TJWZ23TZlfp8e40exy8sHjUeKwJduoT47xMqWEftq9
TjqxGBS0a9vQZ7JHdyDUpKlGxka97eJxP/PPM6LGVGVwFVX0oxbUbnTVIA0b
yYll9zOuZzh/9toGpS/rRduk2v5eh2Ok0bzlZh3LuBtdvzD1ab/bTVSpNWtL
raTiiixzTN7z/IDxPuTKLlf9rzZVZdUA+1JbSyky7XWnojOOZ1xPcnID9xpf
m0dL8abzlneySpDDSU4G52vG+4rbPGYcv1Y4XAZZ9bm23SdOella73/9w/h9
PHZnTfAaO1VSWzuZLv1Dkco2Y9rM0Rmff+bmTZMqhEVI3W3f5/dP0Yh1uemd
i3ml/zmpf/pwyQBzReZ6f/14aIIqS8rHzggtarzf+Opl8rmdcxTpEhh437Kz
TgoWeh0fMIpuLSIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLi
r+CwQXPvShO9mIZ9KK0MVcTj66yEclN/nX4X/u8m1C5z+9IcRXqY3C/n21kn
kdkrFIkeTSfq71qoUKHaLRcpImd65kkeq5PYzl0Weh39+c6zxNiK4173TJRR
Prkcz5/TS9URZSaOnaVk+Vz/rk63nvZ2bvFMDDPrd7plpZFR0U0GHA7J/C5f
rTATuxWiSrEI7YyAmoq4W7Zt7R6dcV07Y77eXs/G75pBLhS38+zYQpW8n2wS
W3/I/Pdz64/WnYc5a2T70fYl3ZYmSbEKPVIOWRsy/XPDgmLbV/XRiuepyLr7
6ujEq/toL5M1Bgl4sc/DdKUqH6vlDinUUZXzOUIWXLulz7DPfThhhli8VmRl
cX2XFpf1MiOxY4fltbSZfr2fNxVsd+m+QaY1PmPv65wg+aaFDjnZKjzTPzd/
3zirEZtUSW0UtVnaJYvH+rrJZzb8L73BDX7f99XWSo+QyYGW75JEvbZ3gN2E
zH8ejLkiIMfsehcNErvcy96mqSo9LncuMjmNv1sQERERERERERERERERERER
ERERERERERERERERERERERERETH9lhxzIiy8u14+ahZ/Pj5BkR7n2ywNnE3X
6J9qctnTB8ovUuRezmH6GWN14jm2wslBAT9fbzCrbKfxaddxsSLBcyf3jp6g
kykFX9wLPcv5/I/rl3VyaOSSKPVLTCwSc18vtzzHVdy8MOs6kM6FdZ9GDnom
Nt/vV53SWCO53gcbvt3P/H5jRpn/7sKwO/aqnGl9feSZZoo0HSnlGuQ3Pv/6
wQWXtTlmkPG6ajEJ9VUpMnrgspIpmf8+b3xsezepppHJNbdOaeWYJNdmxDe7
WTT9vb76NYt3zXdIKyW8g6fHNdFJyd3TipzckHHdv5ZF+9bYulyV+k0mvFzz
17leLbotwe1M+ruOp1r6XG77UpEnJUtarQ/Uy7VcH9/eL5L+fuOEUnua7X9g
EIvBEfvXTUmQ5DczzTv2zPweY3q1/lFpQ9kAVQIWN3GzcEiWHi4jXQZtM95v
PJxtZ50KbbUyxn/Y2PHZdXJpYts3ladmXb8xX82PJettNcj+xyNLf6+mSree
n8vm1PF3DiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi4v9o
6OXdr91FvdTXjb65+pAizYcXc5qxk17Tr+Yrxz2X6hxR5EgvuwIvvuukR+im
8pUax2X5XJll3pCFnS/5KlL2k1O+tAs6ae398NaZVbFZPtf/1bKV1FKNrBUJ
rTe0WNgMVRyzXz9VqLTxztvPZtWBg+1qvImUTn0n7G7aQyuHd08d3OVQ+nuP
h0d6zmvZVCdjsre4f+eRQS59ufRoWrnMf/8EdVv07kpnVaysVruHDVAk3qJG
paX9jc+/0ze3c64rUVLYI2R63lHxci7S4V2DrroMm6e+nZ0uKn+itFh3Z8lm
b7088CveefXwzO951huV/U3ydlUe/7g+YsQ6VWq65QvrPN8gKR7+t6bZqPJk
bY9H002TpW/P+ONW0zLu+WzYzuv07KcGKVG30MJH6xPERznT8/2zjOsx7jIp
kP9tbVVKWNb43ijJIHt6j3rj0yDR6Po2zsHD2rskyLje8sWmmV56d+uxbGft
rOupTs/he27EYr3MHW8y/P1yRXqsdmh5fBW/y4iIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiH/XR/6etW1yGqTI2Klq8ceKPA8qtyMtiL7T
f0oz/QbLgScVcfpydEVqKb3kLzwrdfPc37eXmF6nFf9ms/uwItXHzY75+lEn
3XOZR0XV+PXPZ+qZOvXGT1KkwsAD40bsUCVpj9nz93Uzv7s46YBtlwI7X8i9
axNtctzTSpuNo4f6p6S/l5jZRoWZ7G3cWye565a7PyPKILaXagTWqWb8vSSr
+5UZ30SVp9MHmS82V6Rmz47jmu813tnLKFt+iX9f7EyUrKuz7srd4fFyeUeI
06vOGddjrHckMmV82USZcHf1/oXb9DJ8oUVL17EZ1wP0i411HXhJFZfOx062
G5wsaRrnKiG7k2VUH8uw7uYGUVOPjb3yXBHL4DlVAy9k/u9CeIUZ/T9FGGTO
mpsD3Q4kyPClZ+u1rfosw/aPqDFVGVxFFf2oBbUbXTVIw0ZyYtn9BKPra41Y
Mfny1gTxXOhc8a6DXiJ6pfg1aZ51PcbjD10O5/LUy/UjSw6ZLlMkV8q4H2tX
8nuNiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+vzb3G
rYwuHykuke1umhfXyrj6rlFVl/x8HcVfxUOD/a7Uex4m444vnhrrHicpJfJs
LJo34zqKGWWtPx39wkaHyq1aDdp9uRcj1zaWX5fD++eb8/Tw0YOdqqriPOTW
gfd3DDKtrlicem28c2jMceF92j2MUMW+cMmT12tGSdk3ASmJo4ake59TLX0u
t32pyJOSJa3WB+rlWq6Pb+8X0Wb5Of2rIYtK2XsOfSKt7p++d6pNrKgTTC2b
TDB+f31tUu7kGBYmi8J+mBezi5Pc68t1rVQm656Ha5+CnEYfCpcPH2+96B4T
J81q1qlyNYH3EiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiK+EU/zb/2alIqUiCtNNwQU1UrizimFptFR/Nt+smjUJdg0XDrdHtGy0sY4
ye2fcuXUj9/3PIel3ttg3jxUHCeZRq8IipHDF5/cXrw56/p7V965mWytoUrf
WeU3mYQZpM+rvdGmP9LfXTSmydQrdZo8VyXW7XbgmxpRciZfidVH7NLfY0yv
DyfMEIvXiqwsru/S4rJeZiR27LC8Vub3G5XdvXu/z/ZECjULyqcvESt9elqP
DZll/P4OLLJmbtqeMBmSfceHPsPjpHdF51rLimTd8zD/W/smDqfDxc9l4KBK
iX99H32932/Q/r7fR0RERERERERERERERERERERERERERERERERERERERERE
RERERET8dfW+ZB/Tfe5zqXQkR9jYmVq5Nbj8vlpX6af9pxySS1dp043HEpij
c95Cc2Lkj+QnqTX8jff01G0L7h71jJCevU4V/n5HI7r+9/Xq9l//ftU8n+L4
NL8qh1p4+cwfZZC1m4NqjXkeL5rXzxY9vKxKwPklYycNiZK9tlMnWsU6Ztjn
pnj435pmo8qTtT0eTTdNlr49449bTUvOsP3bmQ/0ttoaLs4ur2r0fx4nQzcH
u39KMn6/Evzj++a0CBX3wp3Lxu2NkUZpT5WqO7KurxieGGVX0S5Cghffzjv+
oEbm1V2yv8fBX/95Q0RERERERERERERERERERERERERERERERERERERERERE
RET8J+uWq2Pal816aTNrlGN+H0WGF768vd16Ncvnwn+WFduvXFBohyJrRrxx
drurkzfWH17Ln7Hy4qq89FunSELwhLvXN+rkxnK3bsOtYrN8Xsxc+99PPt4v
T4QM+1it5fZVGjnmrvlc83jmd8+u1vj459knetHHL5/eMkiRVtc/589xQJVl
D1uldTVNlO/d8/xZ2kcvf2Z7mph/pJLl5/Szu6/uvRb2faJFFz1pR07bBPEv
lv1Pn3vp7+kN7re/gY+VVsaN7zA6IiVJJo5MPBc73mB0vf+eujPaWqtyv7RN
nh4vDNKmx60hk/+6f8bWd/nw4178IFV6N+hU7/lGRT5V6Z7S4sPP19mzL3Zz
pn0Vg0Q4a14+/ut7oau3pUvA65tG+43G9vlsuWJ956qqvNxXoLfnHYPs8/Rd
tORVgtH19UZlf5O8XZXHP66PGLFOlZpu+cI6zzdIy6J9a2xdrkr9JhNerrFX
5WrRbQluZ/Tpvq58K6YvLVPyldiUWtxv35x4WWAzwOXpIOPPye23rXeX3apK
rST7eqcWq5LPevHaJaOMPw+jJw4vc3yyRsLiY2vfXJYkDsWqm0+paXy9tuOB
mz0HqvJkR96zr//6/Wlcz8z0eILx5+FC5aMuw6/p5XmuAttcjihSfvwhjzq7
jf8d5Vql0e617yNk4vhlj4Kya6WKY1CFlyuN7//IvtFEmZso46d47Q756/00
bUzKlO7LjL9/Ir8pkeV9Fen7tvUK33M68c/htnvLkljpcKnflWJOiow/6TvW
NJdOvG8VeTAyINroPt0irk4anqqT6QdaVHhlo8hXs2Ibug/i70NERERERERE
RERERERERERERERERERERERERERERERERERERETE39HgAu22G7xeSKf6q993
uaWVdmYhMiP55+vy/Sp+LXs8T8yhx1Lj7KigT5NiZHFI10UOR9PfY0yvObuc
i1qwMVJmXu/RRmOjlZVKrv0tfH+d+yimeR33WquSsCJ1f9BLg8zuta22ebFE
qVan+czFvqr4DZ+TZ/6BKDn3wWaH3YPhmT7PqD6WYd3NDaKmHht75bkilsFz
qgZeyLgu38RdRSzmOT6TcRtrBUxtqpGLazp+HnDf+P0aPVOWZysRKs2Oq2US
9sTIaN/dTdx2ZP5zZUzfo65Ht3yNkAk1wrf7m2hlheL7Wbfi13neEBERERER
ERERERERERERERERERERERERERERERERERERERF/J32LvXjZepNePENzFDDb
oEippMgpJ7wzrpuE+O+4psKm/KE7FKlZMluJIQ90YjPDb+P9wFij691tPy1Y
uPKv9S8vLx63UCeWx7c1z/shJsuvA7PGwF3apld0z8Tv0YJOO+ZqRH9Xu2v3
KePdszv2xY5eKGoQl4jBS15GKmL2LvhMrb/RkVt9ZXhIlfcJYlCdJWaJXvpe
bBC7caCS5efxn7amWQ2vz6dfy8c28166pcbLPds+wRG709/By2t2/eaEYVqx
WlI86FkRnWwcO2FJtzmGTJ9/2Z4WVfTlVWky/I/r448ZZOWEmJWROxOMrr9c
sobJGUdVItbVfdVunyKPYqISr5XNuu7fApvGXsGWBrFveCPfxvUaKb9yZp5E
81t//d7X2rjYWpW+T2wdWr80iP/eD1u0Zonp3v/KOzeTrTX+2mdW+U0mYQbp
82pvtOkP4+fjFxvrOvCSKi6dj51sNzhZ0jTOVUJ2J6f7cwNe7PMwXanKx2q5
Qwp1VOV8jpAF127pZaPZ5eSDx6PEYUu2UZ8c42VKCf20e52Mn3+B7G8C8kxS
xXHNNMPAF4pUsU7zmHjI+PqAfgEFOhzXSKEFOdtF/JkkBbfFuMxqZfw5tIyw
j2jbQ5W65+sUTXJSpINJthypi4y/fw59Kblmfapeap87eDHgtiK3RsYUdTxu
/P1zOc8iB5ebkdJ9ds6X1dtoJa2rw4YKfsb37176Y/6IPokyo61P7s8X9GKq
cVcuzDb+XvJ23mtWyk+RV00t11yO0EmvVtvscoQZ//01ZrsfIzZNclOkX43j
7y810Il5UMGw0OrGf5eLxkm7A6X1YgivcHN3V0W+D538NHwcf5ciIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv4KPr+yt/45T0WCrsxJazhC
J9kDD1c5sose4O+i1edKNQudMsi0Hn3KbGukSq69ZxJPpNKJ+rsuHxpQIMeP
Z9Ij8PaDZcs0Mup1+1szTxjviWWVlmYv/2zdQZUtVYe09OuiSLe8OVzq2fx8
c6bX72ttOw4+FSabJ77Z/Xx8nDxWa/Z7XCjr+oGZ7TlNV6vKzbTi12x7gRtf
kuTp9dhvtydnftfRv5l51I0Pisy13W49u6xBCnoebV24Qnymf26tQT7vW880
SMUeKyOWZIuXUzdb7greF5Ll9yGzDAuKbV/VRyuepyLr7qujE6/uo71M1mT+
/UVERERERERERERERERERERERERERERERERERERERERERERERMT/tmJ7Z1/t
ckVWVYx27+Khk8KVduezTKDH+E81f+Dm+UWjDDLGZV+nZl1U2Z/noodltuQs
n+tnsV0V2yaTrCMkbFZs+3vbNdJNczb5hP+v3znMKC+v+xbyo50qub47N33V
XpGk6KVFH1hl3fkcfVD5zZudYZJ8Y9HsoY5x4pJQ3LeG2e/bb7Qcd/r5hS5a
eVuu2fTTuXSSNzoq6vj0zO/7OVu7H1z1TZHA/arSs75BGqdl17/ql/5+Y9i9
xhUvzTTIzGO+U3fniJeikx/kKREQkuXnmlnWr1m8a75DWinhHTw9rolOSu6e
VuTkBnqMiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI+J91
p4nnAs9ARYaui5jQq7xevDsei/y0PC7L58L0aXu1abXljxWZ3mtUUrZVerFp
eWhimwOaLJ8rs0zTD2hU8PYLWTqg8JoeYVp5t/aM08iPv04fclK5a5vLjVKl
7ZW9VTWnFCkdUK3w5/a/Ti9x6JTozw8nPpZNgRfrm/eMkZpqcJ3nZ9I//y6b
jgH9VyVKifYrb9x5oZeg+01eFFitZPn1/av3vky9YR2gyAaPhHoTr6lSqGf2
VcPbZVyvVZt8ShM2yiB39CbfvP21MqVY75JDjj7K8uvOLOvb2emi8idKi3V3
lmz21ssDv+KdVw//+e47IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIi/h4eLWNiW+a8IlXWddwhtnopbRWpCb5Hd/E/pZen2ZWQx4qEuFeZ
ZbpaL5+r7altcvj37SWm12eVl3ieiIsSTezTk+UmxUuevdmT6zn8On1CY659
3qitu60q2xvv+dG0kCJL1um82nklZvrnOl3c6FHT67FU21+6S8yIGDljmFyl
zsmf7zxNlt2r2290oqyteGr6hZt6GVp+zNqUeT9fly/+VMystzl14uR5YZDF
MYMMdToRZ1tAzbD9q64L7TZ9skH2trDqnee5VpYNOLtrVOGQLL/uzLLekciU
8WUTZcLd1fsXbtPL8IUWLV3H/nz3HRERERERERERERERERERERERERERERER
EREREREREREREREREf93l5bruOfIXkXuv1+odY/VyRrn3AX7qLFZPhdmjX88
te3ZziJSajabtd22qFaiJw9I27IkKcvn+lkc3TRpwcUGqrxtq31R8odBimyx
jZ4/MfP7hL+KT9/P2NR6rkYmzrNql90rSQ7n7xzdp64hy+bJ32zh077dnohF
gbXz7jePlZYr/rh7yfnn6zoac8X5/N2WV1XlpuUenwl3DWJ57GFzbXSC0fXn
I0Jy/bFSlY9+/u8XdVTFqtsT54+39Zk+Z53KJ+eV6WcQ83736zgUi5Gpo3Jo
NvWake59nK3dD676pkjgflXpWd8gjdOy61/1i8+wObt8+HEvfpAqvRt0qvd8
oyKfqnRPafEh/e+3Wn86+oWNDpVbtRq0+3IvRq5tLL8uh3f6n6vGx7Z3k2oa
mVxz65RWjklybUZ8s5tFs+77YszEfNYVuzRS5dU+l8qfTRSJPm/+9JG78ffe
uNdvd9s2eCZzRu9/cctSI6X2Bpq0Ds2635F6J6ds7uWkyI3gMdFfc+nkTUtH
94fHorP8XBERERERERERERERERERERERERERERERERERERERERERERER8dcz
cL8ypamfIq45Hx5pEamTSlu/d+kUTr/xd3FSl2xOMzUR0qBX0O0XHzVSNXDW
rIA19Bj/ruffbBsy/Q9V3LT1QpNUg1wvltt8Quufr9+4fENSrq0HNGJ7qE/l
YQeTRHPDMKRJy5+vC5deywfU97pa6InYT77YpU65WDELDFn1eEbm9xg/jbs0
bUN1Vbpsq+9i+dggZQ4PbvjlnfGOYkZpOiu8W0tfVaa86Gzh7KlKUNr3Ud8G
Zf59XJlg+9HTySC1SpfZVTBbjAzZGz08Odwt0z/Xv5l51I0Pisy13W49u6xB
CnoebV24QrxcLlnD5IyjKhHr6r5qt0+RRzFRidfKZtx9H5Z6b4N581BxnGQa
vSIoRg5ffHJ78ebMf65af7TuPMxZI9uPti/ptjRJilXokXLIOvPvb4LpF7NP
NVUZ62kocinGIJse9H1eo6Lx99iqucMamLV+Jr0bL79eoJZGLs3rVDQlOOt+
R0yOZI9zdVXkwYny149b6mTU58BeR/56TrNqHkRERERERERERERERERERERE
RERERERERERERERERERERERExF/Fkvavspv5KHLJ8ezkBQd0kn/Smv2G3vQn
fzVN55lNuncnUjQ39wwv3VYr8yYvDzzq9/t2JkvXSi4ytFuiDP+Uu9qVM3rx
vrzoW5OZSpbP9X+1+cukayU9Xohi0vP6+CtaMX9XZvUH/a9zv3L1mLApeusL
uTGoTIlyd7WyulT1hlVS0j9/UnYzJ30RVfKF1bm/0N0gxatEn25VIvO7jpdt
nSoW3q/Iew9rx/CLqhSvdOfDAftko+vXxV69dWWnXjqMso13uxsjDQ/G1TWL
c8+wee59mXrDOkCRDR4J9SZeU6VQz+yrhrczPk9G6b+n7oy21qrcL22Tp8cL
g7TpcWvIZNNEUbctuHvUM0J69jpV+Psdjej639er2zPu+dzpm9s515UoKewR
Mj3vqHg5F+nwrkHXjOs9Fq1asU/1mTp5/Txm8O0Ug5Twcz1pV181uv7cvkKz
469GSr/AmGfV7bXSx7zW5KW7s+77eLFpiXBfT0V2JPpNvTRcJ98tumpm7KSv
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI+HdNafb2e+Ih
RbSeodfbvNdJUKFHDe9Xisvyuf4p/lnC+8i2Cy8k2Cfac0ioVo6VuXzK7/2v
09/LbEekWI1b6JAoqaue3Dp4Xi/fS+kXvJv16/QVjam5kzstpe4L+bCtbk/N
Ya0U2Lx1TO3XmX/fz7+sYR7q/VLKhi5LSygcL6arp5bfXjrjencZpfUmpxeW
2VRRbRrfqNDcIG37uDV2nBJvdP1MH4dClqF62agsrD3glCJf/6xyd9Z+4529
jPLhpYpt+y3Xi8ep6wNO6P+ri7egrU+BhRm2f/ypmFlvc+rEyfPCIItjBhnq
dCLOtkDGXdeyPS2q6Mur0mT4H9fH/7X/ygkxKyN3Joju7Be/EesjZeG9ISNy
2GilWGG78ae3ZP7z2fJL/PtiZ6JkXZ11V+4Oj5fLO0KcXnXOuOeztFXBgl4N
dHJ6ndOSHPcNsuSsztumjPHzbHnCb7iifS7Psw3efsxHK24raz1dH5p17+c0
v+L+zzYq4up1xd024K/nYtgQl+Fj6CQjIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIv6Oer+bnM3uqCJhL/L3ds2vF5v7NTq070snEP+zZp8f
GfTARJV7fT7MOd3VIC/9U+9W2hkvw+ZuaFkn9rkMyXFj+e4NWtm27sH51Md0
FH93e93yOtR+YKiE7m/U0+FmjIws2FQNXp/5PcMvSanlLH1UcS78qE/VyX89
jwPDCz+zMoh9Wwt9yXlaiUtULOtU1kn+nsH1ti0xZPk5/ey6dp82anQZVfKs
WN2l9B6DWDY/59LUIyHd+zToPdEm/3SDrB6yvsWmtGgZNmRzi2fr3Yyuv2zr
VLHwfkXee1g7hl9UpXilOx8O2Cdn+Xn8uw7ut7+Bj5VWxo3vMDoiJUkmjkw8
FzveIENy6SptuvFYAnN0zltoToz8kfwktYZ/xn1fgrotenelsypWVqvdwwYo
Em9Ro9LS/hn3Ht5mPzZ1R4MI8dvg9L6jn0acXZ59tD9sfP/wFZd3WuZUpWLz
kLRp7Q1iEXVhVuQa4x3RzHbwoCuNJm1XpG2vTR5lb+ukzzbzOpUP0G9ERERE
RERERERERERERERERERERERERERERERERERERETErPOH5ul55/l6KWuR29xq
qSIbXo78kHulmuVz4c/lzGOTdxdar8ihGzFp2p06yXszb6kqrf55/Zydmqml
S25SpERk1brVj+qk225XNWTcr38Og8ftuHB2RaLMrz6i8avneple3nbm/FVK
ls/1n/bSqXX5vjeNkOCpg4K0+zQy+/04v3KH/nk9w/w3sw9r2ViVfW0uSNki
itxPutX4xubELJ/r/zx/w4Cg5E0GsVx7LW/1qqrcWnvIWp+Ycb9rq/oMrWTX
UiOV7+4MDp2YJLuLzRsRVpre4P+4S9Pa9rKPKo80H8ZPnqJKbNmweff/SP/5
rCtXvOyhu1pZePGzQ+8uOsm+vMmGgzvTv0+DTaerj82pysoeLYe4dDDIxlCr
MWO9sq5Hl+nmX/T6zGODBB7yvnF5aYJc2TTr+vKD4Zn+uecjQnL98dffjx/9
/N8v6qiKVbcnzh9v69O9j0WF/i1qd9bKd8sO68NMdLIum8XumtN/3+/X+sEF
l7U5ZpDxumoxCfVVKTJ64LKSKfwdjoiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiPir6RmQ4N6glV7aJb+7M2GkIgUaXTp3dzo9mX+q3Yomme5a
qMj3fdvXbBmtkxzLKrnMOxST5XP9LC5wG1C5+nJF2i4pfmXObJ1ozMNTn7z+
dc4n9wSfz3vdEsUqMnrMomC9tC//acvVxf+8fmNGWU5fqW+96GcyxmRl/amz
NHLQKbpR+9NZ14GsWTuy4rBmqgxq1PNVShlF1p1UF686/ev0GNPrm7Wvyg1Z
bZDcXY9XrF1BlZ5FF34aos2436/e/vW72XbSyNyKRdttnJokHy/NH/S8/M/X
l4seMLTPSW9V1u1xdDGMVmVk9idWz82ybs7D1lNCRl7WSrzntXJL2umkRc7N
AxttS/88LjfmPTb9rkiJ1xGrWjU0yKiH2YomDv59e4xd3h54MivYIM4zD5ko
Hgny0t4mOX5B5vcYTWeFd2vpq8qUF50tnD1VCUr7PurboMx/fs5pulpVbqYV
v2bbC9z4kiRPr8d+uz355/t+ZZSvt9ez8btmkAvF7Tw7tlAl7yebxNYf+Hsb
ERERERERERERERERERERERERERERERERERERERERERERERF/HR26H6nfZqUi
EVuWdprlqZODd09/2vLu1+kx4u/h4g3mLVyWRcj8/n3DH93XyOUjB1vl254k
tTqmnRwmOrF4YL//6GOD5Bkzu22dCvS+fndHN9lRc/ObcGn6cV8+axONbPCY
2mz/y8zvgt68s1h1S46SvlZvS0yZEi+f79tpa/bRSanTYwIia6qyuvryae1j
DHLpaGqfd+V/3y5oRlmqqnZvwXt62dez1y3XnTFy8o+zNxaHzU73Pq7dp40a
XUaVPCtWdym9xyCWzc+5NPVIyLA5V5zP3215VVVuWu7xmXD3r/2PPWyujc64
/TPKfXXvtbDvEy266Ek7ctomiH+x7H/63NOle59Dg/2u1HseJuOOL54a6x4n
KSXybCyaN/375L+7MOyOvSpnWl8feaaZIk1HSrkG+bOu32tMt4XRbYMPRUiZ
7YUvWr7UyMz1za8/3WR8zl59r95Ym2SQEIv9qzo5qPK2XMyCvibJWTb/qBpP
i/d2VaTlPlPHFpY68Y3duMHjR3SWnysiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiYlaarDzoW+yoIldN2q69m08vIWVCu6zrHZflcyH+l50i
DrQ/mF2V+UfCLjxrZRA11+XKMj/e6Pqcm6/O7HLtueTcUjtkx0qtpNVP02x6
8PN1vfA/45KZF05aSKj8Ucs03ORMjMScnDOg0GbjvTjz/v37DPFV5WCJb71j
PVWxWbO5b50hhnR/7rUt5a9c/lMrU8rWGLe6uU4+1Lndu8PG9O/zq/vl5Cr3
ZqVU6Xx6rK3ia5CXZQzV3o9Nf5+wcg398IGzDFJh/qcR3VKipUFQ2q6BM90y
ff6ZPg6FLEP1slFZWHvAKUW+/lnl7qz9v07HNa/Z9ZsThmnFaknxoGdFdLJx
7IQl3eYY5MCzvuu+H3wsIwpFP18xKUb+qPAx3O1o+juK6VVW9yszvokqT6cP
Ml9srkjNnh3HNd+bcT3SnJ6aQim6CDn59vWZ3F814mN/z/zIauPv/zZm7yYe
/KrInfJ95r2tY5AujycdLNPd+O9LZlvLr8XOMfsUeV0lMqCpVieGT2ULz0qL
zfLnCBERERERERERERERERERERERERERERERERERERERERERERHxd7bzmuEl
2sbpxdfkamiey4p8adXgftMjv05v6p9m/wB9roKBigxrsiHQu6xetvrP6+q8
OPP7maF5jvl/81Hl04LyToNcVamW5jqoXv2fry+X1yl+xow9isxOi9+pj9JJ
nudD27rF/vo9q5OdsvUPiXwh55JcHXY818qA4LfdV3xJf2fSbPT7t3saqrK4
UssDc3MossDNNG7A9Izrof1sFnQq8mz8ghcSFTR9qN9VrTybutnhuCHz+5zt
y9p7buuXJD8mPTEL6GaQnkfOrXd4rKR7n5lTLgZsn6lKaNlt4140TBa1YamS
I1ckZ/m5/qu3TM9YP3udJPlXJWc7utUgXxNXeZX4ocjGs019xlROEnVKV3vf
ugaxXuBxcerl9J9D6rvaPSs/M0iXLW/nOO1MkNJFJ83emetZll/3v5qU3cxJ
X0SVfGF17i90N0jxKtGnW5VIf3/SmLtsOgb0X5UoJf4fO3cZVVXX9v3fxO5G
RWxFxRbMAwu7O7AbFbvFwsBODBCxuwsbOxFbkIa9ib3XWlgYWM/5H/e4Xjzn
c/O/L+4Lzg36ffUZw4FzHfNYc84195tfqxW37gUa5dzD+oE5ViW9n2nFQ0MX
zmvSwCAj0jd+eO+xIle/XX08pST3E0RERERERERERERERERERERERERERERE
RERERERERERERERETLrtK5XqHD9TkRW+I/LXLajJs2vj6gSEpP1coysP0js+
vqrKmRLKmwYtjVJ1aNVH1eJSPp/wd7Vri/6XcyzSxG5Vnhu3rDTxbvK83Pfp
RpPV47HQpvHys6rs79E7nU0ZoxTKuyC7+ca0/357j8l2PMPDEDEfeeX03ONR
MnZK54c5ZhlkxA+rxm0sNPl2pcyPzMcUKXG0UctdW5Mvzy2t+3Xn5Yp+ZYOk
9PcCOZfF6WVAq7rGz1kMJq/r79pnnFdqrRYre9bqR6Xfo8gz6yxeWTMlft5e
Xdd3TLHPqjQJiH+416hJgltkj/ABKZ+76B49KOKzc7Q0fjXZw6W5UU5/KO2z
ulbS8/2s1jpY+46OlTFVCjb71FuR/enLvXR6nXw5gaN7v59ZL1iRLWNm3fp1
IVrGj7BdUG186stjtNo8JrBcOk20era3SjVSpGWPabYDJ0Yl2/iZlj2o0Wt4
jKyxPDv18m2jDLAYsebdvN83jzH4ZaY9tt0NYlaj5MPpf71/m6uVzlhXSPv3
FkRERERERERERERERERERERERERERERERERERERERERERERE/P18s65G5rvL
VSkaEWnvNd8ghrPKjodx4SavC/H/M/e8z2HpNvnLnJ8Nx8Q/1cnO1QVWFHCP
TfTvrRa41hhSwCAO86/Pf+qtyOYBfdONzEsO2J/qtM05XCesfC37Ph88O7mz
Ts58PDS2163E18/d968W7Z4eLMU6Ojpt6BQlBbKeP5WjadJzI83Gb5hatKom
93IPPFonQhGn8REDHErHmLwf/7QvMp5/ceKmUQpVHOl7c2+4eDao5ZTj56wk
j/Pt9MrZDYtp0u78SBt1myJBxZUKn0amvrzTr6OuTtlYUZP2HrUmlHuqSPFD
/et8+2i6OgvPG90z8EyoZGq/MmHjuyjp1nvN+q47ky8H9WvRuu398ryStneH
NCntFilmh9/5nP2V+P5KLqu+zGS3XDQp4K+ffqyKKrPLtWw2Oyzl95frvVrf
93r7y5BNeWRUpE62fXjTzGVT4vM9+Lnql6trFBmU8NV/saUmuevtf2kVZbrv
0fQ9tRftclJl2pH6+/OYG8StaM6IjPowk+8bRERERERERERERERERERERERE
RERERERERERERERERERERETE1O6ehq5N/OyCxLHO8dYXP+vll9OmwFc5ky/X
C/8ZLb7cX+uR+anYZzzuvtYiXBobdJ7v7/2+7zFh1ZQMzrODpf+14U0OdY6S
ateGDz35v8hXNJUuHhOqOkzSJOxRZe+uNePk3slzk9ssizN5Xf+ujuuq3y1x
VJPH6QvMXrswWMo0HXmlfeigJI/jdqHBphFlYkWb2KH5thqKWC2Ye2XyNdXk
8/u7mTs7bg5zD5Rb/YoXLnlfL6uKVaxT9l3y5ROePtdg0olxT6X/oGa5F3UJ
l4U7yged80476zmplu/b367S2wBp29NxZ4POejm0c3L/9gdTPu8RERERERER
ERERERERERERERERERERERERERERERERERERERFxeA3FzMVbla1Xi26bWs0o
U6MWLO1zMtLkdeF/b/9pD+rfvq3KxSnLvVYMNIpLtRBvr9q6FH/u+aMZAw83
1uTUwCxXPMupUmO5a62Sj2NM3o+/G1DsZWOLvUHSu/WBZwUKRsm25tWCj5dM
+zlmNfdb7XMPeyIJmawXT84ZLo4xXyp4P07780ppVzj3cnGYGysHMqyon3mY
Ih087thkCEn5fL/OO54vKZ9Pke+B3wZ98ldlzIuxH3Zf0kzej5Sy/e4S2Wc7
KKJlb5F19Aq9XHmz7EzfU77JNv6dPN5Wr0NjJfvKuHTH3f/qa8zKdYV/pb6c
RkREREREREREREREREREREREREREREREREREREREREREREREREydNry96126
+6rMmTGh/01Ho4zq0L3BqG4pn+OX0ob9+mj59I4qlw8e/zRvqFEMLiv0sY3T
/rxM5bVv16xLFNPEfWPRd9O2KVLffPzCGyOiTVaPeYtpZsd+hkmZy1l+3XGL
lk1lSh10zmg0eZ/+U/UdCh22afhUdrlOr/PYNlzuu/Ss4uZDvuL/5PsO5d8V
CI2SjmGbHpSNNUj4HveMAd8Vk9f1d99abrwwf4hBpq4wG7Fcr0h7n8b+CVa/
bx5jo0XlB26YqIjngfGv20Tq5dOtUxWf1HqSbONbrXWw9h0dK2OqFGz2qbci
+9OXe+n0mjxGRERERERERERERERERERERERERERERERERERERERERERERERE
xLTg6Tnn+1cs8EZexpmfseirl6oZr1hUOx5r8rrQNOrGZDw6R/dSxO1ZS2V+
pFy5n8d9uhl5jP+yU72vHQbPeSb7t3qszfQqXNzaHOzuvJr+/MvLd9bUWGyr
ydHl4a8q5lPFv56DzHGPMVk9LQqeqrbplCYlHt9pdGp6sPjUrxS9Yesgk/cp
pay9+XzFkRk1WdG5icOE1spf27jyiJHrolL8udkbLnrRs+NzKZpjzbyHjSKk
yfLq96+OS/q+yJh/7sjnXi/lzIRsPX0HRsqdLY6tMuf7fffXuNyGr0P7vZZ6
Px+Wn2irk8yf/JQfD/n+IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiplbzRRV6PmlxgGyJ25Qlfy29VPI9ajVoM/lRv4tThzYJ+vLxpTTx
n1T057JI+fx1mYM+4++bh5bSxj/vPN987DO5e9MxNOfjcPE7frZJ1nWpr5/f
Mjff2LeqJq2uflpiHamIV9n5dtFlTZejmFz65Ox8rsJ1TU7U3LHZp2+wlOtS
ovCDawNNXldKOeHWvKd5fqpSONR/ZdM6igzzTZc/pn/K5zHeH+VfLDTnc5l7
03bitRIRcinD7NCP01N+nf9cY9Om/9mXsmXs251vRkfKU61Kr6e5Ut/+Si7H
3HnRfVzj16LMqNX2TmWdDAur3+fQE76/iIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiI+O+pq5GxzqalIVL8yBcrJ48ouXw2fKP3+N83vyu1
2a3u1kILCj+VsBeG+S8rhEuJXP2Ld75D///lo30ll5S8FSzzGmlHawyPktO7
H/6I7JD2+2NmnvtbtrwGsTt2Yql6TpFKu0KHtMqjpfhz3ctu7FlnkiaTrjks
3vo5WJyHF/Ev8Xioyfvx/9QZPSjis3O0NH412cOluVFOfyjts7qWavK6/u7u
tmMCTq0JkooBmwqY5Y6SzUePhhc2T771OeaK29wq655KhX3m7cOHhIu34lTW
+nTaX/+JOX6/TfscOwLlwY2x9TI80EsLt+EDDr8jXxERERERERERERERERER
ERERERERERERERERERERERERERExrfnk9Vpvbbsq9+5eK5bhvkFGvCnVLt+R
CJPXhalLy7POVWxnqhJ2svAk5z2a+DY60G1LnTiT1/VPu65b5LzVX/2lzMj5
tawz6mV7QvZFw1ak/fylHqPybD7cTBPvKieWLLT56z2vXTZPfsWYvK5/WqMu
uOLKsS9l56u4YvXsI2W020PvqsV+3zyx39WiWzv0nLhcLw6DHZy2VDLILNut
VccuV5Jt/I4lMv9wKqxJy5q1VzqsVWTWY+ujc9tHm3zev5urCrgOuDVbkfhc
+zsH5omSSRlc8xSPeGLyulK7a0sWKnHwvl4WXUno1r29QdK71t94YEfyrX9E
RERERERERERERERERERERERERERERERERERERERERERERPx/rR3SYdAyV1W2
HIqrrcw2yIv74y6siQw3eV1oGncO2z+4oqMq7m/PFl3hoUnRAO8bIdX/vPzG
xCy6baZv4zb+4pl1UffQIzrxmmt3VLcv7eQ63vY9b3OyoyaejZ4VfjtMlZru
836Ompp26k9tPtnkncPa/qVcmTKy4PjakfKk1efzlUqRA/lPaWlT1GfMWr28
8P0Y96WKQTwGltLGrUy+/DrLUc/VDpk0sdpuO8K/nSJz42vsbr4tyuTzTu3a
XGkbMXGGIoqtXbbu6aOkj1fHQ58OPDF5Xandc5OfjPvgo5c3s8/+GtnKIGcj
HDZf8iCPERERERERERERERERERERERERERERERERERERERERERERERH/bN1G
N9p6OcgoJ34smtTzkipl9ilfsx7STF4XJo/TLMp/iD+uysoDv4JK5zLKxqNe
ns0dIk1eV0q5zuutf819qkR6bvJsEGOQHAetltj/iDB5Xf+uvgOzGDp0VkVZ
9zjIYZUmFndW+wdUIK/yX27oOqD6js1v5Pq+uTnXzNPLnOHNosbeNl3e44f5
je8UcYmWtjdcKo2xN4rTN1+nVnVUk/fpPzW4/pcquxpq8kWXMM5YQpVLdnb7
C12MkaytZw10zxgiFR45ji8zPUo8Xp77tKp32s+HNOS2X93cLFpCjpyq0vaX
QYIinvpmyJ7232NidtgYVKRuDk387dXc2nBFrn0P9S0RkngO5LRRO09Xn6HI
dz/joToFNDEr3OiFXUjK3xOWP6r8csFOTXy+n7gRul2Tn7kW9xuyW5GN4R9y
/qqmSLnsGwdcv6STJZe/dInsfNfkff13dfGYUNVhkiZhjyp7d60ZJ/dOnpvc
ZlnSz/kZE68c2z5Dk2clPEYF1okTrU6xIkOXJz5OsfMjjgVU0WRVRdcprcIV
uXr8fY+PFjFJfm7zlkWNRf46fyNj1HLWZQySvYtfTY8liec6NgqKvVFkbqCo
mbrcHO2jl4Ifi6/6bEy+c3t8yRtbSg7TpKXPnvK6s6qYH6uQO6FVyp9Ly3yb
xnfIEyM/O2U5ar7JKEfTvYjJPlSVWVUX76sx+41UPZ3nw+Lpeuk4t/eofT7J
N98SpbVida1UeVZzQIGX0zUZmP7m2VzmyXdPGBh6+sWpBapkbtT5ZpcBBpnX
afbKNW6J56iXGDNrzpdDqtzcaHvAPsEguvSxu22qmu6eGX9iX++4KUbZcjCf
7uB8VTJ9mLvOaim/axARERERERERERERERERERERERERERERERERERERERER
MXXb4NLNbpl2GWXXrYwTy29T5YjiMLiTG7kZ+M9q6NxmZrsNqviYD9zn52WQ
iwNOvFvYPOk5fm/zL37gvVuVtZsHT4sIMUiFdE27fNGlnTxA/GeMbuWz9nsv
fzlxuGPJImd0sjC+YuzmPYnnNb10z/KhuxItGW/tS+ixwCi3LNJNbNcr7eTF
xVX/dqpxVkXCDzY7oz5XxfxpHYt93pzzac1Di/MfXDxHLz6tbPJetDTI2yUF
C1xbrMjOq+9GVyqtyeweG83CvBWpNq9A9aCz0YmOox28YD8mPlTy79gf+zxj
tITaeY62OpL2cx2Ty8N9jsy80VqTj+0yVFzcUZUt3xyWFGtoutzRxFw0e1+t
DMU1cSsSNX33TkVunq8103Fm4u89uVy+rlqLw+UVqbu1pV/PzToZ47j29Lha
dxLNb0zpei7fWVNjsa0mR5eHv6qYTxX/eg4yxz3pOYem8va9xdq0uGDpWflD
4YkToyThoZ2+So/E96OXrpnNtU2aPNZ9Hu00UZOIEi/nPayuyLfY9yXL/fXv
43I/7lHeSZMHfV/lfl05+fr/4tP0zc2cdTJ2XmX79Oti5VD2dmE9aiR9/Gtr
fzz5Za9J5p/jGoS0UiU2bGn+R5WTb39dr/Tl6IXnRjFGuU5tck6VpjcTsmfY
n/TvXaN1o1aEWQTIhAD72wUL6WVUrUnB5Zckvc6dTw++vTUxRirlGfj+xiOj
NBli7WDhkvruD/cvD6kXtkOVGadq/uzzxCChy21zV7mW+P25UOyMB52mqNJw
rV3QpSoGmX+m3+Vv+RPPjUxp9Svz3TuZwShdGx94XNhOlTrnasx5MIh7DiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiYnIYNKHr9g4/jTKx4pgD
nR6r0rd/c5dOZ8n3+F0MbN2h/duTqoxaZFnfvaBRPvqldzozIdLkdf3TNsxc
ZmT/Q6ocPXEi8Mtng5w6fmFx/Qppvw8rHqcfXKm/KkUbXS2ab6MmB27sqPrS
Ks7kdf2nlphfbqaSI1BuZyh+ZZyXXt412bUh3j/15cWltK/G+d+d4hott2r1
s5vUxigOH8vvL1gv9eVcJebVOeccsjfWpJVlxMJGZVRZO+/Iu9i7iefIlZ22
MzJPTLAcK7Z1fh+nKOl8ZKi72s10OYoVSg9zbGkfLfryN9vNKGuUwuUbFF1U
Ku30P6UNrvrc0yVelchH+U9+KaBIf+3HVC1rVLKNX7tOSMYdlxTpMfrY7a71
Nck6+XxI9MfE7ycuW8Mto7w0WZb17bAN7pqUWNP388jtSc/Ty3+oyaL4morc
aSVXCvnqpEyxzFqdgLsp3k8z89zfsuU1iN2xE0vVc4pU2hU6pFUe093HzMZv
mFq0qib3cg88WidCEafxEQMcSsfI1XV9xxT7rEqTgPiHe42aJLhF9ggfkPh3
58ZWC59rR/UysUSlUasaGeSz9d3urd1SPsdSd88s/l2NQPnsUaOL7pBecmxx
H1EtNPm+I2ve1G0520aT7ba7fzXIpcqStYZ19uuSLydzlc/gJ2U/RYuijZPw
JUbpeaV2hFtfVc7NXDrEd3Wg9Ki/raDjbb08rpk94zst5b+Pk72ta44er0qp
vvtHDfHUJHZ3vjefaiTffePJFzPHqhtUGZNnaPu+XgaxPK8/3aVZ4nmJ2Qyl
5NxxVbpXqV6+Zk6j6Mrdmfu0r+nudbMrT382xMsoZdSmk+pvVWVgL4syNzfx
ewoRERERERERERERERERERERERERERERERERERERERERERER/1lrzFse0i6X
Ip5O1Rrdf6VKhgO53/S+mPbzcL61nhpU7oIql6q37/uyulHcrcb1WnI+UrYn
PL8X3kCT7L03TSporkpQ35Czp04lXx4UJq9fp280Pq+mycqi70b4xChyZ2+P
AsNqxciFdk9cPfap0vB+zB3fWIPMOGuoMjB90nOldt2oYGfcESRtM+7e554/
SjK/zNX5SQmDpN8Q+mhZHk1sr549MPWrJmNe1PYqPDL15XaeefbZyvWbvzTM
MNamQia9eLXMP6fQirSfw3mqqGfgqYBoMayofMx3mlEKDS9TOFuX1Jfr2ESf
cGr9qxjxO9Dm6JXMinw/bxOfsDfl67wU1GbfBh9Flg2cGVKqkSaD1+80W/9J
k4RPipfvF1XOnbbdO8RSkfLHD222rZx8eY+JeXFpr8KHXihy9uTHQ9s3Rkut
/Urh8oGvTP5+UsrOO54vKZ/vr/cd+G3QJ3/1r/Nh7Ifdl5Lvu9mqRPOFHr1i
5df45/mOdVSky5GLG7o9TX3rHxERERERERERERERERERERERERERERERERER
ERERERERERERMblsuLl6BTN/RcZd2n9/UBtNvDaVHTDpZ+rLRazbdoJfjK8q
GQLzxLd3Nsr6kj7ajkU6k9f1d3tcO7g0m2iS/4hjvnuVVYn9/rXw8sC0n7s4
dPAJ1wrfVXG173c8azVFGjSyyViqbcrnraW0tQcE25a9psqQPLqOs+2N4n3q
UVen90nPV0zMOvHv+xSKjJCwF2eauh2IkfTO9i/r7TOK0Wi1Zu5oVeyOjRux
zV2Th92beHeqbrrcRfXkQB/7kDcypWu33Es36GViVdugtk/Tfr6ig9PxesN7
6+VxrhMDOuY0SLx9KQePmYrJ6/pPzWoXERo8MVby9v/ebbGDIs1cPg4v/yb5
cvOuK8Mvjnqmir2hwo0Oa4ziUWrtu4DjOnlwcMLHpXv/2ietP34s7aFK/pw7
N87dbLrvxUWtZ746oYrUX9rM/syNaBn0odOCMWtfm/z9pJRvLTdemD/EIFNX
mI1YrlekvU9j/wSr5Ou/fcZ5pdZqsbJnrX5U+j2KPLPO4pU1U+q7DyAiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiJi2vKc1+dj+RyNojzWmhae
rUrE/gsV3ywi3wb/b28Fepw5MFOVyls/73orBjkUsW398lbhKf7coPrjOwZv
VeXxnoCgXRcMoiu3eEQhlwiT9wP/e3PvmDnIJiJa9ox3sfWcbZTZx3qu0XdT
5eiLtjPH3n4t915+2dd7rE7MunkXnHIp7efpJZehoytWOG40yraH20fdv6lK
xpt1B+c+zjmc3DbbvNfVYZleTnS8+NKxokEim+1adsE18fzDu0duj21mqUlx
98iPs84qkss688EsR6OT/NwOE7vtMN8fKvP6d487qUbJ9eFZG2fcYTB5P9Kq
ve3a3tG6a/JpynJ/lzmqzGk60uLaqZQ/T/Yvnne5bilNVuf227fopCIPXx6/
eW5X4uvBfPP4HjpLRZotOnR70kKdaLtPHyu6+naSn+uyNdwyykuTZVnfDtvg
rkmJNX0/j9xuutzOb5mbb+xbVZNWVz8tsY5UxKvsfLvosimf63tsUNE2LlOC
pVyPGatOdowS90rvpi62S/o+Kti7dw+HbZocKPyje8RCTeqt3tLT2iHxfob1
GdDj9HpN1u4eOEEZrsnQ9M8rv8mX8v133Rib2X2/TmwO9igz6ECs6G4pDvWb
pPxzy+ULOtqstSZbyzs02dVelY5ZM0yoWS9W7jUvcPxyfkUm+PdfEhSgSr6P
ft5VLyffd2phwR+96hcLEH+fBhuP5ddLzI6JuaYsSfl9XXik5ajQLjEybFPm
gZcuGqX8kOJjR85MvvzYxFx+9umEYjtVuVHTfNvXFwZpfXfBhZoPE7/fekwp
8q6Zkyo95hV22Vf0r3Xf7PCy3uFhJjsH+lR9qi+QzSgP8tVzPtVcldOnPEfH
DeHegoiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIhoCu2/ZX5Q
qVegzFsQWPPkWb1U/3xt4RY9eY/4zzoodtWOQTueypL3r86+HB0ui0u8fPXp
hEEyTLnVqUKAv9Sa0bB0lw86GZ4364JJa1mfv7tF42NtF+7VpG5ei0eH1wXL
i7E3PerZDU7x5y6ava9WhuKauBWJmr57pyI3z9ea6TgzWqaN2nm6+gxFvvsZ
D9UpoIlZ4UYv7ELIT/ufHF7fs8qWt6+kwZe92awy6WTj3MkN9wUlff/+mG9T
a3ifZ5Lz24mpulvhkqufzu7Dhj8vl7X3w7iTvbL4y6AvFZpsX6mTE7N1CVVO
ch4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIuKf52fXzncX
9A2U6q5BI3af00sG95yTK0WRy4SpQ/+s2xwOuj2VvDmuzFk3PFzePzwQ2PVU
4vlpt45eLdM3xl/KBbvY3EjQiceKq7MKrGY9/6k2XuToNuKgJo+HVmv51jVY
nC26jnHPnXge4/7F8y7XLaXJ6tx++xadVOThy+M3z+2KTvJza9cJybjjkiI9
Rh+73bW+Jlknnw+J/vjn5S5O25zDdcLK17Lv88Gzkzvr5MzHQ2N73Ur6fgy8
UrjKN3km8a83nJzsHS62w5+ZGTb/eTmKSfWMl76Bj+G17Hq8oK2ns06M9/Ve
O89yHiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv7Lhema
es7eocr3TwtDgx8bxKvKte4dL0WYvC78720c4+Hg2iRQNma/f/zSMb1Y3Mz9
aGp4yudrFSx8cXP9MQFSKCyo9yArvZSa9mWH7/rUl+u15FiPT4eeRcuOcM82
LyYZ5XXI8hlHOqomr+s/1WKI1ZtTh0LkxFyr0H77omRYeMMZnlOSnkenG1De
zPFqjLg8btSn8BejLLVdez14e9rvT2IWynDdI9sqozzI8+lZ0LdwsbQufLv+
z+Up/tyET4qX7xdVzp223TvEUpHyxw9ttq0cleRxOmwMKlI3hyb+9mpubbgi
176H+pYISfo4Ke0K514uDnNj5UCGFfUzD1Okg8cdmwwhqiSsmpLBeXaw9L82
vMmhzlFS7drwoSebJn3d5hyT9/XoBYESfG7qgF3X9fJ68pZuJ5XUd/6YV43L
O6BjjAz+albBx9so66+5/Kg/I/n2V7yxT92cdwNlaZ/cqzu/1MvHNd5jhn5J
fX1ILrM+WdTu6jZVSnwdky3+skGarfe9472S+wkiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIioin8vHq6Q5tLqlwplCeDZmOUQmvKz9v0KNLk
df2nTj/UOts6H1WOWVt7hbczSos+lwJmpdPJt/XtnKSGJpUi+w3Vv1NkaM4N
1tXaxpi8XkyaQ9x9WxxpFyyr1SljKjSPknZHPVsfrJ/0PLSNlSvM3rHiiax5
3OBAQESYtNpmvfprYNLHMZXNyjTOMvVjtDg2irmqLjaK1fDIqmZ9f98cwtRm
/bZOzlUjFHm3ssqCkp00qf/RqlZg+rgUf26j00PaXe2lyIVO5826TtLLmQwF
zv1QHpmsD5eC2uzb4KPIsoEzQ0o10mTw+p1m6z9pJn8/iIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiImDZ88bxgOtdIVW4P8XqY6YlR1gyo
2si6t97kdf3d9b7PTlS/rsq7M4Fl63c0imfn2o3Xm+lMXtff7Z3eLeud96qc
C9Aebs2mSLOOmwI+qqmvn/hflvGd8Mpyi06Ghdov8NoRK+bpro4wq68k2/hH
vCsXnGN4IoPTt6zXJl+4tLzf6F4139SXu9j5yrRm+2N0srrmkeflfGPl1Jef
ZQp0T74+YPJ6oe/OSuWWKHJg1450RYtrcrnM07C3ESmfQ1im2p6hRccoUji6
9JANN/TyJUp/qv0wP5P14cHBCR+X7jWKd+uPH0t7qJI/586NczeTx4iIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiYmlxYcOym6qdVeb/i
mHeXYkap2eDK7k9zIk1e13+q7o3rry6bQ6TdcP/H4V5RMujqQjuHiakvbzCt
mHX9Hqd7EiClyp7fMNhCL9mHnL14ZEWsyerJ3z9ijktYtHSb2WDEgVlG6di9
8sxu3VST9+k/dUmfOLc9X0JlwtJqk69kipa6n5VaZ48YpPnDcxfX2kVLi0Kn
djexNMp+r6Vjt5RM+/NNLismKA/euhvl4YHvhbI1jhAfl4UfJrpsN3ldf/e6
MvziqGeq2Bsq3Oiwxigepda+CzieeH5vcNXnni7xqkQ+yn/ySwFF+ms/pmpZ
o1K8zkf7Si4peStY5jXSjtYYHiWndz/8Edkh6efn+w7l3xUIjZKOYZselI01
SPge94wB35MvT/XrzssV/coGSenvBXIui9PLgFZ1jZ+zpL5zfsi7yqMWdYuR
9yuf3zlwySg/ixkXfJyZfPv3dZklC09FBosu4sXpkuOjJMue9HE1u6W+PiSX
Uwr9qLfzkCoVR80K//7FIJ0yFwwOrpT27y2IiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiI+P/vh58lR4RuUyXO44blpCsGOa/aV/i5KsLkdaFp
zHbLQnLu9BcLp0rX37zWSYcH37bX2mq6fLzUZheL4EtN2mry6Fz9XGW6qzKx
UWGz023STn/qZThhCOilkwCf3r3bzY4V84t3Y8eXTb4csz9NLWhjb98lz+X1
p/ylnXpHiGXfC3Zvh5kur0z2bn3sVlOTOfE9oz99UuReoQul+/eKMXmfUsra
Sw/PvjFekw22Zx6UCFFl4epCLltOJF//Y3dccFzeWZHm87uWCigWLo2qVUw3
cc50k8/77/a2a3tH667JpynL/V3mqDKn6UiLa6dMdy5ZjnqudsikidV22xH+
7RSZG19jd/NtSc97jH/eeb752Gdy96ZjaM7H4eJ3/GyTrOt+3zzA7odrdbRp
qxNny/z2bpNj5cvV+f3eWKT8+XzprYfD1OqaTNPXfBarKXKzgFlBx2Ypf264
DjiWI8Ov19L5zN1Hy5bpZFhoqzszTLhuU9pcuXJVa+Kiinh3yRI30iAR7dov
Wnc83OR1ISIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv4p9n/R
PWLUHlUO/RoWOjvcIPXndSl+yUjuIv7fnte1PLVzRICMmDO6f//KelHNXlvU
Xv/75iMlpmPepRZPOmoSOuFy4LDhqvQ3W+m9ZVra70ORC6MmVrHTyZSP+5bE
jIuV9SP9xs4q/uflMRpqu3d/9OO5hPQwy3d8fYT07TvAb1DX3zfnLTG3JmxY
1aylJt/udT7ZrqkqXrW+7jtdNO2s8xf3G1r0661Jo3Lbuk5xVWX1AOvVw14k
X/23jVvarq2uyKZmUZ3dG4SL084ux7Z0nGHyeacWD/c5MvNGa00+tstQcXFH
VbZ8c1hSrGHS+9+xROYfToU1aVmz9kqHtYrMemx9dG776CSP06ne1w6D5zyT
/Vs91mZ6FS5ubQ52d179++7rlT0GlLZropMy93f4PRsbKzsLzBvy0jzlz/Ph
DWIXXKmtyYeW+sAivxTJu9UmbP7YpOc32pe1qT/eyl9ezoxo9WC7TjrqLsSd
Opx2zp8kz1e3yb7NYlX8nJ26hzkaZGLOwAfPLpDHiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIgpY/0S36v2qq/ILCe9x7E4VSxnd3Esd18z
WT2tynR7++mSKtnLx+vnNjBK+ZC8S+R5ZIo/t9gc22Y9ampS8t3Wer/iFbnj
bxnyunvSc5NSm5nLH6lxtIImUS0br7joq0jtmS1KmyvR8mDa8jMLX6viPHL/
nQcBmpQrUjO0Rfc4k9f7T7umfZMGcw+r0rrjertG3w2yf3KxHp1rJt96m7fY
eeHsusFy6sOsyLBGUZKrfEiFuLrJl3uWf/MJO+fR/nJ1a/b3By7rRN33NTxo
Z9Jzupw9R105Mz5aLme6O7TbX/tu5KelrYpWU03+fv5dx84utd87WpUV0x3b
vQo1imfRsO7dFuhNXte/q7XZsWVKQIwUf++5blcWRcb+XGhRfP//ov+Hxq91
rffX//v2oYWvsyYjHLJkrmWR8vu6yFuPEe1fKLLCzfxzxg3RcnX+hKMBL16l
+HPrt3VyrhqhyLuVVRaU7KRJ/Y9WtQLTm+4ca6JPOLX+VYz4HWhz9EpmRb6f
t4lP2Jt29hEiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+
l8Zp1rVi7VQZ8K3igEMumnyKmVTkWOmk51z1nR2UtfdHVXY++vBmWR5FGp91
yjXsR+I5af0yNTYWrK5JwDLPgXNVRaLODrE43yT15SK2cLw9ffdzVdyX1Sn4
YYNRnu/LOCPuks7kdf3dyInWY6a9V2Tuu3Gru/b+q68HFr7rluXPy11Mqnv9
NpaJeaDK9BFPun+cZJQzlpl9SozQSdk9pc18c+hF92vQswzhsXL98Prd4QOV
ZHvu5w63c/UcGiD6oQXVcZX0cqaf49i965Ker5iYYzZmLGbvEikzIi7WPJ0x
VroG1XboH2Q0eb//7pwnHXUXbqiinXW5kL27UXRLlTtnCqW+/ZXS9l3ud6JQ
7ljJOr34FIvyigTXzHjEyzvxfL+sWoKd+1ZFYk7tPV20giZxl8LvzYpN+Xzd
EfZez8YEKxJRqvtx3cVocfM/EHxy4usUf+6FvjsrlVuiyIFdO9IVLa7J5TJP
w95GmC5POKtdRGjwxFjJ2/97t8UOijRz+Ti8/BvyGBERERERERERERERERER
ERERERERERERERERERERERERERFTq0f2tBtSdIZRGs1tWnvyQlWya3N7Nlhm
uhwb/N9p7dfn7qUtqri3iPXrf9YgLaOaHvs8I8LkdeF/7zxLp5xL16nSKqpS
rjLbDFJ11KrS5WpFyObybVpnLRcrDwdUH7CkpiJZP0zOlc6HHCdTG/Fs2mTX
qf6yPOOl2qtv6KTp973fvu1Ivny8xJyxeOTsWy00ab97UQcnUcXqrOPioAIp
/9y0otG7ib+1baR4zTBfesI/RprfXvrh0Y3EcwWtbnwOGtdUkXPWlfM3/ajK
2dhNvwIfmu57d77Gaf8v6zRZOfWQT5WhmsxMt6veyezJl+uYVrRb3tWte48o
Of9jZPlW7gaZMTh68obHSe9DW73Z/O7ZNSm65eOg7UMU2ZTlRue5L6NMPr8/
xSF5s9nvfq7I9+lX+1iujZagWyFH59x/lWzj1156ePaN8ZpssD3zoESIKgtX
F3LZcsJg8nmndi1tivqMWauXF74f475UMYjHwFLauJV/3jmTVN+uCSnpsEoR
sw4nLauV0qRL/kVfHfT8PkJERERERERERERERERERERERERERERERERERERE
RERERPwdvdW2adaJ7kbpkadw/Dg3VV7MeKYV20jeyD+lq13zhAG7VLkRH+x9
N8AgHXevGnjyNTmKv4tFmuW3femlin1UJ7/Pzw1i32VA9Q33ImSE46cBHSrG
SoaiU5cNrK1IpyLHmxS7Tu5iavXngjD/VeUDpGrVD0GfC+vF/VzCxxZLUz4X
sf/u8w221tNkqnWOAF02VUr5HQjYsizG5P34p7X70jx63fpIeXO/QvTdHLGy
ekCn65XDE89dTC4zLblU7UgHRfbqjFerflOl2fq2IV/8ku/7eK7fklWv3TWp
V+7gkunLNCl5Y/XD045/Xk7avfWfCz2vqMnDdzuK5XumSJ43re4N+Ryd6N9/
dt/ZfErbKCnzK3vH0psMcmfO+QrKgz+vb6lN9zfnZ/u9UuTKA78m6Tyj5cji
Dpdyp3udbOO/uN/Qol9vTRqV29Z1iqv61zlgvXrYC/Jpk9uiWzv0nLhcLw6D
HZy2VDLILNutVccuZ3/9T2avc+xc3GZFyq25kbVieU3urDloZYzh9xQiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi/hmW3OkTP+KCKg+bu5Ty
q2GUgTtzZsp7MdLkdWHyeNXzRtVxT1R55dTX32+pUXx2Vm3j4KEzeV0pZYag
Q9cfNQmW7BkrZF4kUfJ5SYM782wMJq/r3/VMwqgX6dpokj2h0J0JnVT5MXLO
cOfG5Lb9y35jC9kW9Hwqber5/Kw1Olx0OZcftzppuvfbz3l177Fbo6X381E+
M7oa5X3RXpcnNvx982kjzPe2bdVJkaW7zloW+q5KjlkBnxc+Sfu5bW5PfK7c
2abIoQ6TvM2fhMnHvd9/9N091eR1pZS6AeXNHK/GiMvjRn0KfzHKUtu114O3
p511a8htv7q5WbSEHDlVpe0vgwRFPPXNkD3t1D+5cbms88yeSs7jtaf/sgiX
De4N2vvdS/o5lm/4pw+762iyuHST/c4ZVFkwLU9kn6mpL/c4z7x84x/cCxDd
7d2DzVvqZZ6T65nju5LvuzbLZaDDmKeq6LYd3LRyhVFGrM0UUGjf73vPCRm4
+6r1EVWOdLXLEfjTIJ2fbbYobcu9HRERERERERERERERERERERERERERERER
ERERERERERERERH/WU+u7x0afV2VI61Xl3zX2SjLprxbuieX6fJ/8r+ukbXV
VVXWuVZp0bC5UWp17V/iW2zK5/PcjFoW5FtBk/vepdLVe6xIk6/t7Pqp0SZ/
P5iyHtxWyvPOpRB5EHZ0YvXDUaKMPnl1zvTky0VsO6P6mL1Ln8jCFic6RIeF
yfDTCb23BCXf+BlyzK01qXe0OIRPaX21mlEOV7+Y3bN82slzw/9y9NCVHTp6
K/Jzxdhsk200aetluP3gQ9LzIfebXTw2ua8iSoe17a2c9WKXeV1Pq7a+KT+P
Q+PXutb7a919+9DC11mTEQ5ZMteyiDN5XxERERERERERERERERERERERERER
ERERERERERERERERERERERH/N95u7b2ySz5N4tsdvJx5riJnrmfbXM086fmE
W8ro0h2+rEqxQ2ZdKjQ2SvXte/tUfpN4vuKpkP558j1WZY/xbU69s1HWlO2+
vMpi0+VD4p+pS9tzX1yLREnJHCsP9JlhkAcnA88+vaDIuWdZDub0fCJZsi6/
GWIMk+1T3z0sFpB8+Yq3yhesdeZZuMyae/vejtwx0udU5x3n2xpN3g80jdfd
bg/tmlEVe+ceVm8Ga5L562WfHzkTzzkstdjy6/PBijjFv8oy1lMvo0fOvRbd
6nGK15lVS7Bz36pIzKm9p4tW0CTuUvi9WbFJz5NERERERERERERERERERERE
RERERERERERERERERERERERERERERExtHii+tuHO80HyustF607FomT10UFP
H1omXw4hJq8Jjd6F1zz0RHo4jL7x5F2Y9J3n/KrO65R/X1qf456+UwwyRW+z
PCJOkWWz9m+0rJn6cvli6rUsPXBumEz3WbTqeIdo6bHP42Vu/7S/nqPUBGuf
05qsXLyqxqCpweK5fIx6Yvkgk9eV2rUYYvXm1KEQOTHXKrTfvigZFt5whueU
lF8Plwf/mNEsMFpCXEqsPT7dKKtaxHRd00U1eT9Sypr7rfa5hz2RhEzWiyfn
DBfHmC8VvB8nX59Pt03X+0lAoFyMndTN841e+vh96LT8W6zJ542IiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+/mxrkfffcWpNPZ/u8Xqoo
sveR33TbRjFJHqfEupK7rt1Uxcy+4d3oXkaZcj/dsOuldIn+fcHL9dtsWaFI
0fzVrKpZaHK44eSg2zpNihyJmXWysCYX3KzNeqxTpH76vkPSd4pO8T7srJ59
vts2VX6+W5m+33lNrEa1fe0rcSZ/P5iyNjC/9KPIDX+pl21KRJYYnRQS+5I5
NsaKPNrqlqdpqDTr1yfqzZMoCfyVaX/oqqTnjx18VLz40jtRcvJ2ydbNAw1y
fuSeF1s/KvJgUpXjjc6qkjc2/bt8pf/aLzE9bpVaF5nk8a/NzFh6n78qb25G
KOH7jNLO68oyazXxfYep0wXzyhW+56/IqJ/y1nNftLwPnRYXX/p1on9/3e32
0K4ZVbF37mH1ZrAmmb9e9vmRM05GD13ZoaO3Ij9XjM022UaTtl6G2w8+JF+u
Zt/lficK5Y6VrNOLT7Eor0hwzYxHvLxVsTY7tkwJiJHi7z3X7cqiyNifCy2K
7/998wkRERERERERERERERERERERERERERERERERERERERERERERERGTaskb
fh/WXVLFe3d8u3T1jdLRI/7dAL+k549h6tSiQLfs8c9UuX6086eB64yS6aFn
zsZn/7xcuO7z37XyKBkiLze/eT3bOUrate2SU+mf9By/1Obj8s+az2+oiVMd
rYNjCVV2uTkPveed9NzO1GazHLG1clx9Koc8huz1nxEuk+wj+1gfSfvvK6lW
2FF4e+Pp0dJ2VJthFcQotUvWt/lU/ffN05vUdHiuu5sMMmFir3xLMvz1XWrh
XrtOo+TLLUyq/QuPfOQ5V5GQPZPq5lPDxGlWNqWSwzST9ym12PzhuYtr7aKl
RaFTu5tYGmW/19KxW0qm/fVZofQwx5b20aIvf7PdjLJGKVy+QdFFpVJ+Xt3q
bi20oPBTCXthmP+yQriUyNW/eOc7qe/cG/HDqnEbC02+XSnzI/MxRUocbdRy
19aUz2dOqkcLrz/icTlQ/DaFLXR4ppcTxa+d3fUpNtnGX7cwn8+Tp6o8mV12
Zp5VRkmosLtapkO/7/0qn3Fjub6nVRnz7fjy98WMkj33zPdbnPm9gIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyaeNe7WG3XqEyxKf8+98
7kaLy75NZ7ZaGk1e13/qR8vObj8PP5Ft90a1OvU+TEacfJ6gvEp9OWNpxaLZ
D280j4+SsS9WZ9scb5A7G35YSibT5eCZTbvQsO+BMOm5rG2+b8Ojpf/ql5+c
o9L++y31anC+7wM0cb9rG3SvZIh8SV+4RcGbw0xeV2p3l/Ho05vfQmX4fMse
OzJHy9FXp5waHk1968HB6Xi94b318jjXiQEdcxok3r6Ug8dMxeR1pZT6DoUO
2zR8Krtcp9d5bBsu9116VnHzSb730ntMtuMZHoaI+cgrp+ce/+t8mtL5YY5Z
qe+9IyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIuL/TueZ1X3q
uKkyfnXxIL/DBlkz3LyC5aAIk9eFf5YFHaaZn4+NleCIgkrznYp4t3x9dWQG
LcnjNOofOahGzgDJPi6gWIeceolu4bpszrJYk88PU5c5ngRn/9nYX6Kmuh1w
2K+Tjnaj/fceSHydTKns2LFuRU125Oqru+ynyLC2Q352exdt8nn8u47Kla3R
+fhgaZ296aC6k6PkQo+Cx2x7kieW1lx+1PZ+w6qaPG3/zepihCK+BYZt9i4T
k+Rxrk6uM8vX2yibC6U7sfFEuGTLUGHD+OazTT6/1OLWhA2rmrXU5Nu9zifb
NVXFq9bXfaeL8h35l9rBC/Zj4kMl/479sc8zRkuonedoqyOmO090YzIenaN7
KeL2rKUyP1Ku3M/jPt3s9z3fst9OP6iJrSZ7W1yWEnlVeRh7x/bWlqSfA0m1
+gubLvZFA6RKw5nbbfLrJcypT/zWJUnfF9nPbJmfP1iRERP2tm3YXpN9Wa7M
LZcuzuR9TSnjSpzfb+GiyoOMg4zTRxpk4chSp/sdCzd5XYiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiJh6nVHEq2OpuarkONIizKyDQSyub3q5
cTS5Jfh/+6x6NcsLjQ1S89JLW58ninhPy/V9h0XS8xuT6sP0EXF29v6yZ9YZ
46jDOjGu1X3tt5+crtRq3MWNWc7X1KTGs5KHJnxWZNG1ra+39I6R+Rstc2wv
+Vqyd7XdWNtcJ8+fa3u9XvIe/+W0ZjZf5tmGSGv7nn0KLYmStp0ibScM/n3z
zUzl6bffFkXm0mT0shqheSYoUu/YGNfpX6JS/Lkrc9jGr7trlIfVJzaN3Rku
J+LSz+yqn2XyfqRVZe/Wx25/nTNz4ntGf/qkyL1CF0r375Xy+XhJtcPEbjvM
94fKvP7d406qUXJ9eNbGGXek/X398MCWboHxLyWTy+cPY10jpePhkOw3Mqb9
eSVmlWoBloMaatKvbpeQd8VVWXtaW7zyfMqvt/Ht042ZofOX2l3P3Q38opPy
Z2bOPLY65b+blRNKV8l1VpEpnXsU96irSeY93jGn3qf8fc9URlcrfvfqHFU6
Z3pYcls7gwSkL5U3bDi/gxARERERERERERERERERERERERERERERERERERER
ERERERH/J2tnua87vlOVkEpZLWu9Nkijmx7zvzyJMHldmDw2Orw8vvadN3J9
jk27Cyv18nle+1vi+/vmB95p/naHZfUYeWbT3q3IfqO435ix6NI41eR1/bv2
brtzgGvWQHHp2vXIjB16+RA6+e1Q/9/3fSXVVventQ8cHiRDmlfyrpUhSrq0
zH8/TwHT5afV/dnzl3UWTQYVc9h8oaci9V87VV57LuVzEVPa+ZOaVVk/RJHK
cY1ffjfTpJzV2Mw/X2kiv4qYt3I1yvdpcyc/CA0XPzXhe7tJc0xe739qhPne
tq06KbJ011nLQt9VyTEr4PPCJ79vbltSzTDlVqcKAf5Sa0bD0l0+6GR43qwL
Jq1N+XNp59V3oyuV1mR2j41mYd6KVJtXoHrQ2WjJ2nrWQPeMIVLhkeP4MtOj
xOPluU+rev++OYrJZdU28acHiUGKPmq+7/hTRbKMmNXSulTS1/kg541NrCPe
iEOGW647N+rFY+2jS++f/nnfqcDrErRrrSrRfo73b7oZ5JbrtI6DK3N/RkRE
RERERERERERERERERERERERERERERERERERERERExKS7+F6B3ctPqDI2q9+5
bnmMktDnVvavQyJNXhf+WYa+Xm58kD9QrMbO8B6wSy9xrxorJd4kPV9oSA73
R09+qjL986w75jaK7KhpFtB5WNrPZ8PktWpUvr3jaz2T1VZZnj49GS6r7sab
ZdmWeJ6Y84aIwMk39bJO3ZPuWWuDtPL57r1+u2Lyefy7Os5+VnvUbE1WBxrb
R+fSpMm5QkujqxpNXhcmTfO256NKOyvSKXzh19VKmHwvM8pJ32daovmNiY2z
/Kjt/YZVNXna/pvVxQhFfAsM2+xdJsbk88OkedY6pnBzr6fSzrPfuhZjwiXI
18rl+YmUz0U8tDj/wcVz9OLTyibvRUuDvF1SsMC1xYoE1/9SZVdDTb7oEsYZ
S6hyyc5uf6GLrKv/ycUbCzaesMxf5vfu+erxQ51cO3KgabbtSb//pJ8fcO5R
Jk0e9Pg853wHRYIOv79fesefd/+xbLViQS5PVVYPeTtu2v2/1qfV51A5Sk4j
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi4v/Wk/bhS1YcUGXB
whL1SrwzSMKzCj0GFSSv8ncx7mG/ph92B8q9oTuqDX+ol+tlW3dxfp/0HKS0
7vPvl4YVaBkj5g1/bp132ig/gsp8NJ+qmryu/9QNpV+8uGYZKBtiqrt03qeX
r4Pymk0NSvvvd8jrY4db3w+ScPODc9tbRIlTqQH6G2VTPocttflq57bu1zJo
Mmz4iVqfWiqy//zdsPjlaSd/rMqbcG/PiYoUrZbL2TmPJhE/H1fKGZR4jmLd
Xnc8fJcZZd/x1v16x4aLV6ErzT0jF5is/klNh+e6u8kgEyb2yrckgyreLdxr
12mUeP2YvN46erVM3xh/KRfsYnMjQSceK67OKrA68fPt7pHbY5tZalLcPfLj
rLOK5LLOfDDL0egkP7fstJ2ReWKC5VixrfP7OEVJ5yND3dVuf975Y7XAtcaQ
AgZxmH99/lNvRTYP6JtuZN6kr/+MW67PaH/jjWTcWu2J5wq9xNeK121+lPa/
UyntbJuvCxatUKVK0LXFoxYZpNxJj0ZZP4ebvC5ERERERERERERERERERERE
REREREREREREREREREREREREREy9ujuNDM67X5WOU7v2Xmw0iONdzyWvMqf9
fNHH50tkcZkWJG7n+mePMYuSk22kUFAhg1hs9di76N1rWVbb/pW6QCdvZ49d
v+EMOVep1dwbyiaYRUdLz70dhvR0NkrUmAX2i3qoctm1fkLM6mgZlO/T5KXt
jVJ82PUDsTZJzwv9WPtMV5sM4bK9wIzzd7ZEy7v+P24ey2SU0TmfnTb7okr2
wN4fJ5VUpGBUlcGbSqe+XMdWJSJ2v91gFPMBpZrlNI+Q+Y/9XI8YNpq8rv/U
mHotSw+cGybTfRatOt4hWnrs83iZ2z/15fuNnV1qv3e0KiumO7Z7FWoUz6Jh
3bst0Kf4c5uVaZxl6sdocWwUc1VdbBSr4ZFVzfqqMmv4p97Fn0bLoZjDI99P
NMrAX7caVuiY8jm6Z559tnL95i8NM4y1qZBJL14t888ptOL3PVcDir1sbLE3
SHq3PvCsQMEo2da8WvDxksm3PrOOiZo+ffdf7zM+aocx2CBZ3gxoOS0iwuTz
RkRERERERERERERERERERERERERERERERERERERERERERMS0YT6r9ttyHVIl
5PWlIn6fDPKpeeMMtcum/Xw5TF5X5Fu3d/DcAClR1q3fg+p6CfOf2CGzW8rn
Rw1Zl/9JjcyanL1W5HLNTop8bJ57z9ddqS/nDf/LO+8PFR58Xi81DuV497Op
QbZc02a5bFUk3HHL8Czlnkm/ERahtw6FS+EZu8vZe6S+vDhT2W/efuedOzU5
/KLpyF6emuRvn2fN1j2Kyev63TxVYF/ZiP/Dzp1H5bT3/+OPIjIWkaiMIUNk
KIVXRJEoJCJDIZGhKEJChpAhDZJSIpU5SRkyK0OppDRTXWPXvvbOnAz5nbU+
617f9Tm/2+c+3afOVTz/evxzrfd+7fe8W6vnYSmNyage/Sa/lMIe1hgpFrv/
9PcDCsuuhbtKSW1QGy+vdhyV12T0a13M1fq5V9583cFrw9HyPUNet3OR0siL
K/Zu+Ix9rLGZ3+LY/DNHnlP7Vrc8Dy8to3dpsUUz4n++j40PPr13/h4BxU27
kevcV0K88Sf3XN9b+3V92zNxvtIYjsy6l3uP7smS39bzbyseiWXeH/+0bbdW
lcoF5ZNnjdGKj8/5FHmwg2+H0NrfQ8zzY8xim3C07Xxuct44KXHN7vSkbViP
/8mDWsFK2eEsDegs12l+uoRGbjh5JC0BuZcQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEII/1lXOAZvudmkgAzsHycPVhTQ17Za
7TT31X8uImyYHtdcbRQ5N5e0Sw7ecxnDo5qlcjqfuyLn8F96mX+5rdz+BUU/
WDTISrOcxii467pvaDz9M8DdtFubbhxtUPvSLvC0lBS0iivO7hDJvK7GatcW
cuukSRyVtt2WpbqqhDZ5Wc3YPmuRzOv6XTQXNN9mrcSR2tEPi447SClI8b7V
lty6y8ELCTYsk+x6QcpTDk6Um1NOT2IXB3RY2njWu6zMCrrWarBpLt1yW9Zx
9TAeZZlVJfXTQr/9JzWYHjZDS/PIUcFXb91GPsWuKB1hloT7GIQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIG57frHeX+ySz
5LDodljkaIbUcjMHZuXzZF7Xnx34/lO/OZVlNH5PX90sTTF9U845YGPNyLyu
P9v65vLQY23zaaSQ0Rvgx6d2U8NaKsU1/hyqFgFTQ16PE9Cn3ndsA35U0Ni7
G462WiuVeV1/V7vJzfiiABH56ve2m2vJ0Cu5oxOCR7F11r7TjfU986rKyMtI
P/h4LzG5VI/VGTqbIW2X1sMrMlgKLWPTVb0ZyuSN+LLhAF9m/ZBUNfyEcTRD
5j90nXqsKCeX2YHDek2Nkvn4/F1V7qgVVJwppSnbx7wvdhRRzqrQYc1EjT9P
zzNrGv/6fZa4qzuvK/2xD/J9pKkJqnU3f1Tsyj13lopo5kZDx9hNDE2z7r9x
5kyWrG6tHx8j5tPBoedf9H5WQfGfa3p2sJbdPsBeXnjX9FUhuc2Y2dYnQECu
Aw2KzZ83/v32Z6pPWN/8Yk0p9UxW/JF6RERBPbXOeMnX3TkY5q0/Zt9VlmJm
zZHT78mQavvtSuqBDe8+ACGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghbPi6+riqqESz1FZ9xf77IgnNddg7ou23cpnX9bt4pyB8
7vINHI2809Mgo4Yl/fBJmiebNbzcNvjf2XZ0j7ZvvhWQVdyCmXkzBWTIuPBc
z1VQyrQFtGIsRwJH88Gr+7Kk+dnDZ2WuWOb1wn+vpEvHJuzOHMpfYeiTk1NO
E56Ix0wd0/hz0hqLZmst2AmGHPGW61x/0Jkl77gHX8+fr//1Eq8+/vRsLSF5
bXfPv+8poagdcx+4JDf+XMfGbjh/b7Slp5Ryo7OdRqsIycUxLWE9kyXzun53
q0IjTdzMhdTzh9K0HkESSvVM0pY+xXqBEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBC+Gu5qNvAuGfHWbriN9Js12MJde4ZEZ5+
FvmNjc3dQfuj1nhzlDd4pHR9P476dV7GfXdFDmRDNerI5s6uvHxaWRxUNvcz
nw5df+ybd7CChm5SaV82haORHXplTpvLUo8vWVfv21bIvN7fXXXWZ/TLATmk
UvHcweBMOek4f/TWm4L8Rln7VcXTpGdXjg6//3yy20kpvT2yOSp6k+inv/9g
Y5r6toWQ9OWrH3ZxkZBPvFesJAH5crL2k1Q54fIGKYnTx4e2qhGQSrqWdpuw
LJnXBWun8b4ZR6xnCSnp+7I+ZqES8rAXrQvIwPqCEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE/1t/frfILvMKabBZ3kC3
1QLyv/spYvxN5C7C/63mmJo5cgtzaQfXMiCQeGTTaUHY5K6/Xw5kp/nTl5jo
viCnrKFGQYPKacOE0ZHBaxt/P4Q4PrI8achRvFZoSO8uLJ1SPZk/Pk4s87r+
aS0N0ks6HOZIb1+pnsmNElqvLhwdPsFB5nXB2vnYv0r1RV+O0t5GdFHOllK7
QrPHDlU/z0etrZJhodbp31/Qq1nNlS/5l9PcuQsyF81o/PtAQ5N0DCJWr8ol
R2+3j1GmPLpj1sOxZRf083/y9lW/ljWG+ZS5bl6i4DSfNn1yOqlxBvc6CCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/E8aPAhz
cXvI0LsOH++FXWDpfE5hcWkkJ/O6GoomT71v2lxmSXfTsDc2KgyRvVL7zBU8
mdf1ZxOTwvLY0xwtOfXZyWNaJU1p2fJxaEilzOv6sx6X/LqPjWTp1BQ1o525
EroTscbyWHq5zOtqKKZXzZ/mfKWIMuWuLn6YKaBjLTq7dv5YQWrdK12t+3L0
MCD2oF6WlCbf6NJm97u6yxlraEqtFrhWaxfT0piubVe9EdD5snXy21rUPo/L
10j+pu0gES3ueWGAgypDxhlOrXt3Zuu9ftcmsVs3aXN0d2VGyqrmlfTt2aYr
aasb3nqUlZZym89Y5ojIJuxsp/vrGFr2defTUZYstRqk2WSWQEQG3LGO9lv+
2G9fam19a13/45XeNOJ0iyFS2lw4aNHZh3zS6T94ypcjj2TeT392eevsK80/
s6RUNOfDWg0pdRQOsA/qIax1OyNqbH4MVuRoUZf5wddtpDQqb01/v8Tat1NX
craXwp+5SchNoL+vvFJKezbFBHYfWvt7yDyvg3NWhohozgunux4z/rjXqM1O
djWq//kjKzt2uhE8akUBqZYWz1mkIyCt9Z8jnvnXf/5ek4DX6XvacWRw+2qs
ezVHK3KGnei0rPb72/ttY1I77xSR+f2d/VaYMrTm67M1ZsMb3nglXZAvOjeG
o/iFirfCe7M0ZN9ePY0MMUUZ7R2baVxMzsMvTbpRJaAfa4KKXrau/TmVrRh3
7nsQR9XbNVfMW8uR9se184bqSWX+3n+2s8mrJspBLN1eeH3N9hgJKa0+GC21
rrv7W4SC93bvBJYW+OU7z9BkyH9yXEH13oZ3364rpTP8Z5veYkhPsjTlwBmW
Rtt3WLEhAt9fEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCKEs5K4eSI97XUJnMjdmfl0pJNMv3WN3zah9rlRDU8XeWi/MO4s6
NivWd3lVSgumJa22L5HQoTkRPI3PIopfEjPthw9DR9fLlxvPa3g5YPD/Vi+i
z0NudxkdXjh/QRpPRNk5SvEmQ5lat2P6SHeNciJHXzZd2p/iUkK7Xx872XfV
Ipm/319VIrG+GiNXRmfVd+Xyg0W0cYu+Tz+F2vcD/O/0Cne6lbBaRMkKjxbP
NGRo2ScfM7VB9b+fBPbX3hzhm0WHMgxjC8pLyezY4IPVRbLbt0/e1zZmIorJ
XP5UdKiKkJrltrHK6tb4zxEIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCGHjtf1Vvnmuj5Q0P7I5rbtxdDSm7SJvHifzumDt7P1S
e0HVbZbE0YpHcycypPPJbPLdNzyZ1wVr5/reIcvCFnA0NXX0wM6RLLV7G2Tz
WllCMb7XOrdLZOnLS/Nmg3oz9Opm/5fDQn6/8Z2gOmvq0MWv6MCSO+O0/YV0
7aavINSp8eQ4iey2xj7R4Gh6RjG/13kpiZq9tkgOFMm8rn9amwHxCu/Li2ib
7a4pw0oENLEkp1uH7xUyq6eDz5Gs7mNFJNAL+1yiyZBXYZ+81G61z0mbHlR4
cfIPlgZmP0o0fcPRlAGS7ZH2lTJ7r90jr42NOVBBmTsEOoarpHS6YI9wE6/2
79UvvWBN1joR7fbrfHjkGIbU90QczBz8++VStpB7v3CmgZS8005Ys2I+3X3+
YIFBwmOZ1aPt0np4RQZLoWVsuqo3Q5m8EV82HODXWfsvI49Z32nK0ZKlcXqf
JkopJulR6cd9wnp/LzWlc4HqH4W0Mudgy+CPEkoN+N6dFFjSjuh0fMwGEZk7
TV6iTQwN0xil/0n395uHP7OFf9Sax1RAWr2SAuw1BaTkcPXGeV/Z7as/k2F0
Dm1ZzpLxxVWOx0I5SrMee81S9+f75MtV+Y/c9orood4847WTGZr/oU9Mx5H1
P+78IfLDg3xeUdfzn3XWhAkp+WpZ4LXVtb9v3Pl6Z3C3LhyFBqq9XX9MSqPU
V3vfd6y7c3/GBLvkVjs4Mj7Q7v5DHY6ujX3R+9uGhpez+tbofY34DEsC7+wH
Ez5JKLFNxvC0HnV3j73UVUG/602WevlNDif9P86p/gX8zKe/7j0545z3oJHy
Umq/bB2n+pylwkSN8I+J+H6HEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBC+Hvrvq0yymUPn5zmKdneP1JBijn9ptwbJpV5XX/W
2K+0+NyaLLqw9LNYJ7eU3geWnZ5V2vByNdXVXXOcOwtoecrKWYGiCmpvYs4+
Xtzw+hP+jx/8i3Jd7XikIGd6R5cVU3jHjhO+ZtRdLll6qlugjz1Hq5+aeNxQ
e0VHf2xcFnVyiczf+8863VjfM6+qjLyM9IOP9xKTS/VYnaGzG14+G/wfVwTK
dzHdySOP8htDr8hX0IziYfPtiut/vJrW7PBdwGRR3wtPlK8pl1HoJn93pWey
24eHf3xnq8orp9KchHFHYsXUxMs0d2Q05i2EEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCOGv4tUk2xbu51mKOVscxf8hoVKF
l1UvDHkyq+fNlMkX2Z0lVJNsU209U0jxTThNM5P6z+Oy8Y5v2mtpHjm8/bhl
5Bg+dfq254HH0wqZj8/fNc41RNx9tIhWPAg9nqzB0MsIQZl6N5a0Pgc9i+Wx
NKun2WfPLIZcmlx67mgrkHm9/7SDwocfm7VSRLFJjsO/GTD0ojXP2mIgW2ft
R3suCFJvziONwuJi+2Qxbdlv7PTlct3luZX3X5HvGczQB3PVD4f6l9Oi4Xqr
ftw4Wut2+tikai/cVUZhjis8K8pFZPtxgvutIY0ndy5576gv4oMiWqT8aZ2P
BUNdl9yLrdCvu3Gsb+9slO8Rnc9S4YNyaVk0Q1NO3NozmOXXup2mrbborZ0j
ovllbpNuD2LonO4NpfA+9d8PKsFxxl7L8+l2iNK72GQ+sdHVZcWR9b9/eg3a
vzVtWgntFC6zaDFBSA/2L9mlayi7/MbrU7L2hkWzZPREnPqsQkIeVyUDFjaR
3XkKIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
ENaHzd8F+F27wpLFeVeb2V0Zcnvapskob+Tt/EvF84MDWz1lqcNQThS/hqFF
ngvfRM2vfa5Ufbsnal+6/SSOzguXvew8laWTi/UtF+s3vPy97hMUVh/LKqLR
VvMZ+XwBKY7IMaupbnh1ysp3zot73ev/nI4H83PHDSmj77EK7pYPZJfHJSvT
rPp0MhjK0FfP+ZqL57KUrCJn5+zC1bod1rfHErtgCZlePaLrLM9SXEK4XfLo
2rcD/xnvO6l68h9KaeMmrRUTokvJYIyO98cjbvX+3FaDNJvMEojIgDvW0X4L
Q/RSa+tb64aXf9g2oNeX5iIR2Zye6mDjxZBwxXbTHbMaXp211dJ7im3Hc1nU
tSV3nN6V0uUhOTuU836/fa+2jhGHzd87togClZ5cunlRQJoP2qa7l9X/eVq9
IZB5MYij/WpvHe+KpZR6elaHJXpimfdHfWm3/umolBSWbrjtO+G7kKGdg15d
OzGs7u6Bcy4yzVonsLRoVGCCfzeGQs9tnbpqF+7hEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCGFd6LGfVRIvLaGoAx/X+5kL
SfGbxTjlsci5+lUcFpAjf16YRTcLydm5XRnN8xU2S332646vm8+D1y1MXtGd
sep+7fYKaeetxCEjFjee9y09fSTPf4GU3l3atvSGAkcX7S9MiM5FPuS/LBgR
3dtwL0c7JjrIFz8pofw7+0deiHWQWT2WcpvPWOaIyCbsbKf76xha9nXn01GW
jT//8GeaPVlvUbS0mBxM+l3Tayqk6RNVnrTr0HjW18+ct1LVoGP4c5o88m6N
3vIy4rfed0nncuN/r1/VgBkLdCOCC+le9JbWh7YKyHPpeOHKFOQ2QwghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ/lPqWA6U
tnzEkpI4yt9mCUNzo7ppqBnza92OycbAfRa5fJqoL9AZfr+CSuyHPPCfKv3p
71snbza6lfmSvlruTu/4gUerc2drpZY1vByq/TWHVa+F8qjdyXPZ79tX0GPD
4D2j+YzM6/qz85YbTLe6x9KIbytWJUxjaP/1vUy2Yu3H8Xezq5zdvePWIlo5
ybZT4ACGumwuvmzdm6WobQEzpbd45Payi8Xk3hWU3XaP6Hpl3Y37YaeCPR9P
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
mX8s8+4WCZVmTDw+Q/zrfud2dozPfWnJ0Gf+ri+XnVmyujnBJ2FTw7uHQwgh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIfw15PIn
Pr1SLKCSdm9ud54toWMlQ5XbRtc+R8tErcO7mYOyyEkltNvlhFK6k/P6ykXJ
z/PKJoWfTdqZUk6Z+mM6lgaLaeaelY6Twmqfkwbh31HfeILU5wOPVoiVzfqa
VNBQ6SGeclMpmafIr6v25Wi5YP81x4cl5O05c8SZXQ519tyobQEzpbd45Pay
i8Xk3hWU3XaP6Hol5v/vKqWHHGk37jWNn2crLMwSUtEPhZjXB36+fyZmK55p
HZ5Fii32PXjFlNJx97dpXQrqPx+yV1SP5s9aCYj/Y1F207IKunfO/1TZQuQu
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
wl/LuEMGNyOzX5J66kuzrR95pH3pdMSMsopatxMoN03rxoLXdH1UU8sxBUJS
vd7RoMj/57lhfh2Mv+kksKRf3itBUYOhzfadTxzfzaPV5qcPfbIU0j2HHxvH
HpXQm/Bifkp6/eeAVX0qvLz4BUuTLj5UaxrA0LWHE2I8r/NlPj6wfpU+37ny
3XGGci66jc+cWE7dczKvh5yP+Gl+Y23b37XBQM/9j3ZvRGztv8VSTI8uLysy
cWWoq5zdvePWIlo5ybZT4ACGumwuvmzdm611+4PChx+btVJEsUmOw78ZMPSi
Nc/aYmDt24Gy1VD95vfO9/NpZEu3ckUxn1TJVKNV4M/34Z3miZ/3dhaSRqv9
sbYeEnp6uejq8+tSOnNMKzz15it6WnrBVfeckKTLL9/23FB3+Y2nMwN7ip+y
tMExy/rDWoYSuje7282RT4csxhpuOffH/jnN33j0NwnFrOsyy2ooT+b9CiGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC2FC8
0+7kC+0Nr6jrpSs2T4OF1LRrkuon57rLiYKytfkH391jFZ7TgKOHxws0yihB
5al+/ye/3/iqqF17JE4ooWafY7bwFwkpRig/0GZK4++HY8fEbvo9JHTrSq8R
p+5KiTF84N9alZN5XX/Xo9z+sqauHCXOH7L4c3UJec4b0HZGyWKZ1/VPO1J1
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
t2Zowlgd2/TODS/vUVZOmtBx4BBTHnk9H9krtFRM76aJZmx/xNT7cy+/LptY
Np2l3UV7i8cd5KijwtTZ9n0r6SRbEjnNvogGNJu5/NA1AZkc0suzEFXIvJ/+
afX2mMXkfuNTu4S0ngfyK6jDlSfHC+dKZV7XP63H96zp1Z1F5FEaUG7RkiFb
0Z2Uj+0aXi7i2uiJo+xtGVIXBezr5MrS9WVMlXgLR5zlfYUvmSw5ZDa90m03
Q/03qq55Gyy7/WdrdduxkUZS0g93WrGoik+GF89Zlvd5IvP++7vOMHfepZpa
QW4Gy95oHZDSMIeA6DWfGt48qa3zlhtMt7rH0ohvK1YlTGNo//W9TLZi3c2f
1s+V9YtVBbQufeO6eGEFHV28M278Yil18DmS1X2siAR6YZ9LNBnyKuyTl/pf
5DrWWZ03l4cea5tPI4WM3gC/P/bFqWEtleIa/7mgHzrIaOasMtp9N+nt3Uci
2hkdlBDSvf7P3/qW5zp4xfp3UtrydtXBGXM4Koj1fjtTse6+X7w7rgzSvcLS
O9+L16Z3YWio4a1Tnzx5NKfJkRap71hKLODSQlpKafy0oIIP7M/vh/XtrDtn
fFr+8d2hct5Z+XF/liq+VXfaV/TrfncYpZx8K/eEJU8PF7sHzgw5TbU2dJpZ
d/uVRT8tq48bpeT7zFFlREeOsu+sGl7wCrnBEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBC2FDdZHIoePlulk6d9nvWw0VCGsq9
Q/kPy2ReV0NxN2vG2xpQSE26b01b4iUgke/YmJsPG16+Vk550YeadoU0OWK0
oaGtgEY5L599+mLDq1NF/65dzjsRmW3yH9V0F0PhrukjNtk2/jy6unKHzUvj
QZnFFDH0eeEnLSG1TN1gere3hF6Vf9W7+ExEOZsCjzZ1YWhfTGjQD4tft98+
frz5NeYQQ3NTU12sFMtJrnhT8ANLv1q3o7Zj7t1oeY6a3gm8sGiylPJXl2zM
DxDWe/3Nn3xePr2GJW2bSc6jRkhpfqJ7+sqF9f/cxqKbz4PXLUxe0Z2x6n7t
9gpp563EISMWSyjNqk8ng6EMffWcr7l4LkvJKnJ2zi71n2MmtVrgWq1dTEtj
urZd9UZA58vWyW9rIZF5P9WXqSZvIrrriilb3+JI5xiGQu977Li5qvHvJ02L
z95LH1tCSvLazXaQkKp2G6Zu1f91x7Gxe/jEm/yh0SzxwoPCDcUSanVGZ7fp
93KZ1wUhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEL4
u9h6colbwSmWXr7wEcx/LSHtA/PtRwmR/9DYfHJ74r35wzg6vPBNi4vfpRR2
ZOetF05imdcFZeOrFZn7U6w4WtxEdDJtJUsfXGKHFeyt/zw65Q85pjdMCuip
7YuvXloCsu08YrbN/oaXgwf/x49Vs7/pvc2m0fnW8cPalVMv9a5ZEz2R1/Tf
2uyk2WyFQRyFWayQjxNIaf/ANlnOOnW3D8c5rKm6fVNISjOMug3IldDiIK2Y
L2+kMn9vWL9O97843M1dSob7B0TSBwHFNdX7uNM9S+Z1NRQfzLGWjskT0vB2
fXhX+RK6/HRbP/0vWBcQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIoa1eutJi6+SxLojcDwld9ltCXO66jlvflybwuKBudmpsN
8hvBkVnknElfm7FktWf2ZWcv5CXC+lG3qvmOJkYceX2cZLNfnaVOdpEHJFdq
P9+iLIdkOGwopMLvU5PWrhdQ+fZDeU3vIl/xn9JnQ/el33q9oJDY5Qrt+5VT
pb8ta+uGvERZq2W8yN4yiqPA7YE9D06tJL9Hngfbh1TKvK4/O4GLTfl4T0iK
DgesLuZLKOxk+xbK75FT19gs7lAj13WTlFp82tcruIWQTnpuvLs7JUvmdTVW
Hy/Y+rSwTEjb1riHXJVIyGmYMP3Rd6wLCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhL+3e3I9Jr5dx9LwD03jbXQkFNZV4drc
dmUyrwvC/8vPbufbNt0ppfDC1dN5XThK3PNx9ahyTuZ1/V29FB6kjE3KI/8F
W0uXLeVT96ZHDc7eQg5kXdvG2mv5pbkcvQhY5zfOn6Ut2+esnsw0/n7WNl5d
ufBrLi0pWeXSfT+Prs0xSBQ0bTw5lsKPX7U8eK+pSK/Nlns1Qro3SvuJ9pnG
U39dOSfsYKpdKUsfm60JVXzIULt7zeV/GAhkXtc/7S79yhUPKhjaojcv7e3W
MhodX31vRatNMq+roagzckwbl54c+YpvqybektKtJgGbXe6LZF7XX3V3p07J
1ctLaVdEctG18SIK8It6ve/577fe68rjmquNIufmknbJwXsuY3hUs1RO53NX
9Oc/pceuZZsfTuDI4tSOqWuIJZ2rzruKO9TdvaLlQ01qHZlPmmv63SvM49PU
p1+P64U0/ntLfRu5JMa+rzNLoW+uqvmGcaRWcO3+K92GlyPd0JymUtHuxA6W
ak4fPxiyVEJN9/Rw2XoGfx+AEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQghh7RWrqsf08WPpnHt2rCRQQhM+zj7j37tc5nVB+N/4anm8
6TJvKSmdi9H6qsbRuBjO9VJZ488/rK3FCecuNLmTT2bxdxR2CfmUN76Jw+5A
5OHUtS16Bm8wN+FI90dSWeEolr7p9e1g26zx9/OdFJ/hQ/q9pOa5bY3an+QR
74TGLPHXxv9etTU4NdVCpF1KSSvFxpndRDRi4egW8jd/3dyw0/N0d7VW5GjX
6KOW+jZSWmYZZj7mqlDmdTV0L904WqWRxpBndyOTxeFlFCZVf5eU8fvlMWr6
NXk1x5GjQO3snBm3Wer27PwX8fzGv16MxGpzPQ6UUnFFbocnNiIaF6w+akNJ
43+v2qo5pmaO3MJc2sG1DAgkHtl0WhA2GTmKjU67U0mGISM5ch/cqoDfkiWt
zNiCo3vEddZ+En9ifKRjATl6Lrez6y8gtnme5jD/3+/+UN/q1JQ8frSJpZyz
La0XneZoQrfVfpojkN/4n/SIWxPZJoClMw/LPgoiJNQipUWXXuPwdw8IIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+GspDR2XZZ7A
0qvKedVbNRg6o7Td/aUPT+Z1wdo5Q7dlh8mpr2hPCZfb96KQMvPMIo03Ivep
semQmRdltCqfVI5phGy5zSevy4IDZpEVlOge26oqVkTaAb2Sxs1jqKIohs4a
szKv95/27MGCg5raZVQlr6eickFEGZHNx99uz8i8rr+q3+QM7XkWIjqeOyJD
rM3QfGGz+Qd7/H7jOJoz77fjOEO9ds+/IDYppxOf+ql+Hx4hs3o4y/sKXzLZ
P9Zf0yvddjPUf6PqmrfB/Fq3Y67bzL38A0t9jFWZAGUpeZ+OCEpoKrt8zk+C
sjznXCEd3ua05iJPQiNjOhw9Vi2tdTsqatceiRNKqNnnmC38RUKKEcoPtJny
+50vNgPiFd6XF9E2211ThpUIaGJJTrcO33/d3LwX324u6TBRTOpGNSFbrzD0
vbjnB3V32e1XYzm9NlvUX1FZuOhjyBYh5azwzVxq9/vNw99No2Y9l9mdZelC
XFzR5yoJxV+6vmuUNr5TIIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCH8dy4rCe8neMvS/Q9L20xqLqWvy7YHzxAIZF7XX9Vcz/L+
5PssbRdxcotnMGT4fVGUo3Lt86DqyjmjgjXUKlk6dovxif/KkNPmSP7TJ42n
P+F/58N+ZjO2V/MpseXNuedeVtClzlemJtvWPr/rV1Wl1YMPW3o9p6NaGe2G
DiojJYe+OyY/lF0eVPu0HncHl/Ap6+6sT7GpFWTW71iigRXG63c1W5TSu0ab
pWuVQoH8eo4qQpJMqtUqZV7Xn9W68WTG0mApddHesmz9i1LKvtFSTXjNXeZ1
/dm10RNH2dsypC4K2NfJlaXry5gq8RZO5nXBf+/+msOq10J51O7kuez37Svo
sWHwntH8ustrNfYrLT63JosuLP0s1sktpfeBZadnlTa8PMCB7z/1m1NZRuP3
9NXN0hTTN+WcAzbWjSe39ndzgnPKhlMvWArdM7zj+wCGXkTLe1TerP/7v/+z
7Djdeyy9TSjqNWoaQ+FWw8b4N5fdd8cIc5dM8TOWmha1+2jhxZC/xl0uYofs
6oEQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP51
jdZ6rpihKaV3QxaLnUpZyp1n+Kn93caT16TZ797MwiSWYm7stf2gw5BS99sB
uWd5Mq/rn3Za0tD35vM4ajFg6tQDgSyJEr/pjn9bIfO6/q5+nSqHqAzm6KVQ
/+q5Cikp/3/s3Xk0lfvfP34hIZUMKQ0aSUlSaVIvjRRKk1KilKJ5TiKKJGlA
VCiRSiWlNNGkkYqQed7Ye7P3vi5NlMbvude9zrrX7/O73ef4fDibPP96/LPX
db2u9/y2Vs9Yk95JIyob7fk9NsS1G3mJIfd4DZUVnwX09XSM963+DR8/aisi
z29rx5JZn7XDuZ9YCp85zHDpiuaXI9dYnheOKjgnV0hya01G96vkUsp5vkKA
VNPnetlLPI9ip+aT3bW8CCcHLhWZbtked7vpx3lX2xAFqy2V9Oh4jM2FFCEp
LNnS47wnI7b279/BTTXmB0O1KrGGafoiOjNoz1YtK16Tv3e/0+N24Z34NNFq
88JAaSEtGdB54MAO4muHSMcfdm/niUjQ3T171C+GXlUESizNaPr9a04fN9ON
g0UkX7dB3v9aBZ3RPnue/+W52Oflf2qoRvGT7UZVtCbw4IETE0W0nM2QPpT8
R//KfBQN6smn0pSRmw0VhPTYlesQ11l8/S4uP9fmxy5/y5BJzNOukgFCuvN0
ygWXu42Xt6ZZ2CH64GA+DfxQ8MNaRUhqM1KzvLs0Xjtb7r0u2c8+h+ze17ga
jK+gLt+9nzi9bPj6yd489PpaSRFdfLPzzbe1PJr2tXfUvjnNL9exPkM2rCpS
vMDQzG1zFu4TCmjNi9Ne2W1bzrkxfKi8e1AwQz/f+7ZZfJulQQ4zclKo4eeN
JzzvwhRNlpLvaEgYpIpoQp2p0WKG3+T1d3MZPWn+MJZ6vj9p8KtGRM9zexfn
zGu8c119fj68Y8n0BIbuq3aSZEcJSfXIALfA1+Lrdz03n2LTDiI6vWGIYXI2
Q5JRHfMXxrec+xeEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBD+ri6b+uSp0eU8Ssixm5xoyKUhL6ui7p5q+bmOrc09Lsv5P4wy
qdN4jkPAjTL6td81lWvccvKyWpsJ2Vdu/DqfSX7RS5fu5ZZRp9iIu99HCajv
hrw7P4aylHHpojLzTkR1xp7mF4ybPrcK/t/uLpktDApiaeWQ2JezrhbRys9b
wpf8XCb2ulq7OhIKatbdskhJ6LHdtWc5bfG0s9bUrH/d27ZU2mJlb5YsGA0/
yVsi0uv1foVDTNPn0cH/W3Vmv2H24ExSqkq3G32xjAatqdmrb4r9q6VZlrF9
y4FtueQjlTD88OMKmvj93LdvYThPQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIWzehmQEfrl1MZ+658v3iPbkEjdCmLs9Cfk5
/5RPVbsffjEpk2xUjTZsiSujpOv3155GjuJvY1bIs4NHpLJI/7ZkQrpSOfVQ
N0ny1RaQ0zm/G/qrWHIa7fPlQCJDVzjj5KatRL83V1Mzzv0McmJpq2pkcZWg
iIK9Vs2Id1ku9rpai2UXLV1oUhYNH5S4eM+wcmJk5t1+ptH088V4eVRqgQ1L
y84YJspEMMRqtvGYqYJ5Km4F3VTaMJ6ZlLt67P7MzDKaklw53nw8+kXc/txT
mntoQB7p6Hws/NyFSyG3vn6ash/nSQghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEMKW5qrFoUbdnjKkPKrturFWQkrd2XaCfr8KsdcF
Ifwf5S+ontr9kiF/ycfH7TcJ6Y7i6xOd7DBP/7RTR+Po0oclNPm5lvX1Tzzy
rQnaqHMWOUW/i/Tk1nQ1A5YskjWz6toxJGe96kqIR2WjPd+u3Hz+yeB06nnt
KXf3Kg5lXOkaeTMW4+evnKOi56p7i08SUi9GxtsJKVNJMVV9KiP2uprKT5sm
ZE+eWkVB+7dMnTVFRMI5h8u0X/2+32tUI/trupeIMva3vb21opSi2WfuggHb
xV5XU1lc9k0/JoVPmc7HTkhuFJLPhZDAX2Ytp3/NhjtNCrDlU9H8+7xnw4Qk
+3N/D6mBLaf+prbY3Nk3mZtGNboJR7535JB0/tGFVSniW+e79q7eNE+LpacB
UYf100Q0Pb5bB68PfLG3U1NpeNmnZvjzfEp0GWV615dLn93MnlJKy88tfHD6
sc66NIayNyzKfbNfSI/CdaYvCcX5vLm6vdeAjzVXGfKN+lXYp4OQjl05c3ry
knKx1wUhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQ/pcWwq3Z9+7l04cww20KPlzynr0uKepVy89raizNHEIu0Ys0ypXsGy4n
waGHX1XvRWc0v9zIpW/e5fn/FNEv9onKYFuWpM1T19u3rxZ7Xf9qv5CHtw4o
l9KRy1p1hZ35dHxceuyeuObXnuIyzbL49Zl4lo6PcJt+a1UR6deWvJcdvlTs
df3TelhmGw15U0hhw9LzazV4JPd8x7RH/Rs+TtZe3bilwLaS/Lef/hnxWEi8
8QPaqu9GXmJz1Tj2fvDZQelkN9kx9poeh+YtWtRX50nTrw+vPy+ZueZGAb2R
uLn86RsuBcuqbVKrwT4IIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEsGXqp0fv9z1gaFWp7I+BU4RU9nrWZntRudjr+rvWhC11
jXjGkPClvY2srZCev38101S/Qux1/dN231Qls0yPpb6ju81d8UFE/Ze8WrTD
tFLsdTV3FUdeuBqytpjc2mvtfnOMRxEnH9zXW428u7/yptfpMSVy6TSSb+B2
vjeH5j113WOS1PTtNpMbnd5Wp5Jiex2YY3lOSBE7FnpdW4u8uH/KvkEbZDgG
Alr6fVMu57WIyjcHrZ3bgxVbPSsLgpeX3RORTpexzOiYUop+EmT8M3lrk783
0vGH3dt5IhJ0d88e9YuhVxWBEkszxNcO8J9x/YxzR2pn8SjR7tfOCScE9O50
YcWzP+ZBYz0/5knqyCz7NDoe1qXNorRSMjYZs7uY03jr6jvT6TGMZxH9vGdZ
N28uj663YXsZT8Z+19JUi650ju3C0t0gXZn5fiIa02aRXZtZ/AY/RylHT9b4
j/O/34HBU8ZNFpL+HOse36qa/vxv3Hfuu9oEhuQH1HBdxwppQLGiF71tOfcO
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQghh87Ez
z0J4Q5elDVWDszuKRPQxwe3uj7H15+89rtU67N2GpYX5zwtsJ4qo85rC2e3c
ePX+/l7bYWf0VjK00rP29b2TLLWvW14xXLe60ervrW58yiaFIfOFao8muQgp
u/bUmdm7xZej6DTMYYdChYgiHAzf6FiwNCVsxjoXycb7XiheL63y/j58M5fm
cJ/lV6gLSH9G7TXjvSIKqFnfTSosj+Z1eRJiOoZLqx8unH85pIoi1pTO6J/G
0JdDkpvueQlpxGFe9dGTrS/nUzlVKvpKJIc0XI7cCPnEp5MK7aInjhOKrZ7A
+/3OajxiKG5xQq+RM4TUdZDB1N7fkeMkbjOD60zvCXmk5nB1lek7Adkc77en
W5uG52TKr5v7umwbQ6qb/ZVDI1haFDrw0s7h9a/D1/IMFC4aiMghvfxDJKeC
rHeHXmadk8TeHv9qBv9Z/5+aDN2p5nGltrNUdfL25LquzW9/cfqRNrtOjU9O
pQFlZnJCsuI/fFbTCXmnf+VRZaPvg+IYGlXWL65dTyHtWqZ25pRXOVny5ear
vCijp3p6tYknKun1Kv2zqaGNt34ubZN9PSwtmxK/yUd5fCqnZ15XXkdwqhrt
+dvcqyM3eleQw2J5q8dBVdQuc6Bp4vDGy59sLL/P8yrbf48hu6UPQsMN/9gX
st7opOW2vn1B5d6Y6ScOiqir0pBBQ3qxdHnclsJnFfXnxF4vtu7UOZWhSOE7
Be5uIR3pN89n8L6mP+cslh4vVBnKUp73aVtXRkS8m3a9bk9o+vzwzLcqEgfK
GXpmd+aVdNof32ujY6i7kCu2/hp3fKimTK6I1iVcSF46naUzgf1sNv9Eri+E
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghbN4e3Gbu
KfRnyODsqQ72YQJKN3F7/ZbKxF4XhP+XkikVU8zzcmjC/WGXlbdXkNsjRetF
dxovr0lcnv2Q9rT3IJasvk+3fpYvouJt0jEyHZs+z6e1ud1DstNbOS7dc1Z4
W1FSRYWyI6+Msm1+eVwN9bJDrX2YTwYF7TJd8qOQQ8UbKWKqr0Dsdf1db43v
+DYgjKV41xnmnBnVJIiVCdh5XHz5fjPMz9QtC2TJLSpRpdNGlkRF3TuM0mn6
cTJtpe7yH/4iyo0oL8rOKaWEblO0v2ZuE3v//NMuDD383LqUoZq2G0LaPRVS
p0QZqV+jxZczVp9Hbnp7PljAkoXZO7/++xlaeKP74mWpVbRzreaQ5Y/TSX2L
7ZcvzhwaL5pS5X655czHpvb6w7SPFv25pDy31LSYrSLN3fszezq0/HW4uWnn
p5Sm15almw/V7g2bJaJPkztG1kXUn1veWL5qU1ZtNC2XIp3jhA6XK0h4tKJu
8YWWf06D/7eFY9bPLDrJUGpkXmHEXQFV9N+3UtUT90oIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCJvSQ9sd3vgmMzRp5gTO23VC
knS0+/h8YUW9v9ebXLyOd58hJ+PIsakThTQiT+X0VF55vb+/FnAgd2BPloal
xI95elFEXoce3ThymC/274bw31FOSi/gbFIaBc2MyrstwaF2c4tGb8sQkGUZ
z+PEzVLqqOGybsc6Pl0wtUh/LxDQS93K1MPpPMp5mbXMjSOggdcmWM/8grws
CP83layrdOzXs/TLP3nEvUKG7PM6OkpdaXj+npTHaqN2KSJa0i1w89DTpTQh
vGJ/j+Vb6/29/Lq5r8u2MaS62V85NIKlRaEDL+0cLr4cS9g6PSYxUyPepoTu
jpGcNT6PR6p3VUYX+AtoclflD3OHpJGDUkiP2LhSephZciNG0Hi5lJN3HvMx
y6qgqaO4g0Y8rqKiZXpP/M2xT7VWe/j1jHj4hCGZaeNe8BcIaWuyxIpEjfrv
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
c/NRjUdtcLCQEjbrfgtI5dDmi7bmJVIuDX6O1UTLqvVJDHVQ7S4zNZ2lrt+1
zEfMqj8/dob5mbplgSy5RSWqdNrIkqioe4dROg3Pu4P/jKJHlp0mTyoiuzIV
D1cjHo3I/xihMlpA17oHPnjQPpeCLIrfPz1cQbyR2/VcriH/9k/9+/l9Ew5i
qWpSmdGzIhGZW6jJZaq2nHzsluJmt4zVk5zzSGvQ2Z2VulxyqLus6BbY9OMw
Y+iQ3nfHC2hYQtboR2kiurO9w/ewXsgh/N19WhAaF7WTIe2TnyPekYAulQX7
+xhzxF4XhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
4b96Sm9lXtZlhjr5uvU5+ENAumHrlt0eUS72uiCE/+PGZeEyk6QKaewB54p5
PC7tubnLzF2y8fLoWro1HmXeynKVdCdp+LpAPyEN6f3C4uNS5Dr+LvKP2Crd
ap9PIYFmo6UXcmnnwgk9mCuNlx81+vqNbxPfF9OX6+3rzOJ5pFjmPdfJHfPr
r3w9Pamk/3uGeAb22zZJicjs/IWod0VcsdfVVEoWfzRfcVBIL1VXrrj0iUPu
rx30HLfub/Bz7CrVg3LihPTpyzTv5EiGHL3sjSJCm18u2adNE7InT62ioP1b
ps6aIiLhnMNl2q+wrv5TLuqTK/dIKo9S9B8fHyzLpTfvL7qmHKh/3Wu/q7jt
FpsiuuYxl9lqwqNTHbeeTjNsOeuY02HtXat7sLS3Mrvs03kRjXJwPGu0Hzm0
Lc2SHB/hS6UCGrTW6Y5NBJeqs8eLeuQ3fL9WWbJd/XZVFRWVqYgmh4voztSc
B6skm986CZunAovpO00DGHqkbnv+zRkBxdtce793Mv6fCAghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH8Xazo8m7Z89NCMlvrbmFxgqGf
M52DRgcil6C5+m6Vb/flFxl6r8HNmvFJQMKHe8df6IGcw3/X651PS3c3EFLH
kU4jNZcwtHvhYb9OmzH+m6vVl5wFolCGcq0+CYc/ExCvzTObwRGNl4MxzGCd
QH0USz8fjuCltmdojLmmZ8ChSrF/d3Mx9YNF7YpR+dQ/Tful9QoupRiMtZ18
s/Hy61qbBQFOSpGvWfpwf86QRSuq6c734leh56sb/Bz/o8ukZWaW0tIIKVWR
Pp9cjNcP0EpqOXlZjWWuwqF+1v5C2rm+/xtTP4aWqgypVfBr+vV8ztRQL74h
S48L0irUlatplnv8yHnbG96P8L+9aW53dscoPm3wmN1LvbuQAmV58j7qDc/r
2yT30dZflyWz+3dUjgpFdDAupm3cmOa3nl/2npPYN09E30TnNg2O4pNpdadN
HQbmiL0u2DCnsFHPahJ51M7ukEVMroBCIxRlO38Uib2ulqr/g+rhC4uFdDJl
VXe6x1Ds5XvjAy7hfA4hhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIfy8L15tVxe4SkpnjkK4ungwF5EhxNxxAzsY/Zf7K8THTIxm6
6rGlti1HQOyDK47egsbLtYPi9crlF/7fJgnJ60Pb4+tWMDTfV+6d3fbWN79e
Tjn9IuIgQ0NOtI0t9hDQsQMvgsd94Yi9rr+rwphNezgmLI3p7OTwdSZDm2ba
eM4wbDn5h+bfNYLkO+WRu4/vwesduLTFIPGsvHfLqb+5GTcqfEdQKEtrh81/
b3KQpZDk7pNltzR93tcdhS3pJqqldPZe+xt5Snz6dnFTmdrN5pf3OOqOg6fN
ISH1nl0UvvMwQ+/qHJJtj7S+dW/vZFa2pz5LSbEPe374IqLzhus2eFg3vxzC
+uTe9nnUdhif/Lq+8tymJqQIrQXptl0bnsfYWKboX3rfazRLHcKvOJ/rxNBA
reAZR443XnsWJ+8O08kWkbyEm9zoED5NC7zr1bMmW+z9AJvWe5dTj828zyMJ
U92fCtkCKtjKLXd/j/zGPzVT/bzMLktIlS84+3RvM5QVPPrm0Qutbz2HEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFsba7e
LKfQL4ohjauXHfyqBVSQlrF6iWK52Ov6T93PjVvZbXUhhRZ8vWIvxaM9vSNG
PFdufrmOk9bkVuRE5RJVF0ReLqigaL13C78dR47on9psPLQtsbuAKr0/f/e9
L6K3I2bWGig3PCctieNyql2HSnp7/uCe9AAhKfW3n2Fs13i5ixsHlVUZyLLU
7mV24elFIsobFah5/RGP5qQciR8wpoRyVvRYcDqVR4vNbVYc9BXfOOymcPzc
JX8hPRsjf95ZpYzedZ7IGesbIPZ+bi72C3l464ByKR25rFVX2JlPx8elx+6J
a7z+6t/BTTXmB0O1KrGGafoiOjNoz1YtK57Yv/tfVRr1yDrzA5+Mnf3HSO4T
0ulNr0c6W9U/X37Ol9caureS3GutjOSzhWRQt7Ym/ABD72N/DZy5II9MTQ2d
2g3gkpmBYp8zR7C+NVd7T5FeH5xWQIYWS4RSuVxqNzLT+Gdd0/eX09WjvSeE
M3TWtOs4zywBPQzbMCv4NXL7IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEMKW4OHTad3nDSonyp2fUJBWST9GpPsMeCAUe12w
YXbdp5hZbptGrgrPp25KKaUVkb1eviprfvmN8P/WrNdTgWIwjwxyOrr2eSyg
zdc6WF/iiuhOdOLrTzIcks65GbE1hE9hueErpsm0vnm6M90scb8DS3HGi4vT
5YtpwvjVw1ZPXyH2umDDvHQ473AvTQ59ltJXUrrCp9RwmUkPFMU3nvW9jS9k
fa+gTnGv+h7KrSLlG8mn8heJxN5O/6lzt562uzk9nYY7dtbkEYceWLn4zn2A
feHfdYrqfPNhy4vp0IqHEzX9eXQn4SA3xAHtCSGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQwt/XuVUyWjUzhGRdMPREtQNDdvf73Vfc
yYq9Lvh7quPiM73Kk6HgVaNPbVstINHlDZb9bnHEXldzcVCvJZv2HmZISTXW
P/6wgIasFFo4q5SJva7WYvnu3qP67K+kV8PbcrNyhcRkDDMyPciIva7m4sCa
vXJmUrlk0FnDOMKngqqG9fRMia0Se12tXR2v2a+Ek1jyiVbpt200Q71U031v
tWl4v/T4pu6ifrOKCn1ePPPyEFEPn7EOCe/EN/7lFj5RHzKngowWG/Xv4lRF
oUsOlnv1afm5YU0tacfm+IaUkUN7oZqWeyV9U3W1Gnq4/vy34F3FLjX7WDoj
P+/J85EsJWvukz59rOXnH+ZZvLR69Z2hB+FbnXYMFZGN5RZ2swVP7HX9/zRe
XiMYz5KZiZHeoQEMddo3et2BtEqyvrC/V4WmiPpxVn+KCa0gyxPRpTusn4u/
3n/YW+M7vg0IYynedYY5Z0Y1CWJlAnYerxZbPX035N35MZSljEsXlZl3Iqoz
9jS/YFzZ5O/l1XzTcCovoQL9Dq6JP3mUOEYzWfMi8vH+tP/iXO9Pg8upvwPb
80V6JVn2nLwu9v/IW5Z3FPV3CWZp6NJejy09WCr/OlNniY349pf+z+PCVE4K
yPdVn3YrpBkK8p47wWJ867uPD3NWUuSYsmSg3O/NzEUM9fmadvOxVcPPM6tX
HndNaJNHo5cl3dNtx6VvHTU69fLBefWf8viA6Say/avolc1QG69hIpL9uKWD
xKPGO09+/NlzZUkwQ9Whj3tvvi+g28w0zZ+HcF/+K4cXmy/1PsDQiUvVw0W7
BJSZvO7ukXL8Heav3BvD3zV8opCmVX9KWrOcofYjH8Qnb2t96zOEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgj/vgOKjIp/BjO0Peat
fNV9AfVyu711+BHkY7Q0jcacWbp3bh7p7Y1N/9SPS96Knyq/H0aOTWvVJOW4
9HQ1Du0Obbv3aiSfhm3ddfJx+6bP63Oo0rAozhTRIpd5A08Ys7S233aJ5T+Q
f/LvKhxulmRpwFJIrfyTKlmGriXIJbb3arwcOUslTcUfVVnkETw19pRHOR3U
rGND2iIv7t9V367ntM+ZQmLHL74YfIxDJ10GTfp0xLne/MaGPj9F/9L7XqNZ
6hB+xflcJ4YGagXPOHK86XMFf1cTsq/c+HU+k/yily7dyy2jTrERd7+Pan7j
v22E8QLpISyFmq2WusYVka9Oh7Q1g37ffhfx+g1R/GOcH90cY2WjWE2x6YMq
bmytP8+z8Kh+6gI9Din8kNqZd51Pcf2Pbxii0vLzaVu6kUG71DaV59LawkDO
oi8VdORu0sEcnEtbnG69Nyjs92PImDewQ99gAek4HOrTXx/3RAghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEf8/oqLF6CZuE1L/tfdP8
3QytlTRQVPNCHhFsGgcs6nJF5ihDHQdbhmw7JqBB87317fohJ+GvrPiwatid
4wzNeHCQvz9WQHOkrCZKbEC7/ZUmkYlLFodXUo3nIOWLfCE5tv1+Tv0YI/a6
WqqRxTUK6va5ZKDe7+ze+ArqdPvWWN8I5NX8U3qf6PFu40iWBL16jt/XlqF7
yzzOj3Zt+TlXOpudfxpGVlHShgMzf+4UkUj9QpfOwvrn6SyPle/u21eQvVnp
8gEeVbRJS3FTt4EisX9HS/XxrKVJCTVl9OqsvmSfG5XkfNXqnHO0kI6UktGe
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
+WtY4syJGNtLupic1qTw1/RaIfa6WrumTgd7vPmRRQlGu11nHyqnZQu1PDwl
m9+8mDM11ItvyNLjgrQKdeVqmuUeP3LeduRmtzT19Z8z3fq9pbffKwaGa/1x
fuBIGblubX7jraW4dmu34nn6+aRz/rMza8clwfzDMY5xOJ9DCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjhv2voBO6gD+2L6Ovd
ExH9hvGIXSc9rEYXOTkQNidzJh049eFnGmmPmbTfvDuHDpS4xX1PFt88Xb/A
Zrd2WSGtueO1a94AHqWYdD7x/9i786ga3/1//JRK8k4zCSFDyFBEmV4iCiFT
QqIUyRgRoULGyNBgKEWFMkRJIhkqqYSERs1773Z77/sucxR+77XOOmv9Pmed
vuf0PvXeDc+/Hv/ca+/Xdd3X9brue6/Vs+qB6Bvw/1q4XTrZLpAl45KitGeh
hVTk0TthZYxNo32+Zrcfa9e8ENGPtKsDbaaw9NMl62npD1Zs43VY+3lofBaf
PvfJSjgpKaLRijd9boUxYr8Pbd1ig9HTra6/p6z7d7I01Xg0JH+scUWvhver
cWm/HG6fek3dRlr0v7iylOaWmkt8iEbfay1ycvaXGvbNo+i1tsoyalw6+jvi
/Z0DyDmEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjb
ksoOivuVNwlof9jZg6MZETmyK9WODBdfngmEzUHppdnv4uYyNKxz3GSZiEpa
lBwWIelW3ODPGSnpFHx5A0PXRkS+WaQmoOPlT9QtC0rEPj7YslUOm3TD2aaC
2i/PkcrWE1Jvp9I3YdoMbX/f7a7K/Gw6odN+Vpe75fSj2+0rY74gT+avyqbs
qy65KaRpj03Nai8yFOC+fu23czgf4X/nr1t0hxdWQZaGpRFfLIXk46iSakbi
y2e7bPf+ZYe4IsrvHBuoeZVHt+atGlmwTXx5YsYT6rwychl6wonttuWKkJQU
FLTCWU6Tf6++7pgwKSuWhkzKTpx9miGpkof919egTza2qbnWhpJKIprm/UXe
xohDKu0HlE30Tmq0z9fcZyavYc0ni2kfD196IqQe1z3t9+1u+v2lvHzz+RvK
LI3L1bWs3i+ita8t86x1K8Q+3/+tCWcl3UY9Zuj6GjProAyWLKf0i9tkVtXg
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
0ONVahZ7p28Ve12wYXLHB3hs1mDo8S95g90bWToeLu/YTbWK+q4cYnQ3j0Or
ulXMup1cSSuUz/nLz2l7+6XbfoW35cszaXfnlKlOL0rILqxX+vMynI8tzXnD
ZZWnpxTRoUL23cBIHr3KMbk4aYf47iN35/f3I1iG/sjocMu0Rkjz+7t/qnzc
8n8PeX1kbPzmZIZ8ueO9ji4R0ssRDncvDuCIva6War/sAdbfHjLEvyxz5t1U
IQ3+ajL9cTXe6yGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgjh//VE2CtL92iGDr0MTL6rJqR79j826m1DTsXf5ZA5vyJcKhh6srXu
bkmRkPJeTD751q3l58nA/7eqK56fVJcqoKKCyg4eQVyS6LNkSGZOJc2ddYvf
rx9LNtP6F2gni+jEgRyT0W/aXk6myPTm8IdzXtPP6QMt8yeXUrbhjrO2Ccjv
EreKI9O/K5nwaRa3Z8qFGCF9NDn4ImUr0+Tfm5Ac7Ha4nEdzv6jLRwgFlDd+
4E7LXy0/1y6wn41xyjUR7TQtkzZ4VEKPHNo/kRnT/PIYPWqXSb5fLCD/hPER
V0pEZDn6greydtPnf7Y1kwP1r53uzqeV353UdgUI6ULNy8B3q5p+f2kvZLaO
1HhNRtEjVPoOKqUf24ec9H0qvn57kBuzSt3xPQUW/LhhL8mjPb1DRqUoo///
XZ5QqxqhNIylbN6YO9cqRaTImvZOHcUXe13/q12svxcrZjCUuzl/zWIXIfU4
eGq4lxOHojNHrL0Yy9CEPb8+LhwgpJdZWn9kBeE9CEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBC2LoOVlyUEnGGom2Tsw/IYAc0/
PTXlgUuZ2OuCrdNh7+U0jE/lUmBuf5ugTA5lph3J9QioFHtdzcWymsrPqitY
Mu83OTfiMkOFhgPHW/dGztLfpXfQln6vasopZsePxaemVpLLluj0PZItP9eu
sew8dkxOyr03NP3gpzpbpzKSPP2xsM4K61Pcnq7O+GaoxJLzPNu6LR4iku8V
/1Ndq+E5pfryEnYptizpL3aZ/OYWQ9xuxgkZY8V3fye7d18fNVtE3RZfro3U
KKU9+5eajjnkIvb5bu7O5D7K0pT9cz3YFX+TtxbRgctnbULTePVeP6Psp+eM
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
jGVpmcW+B84rGj4PT1MHuQyYXEEujzbWavUR0iz+nbu9e7WcHFHvFw/iSv0q
SS9YoqDESUQ9pu7ymMgTX/3Sm9od3fLn+pyQNTtaaaWI1iR22x6ZzWvy751c
4N5Ro7+IJL/Zdynx5dCPR0UKnTVTxH5//lcTkoPdDpfzaO4XdfkIoYDyxg/c
afmr8fJgZXy29J5TxNC53vHmUx8I6XFAsVtmP26DP8fV7s0qs3kVtM/JO8p4
sJAGXfFecUyr5eyjhmrtKrMx9EkFhY1e0GXUGiGtcKuS+Wza9OOVvnN1z5ru
eRSuOWX7FGUuCXquCjQ+0PTnfnIPs8IjfQup+G704QNjeBQ27s2zx3oCsc2/
42bZzlrhDGnevOZwskpABZlZjssUmv75/4u0U82jTIZKv9fuqHnHksZxpd2/
54rv/NVwqpS2+fP5sK+B+ny7P58P+y17vsRlZtPnFs6+q/tpxlKWOg6ZNeuY
L0MVsXXDJ39o+c+f+q4S0+/dZUipsqeby599rO+33pknIsrprenAvcs+C+mW
g/PZqFSG4jW382ui8P4OIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBDC5uftLXXq0vYM8TzKO377UEmJAbfvxe0qEXtdEDamE3SjPpW5
CejMEybU74uItnMio/aNavo8kNM+bntM0nLI8ev2zHEbOBT8Rb1P/v2Wn7sC
G9fV435Fl05lKfZzmMKlKQyZ37lc/KpX81sn/Xz5Pe/L55D3oZNdBUoc6hYu
I/8pp/nVKS6/PnwY2d+3iMyM1cbWBfNI2kvx9dtN4svdgo2rffTYAWcqGMpV
qdi+tFhIbnuHvlf2aHj+XnPzYvJEzQWlQiqV3Zw671Ap2R8w2zjEyFXsdf2v
nq7O+GaoxJLzPNu6LR4iku8V/1Ndq0LsdbU2R7yN/ip6W0SmpyNVZ0bzyHzE
7V6xO1t+35sddEjV+ek7Gjnulnm8UzlJlEsmzpZrOePSOTD3uXAyS0euq2ht
NWCol+rro7Ht2955LfGCYzwrL4cmJuheU97GIffHClZL4trePNQ4X5eX8BRR
UP6GueXqfz5vHvqywbAMuYitxU0mt12VrRg6rPvKamBmJZmPXOeT0g+/50AI
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCJveyCMZ
Vj+P59PwIaZ5q3ZzaflJiYR+ya035yfO1GvHYrtsmiMfOHvfo3L6dn5+nwMf
W+94lWZ5qeSYMqQwwHC+y8FKklmazDq+KhJ7XbBhfrnjxV//hktx/Yfw8+YK
6MaYl6HVISKx1/W/umrL7IWBHhVU9U1v6mZjIfEjDtdpjGTqvV7HYJPlnh65
FL77zvjv/hz64+rEb0U3KqnkTnflfUFCio6tdYtOL6UVDv3ffhfsFPv44L93
/lozm3QllvjxAZF+e0WkWZlvd0m7/pxJ4wl1Xhm5DD3hxHbbckVISgoKWuEs
p9HqOaO4VfvaqmIaYLSNu7OAR0a7Z9wc4Su+3MKyioXz1xJLsdfSAg2HMBS2
YffsmcV8sd+3f3VN/587Ct8V0gelY4JRjjxa3yF/eLF5y8l7bKhf9pUdUpbl
U1zqyPV+J4U0tPcz808r6u9XLd0u8ibXSx4V05SUgVbRn3l09Iv/Jp3Q1nt/
W7ofHV771t5gaOCOhevDpYSkdmVDQNb0crHXBSGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhC1VZzWvs6seMDTYrX+21nghpWrs
kjqc03pzXVR8VM7cr3pFn+7JW+0/V0KBu7JdpD613twhv7vt88cL3pLol8B2
nXQ5LTDYL3Af2nrHC1uWKp+N/IP8OOQsWbxdP6iSwhiv8GEG9edP7hzzJtbs
UBWFvVAc1u1VAXlwZ/BPZZvUm98o7vHBf6/0LTX/y5kiMt0/I0d/KkubQoNn
1dSyYq+ruRg4ZMSnqBeZNLf6zlZdyVJ6om6w8Nrr5te3TzwPWCP/OZ9i5SeW
Rp7l0u0Osos+vcW+gxBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYRtw7oM9UepMQwN7RORs1RTSK7Mq3HXj7be/C4I/067Xr8YOiOk
iIZW156tDeXR/fDYulFbml8OD/yH6flOa4cbV9DDc/e2zOgrJP0Rcndf9WLE
Xldz12/YRm/XoGxidkk/+lZQTm4pixS2ViLH6a+6NKZL1cokDqVK34tViauk
Py7XxHqb1J9rB+F/45KOGkcmT+GT0DMsZ3u0kATOvV+4OTN0/ELHoKI0hg7K
dZKQ3SgkN31JKeFSTpPXwz/UZdA5PyEN/uN4j7l9ysj8nKFajxh/sc9TS9VM
2mLD1os8Srz/ftycFAGtDVuoNoDf8vvGgcoe90y572lF1I5lowfwaKp2zttt
2o33HDVg1v1NXaRY2uX688Lt2SLKHy+6EPXnPIprvC/PpV7jeeWThj8rTbu4
FCgnVe2chPNU3H6U2br68gQ+9XVLVJh1U0iXtkraBG5u+PPhTo/Pn9uZvqeP
he4Zid+5FN5u1YjO8ngvaC3Kd9O6NCWQIfV1q2bEJAqo71aXkGsBZWKvC0II
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+PdZrH+b
ftxiaPm9VS7fFYSUSrbyk1cj3/XvsnBs6CdVvSK6v7Bg6lRPHrlXr91gtaL+
nJ+a348MH+ixNDZnSPjMWhHlFup2u2DLF/s4msoUz+GbVLIZmnNzZaTOeSFl
Wg8byb5p+ty5ptbfk79lUTqfPncOe/Dml5DCDm3qVXyRIZ9b77IqemfTKcmi
M+5B5aST+Ly33M+2l+ul+GXI6/LCIuIV6V17E8Oj1Rq2x8fsRv6VuF00d/gf
GheFpNOvn7BXain16T532+b8nfVer/LZyD/Ij0POksXb9YMqKYzxCh9mIKJV
W2YvDPSooKpvelM3GwuJH3G4TmNk/Tlp0pvaHd3SiaUJWbOjlVaKaE1it+2R
2eLL32ssFUemf1cy4dMsbs+UCzFC+mhy8EXK1uaXJ6x9583Ex7OySUv2D5st
MeV06MII185f215fqs94h64WRaJssny8sPciCQ7Jhbu1H1fY/OanT1xEQupi
hpZoBox1e1ZJccOeBZF8idjrghBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYSt0yTfGYP1LITkPXDA2+kbGfI6pT00Zxcr9rr+1Tmp
AcN6BzJkn/zddFiigJbcVFeec65M7HU1d8eYvCmnDQLKU/IZOUwkotebr7dj
hjX9/VUabOjntZAlRRsr23duDI2/etsqOa755b3Af9hzgM/huACWNty5OF/i
EEtZ97p+2usoavDndKvyuc8/wFCi4QoDic0COj5k0+iUtFKxj++/dS978fHb
6FxaMMxj0vESDnXpKu+1zr/trVvz7UVOK2xKqMeoBJ/3Eyqolz6tu/Ky+eXL
SfuqfPfsx9KiOpcCn6ciUspd68rLrhB7XbBp3bn5pmHCGJbiX90zHCXPUK/i
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
nI+vxF5XU2k0bLO57hseZYZt+LC2TEBHTpz8kF/Teu8vhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQghhWzNN4qdGZ8U82q7k
LLwhz6U0KVWv+webX24hbB2W5WqHz6p7Sxu0108z7lJOPfXjTkQObnv5k/X5
mxNRpLP7Db2WNX0YN7+M1ua+u7RpFebn73L2qQz3fmosGQ8eNHPScRG5PkqM
OT0duaD/dJvbGNulN1k6aTK7rLtbIb28MrprVOIKsdcFG0eZGJ9+/l1Z6m/2
XeWOr4gsLFyLUxeJb/3bup+cHXH/DXUZuT33tVMZLTE19cqzQj/8T17uPXlL
0ZB35NqzR/XRAeVUVbzKbIoW5q2lqf1lr6yZZC6NVtQ0CTnCoUrdnp4vovB8
DiGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjhv5OT
tG/m11wh9VMynTjqHkOhcqUrksPZeq+3WHOw+7tbDO3ac6v7egUhXd036+tb
+3Kxj+NftRlak/HBm6VzB5P/iF/EkuqiuY5VIqHY62qpxnpXLeo1iiUhV+rZ
/nYMLfA2izDYxBd7Xa1NtR0c/49rWZI1nkzRQ6vIcplqZJ8DVfVef+7Rj8Ue
AQztF3jPz3okoNm8qb11fMsarZ4n7Z93nPclj0ZeMRh5ay6XZL2uLBt8tenz
fIy7q91cpl9AY1Kldfpd51LvOs5OYbH4coReeqSvNuAKaXDoCIW+jxlyCmT3
l12vv0/CFqbZ42dLVVgSqC7fvveQiPIOvrolb9D2chSt0p4dUPzJIxvfq8e6
/hBQZmyonEiaqff6TvaMSni1iGZFlhjM+vOcjVebGRonXX+/urqbe05joIg8
XDlnL57n0C7ZnWdEK1PEPu7/VovKx5HTQypooomi+85FQvqwZrXcuon1z09r
9WnqIJcBkyvI5dHGWq0+QprFv3O3d6+2Nw/qG1hv8z086tZBrkArRkBr/j92
7jyqxr2PGz+Zy1BU5ilTKg1kyvAxpKIImSlRCBURMiuRRpUGImOmIlNmIUNo
0Dyi2u2h2ntfV0oZGnjOs37rXuu3zrp7zt05dXY7779e/1yu3tfwHa69lne1
Td7ST2Jy+RiTHBvHkIFPou32LSJySn4zNcOaR4pb2n1hXLMoLik0MNaER0Nm
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
wZV4LgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE/93J
90eJaoeI6MIM5X2yCxja8vN8wUVbtt7nuf4hOGSGL0MDlFuvsQoU0gXrcVEJ
QyTX38h81j18bbCQdHka+4JfiKliUylntHL9r6uxLT/I66e5iqVupH4wIZwh
f5koUX919J/8pTc6LucHsGTJ9B8xzp6ldX3FWvbD0D/2d61Vs85IP8BQ8YV1
PNnlQqps98G/gw+n0f/ueT0tg67G2TR5ZuqlV9d55LfD8eTJS02vZ+ZsT+6q
isgCuvOrg9299UU0szr+3r1i6Rmn3T8fulrSlaU7o85x5Q6KKW7lqo/Zw4sk
nuvfdsJORaH7NJYywsYZtBrLkMrthc4VteiZae62nOgkOv1NRPpTztw4EsfQ
GK3dn+TvNNx+4MAL8zuxfgIK67KwyCFaSJkevk6cQsmtRwu7zSksTBXTr9Ex
LbO8imjV0UV+R59kSvw5NJbzpz6YoHNdQEsev1cpSxBS/vmgvt3FzXc/sPLk
wUk+ySKymJ8etzWKoe3THXeUXWx6+1sIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCFsrjoe27N+fB8R9Rw1VPHQHIauTlQTmq+v
fw9MYEn3z628GVq/f42WkruQpl7MeBLXRnL9jXWpalU14csUIbl+mqp5LFVM
X7vI773bX/p7b8yMeO+Wr2Gp9+RRB4MeMTRl1mcXnQXS0y9XX/O0XgfYH2Np
6C7m1w0blj6VtgqW7dl8+5oa23nXcqe12s2Q4aDVmp1nCKntpnNJ2Qsav7+R
n9fJwXpINulf3SCaf5JHbd2+995zren1N9blt4151/lBBbQ2+siYviuKKHHQ
CcG5gqY37g5EKDgP7sTSr4GvlCfbianDdZl+KmUCief6tzUzenjLeQZL2j+3
z9SbxpBK27tTB/SWnvcN/n9qLhxo1K1ARCt6JPqMj2ZImTNSUTVCcut4odwD
heDTAlojDla5+UpI3VIU1mkVNdx6ZHarndngP/Yr+karwgPdi2iKqT4bc6P5
9jH2WS3wMrsroHzvUjWPFCGtty0/kco23/U9Jsfke8kbEV15XjLb7wZDDky8
mewF6d+XQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYTw39fy25OSiQcZKiQhX8VaSE+OMsKbFxu/V7Ch9JrlZzX8WDZVb70R
2jmFRxnnrZXMT6IvrqnqNH1/Sw/9AhpmsPPi0RFFdPGFlvu3V02vj7G5mpHg
U56txVJ8xc6+qz+LyeNFbc4kg+J6n2fUq4BrxwPE9D1S9GD6IJZi1J6XxRdJ
Tx/a4ZIj2gHlGRQ7sEAr1Y1L6QH9Gf3W0v8e3r3UQfGlLkseN730K2QYMjj2
Nclze/2fr7S7cKDF9o1JIho1LUW+bwiHCuQ6rzK5s0viuX4XvUKOP7gizqBB
8wKXil259DWkyESnTeOPr2e7XMsiJrP0vf9zu7WqDE1bYDK5POv3e//rsjNv
/H2F7ixtldt77bm/mCpaRejfmV9U5/EbLqp9P39ATPcmlDtW//HvcvNFzt05
TW+e/95xUqd3bD4pP82dUNGyiI7n2CztFCH98/nvZmSWQVDKx2x60lNF2KeS
R30957QoONp89/Nuzjt9YzwZemr6vLWZq5Csx9pqbvghPd9fEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBA2JyOGaCooBTH03C1K
ZUmEkCbuMX9SbFHY6H+XP+WUduiyHBIEnv/4dQif3Of0X6Pp23x7V6TdLZoT
d+k5FlDB9OH7XY2KyEH40q8mHX1HTdXXznOd9lqz5NbZ3m7OfYZat39iecW4
4Z6Xwbv4k/tSxaRSIro0xYCljzoKn4Jqml5PV+WpX/EryzKo98fX4ye4cel4
jXy7bX+jd1GVlV+mo8nSzYRnjgOFYnKUHb22ajR63pqqW94IS7wei2i5zraS
nOsc2na87VORzm6J5/pdnDjWsvej9pk00l414qo/l4yHhfgmt2h668XuLTfG
R49l6XHSw/G6nRnql38x/f2x5juup0296jJ+r5jmdHvwuJMyS31mtO1Znl/3
vC3bwydvxUiWCmZ5LuD+ENNYX7/crxbSf3+SLX7457UroAOOS/fqyxVR0kzH
6UE3m977Cf/fGmqrFKSm55BK9IafB4z4dCP1TPe7Yc33O6I0fJdQfIqh7KUV
olGvhSRo+dpC/Xzjf69BCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIWweznA37yc7UEQJ79vkTZrH0P1vO1rUbGh6fUFQujz1RLR/xTqG
OKun6CVUldBP1/VGt48VSDxXY2lx+TFdPMrQ4MsrHdscE5L1pc4hYf3R/9DQ
VlgucaruW0y7+FWn1oaKKMlSo/+PP94zSedqLAPuBfU64p5F8eVes9uZ8uhc
0mr3+FfNt0elsfV9IhoSdUhIL1tP6Lv5h5gyBq8vTRzT9Na7Tdtaj//wRy5l
9Wnj8mQZEudV7hno2fj9Ts+TP3IHDOXTHKVz7rzSEvLqE33toY1Y4vdDWlWh
y2ONbQtIz32UWXv9IvLpLjdxfqr091ldjbQfpunG0rdDQWStx5Jf7KPhZ86K
6n8+xTnTbU1ZsrwbUHj7j3lcbfF6++A9DTe/ZS3cevlxe5a+5G92DFghJnOd
tIy41wKJ37+m4tluGz4e6i+mjx7r+2zfw6PzbidXtVj5WuK5mopz/BP2D1Zm
SV9tuPGUo2La9exFVPDMIonn+l+9vn/wFA9Nlg5PczKtkS0l4zSzLwccSiWe
65/69enTyCEBeWSir6xXc0ZAbT0VUtI3139edVp0J+LaMZbusG9Oh6xnye7R
tQ+2vSW33vmc3jo46TuXonZWLfWfUUI7tt6Oc26F9fevNLa5atp6HkuenLXx
D+wYGrayV9dpXnWvIwGBba90FIoo80B57scXDPmMbJ/oHNn09oH1dbGMdYfI
+9nUsYNzPlvIo17zjUvDA6Xne4G7b8DYgW7FFD+qDT8jW0RMqs4UY8/m+31X
l57bZruK/BkacyG005ozQkox2p+QRr/f7wlHMpxmlG1lSLdC5vYiNSGd6t36
wbIuHInngg3jvl59UrwrhXQtIXL+1XEMVe344GS5QvrnYQghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGUlCdGJZTZuDOUXznVfttuIcka
XXi3rLD+/08/Izd0qfp0lnLnLTNZM56hPe+K9Ia1bnr9Ffyv9y0DN7NUVdxP
oSWfIRtzVa9DL6S/1wvCf+KGPpELtypkk2ZQH9FRPx6pz/y88viNxh+/mb2d
1TXl0kjp5mVXUe9Cmumgtnack/SMx6zxVjLCtiyFCNWKohaKaZNLprLwDnrq
IGxMb5vFu7geFdAu71RF9SdCeqtgSP0LJde3tmBx16MFdmJKWb3ftG8an7y4
37LWCJIa7PyFcg8Ugk8LaI04WOXmKyF1S1FYp1WEfjkIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEsCF0NXzveeQwQxaJU14H
bRZStsHUHMXY+vcxDqnp2k5vJUtDNZTjNlxg6Ma90CBxd8n1qsUsvh3VYTVL
8UrX9WUjGbq864uWzyjp6XmD8N/0vqoe17tLNnVb7DrzvC+Pxi082p33L/Qx
2udHB242TKMRH2YVbRhfSNrJCw1S7ZveOO05uItoQEeWVp4Zprl+vZhWVG67
qVaE3kUIpUEz0wjGwVpA81VdjFMvCCm08pve5bSG6zO0P9tz9uTNYnpmpGay
/ROfqsq1H/J7J0vseg+8ML8T6yegsC4LixyihZTp4evEkWBfJYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII/7ltlbLaTLUo
oVcWG2dumi8mtqR1kk8aI/FcsHk68+WilC0GDNXsVHxqt6+E3p37YrDubJ7E
c/2v8ny8VDSnMbT59J5YE/sS8nsXfH2/ifTk/900GD/E7sTjFOoR/23+pR0c
4q85U3H0Wt29lH7rixfIZYno+eL3D/s9YOi910nH/ldYiV/H76IZ3/eQ8aI8
MpZjlZ19BCSICFvosLbu53W8unr6SKsiOnHZnpcySkQGRzVd9IY33/XroMnW
l6MUiunAiUGGI4JEtPCDV89IK+m/3m2ys5wvVTP09NRrzmB1MY3ca35Cd4aA
bAbVVMm/EVHnTh9Gn/tRSDa2vEL177clnvff9rbp12SXUgHx3FQf25ULKfnV
Mw0LGel/7tLusZsZqUUDMsm/Vd7x/ae5pPEifoBcbd19y4H3W+ZOFKaT+Kdw
tW1bLi0Yd0i4f4SQus72VMwyYkh+6HizHW4l1G75K3ZDUt37ioKnk3OiZFnq
qjq1w+OvLE36lbFlx5pSid+Pf+q82TeLBw9maZXBkA+qr8TkezjLcExakcRz
/VmTfVabWvVi6YGZ0ruCUDHZD3239cKmppdTUn7ZPnCojR1Ds+1XrwlTEJLL
YO/8vkkFEs/1Z/ss6807uPyP/cV3tWnBHDFFDCoqO6eK/R6EEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhLDxPZslMzXsPEOPd4v2
J+YKKeT4bsNluYUSzyWt5jj2mbboQS7d4aR0fn+ETwba231FcXX3QcG/pyDt
yvU+pR+pWlVzc62qgLxK5tv0Vau7J7C5+kRFZ6OrbjH9fLzYdVC4iPxWHpLx
3NT4vXDlLS9ZRu4qpsmhnY8kpIjInrKf9HFjyGBLatw8izzSvvPy+mtfAU0N
45nHrfv9nktz1enmLf07/iJam2Kjb5/Joe05u9NozJ46+xslnfffNlZ7ULHn
iizydRstIzOeR9rCna+S4v/G/G/y/M1yRZaESiudXI6IKcct6WbncdLTL2fp
0ed4iziG1qWadFNNZcn4xssJj00l108Y5Fq8dXFcMVV0DHuS9lNEYUc298s/
1/jzpGpH/yXZJR+o9aiH44bm8+nKVOPQCT+lfz+gZBnv17PNB8r7UNL6wGk+
yQxcpp6c1fSu61g7/yHLzjBU3vOq9cr3QjKx9F3S5hH2txBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQulRGK6v/Ooujw4r79Rd
dbOEtn/YqFw9TSzxXBA2Bzsk7gl22JBETw1OdhXsLCDfV293bKhFb15TtV3p
XM2R4kJq96gj78n1Ykqfau1kcFUk8VxN3YLR+kF7HvPJftvC2fP0haToMvM2
PwTryN/1rs5e98G3WVLykW/n7/SJeqy6d0zrjKXEc8Hmac+ZzpGpU3kUN0Hp
ZZZ9Ccmm9T3Rvk/jj9+1tfZeX17x6MmviONfH5SQ66GnXxSNMG/8Xd9deBC6
tyKZetlP6KOlzKF3lkfodDz2G9Lm+3fXn66/8IlOfvt8ony5gLLfTuCsMcJz
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIZS0izpl
vpdPF9K4MN7Gx0MY0nrb5vKAeSy9HjM7Zv1Ohj6WLX0pQ0KamPwhq/8MTqPn
+TFFWa1dTAkZB+6ere8hpjyL67lPKph6n+fa47sPNGxYmrre+bHea4Ymp0xx
yN8kub6LHwq+5RwvlnTX3bf/bMpSr85PJ0RkowcMNo62udd412wZ2pGq8L6g
s5BUtmpYMG8K6jw+4FuCzuewLDL0/P7MYQWPPkwq0z30vERi+SN0FO510eWQ
zeEU9y9RRXQ2dd9IO6XGHy/MsvLAFi1Y+mSVEhU0QUynuvW+X7VJIPHn+WeV
334scVjA0t5r2u2u72LozAhjzpfrknteEDaGPQoGOX3pIKaQ3G3D+OkM2agO
0Rj/kG2w8+v3iJnhP09AP6avGjnshJAWHOfozE1s/L64Y+ndJ4UnialD7/uP
nu8rosijbc8MO5TZYOc3M41gHKwFNF/VxTj1gpBCK7/pXU6TXA9ey4lOotPf
RKQ/5cyNI3EMjdHa/Un+TsM9RwghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYTwn+i7Y7a/VZWQaqI7fLOewFDxphlTW1jUvydn
yLZFcnkHGbL+5PH64Foh7UvccakgovH7G2dNspqpICekIsPtg/pFienoww+f
Tnaqf/6Jiif5bbeylL6n79OJLEMOP1tec8+VXH9jXRYPtfdM8WDJpYXg8SAj
ltrU/ry46hV6HeE/0737OA3drQw9MuYP8homJPMlG3v2aF//8at3zSdPpySL
jnB7zfqwl0d33o5+mX+38XsCJ55wdYl+X0Ch70vLru8uojuafftaf2n88aul
0KWvswxLHy4F95CbIabAIu/l/keaXn9jXY57pjR00DyWPvusmT/CniGDkO7q
Dt7odYTSqfZHtzL3GhE9fnpr6dxEhsKNRHH3oxqu989ANv+AznYBnVPp7ZN7
XUiyh07uC835Gz2HnQ6ZpyaLqY3ijkdJB4to9PPxrTudaLg+xvp62yzexfWo
gHZ5pyqqPxHSWwVD6l/YcP2NmgsHGnUrENGKHok+46MZUuaMVFSNQB8jhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYRQch4w/1Fy
YoGIYuW2y1vZM7Sg1a0Oc/agF+V3df9SzdmyRxjaw/2w2Wi7kAycvq7kpTd+
j6K0W7no7Ni1fgw98fauvXhCSHrPu23maBdKPFdTMSCFz1aqltDQ7A2uprpi
UilO+ng5hpF4rsbSY2ycwroR2WTWv+rB5DM8WsAPnD4xAr12f9e5h0RzOkaW
0Hdvi3T3/WLSTDsYuYKV/vdnV/obz6yVLMl8eCPz9CJDz/cfSfret/69kRta
7rOLreHS58HdJicblpBZQklWZuuG60/73Rw7NsFgqVYhjVzcg1s7rZgC8quC
M9f/fj235pYtOBpbWGq17UJxaxFD12qUktRShXRrZF/bT11YUk8e6+u2Q0ze
y/NleHJF5Bpzb0rrGSx5VFwxsJzC0PCvunNNlTHv/ZUuwS06+KqJif9wqFn0
NR5dix/R/XVurMRzSaseLQepHh7AkvsKLn/XPTHV7H23+tyNIonnaiwnqOl1
5umyJFZeYXKscynJ53VQvrC1VHK5FCYdnfgmn96oL42P/Sqg8+6xuTZhTa/P
vL4ek+t23+AES+yC5c6v97FUJr8me/f8utfZtdcstfpkccnjw+mKQyNLKM40
IEfr+++3jjSUuw5Zdjs9k6XLp6d8ezGPIZIp/+w2vYTY2IOfC26IyOC5kUn1
OYZO7rfb+C1E+n/H0NgcYHH2aQ5pXO7wQ28an/JLn4dXnf391lOjsBjz5eeK
qdJVrdvVIhGtb1NzsVeA9O//63L6/v6D755l6Fe00/F9aULij9zFX/wGvyf8
lcVKvS4P8WUoYlvqFWGAkPQrF1/1H4z71lw8y922ad08EVlUqWwMsGUooSy1
x4Td0j/PQwghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDC5q3H
wl9mU9eK6LQ1J9zciSG30DNaE13w/2Ql7YiAuNUTjzPkkrbJbvcdIR1XeuXT
zRH/P72p2uXLnjU14hJqeb9sVN8LYro9+EpL51aSG0c9W9+6vNqboW/TM3rs
9hDSoY37btt1wPvzVxY+1vM8PJelX47m3p82MnSFrojt3OruUalsn91hs2c2
RYbmRBok8mjyy9z9fqd+v94VafHhgeCsFhs4NO5X1HCHtCJqrWIl8hwmoo0/
uBtjA1jaknvF6KUdS0+7JA2aPFT6exF3DZkZMehyMT0dZ5DCCEU02XVGsVxQ
8+3Dqa/tSzNknimy5NGrx+Yf7mLi7fZplTeh4frfPLZVtgqazSNTtXzR3m0l
lBEtq1rTX/rfq8ZW2+NzNwtjlpz6ZeSsXMLQhepaw8cLmt68WjKrMCh+hJhu
+j2cX/CIR5cEhzv+mPlG4rn+be9e6qD4UvePcXTTS79ChiGDY1+TPLcXSzzX
/ypHtzQ6QsAlUf6Y8HkTSmjy/eCf62ulp3+vaN131nwWS7G2W8qDFzD0Nlou
kj+r6Y0XabHdyqy0HbeKaUj6ePtXn0VUmtBhgOuJxl835yluyRhmVkAWPT7d
Tx1dRPpqb3YVvGt6fZgC2U9u306ypO3/aMXnIyw5Gzzpydr+fuua15rnLa/m
5dBIF99II2M+5Whfa7/ikvSMuwkB66adnM9SqHc3r0dbGTp6/AOfc1Jy+Yd8
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
8jrLKek2/PjLlTwaJd72Ymd6Kb1WWrn6+cC665OEEP7njgn8ZHm67zvKGvTm
mu2jEppb1s1f36fx9KOWPPsRmVWVTjWM5sK53Xi0SLlD+qSn0svff8hnw5kp
Ahq/yt65WF1EHVsn9H73AfsehBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQwoZtSkTukD7H86h1i7MyXzKFlGz9bvK6YJHUc/2n
lkd+GN6ySyad1Vn2fGI/PrkMexmQu7nx9CzV1uNOY+wG9OOo+uHCB61uMPT+
lmNWTlSp1HPB38vLT0wKbDyy6cEh+wHcTAGldtWs6KzU8NbdDGfdbs6xHO1I
s77/1amAbBduFt/euUzquf5pa2aHr9kek02zmtvHvbcV0NOTCkW95Bve84Lw
/9UjSmGnageOavqnKE1cy1CbyzJ9VD6USD1XfVmR1V7GsSiDHh06P+GnLJ+S
RuvaCrY33XValbLgk49LHqll+Qf5PBAS/1royEvhjf9cCiGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhFC6vmD2FmedzaOJDy+M
G/FaSItK7IKdjjW8fpuUzI+bt6ln0gjnmaqPBvNpw7ei5i+cmm7vUF0pMOf0
xw7g6MTdKREX7zKkdO7azH5p6GOE9eNRzwt3h7ln04QrG4KWzRBQZ6c1w4UN
sHfxV766cC6zxSWOxo9vd+GOVwF1T/cOncb+fn2MtupZ/mHns6liSPNh/VYI
6JvK6aFVHRvPc4Twr9jtvfcFkSJHMSNPCtrtYijNyvpt3uCm+35sqfq9y5LK
DLrvaq84QYFP7U6vvRru3nTXtSd38m7W9Tyaq+Ux6WCRkDp2k9/nENTwzrcQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4V9x
+ad9bWPiWfJrax7GDZdQVYn+i2+Jgjq7/pRr82a9nl9Exz/1uiUaU0odnq5b
0+dp7XuK7Kv9blQNyaG5PfzlHE4LaMfYnrvcvv26/+fsAWVF4apSurtT48WC
0RLSs0rXVRnCSn28/9X8iGmSOAlL4ZatNVlOQhr56S2PRBZLPReEden84V8V
RcES+ngj9eWesXxq5nTU8qNtaK2vE/lisVa+XDFZe68pSi0UkXziijv7LRmy
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
DyozgkW08unPmj6j3kn9PurLXRZvVbv6v6K28mPbLVzOoy5F5/cvjGm6+8+H
irTKuIRXNLuvk8sYFx4diJ1mFHOp6d4vhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgj/u1NUXg7otoOl9DffEzbPFVOi6SaG
2cqr9XUsprs8ChuVR+8XhcWmnhJSDfnq9r7Y8HoXuzjZDPiUW0R7lbYNFniU
UvmpZ/Zbqxp//5L3Ry2V90ocqZ1wS518mKG5g5KH280qlXqu+lJ93/u1zyZz
xNis0x8ziiXZ3mlKV6rKpJ6rsaqeL7v2sT5LaefuTor35sjmXKziTJXyev+9
c1YclR+xJpv2Rt264jdVQLuNZ8Uu79F41uOWHJ3R/col5JEX3OPEFh5dSq0x
mShyk3quf/XyE5MCG49senDIfgA3U0CpXTUrOis1nnGuK5W7+fBVW7FkUTH4
NW85Rw4bi5yDO9T/PId169jkrmoDZnH0/sCq2ZqOLBkGdxu6Yb/0zhu5uitk
xLIcBYuHlMbOY2idZ46SOKakzq7/eU3h5eKgIrJJ8tFRXlJKzwccLzlZ1HTX
r97oFp86WeVRRNcy0wM3haT18KDuttMN7zxZV/I6n4jc4smSV/LitwbWYopb
dCh83Inan8MhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EELYeN2hef2i+ygJre9g7ThuCUt3Fu5u57WBk3ouWDdGdrmzVeUQS33fWMqf
Oyamvt3b3DbS4ks91z/tRRkVPb9mYlJNnMEfeoUhWXHe2M5tMc/r2jJx/t5u
nix1qVkz54WVmLgd3x3WBv+6z+RDhJztYTOOHtw2vOC+kqU9pbHqes5Nt+/l
k+XxlTdG5FHfS7Gnck8Kae3dXTa2DbAv8Vdm233I7nKUo3chN822bOZok6Ov
rmg8I7U8u176JSxT5dGQwOedlC6V0sYfbXcM6iSR+jg1NZ8fHLpY0JMjg8oy
RuskQ31+vJo33vXXPZOKGvtfuh4pozOHhG9evpOQ/szc0PUHWanfx181kV91
w0pHSJoj1eWsbEW0Kfxba+3u0pvntXXonlmPw404mjnw83U9E5YCPG0XvR/W
ePaZ2jpxtbO99WCGllYkcofOC6nI9WRFz+upUs/1u3hc3mysdbmAWpir8SZM
EhGtayme36z26+Ui169nu4kcnX2975ysGkvR9wcvefiq8fS73hrf0WDnH/uk
1iR3g8Rwhhavyxnr6tz4+3i3DJwWNeB8Gd0Za/iKFUtootfUsnZBjWc/rytd
p+xovtegiNQN3c4e1Cyls/eH+X5Oabp9jA1N3b0piRWd80kvmc/16FRMkYkb
Dhjuqf/3Wk5K86nPjnDUZ522rKI9R2/dBqw/3bvxnAfq25mjC0/8/GNcTAQb
gvkvWXI+fbIwaN+v18V9lchOzoF/7B8Wne5+jhRTVBwzNcGi4X0v8SC/zcoM
ZQm1oV6THWaypFijPb3UDt8bNDYTjQRbvkSw9FotOssjS0yp188GfX7S8OZb
XfnWcbromruEpttpdt/qxdKR3BbF63wxbyGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQtj4PSJIDxF7s7T34uDPkx3FZPy9YGfLu7/u
t/yV2cl9ds9dl0f+Gc1svZKF5FodlF4RIb1+tri4mV80evHobfvObvxzpdRd
zm2QQoeG16M4YvvPGOueHE1V/FljEM5Q0KmRNZOdGn+/Vn17KlQ3W34yRw7n
LmXYD2dp9+GVR2zKG0+vWkNTL6NjhHwSS9uKJPk5aRxp+j1vsdy0vN5/r2tU
7OlMjWxKcyiubKkuIM1OA+SVBzS8/rGeAYdbTRdJyCtrhI2tB48ubko+vUJ+
i9Rz/VXZRy3GKm7NppaLqja8nCEgO9V7hXeVGt4417fRR8MLsnuw9HP54y9H
HDk6keDyfH+X+p/nULoqPX4r2jCXo22XtOUub2EpXNOUV3G57s4nPVQ7Svq1
58gqXF3Lzo6hJZWbooeUlkjtfi8t16/ZFV1EkdXfzY7Zl9K914cqxoua7npf
UlM0t9Ajj7JGLdDp+VhIngFDvMecaLr9wN3LjySU7Wbpvu6ysTIbxXRw6Hqd
1Ce1P7dDCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
wr9nyO22LnxzljIuF4wuOCui8p9mZ/avfSf1XBD+lx6jQ1yNA8soaL3Xh+wi
CVlUjVza3p+t998bseBLa8O9OXQlKu5O5wwBTXvfLy+Eabo9MLBufbS2qnf6
Mo4e+Iw2trvAkq3CyfJd6rXvTfI7t+f2sU1v6M6CnatM7xTT2tTicTfE9T8P
vztldOzz8C3N0aW2fZVL6GLwt+SODbBPD/6edrxTbSf/lKWao9pfvZwkFGpx
4nvAamGtrzOmuYFMcKmELrWf59vNk0cK7Qd5DO9R/32M2kbPc8O6cLRo2oWe
W30Z2m0TIHNMD32t8P+vn+HqU4Uab+jph8Mbky4Uk8aVzUO2Fza8c4jRuqiL
1fY5FHLobZ979wU0d6lp/LYPDS+ntFy3qaXuGx2OlIbqjy1syxJTWLm1/z70
DDcVBygnnde5lksthd1bOi8X0plHMzqF3Gn883/C8GsV/O1iOnaPPR1YyZCr
8Mq1XaM4qeeCjcOnOw1GaSxgKUCs0SwiSUQjJwQtHSzC90sQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCGFT9Hb8TP5Kf5YenOp7LD9Q
TAa+KWrN1PlSzwWlo3/1Sr/elnnkEbY2UummkGYFelicPt34+1jq2yDPFsnz
l3LU3lR++vqB5bTOdPBq3Z3lUs/VUFRMHDX3QGsedbSc2XdJaCn5dvxR+VJW
IvVc9eXm91t2CbZlkaPziCvLX/Hp+vwVejYT0QP5d30pbOk0yowjpfMq4d1X
sCRnHXbxxPrGvy99cniVsKeApYGmdnlz4iW0/WX8+UHKxbW+zrZl5dluAxhK
qEoyCDPk0cYLrUURIa5Sv7/Gqsu20L6l8hwt+CRbIHRiyMhVU2udzO/XM9l/
n/DixAEcyej2zz3espxeP1lw4sbacvK0di5vpZVJIQ8Msr9o8On1N6WBTzZi
f/u72jffvjb1u4Deq3aemG4kojnPRLk5LRmp54KNw5bmi74NH85Rm8mGIrdK
hgIUdAZsmyO9nsxRSS1c7p7PpZJdFnMzlgpJwa/qbZe7jf99DRumI1tsCD/n
yFKU9pXMBUpiOii418PiTZHUc0EIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghrJ1Tv05eudBRQmOHTC19v5Wlzh309D55cVLP9bvbfP+k
kFWhLGn66YaPeiCmLtz2dV9C0U/4py+KnKbrq4mpQsP5zdYHDPE0bbXvKGHe
/umJQBNzJzOOTNJdh8quZEkUesevtZOIkpR3WfH9WUoI+/k45qiY+nTs5v9q
KObVv9NT3bX8S3oeNbvSTGheLqS2PJu3tw7Vf6/LUasFJ1Yd5+hmaY2R3g6O
evd7HxQ1p+n2I8kvPDt8/ecicrNOUb56uJTilC3Yjs2bbl9iXTlEcGf0gf4c
bYgvuLosgaEHmwNvpcTXXW+bofsxjdsXy+h90qFDlYyExu0RPp50lK33+2LS
+jFrtITUfw1jWrRCRFO+52l6dW088399yLVxHSZxNFLRbU2YJkvOB49FeRZL
r5+qvr0+Ieid5zCGlqd9XWp9X0g5lnddmnk/knou+D/r+XOe5xlVIZkZrpqw
0FJEvXevnTBOse7Wl/7e70PGjeFIzzT8oXF7luRneHulH2h48/+BVXiGeDxH
SVHDZz3sz9I4mfdlMam1z3mqoGzD6tAy8rx32PqtUEI/jW1urz9c//sk/Htu
1Bq/Rc+5iIqmDN7hZVxKG8QPDn3PQp/nP6XsfAPlaCafUu+nn6CZxdRlGV/7
ZmTD60tUVjvieyuEI8cbJ+fI+HCUEd+twtO+8ZxDaqt6jsLC9REszQ3POrMl
Q0zLN89Jikn59edEK43bOxbM4Eg3suWNbCuWvK9YfFOxbXjPsbZOnBmUVzlB
Qox6RlaQNUvjP+i2jXHG9wyNTfGHwLht51gSdf5hulAkpqxF80ZoNxNIPVd9
KVR6b516QkLTHTzMzY+x9NNsS9DYQMxbCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIYeP3uoGm+sU5LJls67rDMlpEicedH448807quSD8
L80KRut0Scum/nKqlT+dBOR+0b1TUNv677GpcIlNf1HI0qPUca/U70ho7vSF
u28OLpb6eMDGoX5oplyQt4gCNhx/ftGWofGvxIMeFtW+L6v4XtSmvjHpdC1q
z+FhVUU0eGy8RXp2/c//N9/tHbOHsTR/zgTdFu4cRew/tvdDr3KpjyuE/+UL
64SivWtYWp3pfu1WsyIy7O45/v369bW+Tsc71XbyT1mqOar91ctJQqEWJ74H
rBZK/f6amk7WV4M2LRNQ/MM9V53Ly8hhqevOuenov/135t678cC5G0dGe/p8
0glgKE5n+XOP+XXXf/u7GbNg+G4dh5fk9bEvN3dLEZVs6jPQ6Ad6EWH9uGxF
s7hLWSyFsQZLC45KaFwQf0ef1Pp/v9T0ENgODS+ksZ9b3+pxuoT0n7xPvrIR
8/zvWrh8dcWHBJaqByhfO60jIdekHHO9J023Z6+pGhacaf8smaUAS53zX40l
xCieMOeq8RwhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
sKG6+aDJ2CmRLN3zXPyt7XsxdbMPO31cAf9OHNaPloHuGd0HcXT1aHRY90yG
TlyOH93pa+17fpb5cm0erHhNetZ935WsLyadbfflbyaKpH5/sHE7+VW10Y8R
HB00Hr518neGks692NV3VZnUc/1V2+8aIvT0yqD5sx541+TzqHdyr0jd/bXv
wwlW2Zd1OERI4w4s7HDkpIi++rhf1tJjpH5/sGE5L2TTtkV2DG35YmiS0Zaj
c7nlRlPzOannqi/15scM0v7jfpelctpLm/Mo7eDlvZbvNtf6Op8cXiXsKWBp
oKld3px4CW1/GX9+kDJ6d+F/5vSMEVau2QIyG1p4/thwETGqeZmnPkvoneW5
gv3CTDqdKxMxZzef2p3Me2I+Hz1pf9ctWY/25VpxJPPmkcydsyzd3eHzsloZ
4wn/mo9ny02aZZxDAYmd3NKuCehdq6x1xVXS+/wSox0/q+vLPz6PXZgoO8eA
owmB9z03fGu673EoXWUX52TfmsWSVvtb+nIXRLQg5cyFFtvx9zgghBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIayNR1+tWzl3QB5N
7zBwnXmwkHTsL7m+uFT7HptLdu5DX/fLpARJ6aw9anxqn5TYIde54fUpXR25
a7RCW45kFq7oGW7NEDdGkynNKJF6LgilafyS2TfNTbLpuZfuTOfRAhLMe3d0
V5/6X7+Lc2900E7jaH14qP8z4wJS3T7j6Pp8S6mPx191zoqj8iPWZNPeqFtX
/KYKaLfxrNjlPRrevgdhU3KYQkflnTIcvTl3tHu7qQwFlu5ffNhHeu9xjxy1
WNO2mWTecsCFrb349DE569Zi17rbB4oLO2xYOTCPDC7YS2aHCEl2T3WvrX/j
nAYhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
wv8us1Z/uZtOHhn7vfS6elpInsnithkXat/zUzYzz7A8NZNC53V9l+nCp8+2
E7eUL5JeL9mpoqGFfbtydHSJybrV+xhaXpjTLIhKpT7eEDZES07+tAvOyiLj
fdVTsr/xKUah/8N32vW/fm13uZmvuc+Rz5Ut0eMsCkjVW3LKJdxK6uPxr7pG
xZ7O1MimNIfiypbqAtLsNEBeeQB6FyFsDLKLPgY2a8ZRwYpXsUHjGArt3Ovm
13V119/o+C4pcL1RJmm+MSm11+WTdvo8wwxH6e0PMyqzXgwzySPXsBlP510W
0rjUPtydc+hvhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIYeMxSCvRa2NfCR2XOeC6wJyl6tCfXZzsOanngrXT46WOo+V6lsq3T0rO
7i2m6NjqYj2mSOq54P9swJUzzQfuY6lDsfraFp5iWls01GZ1BU9qeSZpe+pZ
Ti4jp71Pu66+JqGWPKb3WydW6uPU1LTpt9RpbFguWZRvDr5oIaTHzCSr+HtN
t68mxHfGzRJdjkI9N8dbKbGk8eFDjfyFMqnn+k9N17KPVvoqotnP5o/1vsjQ
9mB6WCrHkUfa0A7ZCUI60DrJfGKMiCI2Hrp/xYCRet6mZplRyMnb+zla/5DX
TH0OR5HjY1/K8iS1vs7iHHOZ/bt4xOZH1PB4pfSjaPO7ftq1v0596xPY1je4
NUclR+PMui1hKPozZ+6dUne9Xk1VtX7TPeymcLS/T7yauR5LR8Oteu6VFVF+
VKXMeVWG1OJzrwgPC6kZ72CZc8dUqedtKH7zKje9HM6Rz5ndxpVBHPWYcGT4
qkONfx9zVPSfcb4fRxbO/dWq4xjabXNWozS6/vtyU9QFe5heRXRU7urmYKVS
WsBl5M2+iV7NPw2MW/5B05ZPOseLfZRXlNH2dW2T2K0Nbx9e80WwJjWAo42v
I40frOXoTseXAyaqNf514Z8oGRjrLaYHLccpr//CULaqXflznab7PYBidJRF
50Uctdkrk11xkKVH+0O3mhb/+hz+ROZHr/YK+eSq6Cy5LF9MT1p13Zewp+me
2383t5/ve9N0vYj8n+Q0P/XH+UrmuqXZiXzpff4N77w0KeQYS91bxN0RxIpp
ztGpqYkufKmPU0PXzmDoCuPDLB3e2Prk91AxmThrrPXXxbg1NueIZNUrTSS0
5M2wY+W2LC1PGpDUya3pvo8ghBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEDZMH1d5vh8eyFJQs8qiH+fFdHfI53na89FjIG1Nv8Xs2M7L
o5g+J9NtPgvp5+yZ5gMPogemoaoyfdLpaB8e/Vh1JfKJsJRu651Kfz1cer1S
6cqH3+heYOnjwR6jTiZztHGrzZlbBuVSH6eG7n6/V6sjBnC0rrBk0Kj7DK3o
rsX2ffHr3ranr+5kpszKphcSi4U9dQU0Wbvn14XK6FtrqFYX3DE/VSIheV5c
UIddPMrzZn8s7rvll/2N0s77nzp0z6zH4UYczRz4+bqeCUsBnraL3g9r/PdV
Vy5x3+0W9CmLtiubr97WTkD65cfP8IfW3fptfvbKTX4PjsqsN6ivCmNI5+aC
ImvH+u+BbOx2k1c7qP2QJWPN4IvrXnK0JmO0lbJZw3t/PXpS5ey/hkda1efb
zckqpW3NBw9SHNTw+iTh/+7xRxtF3Y/m0bAjNS++ZQjp0aLA8uRg7JO/qwdk
Xx1/5MOSGk/lXmc3MXkqHf086K30/m4ChBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEII/3knnFxxJeIKS092yE/v3lpCi03TLAabC6Se
C/5ejjQQeT3oylHWqcSsV/sZ6m62eGfhVPQX/TvNIn17run1mtps2X7ReUkx
vWrTZYt/NPpk/im/6+tYP7flqHBpTQ/J0HKaOmDqiM7eddcfdfntxCtbz2fQ
GR/F7X0kPFpV4Nb94R70/jV1i7lFSkf6FdPGRbff3mVEJGyprvDWhiHDGoGs
XB5LZ5X0bvmckdCbTh2SFUuFUs/b0O22RbDp0VaGNhyN7VPKFtFDhWFjvZdv
lnqupmZkcI9r4kEldCZGf4aG5x/7lMfW3pHJjNRz/dNOGrPJ2Nq7jEY4mcfk
5UpIhpY+jt3LSi1PnNLklkqar+iFyvc5guE82vi6s2PafbxHmor5zr315996
TTG8V/IvfIrJUHuzvyQN58C6Nu5A+YI+oziSFLd65N2MpbkHpl8Yu75M6rn+
qiUudgEGr1hyuyf34sdeCRlMU3Q5deb3Oz98vzglrecVlgbtXbW4j6yEpi5Y
saiVKb73gBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQ/tp9H3IXpruw5O3CJHweK6bCKP+i1aN5tb5OEInLlnzOpZVuAx6keQkp
sjygzcWY+u8Ler0+nW3flUfpY2apOJwupU8tshxk2klqfZ10Szt7a1mO9Htp
3Y2ew5C/loVP1JUSqT+ffzXx+uNFaTM5mvvts6OSHUumy6dNHOWBXib4nxlv
sGXk9Od/zKfqZ0zLLI4qFvuG5ZjXvndU28QuxbhVNlne2Bx3obOAuuw+XGU0
uP574aKmRr8VNmNITd8/8LMtj9ZXHHgu4+pW779X/tQlrZGm2XRY+84QwWgB
6cqNnrqsT+PpwVPPl137WJ+ltHN3J8V7c2RzLlZxpkrd9c1C+E+qaGzlOX7l
H/tXonqlRRxLrNEDweBpdbce+a+Pyhl9Z+lW8pHNuzQZ2nxjj6Wlae3PCeOP
e3kmvSiisBflHy67l1KMlrLyygrp7Rv2va/Mc1LII62g3pKDh4Q0dNp7q2NX
6+5cMevSa/0W7iwZDViuJT9VTLLrTr7Mm1v7cyaEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC2BCcOMHzwjV7ls48LOu1Uk5M
ef2WFznFFtHGDqXqVbty6aLQfdqM6UJaMvzixwsP678nUHGxhdqhRzyK6DtP
b27rMlK5ZF72xbD2fYyHPj5iLNtwlO3+3O6HJUMOA5ljHZ9Jr48xdmvFl52z
OGLjzp07so6lL0rHdLoeQu8irB/1w5KU32azlJo5tuxNHkdvxyWL4+b8upfP
/2ZCNfMo6491fzsoopJPyz+kfMkfIb0+sZZjKp7d6MHQyc5DkszNeSTfXtCm
IN+13n9vycmfdsFZWWS8r3pK9jc+xSj0f/hOu+H1MepldIyQT2JpW5EkPyeN
I02/5y2Wm6J3ETYtLZJnXxq/hqNrAdu7Pk9nSbRtcGr1/rpbj0On9O5t84El
ubunP69uyVD2rXX5G4qK6/2+ooYrxHUcxSPb3a98K2JLKSJj+4i1XWt/zvmV
NwfpCfZ3zKPOC7ymnfIX0th5B7sJ67CPsbb+GLIyO8uDpbLTq4VtF4upUu7N
4TYH0N8IIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGUni/LLPRvBLL0Ibh3T+6CmMyL1eTHLeZLPVdDMf3NzlYvmuWTcPjG7Qmy
xRSd2bfHlL3ozWtsrjC3Kt5kyKM27w98WZhcSrK3YtaG9Kq7vqOGpr/r/a38
1Sy1/nKk7fVgjjTv6px6qNX4+9lm6jP7B+tylKNhywV0Zmm6W879pyfL6uz6
P35u+vhlaza9dSsummQmoBlDv8aHKjW8/r2maqwxW0TjONIh8+auvf54vko5
+2bGldFi/w8ldpkSGmy202ZgEI/OfhsZlnd8i9Tz1pfrQ66N6zCJo5GKbmvC
NFlyPngsyrO47ua5tLQa/U1iop1NXVJmmN4cJCBDd5cLh1Ua//pa9jW9s1iV
I+WbUaUKjxg60jZwzOPXpVLPVV/eGO4c2+cWS7szjda0f8yR/XfDDfHT6u79
8v3D+ZGfJvAoPbJSbl9CKb19Ylea3L3pvq/h/+5cnv7HTSb5VFnxTcWmfzHd
mrY1z2U/zuGwfgwJvHR1QjBLq7pek+94W0xLdj2KebwHn4shhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP5nBp/Wst+1WUJvNm03ObCT
pcc7p8y4voeTeq7G6o1YQ5NmoSxlmXRKvXFPTAO/jAnrehz9AE1dvXfhXbUD
WPL7mOY57IyY/Ns9k0ybXnfPfUQfu9HLSkS0vlLr2rJwhjY8sjps3LzprlOf
PcsjKl7lUdu25cpPy4X09Iq1+NAh9Lr86a6yVp7NjTlql7Lua5QpS77bZvGi
Rzbd8fEeIb/EW1JGZySybIACQ/GuoqUtL7O1vs6VQa2HZvXnUydxs+0Lx5XR
/f1pH01XoT/qT2MX2Mn7BHC0bOvY8FwHjj6nJA7OH8DU2fUfK2xLnXZVQMOd
Jh5o0VtEFrIPrV6KpTf+meWvXG4N5UhY5lLxpIih0MVugsvKjb9PT1pG+H01
MBvG0MFd6bPd7wmpyyExn9v26Jf9jdLO+0/7UtjSaZQZR0rnVcK7r2BJzjrs
4on1jWffDg5503bbSI4SVXtOUf3JkGKhvb6cvfSeY7Jve2aEG5+uaRnPTnQo
o28y9rPPemI//3cqpXfN7DOWT6Wt1w6rMCqjtcL5oscOdTduwxaPKZ8XytHM
Ne+V5u3lyHTB5a/719fde0RamntLzNpfEVH1fsss3x0MaWXuurKEq/055HeT
67rY7a4RR8qXV4+LM2HpvP6MS8OHi8gwPOgDey2ftlpnzzozsZi4O1UJeSca
z34IG6ZiDfXN1uEiWpncw4ZcGHLaYbV0nejX61T2xNP4YSdYal11KfHzEzFN
3NlmjP8VfG/zd03u1mycSRhLg7R8fAJSxXSpbd99d89iPJu6lyL1tG9vkJBq
qyTT19tZcpDR6dRtd9P9ngpCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
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
VXSZYtqXIbH6NC/9lz9/Ncf3w9kHWeRgePegTwWfAgNDHnqNlN660w9LUn6b
zVJq5tiyN3kcvR2XLI6bgz5GCH8nI7+vXOASX0zWI2JYjSlimuhW9GFMcN31
Me6Wz/ZM2ZBL4g2xs1dNEdLzAwlrPB7Xvo+xtjq8viS85MCSS4bCiyJ5Mak4
aViyj4qkPt4QQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEP4tH467ezmUpdVG98ZPTRHT3N1dfO6E86Wf6zfXUea5v4whR9Vb9fX7
G7CUUxooUuxX//0qjUXP7+lPZs/lqO/Mn3ZjtrB01Obyp3uXMD7/zv3K2e+S
3uSRsMesisBPQnqYsKh5O3+M279z8Z7SpWpTM6n74hMfTMfyqbfH1Rua69Cv
WNeqtBm8YG1/jnp+mOkujGdo4vHm53feKpV6rt/dvInfJNHthTRs4qVFL81F
ZLOig++wtnXXJ/YrS8rnRi3pyFCX8Nmzji3iUXD8wtkve7lJfTzg/yyT1o9Z
oyWk/msY06IVIpryPU/Tq2v9zxPYMJW56bjGRpMjLuBihEopQxPElS+HaZVJ
Pde/muK62ojXPJMGDJ/Z3rIbn85uTLkX5Yb3e1O3eFKodtiifCoJPPW2amAx
+Zr1XaWF8zD8FxWH6Abum8eRgvWS5dnbWRp/MWZJyi3Mkz9NPtup5OtwjtZF
Z/TdUM1Qe/n94pGLG94+X1tvWrkyQ0+z9D156OAXb8XUcaXJvYPv8P0YhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIm65DvvDTcu7m
0YOawPP2pULyOOqnMyEAPRvwP/PZJLl7ITo5NJvPGvW9IKADN2L3RX5puvPq
dLPlWTpjM8h91n3rc7E8KjNqM6jfcfRZ1bV5JzittE4cOXYQjZV1Z+j2uHPd
v3Vpun2VL3bPCVqTzRH32SLYfUQBBYwR6Pa+vVTquRqrPoFtfYNbc1RyNM6s
2xKGoj9z5t4pJVLP1VAccWtzpu3cDJpCogtO93lk+SN0XkIA9rG/69GMs/et
DHOodbTFx5xoATkd/z/s3Hk0VX3/P/7mJERpIpFKZCjRpOFFaZDmQYYmFUWF
FE3SqKQkEtGgkCYp0ayUNCsyq4zn4Ex70ySR/Pqu77rX+v7u9elzX66b6zh6
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
tNHHJ+tMFlK9xvwxY+wZusnVmuq2Cc8dQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBC2HLV071e33OFkC4s9dQPdGfox96Dc3R2Sf531o4e
U28sO8FQ4dg+j6wTBRQteq/8NaDxvou3ZYPVd2gJ6Ni3kzZznohor3mrk5k9
Jb/dJN0x9oM7j5vL0rYf0fstXBmqPvU2f+Jxyc+BsV8++FZrP4aY7MqdJ44I
6N3s3hMW9254f/Z441A//ThLJuxgTvdtLC08zncondp4eSnJHfzlZqfkUsqS
sC1SDJeqqqZ02xAg+e2frvnm9d6KIhrYJ6Pf8MPl9DpnHdf+Z8vNXWksB7vR
5aPqLH1QsIke+0BENbo/Dr95/Ofla/3OC6HPpifd5VFg6tT8dlVCWu9u0Cvi
ZMNzgE+2vT9spjFLK2L45QF6DEVk2Bu05jVe3ppAIdvwsjSXLFjZW5dm8UnO
Y9yZXZ1abs5SYzmh4zxtGV0RJe1sN+rELS7NrzyiYzz0WZP/bu74WuE1GS4N
GR9tnTqbT/YrZA8Mkcbzaq5O3nZc594lHlXe9/f/KhLSmP3c58bBDZ8Hwk+O
zpIzYWltVHS6oz5D+wJWHrWvaH65i7+TM5udMKo/S6cfTjxz6aGIekTFzlJ7
+eetF5u95iybE1lEo6ZuHx+3opwUbHzaDChtfvuNYX7aJvHSeZSd97zD0c6l
NKPsYvotb8nf78H/3csD9RS6BzH0cH+8uuVlAY31WJzAW/I3ztdXZWxKA1la
xqjqjnJiaZWKaIjToJa7Ts17rLUvchFLCrqj+58PYajPe/Nn+3623PEyckoG
h5wElNf1qIGeSERvXaNbMXp4T/IvlRcPtjU/w9CYG9qf2bcCWrRt8PKpjyU/
v3Foq9QnGZ5CaqcksjTZx9DMMo7xdh88dwghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEq+7qVK2h/qc8na4I6SaYdS0lTWS1/t03Lz
QyTFNIU7+QPOZVA5+a42W1VC2a79bxsua355TfD/emD2xNJnA1lSiDPtbflS
RJELHZymc8SXMyb1Pa61vWwW3b2b7RPek0PWm0O/tdVE/2lsi0vr7PXDWdqu
tXbohOP59KFLkOkWR1ux1wX/Z9V69jY/PzeLAoPzDQ+M5lBwsfP5ESotd1y8
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
Xte/q7DEuDLInqX4Y9W24xIZ0nA0UzBf1vDn0raN7yfnzwz1++r7XllGRPbX
K8q3filt8vq3TJrk0baXiKRFi+eG2XCpr1k/15hFyWJv16Yy9zSr91KeJSdZ
/qgO20R0b0xUr1rFcrHXJanyppw4e8+XJZcnxa0GzWPpwtj41A7FjTdO3/9w
dMoawpDFvHGj225j6YzvcZ+PyhUNvs6PDeld+j75QPNGk7SqShldCq1N7NK/
6efPET/LI2eXcKl42rxIvxd8Ovjdv+unOc1vfZEU5UxT+hw2YWlO5Kln5gYM
7UyqOWb25ff5cpLiENeSvYNkGFLsbz0p99d6EiPXdubXLg3v501tG5vWB97G
5ZLrpfd10sVcYt2DVCYFSc7+vKn9ssxyc60Kj7aW1py0PyWk1GU6qt9XNb9z
Fvx7nuByTy8+ztBetyVtv8cJSJC+e6S1m+S/D4nb8KN3BzuGynZypL595FPS
ibg7tz2a3/so2Dy977I/QqtCQD0cnmyWGc7QkJi+74ys8d4DQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCKD6nLpkSODidT45rO5l/OSqi
Ej+bi5414st/kD52Zf9oC4Yitsyvl77Lp5/rU7/syy4Uezv9u0GBA/x+mIvo
tn/ik1G/2su7cnLxqlSWZDYneWXOYClopX//GNtf7ahh+bZi7e/zRjZ0nJc8
YBFLgWMmLUsOZujt3JquYd+RTwL/mnnj2o2qmsxQp2t1k5bs5NNS445zPC8V
NPnvXlPUuRlwKYuSvzimBazk0M7947rt7NLwfCozRRWFu67ZFHfN5eehpxzy
LnCQnVrZ8P4fnhUwOSiZocn2c993tRFSSsTSbvWDuE3eDoZ3e6mmWrN0XfvF
8jsBDM3oUNFrlwjjF/53Xhos62m9v4xkyPS67y0BBRtF6NgWNl4O293Wb81X
FjMk9NZbLnwmJMf1l/qoTGx4fqPfTc3z2779+v9pVy8tes2htYZDBhrXJv72
718+mTdW30dIR5b6i64cYuiLvFvwzMPNL3fF6bNgVN9PZRSVFVVb9llABw7o
LBnfFrlYsGX5YFy5Tp52Nik9UeS8i+BQFt95qEVtw9cvbvaJ0ilfudTnTVvF
qZl8Ou74QWqOpYiWD+twrdfFfFLb1/+N7+IyGhb+lazNGr5POHNHpORyj6GR
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
xOabHyv2uuCfpV2OM8cigqHPhc57XPIFxCuZJzOiuETsdf23+ms9dzkdylDF
1meXPBIElLJj0tUdByX/viTFVceLbF7zBFRz91H3jfoMyQw9VtLTsuXOb1wN
g5cfvfOoYufoajmDUlpgk7OtKlhycmbcb8isckrg0VNZ37yqKiFVz3leNuwU
I/a6/qoRZTerWGOWxpYk2X0aytCuNfcsdFleg69Trh/q1Ld/ESX/OBlyWamc
Bk68EnD/zp+XW/jqQFEp9xOHZkrZrjWawKeg0JP9vFqLxF5Xc3eCzOgZ6lNZ
WpmQUDpoOkM7o20MPxvyKfDYxMsGN1lyN3418PLCCprWbeagbmEVYq/3rxp6
NXaK1n6WbrSv0VEcV0GXDn3jTfJreP3LC6WHhA8SUa/X6/uxYVx6s0q3bxv3
p2K/v6bSbUp80stOLO1w8SgNXCaimOrWOwzSysReV3NXSvAz03QAS3JD9T3O
JovozSBlGZfMcopf6CDnHcjSMo9RYTlrWfqWnKCV11/y56VQ9YOZASe4NOaw
lezRs3yq8d52Rc+o4ffVNcFw/mGpYuqyZJbqopPldKBL3dfUDkKx35+kmi5X
EGW8mKXHk68ofT3BUPVGtQVe7f68/UDk2V5ey514ZN4h1iDvpZA8OgbNqd3N
UL1bJ6cfq3No0/JF+b2IS1k1s+QLX0jOvre5Gfi2lP2qySeNXMe9swxFpM5L
/XD+keTsw6F4ffqqf/erlgyZeWkKFjzm09JPE8i5bZHY6kn3+7k03ZGhqKSK
24UdBTTsVcaqGzfEVw9s2arGuqhHrBfQ1lOHHHqxIip5rTVPfmjLfe8EIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghbP5+Pi3PPR7M0Juc
oWEKsQLSjvIOTlkn+fmHXzWPxT2cw5KS36zonS4MsXmOd7cfbby8kbl3DE4v
msvST4OVOa9dGZra6YLh1hDkmcCm8ehQ9pYwNpdC+B91VYq4VHbjG+dIUPPr
b+FZ7ZJmW2SQaGiBdJxxCYVyh07fuVbyc5D0q9tXP1Bl6dauNyN94kTU6cqV
kNrz5WKvC0q2uhPdS16lcEi6kvWK1eFTx5KjzO0vzS+Hbb3n0jfDlEWUUdpq
QvbMYsqR7Vu7LG2z2Otq7goUsg0vS3PJgpW9dWkWn+Q8xp3Z1Unycwhh83SY
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
5sJSDa+vQutShlYv1jzkldR484Dmipoxn40FtDffRO9ouoiqushvv6HaeO9b
mptrF3fixQYyVOXXo5tSlIDmqS4TTprTcnNHo9wcbydMEZKF/eJjKqsYumU6
I6V2U8t9vhBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IfxzHKDdT3l+m3zacnbEqzV6ZXS2R/qlhbrNL58HtmwX33lyb3HFWxqla+he
d6SYelpdrPCIRD/8T/Ycrz998+hs6vlzToHXJQ6VPb5oNuL7n5dbJS6nFu1s
76LN0r3RN/RvF4rIu8PT9FIlXqNdX/FyzKysmyzdbDt0pbFzPr15/0Bx1Ypl
Yr9v2LTaPPS2GnmYpRzzzztr5rM0r3fx26elQpJ9t35STJscqnz7ZG87WS69
NTSQy8zDeP9PtlEPGbj0Qjo5GgZb+QqLKeFw6pOz+7G+NLbpOk+nrxuXTdU/
TB+4RXNI1VXB7Hg1+ieEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhOKw5Kemw6SZQtos86RrqiNDyv35MbpbWbHVwxU81/cPZCg2
46P76XMCSv1qZN9udonY2+mvav2Wtf6Qyycrs7jW94NFFO7bx+rBD0bsdf23
ru9V7c1bwNJSg8VnDHcy9PCn7vcFCY2XG/NI2N4wJIilLi6p/c5vZOl02+gu
g0eJxH7fLc1h8/VGLz/M0GEDNt34sIBS7pSEj+smvvElXzop+nZULiVqWt87
+45LVoNcus0+3vR5RLqfhtrpriumD/2Pu43NKqeC/dcLTmoKxf58/t1PreJ4
Yb1ZWjT9ctzqkyKq2seOfrumXOx1/bdO8DXN3mPKUodFxzpsG8/Qo+RodVsF
5FD9U2pOePQooBefcnSDhspoi+hdu/CzGgkNX6cmnl14ar0DhyJWdHnm/YVH
jj3Pq1pliG8cDeGN7vZcS0SB9rmFcy9ySVpabX1Z4lOxt/e/qzvRveRVCoek
K1mvWB0+dSw5ytz+0vzmn+bmhdBn05Pu8igwdWp+uyohrXc36BVxUvL3V+Iy
3uPz911zWGJuRkUddWboe4/jI7r7N/08HF6kXaDanaXgRdOcVx0U0fKC7FZB
1PzWtZs3Z33XUf61T5DptqUkqpx6ddyiqSArOeP0jcinNPNcLo1/cnHMsF/7
K+syh9AN/8D+qrmZnqIj2nuIoZUhSkbD9wto64oR8wStJOdcCf+e3xWOfCo+
xJLhqltOlbNYUpJ7MOZybuON30cLr8d3Ws7Sq+5XTKVjGDq/9fOQwwbiy61l
Kg33RQ8QkCFXxzM4SURfnCuKh/cQ3/ucpvaiu1NIcBBD/HuqyyddEZBM1fBb
whUtd1w/Dpw2eJiFkA4P0sg0+7VeHwzQ1M3xaLnPF0IIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgjhn6neGFGP+UEM1X3+NmVytIDazJuk
M9+25eYJtFSVBnYrOj0ql95e6L0zIZJLDxdJW3hc/PNybyRFvmnicIshLMl9
de25kRWR39BD70aZ8MRWj/rZIs0Ov/pNq/oZRVZRfIp8v2VZ+3HII21sjZ3X
GRvfT6fNO9SynnwtpqNF+V2X7RVffk5T26///O4HlVlSSB9850KEiPrdZUqj
PZtf7llDtXSxPOEWwNLQ+OChbe1Yehm0wH1bFxFl7jV0rnIW0eobyqvDa4ro
eHKJ47B4d7HX29JUXOLU6aonS/b5RtJmSiwNeNPTvM+MhudcXbefnCNbx1B8
vOlt16EiipPP3NBqXpnY7+/fjWi1PHPEqHTaNifJNiq+mHhTOmmqhbTceaOp
3flSWzbrLpcOS92fPT6OT2dc/ZNiTLHe/cudU67vf96HpWneBZMsL/xqF/mb
HfN9JH/eFpcud/ukXJDNpeiu4Znxfly6NbPi4ZBr2J/D5uGS8/fonB9DA84v
3dj+qIBWRsmFRqriPQCEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQ/iflwjbf4A0T0uSACxcW2jBkGGFy9YcLK/a6/nRPhzyVK/Rg6Mmo
br0Upwtort1SC5VVxWKvC0q25x9oDz66lkc3042mZbwQ0g6lzZeX7mYafJ0e
u8n8oj9DBcLYjRGhAjILUbuz0eDPy3kYeUWnu598LpXWpg5R8+eSlyvv+72r
TZ/H4vtSaZvsBJYmO7l31R3O0IddbTfrfhdf7h/83z3UquBU9CYuLbRdM3mq
L5+spk7Zr6rX9DlRN2UWMA/e8KnEauP89gEiCq/6sMfyO0M5rZV0Xx1kycjh
Z4cMc5bO61iO/fa64bln8H+3vdyh1tZSLGkrvtrU30ZEUX4HFDonlZFL/Ajf
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
/EKIFC+93dd+glayb8xZ46jD73Or0quLpvUqd6WIKndm5W8Vs9kgR3+2Cy00
OuXzJzOaJfJvruYRHiqDNn3fF/BDK3FNSoe1rJnx5tvv3OpWorX5BVV61z4X
Gez6QjwjcjdqX22g0etKqyY8sVdnNQ6Ty01LxZyqFiUt3Sc2/1aa+WZs++Zd
frC4iSo1Y4f+PNjdIPePxWiyH4wxel3/qVsW3dZvdgqR23c9Ktq21krpwg/y
5BnJvEqtvnfc4HKqdriUOnhy55MdOhl9eZ7rMD/usYiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiImDq8aVIq9E1fRZxnVpxZ5Ha8LP7j65SQvJFG
rwsxOX3yXnfmxoc4eXJC02dgIYOcP5IlcfJRxeh1/bO/3g5wKvLsidRd9Uz3
fopONn1zXV/gLHk1aU3fK2ZtS9ZRpdWS5VUCvhvkbfuQ0MGucUav65/tM73i
txmmT2WCr1XvmTmjZaTJqk75lqSd+ZY186jwTlteSD3T2Rsb9ouRQSF76zm1
JY8rtdr1guNGMVHF5kSjbzXtDbLLZ3Etp0OpL/+t2vmQSnUCE8RhX9W4Lls0
4pNoPvXhrelGryulLFOuh8XSYqrkf1T53L5dBilzXok+OIsc1OS2ru+3Aonf
X4iV+cBtMjlG2i/onXNs7/S7XwXaZr+yqf5j6a5V2pbaHyXLT51cuu9L2jlf
UpublnQ6E9NIlc0eU845WSpS9c2bX2b7U9+9wlhmPTu30R+dwsVl9Yf4M4d1
8m2mR+HOvsy3/1Zz59P6o5oEKflr2YByAYpszORrcuKAavS6EP/Hzf4Jsx2G
KqIZZNs48Gu8/Jw/vN3x1Xx/hYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiI/5kTplX/Uet1uAQ2DzTf8FMne7PZd47wIq/G2M5a2aCNc5sQCe9c
onBMQ610vrx53fcx6TenK6nGfL/ttqe8Kg/qz9pvdtMgt2+MibUKJy/u31k8
06O99SaGSff3CR/c2kfJx8lVT5UtzLz6d65bnWvnnq2qLH9/73inbS/Etf/I
lgfWORu9rvRmj4G7Outmhcni+Er6ml2i5Iy+erOulsxPY1t5shxYXVaV5/n7
H7QJMMjXat+XB11L+f3WpMWymJatQsT+SBHLFw20cjOor2m3scyH1KpHRbfE
L8HhkulwJl3XRJ3k1Lg+P7uK+yQiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiImJadsCyo3v83BRZGLFxS00bvQTlPT3tTlNNktuxj/Bek7BNlRYd
6u+KXKeKx9X7jndWG1K8/k4BfX2HD1dl/hy/7nF3FNEcdJ+ecwY5NohJsUJQ
1Q2drz2RX3bmrl1G6mTgkFkbbl9Ier5Q5XJf4+IzhUqls44z663RSq1604fp
uiXfeuzbZ/3TSt8U2dW1R74O1gYZonNe7mwbY/TxQzSmZcasmOZ+WCt3W9ba
F+EZJ1Z9po5YuiYhye1sdJt6v2ktgzjYrfJ93VAj+qiSHrEt3VK8/ucuc96t
zBUlV5Zv6uB2KU7kydLywSeSXj9iRvZRjYru8z8qol/0acGlQgZZ+/pD6ysF
kn4+ai0ON47dECIPnU7dvO2sFbe385Z/cE75e/Va0cc5fHoiLtPKXbs7Xyf7
Etfk8DtBziFiRrJgKbc3b+eq0nVk0TPbKqhSscuxtnVHJ9994OrWfhOtB6lS
uU+jRh6HFbHItbjOzbpJ39+sJvfK9XKeIi4vPG/Mc9XLrPtTfSMPJP37E0RE
RERERERERERERERERERERERERERERERERERERERMPS7oUcBcxilia76wjVNx
vXhd6hlgkhD5279/mWv8/poeqnxbUTZxcUVV2p82ifUem3w5CVsr9dJYu6uy
JIfJ/W+5VSl/L98Xj8rkMiGmJl8dfZDP0/mJXBlmdXhiE518uN5jmOm9eMl7
suvP5e4hsm2xp5XaXSsdIw7VOeb6+5yTu8vMVnd+p8inQVGXtuQyyIUevaJq
v4s2ev8Q07OxzdtUii0QJeWt/3i35VqcHBg/Jl/b0wly9dJV+0JdDFKp2+Mr
7YtpZNy6TrpDC6ameD1jTeeeqVAjSiK+DlzvExIn+oK+ra5f4txHTIoOe+Ju
3tQr0vbppovOCQnSfZnPiX7bfn+eBt7eadpjVIgsvpZv1bSOWtEv0PbKP9x4
eeYT8sRW/Djvifjp3Nt3stOJQy2/t/tvkMeImJH09w7rvnmVKpvNX5UJclZl
mHmFR+WyJ9//77DjwpQcl1xUcahcq2abs4pMSqgXUrVzyu97N+p3ujJ8miLP
3/S9lkX0YhP87Emp1uQ3IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IqYFNy6zjC7UzSDRI28FFPuhyO4WdjlKPVR/+/dOMfvaPV2iypRe17dOa6VK
h9zrFz89n3x5Si4unqGz56hicSPeyaqMKgMTnx5470heE2JqcsvjTUHzH0TL
Ip/lpru76GXwpV79tu8wyJF944uWjlOkVl7zegM0CVJgo2UZuwW/z4maH798
bMg4Vfo/cl2VEK1Ind0d58ZeN15OFGJGsL/Jzxz37xvk65LKkRumxIrdz0dX
Cw15/Nv8xpSux/boq6JV4+JkRshuh6N5DdLj81xX3QHF6OOEmJZco7ZtNfNe
tOT90f69Qye9nPVo86T19t/nmx2Obv9mSfcncmjYpZhidXWSuUljR6f7xstF
bNbUY/+xEX++h9yIK+aSXS/hpQdFTjz5+9x4REx/vlrut3K0i0HWtzFflsNU
lSc9fp3e8uT330sk1VIb84Tlm6TIzn0H3t+vrJcJA3SGlflSPi+xV57HQflC
9dJwt27kBStFatzOtrd0t+TrFyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiL+/XY4Jf6tWhrkaciAJh0/KNKzT+mq0wOTnidwrsrhqr3HqaJsbpPV
UqfIgg2u1mUvp3wOWzvPEp59F6hyZJvHtGl1VNmzqUfjHcvJe0RMin02lD0Y
Hh0th/MvVVs46MVxxP1hpff/Pvfpd4rNof2z3yuy6fqGDSXzGaS0nfWy+J+/
z29MqgvOvbY3GaHK3J4zHRsGKjI4OM94Mw/yHjFju2LBnAIfHhhkS9mp37PP
iZVu/Zdcq+75OMntlBmzYpr7Ya3cbVlrX4RnnFj1mTpi6ZqUP093rVrl0ato
vBzfUnNprqoGKRSfY1CAP/mNiElxu1X/0qMioiUoS7fQ+z31ssOiauYOe5J+
jjvdaBlW9tQTMW3TwNvJRSd1bPON+3kx5XMdl7550jd46p/vD1MN5z811MvL
Aysjh9ZL+Vw1REw9LvzjcuWdAw3iFLxnqi6bKu8Cnw7t/Tj5cg6zjtrY3tld
kWDPZe7j2+jl8eP83yb1Sfo+s3JqJ+/BX/Xy/WKOTy5NFIkb27p5JkfyGBER
ERERERERERERERERERERERERERERERERERERETFjuPfut1aZtiuyxeJh6ZBg
vczIsbCc62Wt0evCjOULh7gcLbqpktPRJPfOMX/Ox0m3b21fnvI5OSltRLNc
AR/zPpWXPXpYVTCLFmv7GkHRi9J+v9KKz0OmLxjTXJVOs84ODa2tiP9DM4uC
7+KMXldK+fDxr6Cj3UPku67jfUMzrVSfcsA0/+i0k+u4dnDXOd3io8TszvPr
wTbxcsWst1+nnxkvh/aGTfs992xUWXfh5twuZRT5WPXYtLk30u+8/Z1713cL
r1HYILub9Sse2k0jAZ2+lfGOcjN6Xaldy+teZu8rqjLBa8TRZY8MYvfZ+anv
51ij15VavLckMlr3Nko6mzqPatwiXtZu3FxmQeak5/ulFYMLlviqeIdIr0Jr
Ix0dtVJ028YsuQennXMhtTkvLptH5naq5Lo+9uuBjoosmdlNc7QO97p/uPKz
i1dxx3CZs2X0PsszOunmM6fPrl2Mz3/ry4gC9RZ4qfK8mf+PVZ1VKTFl6cli
YRnvXoR/jzZrc1haL1bEbNPa6/5T9GJRYdO7Ao/Jj0VERERERERERERERERE
RERERERERERERERERERERET8v/yVoNn8Zqsiof1jB4UG6sXDplJM5tPkN2L6
8oD/kZyzEp9I1pr3p7yeo5PQwUU6606mvjwZd5t3g70MijQMbR1a8G2CXF2+
tNaNo9FGrwuT5qSv1pW1RaLlxs9lOz7Hxcuao7f9NrukvnywFUdsr5ssfijS
r83MoY4ayVK8VpNNJ9NOrpevm+WyFi1VmdK0vfdxy0SJOzTwyhS3RKPXldr1
kz/OeVxSZNrIitV1bROknOeOb0U+RqX4565xMT3odNMg/mb9Lt7bHSk5gy7l
WLBsktHH45/tesFxo5ioYnOi0bea9gbZ5bO4ltOhGKPXldE1vbtmgfctg9T2
7WBtbqvK41wtNid8VpPcTv/tLb46LXso190HXMjmrJHggMEHbpxI+X3vZvu5
HfPlipHD67+Nthuvl2c7h8VsP5X6zgXMmL6bejI46KUit242eVgxIEF62PVd
eMY66ffPDgW2rRq85LHE/aoVtfthlLxrdq/yJUPqu29jxrTnromuuUYr8ulF
aUPrfHpp7xLaYvm9SKPXhYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiOlf+5jr/RInh0lXy1szgzpEic2ySdpThfTiUut2pti2ivgZ1pY1zIuX
FSbvvL/5v/xtO5+KhY+bXuK5LLv59sdFJVr0hf1PxpqknfxATB/eqtt57yI/
vUSHd8zW3EyR+e+n3qvaMum5cEl1UJhXdccHsRIe1/nmx3EJorsdcWxlJyXJ
7Ry/us35nSFcoi4vm5nlh04maTI/778s5fOyFj6f87m/lUFu3vpsH9BKI7Y/
YwduX+Fm9OeZUfw2IS50fSlVVraeW+zrcYOE5Nt2Zb5vbLK1X6hZLTu3Ro+l
0M9uLxf4RUnMtf3t638hh+0f1j1fuNSDfqocr3Jn0DlvRTqZJBae+y9y6gZ+
Uzs6nVGk1CB1QjnrBPH3ntmjuG/K56Ym1df+w6e93/RSXOfHla21M0ZOjXu1
qPwEveQ+Nr75mmMJkjBxoMObnYo0HdzTd8mmlN8n07qd9y0pOrJYhOSYPstv
kkO0PMxhPn3lUdZRcvvAPU9XU2dF3sdX/KDRxsugkxUuzOxJLh8iIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiZjy9vl1XKi9URGdx/Y96Y/Vibpnt
xIyrGqPXldGde2nUis55FfHLvmvi9mGqzL/WfWjW/IlGrwvTtr5L8ty72EGV
n+OLVcvSS5HhJ2a8XN056fk2JnrXb03Gh0u+3ZuzTbysk4giB27v3Z7xcnK+
eRwev9c3TAZ2czq5d1CUxFuUXVE8H7mI+L+dP2Vy3V+mqnRZ0Pr06gEGMTv9
8dag2zEp/rlbbxeKcF2rkRVRPg+WGGLlRK397yfXTzD6eGR0e229VqXSmwQp
1DerzwY3jeTca33M7vk0o9eF/7fjTtZfdvqFRvoVi3gebh4nmYta9x/R2Xjr
SM10fOjSCqq8Ov01svF9gyztpMsbpE++PEn8fwbnP/ei/J4QiZVlw9oP1crj
CeXO1h3I+Z5a7fjtxOxZmnA5UXJHsOsnnfzs3qWr1Yr0ey99sz37MO/Oqly7
0Ga/u4sii2JPVmw8Kf32N7W54li9FiP6q9Iq5NumP3wU2Vy3hX7yW8Y/vVht
zd1BNusV8QgZO9r9hF7WW1xfXnCS1uh1ISIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiJiyrrw86R+t/zCxbOLVbWtz3USfmJR/sPryBVJa56sP6bb
gsthEtjhRLVuY6MkoPviMwVzkx+VWi3pMGLJ7M2P5NGH8mMuRmvkZPEjr9yX
GO956d6dX/c6hyrvh56KKOdskKjQJb33Pkz53MiMpn8t3w5fA1Xx8zqzrHnL
F7J7f3t9N29Ho9eFSTObmVfmfqaqVDG/N7Vcf4P4rliSP9fVGFlz8taZsgGP
pGmVPUfrftRI/Ko6l23msw+nVjNbHLDN9jRM8vf26NfFPUr2tw+e1NyU55Xe
dS09YGLDLU+kT+KUjX59dHLbYOt07gr3XkRERERERERERERERERERERERERE
RERERERERERERERERMT07sVcQ0pdmqdIgUeNFTNXvXQK+njuqJ/G6HX9VUtf
uvn5as1wKencam/Udp3cqFqj/Gm/5MvVuWvrE7Q4i1ZqOmTPt986Tu61Pnvv
dr8Eo/cbk8eH5m2dggqqkvt6odKjFhrkWeNOwdtrxxq9rv/UEoNyR+SyVOXm
3bIfy/1QxaSLbkub4YlJbmfNyXm7tnRQZde2pgcX91REWucO7d0p+dbRmULD
V9seCJXoERVd1sVqxdVmUVT3Bhkv9yzI1nP/FFODHJu8edsEZ43UuKLff6Pt
NKPXlVoskX9zNY/wUBm06fu+gB9aiWtSOqxlzYw3T35nhP/bvuY9VHHKn9+9
4zRFEk4/b+3wL867Om1Pj9kdoIhdl3dN/O+p4pmtSE99x6TvDynth6xm/bbm
VmV2pb7WLUcaZHmg9fJvCek3D7Z6x1vN6+g1UqHE0fuxxeLE4kW+Gpu7p517
xc0NF7+ebBAuOb55Zu6wWyd2xwY83L6fPMPUapz+qWchD0XMf420D3LSizr7
+6jRG9P+/R8RERERERERERERERERERERERERERERERERERERERERMb1aw9ps
8vCBipTvYnpkSWS85N8fP8ClS6TR68rotl5XrZ3tdYOM6/VlRZ1mqkRaWmYK
+qQava6M4vEVjY+OuRMuK35sWLgtQSezDn+1iPFOv7k3tSfdtPpVTpXHhwZU
3njNIK9a9Cpz7WHaycdLaedtWO/S6X6ovLUZ7NDis1Y8Z+bt8Edt8sr+YcO+
Ngnjb0VK1j3r2y+fGisVlphfff2a8fm77NnUb9lbC4P4NHS0PPRMkYhs7e7b
XuS8+Id5D8aN2ulokCsDcpo8zaWRbOuf5dpedmqKf66f/HHO45Ii00ZWrK5r
myDlPHd8K/IxyujjgWnDyWaGkEO1X0m+Vda97wbGSNzGT60mL036vhq0aoTn
hl6PpfaWlS1vn40Sw9QWFQ68T/n7TFzRm/Pa9FLlYy3Xy+vmKuIyqOGRN5fS
7z0K05a7yq489PFumMQe3xc8elKUPOz/8OKEnElfX3PqbXJr5xMna8fNfxMW
mSB9PtYZkHulYvT+If6PVba3jj/TURHt9gNbe//5Hhv6tnfXX9lfGb0uRERE
RERERERERERERERERERERERERERERERERERERERETP96h/fsstkyWPZtO2rn
vT9SOvYJv9tI1YuLxw037YAwse6yfaepREnRi43qTCn2+/yfB0f8VzXdr8jm
Q1Hf/d/pZdBB23b1i5HnhhnDq8Uabe2z+IVsKR1na9cjRjoOeF0gomXS87L+
GL7ovPIqUR7nnj7qV+lnkmnw8F4tvaxTvP7jV7c5vzOES9TlZTOz/NDJJE3m
5/2XkUeHGcOdYd5t1l5XpI1r92cF+idI4C6ngr8q6n7799J//JuGG4Kl270q
L+fGR0rFTCOWRDxNfbm+D4fsdMubGCbj9vm3KbIwShYPaT/iYdbUVyciIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiYkZw165VMtRbkR7nNjcb
v0UvE0rFXb7UWGv0uv6qHTpXyn36Vbjs6btt4KKPOmnzxcpj1IrkyzE7d2vV
swoFNRK04aJz352xMrawWDnlTDB6vzO6EZm7+OitVAnqeqjqs7sGuWlmcNyh
izV6XX/VcXf92xSao8jkW81vD9ynyps/1jWNrZ+Y5HbMdxzSVxZV7s11adym
siJZetdo9uh5XLLVabF1bmxplzCpE7rAolCLKCn60l87o2jazxmL2FNhX+2I
BDmeUL3isBUaOfxlw9HNY6Ybva7UbvFMj/bWmxgm3d8nfHBrHyUfJ1c9VbZw
2p8PyWWLZa0ez2uliomDj4l7M0WuXD9Y1jl/0s8pj5picbizIjFfWgVP8FLl
64jm1p0rJH1/+J21Pmf7HFBKlTNzgxp4njBIjkOHNnzbm/b31ZT2UaWg+/MT
I8WqeEiZestj5f6T0TrXnyk//5eVCHt18Vm46Ip0e+fzXic3zvfLnGslOa6p
1Ysl5jlpVypyfsvP2yfW6aVk3kIrH1ZJ+/dwRERERERERERERERERERERERE
RERERERERERERERERET8e3w+5ULVHZsUWefk2r/zZb281HpdHONDfsW/s4B/
XKyPvSqTL/xxaPRURUYOzTdl7h5yWvCvWfFRh3V+PVUJsWq3vMNsRSzWHyr7
4VzyzasG385XGnA/XG5+yV3XS9GJ6fIaRdt7p515O+V1tGetuSGiXf+l/dGe
Wgn0WlgneAi5ZPi/PTZkZp6cJVQZOvrsiy77DbJwindO52Upn3v2o8+jeY23
R8mp60cHzCkYL5VM1thfjiZf9B8entF4cZvsBmm03Ozi9kEa2fImW3DvLtOM
XhcmzZthXU5XD4mSwE0jN3eqGS+6HdUKv/yYfue5WYXRkzdZq9I/z/4t98MN
svbZ3CFxpsmXv5pePbTd8/u2ySFSYnDYapOuWpna51LprUM5r41t8LO52YIy
PRVdrQmzzptEy9GQUkVaeqade2BS3erToevEzqp0CHarYuKiSPzmAC/Tiem3
v2ndnCu2HS/RQZVX1jMb7LFX5HS/Ft3GtON5/bfeujC34titipRe+GBE7F29
5H4ftvvXUb7nQURERERERERERERERERERERERERERERERERERERERETEjK3/
0mnKOTtF4u69X19hbbwsyxzR9UGxV0arJ1RjG/a97mOZ/qZt1R77ouRKTIuW
8V9SX+5K5/x3Cuc9q8iij0cvX6iSILve32n6/GCUNI6Y7DqwZLhUK9T8YtQ6
nRzp/6LZmkO/r7/smO+jTo5TpXPzNYOnRCvS1MPp9Olr5FPhf6bj2rbq5Ldx
sjPHqLJzLQzyqOk5q75HlBT/3Fwd4nbEzH8mF3SaY1uvRkv8A/u2bZWkr9Nl
kyf57epvkBVT9CcemWkkxLnaqNP1pia5navFGm3ts/iFbCkdZ2vXI0Y6Dnhd
IKJlyq+jQWFe1R0fxEp4XOebH8cliO52xLGVnVJ+/DF9W1G+9bfqp0rZ/qda
7SyXKI0rVgutMCcx2dq3VYZNyx6gyMrYAkU6tkiQQW8WDveMjUpyO+3NS+Q/
P+GxnDg67qfXzShZ/HJ4nnavf78PWDZILBMQGSZDCzubFZodJQEfypXIkz31
nXdZbbZ7WHdUxHPY6wVNV8bLggXanPl+vDR6XYiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIh/1bL7nlSw2KbIWvMrh/rd18upQI+6Tme0Rq8L
M5Yxm7dYVw98KvsPJG7L2yZaJmiuTWi+K/XlDSbVAktfFHWapUifH2u/DN2r
iqyq5GxfP/nyo/Bfu9YsV5bNoZFSd0Jgk1+zYsXFyzzU4UPqy7lKLl+tu2g+
aGmYaJuENu/cM0ri2hrcBpinnf66G5o+8m2kyoRyvdqNsVDEvIb5j42+cUav
6z+1WMM97UetV2V165ulvNxVuZqjyofCHQxJbse+Vr/x004nSL9zz27ojmtk
7B/mH1t1dzd6//5ub9i033PPRpV1F27O7VJGkY9Vj02beyPtzIfUptmbOt8r
V1FFc/9p9xMvDdKrSFAbKZx2xjPId5bD7WqPRb+pUPv7u6PEs/27d6bfkn5P
iK21cUzJcpFy/fvmDQeKxopVy0PeF8+lnX0S/x5Dd2Ub92GsQVp9X1FkuZkq
NutX2M18phq9rpRy4BI1x7XBEdLYudSrmHHRUn/mVbMz/mn/Ho7pwzGed5RG
exSZfXtJ4CqdXnqWfXvjyju+r0BERERERERERERERERERERERERERERERERE
REREREREREwOi7r77HAo9FQmvKnT6Eb+aAlZbjcsYCH5M/+tq2YUdRmwL0Rc
73hmezFMK4HXepY46UTOVXo3olDFxnPKhMn56m0OTCsTJSUX/WyvKZ98z72p
3dIdJaxV8c/ezOrtY4PUflt3X8GsaSdHLqneWeLZ8tU6VdwGlZ507eALabY5
6mRW1dnodaFxLLNw9I+JFVVp3v3Vlf3BBhnmcr+I/7vYJLeTb8RHc89GYTJu
58eczapFSWy5shPKlGF//rvce2Vq8wkBIbKhsabiwYlayWd3ZngLB8Y/vbh4
0aDt7x6GS86ciSXuJerk3mFn/apV3CcRERERERERERERERERERERERERERER
ERERERERERERERERMWM757vDyD7lw8TtsFPpl2WjxKnoiVNjkzGnLqnuXFkz
zjbmobjmzbVgkZdGDloUDIzbk3byoMy3LZiy84kiNwtqTufelSANSmu61Y/S
Gb0uTJ9GWrsNN7sbKpPmO6w98FEr7k6+MfNrp/x6GRR8J3hVVKK8ffZ5w7Ui
z8T2Qqn+1/dUSHI7uTrE7YiZ/0wu6DTHtl6NlvgH9m3bKuSDYcb2V7Ns8S4d
Fflq8/NriVXxskdX69S2zK+Srf11FmZqsabBMrHfgnMj/CNlS8VdqxrGJX3f
OGpe9bS3X5hcfz8i2NslSuYsalpwTt60c14jIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIipnV7lvZ+bmKviMPqO5M/HIqX7KOWP9m/LvnyajBj
2jf6QJty1VTpNPxqXPkYg1TynvhyU5W43/79jEFHn0U3eCxDrO6+vLw/Sh5t
fmw2+Qt5YvjXdDIpPyncVJG6BV2mfnFRpYVnyNVws0RZO6B6jj6rH4nhSveW
LTQaKZCnu2u8p15G6QpVbNhTJw1tQmcHTYuX/N4bfbzKGozeD0zb3plS23D5
vCLtE3uM1tdLkEoPLUf3uRUldueC/Pr2NMgT98OmBSw0MsIwecXdAVOT3H6x
hnvaj1qvyurWN0t5uatyNUeVD4U7MG/xr+k3ZWGzfIOipMb+8g8cXseJy4ET
E18GJxi9rv9Ufav36xpmD5EOw685fCuiFX2pIzMfuyU953BXzOmPqq0qNtqr
Q97WVGTuyAu9qqm/v89gxrSt9b1czoWfyY0ypeLf7ooW6w7xpfI8S7/32GKP
em1qUEkV2y4j33iFGGR0f8c7zb7FGr0uxP/xee+Wb6YcVqTautOrp2dPkMPn
xxVd0TnK6HUhIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiYtrTp5XJ
4tV2iuR8+WOuj0+8ZPsSsPh5YXIa8a/5vNiGh+5nwuT94HnHdSOixKZ5o5Uz
8vw+HynzfeXJq60Gebux488C1qp0yLIwUBJUo/cD07a18920X/owSt6N3r1s
YI14eZSlTYNuHxPkQ+PguT/vh8jhu4MWtXPXStyVNevD+uqlXvG3HaOyqdJp
Ve4bmd+rMq1xWMGngxON3g9M2zoOt3GbdMwg7+/umbz6XKT0PrRtamiByb/N
bzR2vanFW3U7713kp5fo8I7ZmpspMv/91HtVW3Iu/F3aP1q/c0uCTjYeDJ39
MChebD90jcrfM/nyPwecu3FhQOJDaVit7pQfKzVSqO/+xBm7k56jiGlLC+2l
Oy3qqlK334+ZeTMr8nn33Jdbx8fJR6/9mXLNCpdT6w6VPXtTJ99LtOm9b2v6
zTlMLuu0ip9/zUKV0J3+oQ+XGaRw5/5zX7YmLzG5/dJ400f7OYq0u3LaUO7P
+2LOZk8VyyUao9eFiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
+J/a0THfyB/NwqXwc51fxF6dxM0Y+sesfWk/56dn5Qb9tx8MkUPzXfK+G6GV
4a/OvsvhlHx5Vn2r+wR4mKhSZWLeY9V7GKRhi70l3h2JMXq/Ef/Hb61yPGtk
CJWVzp5eQ7JHSaR/u4U1q6W+PLex9nuX17+sSjGdzdktDi9k+9asUSeeOBm9
rr/bM4WGr7Y9ECrRIyq6rIvViqvNoqjuDVLf88LUqff4QyXM8qtyyC2fwWSG
QUzzjrm3tlDaz527tz+24sHPIfLz6MiAqiu10j5TwLRq9ul3XXR3rHVM3zVc
ruwJst5xVCfHJ/ate3xP2r+PISIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiKmJ0fNdrpe92a49N64rXEuvU4WlveMc12d9vOCqtw+77DOJ0Te
RViMOuikFfNW7S/sGJR8uU+jVjXtvM9KldzeM89H3jFIlgFDXlto035eFqZO
E+bN7ZnPOkwOdT08vJpVlFTK7tj5RLnUl2O26rnNocW7VOmxdVLN9T4vxLti
N7NBfZ2NXtdf1WLr3NjSLmFSJ3SBRaEWUVL0pb92RtHUN/6Ytnyb6UTctiKq
ONgdODFss0E+LlQbPRyZ+s6Rj0WdGtXpHSLHng+KKdNcK298Fn5xGMX8/3de
N1ll1jUwXAIdt00zVXTy8WPbghO90/79ChERERERERERERERERERERERERER
EREREREREREREREREVNOmxHtb5fYoIhrCa/yD07rZbK+/ZvzM7RGryuj65Q7
bMGoKhEy3Gvqia8Do+Wt+YCDtifIk/m7PO2y83TJmqo8PVg8YPgbg3iWuLwq
oV2c0etKKQuXfFti30id5Fz6tO3MhfFSa81oc8vKBqPVc9FPndfsz33JZnmB
sA5n9LLw1oQD32cab1/yqt7UW80aIkdeb5v9vLBWqk1tEF1r2u9zsaqd6TG5
YRNV8p+a36RigUTpE1h92LXJiUZ/ziml4+GJlT7UUyWPZfsXbtkVGdm8Q0M7
j/S7XlKbsaaHy1qfMIjF9MgjmjOR8v26zYkP2Sen+Od66kq8rXInVA6HPzlv
81ErVoe7NtpXO+l5cY5r26qT38bJzhyjys61MMijpues+h5Rkq3Onk39lr39
s12fho6Wh54pEpGt3X3bi6rRnxviv3KzZ2So5eWXYq6LXjD0YIyMKPyrbn23
5Mtj7NGoU6dxmhC57bWz3v35WnGsWLzm/V5Jb/9p06wNP7ZRJMfRH60d58SL
k232brP8Xhp9/BAREREREREREREREREREREREREREREREREREREREREx/bu1
/srcu+wS5HJ0nvXa4YqcKvLLasc0ckXw73Vv5rnmDYYpUn/KnRomP+OlVY/p
By03Rxq9rrTqvL3tLCI3KRLj27+AzRW9HIz0NHu6jlzEv0u3V6fWx9+LFZ+j
ZteyjE2QzQ4VvYbaJV8eVFLVvqw3q+z2J3Jg/ITAQv100tm7fpbWV8hjxP9t
ztN+cR2LGGToxj6nVr1QxMXQ//7AgN/fBzI7OH71q6nKnvZ1r7u/M8jg6l/q
du6c+nLzbOoHH/bfFS0JOVx26OrrJdxrSL8Eb+PlQ6a0sYETcjsYXsrX3g3W
6M/GyO3yO8/smZ18uVvG0jH/gQ0Ry1Q5o/tustleFYfP3eo00CYYva5/1jt6
ST+PPKrUrfT47PYxBhmiH+rl/z7mt39/5VX2sJrjVblesMJMu1hF1vzydp95
23jPq2GTT07fihukUosyk/qO10lQlQifddlvGH1c05u6d+fXvc6hyvuhpyLK
ORskKnRJ770Pfz9Pfqevm+WyFi1VmdK0vfdxy0SJOzTwyhS31JfXmjXzqPBO
W15IPdPZGxv2i5FBIXvrObVN+/vSk8xFq91bqkrj4T9NQjqqsrdqH5tP9xOk
7I7ISia7dZLpV6fIvr7xsvvZtIHZmqbfc8dYjgjbvi3HbIPcfPO8gHkhVdrd
6J5peWTSv8d4NeXHrFJ/Pj875bbjxN6KTH1+qmqP7qnvnlz5i/bu48vhcu2X
z94RsTqZs86rftM1qa/OtKJtTY/Gjs3jZKLnPYuhxxIkq8ZQ/PlE472vpTZb
r7zbPfeWP9fD40Yb/W7oZaDNofwDd/F9wn/rhFb3DwROUuRH09KXV1fTy8Hn
e6xvFdIYvS7E/3+9LxlQMmeZBAkMyvayaTdFznyamun7CP5dABERERERERER
ERERERERERERERERERERERERERH/mqf/cK3oWD5BGi+2ci9lr0jR4zkaFB3F
71hTq4OnPHE8NVuR0TX37A7spZcpAaOtMs3jd/H/Tv0Kk+/nj8TJrwSvb7cT
E8TN7eUxdT35Fcmt9/0c9i2WK7LIrVr728v0Ehxer1jWAr/PwTi8xzR6X0tV
Lu1/c1yaKGLr8qHGF1NyWv7hwt0PGsypES5+X+ftb71dJwktlrvH+TE+/84z
Vk323FuhSp92R5q87adKQ9Ohq+0+JD0Hz27Dcp/eBXXiVLninVU94uX1ksIz
R+ZOO/lUZQ5enDB+XbwU8i1//+oEg7i2ibx5PSbp+16LzVk6zjRXZWLHGsUy
L/mz/71em/dpFGv0/mV0X7fcPjpfU604x/muCugQJ9lHb8s9YYzx8h6XbBtQ
YeZYVWqY96r0MlIRS8sDTa6dSfn8uoD6B+KyWxuk/GzN3Jy+Otkd8jCmoO9N
oz+f9Oaak/N2bemgyq5tTQ8u7qmItM4d2rvT78+jrbcLRbiu1ciKKJ8HSwyx
cqLW/veT66e+PNLkctG0XuWuFFHlzqz8rWI2G+Toz3ahhUannX3ydO6eSkBQ
vGj7TuqRzdsgOz8+n9fni/HuyV0HlszcZpJG/MN328nTWMmXf0WRX5XT7/wx
llOii1Z5/itc+tU5V7SVSbRUKlb90TDP36/rx9vCsh/8835VqNCj69P/vF9V
X+f/2OJ92nkuN5R6d0Y5q9J83MfO5w4o0rXGH08XVUs7Oau3P3q8ruWjyNpM
HyJ/7NXL5cqfetbslX7zBv2ylG3slUkv5f07aascNoiJPrxhwZx8T/V32WP4
weIBGxQJGXT+e9Vzfz4Hm5B7Wo/0O98ymp49f9k3d02QrS4avwFuiizasq2G
jQfrCxERERERERERERERERERERERERERERERERERERHRGEbMvh6uGZogNo2j
i7afpojWNFfR2/z+N82Z/XrbKwM2KtLb57DN4gt6yTfFN+aPJfxO/9/pODjH
lGP59ZKtYNHY52cM8lz3aVdY3ow3/2+fNrmlXa7I5Qk31ldYqZdJm/pWrVb4
9/NnVoMrzTp1UcXCr92hpkMVmWmZe6WrO/mE/87jhsKhN0+Gy+PEI/nmaXQy
71LlZyXXMm7/8G4Nk88r16mSf0u8Uxc3VfZqCnY51Dz5chcN+YteXltdIzkG
Pdn97FishDnXW7e2YOrLL9o3U5u/24048R/nven7twQZO8A2U43tiuQsd+T7
1FKqFO/+4+fM4wa5F75Kbb4n7eSMpXXLvHM9MlKJkrsFXg8qK/HicnDvuMO/
Ut/8eVF8bdD21qosDt4RcaSFIt92m+btXjzl95mWbbWVWlQ1iN3r9kEVT+rE
u2kmk2IWt4w+HqnFH30ezWu8PUpOXT86YE7BeKlkssb+cnSCmO84pK8sqtyb
69K4TWVFsvSu0ezR8zij15vajfl+221PeVUe1J+13+ymQW7fGBNrFZ7y++Hq
cf5tFz2Lk9xd+gd4mv55b7zmWXjP3vSbK96xX0Alm9waObOh/KxxW2Ol+ImJ
vXKbpr59L7XZZvrhurE/w6Vh2d61ArNFSz+zIdlX/It8xaQ6I2j4L7v1qjRX
K0dZuKvSe3388Oh2KZ9T7fE9+E73HqqU6vJzeIPpiqxzPfT+ysG0c499ENen
xSkfRd5sLF5U3a+XrtEVzJr0T7/vy0GRE+1aVNDLu6qTns24ZhBNtWE1Aywz
3ntuWtG/dOj1+5sVWTZpTaOA63rp7JC/yZft6Xd+prSzSl3KZTcxQbp/mK/x
n63I2JMRZ7YsZP4jIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIqYFy+Q9
WOqoS4JcXROjnT5VESXOasSpufxeGP+3G9ousQ7zUWTsxId7Xf304ulUfPsk
B36n/w9NCniuj1qhyIPQirnfrNbLYM86rjnKpt/xKZNYLu+Hn/Gy8LjThdaH
DBIQumSCZw72jX845cXCCgHzwmXaqmpDPe7oZPrk3pevb0k7uTFpRbNOn368
aqtKa59NPap1VKTwmT6Th9ZOvnFus7r1a9/XcfJgsPtod3ODDL7wcOvFwymf
f/VJaepYvaVGgst0HTP7YqwYnpwcMbdo2s+h8vuxfZOyIUrsT9U+8DpvvBQY
mH3hzqjU16/tn9UStbeo8r1kq6I+y1RJtNeWyDIt5fOmjGWHIN9FLpVVaXd0
/vAbzwzicaT+se35ki+X73iN4HEdRBXbEf37XqysyGDXBpamL5Ov/QKrv84Z
VdUgLV85f4s8qZNHOWb43SuafvMYm9ot3VHCWhX/7M2s3j42SO23dfcVzBon
7oamj3wbqTKhXK92YywUMa9h/mOjb8bLV1w7uOucbvFRYnbn+fVgm3i5Ytbb
r9PP1LfPJJeJ+xrMy7RRlTV5s62d9+f7W7EtS7Nu7Zv0/epDkXfjYhtopPzw
8+tKnYmVZnElfc9Ypt9xS6pTTuUeOsY/Tm7mWfb048cE+dztdkztLcl3Hwjp
EJv1q50qH7utdpvkqMi1V1VqeLkY795YuOjbyK/5n0q10v6BZfNGy6SHlTr5
LOIe+99au+TwegNj4mXch+rHBm4zyPhbTt7tMvPe9A8vnOuidVn557zfWWr9
Ux+9tFpyvUKmiun3PTqlrb0z6vPCzYqUDH514vg1vbR598S5+VbGE1PGOQO+
xG/okSA3c03JN3iMIj3+OJaj8wz2N0RERERERERERERERERERERERERERERE
RERERERERERMO4adrl/h8yxF+uz5vC1zD72MOD2xu7+7JtnaH1e+ynf7wuES
Gd3iprJGJ9cb1by64LDx8nz2jTrV0zBZI7UX+2arHhErzWpf++RVJe3nTQ1Z
cMDmXU5Vpl4YWPeDi0FmVPad5/MsJtna35inarUfvVXp6Diod/7FihS4F9vg
TjC5TGnNEzt79j+kU6Tu1mY5bTSqZLdeUeZYn8Rka79br7hxZRNCRX/60Y3n
JlHyfrhVMYdq+hTvV54yd/MW+JUgvUMOdrg1QiNN1vTYvGPeNKOP9z/7rVWO
Z40MobLS2dNrSPYoifRvt7Dm3zA+qc0Sg3JH5LJU5ebdsh/L/VDFpItuS5vh
yTcPM5oTSzzLnnmAKgWfyfGsmxTRfrmWxTxL0ufVydIvdy7PqsrQn7bxgXYG
GTat1c5Lm5PvHEkuC6+bZ6Kfq5HD+Q2VP0TGSr08BcqsqZH2z/HWNicexQ8M
l31BLjcmn9VJ50Ll3ersSr/nrG/pZUrHRYrki5mQf9pEvSwvOqWRz/3ku38i
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiYsZ0Vcm2dRd5K+Jf
f9iv+C16ydLu8pMvTbRGq+d1tn2R6qVwUUJalPkSoxPf5bcGOa9JO/lCGyuP
zOmg0cjaXUfmx1nGyYfuPdRdXdJ+7tOLnA+jzEqp0rbJiOevjxrEwSPXu4Y7
YpOt/bE1C0pgC1We+poqPxooUjsuwG1OprTz3NOKJz8daD1ohComE30/Paia
KM2mRNfdtMB4uXatRxWotiYiVF5fmVDk6k+tnLiypfKbGimfN3j/+cwRjw0J
4vX8ZBbdDI3U/npmaMin1JfHaHvnWeBb6zCZ8L12681WUTL77IlvK8ql/TzG
cXf92xSao8jkW81vD9ynyps/1jWNrU++4t9l11m76zjZqVKi4KFJVRwU6XWt
v8dGx6Tvt/ueXO/Tr4gqjX3Nw503GUS79JSH1fDkOxeSapMmK7NcHKORR8WX
9i75OFZ6D3UrVs469Z2/q2uqZxKOhcuG+DfVSkTqJObUp6iVaznv/p2ugyqf
ybxCEeXx6zmbVuolomuRFgOKGO++ioiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiClnwfh3tm/WKOJxdveEHHv1sjz/ba+T9uSNGNtxcSU3f+8S
LiV9tm2telQnJ/c97vVkD/k5+Nf8cPmD7ZsGOvm4qlSmFsPj5dZ874TThQ1J
bidond3MeY1VKVxvXpmjhRUpN3BoTMEjcUbv39+t6fHgiKfvHomSMC/LnHxa
CczbQnnmnvL5db7TfTq8MlflWL+DIyZ6GmTewTUdijU1Xi4Z/mttbu76+d3e
IJ0bjRkyylIjTr9sV7m5Tk3xz12ybUCFmWNVqWHeq9LLSEUsLQ80uXZGL1de
ZQ+rOV6V6wUrzLSLVWTNL2/3mbfTfu5iarOkw4glszc/kkcfyo+5GK2Rk8WP
vHJfopf5UybX/WWqSpcFrU+vHmAQs9Mfbw26HWP0evH/du6ZWZlKTNHJ4GFu
Lq5e8aIdNrfDhmoGiW91qV6vGqqYfZhQaJJqkBU1vSIaNs9452Ba8c7iKuub
lQ2XMV2zTry9QSc5Q74FfjnIvTq9u+bw7sxWSxXJE11x9B8eehkdWcV16DuN
0etCRERERERERERERERERERERERERERERERERERERERERET8V5ad4dXXa7Ui
j2ucC7y+Qy9bF3pvyNSGfMh/Z8lckfalnoRLC6+v5vZvdRLsf3XitZXkzOBf
M2zEJfMQ0YjXpkdnNlyIlS61FlwfWCQh2dp/tHDPFJelirz/cLbS9cOqrNiw
oPiJxolG7/d/aodyL+6d6hkmI+pHi2mTKHFbvHSjf/Hf59pl3zljlq6qKuUX
FDvYINogPuvX3qttTX5XenfsVZtyw14myIodZx80Wvrneqrazvqu/fRka/94
jeBxHUQV2xH9+16srMhg1waWpi/j5EXxtUHbW6uyOHhHxJEWinzbbZq3e/G0
fy5EFKrYeE6ZMDlfvc2BaWWipOSin+015ZOeJ3lsyMw8OUuoMnT02Rdd9htk
4RTvnM7LyDVNa+bsn2ObhaNGHnW3mHwyMFbyZ3b+6Fku6efU2DZRHSefVuTq
vpfvi91SZWEuZ8/K7dPOeZTWvXCyn9LrQ7jsn9DHv0TmaHH3CYjO7ZX29yv8
fzZ+tc2i5hpFvN7e9aixWy8rcwUmtLfj/Q4RERERERERERERERERERERERER
ERERERERERERERERETEjuTLEr/aC6uEyyyznnbvbdLJi9e6deQ+QM4Ppy9uH
fb6XCAmXTl0fVB7wWieWbqbOg1elvnk+5Yjp8OseD6Vhr7pjQ/trJPDZyMaj
TyU9zw2N696TW+q9yK3KzvoNj9QcZZDHH6Y5DVFjjF7XP2s+Z+OpXHkS5dTP
rPk+X3sucWc911eq1cfodf2nekcv6eeRR5W6lR6f3T7GIEP0Q73836e+ccb/
54ojttdNFj8U6ddm5lBHjWQpXqvJppOpb3/rM73itxmmT2WCr1XvmTmjZaTJ
qk75lqS+8wLTlrlmOLQIWPhEAq8Of7m/k076Wt2NbHyDeYWIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiImBQLmxVz6//hiajdPEc/mKeTCRM/
l/x6IvnyfIaOKm5zf1eIvD7nWXuHq1Ym1yjXbcRA4+VlVfm5tPvqbKo8X9Pw
656uBnHrbxd5xZe8NcwYup2c8W5ISKiENCjQutk3rcTkidTkrZV86zHXvFjN
uiBVvD61jshl+0JKj62Sp9xwxxTvV7decePKJoSK/vSjG89NouT9cKtiDtVS
Xy4fYkr4oPiBY3N+KXK29PmxJxoZJO+i9kfzj0z6uaZTi47cPT1Eqhx82c29
u1bavy11N8w19a2jCqv77uxSOlwG5G1v/Xi9Tkocmpyp7SFyCBERERERERER
ERERERERERERERERERERERERERERERERERER8bXsOJb/6Iet4XJzSAWLsMc6
KTl8088FG4yXU9QpyLPwrSGh4mfesaHPDa2ETJr8qVKL1Jfv9DvzRnQy6VNK
lSqtNA2yHTeI/Qu7W9l3xxq9LsT/sbD3zfmrl4eKmvX4y2VPtVKi4fHYe02M
t75e6wrueeanygKLUUVyLXohL8uqG02/D0zxz209qkC1NRGh8vrKhCJXf2rl
xJUtld/USDv7DOJfsV+dwK5FC6jScVBD5++zDTJu/B6ttkzSz6nmGw5c/Jkr
VD6c3Wq1c4NWlg+fkmjd1XjrKF9064NnfcPlUqV+F3ZE6KRvxXEFu64ndxER
ERERERERERERERERERERERERERERERERERERERERERER05cWZzrnLVzvqVj3
Nq/nUCxaCnkfL6NZQt4O/r36r1x399SnEKm2vL/VyRVaaVQ7McbePu3nufnc
XbLUokGYRN4q55izapRMOtbMfV6ZtN+vtGL3iht17+1VqVR46aZQN0X8zoUX
qLg//e5vQ4rf6v5hkSp58tfr6xz4QgIq16r/9Owgo9f1n9ohyHeRS2VV2h2d
P/zGM4N4HKl/bHu+OKPX9Xf7at1F80FLw0TbJLR5555REtfW4DbAPOPtGxWK
92uz2j5ErqwM3tdftDK/YubTyqiMNw6YvOoq1Ln7ZvFTSZzT6LNZnWjp2f+J
+8d16fdcQERERERERERERERERERERERERERERERERERERERERETE/87ZvrN2
mS5SZLjP5sDpE/RSd4jz0193NUavC/9vwx+1ylo4VJGI6nP7P3+iSut6K3KX
sk80el2p3Q05yv9s0keVURsan/q5WJFg82I7aoeQx5Lcjnl3zK/dsHDZ+Wa4
a35/nbQKW1Elz07G+b/VoHs0vV/JMMnbdpAklooSx5HZPjlakU/1d5mnc0SN
V6aqPLo29FzRAQaZ1P+leaVbMUav6z811Lq47eLKWim346u+lW2cDMhU27Xh
sASj14XJ49p9dmXcvieIzdTNDxxGa8T8YIWx9dZMM3pdf7evW24fna+pVpzj
fFcFdIiT7KO35Z4whnme3D40b+sUVFCV3NcLlR610CDPGncK3l471uh1pRbN
X1u6H78QIsVLb/e1n6CV7Btz1jjqwHn939rvi/ejBZ7h8rpeDdPQQJ3k8v+Q
/fRm7pPG1r3piGp9nVSZG5p/duQuRXq2KnqlZJG0M89LVkss4/Zn/TVr353a
c7ciDU/HZO5SNO3Un9HcZx4wo+wqRUo9czTzXa+XUoVzXGhbXWv0uhARERER
EREREREREREREREREREREREREREREREREREREdOzS/ULgzTuiqxcdrhU73Z6
8boQXtVlQNLzafe+mlGmfswTKTZ68ZghM3RSu9tTba/TKZ8jZDJwamWrHxp5
Ylms4ZYKcXK23sO+X/okXy7Z0rsJXgsyqZI7qo/VsqYGOdt0/UaLycbLJ2zb
sdnUEo6qdHj4ck6DbYr4W9oe+pWbXB38a1rHVFPn3FHFzdeuzppBidJwVFTm
FXuSnnscVO5n0NfuofKm5vLlzv5aGRbbeUWh1sk3Py9axL8oVtQgR6r36JvQ
RSOdPZut7/7ELdnadzs5492QkFAJaVCgdbNvWonJE6nJWyvl19eJnT37H9Ip
Undrs5w2GlWyW68oc6wPudP4n7ng3Gt7kxGqzO0507FhoCKDg/OMN/NI+rzt
22f900rfFNnVtUe+DtYGGaJzXu5sm/Ln3dUNxT4POa6RpUe12Qd8j5WAR9Xn
vZCkn+NN7zQL0WYKl9OfplhNWqKTqblM71Q7nvryDDfGeXqXmKXIiBuaQ7e6
6qWzT99PvSfy/wIgIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiImLG
dsXHx1NnblCkX843pxue1Uvbpmajhs7RGr0uTJr1K3RbMb+XKr3qN6rr4aFI
swIf5tlfTX05MKnNjd1u/3/s3GlYTW3/N/BkLCoUZSYyhMyKyo+kCKFIhkoq
GRIyhYRKmTUoikRCQkgoikwNpmhQoXHvak9rFYkmea7neY7rxf8+/t333XXV
tdt8X33e7M71W+c6p7WOo6+piilLcpruan5bGRo4dvXwG+d+v37rdHTDWbn4
bOpVLqXjXcwlF19l64wTv18/NLcDv87Xk9mYTvqdMrWM5hbRi7LcmbtXI8/w
n9JwecDjS31Y8vNTlT53VUQXp/eaZudXKva6/tWzhYZdJyZyaPC+oOCqoXzq
2WlnqNuXpsv5hH/Nzq5d1vdWFJF/gacwz6yQBhqMaitsvUPsdbUUB1SsurGO
4dCLruUrVYlPttcub4z8iXH7n/zQap6/QI2lN/Ovj/j4QkSJ8iLL89yWty61
NF29NQ2sDdIp27iPSolWERknnDlZ54j9tKl9X5OatqE4m0pK7nEWVnNJdsvx
Iq9jOB+KW+1V6h11TVjaVXfNy8yJoargd7nTTzX/c3GUfu0tbcBSlYue3gB9
ht6X+vO79sd4aKm2Ojr1tN0ZhkYemRQy/qmAlFjXDdVn8J0HQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+OvaU7WTToi/kDYWdsgZ6MdQ
2or2Lmq+rNjrguIxdPS6Lu9OMDRGxzv9+CUBmfR+PM7ZRHz/d6/6VJ65dpmh
H9vMFdIZAX1998khoyNH7P0Efy+9njzZ4TeYR0rz+w3XCxVSe/e+gz6tZZr9
upfnDwvL7veB2u8w73DHopgOb52Ua3yr+XNLbD76ab54KSJj3ZSt2/RYGjrS
bo5ZTcvbF+zTpbkqc1lSL1jZn2/J0Fp3j+AHdsh1+aeMW/Ikv9dkLjkdkNm7
ay2f5Ie0nryph0jsdf23uh7fNeyWTy71GH/YqdyshKq9FUTrZjScxzXxeL7T
6LMs1fUZP9TMh6XI6sqS527Nf79JBcs9AvezVDXBd8JYnTIaZbcp5NGxMrH3
3786K/xQGnVmSdbewrbWWUSjHjkNv6qAXLg/XZC+dvUxJRHldzN4tncOl+bv
vn39UfFTsdf1r16ODp6Q24ml0IlaN0Y7iOh95Q4rO7ZE7HX9t1p2uRr44ShL
97h17c6YsrS8asE4zSIhWUZuHlo5gSW57rNyndsztG6akdYcN57Y620pai3R
EW5KKqA2F0/NOra9lAYfVHpSXt78+YRbaoapF/Uopuf1R89X8fh04mZyxBnb
lrePXHosb9h3HEv6B48Nf1gnoi+z0jNsVmH8iNuiYfPG2M0V0NrIrx3P5Pxx
bh2cHM0Z2PjzalCEi5T0mPf0cgt3k/UlDrWfHTjiQE3znyejefWXUlJKqfOV
tnNS1wvp29XX6TdnN//7BYT/jVH6I4dEmDJktLvbHsubfIoL3PJ8XFh+o9s5
/UB2e9F8htKu507IvcinsnrjsKPrG98OhM1h5wXGP4P1BLSevbbaI11EblGb
svX7t7zvHhBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYRN5Vnele+1Gxla7ZUnM6yfgDaMcptr+KWgwd9b1j12NLuWRRcdgn92XsGl
pB69H1s8arp8nqE9TwUMNyyi0Tm3vm2Zz6Oy8PS+WZuEYusf6bzTZ8xUWFKd
Os/qyEkRzeow+uwIK8nJ0wu07vB4ymyWHAY7ufAXM2Q4Zoe9lynyOeHf06Ei
U+bBGJa8VwySetGpjLaefm3i51RG16pKpcaFZpCtp49gKKeIPLfkWMZpNZxf
F80Kv+3uIqIDWVdCd5oX0lf1kpk68jvEdl8qvokefscyiG0TlXc0p4j6aEWV
vtRu/vy96O9XZ6xcy1K7zZe+p44ooynbisef3t/y8kXhr6EH/9iG9I0sLUtb
5SMsZmhc2Ox9pc8E9OKovJ9xBUPfV3IeBXcU0YOFZpyxFcXNXs+gWelWzk8K
Sb138m2ntjyav3fbmekzGr/ve3719Wrtkk2WyQNzYp9zKeWll0X1WfHtd2MX
akxaeYyhY+PYtKnHBPQqtihUV1F8ef4QQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIfz7HugZdCg3LovODZ04fOhqLjn0WZma
Etf4vCODIQWXO87MII0t/MXt7xWRj8OnIa8Mmj/37OS3Z3tH1TPEWTrVMHa8
iAYnm7v2sywRe79CKElaZ+tevK2WQV1HFXprXiqiz+6Pdg2Z0/j5+0ZT7WZM
Dks2Gt3ry4blUgIr39p5rkWT1TlwjblBrmkG3fvUde3buCJ6dCpM56t+868z
ELZkSef6lT1fGTr9LDCwb2cR9Z8z7Ci/vvG5i66rF6541SqDWBuOediJIvIq
Se32eEHzzy+zKXkuk3hZVGIwI9p6N5d++n/e2+4ucoYhhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQtj8xkywkFq9NItENpGv
KzW5xBq2naz2quEcpCFXjp33zk2nlC5piaVuRSSy/frJfnHT5TVtPL55Wbtv
DLlWdiwr6iaiAq9NIXw55CtC2JK8smDXysSVGfRy9gmm97Misku+lHtOT0Dy
45xe6PJZurE4Z0PPjrlUNU9tW87jZQ22c62qVGpcaAbZevoIhnKKyHNLjmWc
FvIVIWxOb4Rv6tmfx9AYBaUJFoVC6hrUfcCc/cWkED2//tiudAo5cEiNNSmi
2R+uj7u1qvnnY6LuicM972ZRct9hGdm2XPpkrvA6Kx55jBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghFJ/PpdS93AuL6Ula
aF3qEgGNqBqTcfWyqMHf6y2ZHuUkZMjRcay1kBGS8aTK7V8vFjdZPTujanYP
3sySn9/PAdEsQz9c5momfERuG4QtyapJuhEFG0VkMeT+Ip2CYjLfLLR5M/ht
g/mNDbVjGbHNYfholoLsx/TldSyjugftu8s5lYn9/iD8lQ1+f/qNR2oxefkf
6xA2T0A2j8yWnjsvovybqZ0PWWfR49VqkZu1uVT5bOHqDi+bPy9RWHUyTNaR
ofk5ButklQSkJNtaallmgdj7CUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGE8F/tfIBbYtq5hPof3aBusEVAcTWH/e3uNZzf
2JAduQZhnt8Z6nf8WcfjvUTE/dnzVkTvkmavf4R67abYdSzdzn/tHZbGULfn
zgOf+iLvEcLGeKHcqF+Uk4ge7djyfhSvmDr5lRsqGbxtdDvW2boXb6tlUNdR
hd6al4ros/ujXUPmNN18HFYykt2bwpLzpTnjTqwsIy0HTqvjF5H3CH9vzQNV
r2UXF1Nkl8Os3nIBWa59vbr/lcbv44PfjAg0fppFP+corZq3jksr7FwDkx80
f37jM997+oIdDOXnJFnzpgpozubUGnmjQrH3K4QQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCFsWUrHzR6Spi6kJ2V7DZ6bMRTvYj54
hiMr9rqgePTKMZt2/ihDg6xCL9ofFtCcaV9rMzoWNVn7UwqSF2s4M9Rmb2rJ
0skCMvnoeKf1JOSiQMl0XFC3r/sys+iMxahxWlu4lGg58NPnGD4NOt0x9exr
Ac2f3OpJd1WGZJzjbb4ZN7yufjrbaVu3cXz6dt3dusNkEWXJh66Sf86I/f5g
y7KmlcJxi+4MvX0l9SnYgaVP5fftbRQbzov7HrMjVfAmn9TkkvZ9qSqhzg/W
9Lx9seH8OmnHxcavLnGInyklpanMp9fWr/QrS4Viv++/a/uasSd4WixtfZdl
H9KVoQc5Uf3nhvDEXpekuidZbvYAC5YeLwo97XqaIZekzn0WtBZQn011qYqJ
DNXdbRcQvUJIW+SNB16cyKXWBVas/hARTQkxMDU7y6WAYfc0d65JFPt9NJcm
Q4K4X01ZGqpy+HTGH+ediNjsrkOuNH/uXFN5rortMzaYpbq++j39j7JUZlrU
R3pH4/P3mtsJvb/M5rRlaa5Pp+etvrK0Y3KmYo5NGTlwlYdoLeKSlk7Gnjc7
+NTFN8j/iGrj6w+Q7yh9JqOAxju90v7pWkq2R5Qyllf+fnm8n9J37nec9kc/
u8bYZ4xlKO6dfDfFCqyff9Va80GJ1//Yf+p7mdPdEiFNPDh38SE/yTnvTRi6
tbx3cQ6NtVl5vNfcYtq0euPuTZcbv77ZnypY9ponoJr7j7ttGcNQp9H+Rcrm
+P4A/6dfk7dPrL3AUMgOZnNuvoAe2Our7y9tuu8SLc1tx420pocz9NhtWa1s
uYCU1wZfCOzCEXtdEP5fbZfd6zE2Rki2Nfw3kZcYUpnRO+xJMNZtCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQNt5ub9Iye6dl0rc6
mShmO4c0Z0TNXCTz++U7waa1YsAhjTOidzREfXb3sOOFFPaArRWENTyuHL7P
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
QCMeTcvyPym+8Qwly5H3Fm7V0mapyx0P7SFdy8j8lcbqp1ub/3yiFLJ/W2gW
Q4mKhXc7XRCSZv/CBRM53Ea3M/nD1lUr+mbTSOVp8ZyTXLqxLHfKib+QX23r
9ty5yCKThs07F9qBONQzftK4bb2afx22HZMsVWrIUIQoQFXkzqfj7Sp8a+Py
xD4uoGT783LXUDszlvodqjeTc2OofEbEoYGPmy5P0m2aecCNHBG5BS3TX2DE
0t5tAYatfjb+PWuedmncnbkstb3+PnWSNUNjnW/rPl7XcJ3rb06vTTZlqH/K
1B9pN/m01Gp/is+llnfe9mgluLi8nE/azhkxbS+K6If+c5MLbZAPCSGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjh/+ZD/QcJc18y
1PXtqQVbtgjphH/GgdZrG59H1Nyuq5cKfHWZoX1Wo+ONWAGdST0Q01Gu6fLx
WpoG1lUnFaIYuqE9bFeXbkIaN9i6A2/Tr3u/kuKw9uu2WV3PJ/Vq0d7tZSVU
9vprcudzTZeXNbNfkp9LyGsSRZet3B6STwN72x19M1YotvtNKXRce33WB+rK
FQR5rSmmce7bXRfFNF2eEmyZrulnp62kxtLePknKGd55lCa37l2fi/YN5jc2
1I6jFGv3IJihb6/vVA+IZWm6wlytT1ObP2cPwpagcZcUFYUYhry+3Ux4MFxI
F76m6H661vh9XNevNiu221sqqhi+aeCVAvp6ya2PBdv8OY2mJc+Wlm3NpPnd
k3a/MeKQztEtRXeUJSenF8K/Y8CJQcfrZosoxufRc60ahg6UGxTapzacZ6j+
NGfw9SSGFs9MsHq0Skjsy73blxu0vPepz6tsbOVMGLK5uT3JIIJPSx87ftjn
0fLyJCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hM2nU6bDg3Fu7+mhTpZ+/zccyi1YrZrHIF9O3C7RODwjOOQ9Kb8pkvP8xKEx
clNjDPl4Lv+UqzrtEJq+TKO89/q5V+oKaZn2rvqRbr9u7lZEhb/gdV+GYvT4
UjabWCr7NKTXpO7ICfzThM9tNr87xdLUJ0+MiiJyafSNLkxlobXY62opzgo/
lEadWZK1t7CtdRbRqEdOw68qlIq9rt/FIxq6vmybdLpRHrLnk0oRjdyuWTxm
x6+7XjVWjYVTmLWvMmiET97e9O9FNO5V7JnBY9E/sGXbSlsnt4/rJxo/7Emt
nEwJ3TPsU6qK/E8IIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBC+C+yKzTLE04ztCtl1MrEBAGlmPiWXwooEntdsGXZo/WUj3GWLCXV
3njlc56hpV/k5vZVRJ7Jnxpeb89v/T6bbn67ZJ78mUvhCZvDy7x/3dy/PeUq
7AUzljLUdz6scmPoQ8nIHK+nv+79Ntb84S4rip+kU8wwi2c5W4tIzVA/3nsZ
5oukWVFTx2u9jUNr9nYTXajl0ZVPY8f7Zgmb/bp1qn12xauwdGv9+e5dAkWU
YHT3dj8byc/lWzjhde52KRHVrvb9aLOmkFJGtF4du3OH2OuCzWv7UBdX7giW
Bu3vdU2zWET+pwJejh3Ga7L2I36cO80Ecsj0ztir5Qp86rqivWcop/nnqbgs
ebzlI11JpxFbFQpnryki1a1XX3hbYX/5XT10s2vdx1ks8crtSq+ZMPQ9b8QG
3ozGn8dmrV9wYENVNulZmMeely4mQbbzDJ/DONf9U+pFWSjq/vGe1f6G8Etk
CEOPB9lZTJTHvP5VvBNtYCR1hqEMo86Jdx4LSK1aM7hbIL63QAghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEELJ9G3RGam4u9l0b4+S
nXMRl5SX+t9464+8GnE7a8qKAIFzJrWpq+6hP4dD6TbSWVOUkWMD/566Lt49
gzuyJG9t0327vYhSFS169SoqaXQ7JwK/xF+vTaMD3BfsQqUi+txpnNWFnb/f
+NxtQ8fnP2Qp7twSA5sVubQwpY1upzYrxF4XbFlGO2yz+f4ljYZM/Tm4S+ci
2mYpop+7mn++6J2Rnr1biaXNs0f1anVQRFJm5UrmkyQ/B1XSrXWL3HT5Uiat
WGAVfXklh/jdVI/37vz7rZ+Soub1Ed2Od86m4trUUf19uLTfiVf94AbOyRBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgibx4iR
Bmv21WTTodD8nhdbF1P09piQKYeRe/OfnBi27ueiHek08kX3s1kLiiit9ZIK
GXvkO8G/Z8nNLz6dVFmyVLUfPiVORDYhCbfOPmy6PDf9njK+ayZkknRYZJ7W
cA6VD2qnkzhAcsYt70arJcJzLLm/nFmTEpRLequnt7qz01rsdcGW5dnVmtNP
mWXSqKI1vbZrcyh1UqFhYO/mH+eyA2/Ube/HUm+TH/W7o0T0MtuHnXYReYx/
uq28+NCYfelUdKp61s1FRfTqiOe4t3aSs/7A/29twrmv1eez6SX3eJ952Vzy
WrPqkFwgzo0QQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEsGUY5jBn41F9IUU+vPBwvh1DvX6Ys/xtbLNft8/wtK8dfBmqaO1a3umM
gMIV+1b31ywSe3/8XQuffSh9ncSncm9+rsoxEfn9XOTf+jsj9rpg47Q2dPMo
ns+Sx7V6R/31DKXZc+wVxZg3OKb3W5mwIwy9dhj3JsJLQBczhw7tLd3y5svo
xIAeTidZct8adv/DdpYe/TAr3T1V1ODvjd+M2qd0IpsSfva6s+8dl7I+L1uj
dVry83mc3R8ttYgtJM9J85XnSvFok071ifF6QrHX9atpvWr8SlEvljK17O1U
LoqIHaVBa9x+3RyzkiLZnG7t+HRQ5yjvVH8RnQ7Qe1Z+R3z7y8wBS/cnzGDp
Xfvlt4ZMZ8jGvtPzg30aP39XLEiytN3CIdnsKJnYGh7Zmn0JbpfVdPOla/zV
d/rDRaRzeL4g/QaXVi+2VuxckSj25/m7e7bQsOvERA4N3hcUXDWUTz077Qx1
+yL56+SG0Yr0So+lnEsdmB+aDI3lPXTeK9X4eRG+u6jLguc8itvoe7quVkgb
LKZKjTrXdPPdwUfXOFyNpU6+u+8XpIhI2sKuvFuR5K+fsUk+HwcrFtKbwHjr
JaGltEGF1KxkJX9cNbdOOzR+jCnPplfTXikF1nPpcltT4w9HJP881lQ+FrYd
HxjAksLG1AGXt7B0tvU1BXWths+3DXnrfc7b8D/ef0MmFLRac1ZAI9gb4/V1
m+48bxI77uxyE5bqx9lmvXZiaKZM+PidyL38j1qzJ1X3DBOQ//czyxY8F5HH
bKkzGcrN/z1E6rl2wvUzDNkbPtaZ8UxACz2VDjwMaXnvd/D/O6Nmmu0SRyFp
qc8oLXdhSFFu8uSvHv/AOIEQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBC+P+MilrezaCNkJ6LPpnVTmWoxktmjol1y/u/b+tZlgXZrgwl
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
K+Ser5T8/dfIeGinu/nZdHFJyAqvb1wyqFZzczgu+eclKF43qVQd4C1iyWqc
xbnxexlKqB9ZvSiu5Y2ryqH+txMWsNTz+LxrezcyxOasvb/br+XV2dJc6zLz
zorTDOXr9H689JGArok+9qr0RW4khBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEELYktSed37Fj90M2e5+29Z4voAuyH/x7OVUKPa6/lUf
nT3SOjNZ8p031M6tRxkdW6Z2QHVnmdjr+m/teSKsnddKltpt65HGucFQbtKA
cgstyc+lgZJlgIqzadXPLJq/1XhZq4NcWjnEablJlOTkqHzZfih5w5kM2nqh
JsmsoIgiHh3cHjrp95tHPf2GeRi2YunFuQfKa6eK6FjYG4UDLiVirwtKthmZ
szxKk4vokmuSzItAHq1RDvFdFyz5uYJhcvd7d+knogO7V7vXGxXSKmr7M/ae
c5O1vy1cpn61axHFjBXYR27g0dEJ27faeUh+v8FfQ7v9V3UqZFna/mDF+Epb
EbmoX3L3/9jy9otF6prLzl1Lp+setgoVa4toTX5MhYzV77e/93+UWPVkdDb1
tda/zDnHpecjRg26GyE55zQoXpVTctUDrVh6s2b5nLQwhuyCom779ZL8eXRA
Nu2c4jaW1Hl80ZNqhpQiZZa6V0n+fTVkffsKYckBhhYrBfY6tENA7fT3vl2e
2/K+z0AIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBA2
ZKuX1zyu+zG0xnqfql6ogN5323rawLBI7HXBlmWQ2lzl2c+y6ZWTolcvPpce
ebWdddsPeTt/Ortg4+53sQzJ9jigIZ3C0oYjHq6zjSQnf7WxRixYYHMqqJA2
sW/O8dhSipys6peniTy3P+3cZXGU8cBMik7bKLdclUMzP38YEjjo183hEZfK
KUpLzo5jaUzOvj6h9SKS09EPNl7Ha7L2TWPyFuw1ZMkjxiD16SyGIgOO9X6g
0fzr3iGLwXkyBUIK+rw8J+hgIRmL5LvYztop9v7+u9ap9tkVr8LSrfXnu3cJ
FFGC0d3b/WxKxV7Xv9q+ZuwJnhZLW99l2Yd0ZehBTlT/uSFNN65amv4vDh7u
pplJBUkDLWVHcGjLrSm73AdIznr1ndG11JheSG8HzHfcE19Koqzotft6/n77
UdfDuT2tXBky/xFQbX+ZJfIZam068dc9hzTkhykdH35TyKG8hQvVBssX0zDT
UW+KvXBehX9Pn2HJG88GMVS2MynCJU5Ar/bMuLHnMN6XIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCOE/6/jA3YadTzD0yeSp6b0L
Asq+2mN+l9nIwZA0ZRZe7GZamk0Pr1htnlbDJf7NSW46x5CT8590HCBbED+p
kPp5eewbFlNKk12rry1S/v3ypsLaJnF1fBnqt/BtTGgUS2oPFiX/1Gk4b6oT
k7l82GCWUhSzVyW/FFGgvck62dKWl//W0vQOtz7vsTyTCtfYr7SYwqGndqOf
XeslOflsze2hQSump05lKTyo9vTO0Qy5qax6Uilqurw+m3W9hwjyhHSxr3V4
zKFCepOgdPro/JaXxzhzwNL9CTNYetd++a0h0xmyse/0/GAfPun3lPFdMyGT
pMMi87SGc6h8UDudRAnK95N0DZcHPL7UhyU/P1Xpc1dFdHF6r2l2fi1v3Uvz
vLjN9jBDXytjhj6LZOl44P7etyc3f36gqEvPhACNQpJZmRX28VYpZVpPOBmg
+Pvtpw2pWXt/qMXrbEqs7jT+CMOlDsdG9Zzli3OapDkx1uPbyuMMRexXrJH1
FVCVyobuPfrgvQlCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYTwV/Hi/ay911YIaKueZdw+rohCwkKPW6izYq/rd1d2WqcDz20YOnbv
baQ2wyfLhV2L12wsaLL2H9h7a/kuZqj14s+uAx7xqf8M9aT68nyx3/fv4tR5
g74+dOfR4eOGuqL3Qsqap6039BAj9rr+VYeoxBVTA7NoScXjSbFmXMqTcvqw
+EnT5QgdnvR17MEpLLVZV1rbTqmMPkducC/Y1nT5UU69K8flthXS+44p2wqn
MfTBU0P+o7XkrG/Tvyen2t1iyYwzsapiYRnJlrZpty248f0zpDRzUse6PMp0
f2e5JL6Essziesx0E1+em/6LK6uUZhVQfPv6m/1Hl5LTQaVWroniq2f8zzdb
+p1jSG/xheqZ7wQ0zX3y1VOPf92cJY8ZK8y7O7D0PHjZmdYZDEXnxuosDGi4
/4OcfgyKHsKSh4aRxpl3IpKfMydi7LeWl0fXkPM6+u1e0kpEivrHnN2qOOTo
oTFcZsFjsdUTr321bZfHHPqwrnZw58F86uswSDO5XHz5dREV/oLXfRmK0eNL
2WxiqezTkF6Tuje8zsx5K7T87FJKd26Y77fSE9KDGTd9C8a0vP2rqZx4PN9p
9FmW6vqMH2rmw1JkdWXJczeR2Ov6XVTp+6VP+DouyR7OMdztyacxJ9YrdVdv
/v7fW7d8nfmgTHKOtOqfp8ohq56372wY1Ph9Ku7wDiZ2DkO8l19PDQ7g09FW
H+an9mq68/bYLYlqPwey9P66hXrQUxHl65kNePpOctZn+HsqPcRzy1eWR9lV
nMz9iiJqa+55dXhk0+0jE8qMX2gbMTRzvI/ugyN84mVat00V5DW6nZmWhifU
0/i01kFm9lc/ERUdX3bFtebX3e8ghBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIJd0rBvr3UzwZ+lCkonh0k4A0xsfv808uFHtd8H9X
8cbZh1my2WQ2RyvP9BiXnkkN0Tp3s+lyDn9VTeQeFQRc59DIkfH35XrxST4i
b6auQHw5Zr+qIRs3mFvashQxOPdt9l2Gfmo92brNqOEcKnXtuql3lFnaFuYQ
pu4vIuMss/Aac+RB/WnCil2OOkvTaUCv1CVn9Yro1XOlBM468eVPSorfP5s7
5f0xDpccDimIi2EoVD/usPW8xvebaUz0pO6TRKTs3uag2phCUr6Wbczr4iz2
+/tvNen42CLfhiV/3o76qmiGAlYwqwJmNL4fTgR+ib9em0YHuC/YhUpF9LnT
OKsLOzEOxa2c8YdR+R1YSntqH9vTQkRbluUpDU0qEVs9b07O2e0+mSWVCe4D
bqowNHCFfYniDV6zX3dO4DH/xYpcslIfkuKzkE/lB1V2r+uE3Etx206wqlZ7
UzZ1DjvTdnMClz70uJp8+RzOqy3V7m40+4oPQ3nCW1suBAloVmD/2C3jft18
aQghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEMLGWjjO
wfHgSobeuL/R8uHxaURl9E8D2wKx1wXFo97pqoE/g3lUn5OT8aRYSONOKd2o
9mXEVs88pZJOsteyqfZuykCdXC719HKI23USeS/wn7Vza8/lgt4s1U7l9c4O
F9Ei3rGjw440f67gq4fHfZYcySb1pBM/Y15zKcBlgOL6M80//q0X8oQuOz+R
s3XyxvYdSijIrHWhZ3fks8H/qdrkn0+L3VnS+lQfWjeSJbbySL9leyUnB9X1
9tHpfo+ENOfKXpsPVwrpveIX7xkqu8Re17/qzWtlPkyRpXxTT886dxHZqqUl
Go1Arqmk6Xp817BbPrnUY/xhp3KzEqr2VhCt+wv5mc1tcqR/XZ/0bJo7P1Xd
opxL3Z07WNv4SM65q9Vyy5qI0SxdnDX+2a4KEdloVI83Nm7+3Ej417wad0PW
tSyL2ox+va18L5cybHoYc6Nb3njL+sq997ySR1m3C81XKIvo/g3psq03xfd+
BH8NtaOetl9tztDFvFHrZz3h0/vHBUXRUvgOAyGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYSS5thuKpfVLIU050OmTfJmhnTur2Xd9rBi
rws2zmte1j9O+DM0z6mj+pYrAnq43bnox5IisdcF/3cP2e7I1TvK0MhVQVXS
hwRkyBrpTujQ8PPy2J8z+GIFn+rVDN8VXBKRVrfIK/FtMU/FbUysl8eR/dl0
/btnnO0LLnW1mRXqEiy+/Jl927Qqf85mydkg8ejTpQyFbzxo9WVpy8vDEZex
ozbdOO9bSNt7FdJqQSnV97eNHzOh8blzBTI9b6cV8KjAe07xgY4i6vpgn73D
lZaX53M0SqqoMoAl1YWjzNtuY8ny3fr6GG2R2OpJrfIZkXmPQ1O/DKjL6s+n
2csCh0Yy4sv9y5nyNaH9AJa66Rw5YxsjohGxBiNORyMfT+JM/V6pMkJEA1/O
vbD5Npfk3XiJPgpJTdb+oUErpqdOZSk8qPb0ztEMuamselIp4pFpTN6CvYYs
ecQYpD6dxVBkwLHeDzRa3npbcvOLTyfVP+a/qv3wKXEisglJuHX2YcPjvKKm
jtd6G4fW7O0mulDLoyufxo73zZKcfE7418xc+0gpnQrpyOm0e4EPSmnemP3P
VvRouudu4Dej/FI5j1Jtdq3fpfTHOHzw7mx8JEMvRrWr8j7JUpdgvtU8Z5Yu
FyrOuz5NfPtUU9lzl//55co55PR53KTnXYop/dic1Q89G78+DEkzOhmxiKV0
tZnHjPYw1O3UddXK2Ja3zsB/75lsQw/39gIy6cnh9IoS0ecea/TWdmr8e9z0
booB308yFOXvtnl7lICmF00327AJ7/v/lHZdeD7GZxkK29HJyOGFgHyLglc8
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
vaKKaJCSY8hbHSHduhvgG7WmlJZt8b46oq+AKuxfZffY3nD+mGDMIa26nFKq
y100eK2lgNZf46z2jpFcXhmEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCGFjPfjq2/suolzyjasZeqCORz4V12u2hSAXrqXZ
e6f37F6RGXQ3O/N77nIOaVgMyjhp//vmGTaVm9mwz2vUWVqn20/qWYqIUo9+
rjjCL5d4Xf+0UdK79NoNyCKh8+PbRspcejTuxvnwIZg/TW3wlarwgFMshcgv
1d13vJCmJpdkRG2zl3hdrcX9sfbRO62zqMRp1XKbSVx66jjqWZxi85vn9iv1
losUWcoat8pR4YyIWO2R5OTX+val5uagL3OnSrtn0HTZrHGzzDj0qrLQZMvq
5jd/JGWCSCHzxfVcyq680t2/hEf+jzTzBx7GfRJCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQwqbw1OR4L990AXWMGPghezBD+0oL
M47MZRv8/KLcpc/3uDI0enP+JG5vAcndSynQeF8s9jr1FPz0TNryacqRTu9L
Bojono3rDYvrTKPb2Tj4neknd5ZeccbrLCtj6O5U78I+L1pO3ou54Ywd+/xY
Ul3RNliowdJiv9kztNYLJV4XbBn2rFRSFXkzlD9yhpyGoYAyt57pYza5pNHt
3NycUqh5J4d8Sjs/XbySR6/jD3jZPBB/LtDZmj0ehW24VBP3ImnNnQq6kRJW
Ovaq+Od/fjfZ3jHVDHVdWhHmJi+i5yEn4wfJlIn9eztMffdMx5MlxxEyR8fV
MnQtxHftje8tZ7+CLcv93gNv6+/h0zvVsQsPO4moXvhFdV5J48/Z4AvPDh7N
K6EBYWsu7OpZQe12BMd0NhP/Ot2SM3eqqbKIrncvHuOzmUd+kRofpi563mTt
659TkMnawaH842cjTqyroPl80f3gXZI7f/3GJY2sm82nDcPeJCiaiGhSgMnL
NW8a/7wg/P8doflj3Z01LF0rerM/Jp2h3s+9Bz092PhzJ+Lrs+3a9Qxxl0w2
vqMnIvWkxVuVbZvu3JRa5qU55GcJ5fRRHHdCvYJuj3ln9X1x061HBTlF76XV
OcTOC1qb6s8jj/U1A2uvif+ek3VTX71mK0OLz9REtbUUkPPN9fPvb278PQ22
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
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYRQPPa7EBaVE8FQ9vkvF+vjBbTwTrbW
GHeOxOuCjVNhhOt4RTuWRs6f7vD1NENycsKMB31+35yflu55tVMGT6/m0qOX
3rJ7i3jk3WOO2qPDDefMdH3T8+y2RSw9ClNqO3Y3Q+esTdd+e41cGkk7L4Lb
3elUBi2es2BcjQOHmG8n7lYtw7prrv60FHQe25cl5Uku8WZhIgraNKenmmXj
c94iN4x96RjIpQVKXlFHpPiUtyWvVv6DUOL9a+5a6xezNbIiCr6o3qbGuoRc
baY8lx6+SeJ1wZZtas2BEVm3uDT5k2pdjgqfZi89qnGZabr1KMtkWQ9TZym5
V+7KpNciOrpq/hqZ8paTD6kfs+bXgk0ZpPWqz8mceRxKb2/1WXoVzin43x3Y
pdhCOSeXpu6tlbf4xKO0+0/WP90v/nvm1rGPJ5nNYan3BZNLhqsY2tJHdv/K
zbjf/mXP+xXlhyxY2niv/aW1XgytWdXdc8cZjE9Lc1BnyvA9wtBHKVPG9bqA
aPpN4V5P/N4CIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hLBlqmbWyTrGlqG6a2OD8/L4tHfR9qp6w2KJ19VSPf1NxWzLQhH5tRt6WKMN
S/7O7XpVprMSrwu2DD0XzKmPd2GJuct7OiebIZ9rhb3MI5suX8j7ZnTqugs5
9Nbf6/kgOx6xdc8WnX/U+vJP3LvOOJA/M5vu336xNTiBS5X8r+y5r61vHOA/
45OrQr5nHkNS7UM/fD0vpKSFM87oVPMa3Y4aT08hqkcxdZy/8ezL7uW0qVCF
W3AN+WOS1k0z3XpiqZDu2ycN89hZQhWFxv6zNXwkXhds2V5W1Wd+DSmiHnbz
vukll9GsDbf7WgY2fr1rTqybfKMvS54xLjGah0RknrMwtnZxy8ldbCpnTlp2
WOCdRR3qvvebbsqljBXtcib1xf4J/7vuFQMj6+bk0sBDUSdHXOXR9djshTn/
QE7g5TOdS2OnsfTofFUCTWRoskO19vfOuJdK2h2PXELNuzF0odMf60+tZmnn
0/mrOvSolHhd8H/25NEXckW+DD0f10tB3lRA8x3tFg5YVSLxuiCEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQghh89Jq8aZefqEMpU06
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
fkfan3FBZ9fIXNoqJ5P8KopHoWExp7tdbDn7rXfRjSP81+V06Krc03ZuQoq0
Hrp3lWnLea9pbf4SlkRWnWQoc2n58swUAfkZaJS1vcmReF3/6gsp5cwqK4bs
twzd0i+JTwHtaz0zuuH/EcD/zIkb1vrO+SWg9V2l1LQmMbQ+e97mc3bN71yA
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSwOauvyJp1uy+g
qzPcLg5TYEiTI5rRfSb+bhf+Pc2n65wdZMeQXPXXwLv5fNL7GNGVM1X8eQJL
5zmHxdozFJTaNoRK+ZRobc3GLEWOAfzvThmcvH1cagUpSe9+eqitiKzHj0vw
+6PpclRStDNnRJ/Kpp1n0yw6FnJJZLVPU7kJ8y2bm5pJq4NeqvApK0IUe0Vb
RO9TO82veNhycmlS1nXp09ucpZyn1xVPL2doavrgVc5uTfe8aroO2nZSg0s+
azrY8f6cdz/a+wQdfCCUeL//aWn17WcRPzlkOqHXzIO3KmgwG7Zj4JXWNw4N
eV92ja7WVJZSPkpXxoxhyCPf0NCxtvnlg3lx144fWMJQv2XRRzkvhFQ8RW+F
y+RSqoxo42YeyhL3/K8+/axYetvxHHfLx4af78t9cSaLVER0qSSoSno7jwpW
2oYM3vxc4v1rLqb16pYVO5ClTr0H6rtdEVGpvluO2QnJ5da2FPmT0mbO8mJp
dO2uzMX1DPVos/6le4eG5+FC9QsvInglNFpuh+N9hQp683XCjztzm25fCklo
w6k+zJKapfbijp4s2b5bW397ovhzDq8fu9pGI7KEHMsf+72qLCf1/hWpDuNa
/n677aMC+8dCljI1fR7W+DH0vkwrb8/T5ne/Kjgp69lbl09fL/nbd54gohy5
0yvlnrece1Fj7X3LvJvCmDwatkh+jLViKfU9mKBaEtj8nktDqlYO6lZdz6fd
CXb3ZlwS0cPMQI8g6db3u4dabI567yiGDss/vrTkjYBupPjp2d1qfrmF4vbc
qx/T25xi6ETvdyoZaQLyld49aGVi6xsH2LTWnPvjnmqokCKzEy57hzJ0fPXR
pd9CW98+AyGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
/pPeSHDQnzRcQJ3XHOth/kJE36bPeeWsgL/3b61mKtQ465szZDN9ut2z43wa
0aHHB6nxRU3W/vQzFytrTBiq9e8+9dsePi0ynOXZIf2DxPvdWsxUdIzkjM8g
JYfvc5N0ODS+v8P2SneBxOqx/9S2zfFjLNln31ny2p+lmE+K6/faiT9/rCHd
322r17App/YLFdauHiWkeOmPLrpDxZ+LdSFxs02kZgHNOjBXY0NVKRUsjrNV
km74ueieJ0ODaj59GntA9OKciPZN7OlkJPX77tvyUr0m13wU0rWuFeXFV7l0
/Zitl9rEh41uZ/b5q9GiASztvhgnGxsnopUxlrLyh5Fb+JdcnfVv9/LLaKdI
bmi3SgGp9ywPtWnT8PyftcJsb0gMQ/mB+52lOAKSG+vrPYhpuhyqQXdWvAnq
kEO8PXLJTFceha2IuBuYJ7ncNq8F7ZYqRWST7eL9rta5XJqZP3nacUHLyZGb
9i0p1TGepYVc/ZrPlpUkU95ByvNEpcTqOcVforFEgyXDixu3d8sU0exfYfYH
65rfejSyr4nolsDQlYnDNvfoLSRddfvOFeu49PXC2Mt76hh6q6b61GukiJ7w
SlPzzMoabGfugQMOOSSiuCUj5y79zNB3wfSNFq9/330bQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP4eqn3eGrHVRUST7cekHpFl
6chwbweL98jNaGlKdbzMW3WVIWXZ4WvT5IR09vXokD/suU3WvtGIcXTpIUNZ
ajF+D6YLiZOQ/LScabr2YcvyMik7hrsIaFi9YaiBUESy/lYrbUaKf98oMRmj
7Hu0kEy0VYwGW5WRpp9i/V0j8efsrZww1zT4KUNqNQv27njLUr3mt4JQM8nl
O0nKyDpDp4v2LB3P53w+E8fQ9aCx9pXaAnofFD5/mg2Pvvfa4LFkK59Ovloz
e/KQpssb9LjO1Vg+j6UC7j4XRTeGGMHArQWhLScfrLFabkvqVHw5l1zMLvhH
feBRzQjP7TIR4u/vLMdehX5/PtfuL8cd8n3M0vuIbeoZM1rfPG9In8Mr1rw+
wacOR/pyrDxFtC2E862sovE5lnZf7q/31GfpxdHvrvbSDEX0edBp2p4Kcqpe
3/VrZxH1PVn04nU/Hn36wBUWLXzSYDuVEW3czENZ4p7/1aefFUtvO57jbvko
lPg4tRan6fc8GfOWoe0j86J77hDSs7R7+VlBPInX9a96nQpJjx/Cp2lGZ8o9
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
p8nThrUXkvskk76W0xped6de508s+SCiLh8ePVy/t5iWKC9TtqpaL/H5JS51
z5OhQTWfPo09IHpxTkT7JvZ0MpKS3DyB/2XS7NA3xqk8OiXvP+3NQz5NSnyq
GzK76daL8yATqce6aTRH9btD9p/7lWZRutJlCe5Xhqomu1wfltPpfbelHVb9
uW+F3ZxRbMxI/DlA8bqmvs3RlD/Ppx12ox7MYgUUmRpwu0tXLqXIByRy9Vha
3C39nlt7hsLVdKtTvBrOiZ06711oUS1DegWOKmM0RPSx+vPYA4ZlEu8fhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIYXO34/Ka7e1T
BHTWfe30kaoMdc66MN7FHPkz/65VSaovt9sxtGDrXY/+hXza285g5UajYonX
1Vx8b6W76nVABXX4qpvyIk9IcbZKzu+DW1/OTLvtM3PldzCkVzf9Rd1SAalc
/Hp36/6SRrdjlv6YzyxhyUhlwQOtMIakx815eIVp+blzHxbkH0zzySHnl/27
ZRjzaP2UqyP6vmz5/WpuDitid37ZyNKkLa52Zt8ZmlY5+/C8b02XQ+Wx5Kx2
0AYevRo795pfMJ9UNDbW9tASf+6cuB1iPT797Vc+Kf0q2XwhVkRbfrU98+Z/
yW1bdP28ypdOLDl3ytl62kpEcRapt1UfIh/pn3KN9qIOr+8Xk8le8/KAdeV0
Q+7tQ2tGcnlr4vaAzPVyWS+W2qWv+lCjW0mvHi7wLAisbHQ73jtUuhiriih+
25h1ajt5pFckO8f6+HOJ9+938/L+uJHvHVnihWsob7jP0AVj97QuVg3PTzWe
nkJUj2LqOH/j2Zfdy2lToQq34NrvO58b67wu2kK7Xwydtp10eOx4ESmsjwhO
dcJ++3/pkp5X/WKTkIwyfA+t9Gdodoe3318FNP59cH7XR8WHL3FJS+vB3a6K
fJK78MHEUCCUeP/+rpOT3/Y13stSXO1Ho3NmLF3sf2L0nfTG15/GiWxz/2Yu
3dom7+jN4VHfJYeupB3CPVbSHpUeXD9xMUsuRyfcqA9gKE1eMVonQ3LPpRf/
8+SqcIb8bsd4SJ8T0L4eSXuvW3DE/r2CUKm6u1cq6Jdw74+kSiF5e3+IZ4+0
vvfx5ubeH88Yzd0M8Xo/az/GTUDyfTpe833S+N8H4D+jXJT3jQqdP8/Ng7Gx
i5YypPfHlCt17vgdFUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhE1nuYvM/LZmDH1lHe30Ivi0rSr83izVIonXBSVjYsGYsBF+WfRC
r2Ziylwu7W73YuSb3k2XPxYu7KR7Qrec7HxdAkQKQlqjZHF5Uj/k0vxTVivV
h8Y8Kab5+7Y75Gwop9ffP7y2qJRcvlxNuJzAyTGbSmUmX+ycyKVbwd9PL/0k
ubymwQ5au2TGsxR1f8p55V4MCeoM7h07VSH27zXgdDthqSaiHhaT9yYal1B+
zyPBzGnvBj8fomTgNv8SQweeJk8b1l5I7pNM+lpO40p8fonLC4mbbSI1C2jW
gbkaG6pKqWBxnK2SdOPnrTDnV5+Vcix9XWFi/HOdiIpsurE+P5Ef+JfSy873
a1+fSQ8fbVjdvzuXqgryFzhrIn/yL+8nbBVNqSugZ+uzgq6PKCPWtlv0/BEt
Z3yCx3/RCZzEUoc15T+k5Cup6rKbf7Fn4/Njm0qv9OTjp6VY0n4v0++cpYhe
8HzNRsS3nPUos17tUNdrDLUVOhu++/M+U/T4jkfs5t93H4YQQgghhBBCCCGE
EEIIIYQQQgghhPD/sXfnUTX2bR/wVYYUkUwNyiyVOZTkMKSBUiKRMVJJKVMS
DTIkZAohUy4ioZAhUhIpQppH1W437b3PM3MD8l5rvete633u9+l+ru6rfe22
vn991rLO9TuP8zfv/viCEEIIIYQQQgghhBBCCCGEEEIIIYQQ/jMueeITNCiQ
IZ3g2tgDATyy/HgoWqITp8XaP1z4epy5cy5pZ+wr6BzHpTETi9c5h4ou/03Y
Lu+2dG1EHIcyTh3uKHGsihwTG1y/n+IL/b23SmZtCO/BUoWJxGRFPwFJR5Te
sh1WKfL++LuGBskNcLBgSdqse679WobyBO7DdPf8vvOnufYu6Sa1OIQlvQhp
/oU9LE2Uko/m2wtEXtdftesvTf0ik0z6snHmVP59Dg2OswvYaSj8vLXAz0FK
yR0F1NN1+nzVVaX0wyzEz8tyq8j74++qnWSzKWNbJs3fc3v0ijQO9bbdFvxg
ivjk1zVlce35Xr2OsTTZ3ZJna1BDmx+9lTsbJLpcO1E5/ozr8H4LWYqd/FB7
316Gvl6XOCWVLrr98KjOGKNR8ixNfZegt2u7gFL4Wx8X9hWfc4eRkLO9sIVD
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
5Q6zayUFNNz3mYNxQcudI+IuqxlMqeklNNz+XZ96r0pakzZKNuFLy+0D832S
O5XczCVns2s7z7/nUp2Wu69MsPjnwv2uakifbDh4rZLGb8gwVV/Cp48yKUbj
prW+fW/jN33bURL5NKb7uVAZq3JSXBS4U/065hX8Zz0Z7lXz5jJDo8ytC55V
8CjK8rWVZz1y/CCEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgjFzWuaqVZOs3lUMNh/v1eugOyH316vO4gVeV1QNNpX1uUvMWPo5Zq1
0w+erCZ5rU19LdWLW6z9HDt+1h4rhsJeFyc43K8miZR7+m+SW659+J/teTJz
08n6CprJrJcYUMcjNt3ALqFD0zlLPXLitExeZFHAwBMfLmwoox9fvIM7yIp/
Xl+vK1tcQ64L6PXXFaOyR7N0/YZEfGFN29v3plYE/tptwKOo2u1TT2YK6OCC
uudV/VuuH7w178bfkmfJtOAerfcWUJ/JV/sV92s633LU/hGatp8KaUZkp/zq
4RXk1WNiZbhGy823pLAtBy++Yuihke78nhks9d9nddHIokbk4yAsdY5oat9O
YSgrk0baruPThESv7RNsRJdLbO/yx4yMb3waOKOv8faXZaQt1eNb4+t4kdVj
VhsY4+rJ0puTPZdNlmFpbNV446WD+DS/+3CZzu1ZkswO6pU5S0DX8gYEnAuu
aLH3muc72praZ1PEvWd7tjwpo6765hY6n5rOkdtr3aWhx0M+NR5OOB93haGE
q5+17M41vU77GTg/cXZhSStAylM+j6HRvmdvbf1DfPZt208S7UJOs2SbHWPz
aidLlz4pbzywvPk5yaaVBUoB9uXU7e78XaY9eVR86fXCJd6iy1uWHyj3MGwl
S2ueDTuzOIohXt6o3cd1RTcuef0NB6ZNyCHjc8UbA4ZyKdvl/Prb75Bn+C/T
rOVmWYUxZLzl4P4nVTyq+sOq5GKj+OTsTTUf/CVuZxXtP2SkL8jmU4653nT1
faLL1ez92aCSN4+hGcnFmvNuVVO2ffYZrXDxuf/LmeT1uzqMT2eXxdh/n8+Q
RpqT7HiXtndvhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIRS2dPNFhJobQw+d5p+sUuZRTq9Q2fTqEpHXJa62vyFv2Gk3Q76M7HTN
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
owmD9sqY9ysnx3uyxzrvxz4P/6dLVk1b9V2dJePBt+LdsgXEbnzVK1GySuR1
/V3tnz99yOuRR5nb940/2a2cDHO7cl39f9/5P2VDjrmPXjUtnFyUmzJFQPt2
+vFKX7S+cx+2Tq9I7Og50ZGhCe4pozo2VpPBfM/rvc+UiLwuCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjboldK5PqY5eaTn49C
bPaRcip9kPLBJO33zc+B/9k5w4q1f355Q3bOQyOHLi2hkZX2TkEd+S3W/nAJ
N+M1ysV0NdT7/YSkCgrZPeTdAX/k1/1TjtWUHDK6tIZOGBkXeasW0AX1Dsdc
9quLrB6dI5rat1MYysqkkbbr+DQh0Wv7BBuuyOopVPbW6tmXpW4zpSyPnBCQ
0SvtM+eXVAr9vV9VGg9delpClgd97XI2VdKr+vev5tU0vS5GrHbctGZsGp19
dW3CyPsl1F572Z2y6t93HWUqrz7D0c0gFbt6i+SxHNJVsvOtcft9vxdCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBD+Z3+8
bn/huk4Ouapp3NkwjEvK3NNqju+azlGc9fbujJc7M6l3otl4w0wOabk0nPDU
F36eVVLwBCk7HkMPnnQMEFTzabHs7G+HQspF3n8QipOJc2Ln+N/JoJPjB7Wb
v45D71fZ2nxb2vz1239410vz+Sw9PNc943PHIlI5LhEUfGCx0OtvKB0Yo+qR
QQu/5E2huRyaZ7DEd5ID8vQgbAl9z6ead/jI0IfIiWMaJAU0RDrT9WFh88/Z
ASbONP9sJgU7lp9NKuGQ59LeWd66wl+n97alFmnE5JBnuXTiQnsuvbp1ZMvS
x8iFhhBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
Qghhy/my7vTgRu8cSu/86Px7Ey6dneuwyC2p6bwjm8ow2WyHTJp0M1EjOIlD
uySuJWVPE11+Wmk3052rvzGU7vCH76w+AvJOW8o9LF8h8n6F8J9w9nn7NSYv
M2jsxsqaLVs5dK3BMXSNTfPXo2Hi/fUSVSxNXzvgw8GuRdT91O0ti0qFn8fY
tSj4cme1TNotu8r9y0UO6TibBI0xQx4jhC3hWp2XGySqGXrZzfdhFJdPU4uX
Sn4ObDqP8VJIYbcLcpmk8utQHP80h2YsGMx7Yt5y6zG1SG7MiKM5ZDouOnT6
PC7JaPSw2ZCIfEUIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCH8b7V6GTpT4MzQFxVJ07RuPDL4GTJnycsSkdcFxUN17wUNbh1y
qOfKNZuXyXHJ2DAtY3We8HOBsj0u52RrscRYyY3tKFNDF813RLFuNSLvD9i6
TOf61t/aVkY6T+yy8hqryNWmf5hnHr/F2vfSjxhXtjiTsrbLZz1+wqGEbntK
7sz4fXPwnk4w2EpHWPJLSjF0XcGSsn3dhCApgcjr+qtG1W7ddl2ZpbFSDczQ
SwLyN2U0v/pUtlj72f7W14tsBfRmRsq0P6RLKXjqpjHScltE/t3/tApjE5Ts
Mhka0DO33asTfEpzKiucn8gVeV2weY79ZDquODudtA/+8rWQ5NCG8dmytr48
2hBdpr5yLkuFZQedlV0ZYniq3oWHmj7367oO8jmnXkaea9sv576tou9SnvuO
Pm65fRi2TZeOXbTrsA1Ld09nvEs9wlC669Vnirym56F1n4puYf451Nni1gLl
OVzaVSQd0/s5cizh33NKSbL1SA+G2vu+rbCZxCPLgnV3pXRLRV4XhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQthZ7vlQ2Pdmr
gm5W1C2cuoVHPb227dWIaTq/zqj7QId2VQyF5zqsLS/hk9rNToE9d5ULvc7l
35OYOwdZ2pGyd9q7BSylPfMxOcRDXhaEzbFP9+yLIa4CKjk+7+PN/HLiD6su
ru2e1ux21nVemXPpdgZlBJwbXO7Cob23ZW8oLhN+zudNk/QB5VtYyunE/xja
jqWIiqB7K2WwD0DYEm6Kuz1shHIFGax5KunoyaP8MYl+Mo+an2drMV8ifVVg
Dm348S6VZ8Gl0fpunmOeCT9XsEeNygCBB0MFI2fKqevzKNP7cm+zqcidgxBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQghhC9rZ
tLfdyAoqDFBZb7CbR7VGg4q8E5rOa/oybWXfYyxDL2prr8bX8yllsqtJzDPh
5zc25epV5j53t7LEWbI8fHsnlszUuaUTVJDnBtuGsQqfuiSuE1Cvqz4p37PL
6Wze1mAnybRmtzP7vP0ak5cZNHZjZc2WrRy61uAYusZG+HmMdY/v3fh8hqWq
IkmN8AMsyemfXXvGvfl5cRDC/7/r1j9ZGilVQeuu19/t78KjJCW3FUPvNL2+
Nj3mP8xzyiE11y5+klO5dNznx9ljKS2Xu1g6tq/Wg/UMrTeeN/HDAB7Zfusy
aEd9icj7CUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBDCllTXcenTVS8Ysp5XLnNtNZ8Myw8p7Z/BFXldEIqT/hZ33if4l9C3oZ6O
B+dV0tBjFp/3FzQ/F2ujDh0b/pyh6ABPT1rKJy33Q+VhI7Ae4e9lwu4Fw0zs
3tG1TKfwKtNS6jDtk9XIhy2XI6cbkjr964FKql9S+MN5Np/y9RJeTZvIiPy7
/6rRsx1vTZjA0vLCXjvcpBnK765nk7arSuR1iauFZt/zDweyFBvp9en21Bp6
fiQ/wvlIjcjqWRFj8nyhn4AGTOFPXV5VQvGbwuVkyF3k/fTvcrixk+der6KY
Ief6FjB8qqobNTolWHzWEfzPKhavLlq+lKVNw7K7rD3D0Ikxj1UfdBB+nmfm
Ic+DZpPekWJk/unFOqV08alx5MMnwn/vfBu7Z2vmVZC7T/jdMad5dL3ocxD7
Gjmi8H96iv9CX7+EobUjvTYcTuTTxD6d5VMmii6/urma96zoInM9l77fSxk0
uYhLSv7OsduCWy6fE8L/rwMT5ZjrVxj66b6wWwbDoy/vCp0zZctEXheEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghFK77l+jIJIcz
xP1yQi/5K49Y86Mm/v2ROyFujlYKUtm6IZ8evd4+vdvmcrqb3OH0qPiWy6v5
HnE1xp1TRYY/UyzcuwhIo7+fT304cszaqqF/mD6Z3reI+hTcu3hOu4JUfubd
6jhG+Pljqj6VJ0ysskmv+/e3gx6UkUb9yQPFX4Sfy1Qx/rbepFSGzsgk8T5u
4VPxgOWFfTYiV/ZffuhuHnkii09bNA7O+RFUSlXlZct+7Pdssfajarduu67M
0lipBmboJQH5mzKaX30qRf7dwpIjOapbTnAlyYy4Hx40l0/Bz9KCqydhv/1d
rH4xNW77iSz6PiXz2WObMtqpIN/nYg8e5e87ZjljKZfqFTZtsPGupnMv186e
OqTpfMXU9bK9e81hKScxWvniSoampw92cHJFTh38e4Z/i9HfUJtLOwOnxA6R
LKeMzlNfPNjf9Lxa01llsOAaQxPS426eeMLSLE3vPbNmii4fGP4e+uctmBYa
yNDg5RcvO+znkem0L98zZTkirwtCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQti1n7at7FTmCpSMSIRUTqwT0aJtSR4kxVSKvS1wt
+7T63eBLDCm+6RrhWcKjTQN39lWtFv9ckZXpoTcCJlXSQOUwl2wVPnV+pdP7
qLL454bZ9vuqtUKSpWEheaEHDQSUeyDt7Bz/CpHXJSyfzE5dLdUzje6YeL8z
vVpCLqMcfUNZ4ecrirujErrUFYyvpA2POzqPUeLTzdM+Cb8Umz//7+3W2bZT
vpxGy2p56nOrabDhlMpU26Zz2FqbD66dT/gyXkChFy/fmqZdSk6R6qUFQzxE
XtfvprZ7+nXZYgG97zIrZ6EZS5I3Po160074uWfy3zvFFStWkss+yezlMnwK
SArUPNVd/Pf5ljJ9Uf1WHbd3pKZcPvOJZSldcL+ePPdBy+2fZ37or4mwZSmk
gPP58nWGovdNtK0Zhf25tTo9nB/x/XIJue7RG3/JrpIWakePv1Pe+sar6ubO
EyqJDL29IXXdx4pPt/3n5norImcY/rN2NU2W0kph6IH5mn72znwavHbn4W5W
mIcQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCEUf3N1
nmtdHcWn6QGb5HcsYujhvNsdyl3ZZrdjMWF0v7X+DL2ee6ia3cijxpC58S/e
lIr8+/6uMTM8v5uvqqaRFw/NmG0loJRlT95My0KukaituWutU2DKUnzXvN7t
ljHU2EN1y9I/x6mp56Mi30qu3sfQutDXghE+PLqkdn+OtKD1zc+nHiESY41z
6eeZGP0l17l0+bL2BrkrTX9XQ7v6+PfHWXrfK+JoxXqWDN6NWi8xpvXlwsWN
8/zhso9DJxJ+3djqXkWRaWk9XPfyRV5XW/frnYcnTvdlyc9pg37gSQGpBT5/
kmxbKfK6/t3DXe50OOxbTabrYzkZqwXkrPdRo1ex8Pdh+3CFo24bOFSg1VOf
51hFvpXT5Ff48ulA/b0OXrNY8oz3du5qxdDE7MnUx7TpddrazDwsiPs6XEBe
dUqnlK5xKTM9d1fnpCSR1wWb59ctcz0mzi0j5WWrJXMqqihG+sH98a9Et6+G
BskNcLBgSdqse679WobyBO7DdPe0vnXhy5FNDmuoIv19Z20HKgloakPZTsXb
Te8nBjR030AlllzL51guOCeg7sqbtLLcWt8+2VwDD2wZO06eQxp3Jk3+PKaK
+hqe+np3Oc7llvboy9p8WUEubb9eN+zIDy55VkXX+QS2vnXRUuqn3DNIP8qS
jdx+K1t7li4OeT5RRkF091LtU15G3Y8xVGiZOO/+HzzKjVC0kJ/d/Hz1GpeZ
X7ZZslSp/3CqwUaGlB5N0755uuXGsfRZfuXrF9X04XB1Ud+DAgr6ZXVcqha/
N0XtoW/ZW7xOMWQj8/GezgMeGenLOTv4in8+f0uZ7/Mst9SBT5MnlSuZbGWI
Iy2rlOzX/L8jQQghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEMLf28t1e6ffMWEoYMKbeff3VZN778qh80rei7wuYTnFbaJ9+0KGzNqr
6p65w6fZ0kmXTeTKye7m3Nx1O7PI+Gifn2vmllHN+ge80714Iq9XXNXwr7s4
Qp6hRrb91Mg1LCXUr7C6LF/T7HYGXfCc9Euqkg7EvB8k2cijHwPuFVLnlsv/
SZlQETlG8R2tcik5NlS9lLrey7vDfY5x/7+05Qf7nElkiPdzitQqaz7du2Ip
56jKbfJ5B/0w90k5DOk+U3m4M5RPgQbj++sUN/3898c96uw7MhTUcWqXMatL
aHqXYO1tXzeI/LvbiklhWw5efMXQQyPd+T0zWOq/z+qikUXz16+wVW1wj1Tr
kU7rFhkoSlwspSqFE73kz4vP+r3+7ovHtUVc2lGwt2bu9moafWxQrczg1pdX
LGyLYiKTv4xkaYjryY9SjIA+j/lqsE2/SmT1DD7Q6G40NJvMfiT+6B9aRlI+
kw9r//h98wmhaH3kcFjnqDVDUtYfvQfEV1P/mRovGj8Ui7wuCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghbC2uV7K2ePcpm5Rk
zv0xtQOXsipKN5sVIhfovzXjkeSba/OyyNLVWV96Uhkd0zMdIddPfPK7oGi1
GTKg98Qkhj4dPluia8un7hWKOb8mNp0r2FwFuy40XI1Kp4MevSTP1JRS9AOj
9AV72t787PSz4lBC7xrSWuZqeiOqkDJL1EJCda1FXhf8Pc0SfKnZ0i2dwhmB
TfSFUjK+tVd523+R62gdHd7/SyeWnDrleF9cJKDr894+GBBXIfLva+u6dZ15
pMAkm2IfJHnvv11GNdXf2CvfcI+Cf88Hh7aYeUdlk1a9zJQUbhnFnP0ef7kC
8wpCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgh/
d3dtdx35zoChLofVT8/wqCaXbeW7rHzfi7wuYVlwQ22QxuUs0tjWvStjW0b5
H7ylF3bn0VjzPjlHPapIM/bewZA0PnXTcvdx2MOIvF5xtctWmbtHXArJrP51
7Ir2FaR5xt1hcc/m56HNPK/5pL8pSwWeAzxoMUNmz1WjtJe0XD7SCVtL7uKi
LDrYP7WDq1cZpWuH6h7r1PbyEoWt2x3XxdyvfIrlbHIp31hKG4e/vK8Wt7XJ
5x30w9wn5TCk+0zl4c5QPgUajO+vU9xyOZmFZt/zDweyFBvp9en21Bp6fiQ/
wvlIjcj7CbYtn45akRLQs4iME6LNjoyroD0BxRftRwt//wlNXnhf93Yh3Yxc
rpHcp4JyPV6tL1MT/ntDzGau1RzI0vgIm8e3YwXk7K9f+Tq+UuTjAFuX2Wfm
5qSty6c3l+Zd7ripnG7m5Sw8Gic+uYjTQ+oG/TpbRY15eZlPy/k07mTPyPqj
uE9C4Xhx9Fr5d8cYGjP5cMahMB5ZqiSM87DkiLwuCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ/t8KDJLrhxXz6A/1PTPaaTEU0vHo
ivz5rNDf2y/96vDItQwJdjzvMFCWRw/v/vQaFVfS7HaSZq/tMpRbRZO2Kao5
dRXQ+Mwuq/ZdQ87Gf+sKr8L5gY4sqaR+fHUliaH4jzskjm8U/zy0nXvywo/6
MuTI6OV3t+ERZzBnrM/+0ma343ZjXeFcb5by+KWfq/qytPoUZ9teE36z27lr
7hGxKTWHFnx7VpTiyqVH2jWzFz8Un3ybFH7AgiH7yyg/wTDkeKdquvoozDLi
ffP74XdVttv1zu8kWGo8bfpk/XQBHW1siH27o0LkdbV2Xcs/zI19Wk32fZ45
6O0X0Oy5SXfMv4puPzfs715ttp+l0wNCI+tNWJI+mCStnsIn2nZu0G69Ugob
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
y58/bPJkhrA0K/XY48AXAtKp+24pU1jZ7HY22ISN2reJSy8nWtzx219N/dU3
N8iPEIj8+9q6g9cbLTwUnkOdcz9VRy/jUvBs12up8bhnwr/nQqd1jyf4/T/s
3XlUTX3/P36FzIUyNaEMSYYIIb0yT2kgMhShMhQVZQhNyBShJFGSRBqQMktJ
ZpoHKtU5p+EMezcYyvy9fute91q/+1qfPp+r6+5cp3j+9VjW2mvv137v1/v9
3vus1RNDOisujp1mJaAOw1PlQk8jnxBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYRQ0h5dVSDrrCUkt31d3a+ZM5TTrXZfxkZW4nX9
2Q7xLxcK9zHk83L+hiwXAcksat86Pkv8+RU6AY7jheP5FBlyxaFskogqeisO
W/qEafR5ws97yXIWsRQXP8STu5uhVdEddwhSW36uS0+9xXv9j7Dke+v18aV/
3F+U0doTS/ktP/dvfKtZJ/YcZGgpz2rCBXcBOU/9dlafEX+/fVuskcVdmk/X
Oh2q9Urg0X1G76t6uPj7xFCU8dAmj0OvB5dO/nquknq3GVE5O6z5PUf5jv2y
Osqx5D+p/JGds4jaWH5UeN268flXzc0E/zjLvRYsBWuMtdU+xdBONWaf2feW
vz40ZFz/wVqt9vApYvMY69Q1Itq6mrL0Shq/rjbk06w8uc0TOZTn84yfPbuS
vGNmaVdsaH793FTqvnIxXz9YRAfNujOfQ3jUvuzAAM+Nj8V+XQ+/6uBb+hza
me1rHju3kg4anjvYyqHlj/PRztfbHvXgk6HTPU6WjYjsJ9Zo9ihuuv5s6S6X
qXwTuJildWxwoOUf++Tr+xzTlNyWs15d2KFs5dSNpeVZR37u2iWi/tLrbG2V
xL+PrJCztItK5FDWqaMyUv6VtDbli8PXUy1/vmxcfbKjhXM+eXRIuPQlmUcy
bVN+aIa2nH5oyCWLt8t7+TKUrh94yOO4gIx8o3lzVDkSr+uf9pzzJkXboyyZ
a6Ryx1uyFL1l780JXyXXt4dCXDeNNmNJ16Xoa9J2hgwiz1Qejmo5/TbS0uzW
qiV8qvNRSY81FtHGHrsHizJa/v5yKur8A8/DDB1J2XCy+qCAHoftNj7bsenm
S7i9oePhaUKKTTyfaGLDkNL3xSx/S/P7vQJCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQwl/J83vvTNO+WkpOeXNzVL5W0MSc0oy+
1PJzk343s1+GWPH7p1P0mnE7Fa+UUNUnM58tIkGTnf9OuUZ1ZB2H4oxOmOnG
V9KC3v3C+8WgT35X665zJr3QZ8n49oa4Qg2Gds72eTfwTaXYr7sldqkFe4Sl
iqgQxjuxiDgeZz5/XrFK7Ndl8iaHBLuXkFek7awPRhV0PCUgPS2/6eZXS1fV
vSJg9sJcmtj1a5r6LS5pfg70Kf7QcnLDmpt97HKkvG9l0eHLOVWpjhya2elC
5XBL9NuvbumsMX13niqiWSP6zRiwpJw0vZR+3JmB5w4hhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYTw1/KTzZnpm3vkk1HG8oF7
/Xgk8Lt5uT4WuVXwryn/tMBU3iCLcjJ6dk4fw6GHqpwF9Q7iz2syqL9uNudg
Nlkpyj9zzuPQXaXUDlv1kBMF/1OD5aelvr1hSCc47jkTJaQbPjOfG33hNdn5
nxQx0u6fWIoL7PLpUXUh1bv736h3WCrx+xaXinoXH6fWMFQ8SHFrRlsRxWd8
VFPllUm8rubirklRo7nLsilnZ7ec+0kcSpbzLrk+9fdbl/RPOuk+/pFFCz6U
rh7ix6ELxWtyxs///cYB/suXI7KnnwvNpT0R6QvaFnFJtOSIZl8+3jMhhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4X8qXT/53sBK
Pjm/39B5ZaiIpIYYCkukWInX9U8bYLHbNW82Q4fzx480OMSnKV3W9FPivpN4
Xc3FWNHuvr79KkikpDBqsKyQNlsu7JLfnZF4XeLyipv6QKv5DIUkjdzhHsWn
sV0NTxQeLJZ4XX/VAm/VSO2YHFp9ScmgwIZL7VeE2feSQx6RpA2rHOX2MYOh
jrt3mgQdFpKBqNZkQ1Tj89liQmadHLG6kmaklF3e80hIR/bemqbrLv75eFyq
SsFGT0j6G/YZxlsx1M7u1Hot599vv2gq5W1Tn5lpFlGalkn3O+PLqbbT/Bg5
HczTf2vm097C3qKS/GWX9YxLEtLeGO7N2p1N1+fT021qHp1gSFou4N65eJYy
huZuHaFfJfH7/quOVBn+/om0iM6njemU+oNLwy0erZvpldxk548zC9vbpwNL
yYY++zM/sjR8XsUMxrrljE9TuXRg/57jHjNUezS4ZPxKIXUt75P3c1zT5Wo2
ZPzctdfGjmVpRWEPT8f2DL3tOnFp+p5KiY/Hn3XOPLz9VYc3pFx0U1atUxk9
TDuaUbAfeXd/1wla8X06LyijkXO1XWd1END7m77O6VtFjT7PkGJ2zwcXlvR3
bVwx7zNDU6vmBpjWYX/5v+z55eGYBwtYmuHjM69Nvyoy7Cw61Mqt6da9LQuN
f1yzZ4m5w0sxzmXI9XqRvNGZhp9L2meHGa9uvCHbVfz8NgZlVLC3dsLls5hf
8D/duH1UYtaTP77TuUEnr9sL6cyKCRPaz2353+nXP28em3CJIZf7k+7erhHQ
tlVzZL/04Eq8LnG5euz0FSPsGCpf7qVGf6z/Cr3CXGbeLpF4XbBlGDL2aOfz
hkJKKusSyFnHUEKfnwPPbcd3OoQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCOGvrqKl7PfYRZmU4r30/NGUUlqTOXr/Cv9fN2/KfeDZ
86V56aS1Uev9sPal5HAk7pRCuoDqF4a/DKt+S9UBqWtvBpbRwuxP062ykdf0
d7Xqddup9hxDUwr0goblCyhsYEmwdxan0ecpGapeL3WfoVZeStUb9YU0q59j
X4+ipssRWpWj69WZV0VqU83y0noXkMeGMUntpg2S+Pj9agasnM9bVpRDR/q9
bOuwi0uZOufG+7dreJ1xrjmka9w7g4KTl92+ObiUbrTZI9P+8a+7LsHf04G7
+kQd986nIqcsubLnPOqokZK4IBj7DoQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEsOVrvz9v9KqLAvKOUb6/vTNDQQnlE1SnsGK/
rtqnTooy1gydqtkQM4LlU+z4m4d4m0okPh5/dspL5t38b5XUP6humYKSiN7u
W2gaGceI/brT+80bO2MjSxxnTZ2ZhQzt7ZIgnxXV+HynIdK9py32ZKmd4esJ
5gNYUg49+XXqGqHEx/VXc875vt94GxnyiVJyndpLQDM6/Ox0v6jp+vmbvOmu
L3Z5FNT5dYGvAY8yP3/3W/Os6XKQPoV+eHJUgUvHEvz2H3lUSXu+53XIvSG5
PjGdszGo/CtDL07E9eqlJaLo/X3PXJ5ZLvHn/Fct2b3Yi7eDpWenusjcl2NJ
Z6WTaYw25t3ftb3n8uOdz/FJZ0FK5shtIlKQC879wW/8OhxSGnssbkUpXT65
uiT4VQXlnrgT02NAy3kuPvbG/e6oiMjgSK+w0848umH+Y/P4/qkSr+vPrt08
ldV6UErnx/FrTrSupOWP787SmNZyxtmhrNr03kM+2fZ6tGbiIRHNNX183fij
+Pd9+L/r+GnX8LZ7WKqR3bNk83CWrrL8Cl9P8feVXcXNt9dZhlTt1kWN+yKk
YgsNp5rUMrFf94tGt5IBbbh0Mf/w9Bl3K2l+7Odi02stZx6d5rXVWVWdR7HL
Hw6y8uTRj6WJN5Pif7/8xp4K8ZPrPBnal394gdkKAf2I0+k98lSpxOv61TSa
NN3ziBdL/VdLHRJqsLTYa+70YZubbr64V49fOXA9S25fX8THvGSob8bMC7Rb
crm71cVlI67K8cl14pWdMoNEf3xXHz6qebvl71MTjc9Zfd/FkPWu9LZGJgI6
L1vrrbSp6eZLXJxFjxlthJQqKlz01YChL/s6GM5fKf7fPSCEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQnG45OC+PfUKAlqjqDH85m0R
5R91dKvqir+jh/9pu/JZn4yNGUp5sHiy6CyfNlypXX7BqLjB4zsvy8v4Npch
ZmS+lIUfn8oHFfJmd2n4ePj3fFbceslzpxzSjhus+mQWlyLW5a9Y1rvp8kwW
5Yw7XniZT/HBiXfv7RJRWalN5Bym+eWTxD+cbP7YuIJGKaV75mkIieN5Y2m8
WvOr83cz6umgghrHEsrqFL0wckYFpe2/M5KT1XB/6sQ8G7EhsIwuvXpR6z5S
QAe6lMer+ooafV135fj9gzayFPJRwSOtgKHtga9unr4sIO6YGHWPNIb26g4c
ZLJHSDVPH3lM9eNJfJygZLTdmju/f1sRuSkqMh078GjGzD73emYlN9n5DZaf
lvr2hiGd4LjnTJSQbvjMfG70hUfx1fdlBPoslTpqyJgOYWhe3chNZm8rxX6/
hdfJf5s2QwaV1wdW72BJP0rJ3E25qsnOv4M7U6i2k6UDnZ6+vfTHe6RQSeVe
d52Wk3d37rxh0pTeRdSr4EZYiE45KX9/c01Gu+n200yex+drO7ikm2Sd8+ZH
JTks7Rfh+qbljE9j7es9tWjoQJZUZwx17/hURGMnr8kyKqqgvcIJeWtCWbI3
9xhx4xRLPg/3xh8JbPw6DyWrzgUDe9WUfNIb/nnx/koeVbbaN5zzx/t+LPW1
8bcX0JAfk3z1hCLqvHuJreXwhr8rJw945qGbVknKHbxTTkiJyGK8bpzXeby/
wf9OG/kxDoeDGTqj+tr1+BMB1Y7dpLDwEqfB4xXle487sJ2hzfd9w7eTgAZI
T5VbOAM5n/C/U/re3MGZmkJ6WOUxI3URQ/d3Lh40fSN+Z4MQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFsafLMOvZZXp5P3pWfvJ99
5tG+HWturTrCl3hdv7vyjxL7DdbJpsi8Wvc5MRyafvOwS/nspssNaymat6vT
7q3OkujoNWftJBGFBaiolz2tkHhdf1ZhluNg1wfZVOw09N2uGg4J72SaDtX5
/Z5XczPxcdHX4eEsdey28sk8/yIKy7RapWi6UuJ1NXcnSH/gjWyVQ4Nbj3Qe
2o1LZx23LJTXbDn9/PH6nYCg3ix5rd806XCgiPoeTk16urL5rRvwfzewU6rF
ri9ZZG/nt7XrMQ7VpZoIePNbTh9KSv/aqD3jz+RTN714c7ccHoWG1o9+fwrv
dRBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQvh/
6eVrEts5WEhtAmzCF51k6Jrp5rHh/qzE62ou+qeuNfJfx9CezJOZw1oLaP/x
vkPcI0skVk//xUJGOZKh9+PXREx+LyCXjDnbPvbhNnh8wutFrc8HVdLbuqTw
Qq6QfMeFJuUfYyQ+ri3V8ffLnrYryqMV2wX88q088s147Zp6s+XkHe2JOP/i
8gaW/OyDRF/fMJRRqb674ELjc67q27rqzNvNUL15lpX2ZZaOFQw0/zquiqxP
ea0ZrlZGA9M6W0QyfHrrOUXPdo1I4vf935rnEd31y3whRZxfLrVtA0PSysWL
H+5gyWZF3Y7YoDe0+JPi7O66ZZS56FX/miDJ9cO99KD7O2xYUl460UDuLkOc
Mz987RY2/Hyv37HzTshkaO7Y+R8cjgqpfHvco5dxPInVb2HqVnrUjKWcEVGd
1HYw5DIjxmDAlcaP52L5WJ26ViJqnZB2KfsTl0yenxiSPTW5yeosGapeL3X/
j3XUS6l6o76QZvVz7OtR1PA6LCmf1Zy5KRrK0MugyGOvtrEUwWxYdU6xSmL1
jO73UqP98kLarf3Y/9vPMtqz2Mz8QbeG+3P62aFJ/QxZKnDtv42WMTQvVfWq
jkXD/aAe6jrhZ+sK8rn9Tl36h4C+9b9RSB2w3/1T9ri41eF0tIhefbQakTuS
pegYqQeFVc3vffLW0gG6Zzvm0vCS12on/bh0ct/i8j2tWk7eY72pSqQwooIU
H6kU91n6x7ptNNfhC/1+fa4p/JHmYsFQYdm46qAMPs3veUb+sIbk3s/j7j/U
djJmqF8rfva6UD6VRKqEjzItlvg4wV/TC3f+eDO1+uM7cMrye548EZ0ND/O1
1Gx+6y2EEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hLD5GJw7Y/q0wHLa/8hXSSVZQHPPFofIlbX8nEBJOVS9bOfDK6/o3ZKOY19s
K6aVotvaYbpCidf132rocmPnqLhyctG/YpmaJqAM2QSvVKbl94n+GG7J61oe
1ZcfmcrJ5FN+1EnrneYt/74actoJhVHfwqooM/RaonxQAaUvvxvVy3uKxOtq
7qrWP9TtvryAtvrJzbpws4zME29cTy5vfB7mp6Pn9Pq5ltO3gIQz8lcFNHD0
2uiqty2n35LmvrRprZBO12e7ZRheKqENI9Z6nGNbTl4f/N+9tjrl5IhxJcTl
nFzVelAF2Vf6T9yRhOcLIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEv61a5u6XvRnSyFrQtZeTgB4MFfmselIq+br+ZLuui4Jv
eLCklxWt5jC+ilQsVtsrHa4S+3UnDdipaWXO0kLuzw5JexlSGsx8S37e+Hwq
2LJ8d8wpSzAvn25lfJk15AqPZANf1Q+JEP9zv7WYU3PicDZd/zo6sdsbDqnP
S3J+P1H8OVGdBj0sCJdlKX/H9y2CTSKSe2dQzP1ZLvHnAH9NVxZaxhiO5RA7
jrkmnFFJ6W7KC7Tsmy7P0/ajr79GGxGVOeqtuW1TSjqPRtXrrN4u8fsWl0+z
8uQ2T+RQns8zfvbsSvKOmaVdsaHl56PC5qlWCU83qitLG103TzjmKqIZBqKn
z+UrJF7XX9Vvmf3Cw77ZxHmnodH+LYduf7ldHf4P7LMTT26+Z2+XTw6DZVqd
vs+jt3sPJPuew/skbN5q2im9STNj6e3Hg1/ldjJktPLGQN9rkuvbJ+nTDQuC
WararTe3cnYVcVbLBpYFiP97sKlc5Rn4vZUPQ8/zLl6dsldAXAu7gDdfm993
N4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCOGvqsz3
n7fy7jJ0mHlR3W6CkNYGX4jvnMmly67vbvSdzdKXo76uZcYMyRakfojRb3zO
xrYRrSZUXBPR2dUqPtmjWdp7rHpYeA0r8fuG/7OLLEZc4CYxtKPw0tM+84Qk
c+XLy4jWvEafRzY0dlpkXjEN3/RhkN3XchrXVq/70IvizzVqbrpffn04fnER
CZ6mLsyZUU7KGerhb/5GvtOtdVuedJNmKfrramvbqSLq696pu+GeXzcXMbdn
e8Nz9yqoa/F1sxW2QooqKFs0fSYj8brEZXH9HM0JejwK2vauXawdn9q4jbEe
rCgi7nNFp5MaDF0u6DFZuIWlqd/HJnv1aTn5Qo1V2UVuaL5nGbVWKtG9py4g
b6/TKfv3iZrs/JHz54631RbRIOkdquef80i/6sXj96lPGn0eC1O30qNmLOWM
iOqktoMhlxkxBgOuNF0OlVWv20615xiaUqAXNCxfQGEDS4K9szg0Pd2m5tEJ
hqTlAu6di2cpY2ju1hH6v24/iNsBnZ5VXXUspCm1SSFT2pbT+R164aUKDa/P
mvvqw4Z1Y+gH28bgyjqWkj9bLbzQrenGf/zpl1M++lTQZ4vCb/ZzhfR2YvKL
yeOa37q34fPN1+d5DOXccN6snS2kuIW7yjusLpN4XbBpPDv85ZbyRBEpy3tN
HzaRJcMhzFupT+J/b5c5fG55bW0+nZT9VFrzk0dj0tIc7X3En+8n+rIq+fnZ
CnJUDTDvvkhImV1b252Y1PzmHZSsQ78Olz0ZzVDtLYUxNq2EFJi1dIWaHlfi
df1VzzrOHHdpFUNWEw/4tOXz6UfYEj8XmxKJ1wV/TRXVOuudPSEkx9L2b9T9
GMq0ardz4HH8/gMhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEv6t6p5ZnnD/CULvUOVd1fQX0I8hn6cMeHInXBcXrM02PK71tWRoWq2lk
dZ+hceurBm5a1vxyCL33dYyWm5JPPT59OLQskkfLnROtWl8Sf+5NY915IKO6
4w6WXs6x53p3ZildM7B4/hChxOv61QxZlrB/zccsGvnFc4zfEQ55JR+ru7Kg
+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
+nOuXs9Q+dLLmaVxHy6O9BxVRXqVwydo+ldRorzYrLTwNd29uFagM7ucHOf7
mt088+flZbncbfnmRSJDoXevjuf1EBFPqaaatnDrPX5j8twT+x9U0Hn7MNth
hUKaXiub9L76z8t/8zqY2/knI6KRBgL10tNcapnm0nnfujv15jdKut7/1poW
Zx5Xfa2kmHMtz8nvFpGdiYbt22UMhe2O+LxB8w3VCYeOtasupx8jnodOayv9
OYeSMq97a6OTyZWkWHJloZW9iOKKys2mz2Aa/rxaeYw13slQzeJsa83zLO0r
Gry4Trf+vMqG6nzKwW3f4iwKGFPi9TOtjO7s3K09KQzPvbH13eo8MtOAofah
wyL1NwtorWe57yLv4nqPP1MTMO3KLIZ267wwvR4ooI3dK4eYltZ/PITS6Av+
B62R9wS0o+jDp3G7xcRps7lW5WPD5ySEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhPD/VlNrpk3iAoYCLLPHJ10Q0O5HawaM2Fci
8bpg8/Ld6Ecv7v1kqHi0IXNygph2hWW38lpbf37ju6+dRZN351L1pHaM3kIu
bS69W5OohNyq/9SzoxJ0jnXNpKNO0ZmOg8vINr7t0rRHDV9P1xqeUWqUmLr0
b7GgdChLgqqYPbuFDc/zlBZvxg/O9ZnIkMq2CMcoH5aOMK4r3/ZrvHw2aXdU
WUcvt4sM9Txa+ylWTkQeaur5pwzqz6VMttj4qn1blszsNSf5Pyomry8XHI9+
d5D4ffy3yqY6qlyYVkT7jwcKKxLKyXSG9/GhHOnPKXUb5NEipIKhZL/UJ2uL
ROSWHFRb5F4u8bqayuGq5VvvJzyn4iVtdZ5tLiEb8U3NU+NEEq+ruXusc92r
BzcYmrc8yGnNSBG96jNkUd6V+udAfSZGXU3hTCohyxk5mRdeVtCo7bwBGsHS
s+9zP6zMHBT9ax6+6BDnUSokt4E7lfsKOBKvCzaOw5kL7Xo/Yegcx/2UpYOI
vAY7RoTN5km8LgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYTwP/F5wK2bXvPyaU9fhSe9tXj0ckDd10vPmz4/LfmEfr91QTlk
G/TwmFwBh96nJPnNmtTwvKkzmr2OpfEYqlmofS42R0Q1qzaHTFvx++akwf9M
bnu5PrcvZ1OvDZG31q/l0OeN2QOmWEou3yzL9OiXCD5L9ydaVNi0f0uKpoe/
TctaJvF1+rtaXxOkr9PNpq2jNH+EaXLI7MNLp/mu0pMXB5un82evi6yoY+hZ
eGKPHhpiuhDQL+r8jPrziiVlYIukQavYHDr3MMt8Y2su+eb1inytIT39f81k
c5xbRj6ZfX7w9qkzj26PrZqz7Jb056ZCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghlC7Vlr7aH7SAoZuh8gdVLwjocWLlzDEh
JRKvCzYv9+eOtlAak0cFAzfdqzzLpfIFHjYWtfXnJhnlR/ew+S6gtrrn7Wwu
iCmkz857sm1Yid+HtOr2Vq9uXZ/X9OT5msdTlcrpDYnLq3c1PLdKqJRT7RLy
lmoer57SyqyCeiVOGFxqID35XQ31dmd3H7Uohuzvq72YcoMltxPndBdNrZJ4
Xc3FmrkJR7p6imlj3NFuEVWlZOzr89xy7cZ6jx9V1tHL7SJDPY/WfoqVE5GH
mnr+KQNuvccbT3Se8vQ5QysOyV/M3SYiRRNu3OodPInf95/i9slzBvjNLSJ/
89pVU6+UU989WjqDefXPjS/sw13rx+bSiie1VffUuZRc4/1APED654Pv2dPP
zq9l6YBTpLjuNUOZfNWdRWek/74aqspsi6fuXfNIqXJjgvAQl96nLv6p+lNy
+Ydb2o55LX9PRBnnhs8OOs/QQePpXTuewHfC76J9ZU3hcmOG0lc7TguJEFBn
DTflBcPw+wJCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQghh8zBri43roECGOmuZvRvvJaTRc2IuBgvKJF7XXzXz+fK5zLSAXHfe
zFVK5FFk+zaPJ55p+vwozpxk7Ze5HLrZVdut20k+ndIUmaWeFDX4PCL+snC3
Tizd1tm0qs5dTEZqw/a9VaiU+Lr+txrE+tQMX8aS4Pr0ycphDGVb7k3s/E5y
uV6NpZ3xNzX9cJYuq604F+nM0rfcJzqth4ub/LpJ187fTBuYQ7Pnzfd6HM2h
qPStaVFGTZ8Xx88v2dC7s5iES456vTEvo1fny7peUtwi8efwV1WFSREddXJo
n3NJ3/HxHCrcrbM2cpb05+lxy3t8VTjMkt7HaY4F21gSDs5S6zqv6ftNUqZb
fVmctpylwBP3I3pHMrRtSmnitUbMA2w35H5RdEeWCjy/bxSuF1On4qkl3J8V
Er/vptJInHl/ZT6HXgwt06v7tU8ptxzFn3Wq4ftUQ7V7OuLRV/MCsjVrr3jg
Ko925Fxc4xIt/fP/UsJL2ZW/vovWnXwuHrFdSNH9rs9tLW5+30UQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEMLm79J5M5NkHIUU
YhBpbS4U07eKW89yR7BNfl3hVON26WYMDSowVBqRLKDW804+OF5WIvH1+Kc1
GyiKiz8nIC2u3MV3nmLa2sVo2ngxI/G6/ml7Phhh+/JXP0Q+nD293T6WJo/T
nNtGrYpar+ut9sSGodoHqRVJ5QL6YGRkVbS8tMHnXzeeaytbkUerAsbur/vB
pb3TQrlGxdKTR/Rs7pVdlxayNMDLIOqwJ0MpX2ZMXXZJeupvqHsXHSvnqXBp
ZFQ3x5ynfApoNYdqbjZ9blVD7VTy80aNl4AUM1JimBViit5qsmRPMUMvFE0m
bMlg6OEK5U8lm0W0X1lLfqc7T+L1NnedgvuVzk0spcBxpy8dcayk9T5XlfMF
zS/Hb4/dBuOgEQzFRQoF17ewJH/v0FmN3lVNfl1e9KGy/M5iqu1ze+fpqTw6
0WkgxzEgTeLr8U/rONjI51oUS6LoL+PvBrF0f8tD0/FuDc9F9A6LvntrXykN
0zZy0lxSSVsj1X3Ki5tfvzVUt6qHN0fnMrRtfobOq8MiWuD/tf3oZ5g/je3+
FlVKKyeJaMpaf6Or1gwpOB5eo+HWeN/PT4sWVVy25FL0vYmW7iyfeLMjHiW/
bH77YEN1ubjuzXwvll6Lyqr5yiytPMzxDJhV/3259lo8L/NDHvVqe+z01FY8
yq0oczd+8/t+/zQ3+9hktBnnwpJ6+fLlJ7gM5fYT9H93V/rnZH1qzDXwT7Nk
yPvj1QUmhQJa8bSfkSY1/HdH4RKtVc8C+NTys1bGo9ciumDZZ01h0J/3+665
OdBYYXn0r+f77Ypu0OvXAtqz2Pv9j8kNf74Q/p+ucPQoE3oLqcI+3//2ZzG1
fpdnPka76f9PgxBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIpVHLr1vCn+5naFDgohzeMSFZDeozw28KR+J1NZVfpiXucvJnyWLcD5HJ
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
aiaiipUPizf05jVanXO73A6MVhTT9T3annYTedRxz3rrflZpEl+/v5q6f52R
7hKWDgu+mF7dw5BD+qwLBW+aPteusRxbUvhB9hND3jvaJnbsIiaT2XrvquUq
JF7Xf+u7d1OetN9TRnPDphQlVFTS8EfBKXVj6n8fw6cpCtqqMGS+07nLCheW
DNrIHjnZrYrcOEt0TgewtOVb8LtyYukKM5H3Pr7+8xTMVK8+0LaMVhTpXfM+
Wkl+PS7mbVNofnPgT3Pr7sx3bT1ZypjtxPVrz9Ir9YiSBWqSey5mubr735wX
0NWjd28nbxNTednK2NlM430nGMV9Tl7UvYCUtnFlPh7g0dTpHcxz46VnLjXU
dR4DeHEJAtLq/zXZzVtMnVdsnMln8d31Py5KPzld7MTQxz6yRq86Ccng+5G5
y9P/vBzUncMDk722MWR75KSH81whzQjQejZlbZnE64KSUac3a9wpWUiXpjvH
qSkzpM4RT1echf9bIIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBC2HBXrJ5f3XGkiFr5vk85bM7Q6Q2BIcucpSfHQC0lPyPQnyGlNWvO
2LsJyW+ky6ifL3/fXI6Wffvp3UsSUAtNJsrNV0zVDtopM99Lf16NS6e4L+d3
MbT8pKnn/LVCmnmt1ff9d8ro64OttjmmLFl4rH6wZDNDOecGh1Sea/o8opQ2
vnuXDSqgEyO+6GVG8ihvlK/TmQsCUuip9Wj0AZbOJXivf7SKpcxe+3rGdRdL
fP3+qrJ2+PSVvTh051RO6WBdPmUw8bczbJEn9u8sHzy0+3dllhz6t3dpESkm
jV0KJaErK+s9nrdt+sISKwF922uyZYmpmPoOG1PXM6fh76NRTXq8nD+H0vcd
8Ahy49PZ90Y2s/wb/rxsfO2ekxFLq+NHvri6jCGjwHjuSgvJ5Xc9ka8Wnhsm
ppmdmJv20TwKNOydMeLwI4k/5z/dkeotLhQocGmTWYqc5R0+sdd89UIT6+83
g1ifmuHLWBJcnz5ZOYyhbMu9iZ3fNb9cuD0XrTue6cDSQoOwQlVnMfGNtE51
/lx/LmXfFk4vfHQE5N3BLvnLRDGds7j1eOyj5refeg2bdKDzKQ5lDosyz9vJ
J4vqu5VWoZjnkpa3sG1Py4oC8uN/9nv6lUf+nqtu2IY0v/ei+yTzXWEhLO29
8WL/UjOW4uY6hC8VNH3/zL+kdvSGOUvjJwYdyw1kSBAdt6MuX0DhKiahC8IZ
knWYOmxLjJDaGK7+4bKYI/F1+rve1PeoM7ET0MhTe/XnLBLTU8uUF3q5zW9u
wP/dMQf3un781YczVnV78+a8kAK2xnWLsZCePpSUW0coniixEpGhuarufTeG
Rva+s7KHt/T8bwAhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYT1Gevs0S/qzHOK+ikaKgwtISetndk/x4ro2HbN4Pan+dRhqIg9
yhcR43hW7UJYw3OHAtSVTlX259HAt1YWk5YLSGl075dfFZtfjiX8l6+C9q/v
aMMSu0+QvfA8Q54Ky6L4asIGn8frY9+vyhFVtNhlot61hCKyTirpo37ZQOL3
9097I1/njFVECan0VFULEFRQ7YTK4t1RDV/PP81EebFZaeFruntxrUBndjk5
zvc1u3mm+eXdNZZa8mMMQs6+osn5C262fldKN/l2gx/lo08a244n4g1i80to
5PqPQxzrKki31aQuw89hnSGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhPDf+dmH7Vu6WEiLojodCCgRk+vwPR8chrISr+tPsdsq
Tl3sPIaGXl77ROGMgCJM3y3VXV0i8br+aenpkDHc+QydzD608FysgBYPi7Iy
8JGedQif2yOhKJpP8jqDb5wWiCjRICp5RnjD8/0a6ovMQvGZw7nk/XpAyazl
XFq5sLxUtQvylyTt+HnmKpfzKsnav114L3cRHTxPvvK/3nOZuT2dE0J4NFbm
iuLsSAFpll1eWqhdf36jibP4tPFalgYMHCc8UsDQ2eqiyhmnpP/5GqSlCZeG
8qjl3nlXJh4RUMXRn9WrdZo+x1K94LmsXCZD6Qq728gHimjazu4yfU/xqH++
unvL7iz1dPLTfRwiJv1El0fLZ1bWe56+a8d/efxTRJdHbAk++55LMW3D45R6
p0p8XZtKWyvj9dstWKoyjLLjRDHUIaDKn5VvvD70nWN60D2VodS7GdP0TESU
0sprsl4bnsTv++8qVMqpdgl5SzWPV09pZVZBvRInDC41qH99XGt4RqlRYurS
v8WC0l/fW4KqmD27hSy9nqHypZczS+M+XBzpOaqK9CqHT9D0r6KuXrKTjnqW
0MuwLstWlVXQ8Ol+s68dkv45UJ/rg5PSFY+xVBxzPqA4lKWLi7xTQnwkl3Mb
aL/3UvFuMX1XNQnWUmHpw2aPXZq8+r+TEx+8O5ddkkdqMm1efqzjUq9FnVP1
S6Q/b/PaCzO505F8KvySEv2GK6K9uidSCvY1/XdOc3PjZx/ZM2YMuS56NvDk
bQGZDZtz/3Gx5L5XHZJNDmosYmi5yszbXZIENMD8gHppqvR8P8P/3fPDMxat
mSOkokH+QdsKxGSvlug6XhW/0yGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhNJvULDX5ZZT82h76UDPWxe5dKNgyKvRNdKf1wQb
105tb62q6JZD27NNbDyPcSg8stD52Nz6c9iWHzq4c4pVFm3WdF2d+riMNnUt
utbmwO+b2yYpZbsFh+ruqKJZN1ULRhQVUc2I+2cvtp/VaOd/PqdfqEkaQ/mz
+s+ZaiaiipUPizf0bn75hB2D7q7be5KhGD2/jdfzhGR4Knz9zZccidf1p9s1
fJ76XNccSn9onDH+GYfWBX++sHxq/XNgSZ6VybftWRTkfNb2SX4ZHVQ9aMEG
Y27AptEtMras0iWXHOVPTzOfyaV5N3Ykeimj3yCEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCJur2tHXzT+mviHDbic1J/Sp
oD3Tl6T4DxTSy6vPVbZfYWiQn6meVy8R+W8IX9rSm9vg80fF39napls2Rcso
X7vbn0MTF4dmx29EPtX/yCr5TnVU4JNS7eXDZ0JFZHnqUvoKa0Zi9Rx8MWhf
2zAR6a7Rn9Izt4x4m14pXh2xtd7j++eru7fszlJPJz/dxyFi0k90ebR8ZiW9
Ctq/vqMNS+w+QfbC8wx5KiyL4qv9ec89T+boqKr4CjISdtRhngupRmOU6IJY
XO/x3Z/FmgesfUs3OhlOumFUQaLPk9WW0J+3bjKViqHGe/NJ0D8hoHA+j9pt
ndujPE1A75y/ilf4C2klU3tnRa2YalTk5lnpspKv97/UW2HMh7EaFfS8RWu7
1r5CGn3tXZu0FDENMlreyq1jMT2fkjFSy6OCzmoYm1ov/QP7oZE0Wz7qDDfl
1zx6E/Okp7GI5BNqM87KNTwPdoC5iOkTy1D1+FVn9aqF5J45e/Onng3fHyGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+Oc4
S6ZT7oereVTar3XQlwouXegyp6i6XCDxumDzMnqi0YmvHzMp54enefKBMrrR
1ehr1On688funxxaVvQuhyb3Pd73fJtffdWrze5NGsgr+0998GJvoExkFU1M
tg4TxxXRVFavWHGeQYPPo17wXFYuk6F0hd1t5ANFNG1nd5m+pxqeeyYtrt9+
pnpnKEPqw29/n3tQSM6X03doDuNIvK7mottbvbp1fV7Tk+drHk9VKqc3JC6v
3lX//D87KkHnWNdMOuoUnek4uIxs49suTXuE97q56uM978iS4zm0wGpncVoZ
hzyXT1EdOR7PC0IIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEzc9OkzJncYIZ2ry22s5ij5D62vcZtbDj75sb1itHb3SNVwGt
f+k/WeMxj5ReHDDfeUxyOZCri9q7nltaRptf31d8kF5JztYBX+wGiiS+Tn91
gnz4RCVjlr7du7SO+lTRmJSsQWmeVRKvq7lrc6rcNyQxh2bVGd9TF3Ho9aeH
40fpCKnNp9oo/Y4sRebKy3i6immK9T7FYd8qJF7vX/VZviZ3XI2IftwaVxnm
Wkbla9idhglbJLeevnbPyYil1fEjX1xdxpBRYDx3pYWAWo73Mnm7mKX0VkeZ
CH+G+sg6yoW+RL5rY7vH4nxMW4Vc6pLu8m6XEpcWyMamt1AT0tdNYU763Via
4l+dzgSJaZiiyKN6aqXE6/2nbfdztgFHlUOj5l4v3jGJT9c1dl34trL+eV6V
dZajUcZQty7yJnolLL0ffv37zsWYq5J29LRLY0foFdC82S6XxDE8ap3mcGVI
DObJ76IRN18u0ouh+e5rhUcXCKm2wK9Hv81lEq8LQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIoXRLLoFzv4blkob3KhWZpVxa
uGzEruIuQonX9Y+vw774A/ajs8i4tmpS9qUy6nClZpB55J+3DvXJbjyblT+X
oYq8pBlDjglo9NKnSY7TSyReV1PZ32R0z24WOfTlgsV+01QOrdWdqu6rLz39
sK/csHfni1W0tG96v/Z+RRS6Psept+9UidcFG8fgvutmySRkkk/XunBP1zI6
0ivsh1980/fnC0WTCVsyGHq4QvlTyWYR7VfWkt/pzpP4ekir8t+6LpRJzqUp
W1tn9VrLpdaV7iOetJeeOQMla5Ff31jNi7lkF9N7atHKX/1jdcqpRyf0D4QQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP6PG1ll
h/N3hJTyOK5dl54MHbyx1zJyFlvv8d3ODVx7zIWhHy167n+sIiThYbnKBLZU
YvU/0p9qaygrJJdyvVeDE8Tk9LZFyrm29dffWEZcDxFWmLFUOKTLm4wBVbSq
wKm40/YqiT/Pf9pllLJtijNLUXtrbd+XMORxrqfVsmtCSq5M6TzBlSHvVbFX
u/YXkvL3cZdjPzZ9n6xvt3W76HY+CZ2jEy6v4tH+0DahVckCia3P7B6W3Sr7
l5HC/WWa/c5XUlqJztnvHUUNPk+PFR8EnRiG/B75Z7X8KKJLT1cLM6+VS/z5
/+lOWsEzvzVTQJmT9K0MDMX0KjHjomkGQ4yRbITJAZaShijyJziwlD5Qu1Vh
D3GjXfeBcoKZ8YMyUvpU+cRTnk9G6lWDyqY3vK9aT7S/O6m3mLpEHJ9xYzWP
Pi5Pcjrw7IHE11Va7cLnBx2r41A7v/nX3JL4lNtu0DO3+IY/l+amwbHtYWb7
WboqOPoheAVLx21W+szu2PB+7lTy80aNl4AUM1JimBViit5qsmRPMdPg85zR
7HUsjcdQzULtc7E5IqpZtTlk2grpmYdmSo5dLhRyqKZKQSX3NJ+C7vvvsDst
/X3SWA6q2zv+unE+HVlywuueJo9cLNOr+72Q3D4uLarJKhuY+7CkYPRiwuJB
LPU5cahOf5Xk+qrLmpDvY9Yw1Hpzyw27WgmJRxb5BxNK6VvwTaZiNUuff6je
SH3G0MWvKVmvvaUnH/LRHMf2Q3h8muDZs9+aDmLSzmlvF3i+4XMM/jNS/OO4
fr9+t95aszCC31tI+d1OtssSSO53q7TYyrbGWy5DSGdd1hqMHPDrPc49P95p
btP/voYQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH8
0+w78du1tBCG5NcYjr28V0j33XSz67pzJF7X33X5B6ucsX4sidOCVZJ0WKrt
phjR/tDvm6fUS/3ErXQblrxG+87pc5Gh6YZpY1Q1pSc/pz7lb8/kyVkXkIXa
Wd1WN3hUYKq+aPFpyeU+mewb7XajTw5d7hLbPeskh/Ymq/YMMZaedb5XemC5
R2uWuFMn3T66TEzmR7t1n5VWIfG6fjejdJe9cdvJoSz9tFMB6/m0eYWNYw+/
hs+foc/29GjVTkwH5p/x51uW0TX9faqeulskfn//rUY16fFy/hxK33fAI8iN
T2ffG9nM8v995/Pvqoi/LNytE0u3dTatqnMXk5HasH1vFSolXtdfXZs+uVjV
P4eMf+6WE+ZyyMx2efbHSdIzt+vTRHXC7UtmBcQZEXvR7QqPFBb1jHsWjVxE
+PeMPr2jI8eMpcSraj7cnQzZXmjrKXzY9P3TakrvnWv2s2SywOuZi34VCdZn
p3U4IP156fN0Rqs4+jP0fP5eAbtBSD+OzL/3+EWZxOuCEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhLAxnXVo6ijvrQxxZjw8dHG2
kD61nFOw2Q45G/+Y1/ScnhFLLssX34nWYMhzWmVOHYcv+br+YZPsHBZOuJBH
bpfF1xI5XJqkmdN5XqX05C/FRpzqaaTF0I/ddatrtrLU9uwmu94qTZ/DM3zW
5LTb87LpY5d3AV8mc6h39aBRVmulP49L2m3VKvvC9KEVpNR/2YIpPkLadlov
odc9Md2YEdwyNYkhuzZRS58PERHXZ9Cp1ie4Eq/3n7bX0hNHVnwW0yLdDnrK
7qX0buLtbj7LNkisHlbJd6qjAp+Uai8fPhMqIstTl9JXWDP1Hm+QliZcGsqj
lnvnXZl4REAVR39Wr9YRS3xdpdX44CGnDZJf0U5XncjY2lK6uK1wpF3OnzfH
jFwcrTX6sKTnF6bd9qyY2B8zxhf7VtLcLdzhX7zz6O4wDZNdz7mUmeS1oxMr
PftjQz06vORJVUuWps2JlJ00V0xP5d22eZxAvq6kDXvoMDdsNUO+WYeyRsgJ
KWB/P7XtsaUSrwtCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgj/dJ8W6OqxjgydCVm2TrG9kPYZyR49klJ/Psyj7X0edPFg6fGj
2J5vW7N0LKL9kWf9RBKrP6c06fvOAJb0Tzt/diaW6oJFre5dlFw98F8+yOCW
Jzvnk+/Bo1/sp/GISg5synzS9PlXsutUEixOZtO8qsDPzis5ZJM47MAza8nl
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
t/P25ps+7jcYGnDQfMoeNRF5bQlc0tqjuMHtnHUffbTjRT51Gixiz/BFxKy9
pHXt+J+3z7gvubuue/8s8mipc7fbuWKaf7IXm/et4fv54dnTfYJjSql0U6uU
glQhLWzj6GbASH8dvTK7cSDGgiWNPdNDTu1k6FGd8eSl/0DO8I5Jn1fyA8QU
vDXFbm5/lmYXzUmYWNZ81qMkp547a/2yLUNLtkf2eOfA0qIj0QpDFMvJ0qqr
z6G+LClOjvhUHy2myzceT1cLKZN5vf+0Ldnj0ZwbRZTdcbOd+7oyOrG/2slW
2Hj30is7CuL7zWLpi5/vjpK5DCnmPa2JMmw++c/R4n39fNXLSNxLecxgRRFt
sVnYKafrn7ev/q7qrbJJcnjG0CLzkvZXVorIqMRX7fC0pvd7R/NqcM3bKwzd
1NvmEfVZSDltB82IHNrwewKETcEhtoKKuWPFdLP3Xy2yxQxVjOS22vqs+d83
IIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhP+391+F8v1D
GerwuO+2z2lCmvpyUfD3p7LLV4SN6045f//jIoYcXdOWrWVF5GiasmLK5RKZ
1/W7eWb35MN3lzO0KcPF7tlJllTmtuQrjCiXeV3SUrtrnHrWsyx6n97WdVxF
MWlnJV5rWdz08mpez9W2+mHxnlKmTjVfN4ND/LV5lX4JTS9PsrEcsCVi6uUU
hjSivj/iLBdRy5IB9mYGTS+nBf4eTry/3CCukKG8+Jpb19QKyXZsYdJG1bX0
puO3LTPjyijgcUKXg3YiGh+kc+TVtIbnQZV9rBjiFcnQ1cEru6TXCKlqTexJ
hb7I82mq6obdXlzz+CMZqZwfPbF3KR2ZYfXIq3/D99vIjTv6hYS/oZCfosFC
v0Jap7Mv/efYPy8HNVXhYfi3H3mkU6hX1K+khLIGdot43vL3Pb8ay8967ff3
ucfQAVfbGg8dEe0Nv27e9fHvu2+U7J//9O41hvoPN3bgtxBRztLDgdsn/b79
lZVtv/+8k32foaPMq4p2E0W06kz4zY5pGGcIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEf89Z53dXe3kz1LGyyyRNVyFF/GVp
czuXI/O6/q7J+p4LTGbkUM/eghGVV3g06ut4jb2Xm17+ZGO5fU5QeMs3HDq0
IMDSqQOfapknV9/MbP55aCc6LHYLM2Jpa2YLhZCe5RRfM/bCKbdyull7vtv8
7iyd23A4ke8rppINr3NN55RJvZ7eYdcvqERnUMqzuHlf+FxSCpn3mjNOSD+5
5Q4JJiwJBu84ediGoU4na51HLm968+1d8WrFOV9FNOH2u2KvDRw6adqh183T
bjKvq6k7Z+XXv6a9zSCT9h6jJnzmktwR1U83R0vO2VPInRBSt5gl2nv0ypPD
DA1XKY5x/NDw+fCw6C/rHfIsFU82uH9mqZgWn1HpPutJaYPbmdg2UF/ZlKVv
D2M2UO9yGvMobcCTnbLLH+6pGzhjpRqXEi9kFA0cz6fXTPT918ub/37V3H1c
4ukidzaHBl1v38Y2i0fq40+yV081vX1M2u6ffqlQ05ehoOs9j/f2F1LNt9E/
rqkh9x5CCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
Qghh03DAxjhHzhKGgqeFPr3wSkAvbfqPaqtaRH2MjCeXugnJcm/J1ydVYho3
Qi0jawwrsR02cYEKt72AxGGbhs3VFJMJt+uSo7eZBtdzS3P5oNBAljYc7t72
yyaWBvQxHRI8Uiyz8RGNM9HxcGWp+z5XvkiOpRr3ox8slZBz9Z9aGGx88+D7
LBoTsiahpqaYLp18nLyHIyCLA2M+3rVmyOBrVNeQNAFlfueXaQ0rktiO7aUx
rluXcCkhzs5n6VI+zer+wGO+a+N9l9fJLTeWfGSo/QyRPxsvotafersx3Usa
rf2g0QpRPQJY8mmdQqEOLN2y6KVf1EF28/x31ahqldkUcw65HrB0Ckwpo9oj
abFl/UQ0i+9tem2bgG5t1M4wsBNTwu1Fd5LyGr5fvXJqm+/YTUxqPWbM22rM
o4L7qkL5B0+k3q+xHxa19Szk0Faf/FYfVfg0pv8Wm9Zzm96+NF1tTM/Na3+N
c738SJ6VmJJjd+l9z274OMN/xvFniopffmTJzruDw8715XTkwJFHCtck50xG
nPH1EGUwZKNVcuFlkIj8Bva44vWc1+D33rkZ1ur8XS7tO+BybrA/n46qlNbN
Cmq8+ay8pHDq2owsCrvYgpZ9KqZPMx9M7cBpvFzES4VxIw46MDR1ec4sE7GA
EtOO635dL/n8gr+HU+Kdw79uZcmwlVpVaC1D5+UObX3CSM6VzdjRw223P0tC
x4XHrOxZapPkHVTTRvrnfkInzpMNdXzqWFsbPK+nmIb0fRvfOrbh+/D5PpOE
ZXYMPbaq83bi/vq9cOuMCVk0n3m+zjtbZ/llIR2M6p3o1vHX755bpRP7TpX8
uwZCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggb
auiYqpdOOxi66ZB8M2mqkMS3ChKKzDgSn99x/v2F/L8YKjimM+vYDZbejPjx
9PAkyblPDdV3/NvOOxaztGSMzmTBIYZC4zvGHc9svPwlKFsDVmZfnfI5m2Ki
3yreOcCjhX6W621vSP6+PXJude7VMpM6rLqnfLZLMSV3n/uW1ZKcm9RYdtHd
2j30v3I8IxI0PWaIqecDo9dJh0plPn6wYa7cpV6qpsqhbmlfcuLDy2iSRWrP
ZR1F9JG7S6G+s5icwm98+W7FobmD1HUqe7hJvZ684Bm7d23nkJpFvK5SXhnN
flqzvNvwppfHCH9vh5Zsypz7mSGl+XoRZv3FtNR519IJIyXvb+m1d9K2p2VQ
R4HWzRdfuNRKU7ut7ujG24d3fVKrXcvNJpHT1QM+O3jk4z5Xl43HuQ+bhv1O
J/+sdmTJ9ZJA/swjhvxrbz/Id5A8/9uHXQ32+M6QXUtvq+nlLOWc96prZ994
9+SGKqy5nOu/naGYUItjHSYI6V20lX9LHcn3fAghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYT/W21no2viLyLqGhL70PE1Q9+e
vK8bfpOV+PxJedMR261Y+tF7yq3wowx1v1F9wKSw8fKUlj0bcqDvIZbsbJyK
b09h6dlg3fyoG8gx+100Mzx02tGplBzcxsjtCRdSG4vVq8MzxBKf39FGzcD/
B0PL9xQeHzpOTJ4TpqgU2Us/L3GL/25bsTNLO/2ODOgiZKj1xquPYt5KPx8S
Nq7Jndq7Wb0TU308p+NDzzLijT0XwfhlScxvlHY99wurT3pkCshvnE/b7EAx
lST08TnzlZH5OME/y/duSzr0WVRKm57HDpkVIqT88PTnw99K3ocDbj/KW5iW
TY8rsq5e2cyj4qhzBzfdbbxzvyhq89GxngyJH7IntloLaaTtWPt4f+TIwaZh
gvOYYws6i0k8f/o6NpshC22r7u3uS74nqzArvTduZWiDrkKqznAhzb358I6O
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
syU4PoO+pL3KGchwyWVmQPjRfyCHMHXJj02htSzxDxYNcq/6SB2HZk/pf3CJ
zMYhNdVIM8QwgxQ7mYlXxXHJ6EFP4fR/IJcS/jOqzYtMmcsyVGGa6p5YLyLV
EekvVJOkv//Ibehz3eZ8Os0r9/m0cSWX7OOG/PXKruHzanOHXe6i+9kk3Bh2
PdaJRwF+Cn7lCc0/vxFCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgjhn+meDh4DFM8LKeGE788SeYY+5Ri0/UGszOv6UywdOtLk
8UaGgs+u+bpPTUjWJrxtY0qLZFYPY+LxvXAZQ9FLdfT3FgjoYHu+Xp/ZsqtH
ku/71eo8uiWk0Nkr7wcpMyTX98r9SqPGm7cmZo/s/SdmU0z85B/LhvBIdfSR
fb3f/3l5U+tGHpr61Z1PJk/i9r7KEFFIv7OHeN6MzOv6d3PHzlnQazdLWv3z
PcyVWZp1IWFSyCSRxOd5AZ33aRQW0gv1nFNe30sp99ANWhfReHl3RfsuG188
W0ypLp1GBHcVEO+Hu9f4Esn1NDXfdIl38Apl6dzQzY4jgllSu8a8TD4llnld
f1dP5QvWc3qz5FG6bI77JTFVWd18qniwjOLOlc1XDGLpsN38Dlo7WBrjZWiz
20hMltNXVU7vJCYDk6IPF4bzaKyx0o5uoiSp11l6goqeJjM0w/LD3ZSlIjJ9
bsumafEarX1tA5eb/PUsvXIZl1/ygaFOvn/JGTTiPP/T5In1+RavCsns7EGV
8rpSOtfzC9szXEiTT8it1tRlaY5Hm5l2rRm6vSYkzHAHnyx1d7xxSOTRCvPW
a2JuCujKksQbPjOkv44GT7kctLGCof4Z149zyliqLbdfEGZdLvPxk5aHj+6J
bT05i9yL+u+8F1VMd3IGvdOub7zzOkFjnxLfT0BaU9aIlDaKKSEqPCKA1/TO
wZTKjXdejeGT48cNq4dGiijq3rP6TxuaXp1/mu83bpmmY87Q6xRTwzPRAtr0
rDqq6+lCic9n/2ihttqMoX5fAnn7QgTkmKQwWmQg+XkI/yda+Xjtr1cWkpPa
kJG374opx2/TnnIl/B8AQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGE0tfObU3pEEshye+rNvUrEFNE93ynzEHIPZC1bdf4qVRYMBTU
dnavkbcE5NW54P3ExKaXf9Lnmvmlib/qbK2tvs8jTkBLRiycZHK96dUpK69s
Gr6lPJ5PRvu9/POqRRQdNHHmktMMGY1K5Ladk0WjM+Nb9b1RTCH61uT2qfnn
K5YbnZ2QuYZP2stNJ2Q/F5F9YUTBC0/kL/3L9/7vI29bFlNb95rvVQI+ubyo
e6T4RnIu4o0Rm9xnT2LJ94ph7khNhhyzXs+0e8mX+LzFbBP1Be14lFFeRimm
AtrZPfO2vXzzyS1sLCcNVv22ZjNL39YYnCwXMbTHNc7gaEbTy/3zLLhr0WEY
S63sS27p/zp/x3zsPFi+B5/cypJaizuIqW+1isuDQTxSmiRUuJeQJDG/sbHq
6T+s5Iz9Q4ZU7PKVnYxFJPeyx8mMmmKZj9OfLrOQN3foapaOxa78Vv+coYy1
+pWn3YT0aKGaSZZhEQ0rcz5sObSMlCeXju70RPI81xg8fL3N0yKSaxc9x35b
Gdl4HuBOqhBSgYUoepAlS+6Gn7f3+7Vfb3Lf/v7Og+ZzHkUGXVA10WHox6Gv
q+t3sdT+0naHXn2kn/c4q0XnzKqbWVTUT/5wXWkxXes6J6+6pOHjFmjW43pe
GJ/ajht456JARHHTQxKMA3/fczOt/6JNukZCUjV/2u9Ippi+qJ264aaB3x3/
UmvJu4DDCxi669f2hOY1AT2LK5s55pjke/VonZn2cb+e97ZN14v/9fyhlDUa
I/xxD2+qmk4fUJvYUUgfr39yVrolpslb5uYPU8T8hxBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ/nmmfDDuMvxLNqm/6fZ66EEe
5XaRL9C70Xzyr2DjWjbrfcvjkWm0wtPYZ4CYQ/2NdU45e0nOVXu/ZG/XVz2y
yK9n/1iF4GK67z/2y7YfmD+/i0v018fej2Zp3q1Bgxa759PNEXM2hL20k5jf
6Kl8wXpOb5Y8SpfNcb8kpiqrm08VD5bJvB+wmfhyckVuxywq2TJpb/TxYuqc
l8cZ1kJIlcmewz6uTiMllUX3q19zKLPl+nR7/6aXawp/Dz/E18s5vMslR+PJ
9WRcQpbvtsz7dBHnGoQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEII4X9nt/ODns3elEPerydUf3vIo8lKb53ehEo/x8lWpdrz
ckIGFSQoqPeu4NJ69yj5kLENzyuz7TVgZXk3lrjbugj4B8Xk87DcoUQHeXrN
zevzBk7L+JpO8n7s/Dv+XFo95cCG6wsaPh/2jem01fkOS2ffnfLvtC6f/GYv
6MM1s5N6/WNbnan0M8ighFuu71bFckmsze4/MRP5e7L2XHm+hkMnlkrqAx8M
3SCmt14Pow5Vl8q8rn83+ucGO+vTGWTpuLfubSGX1n6zWfdGT/rzJ+THlu5V
9jnk6nZao+4Oj/zix05ujxw/CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBC2ESMcR7KDXdg6IFccY9ksYBqMltkjtlY1OB2
+sfVe/VTyaYP8zef69CdR3u+tomszpJd7lZstJJWwm0OKY/0nWH/s4xS9Vw3
RUwRSXx+yRLOuQt5DDkqCh8PjRPRjj23Lni3L5FZ/YIBbVWOHGbplNPmEN5s
ljjVej0Pv5Jcf3Oxi/YFVjeEpZh7RlofD7HU5oT6RvON4kZr33LskL56r9PJ
8anqyTU7uHRQa/C83ksaL3dOPupkQCtDMZ3UP3948nAO9ZtQ2n5v1Xapj9vn
zXe2BMdn0Je0VzkDGS65zAwIP6oruzzGHsNvuF3pzZK/9bJcTotyapUSVuC+
tlzm8+vvGjRaIapHAEs+rVMo1IGlWxa99Is6NN48lOT5PVFiuRKGIvVjCoMy
RXSy9aSXMY6y22ckOUEraN6gCA7dSK5tGfCpjIwvR4xcZyD9/Sf5dXFJwsZs
2n/iTJ3jVB5R4V/b3z9v+DmSUPaoy0RnhjycIm92UxdSz+8TYiNrGn6uQQgh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYS/k9oP
J41spSoik8FP5940YSh+WkD8rFUs7VI/WKD0F0tPWtZyTZ1YyqhK2+usIjmX
6cD8wz5VYQwtWNyzw/5iIcXMCOzTupJL69XOVXwJYujHbYVlm+NZKgmafnIa
yS6f6s27zrZRIobG3X71WbuEpSk7VVQ7LG0+eVlNzeeD0hI0djFk4hx3Y+Ys
IXlqbvPJWcaR+ns3B/sUvpn6gZJmG8874VRC6h4PP424Lbucw8aSTSiefapP
Hs2WX+G/LryEbNvL+TJ5jdcvq1bJVnbLGHJlq3K4gSwt8C6sFQxrvPm/fsIQ
oXEfljTjVofqXRFTQVVA18e+ZVIft+kL3lxYrsmnFSHVm7eGiiizdtSjF6sZ
qb+3/8dP65478aiia9ldk/0CyowYVvN8iPTz65qamdP1pnZpJ6aIsavi93Xh
0etaqr2nkiTzuv5pXZxuzqu6XUr60S7z26QLyTxeV3yjXEyRerZPM8xYehHQ
rd6gTzmN9096Z7Wr4etOcEv4SPExQxFdPkQlmIroWFs7T7M2PJn3+++qtyZh
+G1+GS2YoXl9truIDAQGLsqW0l+nstL76NKuo40K6XxJZD+ztFJ6u9FmWsIx
2eWFSnIpPdptuJGlEN8vyysLGdpxWXXZ0ltCok0+Zp+PZ9JwD6c+LZYUk8XS
EQcKuja9+pua3ms2J93exFLnuU/2rdD+td6vz+Pd92p698yHckNmrpzNUNS2
120XHxVQge7ISz+YAqm/17K/6Gr0ZQHpFLeKqtgppl1dTabqiX/ffUDaDr40
YpzLPIY2W9y1nRwmoPwvAZ+1VhbKvC7YPJSrn5IwkC+grdXrO9qHiqmllomo
qCUr87oghBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYRNV/dHY9UuezOU9WF7dZCrkGwcPA8LPkjOnyw55XvKflAOeWpmZqee5lGg
+d5zFtcaL19R/NQgYYVTMTkveNXdrppP36Y9T41IE0l9HFZuTmvt34Wl4N2d
A2p3i2mkTd2aM70bnrv4MHfK0JzFLB21Sc02OczQlzdq50bnNv9czcay62Jx
25aLWHocHOS9eD9Dr0b35qo9kzw+nC6Wte6r0+nt5fx+PWZzKbjkldHe1dLP
T7uWeE5FoCGmZStMbIbN5JDdK8c3weGuDW7n+ryB0zK+ppO8Hzv/jj+XVk85
sOH6AunXH3fy2WslX5ZqZwwerf1rPsZm9FBTZ6W/jpqaW/x324qdWdrpd2RA
FyFDrTdefRTzVkhddLd2D5VjqSYiQdNjhph6PjB6nXSoVOr1LDm87c2LQcX0
s/TnprxUPnXgGKrWJjS97/JcPV2xyiqHpkecO9XxFo/oR27MrDDp72PHqmdr
qx9haP9yi+N3DgipteOSiR2/Sz8PGUIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCH8EzQX6/cL+y4k9vN5P/1JDAX5TRb3WMbK
rB5dF05MzHaG3h9b0tNjgpAyVo+P0x6L3KF/2TEnxqnASEDzW61aPH6GmNTE
097ceMXIrJ7RQ6YqPtjNUJXu9we2c4XU3Sh/YNRGyd9rtru22HMNS+tXfnDs
kMrQ4hf5+m8ONjyHLSJE2fDVg2xKnDs4W3U1j8xHjErdlYB8v39ZatrfMCef
S61KT4wODedT5bVai61hIhrqeWyhnidLj9/HLOZqsmRgd7K2m6Pscs8+Glqf
Dp8moLf1p9VXThOTv3JVwtmXkuezY/y0MaO+MyTIESRVaIvpjP1gk5kW0s+L
k2R/4XH9h2e5VLdwa0ytJ5/unnk8dapv08uRU+y5N87Og6VxZbr3r6uzZD40
/mqSTcPrnPOqLvSWppj0enxWeXqMR/uvm8xrU/5U5v37n3pgi3N+7gKWjin0
73t5K0MKRd8MZp0VUOq+CerCDVyalbJbQ+zIpxEKiSJtd+l/X9tUeavj7X+d
w8XeYcccxBQnHJRfkV1KKUs19yx0FdD9o3VDR9iLyXWw85H5H2W3/0ty+5yg
8JZvOHRoQYClUwc+1TJPrr6Z2fTWRVNT8Z6hk0JQDumO7+btnM4j09jSdcHB
ks81N9dLFi7HWEpzvRHPW8iSk+WQNkP4DR9ntaGh917as7RHe/+c3lEMzTB6
MkZzdMPP5c4G72dxjzLkur7aweaIkPo69h5lociV2Xi27ttvysN4AbUczYRs
3S+m6lW6j2ZWNr318qdp+9kt8EUAQwN8Fmbwzgpp2YDexgcNZTdPZGVlr1U7
V8wS0Z3MHX06rfp17lQFDvRxld3vLwghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYRQGvr8L3buPBrL7u0beGmSNJBEg0R3NClp
ng5NmiVDpWSoEFHSJGlQJJmbSIoGpeFOo9KkIhokM6G4BsM1nCdJqSTvvdaz
nrXe97fe63luvx/3RX3/+ixrnWtfx3nsfe69/fN1zbO8XpRLjqoXQtd/59E0
z9ddnhY3PjdSI3ON36jx2aRw90jXlGtcUln8TM95XuPzsprKYwp2eqdKGBKV
n+talySimsVbp7hNLpV6v393mQfq+UYvs2g8P3nGTzcuHU4Otgte0XTrZPJu
/oT7DSxNiFUudP5QRF7O535e9DJvsvGXjtFWm5iaRXbPVUMd3bl0YIiWUb8m
rB/+M6Ymtd1YWsSQ3GxRCBsnovZf+u1glJt/f0jnHO/+QCabBtv7j1Q9xqV3
igaFJ5e0vPVT9DNk+c/5eVT+zm+V4yg+qWU/i/ZPQ54whBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQvgrmvRFRX7ZPoZuv7Ra
8NhaSPmzXoW/j+BIvS7YNMr0vJps/TaP+g9YozhhE5/yRTsjyuKRK9XUqrzp
oSvfrYj8DToH2AhKqWa/1SSj9i0vZ6ypLE/qkppeWkHjGpyWrewmpt2jRz1S
vcJIrZ4pn2JeO9UztGa4vc87XTH1ffDpcfTSMrLXO/i+46UiKnMWRur0KqMD
/WyYZWq/7rzcj5d5FvJNRAerY2dOc+HQ8Y6zbK9f2CH1uv6uU7VUfzi6svTD
cUpopYih3W43pwRkN/98uR8vKDiinkMcj9VfOgzk0elbetod//h110lTOWhz
zIyLyQwN/LP+CWe1iNqWDrIxnMKnlP0j7TetYEnX5gAtC2GobrNNTXlF488d
x80uPkkRRfS4TeSFuwpltNZqUMbcfkLqvPr4ybyJDN2Q77rnyl6WVkctm2A4
oFLq/finjVuzznTS1VzackN85yaXR1N0sxWMylvP+U4vB4/mLWHoTFao6cVL
AlqmHWE1y7NY6nVBCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhFD6PpG/6/fZlSHLOyN3RQ4WUnZBiP/1Dq0nJ7NruqeB6vw8
0oi6PPn7SD7193S0vp7WenKiWovDRgjnmISyxH8aOttuO0uzlTvVG5KY9O31
Nzm9L6Ezzi6x3/eX0zntU2+Mv7aefLl3y2XlZSKz6KRsR/e5a7nUe1vn+0Ns
mr/+JZWhofuzGMpU/RnlfkREJ9Nrh8bd50u9H3/XBN2CnPlzxDR52IIOnTU5
FFfWtbvN3e2NHqebyr6b1ntZGlc+9kGsOksmQ+OuPFslkvr7/atvFOLW+ESx
FDnU1W5EOEt9rjKvkk6IGz2Oi9fqqxcFDC3UC303qFxEouhLaaZHSyU+P/dI
8OTnH7NpVMhw835yPFKsstY0Gd506/Pj47gqcubSlY5nJtXZVpDKpHbPzuxu
ef1vLbr92W1qejJDbc4PPbMinSXLOVvaXjJsefmNSrf2l7xPyCVV65LHi8U8
Ckt5XkZ8nJv/rvpHLy+8sYwh90dtK48nCKhXv4g7Np+Q9wghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQvjvavy8TLBdMZ8K
fmzZ0f0wn6KPDnuwMVZyXtaDgCDjgAE5JJdGm73VeZRWV9tn5B9Nl9sW5OM7
TFmWpS8v+mporhBT34KSJS4JZVLvE2waF3aN6DB1ShZR7wK9Sj0uqZVuPxTi
Inn9vKjxUjr+hqUGmx1y8jPe08E952+l7bNs9jo5Cks/73HIorcX3w/oPZ9L
4aWvDfY5tJ78T/hfunfoMyXkJ0OrdxcfHTpOTJ4TpvcqsSmj3vl3uvdtm0Nd
1t1XOq3AoyTlxW/ZIc0/v+0dJ+9KkM2niEMnVi0K4BN/o3fRp+vIJ4QQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSwORWb
ZP0IuphLGgM2KziW8GiM0oSVchUC0lgYt8hkBUPVo1Zm+r4U0Jcp8T4hPUsk
jjNmyDbP9DtcStvuc6EhsIIygud+bBsqanQ9dy7Wqy97x1DqYd3E3ZdEFGcU
P+X7J77U+nPCfcIprxMsDdT8YB+7h6UPhsFTi0zFUp+31mp4Jyfbk6ZZ5GWs
+KmIuBTs+Wp/kpOQfO1+lu7xYGlGUD89WUWWJn5ROHV+vOT1c+Ntern/WjGp
Dm848rUDhw5OVIgS/9jWZHUyD9TzjV5m0Xh+8oyfblw6nBxsF7yi6XL5FEad
ZcdGsHT9vsGQIl+WOhxX32iyEeuqqeUfl6+syWJoUnalcPAxEa0W9h/ZI4FP
p03XaB94ylLiKGdvBctKEnYcnFZytrLR41teGO22ZQWXHt60PrRyZQXNU368
d4lb4/e9Rr/XOz/Xl23z6Fr3dM+j8nx6ldAmofZdy8tvHJuffE3NnqGaP/qc
434T0Ov1V24Yh0g+RyCEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCFsjfaV+zL82q4yijS6W9PrppAuPLdaOrBIcr6cZqTt
EEE7lgY9GRy1cr6YilVNx9keL2uyetq/oYM6ziz5vDq0anA+Q18mjhusfKbp
8vSgdF3gYH563EYxTR0yQudzfilN+q5kqSOXLvH5hV0jOkydkkXUu0CvUo9L
aqXbD4W4NP96UFwu7th2GUtPw8MOLvdi6LVuP26flJaXmwf/Zw2n+Z60sy+j
NTtGy+yOFlIHUweH6GwxHbbNuzL9Wx5dv/a22z1vPpkFL3W2vNX88xvvl3A/
6a/1VCtMcBM5/LXfkl37h7c5Uu8ThBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhL+yhiuDz116w9BS4W2y3CWitpflZfU8
+ZRloON/R76Mni3u5DfJVUg9jzH2OnGS8xhr8szsnh9kKX68q3r91Eqa8ELV
PD2oUurvB1uWwlrPrAl2WXT0hbWFx1wuHT1SqN3BUUiLdOwcsu3FtG3sZYUr
90rJW81g3SrltxLH8bX7WbrHg6UZQf30ZBVZmvhF4dT58SKpvx9sWS4PnZju
eD6Xtq1fzRR/4FE3XYuPPhUCOig3x8CpvJR46TsVtFYJKXOY24+LlyTvb5I0
9R5dFG/B0JS6PxUjMgWUU19RPmRYidTfG0IIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEL47ztGY0CfsCXZNGJVjPjWAy6V
lh3kGs4W0rUYqzrGP5cqAmuPWWfxKIemvdIVCySOs1F/nGFhOkMNfK02Lr4i
uty37lFoFF/q7wdblq7a7Xm3e1dSZNCl4pfXimj5R5u29gOXScxvlDROeCcn
25OmWeRlrPipiLgU7Plqf5KT5Ofh76mMaUggOyCbQvW1vNae41KgrVxx10VC
Wlz41XPuX/uVzSqV+bN9RJR25RuvJrzx+1Vx+JzbBzJyaXSE48OaGh5dCH2a
tJsjeZ+EEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCFs7corql3z2M9QwgO/wp62QjKdffiqZgyn0eOsmLv8ZlJXlpRPzXY8
uVFMt6JdI+fWlkn9/f7VK9yk/H62LMWdLrgSE8/QjNRb75OXIPfs3zXs5/F5
s0rz6Ax1lq/cyafj4ftPesQ1f36X3Ppw9W8VGXR/dLhJUQCH7Ittx3hEt/55
TPFe9NFjAUs6Bl13Zi9naK2/brTQDHlo/5vtX+4+v6R/KXUc/fCpQCigvKmz
VZNsxc3+u5F3vntqnRdT4SL7opfJJZSuHeYear9V6v34p9X5Y6nccgc+8bsU
nNTxFtCigx9HLR7S/P1vLQqm/ano84KheaKwvC8OIuIv41rfN2x8XmJhvQM3
IimTjHyUbKy/cWiCzGG1Sftb/773qxre6/mCKea5dOjilGDF+zxalHmlfHpN
y9vPw+4GCsuWslQwWLEodWAl2ec7fei+p1LqdbVW4xR0NE3sWequ9MS3/TOG
cjR65HvZ4zv9b4X6i7q8WsrQoHwDpREPBSRrdCYpklMs9boghBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYS/rw5RQQM+72Eobryr
/6NlQtrmpJro6t34PMam8ntvywdRt1lyeNtrTcrSSppxJCvV7zRygf5bh8I4
jQwnlkoHBW16nsvQxJdLhu09Jb2cn31myu4H2DxiQ5fM2b6XT0LzCSK5O82f
N9Uv0ih15sZsmv9RSWXSKy7J2b8YfE0feUf/7VL9MfXzvjJ0b9T5cZvUxMQ1
P3d/6KCWl48abDS7f/BdLsV2sbv0I6iCup+ZsygsVCT1uv6u9+PH79LpL6Yz
ofOr3i/k0I3bq849SnSTel3NpdKZsadHnuJS21WeaT09K0j/cV2Hh4GtZ74k
2WvW/PQViixdnlOuWrVXTKY5a7MsBpVLrZ5+MSE21wuyaMrmr1Z7PLn0Yln9
zYJlrWd/S5rsabxwdj6p9BOM+HiZTyPrxg/cd7Hl5RC2dvvLxiTeMWdpscWp
sYcDGZqwqWvsLU7j+2xRbZU95gBL4sSA/nHjWPreq0eYfCvahyU55Ele6iEf
hpQcHaPttgjpgI7LyIa30rvfQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIZSuEfPMJ/fazFDV8y8TemsJ6bGJx4/yjsil+acc
sIlea09hia+dP7BCjaGArlo5+gkVUqtnxi7fuAWj80g1xMPKZBCfPC/lpttl
try8rNmbw6s2ZbAk383eQsG+kuaYybMTY5oun1P7cHoPL34mqTowC37Kculc
5mPS3916cs+aStkSrZR5qnzaot91LLtMQOZvUjIcu4mlXtd/ag/TYCcHHkNr
4nu7B7wV0bN5J0tql5Y22fiFzjaXevuIyfb8AYcYXglND4/Jf62+Terv/Xdd
Uhkauj+LoUzVn1HuR0R0Mr12aNx9vtTrai5L9l+cc+40j9K2dh0Rrigg/s89
PuNLmz93TjPdPTHwWSbZnXTLtfzKIXPH2Tr++5tunzHqkqn3NJYlnWOzJ3Q0
raTj07MfVEQgx/jfNWxY8L3rTrk0xbznwbBEHln66ihP/NjyzscfqfN0bliz
lGZ6xLYmhqELx+dUmAz+/c6vpvLFsC4FK80Y6hPfzex5nIAyKzTmeD4vlnpd
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCFu3
O67dfzViRyGdvnrzqGFCKb0bKj9zsajl5RrBf8/XDblsbVwG5a6zbLd6K4e2
qFwvmvsn8qCaWq+bsdqnF7B0JWZwwxJzhvrEBgzQXfbrfkcN+ZrTuynmkq3h
u+uTQnm07aZ+T4uGlve+nVQiTjboVJJiqZPr/r1FVNNf0HD5ranU62ou7fUO
vu94qYjKnIWROr3K6EA/G2aZGr532DymLh5l/tM0g5JnzDBxms2hivWFH4Mf
Cmn5o7B83VcMHd7Tfd9MFxFddrvXvb9V43NEVWzrS9YdyqHwvKGzs015FHxv
/TIvJaxnCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhLA5Lbt35M5+E4aGxYyd9CZWQF2qvLrpnymWel2/u3e05ukkn2Xo+H6X
0LoHLI0T56UHzKiUel3/qkH1jufGs3Lp/Zyjn3NiecRWvRV61ba8nDppeWyZ
0NVQjyVFP/NO17pWksWk+pw+myspZfHVcVbpWZTUV2ePqweXvHfPvbjNvPXn
bvWfVZgrv5FHd8qGyN2urSC5pM1TJ+eIpF5XS/HHHE3dTYkMDbhnY5mwVEQl
XazsH/drfG6bJJN+7vjc/YqYHowMVGcSSujCwsCgkMlbpf7e/7R74t7IGNYz
lLnlqp6trpgWdl08bLtZmdTr+ruazl+obtyJT9mV5ZS8SEA7lXPu2siKm/13
1z8c+7R6Zib1X7kyZ+19Dv2p2yVyQWjr35dau3M3u2d/DWfpZf8KwQhvlqY3
WF4fvEZMq+YU6Aon5ZLDi4zKSVd4VHOJG/rj6294/t6Z7vSaWHKxWPbo/HCG
ds4oz67jVki/rr9pL3tu3SUjhrRuOL/oFC2gMJOqFeMdcA+HEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDCX8V7lj//uK8hoj5X
QhRHGzM0wCpJPWA92+y/e+ZI9dnd4QwVnON4tH8opLMlXspzDnElPr987fl5
mypEZPt2sGnNU4Z6qe08Vftn4+vUWTveyl6NpXc5r0zet60ki0WOS3o5tbwc
xfrxW+fOCWYp+ZGP83MLltZ97feqy/fWk5uXavdqI+1iqHhN13l7Fwnpx/jV
Z9IdOU02/mjNzazO23yaq9J/jAvLp7pVQ7e0OSw556oH/45RwtwPFNw5m3v1
UBlprS/IGLq2+XPMVqrsvjuzK0tmXt6yt53FdGj84TLT6taTOyfJsTcn9ogf
yVIPlQFnBZVi2jYoaXv72c2fr1W1YHxt5xMVJDf/vfNnrogcnW4uXxzCSHxe
5pTwi3ohj8S9rXe8HiOgUPsJG32/Se878nTTeRCnKCaPrAc9XGfxSUfbsXrV
hcRm/932L3efX9K/lDqOfvhUIBRQ3tTZqkm2zZ8f2NKcZfzm7GrNClob8cl1
S5SIcj6PfPLSgSHBoI69/P1YOmHvGsGfzxLn00QVv9fNv06YLr3s5D8wtKX0
3dB5D0RksFDxnL5GqdT6s7u7rW/h1hJSv2A31WVeOXn1vXr5YE7j98nXHV6U
K6/OpdM5G3qve8wjde9ZViXVv2EOYQvTR2/Vk+keLPXeH2fRX4El2ZdsyvSx
Inqw5UVdF1OGzI6NHZ5+Q0B/aqvy4640Xd5gdklc/f6DLM08t/HLRmKpLkDU
IeHPxn9fyTP1VxvICMmldHr6H7Ficnrf9slFuea/r/6qJo+Mj89ZyZCx4xOZ
aW8FZBt77KS9RonU62oprjCaG9dmvZACZ4VbLxeK6UfZ/dc5I7DeIIQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGETefncx89Bq5k
aH/HU1VHUwWUn+HSy6MvcmD+KTdMc9lSI8ylw2vlTezb8in12AhHn/fSy8vy
TDBboaPC0PSaq8fOO7OkOOCYb0PPlpeTaaiYcspiWAlNHj11temAcsqbun39
vodNl+vY/vYYq2daOZS4yaLSdxCP1v+cY1uu2fy5kS3NXmsj98xzYMn7RlH2
hpcMFfjIuKW5t7w+jHY9odKhG0tGTscTA13ElMbXCHv6TXLe5qe1ca6jP4vo
yHAH7eNbOHRS0W1XwLMdTVZPD9NgJwceQ2vie7sHvBXRs3knS2qXSi/f73cz
Y8U+xde9cylYReNG53AePQgZ833bTwF9qToaN2wqSz+r93vf12AoVFv7ju7L
CuIf7r5/YHExvVTPP+FTX0bvfG+RU0zLW+ewZaoxS29Iu1ViMnOu3JHfjqWE
CaNk1HNY6v5wwMfu4fk0N8LLYmM2n2r31vjNC0ceJmweLw4dUsHxY+jmrMDJ
b7yE5D5KVTHme9Plb0MIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEv5KunayNHfLzaKicovL5rXxyrPog2HWv9eREBXheXDOY
ySLdIVffHDzEpfrg8cHfTJGf1tR+vdu+4uKgbJpaNcPzdjSXHMWO05YsFNKV
APdFpRyGLJdefp/5UkSOPdxVFOa2nrxBBeXl5hHlLHmoi18u6/aeohwP7nIU
rZR6XS3dd8tl5WUis+ikbEf3uWu51Htb5/tDbBr/3dnFzRw9sp4hQb7gWdUo
MZ2y0Vo411RyfmZr10X10oG6i9l0ptup6PpSLt233eSaM156+1X4Jl2HA1Py
qJvTHn2zIXxKUktYlZbeevZ/CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBD+eipbqBmqLGcodOfqof2eCqjN2PNB8+uKpV7X
76791kGrDXbm0pP2tqMfvuLRMQO9B9Vsy8utMrwX4fvJnKWR+zzO7gxiaMCT
rDxFfsurU1pWT1g3ZW8aj4YGZA2LGSGgDo89PRd8FtFXqwplv7FZdHa55viY
UVxSCkv9ELGp9ec6Drj9h31iLEPdh+qNMElk6VyKV7rQoFLqdbUUF+yixHhb
MRV9Kol7055D4tJgs42ft0l8frTrCZUO3VgycjqeGOgipjS+RtjTb5LzA3/M
0dTdlPjXd3jPxjJhqYhKuljZP+7Hl/p7w/+/U4KG7dh2OZOGjki1PSLmkNvX
gwaGPkLKCMm4dHcpjzruqamvFlTQ1pe1T7q9EdG7MQuM++5iaYjG+70mSizN
O/twasRUkdTfA7YOs4SJOfWf8qnboNlvt7QppRSZnvEz/AVU9nWfmdxglj4k
99AyeS0mq+c3Nr0rLZd6vfDX9Fue5r2wcwwtvLt9tsMHIfXflqL8iMeVel0Q
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEMLfVzXd
sPv68iJK/mZavWs2Q36yeVvarGWlVk/1s6p0jZ0MHXi9dr33bCHtsU3/3G0p
p8nGHzMwtpNTTwE5hYxL0dAW060RnS+sv89I7X0nd31bnG3HkoJpFyetJwxl
vKjJvLK69efyNdY9HVKOaXkzFC7n2cFmvZBS/WQv+tzj0LctJR1zvVmqLrfg
LB7LEq+71ut1RxqfP9Y/b8h89bo8GnXhz+VnD/DJ3MomueetxudG7jXOmTKp
H4+uWF8h3osKmiXMEq+Lb/48tPlyO09wGhgadEbh9MDJYhrdTU/71QbJuXy/
ql/3KOZ+SxVQpcfcCR1CxKS/y8noyde/+vJdU9TNmaVM5aTya3kMhQ2xdiqO
bLrvqCiVEZeEccjKP35CFVNOI2wvf5o/vvHzHuD88/WOQWKqUFSoUTvMJ/bj
Ri+bzslS7+vfNdhodv/gu1yK7WJ36UdQBXU/M2dRWOivmwdYNM3iZPRMAb39
elLddqaYQpSqH55+xVDCu+lD85ezFLAqLW+hH0Pf3/SJ1H3X+P3Esu8g28qe
LHG3KQgqDojpUELlmlK95s/B+7Zm0I+BNlyKm+CVP9Cqghyf9H0W5C69edyf
GjLmtWc+TZipNDTwBZ9qXrOHFU+3nlzfeWd2ffI5yJD8R4Wpmm5CijmydNXd
d42/t/QY+8yiczBLSdqdXQtXsjTLYJXOldqW932dX3SVHW/CUsnoisNy2xhK
7L7pbemZ5p+v6eNsN6puFdCBfV59za3ENHtS9prJhY2/v6lN/nEnMZChjo4G
Y24ECenZlvFZdcqtPw9wrcOST910RNTB6+OTE8sZOrf5UODKjdK7z0MIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH8tV3+mL9i
kE4JxYwsvFGmXk6s0SzPTY8an//mdN3+W31ZLj3j5cVva+BR6Iw30X98kF4O
VeiRkQfuLWIorLjuQsUJARl+nNTbYmSx1Pv9T7szJNA1/RRLYTJRa0VBLOmq
rTZW3iOWel2/mpajxp34qsGSQh/r7vcTxFTgpXz0WorkPLqFszkND0IqyE07
0zn7g4jEZut0CwObLk9VxniTn2v/XAp09Z6WFsEjFT23scfqm+57nFm3aNwi
JTHt48/Sum7GofRRlddNf7hJfR7+1YZ8zendFHPJ1vDd9UmhPNp2U7+nRUPr
ycdrrOVJXVLTSytoXIPTspXdxLR79KhHqleabl05T9AWzunPkuZNh6iJl8X0
ofqw4tOg5s9dbGnGDPwquzWSoe9il4i+91naXf30sMv0SqnX9U87SvGmem5K
LmVkdXQbV8WjUbmPrrblCSiu8qKq2doSSo6vNzhI5bTvQXRY9NvG3ysGe1lt
DfnrHJ+u6iFr9tc5Pv6172CL4b/fOQ4hhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQtkaHzHljp7qfIU1u+J2INUJ6f+skx+Q8
p9l/t3jdgnqfiSyFDhUlf1NiKNA3rHp9dIXE5zfoWvsvsmEp/8v3WTOvMNTg
tjHDdHjjc5PgP6PljEj5YeV59PXVGuP3HnxaoWkbOyqu6fLl1uZ36tv3TiZN
PskOfPmRQ98M/BZFe0teD4PvhmvP6MuSrXKR9rGzYop07aNRsvP3y2dr7e59
9DRiu4hHUW4G9zpNE9BZ5XZbOzaIJD6/OfLU8k9rxLTs4n21kI4cGn6nbkJC
m+1Sq1/mlPCLeiGPxL2td7weI6BQ+wkbfb9Jrh/+M65YwYk8W8iQXTfh06E3
ReS++87Zg3Klzf67S51XR3bcnkWag4dqxBlxafiOU6Ps7KV3rsVdL6yM65dH
QaxX1TPVv/btDjW+STm/bi7o7+aIWZ2+V4Sx1E7jxvw1u1i6lGvpyTVs/tzj
5D39khTdWUpJvqT6Xpal02HyJ18PaPy+1+uihvNpF4Z+tlU9nNJfSMIT7cpj
2RKp9xVCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgihdFzvGyivt5ehm59z/S8uF9LChaHrs3yaP0dRkveftf+zKI2hyIV6C8qz
WcoMnTVo1ZLKJht/qrXex/pVLI2cMn31k9MMGVqp577sgjxGaWt5u1dbd6V8
Gjppj3qXI3ya/y7bb0Bs0+V3WU59q7pdJofUcgdtnqvIo9ueCw7cG9L4eX97
RXC4c1uW9ItmdtpLYtow2XOqlnuZ1Pv3u7ivLOhZZACH1r7NO3ekvJy8jQ+q
7ddr/hzC+icXV9r/FJHx9xnvXdZzqFiHs43js6PR4xSlMuKSMA5Z+cdPqGLK
aYTt5U/zxyNHsbVp65rZPkSBpfBd3Q9/3iUmnVW1jqf6NT6X1bLXJ8+LD7Pp
w8PO6v2quOS850/ZiDHNfx6NW3KK8d6WTx1UUl91TuRT+4c24dmRyEuUtptG
pSjcMWFJ0dx0I287Q7UrJiXeutDy5sVxypjgy9YsrTM99XKJViV1zv16aNm+
prunSXLdbIOFa/0Y6rLywfHqfUJS0hu+M+ez9O6rEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCFumsftM0i88F1I+0+PCsf4M
rQsoUpu3kJX4fLJDsdr8HQwFX3Ob6DdNSFmqDwQVM5s/3+bwrG+V8tUCKp/E
KH6PFpOy02rfMR0k19lUqj01ZwcEsMRd0/ZigRFLC/dFbpUvlJyHZpjwUiXR
n6WTUd0Kdy5mKT7/bVuPvN8vP63+6h9TaxwYKpyeYBLWXkgZb8U9dP4sabLx
PfRH6mx/mkeuFw6dXefIJzWnKnXFh43Podq+qpel5ZESypqw95TainKq2+ez
zbW46fLNOm/Pn81+ZejTiuKG9+pi0s/c6rpjqOQ8xmul21+eMWDp4K2lQncD
hoq0dhePHNzy8rWaynHcO91FfQU0ycljfNVwMR02N5tj8Ihp9Di5kfMViqK5
5H6oTvjdu4JOJrYVRIdI77sbZxDrFKsiptNrL00OsuSTZb/4YS83J0l8fu+j
pxHbRTyKcjO412magM4qt9vasUF69fNk8s3dQytIaYnQrydXRNX+4r4vgxs/
Ly3NE+4TTnmdYGmg5gf72D0sfTAMnlpkKm6y8Y8p2OmdKmFIVH6ua12SiGoW
b53iNrm0yca/ca3HkId3OaSkEzTbpqGc0ia6ucRMb/51onzlaM/l+blkptmm
/4KvPDpYJ++7oUR6+1Kh6ZrRA60ZOhRucsatWEC+j/wHnl7YdOdLcysat1Bv
rxtLyvvdKkQyLNXsCShY2qP551HB0GzyfV+W1Lcbzm0/i6U/Onw1iYlvefcT
5aucwOSDAlobH77czVFMU7rLuOZxmn//eZk/fjq7nqHowJUbesgLKWShzKmT
Txq/rraxKusuPxLSk5QrXRRVGTp+L8gyfF7z31chhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQwtaoYO6PZRavGHott0OF7yKi
knWuiY+t+Y0eZ5zFk5W9tTJIfuNHlRodDnWJ750an9h0uYKN9a2SwhLXszl0
TjXCJcyaR/PVxgYn9ZBePRD+39rtPtFundEHSrLx75TnX0aJ1okaW2ybbn3G
7jxl569dSe27FX43CSgipV41P3ttMWuy8WWMN/m59s+lQFfvaWkRPFLRcxt7
rP7Xze2E/6V5uyRzayuG3NjqfO4xlowPFn8WDKuUel3/tG9Gch9bXM+gCv9q
7cGuHFrBZpw3uobz5b99cNntkXV1Ie3qNed4EKeUPl7y2nu5AfsDhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQtjY1ZV5sLngi
pAMJVUbFfRiyuzV299X5rNTrai5NZuVtl13DUOAtzoxNQgF1e7w6UsuhROp1
/Wq2n7317dwNDI1/scXss5KQrmeckH2c1/g+/zTePmVckYC2s/fEZ06IKdbV
5sCHeqbZ608SzT5/VT6P3L4Vv69Q4FO75Op2s/N/v5wl2YmODwyTWbrW4BP3
3LqSxjgMGOJxvulyyay0z8YazxfQydFRI4fNEdOsk6n5RamS5zf6mcyc3aM5
pN/zfFSP2+U0ImC+eZmSSGr9mRBX4rC5kEMmZ9Q8Q3pWkNsYk/SLi0SUrttN
3nwHS2n7y40GdGRpz1fTMZdVmq5ORvyqB7eCoQULeg+axBdRVfWBgMf+pVJf
L82l/AuPi8f/6mccV7m/bCeWPI/88aBTXxElzzZzeq0kpqmeA8L8FvHJPSYo
oppJlHq9f9crAe6LSjkMWS69/D7zpYgce7irKMwtpV5rI/fMc2DJ+0ZR9oaX
DBX4yLiluTddDp5siVbKPFU+bdHvOpZdJiDzNykZjt3EUu/H31XfXn+T0/sS
OuPsEvt9fzmd0z71xvhr4/sz1DPQbKInS08zri/narI0xTr0c0876e0nknTS
8Z1Rt6eCFibe3Pc6W0QRA0778g82/hyszru+tW4vS4etBL5fNVhiLw9Ou7VG
8vvq6AiC/QpySYO3pdryG48+iaZEK5c03TlY0W/AU5dDAtr5RWa6w3oxrS+7
EGHHbf7z/ZfVNVW20oyhmOs2ez7eE1B7XrxfWnqx9Ov6F2N29Zv7YjVDJB9+
d7dAQN66px5ft8M9/N9VP3bfeSMHIQmDjQevFYgpeVTHmFkjft3/4yCEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBD+e/7IuDDQ
xoOhjZMN9CfMF9Lrad+i5qzmSK2e1Xtu1Hon51Fy/VRXrhOf/lySO3zug98v
71GS9wKX3HyqxKWvERaln/UqSLEm+W25tfRy0gytat8vPs3S8qd1JakhLLFe
ene+75ecX+e+/nvCuS8MFTgMujZWRUw2+xQjanqWNfp3X9zpvTKtIYum6fFj
Lx/hkpXx2bM9jJsul6+1+6HiUNWbYWI6ej5i/rJpHKp90NE7wM5NYn6jtOoc
9F1T1M2ZpUzlpPJreQyFDbF2Ko6UPI9f77avuDgom6ZWzfC8Hc0lR7HjtCUL
pTfvS/XH1M/7ytC9UefHbVITE9f83P2hgxq/npvbYSOEc0xCWeI/DZ1tt52l
2cqd6g2p8TmTBe0To+YWcakbc27x4/MVtOPNSBX2XMvLaWwqN0S9GLQxLY9k
B5i+eurCp4xz8Qvl70vvPLoStDMqbRtDd2e6Fg4ZK6SvoaKEfcOkd15DCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhPCfV9Z4
vYpzbxEder/vedoChrattVz01J5t9Dh7P7gyUTsZchpOX2zmCEnW/6NH2QrJ
uUaj0nfseJhdQTJRLzm32ovJf+KqNquiGan14aJVarH8SpZmPHnz4OwRhnga
Ct1K2KbLiQockhN1xYcldoDq6mlTWDK7d9PZJfrXzd1audV8wysfhiYGz+69
bKuQrL8bh7tkNj7nymvbkxxrmXyq+lE4aOQhPilUn9CrvtF087LRt5f292Ae
mY/a6sSRE5BzxoSXUSVNNy8jEmTyXTqwNKRY5oamkZh2OcXXb4hufL6co7fc
fK8NLGmFf0nWfc+QlrLMxLHXft28xMAwGe2ufYR0M6aX5fGHYpohPmR3XlHy
vrQkInml4ccSypcTJo4PKqfwjfGhbRqarj9GcvG5vQaJad+s75kOwXzyKj5b
XV33vNn7sK8s6FlkAIfWvs07d6S8nLyND6rt12v8+vy6RzH3W6qAKj3mTugQ
Iib9XU5GT75Kb79tabZ/Qwd1nFnyeXVo1eB8hr5MHDdY+Yzk9RPk4ztMWZal
Ly/6amiuEFPfgpIlLgnNnxtZ4vFeLceWRx7m+WN2V1eQ11qZwxqZjV8PPc8M
Tpnvkk8HUyd8+pHAJ/0eb+3fRDV/LmKep6zxzCCG2ik6rzsSIiRDMxUlbl+u
1Of/n9YqRdtbzZcl61X2vLvTWUrRGvv+z1siChr/trv7cpZWjNbTF/gyFBUn
f/NoTvPPy9VJpxd1+1ZB2/Yp7ZqsKqZRw8oXBt9oefvDmIpl02X/6ouFo6qC
rLuQvNdlbzr/ofnzMx9yen7NniSi1HbeGplWDG2KaNPuwubG35MhhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQvj3Zc73sl5r
ztDQbTrfZJIFdP5e+iBbuRJKHXj6eYkBSx37rBCtm8OQXmHfj+HakvOa9u8N
//xzRz7VbllV9zCJT4fHcSrnRQpoTr6j3sS3DFkaje49a7+Ibg8InnEomC+1
95ULnf1t2NkCem0+z+LQvlIK81TxHp3S/DlUv6ozgiwuCtKFFJ+lP+KTJkMv
i+v3Kxg1f34Ux2TJxiCXXNLpVLt713MeBZ/wDzpd1frnsa3ek2MxSSLSDjt5
/c15Dp3O9wssqXVvsvHtdp9ot87oAyXZ+HfK8y+jROtEjS22TZcnuXA2p+FB
SAW5aWc6Z38QkdhsnW5hYPPnrY29ObFH/EiWeqgMOCuoFNO2QUnb28+uaPbf
TfFe9NFjAUs6Bl13Zi9naK2/brTQrPWvw8bKPuTNP9G/kObLrg1xii4lSzmZ
IKbw9+uDX/ifuV8s8sl/jiH3QByfZrkP1c449/v1QZJmcfPmP/dnSD3o4hbt
g0JSKi6pW93u98vJhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgibw6JI3eVz1jCkKVtUYCkS0PqLryND1pdIfP4g/9zLFcdZ
clodMefBZpbUdZ4fTxorbvY6z9xz6x7pxpLlwNHe1u1Y2r6+x/ADCiKp9w/+
/7VeJq5Ilssjp6thKnU9+NQjsCo5OL/p8rXW+pxWnOacRQkDggeKF3DJ921e
jnhd4/PxRhlWT2hfzVD2Et2NjzqKyXVbhGB/WanU+/e7WHSMvbzZiEvXxe5d
bptV0DvOmHmftzT+u36p1GfNIBMxva4ODJnZm0OJmrdqitZvl9p75UbOVyiK
5pL7oTrhd+8KOpnYVhAdgv1K2t65WK++7B1DqYd1E3dfElGcUfyU75+aLudW
I3ON36jx2aRw90jXlGtcUln8TM95XtPldmrc/OozoFceFSxxjeyizKfddR0u
fcpFbmFr847m6sFRx1ja4Kfc8bsLS4P6L9IO12n+e5TJmh27tM6wlO62Ycfz
BZX0h9qQ4W3DKqXej3/1svem7552DKULX+86XCsgdmWGm6Gf5HsphBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYS/s8Y9nxTK8gQ0
1cBqzK5TYuoV9HDakDas1OuCTeM9vZpudxczNMZ3S/amMwJaEW7ZNnhpsdTq
WVd7TuXhfIYu+67rGRUooJAjr8Zfqvkg9T61Vo/vNLeO7SSgwVqKtnsHiik/
IMTMPY6RWj2mnS4sm3Yqh/JXZjjJW/JI7tawJUcVmi5HS5IvZhj7Pqsvpwuz
qXSkn4jE1n2HDl4lvT4Ilvb1qZ3FUsSES4cv9a6kaV2V/DrvaHl5TfcFxm09
+5fQfNu83nt6l5N5xp67BXebf74aa/8/mQCBehnV1lt3vLBLSJmV657XPmz+
3C1He7uecXYslejw5W4lMJQZY9tvl42Qpq2nduf++rtk8cDRlnNF9ERGdeWy
Wp7U+/SfmvvQdXB6ezG1jy34eLETn7w8LCx0XjyVel3NpeWocSe+arCk0Me6
+/0EMRV4KR+9llIu8fkBt/+wT4xlqPtQvREmiSydS/FKFxo03Xfdf1ZhrvxG
Ht0pGyJ3u7aC5JI2T52cIyKvm7HapxewdCVmcMMSc4b6xAYM0F326+YHqrzp
oSvfrYj8DToH2AhKqWa/1SSj9i1vX5JkpcHpCTmOFTRq9aIJeS9EZFMc8+Gl
Z/OfR31kDfJLzubTUhtzzSf5fOItVPcRhP2666SpPLVL3y9+NUMu2VutU0JZ
6rW4bUXnEZWUWb3b3N+HpXnHNox6MZklvm3ZzynnG58HG3Huc2lVqZhOJx89
O20JS6vH8rUGtKukhy6JB2yXMn+da2foxn0BxYryMsvfSe9+Li3nheqP3OvB
EHfO89A/5wvpc/sF+W5rOFKv6+/6xZNVK1kmJLOI7kcOFotp0zD/6nVa+D8a
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEL4+/ls
THnH97sYGr5yYUrWYiHtVRoX9N6l8XkygVbuY7rbMGRcZ7cm9zhL9x4r33Af
Ljnva0xOh3MLzViao/jxQPlfv6/cvfiqeRzyl34V19zhWJuo5pPciJRXjsf4
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
EEIIIYQQwv+ZLnNG3jc5UEBvDeReLjHnk9nJ7XmKD5s+18s2O0UrSC+HQgcP
uKY+iks9PDX1B7lLzrVbsKlj9/O9WQrKkosvPicmq+hvA0/tqZR5/+D/X91u
/X6Ur8qjG1OnaAgNebS23UPvIz0bL7fQyCkgdUUGSyv3rem2dG4xZawOWTyj
zVKJz6duPNP3ZVwezVsbM1bbkUez4rU5Jh3/vhzF393HSUnKSnUM+ascXzBf
Q0ydfdQUzg+TnMfoUNimV6/r2TTxBKvx9D2H6mbsnRfzH+SINpYBzi8cO78q
JKWHpzuWsnya39FHozjkz81RhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgh/R4cE91+9ahZDai1S5kbtEdDkYpXj596WyLwu
2Dj+ePT6+tcxDHnVXE4Qbmdph2fikrg+1TKrJyCnx6Ztibk0r/vOzMFCLh1t
vV555zjkpP2nmrXlPdO3ZKifIPvQ4GCWWouzHX21ZDe/R9Tt3263yqY5WxXG
r3/IoaWqsxf2ONz081vTKtGskOFSUHCcT9zlKjJ4c9Mo94JI5vPT3CX//MNX
4xm6v2/64cPyIurkYaXWeiZP5nX9s23SOyndF4qpfN2yLud8ysjg7scbsTHr
ZV7Xn2afeGa/oF8Ffam3V4jdLqTsaudHX+6IZV5XU7kt5IDHq5MsHW0Z5SA6
yNLIvsvnd/dufu+78ZbXpm7Jr6nT3TeaHzZwqK+Tja5r/J97brbscumxfVYB
9VFfoaLnzqdC0baIipvIsYRN47aWISGHRQyt3Jy9dDUropXzHjtMO1dOl0yX
fjTazVLPIibIfwpLg0e+nrEkTvp7Rdi+JHknR4Y8po42cPwgoOSoQSbuv84x
Wb83hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QvhH2DL1gFGPQpr08L7jqsN86jZidE3CZdnlVqW7lbY5UpZL1urK5VfleMRN
+TJXTrfxcsOG9m21qFcDQ7WHf7iP0ROTyZTiHdpOFbKfh7/cufNVx13dmUMq
bQ4dcV3IJSFHPPqwY+PN+wmOVheXLJZecl5PdZlSTInTeApjLeykHme5wskZ
Js45FLTAYbvvLC51uO3/8cqqPzfXrrmpndaycF1rloaUtrwywExM211v1rvF
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
BbH6FgzJj+jn53NVQDbalpPnJuBeDSGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhPD/9WNMCkdtCUMdF8+50j5XQGdPvPXj6ZTJ
vK6/3bSek1UTprK0+uEuJbkRDCVMCT98UyQ5L7HObPozrfh8+rqybp0mj0fz
g7uXDa1EfpSszfYpyuUIGMrg1+tp81mqWrvy9jqbalpx6YT2+rY55N36uU2Y
Gpd4PB/XmM2yy1tTCV+o5cjl0dETYz9U6AnI75uKybfvssuTbGq39fa/HJvJ
0IbnXxp+uItISey++tgK2eU0NlTva8PdLCaP/qPfP3pfRkeG94yw3rZRZvVU
ODhdMSpmKPTHKFObFBGtOaMbHqlWLvN5+2fvPWvntE+bR3F7NC/GZ1fRRr+H
a/XTGm/dbrvbZWpgRjbN79dfcc53DrUzuPz45M6/Lxex7QSX2yaPWbrcEJj8
yL6axqxSH+J1tlrmdf1PdZuybsNHYT6FOigucJLj0/MwbZfA4sY7N9Xd6ZnW
JJb4WoUaVX0Z2q+kmTc1DbnHzdWKoTpz761l6Pgpl+9+akKyncvfOKoC92EI
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP7+
LrR4c/7yyELaHLdMYdFpPmknmCwLuSh97hbZVNokTcwjjTZDyubq8MhWcdrg
Z/0k57PdPGewNqU1S8NM6saNMhfTO/OpMTrnK2TeD9g4jgngqvTon0NnhWEe
/TW5dHxDbWTMBunz+m5zWO6KZywNP+z5zXlGMflcjzrx9JZdo9WZlcVkXx2W
Q3UK/f3zh3HJz3/vl0Hr/75cweamsoFxjOmv/eHNQZ8psaZiOja87xWts5L3
By35m/wawzwa3+pobvYoHvmVX9K1UW+8edy1MT3PvmUh1fwoGqgbxKfOtcdG
115Bri+EEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEv4MeCZ3CzePyabKKQcZULo+Gpv+w21ApoIo+WlbTFjPkHdPJXOmF
gDpqJI683rtM6vHl6O6Nni+5tGTTzuqbEVVUPb7aeWikSOLz55Ykl48vZajN
Tb3ya2kiKn/JLk7XLm/yPqTHx7xJ3cVS28SA9yNGsmT2KTcrcbfkOuE/1Apv
5TdjcQ7l2O051m86l4LbnqNbqyXn3Y1o0dXj+GqWSlZ0XqObzdC2ogyP0BDp
8/GGhznGJtmLKWrBBJNn7Tj0uOcx1/XdNjXae3W9560zqm0u+X9+2PlxOJe8
2408fc9M+jrHmZ1v5baTpY/a8b5O+tXUb6unQsL+apnPW3N3sbDidWwWQ8zd
XmbcXSLae71PYtphPp2qeftt/FaWFFvZWzwYW037Y3YJxUGS+7nyxVfBnZcc
2lEzunyZYhU9jFkVunyW9N+1/SJx1eP2BeR66ajq90586nSg5nFwoexyF+sv
DZr8cRVDRdPSFhyVF9LrLHEnnXjp92cIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEMLlAwPr2seJSSOjVc4HXZYcNL0mLKxm
ZVZPdEavpePqRDQq8GSD2zOGrm8ZeedYkuzquUzblKcqshTQondhySoxyYkN
Um2rKpr8d5catJnZ5j5DZcc8njqZi2iRzoUxb5T5MuuDtWNQytc6hvyO7M1/
PlBMPZR15l8b0/R9OOzyMkgUy5DY6aPpV6GQWlgpJjrJ82jjyh/a5ocZCuRf
DLl0Vkjn2tPYg/O4EseZ9tkgJvcCj2JMT+cwqgIa/p5R+lbV9HmDrl4j7+/U
KSHFo4knDfwqqPq+3437S6XPtWtqJ/Wyvv+1IZsM1S4K3Lpz6Z1a149ftjS/
OiV5vL6Fj6dTJc2rTUzWHyeiCWOiVC4MZejjmZQT+4dWUC+Haao9/YSUxO+V
NyZdLHGcz/xUpyhhJamdKNFb6iOinvbez1MWMvTggntNVCRD8y8trHDJElIn
rqnm3TuS11tTO+zug4knykXUcdvAVbrePBJvGb3BUvu2zOfhd3VR27ZGA4xY
6lbYZVveVIZKgo2H+/Ro+rxB1frWtvxuLL0cqcTMOyCmN5bbZmnMrJR5P/6n
DhoiP2ZOzFu6N3/SFFe/cuq0rOReypPG62dW187mHtF5dKZnxLqj9jya3Xds
8MNOjbdfhR/SDUiZx9DR0u+xVccEZPJev4etbmmT961+vKfxzGCWHt8NXPPI
liXnr70zO3xr+nMqjvuwsLcjS8mn3sadv8mQwfOk4sfmv8/+31i+eNXRLl7E
0Lgbz+pGlLM0bVu3nh0W/335sSLXu/kW3gw9a/O1dKmlkPbNmGwzx5sj87qa
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
1d/Xn+95XiO87jK0eeGdx5Omishtzw6nkdym70MST9zyVNd3NGmJYdkkUTmp
zx5/zaW19LlYAzdeauEd/IJUbiXP7PGglAbcsN2yTlt2eXHNzUmdc80rs4qp
2vJdmL9zBb3gqRWVmP4++WOSzL03VakuuJLSeh2svTJPRIsslyme0GOkHsci
eHvLWS8ZsvBp39NwcilVbl/hbv1ltcze68EF95qoSIbmX1pY4ZIlpE5cU827
d7gy7zeE/9eZhS6jJ2QxZGc2qoehn4iuqQcbBAXzG238vafVcuo0X1O22saP
y3U5tNxlzZYjDxpvv3JNdKqrr8in+7yCmxsbeBRu8CJmUEnzy42Ejeuy17Rg
dThD7dO6bw++ztKamzts7k75c3MsJakvVkiwKmWo84CVT0eki6j+gXtES92m
z2H+XUyOH1UnjGYo0+zHrcIiIX17f9CuczHOXwghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIYdMbt6NLn+LzDJ26c8nXrFZIQ58P
nLSzx9+Xi3jAwirRsZghlVvnx+WkiCiv4ZjK216yy8lpb2jpYdKGpVc9GtaM
WCSm0KwFRo9uVMisnkKl59T/bSH1kE/c8PwDn2bzTcbOCW5+OVp1y/U+HfB+
RfuNpj97/66M+k3uN6uouPnlH1a6t1/q6FdBbMeFbcyvCyl0f+AbxRKxzOv6
d+W21AnR55cTnUsrslospBc5wnlh56Wvf+f74refWTG9HqjsvMWrjB741vgU
Bq2X+fv9s5/5qU5RwkpSO1Git9RHRD3tvZ+nLJQ+fxL+wzMmpybI/9pvHz+Z
KV5+Q0S2aXJ9e6s2/X4bf3eOre2QbOqt9rntsngOTYldM8X9RPPbH6TVz+f4
p59bCunLhiXf7zzkU+g4TvWsyOa3Pzc3dRzGL3Xqy9KbvMwFxXLVZDvPxbyb
a9PnBNoYW119qMRS95NGLifWiikpxiPS+IvszndZ6W++N6j2LEPzrVQ77OIJ
KdEorI/8e+TvQQghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYR/oi99DR5m+BSQk/Un9bTZfEoNznml9fjPzcsas3FP7xD7HJI3
iEy8YcSlL8pGXypcfv/cs+ZmTuXQeV3O5tK9oeUKXflcUmmbt8FdT/o+r1h7
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
Zxlvn/LBh6ExjqXHvRcLSWHTAs0JB6XPR3KrCl4yJrGAZjJRhz8t41N6xQXr
B6kCuheXtM9sJ0uDPv5cI6fFkiHHbv7zdZJzq5pawdDjWuUzefR8oNygUE4V
3W7l0adrhuzqOboi1nfQZ4bsv24/Y9VdTK+Vdmf06lgh83Xx77pr22Ivd46A
esZlVx+JEFOcac7KqIam/x6X3L3V8H0zS1bF8slp8izN9TSI7dFNRHn77rp+
VeJQnff0k6sjK2nOii+hp9s23vyajWx7S9xXTCdo29rCLb/WuSbtdZ39SGb9
587Qsw0cxSXnck/FTMMqKv9apVzlIrv1LCvFV3qG713Dkumwr3IBbxjq4KX2
4vxZIV0wdozWdxaQ4e63N1SsxHQrTj+iKl/69Tm0b6tFvX6t69rDP9zH6InJ
ZErxDm0n6b9TJbu7iSk5XJpx47NZZWQVNVxu/1TpdNPPV+ANh9gpnwsoeM2J
6Cm7+LQ69lFCftLvn8corQeG5EXFBbLEqvdcPmUSS5YpV9esixHRj9exGsu8
GFo7ccZUvdlCejalLmrm8sbLCZxsP/p9/RKWdCdNW55+iiGTpf3yn3aQ/j4w
RiOhjWsXAbmGjHvSX0tMSdrtYlffan73H0muijqo/smboeTxHvvuLhLSRtee
Dzz8/9w8xgXiiepn64XE1p0OnjiZoaPBU8U9liJ3EUIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCP8Ul9nZ+p3bw9BIi53vlnkJ
qeu16Af3+M0vV0dkFPrIeRJLJYrmvDfqDE2YJ3fh+r0qqcfZtnCl1cm5LA1W
fzKz+xKGekSKTOrt/748K0n6DDFeMJpfQPsyK9as2sanrLZ3dM4lN7/+pKve
1c3dl02nD3rldS7hUHmLsCBmb+PlZAodWnXOGMgSN71iechjMalML2S2vKmU
+Xv/af5omGgqn8mjXUt+zlMfJqDP3wvLn35o+ly7LjnPmAeWYtrUr3rL+a4c
qrk6e9mgxZskPp/6WjcnJpRPd6YuWx8YISBDnxa9dMeLZd4/+P/X2mhKRa9v
DBVsf/LQfJCYZu1P76Y8rvHyUW2zU7SC9HIodPCAa+qjuNTDU1N/kLvk/Wer
2ZwQ/8BCqr0d/XnxMz75d60p0j7Z/PZV+N/b9541q77/17mwQu7cWzOW5u6M
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
3P5ceb7VEusqmmDcS3VoJxEFFsRMl7hI5LYe9Tze9Gr/AjowKC78aSGP1na6
EZYpann3ZG7wjS59fVh67uZ+SDepjBSizIM+LVgj93X93Z43NIMvHuOQbiXH
74KlgPJubNXQLpXffZPVgfMfHRilytKPteNNBU4SOvOjr7lqO4HM85hdO7N5
x/4cWvj+WcSqMg45s7u+3CtreXXY7Kb/+KBOOSkHRV8w8aym2see9x6vbHnr
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hP83qqVu/JLVVkKhpWzZ99cMLZzqOm3fPVbmeZR/7j7T2YolieGriXVuDFn5
Xn/DxDRdztvcUk+LDkdZ6hwcdSl4MksFZu2cG6+J5V4/+F/77br7+iCPaorq
kdJ5VIyIii9lKqSXyp5DaLnPNjC3PUvlSX7ew5ZISOe0N8NNqpY6Pn28+3Tu
TpaqOnhKdr1nKOtqLyVJJfLWfjW/qo4ateGNhBJ3rgmOOy6gQU4vnHRiC2Se
J8JRu9ylmENmO/4MMj8ooPf7Rv60/Cr9PsxMO3E5vL+IxlyK9nz0SEJOe46b
eKnJ3g9hy1SF63rYxquaQvfaBDvEi+jWlZF6seWy9yVry7fXbusXkcuN1Yo2
F/mkHWW22jey6b534nBhQMRxhqKdEhKH7BdR93qDcm+WK/f6/dv10S6I0q4V
04v4jspP0hgaaplebhgtvT88NhAolrkzNHrZvGe55iLarzb+dNn2pjvHDgs3
9dqiLqbjZQfTsucytHud7fxUO/QrCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhFAWzebcLeFki6n9MYceB2IYGtauyHD1Fel5
PlVhXZ/0DWCpH+dMdY4jS0bbqz+sGSt7nlXshtLquX/9+2WN3IF7xAw5HbBI
XJaL3LyW6rzbztMMsxlq2+3Qo/0eYnr0SeSVcpgvdXz/EbnrnzhU0247/TPr
ropo3NwSn/R82e9JvtP5DyfWs3TTuLCV2shaWjh376TvnrVyrwdsGt2Unz15
FcKhWREJuwJWCcixnY3HHJ6IvjjsePc6Q0I7O1nFvv7r78MzFes2qcqexxi9
lHtyTqGQAnXX8d4GSOhBb6tVE34wct83bBp/bO9/pL9vAS3XEvXams+jTYO0
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
PKi38JVlrdzr9E912x7VeekyDj3wHPHQyVBA3Ac3zS5mSc9hO2P4eqKNWR5d
3B8+sW9iJS08++lFznTk8v1Pdrtkkdh4lKVt67SPTjNmSbCoy3iPu9JzLzOP
aS7+M4uhVgp6FktcxeSw/Ed08m6+1PETjjx+EjZXQn/eVXZM7MelEVttkh+d
d5bbftV371BPL2TI8sq+xWcvi6lviOiAH1/6+n9XHbTedJ+SzZLr01zWeH0t
Df05+vDQq7VkKgiLsVmfT91/fJ4YZcKjWa7PNs7TkN97NOTVi9LDnzn0xnyL
1zlfAW02sDu5qdXvm8uaecn/9MDJDMXrfqg7cpClh9v5q+215Ne3zQMumHS6
XUDJ3fbNC+Dx6Lrx5pPtBci3/J/0c1pTu82GobEjJ78LTRZS15qpWcvZCrmv
C0IIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH8
nT0drhSY+l1IAWlxh3ffkNDCJ26jnTuwcl9Xc5kQ/Pj2rZkM6UwxOtbdU0jf
Dd4+90sol/u6/qkupZwg7XkM9XMYskjNT0jxRrXJHbrKL68pqsKqsO7HGyqO
vebxVa2SlopunNm2R3oOW8rs+ytMWQE5fDrdZutBMfUeTKXvbRi5rX/c5t7G
G+dIKGhJv8mWdQxVh2h35WTL7/5LTmc0OFsL6Hr9gqFho8WkGHOz8ePg5q/P
rFMf5q1xrCBTzosjmeXVdD/6tMPwAPnl6T27mWe2o05MWon7nNl8HqnFW6t2
NE5p9uf6bNuybUUcQ586fbl7coCYEhTzbqw+w6PCWI9HvC8MRaZM9RzWW0KZ
/q0v2/esljpPskpi74rMYnqYv3LzolNVNFPhrMfY7ObPo/u58nyrJdZVNMG4
l+rQTiIKLIiZLnGRyL1v/d0Fb5fP3BJRQAGD1z8pqeCRo4pKzISaXyev7+fP
LhszihkqyvSfHV7C0uz1fafbWtVSSN/RyoOvS0ip2j+Ao8OScvG8a3dZ6f1E
ydTK0aw9SznqjVv0bCR05tWi6Wn3qul7vpue20OGXKyT0o2mimnrsX12+pU8
ue13yfrjCd/+6o+eAScKsgZLSF1FZ2GsgfT7DyGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+MKTt33McoaUJxQsC84R0vv9
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
3pYys1Nc8seNWaTISS+etLCMoqpnTRuzRvx8ueyfK1ZU5DFkrZKwqnuEgGxO
KDZklPOk9l42yaNXxBsLKX66tu4pVQ4V7Dw79NSdrS3+XB+db8PoAEvh++ms
qRlLFf0L51CR+PtHL2Df0wNHWYrZNebdsLUsDU670mZqX6HI8Va10b3SuNm0
y9nu+SwZLkWV2p3dOVr0Omb2GG5+rYIhPYOnA3iFAuItppdyW8ulvh//bgcp
Dxkvq1FGjzV6fpgzrYoUtMbLd10tufNeOyOucOB7hp5b1T6+XcCSsa+OeZpF
jdTeN+rdzjGxg/Lotk/MoUn9eGT4LHjHgpzWc2//04wP1fwjYDlDFss+720q
raYOpY3zQkx/3+8KCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhLA1ur9iyfTPUXx6Z6XpsqQ7Q3pu1p8jZrBSq6fPmhcmbRYz
lDhT6ajy22r68X5V8/i+kssvaj+srf6DeVV0Re7k4en3BPQ2P+C81VZG7HkS
/YaPfG7FUu2QQe+cdzMU1cARxr9oPblYRh73T+dtZGhbk17b1ap8Org5f8Dd
+pbPifIpdOKb5eTSgrPLNNK/cWnTpbzZlaXVJBu6pvj6FpZMzDQCuzcwNOVS
iLZnk+g8Ol7pdN+0IB516airFB1aTcYFDWpcXdF5dy2t7K6LPNtchpobh6mO
CxPQ0hOWRaG50sszFNeBuwuWZBnzaYidqcqWXCFdqeQ8bq8q+h5ImagWZsz8
eW46PitWqWCpitlcFbJYdE7dCblA+eUPSumk4QGrUy6VtK1dVs4Eoej1HXbW
6PCb/kKymWYg4+fKIw/v/FOd2r6Uep/+1b7ZM489VSsly+4H/EP7VdLlIx7L
5saLn4c5yse+zelJfDrRODem8J2QohP0eJX9pXcPi7LC5fitAetZGpI5u4NN
OkPvbhrOTt4v+n3LPV9H7OnB0ni14bs3uf15PosWyt9qqhD7uacKHApDJ3Ap
wf1Ll5S8KvINvXvE6Nmvl7NaFD5jR5fT+WS091lbfjaPCj892qp6SnK/C8c6
Kj4uCmVouNytZe/j+NRwYNA1Pa8yqb/3X3V+t8vvzvmxxHNXCn+ow5Kyw4wo
n72i13GkXphh4wqWdhQOsxjzgKHKBEW3YFPxz5e4Pvqx9Wnb/dW0wuSMYJ6T
kD4nRpsyZeJ/J4jrH/ZLdkfuY2iMhW/RH9v5pHjnwvOnPI7I8S73398/sERA
U9UDUzluDJkq7Kmo8/717g0IIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEP5/zfgUkhTkwVD/FUfqHurxaTBfR+mUvujcIXHd
ufdE9cN2LFXFDF45+RNLHjIdP7x2EJ0XJ66bgziW7k4sRclObXbIYcijcdDk
ipMtnxPVWtR/O+flVk4e+Z7b1ajgxaP24/fPU7wnuVyyL5ofi48WZdPOdYYh
Cc1llOT00e68tvj9N3q3dWv+Z4b6yPZMu9xdSCqM8XjvH+VS79/vptZxueaX
JhzKONbmxNkXlVRvnTsnYaDoHDZPPdMr9spCWrkosOqiOYcajF+PT6rykPp7
/KsrEq5kTftZSsqHZ8vmhlSSRuMVc+t2v15OYGuxfVPzMN53hp6MN3L42F9I
q4u7P50+WPz8xr0bTpju/ppNTquzrWq7ckl5z93bj0b8evdzdGOQZfuIPEq+
PWVe02IeCYrimq4ktp5c31/N2V1uJ612YKnPBPXEDTcYynTJzho+UXrrHpe0
ZkLbQwzN6ZtXknqTpY1+KonVepL7DtFOiXVp78LQlOkfzeOV+bTT7tSoT8Ut
n6sMIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EP6TLQ/+FOm5lCHV9LaZrjnVFB80t/PesdLL/4mwC5llXiikA3ts2anzWCoQ
hgoPNLMSm9/x6hP/gLUsxfnbNS95w9Dmm7u/Tt7x6+V6tbRjqs8+ONw9j0zm
LWlrq8Cjtv2TZw/Jb/ncMGf1xV82BOeQy8w1Ea+suTTOSKvuaC/x+x9aHzxx
ZwFD6gElf3CuCWhHc6SRQzNP6n1trWp680dx5paSQ+qRYcPGVNLlXqdeqyRJ
7ly8Mtp4VrGTkHzDV3XI/oNDCWeLvCfM9RQ5/oRcoPzyB6V00vCA1SmXStrW
LitngvCfd05/Nc/u2ZPGNDBkZOV7o05bSLJr355/aSY6X3Hu9HMuCl1yKCcs
/Gbb3lzK2rXoTYCm+OvYzt6/w2atfOJcMJhnepZHtcIJqe+vIuewtXnItmG/
0xqW5uzTZUa8YkioopZm7iZ6P+yp9ojjdGdpi+LxXf4/WEqvO7gzYJXk8g9F
+bjGTjbem6FLiZrc3ov4pNe9+Imtp+TypSGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBC+L/bzkPTYriigJzC9ATf5jBUVZbG
jVolOrfwzJN2L8N2MPR2cF//qoV8up8wO8LTWXr5QnzHjhkfG6so0zvauqmf
kCI2eNvr3mYkNv/2g3EqvVazdEveMEjhKUMxZ3aulFspuTw3u+cur4fvZmnk
hKPKU0awlDO90WqUp6DF+3bi8oSec/0Z0h/YMTrahU+99+jeu/5c/HVUvObh
ubtXPu2eFO925AiPhiuea555Q3L5ZuYL1R7ZWnCpa0xf7zNVVRTre2GC4VvJ
9Udmp7pneDND8T/D9oyYIqTbu091meskOhdOlA+jTCa192BJobHNeuW2LH0f
ZTQzpGvLr6Ok1Hh34WUyr5pu5C9z9AoTUvLrr3eetBE/v7TLnZT2Y+Q5lN1n
972p5yspJvfB4budJdeHpup3wf0HC2ked65WZx8ebVm55KKB+0uR47WOyzW/
NOFQxrE2J86+qKR669w5CQN/vXVhTQtT3n2oprVtVs8POCWkdtPWOa9uktw9
Ji1n542Y0mYTS+c+5pfzaxk6XeI9vz9P/PvzypEinVUNDHGcz02oGyWknaff
XAqeL/qcdjzHz6v35JJB4LSznD9/HxZ1HDa0Ml/8dVfUnTve5E0ehV+eWJHg
zCO1B2HNN+N/vfxG7e0VBku8/7zH3n4MuGPGpwvLl3ZL3Nz6c//mFe026xTA
UvczNy6cmcpS7sIOW5ujxF/H7+eOH8+2Zang7bobHQ8xlKUdf6msTPQ6Bixd
dFsjsYqu902/LV8nIC3FtUPcw6R3HvVLvPOubWIowXnI9EGj+PTcZOuw0N6S
W9/+rFvJu498cr7k1K5+PEM2jV3bJ9tJLr8aQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSwv5ppYdNuhrbv5j5rXsWnsSPc
NIdeEz9PqX3+4jqZ3nmU5xvjtq03j960cZZNz/318sFaiwlO9jrv/XiUnv3p
XHxINQ2NznDeP1Yocvxl63rHRyNZGtb5R9VFnpAuHP/oHqtRJbX6F7vknlUI
zSRL8/iCI1wOCU4EhIwMFJ13ZzX+RWeqYshXX6tvJkdAKuWpo7f7l0t9Hf6q
Trb93Y8lC6mDxae4kxdKaXFtioeLzyaJzZ8yUS3MmGGoTcdnxSoV7J+t2lwV
srhG5Ph01QdT223OoJGdFOarWHKoJuJk6JF7ovs/Z94dG3k3hlbIjjjiHs6S
wj5X8zFjRc8vyl05oUvj3zKkuPa+Sq6ngHqYFBvIePDEnkcz61Xm2q3lNO/w
hdTcAXy6m1D7RNZP9P5vaXUqO+kl1jP0brDw4WONP89XepPRUn3x81HFdaZ/
1JcZhTmUrVisvWY7l07bj66rlJVc7q64ehSVho6az9DAdcMWKf55L93Vr3nc
Sb5E6ucPQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYSwtdrw0/eF7UaG1D9M2x40mE9uP/KJ87VU6nW1Vs1Hfq17psfSW80M
x9UDGBptGatk81ByuXxuURa7N+nk0XDP6fechvJopuExk5uZrSd3cfCGUq3d
kSyZMjf9lprUkHZjUM3QU+LnzklKC+sX+p3ZTBrwQs4ssnsZrTjL7f9ie8vn
rXW7afDgcRGXAmp62cWNr6ZKXSsnxXqB1PpQHGtVq13MUKf3J73SHgro8KQR
TWeHtp48xoMVcfe3ughpZ/8Y48E/S6mv4AZje2+L1OrJ/rliRUUeQ9YqCau6
RwjI5oRiQ0a5+LmI0pIe9q7qoM+lT5aWukUFVdR3w+1Ryi9E70/TyUe3jlDO
IrcY8x+vh5TRqcTKaNst0sstbC12+9hjZE0YS2c1OhSoh7Ak8+LGDpVAyeVe
dvwaUjTzfi5Zf1w3JLSKS+ODRw90KZfe78XjoWt99FeylKAYOXNwPENP3PW/
Nppjn/yqns5TPzBjGUOLhjubaBdVU9bAXq/ljfB9CCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBD+/1nNcbI+vY1P29cndHv4
WUhqK49Hrh3Hihwfkrv31gJrhjZnWuwf+Lia2Kt1Nx4KSsR+rml42AC5zVXk
P+xZQ1iqgMweFhtO3sNIrQ+RVQYqho4sWUTWb4uOZeh7nLPLcZJc3pS559g3
B71YajtP4emtLiwlP9tw9qCaFHP8hPlNjUsZGi6ILF+RV02k4pJ0eqLovKap
H3/Mjz6aS59y9KNicrn0xnJMnppA/Hwwxfk/Zl/uzaPUvMUOrlbVtE6Jrdrb
XXI5ZqI0vpV40Y/DUM8N7MmVyQKaHfe23WIj8XMLGdsyuW+hLA1edL1iqHEN
bVpidcbgmPRyKSVlcJnMpZNz+LQhKbt0S56Qnpk/tjmrKvoeKK5qN/LdslJa
lOYa/kO/kpy8eV8GpYp/XtRn301bqiikRQ99KWYej1TjunyZWPJcYu+l6c0f
xZlbSg6pR4YNG1NJl3udeq2SJLrOgbsLlmQZ82mInanKllwhXankPG7/b/rw
T/P2qlep9bkMRb4co3M0XEDxoxO2vCoSnVeZefmHI+POkpuhQa3u2BqycZ/J
SwsQ/7zcn7mg3ruYSyqutvGxE6ppd5e85uh/k4Nauun4fC8mj7y3PWrzxYdH
adxVT3TjxL+vPLzdrFL+/F3SYdi3KRv49ObsWvWMxxypr8PvpvfK1I/RQSx9
1b410XYeS912cFfGvxXQnVVFFfPcWFrczFH1EjC0aZdZ/OIs8e8Zg0FR59Vv
V1G/CMfae7UC0v8kyFU8Jfp7o/rALd+9GxjqO2ZGZV8FPq0eWj/QPL3l8wyn
y17bqfmdT0bRV7YcnsxQk9aNDfwluH8ghBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQwl/JJbE7SXEnQzahpDXOhk8L/W9ej/AX
nU8VK/B6ZpXJ0KU/+q8rzmXp8cB01QBz6eXXLdH+eMNoCUtex2Kb9EMZSn6+
IT2/Xvycrn+aZ9q9Mfbsm08TOPVR9cd41KykpqRzXfy+ed7W33XyRzaN6Ko5
bFN3Ll0q5rjPGCG53Mu4baqqyTIs/cjhZhTPEdKkxNqQwccqpN6/300vP3XZ
zdM5FNZx97c9CZXkr/Jci+kjfr6oje70GP2OQopzUsyNcuTQ/YWyCt8sPSVW
Z5c7Ke3HyHMou8/ue1PPV1JM7oPDdztLLwcV/ntlVY8ZarVnqd/FDgUL5gnp
SXtbw8JQ8c/vzdk9XmxRzKHDtvGflPtxaYB8eX61uuh75s26ytxDwjwaFbtH
b5cPj7q1n2Zm+1/kN0Lp2q1py5HuliwJp6RNqtvOkOXhK5nMbfHXMTl++ipV
V4acO055t/gcS/N7H5cLGiP6uyXxmfqxA1sYEmjYKujq8inC9L6rjBZyOyGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCP8u
11TEnjo0OY/0Ov9I5WjwaO7TTfeNMn7fPDFe6bMvcRrZdEnbZ9G4yDLyXnjO
MG+e5HIdW9rtVdPfNRUwFDLy0t0nNwTU077EbVr7ctLf0r9dm/wsev0ofc3o
nWUUMsBcfpZN63kvcV2Ylxg86DtLU0Pkf+6pKSKdItmODcvspF7X/6rGQjmD
LLcsKthvGR+5sIyaT50RdF/T8usYOMp9w0aWoZWGpVH6dQJKuzI8aMXzcqn3
419dP8w078iRbGoTXJXiW1hGgUM7zhup9/vuc1EyQ5mfnY3yyPK2QVG7UTxa
/S3E6kLa73tvQwghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQ/q4Ku13ss8+GIcfoQMdXz6op32a/sK5tqcjxSn6R1/r9FJJa
ac/T45eylP7x6Dq9LjViP7ep3+0/Nhxiafj+nE4HbVna3ydI4XqtQOr9+Kd4
p92kd5aXcunr3twv5iVcWj1h3VzHKtF5Ygmert3bmOTQft2DK59M5NKWmT33
Jg8QP4ctxnJJuF0aQ4v0bqx8tltAbf3tUjIP86Tej3+69zyKNLtrldLPKbVy
HQdWkvznOY8ePhS9vjMvXQyt1BPSqKiYWpvRHNrf5fvoz81bxX5ucVW7ke+W
ldKiNNfwH/qV5OTN+zIo9Z+X79da9N8/sq/16Bx6mhIe/kyDS1/b14WVqope
rzcyHftdyWDoTX/faM/9AirysPbzjhL/vO98751R/jKXtFym7DGs+fO+8u3d
24SL/MPfxaJVmtOOGDG0rk1qpwR/lipiDxVVqdZQebj88/7HWRpYeqQi3Y0l
fdeKTw7jhGLPP336ORl5O4bujE20OJRcTV5C758d5EV/50AIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEIryaedhber6CulB
30cGfsUMLbJs/vjxMSty/I/pB4YELmYprqpzt+3HGPq8SVn7xmfp5Wh9WLei
sjSAJXfNlT3SDFhaOWgjmd5CDuR/Mrz9FNWV8ysohDNCa8pxPpXJ83ocTRE/
F0vDepxrfgeWrNIbhl01E9KQEFPdtVcqJFZnvzf9vyWtZemz78Pb81MYuv/y
gPsVH+T7SdqxTeW3azOEZDrSc+79gEpyX+apvzgmV+x5vPzUZTdP51BYx93f
9iRUkr/Kcy2mj+TOo8a7Cy+TedV0I3+Zo1eYkJJff73zpI3o+wpK1yPjL3ze
5lBBNwbZHrh7gU8Dl5063ZQp/j3T0dqyh2e/fJqZ6fBh63Ee5caM0Ol0XfTv
zuoc074BexjqPfRewjsnPjVXjjXRT+BIvR9QPBWfrvn2tr2QzhWxH35mMGRu
4GnofU/8837y0YAhU70Zcnv3UDjNjE9e581VD24SvR/8k5U63uwioGnRJ91O
GzFUnzm/wNMR9wyEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBC+Dsa7zHKMvqhgJ5NKudERDHUxchZhgkTnTt0ZNie/lt3seQT
Z/86RY0lA4WZmu5rxM9be5u/OL27G0v51y7tOcRnaL/gg2ddOnL2/i73jh8x
SfZqBa1/f6n+XgqfYvbNl1kqEJ2TtqZhc+PDdIbqHfjRdQEC6p18+ZPjOZ7Y
z73Ve1PX6j/3zXCj++8DO9RQ6fegfCPnGqn3459u2awlQQdeC6kuSG5wxxWV
9OnJnTcd+4vOY7znUaTZXauUfk6ples4sJLkP8959PCh+Oc3uEzm0sk5fNqQ
lF26JU9Iz8wf25xVRe7Zr2rh88w6i4u5dDt8ntC6mEsusw2Mb1eJzkV0Jfb6
muMVxLspN7tnIp+ahYVFLjzx8xjf7e2ltu8PhkJejX7xf+dxthns+M3FrlTq
/YCS0WLkUbd0a4by9Bdf6JZYTfKlSu1efS2hhXNjC0tTBSS7b53SrtsMaXTI
n/LHJfHvhxnbwrUMdvBpXXcrQdQXISmqNct8H4d7BkIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH8HR3rvbZJ9SBDFrPnlZsd
4NNozhut9J5lUq/rV/fTBYVeQzOq6KT8PLmr7YTU5smb7RoRjMTmV0te+3Pl
sgJaGBqrddWlnHoEkOvPh6JzzFraVfLOa64NYWk5s+NobryQTq1eseR7fKXU
1+GvWl+wTfXsiULy0OOdqUoqp49dl5Wt/yi5fh5PUet8UvCBctVLzGxdKygw
yOzCHouWzwu1Hhu1WrOKoQz/W3fGcVma5iLrXmTb8nmV9t4Lp02sFNDp0ueX
PH05dHh9atXlfl5SX+e/qtX4F53pz7756mv1zeQISKU8dfR2/3Kp1VNp/qDO
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
PGprfsNOJbCayro8iJgyUiix+U8scjp5dwdLz5ZrzgjrzZLtGLmNRwwFYs8z
/WdNnckIlnIfB/alEiH5zZpZGN2nir7aGLJdwlnS3TClr3UoS5vuNuxqDJFc
/W4j0zScegqpl9KOcqcpPBod4n8tyPq51PZJcp/YJtUMhoySPcq9AwXU//be
pTYXeS3+XKVB6i9dt7Ck5udTpvqTIc6djtm9G8Tfh88muC8UDGHp+QN/z8SH
QroxzzzR+lElTXT93qfOs5zUe2vqzhnEpyihUzHXT/Q65huseb7VrIRmK7B1
O3Iq6MjgwH7ng1tPjuXgDaVauyNZMmVu+i01qSHtxqCaoadqpF7XX3Vy6DxN
9cW5tHuTzOJ2D7nU98Jrn6+fRd/nrwXXGu8XV5LvuV5XIzwFdFMnd+ADc8nd
27ljVi8aGsOnTOUO97XkGBrbebDSPcPf9zvnV7PGs0xmwp/recd6x+zS6Gq6
2s9sTfjeEnqzm+s6dglD3SbmLj6TXk21O8N534b9vt9Lv6vJAZo+5kv5lDx+
5JMzZULyFQRbT9XC+YIQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIW7MKz9sun5ObS1a7z8+Z851L6ttqbiSWis4TuxK9eH2G
aQ7pnUgde3ESl4KS9Wp9Boif/6Y74SarksWQ/dKk45WHBTS6R2DW2bstn6cH
/49mqR033riUSYNke9/V53NoZe32zt0DRK+jvmrEmXsqNVT8oH9BUkwR9Vep
yr4oay32c/14eoZTEzOJ9qub6n/n0LDC9YlVu1tPfuDv6pqGzY0P0xmqd+BH
1wUIqHfy5U+O50Sfx55P3viVmeSQWanC9NF/3gPvvq3UvfRf3ANTP/6YH300
lz7l6EfF5HLpjeWYPDWB+Pm0EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEELY0sZWfZY3m1FBPU3bJ+0N5tOkDp/sdZKF
Isd/0404XtyOJdX9FqZOs4Q0o3BHP639FVKrf4KKf4ePTizNzV6sMSWPoSMG
3R/fCEMe4H9yXm3yHDl3Id3feMkwqbqctHs+eWQ1P13seeLtwlPXBmaRl7//
lXF2ZbT+sb/c8hWS63/Hieu9mhxZ6rSg/KBzHEMlCiZjk2dhfSVtePspqivn
V1AIZ4TWlON8KpPn9TiaIvoeEOWZdm+MPfvm0wROfVT9MR41K6kp6VyXXB7j
icsTes71Z0h/YMfoaBc+9d6je+/6c47U+wchhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghbH2GaqdtD7hYQSp+zWu3JfFp
fdFar/wq0TlseR6djpvlMNRwMNhh/ikBCYfGyrq/5Yn93Fs3PToMWM1SU9+q
uG/Da2jmnntfd/nVSL0f/xSPrQl/89VRSJmx7t8eR5bT7PENX+lwqsjxDQEx
dW8jMsl28f/Fzp1HU9n2/8NPkxIlCZXmEpIkSRo+UUlzuZBEV5GhkoqKNJKQ
KdEgSgNNQqJZpUloTqYS2Wzs6TwpDSrV01q/df/xfNezv797P/d2b3W9/3qt
ZR3rs4/jcx6Dv957Xz/hc6jr5GEOBiGS5yLavNgk+jGWpUc/4zfrdWNIt2/u
XusDPJn3459u8JjhJvLnamnVq5NfrzwSUMru2e0cheLvgYttTZ7YnCymj8HF
H6zeVpOb8cqZzjzJcxcHpn8f89aRoUOjmb0NxXxau/Lh6NXGlTLvB4QQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII4e+q8bzh
7Ed7IR3aaDfn2zqGth3YK1i7jZX5vFqLX6f5NUZ7M7TSNsDyvbaABOfbnM3q
wpFaffM5PXJTTzI00/HJnum1AnLdsMfTqKlK5uv+b/vaX1HIyvEoYePRx2ER
QrLda6sUsYQRO37t0KBv19q/oq0blr872amG1G6H+p/aLXm+WfeC4za8YyJ6
nBI5epwuS6xexyRW+Ofu/w+qKSuWBdWQfVzNkdlaAhJpR5Z23S0ig+nb6xx0
WPrRachETomIGnRN9/h3FJ/7t7z0ptKKojd0wM2x4trAWjIffnHO46GS5w2K
82rHLokPg1nSuRwRmTmBJe8g5THHTwlbvD8L/nqx4JEjQ1URE+q+72Npt/tf
dcuG19P8Gba97+mLKCS7S1bvbC6ZqK4NHb8qV2q/+9FuCqtwjCWj1aa9F8ay
tP5ys//3feLz/SRVo+58an4/ltL0dayF50UUV7ohLSqhTmr1UzOp+5DjLC2K
VPHaepilPvHNt/OOSm/+4jxmMeWYyLuWzhSmGUenCCgm0HDJ61IR3ejRc1yX
129o29rxmp0H19K0fpXBMb/2u6Ln3C/bZrB0/PCJtXMWMNRlbTeyNZf83nDt
7umeOpClpczWmOLrv/rpttzh83Xp9RP+7+qdu/njWWodGaQ+1fnpKKRxPZ/3
nmXOkMLhnzU2NizdslIfKRhQT5oPf2jv3iZ5bq3jQGe147VldCLKJHxiRQ3l
HbdZeOG75PsE/tl+Htkp0P4yQx97rOk4c6iQnuYs0+51uJoME5RzL6YzpFdR
3Pi+m5A+GA2YcHB5tcznC38P505e1uOThYi2Lhp4YNlnht7OW3f9ypM/9/9S
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhP+7
Bs41GvZepZR9sL3qz9tccqucrL35GHKxpO22+Y2jvNoW0BxmzXrrOA7deML2
3HlcQNeb3su3cSilVV7Xune9zKUl8xVPf0785/X/SEX3sdMvsDRIQf3mDL9y
au/bsNYoeanY/EZp/a7Zt/ov84azVHwrtDe9FVGgxbSy5F7iczLh/+7zUX9z
+UteUf/4B+9HDKshSvOcWhfFp8B+WkWJMS9oD/9BkdpyDh274BTwKEN6+aJQ
xo59+EUn/TUt/Xnj2ragGvrCfzQ0PP+fd49BCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBC2NodMn7em0pWhgD4qqz438eno
5X0VbGSlzOf1n7pZbZO722UhjTypH3LuJEPXs5sitY+wMp/Xv6vl9bXTzyuW
0ho1h3TTPVxaxlFKsU3nU2UHYZC5BUubHYobVaYxpDBTY1/woNaX61VsvOue
4/ZiUlH0qL3xuJpqJvMc57Gtb57SclWZbV/LbwyZhK4yuq0joowjFa/2mdXS
yZT2MfZ6b2nhpKyMNo9q6eynuXNcQiXP2ev/t461sVBIUS+nLvTfxiGDQ+fk
R7b1k/m6f1c13gVWOM96S3Nt0yc+eFlL6cnD8+L3iP8u1wpsz+X8+r5lM3KS
4oaL6Gr+XJ6rRa3M5t9zjn/TtrNFlPpSubjL8mq6029lz3Pd/tz8xvali7+0
UyuhkoAUr81qXHrYxlP+ebH07pPbgbp692xZejew/xPPnQydaeaIrt9vfffV
xCUrE2wOiKjP4TmmNOTXO9B0xn0ZT/J3zUzbMaWnLUOuisr+O6/xyUCtQuPB
y7cyXx+EEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCP98dd0HNzoLBOS0XJ+/yJChe4Om+hyzk15O4F6F9dvX+TB0zLD93L1j
BbR1TcO+e6M4Uquf79HmYcdDfNIQnhee9haRI0e5YXYdI/O+/qc+fN9LI28T
Q2NU2pHbZAHlufdWy7bkULxqh+QdgSwttV70cZoBS3sqVsfOCRJKXD9WofuH
Dm9K6KVWdaa7D5f8wssvMFdaPu9r3ETP1IQdLC2+bdpwaCBLQ7TUygcvFdJr
jlxeII9DuhXyfh9688hEbeW+LlaSr6ulzb4yhkq/MPR6cvwAqyEiKhz6YvCG
0ZLn4N1f5UrnHfiUMeCVfvgCEWn33lgq/1J6+/Zu0fbyD1Uc6qdoE/9MnUej
H2hMGTFf8n76vDc2Pr6SJU5c6gn/pwwpnlPLaRMiIL+1ut+/9BHRV3+3t40e
XJrwUOQnV3Nf5t+npdQMT4vserOKim6lnFaP4ZGlYtvbaw+J7+eq8u2Xgrez
xI57lL+5L0sZp44xq22kt5/bd4wVnRIwZJMfvpQvEJLNWp1jAxNqxI5/bakf
IzLi02O7tFSV8SISzmk8nZLD0Jp1Hcacjaii3gv+njrHl0fL7m1qDNzd+s6d
tHSvzYjbM66ExnduesoZxqWZd9Zfnfqi5e89+3tr8nV3sqRnHKNuOpylIrPv
tiM2ie/zhjCOjbcHS2fkJ/50KmLI93v/cbWHxOdbHvu5nlF3Z2ha/iDfqO98
+jJSaTM3ruVzjMOLa0w3t+dTR6tVT9P7iyheYUaR66XW9/7uMNq2bN4qhjg+
S9SudhbQatM53QOu//45z5KqojNhn891AXnsKRk9RZ2hPf3T5gVb/j650BBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/PfN
FFn1O+jO0PIvFurrfvLpaUefhAdH/9z8pfJ2lV5uNiU0qujex4AxXNqXl/1R
9Ljlc8akZXOml8u9sEpa92mbWoFNHRV9N1rHfSOgzavfcc42MbT2rplOiIil
j82fytz+rpf5fP+nC4aHjTdcW0j0zuVZ2sMq2j5r/KeQyeLz01raZw8jrReV
MHR1wXLHpuNCepZ4P8Ctkiu1+vybFZ7HtUTkmXC6w+YpHNJ8+sgyKNhXbH6j
rPogzoN/eRy6vJWlu0u1zRPUWFo0qtu66CmS5xB+bf455Ec9Q4NcZ91W/ymk
RL25z44WiM9FFKemwdgJE4OLKGCN8yeLv6ppLZdT37Zny/dN9VjjvEh+Jen7
yFkWh9bRYg+tfq7NsvteYd9tVBR6MCTcbxB549c+qhw+a+k0ldZ33sXpdcZ6
53qDEtLdZHbFYzCXpk3ZPy+94Pe5h1ublrPV29UsYair3OpXT17zqVJnhJvf
5D/3HYcQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIYesxlJ3oM/+wgKYMW/p5bEeGCt4vt3adxEqtvtlBTz21RQydmKrsW3af
Tz+GNQQsl5dezpL2IlX3IFMeJXEul4ekColjufLknnWMzPv671p6mrmv6MNQ
04clqarGApodt2p3zQgOqQYlzxMRS+Z3+7cfOIKhjOU1PYnLk7j+pDE9Nh54
Wkxr5Nz9Axur6cV4p14fOC2fG+bQ48pn+VwuFb5sCht8nU+Kq388zrUUkWKq
enF6EEujr66/GGrCUoVhwJpn8ZLn47W0arZadge7sZTd9tKdbRtFVFDCGze6
cx1ZGwv7jUkSkOuRrCFpCgyVjhjUW8lMeudFUk3MV6iplb2l1cHpn5yaa+m9
vu7CW6clz9m70xSR1f0lS0a9nZyb3eoparZiXM6Zeqo9+K3t5F4islj3Mlh+
GZcu+978Zhx8X+L6Eb0t7MbrvCWnaXnP+z2spVHqu5Xf7m59+Y3i7KVy8dyp
QpbsEpOmc9zr6cyLQ8fmnG35/MDtOk6DT1cxFHtM1er8YyEVbpS3CJhXQzuN
HvSRPyskZ4Wt7/okMBT1XGt6cqz4fXj6W+NfVUu4tKNiq/y07Xxy634p89FQ
kcz6mW5uPO/Q8FLKfHjpvEMCl54KXWYEnvt98gytNhk+jPRjSW6Wyp0LCizl
3V19JHKI+HtMc8j8sh87Gdqys/ruT1cBGQ730h6cyhE73vlcdlDICpYuBdn/
dHjI0Ib0nR/HbRV/XtoPlZtwbRaPznY7tNfsipAel4Yct/Vpfe9gx5Sd+w86
MPTpiXtE7wI+JTHf277Skfz/gaT9ay4PDRfQB3uTENXvIiqymq/UZCK7exhC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhLC1
6e/VxWJaKEMBq11/XtomoIfqVx2fC8TnX/0uHtj5MHPs8hJa2W7F3HsTuPQg
1cznyMPfJ8fMfmtO2R41ls41d/haFCWikp7Gostz6uh6qsbKl91qyFPJfPKM
aj4dm3zn3vhlssuLE2fYp/BVW5QLyGrY2PLRxzmUbBfvZ3VUdrmCV0Krc2dO
Yskq/KLFZy2GTE9tobGFkud2itPkr7C+x0JEJGpS2DOoqpJ2y30t7Ki+UWx+
o6T1V5XZ9rX8xpBJ6Cqj2zoiyjhS8WqfWa3Y8Vc7dkl8GMySzuWIyMwJLHkH
KY85fqr15XmKc14XjzDHghd09dRAehTAod0iU2Hbs9LbP9ZFN2fGx9XQ5flt
VmWNElCHOfIjX+9p+XP0buvXrUd5DH35nBozqVpIcov9jQ1Ca1r8d4fkrfjm
8vdrmhuboXNuTQ11DaG137J+n/vwdzfy8WB/uVSGjhxa4/1ZTkhRPsFJJpOr
ZT4vCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBDC/7blRSXfwjcw1PGDnfdKAwE58Wb9rdNfevmHF+rNvSuesVT25uaMEa71
JDet6/KM05Lnv4nz2QRuv8NrWBpoYmjwF4ch/TuliY1XZZezJy1jFH+aDc8s
oXlGNcornLl0bmnIt9m3pJdXpnJs10lfg0Ia+mT20K3nqkhUPmPjppmy61vM
hF1HQpoYEugnvXHsL6KM7UnTorXE5/v97qY8Te19yq6KVmweZmBrz6O++dkj
L/tIL5/w7Gm5fs8MRLTf1zJuyTgONT4z55yx8JVa/btF28s/VHGon6JN/DN1
Ho1+oDFlxPzfJ1+xpdXlOzolfmBom2On/SeVRRSc+OKUZRvp7ecX846e9vMo
pPlqhW3K86qopN1Ip75mkp/fbxcHzCnYVEJJj7oftJ3OJfexiUWTcpGLKG23
RF7S6OHG0oXuU8JU7jCUcniHSzcX8d9rR/BBflZblngpA1zGvWfJt13H8nwn
6b2b0lK/X/4a/mqGLpXzGsJ7CGiS2ecE1cJKmc8LQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYR/vrvv3l3ivouh3k3VL208
BLRtrebK9lnSy1FsbTbs6ch9rc1Std3Gxo9FItKL8E7dKceTWn1Xw+7rgp+U
0MwF6Uvmr+WSZp33WoPrf24uWc06/zeijSxp6A1/9LmZoTf7tHe8biN5nt74
qfwsn2UFtChITqk0j0MdSkyZ9GjJc+ECVvW6nneIS4LNZX2ijvGJbfj5cN84
kcz71FL+sHo9d14PlkpTQr+FBYrIIuSOMHtEndTqOx0tUVLYJaIMveDdGTWV
5FfSbRVnxEap1X/2MNJ6UQlDVxcsd2w6LqRnifcD3Cq5Mu/rv6viX2u1Ontx
Sc7qvL1GKJ+qFK4lmerJbr99XDx+U0NKAWWnTc3OZzjke2KaszCo5fNRjV7H
H/JIYUm/rueMIVb1dJjdav0wXna5f2mfB6UvyiqmsLdhub0E1b/27fUJH7i/
zz1spffxy93xLD3WfuHs1pchfZuMnnZZ0nun/mlevX7v4EQ3hnJ8ae3Cr3yK
SBzgHxCNvEcIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEELa82RYZnHGODM09PKdoeyGfrNpMHqNqIL0cJOGjudf2nhZRj5OJ
et9HsORhER0wnGWlVp/nYriQdWPJ4FpB23n3Gfo0OWSe3+qWzzeTljGhrgcH
GJXQlqJcrslQLs0tfJTWt0B6uWRtrw1IWZZXRKFZHUjXu5r+ynQueaXQ8v3x
sUr4vrSMofnttt4yvCAkZZfOIe061ci83/+pm5ZNjRW2raTUpG7Wvp3qaMe8
t2dFabLbb201Tj7doSSiR91ed1znwKHtCvsqTw/bJLX6JuYr1NTK3tLq4PRP
Ts219F5fd+Gt07/P+ZKWs1+sMZ4mYMhTtFnLly8kozv9JiyLa/n97NH/1E27
oCIKTL2kWWJVTRf7hsRo9ZS8/xdtq5ee7ldC79IrGy/15tLsMOs+PkW/T/5h
a/M0b7LGFGeWrE9/3ZycwdDnS55rDpD0zkWS/T4LqzIRRexaxE6cxdJrUawo
4qf4d7OX+/15bRYzdHtazxj1x3xqeuX6c0xv5BlCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhPD30S7gQul6f4ZMVQxC3RwF
pHTfY77+Po7M59VaPLP5ZkVHroAed16jckefofCgRtOtttLLdTTYzXs1pOcr
8t2hMfO8cg09FHh8Vgv+5+WVnX0ynTaMYqkhp1HN95OI7vsoTVex5YkdH21Y
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
EEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/P929kNz5YKNJcSzTQuumMalukXM
mcu50st7bG2q6TvdylrwknaEqZesn1RF2WZNZmNX/z75hy+CTZ5OrWHoCTOh
YG+xkILmcq1MVtRQb0UmNqq8kPpP2TfTpE01Gelfqd80svWtK22n5dsXfJbc
soMmfOhcTh6nRlzunblY5vNqKRcMDxtvuLaQ6J3Ls7SHVbR91vhPIZMFlH1l
DJV+Yej15PgBVkNEVDj0xeANo//cXL7eCyPvBVx8SeYl09WfeVaRPfftwGeO
rW9/ilPZpF2Be0wJqfnuH1T+F5fO5Rj2N7v3596TEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE8PcyruH+5u8hAvqmJp82
65uIIu1KInhjWYnrmP49Mn7cIoaiTPo4LMvhk7ENJ+d2p0qx4+ebLYtZ6saj
Op6dXvUDIflNys88toOR2roEEX2Wf1vC0pIAld7bTjDUY2LUu8Ce0ssxW+7n
mdK4iaXBx1QPu3ViSevz2TZx/YRSqz9l9c6JhSsYctt+bkX/9gIal5IZ2XhO
fD/nzGoeuOhmMa2a2HGwqrCa5qV19kniis89O3Y8vthkKpfmRmkLDNfyyTdz
SV2xpkhq8/fK3nXJSsjQB2elAC9GSBqPhqtcT6pp8f1sGHJ/8Ocwlgo8ufaP
qJ4yyrwVqqPqpVZfFJgRNG6egC52fZaT9FpE90a1k/cfIv68JN4Wuhy3qCS3
w22n39Kvo9S6vk7nciTfh+4XDqp+7yEiq5EzxneYyaXl2967mBTck9m9sWnZ
1Fhh20pKTepm7dupjnbMe3tWlCa982VtLOw3JklArkeyhqQpMFQ6YlBvJTPJ
7yVpeSHdt0NfN5Z+9OZd+qRbT9N2XfnoHyh+XxkZp7MaLxla4ph7oG6vkPS7
hr48cpkr8e8GNP6cWt+JS17u/rnn5/Lp6rCf20WdpHdOxXmifQTnvUcJye+v
8upsxiXVyDdFk/Mlz1EcZnJdffgmhkpmLfnac5KAHo9/8+6KOUdm31FaPi5d
/FzJi6XS1JO79ggYCheWb/ryXPz+/9Enc9nqPSzphhd1ilzEUnivMJW0d5K/
F/OPJfTttoFHQUPvNic8FdKCrIop43ZJ792siXp/epMjQ4OeyxWsLeLT9bCZ
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
/+L24Olo8XmMTgr82GVjKunSRM7EH0PqKNPJWaEyW/J9LgrMCBo3T0AXuz7L
SXotonuj2sn7D0Gu2n/L2JHPtoQk1pJG4M8Vm3MFtOrNCr9SnvjzqHJPbumM
4mKy3Xl8xozP1aS1uf787UrJcxeDEl8o1S1n6LH6s8v+7/jkd8g3Knhzpcz7
8U/3uu8Im+QsId01qeEknWFIYapnOyZB/HkUKSb22m3HkHNyqPODu3wqtQsX
fZGT/DvyOR4L4zcLaMuqG4pZjSIa4nLg9IrRuAcghBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgj/dP1da3d02cBQkG7MCH99
AVWkr8ky6M2RWn3hng6aQ4+W0PeYR/fiF3Hp3NdzwR53JM9PE6dXurOq4ykO
zT2jFrnnYx219S08UDBeKPO+/qe+MX2RceoYS588fC8lxrHUqaN6UFOciFY+
utLZi2FogNn5eJ+PQso7Gehw4Jr4fEhxKujtYg06F9LM+uQc89gqCuswvObQ
/JbP7ZxyP07nrBdLL764hL0WMRR5avLfDcUCsgh64LlzmIgOaqjvijPn0Or1
1Qq1/r4y/w7/096KTGxUeSH1n7JvpkmbajLSv1K/aaTkfTOc65T5eg1L6tMC
z1IVQ10LT1y3z5Je/2Mm7DoS0sSQQD/pjWN/EWVsT5oWrVUrcZ3dl+dvH/eV
Idcsoy4rGZZWv7mhwf5dT685cnmBPA7pVsj7fejNIxO1lfu6WP3+506cvFMq
19plldDUslemk924FDs/7XKPm9K7x1raXjP/5kWuZ+h46WOHZD0BJX3K7OXe
U3r3PIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEII4e+i6U7Fmb53BbTiFm9Cfh+G3m/rEDB2FivzebWUO9uPWjrHl6EmkzTd
56YC4okyrxmZSi+HyrCfvU2TG0OL107t2es7nw7PcXmfeqiyxdc1oT7nwxEr
AZ08P//0njciKjy0NjtpqOy+445HLjnTjpfQpOdFy07Zc2l03ckYdSnmLl79
ojPsWQJLPXcqv0mNYel2m7u55SEiseM/Na6+eeYej1TTx99R/CakqoDeG48d
ZcSOV672jHk1spI0dKOLygfWkdKgpr/b32r5fEJpaRRg/e6GXTVlsL5O6kIe
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
uXuAv9plCaX3CqsLScXnfbfbahV07KKxzo0h8tvP2o7lHVy/MNRmbFvH9vpS
6rxy/UNb/UrO6+e36uX4ZSVLwbqjd0YXMLSg3/Obvfdz7ydqTsfKvW2kJF4b
McVuGZ9eG7mk3Ji4XuHn9181r2bv9UM1DIWfKgo81CwhnZztJbdecPc5b5a0
an1nBksTvwfXjp7P0JtYjRE3LGR/LjIuWaR/ERTRu4E7SoeEV9C+VR8tr7aU
/XfXqPDZ92ZYOekOii0q61VF6oZfl6reVdx5/tVajF17Oz5ASk1jugjndmLJ
L9I68GYZK7f13YZrrt3+nEcz56U5zV0jpG5VfmuMb8nvvfenu21tv55haxiq
XNl51rzuYmILLk8MYf6530EIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEL4H+YaWOpeDmdokfKR49vtxZS2s6zX1d18he/r
V3k2b41ngyWP8q5FTlgzVEg+Zf3EQ17Kr0sWk2nfL2MAS890TymHFknJ3nfP
lVlK1TKvc/vV0xVrUoXUeu+lGP3zIkpJSVZ7Q1KFz+9f1WhVix018/Np36x3
325l8SnQK2Hopzj59fQkDpf9tuiwtKplzu33u6V0wmbLM48pVZzXF//02X/4
KEvKWouWRG1naUuc8vX5ntzzDB89/8endVKyVIlXu9BQTrG5tilfowIUPtf/
6pDKFmNaNjG0Tzo+JtpISnp10fb86dxdSllNn7EpqOYgS9fnaK2/up6lgPs/
+1lP5Z5b0fID6r0n5VOlwcRI1Zt86r1pbnnGQdl/9+/sx/axtUL6fp0JSngl
Il6fFV8zbP+c8y/z/dp36pTTgaUicxuPZX5Seqmekdy5Bfd55tJ4R/WbPjpv
KChcd+YljQ/0ROz9pfP2f253cbKV1qMLpxma6fg8ZlqlmNzWxfiYfhUofF8Q
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYRQ
Nu+W77Y6fkJMRsWDsh63YSi1TvooYiIr8zofQswNp7oy9HN7bUn3GhGFT0nV
mruuXG77TDTpcWZSjIh2n0/uZ+gjpfoC/2xVIaPw+f2rlr8dRkUeDG2tPVfi
oCSmMOdMi4EnuOfTZ0m32k7HWLItUJ7RI4qlr+ql514Gcnfhvk6brutpwiOb
D9I1wt5CemgdO3BnPncPbX//q6d/hvBpcMfJ74a8qyL35D4rmSGSXz6HffGx
XmUhLN0XuMV5arF0PLdz7rhx8vu7lmNS8x1sRNS1/SlX3mwpZfXRLxuXx31O
dvQKVO9dyVD3vIwTb95IqKtBdWbm2g+c17evGBR4meFTz9RB+fzu1dRr2pzK
xwvkt//KaFU1LT0p3fIImHXCVUjbykZf3Hsyh/P6+a16OX5ZyVKw7uid0QUM
Lej3/Gbv/fLrT8pLx4Naq9sHshTXrmfX1c0MaSeszNdQlhA/etGOq9srKHBG
VMZJNRGN3L7Qd0uZ7POMU+WXWdYx1G2zpsXNVlLqW3u9rpOI+3eUl5/rV905
m11N2mnjsto3SkiwWS8g8ThDvmku2o7JfLI+2zk65lMVKQcVHsiX4zmXl7Of
TNbID+BRte3F7e+mCqnKjjl7/ZHsHcUjf+04cXEzSyeajBpcB7I0zahrJ09/
+d3vS3OhQfxqlnqNGW68gM/Q0KzXJ+tvyH7Or0jnGxz8+z3s+s2yy9qfInrR
MjDh4fFyyvVWetLysIh0JZckZ/yk5MjXqJ1d9ed8X2S15+N+KtODGQrqmX5s
5mQxtei9YelZqz+nhzwmrPxzRpGY4mePf5/aj6G6EeZ90ubJ/n8LhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgjhsTeuflU3
xHQrJK6Vc2eG5ifcrVSaLnvXaIiX5fh5SxjSPVV1W+OViLYZfjnSt7/8eowJ
70sSdT2rqTatSFTySEKv2ylvM92kuF7W+vNt+z0LYkiv1mfkJXMx3ZhhkdWJ
5NezaqOpYjPGiqUZ465Lli5lqHjaz6O1btydtJvTZ7/bqsGjg1GGfZ9qCWkG
32vxeR739WMs6nLGOgvJ5lb1qkPh/1+HLMJtfz/u3iOXolT3+w+3sHQstDxo
+xCWTIZOcRoUprjuXMPd6H5b3cX0vLx85bJqKQVfN7BOMeI+z2VOwx6nt2Jp
REHZkzOLpVS8a9Dx/RmVnNdPWUDGHh3KSeOtX/jnDlUk8IhY9/iy/PqH4Wsf
WgfoScnJNDzUxk1IE8TMCFEad4+x+KfP/sNHWVLWWrQkajtLW+KUr8/3lP13
lJcH96d0t4xnKVA/dYrKjBoa/WZriOOBGsp0ECxot/89vXfrY3mwupJaPln/
1/ejss+tW0LQ3hAeQ7fW6W3deEJCdw1fl2Txhb/8vnTV9AvLg4V0xDqmskuM
iPo7jFAfMUxKHTyO8dNPSqibxTzSPcrQ7bs5qe8P/H5duKE7v4V9auLROoPo
VpHbhdTleOeDTy6LyDXYJ7V+PUu9E7Xj3Vuz1O/LOaUjBop7fqtXDF/EurNk
fDNfeU4OQ58nRs4JXiX7Odnk285y6k6GNq9y+3ktVExPutxwzBPzaYCdtse2
sdV0in+9LPKChPjTvU7HrJX9O9Jn2pzV5W5/r6/faeWXryI6fj3uHRstv+/d
/zZLjVvd+14vpstHk0MejGZo6+gPnd44/H7PEYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIZd7i6smOkYw1PKwb4Crh5ie
DO/89X6a/PqEf7rhU6XWNcYsxXlpft3YICV+gVceM7eaAozjdNzu88ik38W4
Mi8h9TE6XSbN4O4o/m4uC7O3fRCZT27ndlnrlPIp23/svpjdYso27LhxcCBL
C6M1fIXNDH13DVWfrCJ7563m5EEDCwch+WwevtFso4i0L56IjeujuN6gvFzV
4fK24HYsPSr0W9XgJqXExc/oUXkljZ6TqHbbXUonzueWvlDm00a3DjonqgPk
9nfXdizv4PqFoTZj2zq215dS55XrH9rqc/cn/3TL3rXa2WGnkJS/ulilHhRR
qxv1C2abyn5+2h+Z/mPfyXxSzlxy2lTEp8oPi4Y4R8reCbzxbWD/lwks6WzR
KL2wj6VMpfuPyiL//PPMZaxW71E6s19TAn+N+5SLQur+1nyMX7L83m+1MS2F
bwewVLE4oP5TkZSMovwubGlRrfD7/l2cNyhoRvMhhpqnlNvZXBfT/qs/d2/Y
IFD4viCEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCP+3aJtcWizxZ0hV7+O2NkPF1LUyYvM3XXQa/9OLwV9/6o5/TZs8R+9k
koVUeLtub+5ZETEuq+oTc6UkfJN3c/wklpR2uPnGf2MVvt9/1Zy3rR8dKCgi
tYhrV5KDKigr9OJCvTZi2tHm1cD52e9pMJVsPP+pkrq/cgzNPCl7105rm1lZ
4wyWXI/MdOq7gCGl7U8f9Jr253QsuTxd1DV2P09CcQY2L5Ri+WQx5OUxi7Bg
zn6jrOtLHC77bdFhaVXLnNvvd0vphM2WZx5TqhR+3/9uX0TfCa58/Y5SdLqd
87pSSb7eo9ScQ7jP4fJFl7UjAovpJ1va+8PjCuo+YnlBZI3s521epM/7CSNY
klY/szVrltJxsbXpKfd/bj+w77XIeSlmr+lZXJIXnRYSO9D4+Pxzss/t7IY7
71oKxfSszepOWUMZ2r2tfuxG2z/nfSir36cG18f6MeRlu3l63QAxiS8pncto
h+8mhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
Qgjhn6ZoenDvU64MjX90piSiVkQnNAaWfQoql3md7kO3tK3jsbRZLPpxx6uG
nCpbsR4pNXLb55qB/GGn9rB0K/VzSB8nlvTWrmPimyUKn9+/qsGUwKTKXjyy
Ta4smd1NSFcjqv0+FcqvT/jQN6rd0Y6F1Hqe5xG3owIqWb895/Ac7n5deXGV
mquAocPV6dfSn0oook4vnp39QeFz+p/a0+PFjyIzAQ1Js1olmV5NsZdvrl6y
Sn7nZJ37okOrx0tJbz9/Z4ERny7zAjRNPgfKbf32FYMCLzN86pk6KJ/fvZp6
TZtT+XjBn3POubzZU2fX4hqGbOP2N51ukpCbsn8fi2fyO2/xU3RmPR5SSNqt
jxgbpQiow/jiAuFM2Tui8lISo9at73EeNe97mn3UTkjnv5/f7p315/dIuVwf
y7on+LN08bj9sYkNDHX4oKoyTCy/+afXTPZ795KlktI7M4a41VCLqR1cL5+R
3/dlb1v/sLWBDCUOV7XeO1pMG1fXxmWboK8IIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEL4T/ezrp3tDGeGDkSYnedViCjl
0dvXTYtk7zHWKk8dcOyLlMbzO30f58CSxVd/tkMb+fWyAj2SFlp5sKRayny5
9oAhx9HezT3WKq631rDh5cyDy3iUuF6X1zRWSO6OhpZDnyqutzZqXJJyze4i
urD3TbSGbQVlr8mJ6aHNPR977RcfK4QMDc3/9KJ3kYTch/yYGb7iz+8xfst5
PDJicjktuj32s5dRFYX1DTw8I0d+58Rax+Nbbhcp7U4Nsjabz6ev1y7Y6FcG
yW39OfEJz790LCfVArflrztWkf30mZetryjunMvqsOFV2Q2VDHWb8U2nrlRC
qqadm56vl9+5mnChS1u/vUUU8Lyfr+XiCurc1WTiSq1fPx/Ps82bXwqKaVrY
9JtezRV06WJm/LN3f35fURyl79roxJLT5k56oScY0hq/52OEjgI7lk+tb+49
IyWt0yeNmoew5G0Zu3kwy8pt/UkHfYw62zF0wkIjqCRHRD/61252bSX79w5C
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBDC
31n/uP0utZ+LyVRJrD+1lZAqpyz6cLbkz++ncUm7+mQ0zC6gr7mPBhqYCygq
YIDq51Xy66ql7nK5mfC+kLreqSkya1FBVbcfvu8/7Nd32/Q1OxzRlTJUfsto
llOthMzPmfVckKq4bmTvmc8tWzewVFt2uFPKp1JKC7Z88fCivcL2s6NXoHrv
Soa652WcePNGQl0NqjMz13LPp53d5ul1VYU0/r79JCu1CprW/Na9ZMif03vs
dXzhM2mfAvLb43N56wABqfKNfUz9/5z9hz9d8WBqEo8m5BU5J9sLaUTV6X1d
sv657yUIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEII4b/fFf0zp6dt4lEvnQ3+xrOEFPoz4Krqw39u96y9xsGq4FtFdO1W
tMkS7wrys2LEqury69TN62g8aMSRfDIYEeN1TMgnm/A2p3k7ZF//ryc/Eh9V
MLTbV+D3MU9CST3Un++3V1xfUVa7jDYe+Ixh6crsgf3VlctogJ5j4DUrB4Xt
p8xp2OP0ViyNKCh7cmaxlIp3DTq+P6OS83qjVS121MzPp32z3n27lcWnQK+E
oZ/ifr+eoUaJkvBRy2LqJnHNvba3gu5adLE0aPH77VNWfzQ83+bymEcLptuN
frZKSHkrh6Y13/rnvpcghBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQggh/HfqUaZ5/KtETBEH+MkTRjA0cX6V2wA7Vm7rD3E9
1eDrx1Btga/z+gFiOmKeOHRTWz7n9d47EnyCTET08NM6sYGZlD6PtDq7JYeR
+e9K1i++OSiOpRNzgj4GrGRpaMBfeVN6SuV2X+1DNb/cCWIp64mOVZEKS5H+
b5hrnSSc119d8/DzpA0MqbwKMGicKiZDxwX6kxZxz2G4l2qC6wUe3ep7adL+
ZULy934aP+Ke/DpsZnP3zVqwVUCpTpM7HfSrJid7c8Mb27j3L6uNzuFbLYQM
FffMdsnNl9BG7z12zku5O4qW5L5IN5qlm6ee2my1YanKfVa7A0L57cdcL2LN
/XQRNea4Ck9sktI++/zXR2tkP1fW694MTg/lk3a+msTwfRWpRtW0CxvKvU/V
FT7rFnSTUnRSouEGHyE1WI2b2Opjjtzuq6fHix9FZgIakma1SjK9mmIv31y9
ZJX85mY5JjXfwUZEXdufcuXNllJWH/2ycXmyz43LmOqTJyL8WCqJGV7epZah
E0V3Ih3fc3cUD16ojBj2jaGpDt67C3tJafCD9ne/G3H3JLkM2OpUYJEhoJyE
Bol2bDWVT93QXHxIfnOzUCscJgniUWefjus+WArpilcVf/kjxXUUN7lVhrdb
x9C2QfuGbBoqpndpqzOM9bjfP34X1bx1trFkp9trNY1iqUdtlpC3n3s+Vj9G
D+7jwlLh6p3HR15mKDFieJDbBMX1MIWt9xw90l1ETfaa/YRDpGRzVn0C7478
zm1ZEa9x99/zbNmw2M/LWEzLq2ctHdiDe56yOsijd72L+O91XYeK7IYzlG1o
EZi4WH7fZQghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQvgfxjMvW37cI6Zu7tlTn/yU0g9twYK4sbJ3n/anmur72zMkGbLg
odoTEblNm/OxQLtc5nUe1n1V+hZTTWkP8sOLyiS0eUnvy1OiZe9ofbm/vZWL
C0tf59GA3lcYqksQzM2bKL8+mGanwLvLQli6wz+5PlaTpQnXqt18R3H3ygZG
iQ7v9WLIxHPLJ3FLMfmoW2SNucI9n0qLfm0inxVT9qmEvM11FTQyl0ZaCrh7
bonOM7owPyqIVXHZ1GqGiC7YaObHqMmvPymrFi13FnRkGeqVtuvN0y8Sin2R
aX76HneP8Vj44RSXdywFxF/1Xe5TQxamgzT3pdbIbT/DfdXauRqLqe356d9G
5UrJ1KwoqK+e7Od8/UvTlLYe5aQ8spVa0qQqOtV5XKwwj/tcdWhZYNGgLaVm
t/OjJ1gL6URZ62ur67Pldl+SDZ6HGiaWk3P2NO0dg6uopWX6kuxs+Z3zhrvR
/ba6i+l5efnKZdVSCr5uYJ1iJL8u3LyuPbumHWHprv/Q7O7Ta+iqes+uRfu5
f/enE0d7qxcxVBhqkjfzsISMH1hrFOUKOa8/dXVbm1NqQjKZO7JPwWwRfchY
PeFVK/k9Fzn9tsywXcSjQV7jjNeNEpJa+96Pjj/79d3FG9t6i1+sYyi7VueA
i4mYRjXMXJHeS349QFHnsYP017HU+VlDO93PDFlut6RvLPe52rBlQKPK3+/D
bYLUuhEaLAUlbE8WDJe9bzl3kvO+Ze7VVFW92KjioYSCJ+ReSQyXX0dRVu9Z
XuabOTJkHW9VFFYoovlKE0dqG8v+XeNyJzs+cG68mKb0X/ZldEuG8utcbdwm
oLsIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEL4uxrv7pE/NIChJRef/ng+XEz6rlvUl/WVXwdM9cxdmw8zWBogrn/hq1dD
Bm12u6cHc/fZDudoXstdxdLn4ysz1rxl6GSnOtt2Z+TXo1OUoxJLEkbm8Mi3
//aQzJVCUhku2nMqg7vzNv+8/sazewtJOKWPtkaJgB6ox72eO05+c+iUvjjx
Sz1D+SEnorp1kFJ60rWgtG/cfcU/XU+n/NSPD/hU2NrZ2bNVNe3ROr/Ix1L2
vpzvK4OyIz2k1Mb8fOq6mXxqbLem9+yrQZzXW697Mzg9lE/a+WoSw/dVpBpV
0y5sqOx/959q2vXdHd0bGZrh5NVn5CApfVj9TeXB5ErO67et8Xy3Pb2Qvj11
GZIiFlD9EzJZPEr25+JTh5rp3sU8Koy0qU7xF9Kx2SvnPL/x67uLf4omvVy3
fVjOUpx/aPX0dIbiJr/N/PF/ef/YDZyiduHv98moFpWe10UsDdq+tfaWo/z6
q7J64KL/ko5BDO1/6VD4wUxMS0ZfNSkYLb/vGoQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIfxn2KxaVP99CUPTmi3axhaI
qMGwbdq5IeUyrzPu3U+72mkMNU09suhkJEtrfFesa9tH9h6Xw/IBOdLNLK1v
7Z0xZxBLBzLy7z0N+PP7dXcTppaebSom37jtjZpthSQo463Pecvdf1szZeHY
RSZFZHv3c9LYgRVUOnhgnochdw9tfGuN4/o8hlK23hjaMUlCqoseN7Z+J1T4
ff8uXpicsXbC1nIKn6F+3XB+FYVt1M678lb2jl/xPpMnb4dI6dCyURIrcz4p
e415GGLH3WNc/9I0pa1HOSmPbKWWNKmKTnUeFyvM+/P7ovJScr534P0Shhx+
eGudvCyhK0G6h7LacXdBj9gUfmttUUStsj5aOQ+vIH1b5SWhPbjnWT7aJmRm
bjGFrqq6I62tICPLq4ceCdBd/H/Zsazu7Jy1LDGTLnzPrGJo+KbaDam53HOe
cC62eKgSQyF85U9ay1gqrNlSUNNO9vf/2KXDjprZMbRnjP4S5wciGrWQ/yCz
tezfIwghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQvh7Wnjt2ZRVT8TkPJ45Ob0nQ27DKLvCilXYfqIeGG/fHszQ8U3DE8dO
EZPB14yzunP5v/zvDrGP6BHiztDsJatuTmkU0YJNl/VEcfLrbgUnZ0z7ZCKm
lNYtHnZ9IqUAg56TUvXkN2frtC4ROid5NOtIocsOByFVdtw/4WUmd+etf7pj
p2PPq2kL79yIC0pSmmowfePXE4zCfvdO8eUO/Q+zJMo/pTonlKWQbNfkafOk
NOH7Geu+buWUOu3G+eiJVTSiXjVy0n+jHxhpddh8qXcFpWyOCTf+XE1jVpvV
2BTKr6t5aG5VUkwAS7cavTYdbGRodDsabNkspvmPd5uaNTBU17HWQbujlMYv
Mm0zsukDHTYVdLgfydKI7lvD7CeypL27QbNXmuz7GaWTdG29vpRevv9Rcd9L
SDurjM7kFOQo7HfU1+xwRFfKUPkto1lOtRIyP2fWc0Eqd8+QS61tZmWNM1hy
PTLTqe+Cv8/l9qcPek0TUc3JgwYWf59vn83DN5ptFJH2xROxcX2knOvsi4/1
Kgth6b7ALc5Ti6XjuZ1zx43jnvMN3TET9PeX0zNNvraeQxUdmxda1ar8z+lV
uhT1SxgWw1LVuY6nTy1mKcJjdYs5Ndz3Gx1r0G364mq62PPWI/u7ErLf9S0m
eoPs74GCJJvtFet49C7qcbbnVCFtvBZSVvJI9s6kec2DhmPzxXT60twzMaVS
Kjy85t6pvor7Hv1qK2+2HJy7iiGjmuMttLTE5HZi3jpevvy+Ozvu33fy2MqQ
3teKgoXeYgpd081LNePXf0//FJ3qTxepakpI2OJF/LDpDA24ETnnyIp/7nmD
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCOH/
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
jjjdOuP512KiJdUPhrYWknrj/LVOJfLrp3nVhZdNP88nh2FeyYu+VpFBzycP
1o+XKHx+/6o99Nd2yUpiScXn6rMXCSztiPI2yDst5bz++737Dt3KGaq/0GCs
nS2h/F2Xy7aO4u4Z2m9o/8XkaQGxY80eitYL6AEvzWGqPXcPMLKp8POdyVKK
mLjOKLo/nzzPOW9aVhj4y+dwaG5VUkwAS7cavTYdbGRodDsabNksv26hJbkv
0o1m6eappzZbbViqcp/V7oCQ+5yk7nK5mfC+kLreqSkya1FBVbcfvu8/jHs/
5cVVaq4Chg5Xp19LfyqhiDq9eHa2/DqT+/tfPf0zhE+DO05+N+RdFbkn91nJ
DOHev53q6yK7UwyJ9n7Oen+bpWwHVU+dKTUKP+//qqGz3uwfP5FHugciSvsN
FtK725Utxub9Od3F4Qb2C7+6M+SwxkKna7OI4q1W1F04LPv7E0IIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEL477duzPsQ
6wCGHvHbnJk6QkxrhiXMPNiPL/M6bWZMX7W0E49uFkoaLmsL6fmDsA3OPPl1
1XLLY39kaQjJfYNVvv4CEcUd4FFUO+6e4a/2pHMb06OjWdqhZ5pyRZ0h/8+1
PuGx1XJbf96KFdKIjwzZTFjrXqoqJaeCrtcT+dzdP5PITDvHG/m0cVtzuHM9
n6Lijg/tvZW7Kzgy0zsrfI2UVGw3K3X9Xk7uqs1MZlqAzPvck7RIu0s2S3fi
w/o0ONXQC9O5G9xPKq4HeCz8cIrLO5YC4q/6LvepIQvTQZr7Urn305RbdHnu
4XxavL1tzFAhn368uPLl+w7uudlrv/hYIWRoaP6nF72LJOQ+5MfM8BXy6zGO
sajLGessJJtb1asOhYtIVxLhtr8f9zmPybTvlzGApWe6p5RDi6Rk77vnyiwl
+Z1DefmIP/1n6yYeRajOn6y9XUjLOm8Krrn853QXuTzb0s7kfhRD72JbdhPu
EpOB5NENXXWBwvcFIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIZS/af2z+9ZIiinEP7StoIWQKvsNmrusTPau2qcCb+uw
DwX0zLxVXu42Ac3+NqXXYFvuDp6srrgUaav/lqELT/4a5poqoUfuZ+5ubhQq
fH7/qpsfGp/K0C6khJ9veomOCSjx+7w2z63lN59Dltmaw36ylNJjxrzN70tp
z+HtfbfE2nFeb7+h/ReTpwXEjjV7KFovoAe8NIep9vLbj6JsdA7faiFkqLhn
tktuvoQ2eu+xc14qv75itxtVmzdqFNKLJmZd0VEBDR9ctjZgjvzm9nXadF1P
Ex7ZfJCuEfYW0kPr2IE78//8ziGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEP5uSlrdGTPXhUdmqpt/zDMXkpJL39is
J7L3384nDtHf51BEXg8/9K8aX0HTz3Vbk68vv05d2O6Moph3DFV/SSk0uyOh
I0ZW4bP7y6+zJ6vtp9SbqRXlE9Op70aPFgJa5bv4W0q44nqGLWMf7rnWyFL5
yqs7PCtLqXZfl0gdCXePsXSymyD4r3z6623Q6bo6Po2qmLHJcuuf32O0aLmz
oCPLUK+0XW+efpFQ7ItM89P35HdORo1LUq7ZXUQX9r6J1rCtoOw1OTE9tOU3
t5vTZ7/bqsGjg1GGfZ9qCWkG32vxeR56jBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC2a1qiqp092EoOasoz0tHTIu/
TzxW87pcYfsxnKV37IAdSx4FBWHdohkKX75+86byX99bu5uo+0l3Co+MHuiW
7zYS0t6ZJ9lHL+X3d0+cmKHUZjdLzWzJ6duzWQofMKDKNk8it/VrneO1v3cv
IIP3Q38a9BVQSZVD2Yx13B28ufUdqkxdK+jp2oW1sR+rqXrl2qwDr+S3H3m5
3nDFxNBahngOZ4salaR0KrmkfidP9n7gce21S/o6SEn1TdrguR355H+3z8KS
MYFy2+f4LVWxze8ZWv7ZrOz4fQmpvFOfuWjkr+9hRlodNl/qXUEpm2PCjT9X
05jVZjU2hYr7HWlXn4yG2QX0NffRQANzAUUFDFD9vEpxHcs+S7rVdjrGkm2B
8oweUSx9VS899zJQynn9w8thC0zdeJSwx3X67fFCOjF8hKH1f6O/qig9Ipec
HW7PksbKCf289jC0r9fW8WGVf87+t6iaLLMKYujrmIuD8saKqVp65abpWL7C
9wUhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
Qgj/mQrP3x8/azlDmu1ujEmuElGBoNfdCmfF9Ri1HuzrMXoMQ8JXTVqZYSzd
jyibe9+gRm7rv0t/En0jkEdVqV8d5lgKidK9r8U+UlyvbOL3PrapHiwdd/vQ
0O0RQ0sS7t974C97vy44umVRwfIiutv2Zlv/SRUU09ugOE2Pe52EV9e1TvuW
08tHzYuOT6uijSp+Lv6FiuvmcZlxylpgImHoSWxA0GephMKG2a0JPCl753Ca
00fLwPZSypk78FmQI58WTdnZxmLoerntc96KFdKIjwzZTFjrXqoqJaeCrtcT
+bLvs3TdoYZotXKKuHNM63ObKlIKstv+8tLv97tw+dcT8zWHbhZRTYe2tszK
Cuoef3D8AHXF7b+NporNGCuWZoy7Llm6lKHiaT+P1rpxP+/zd3Wu07TkUdu2
qi4thgpJ1+iV+Tw5dlnlZV2v2jM//KW0Z+7HQjdNlo5cO+A0tIxV+L7+p7b3
6Nn2iCNDKv0DjCVFIqrd0dXmwQjFfY8ghBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/CdpMf5eydxAhj4crP+iM1pM2V21
Hm425sttffWpo++5HODRJAv3Q/MXCsl5dGOPJ/e5e24OyYbmPjMFZPDk6L3Z
86spxlMjtMZXIvPfFR2T/ggvYciBBBfPp0vo/s10vQltZO8Bclk9c/XotIMs
nb6Q6PcgiKXVq7+uLp8s5bzec4HW8lfbWLq+tjxNzYylkogRCzse476vaQvS
Osw8U0BDW5hNsPUQUMMx6vh+qfw6fnkW8xpeWkjp7syP6WF9+aSxXqvFsEeB
clvfaFOx0RutQnq9YKFl8DEBzZzR5FBrzb3/Hvpru2QlsaTic/XZiwSWdkR5
G+Sd5p6nrL64t+r18wCWVjaePbi5iaHu5Jt87qfs8+yUvjjxSz1D+SEnorp1
kFJ60rWgtG/c58ps7r5ZC7YKKNVpcqeDftXkZG9ueGOb7OeZS4MpgUmVvXhk
m1xZMrubkK5GVPt9KpRfL7H87TAq8mBoa+25EgclMYU5Z1oMPIEeIIQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYSQ2+eF
WkdzVjDk/uxO5cMGEeUu6DKwTYTiOmYzfX1nNmzkEVOyL2TJDCFpjL2Vd/ih
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
o5Dz+oBx5cGvU/k0d4BjpNm3KjrwM0ZZaYLs50dW+6c7djr2vJq28M6NuKAk
pakG0zd+PcH9/Mpq+1DNL3f+nm/WEx2rIhWWIv3fMNc6cd+Xf9x+l9rPxWSq
JNaf2kpIlVMWfThbwv28rxnIH3ZqD0u3Uj+H9HFiSW/tOia+WX5zSzTpcWZS
zN/vqfPJ/Qx9pFRf4J+tKuSej9ozNrBqOUOdqj32NIhE9KJwumWF++/33uZy
sM71NYNWMfSk5OeoDA0xhVrPsbv37M/Z/9gt7WcG3ReT591q81x9hupC1TaP
niW/7zKEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCH8DzeLjx8zfSkmE/cfvZsMGSp9rXwtdI78uk9nB2y9Mmg5Q+oDBJMH
V4nIet9e0cllv18XK2FFPqN/rZomVlhYFdRJqOkAf9ydI9y9susCjePeQQzN
uuJkbjlOTGoHFxS5j+NzXj88qyI3fzaPPqiMT51jIvz773TfP+UFd59t14uO
V8UeLDEZzcdbP2bo1MXedwcFiuV2vyV9kz6G3asgtYiJa4f0FdEmwy0hk2rl
138bYbWVmP5iavArMfbJkdL7MQVHrbpwn6sZo/b9vBPCUl5YY0ldJ5auDM9t
bDlWQg+/PKjJ2lRO7665jxk0t4rOburaIvIN9xxuhlqNvF3L0N6suvoPLaR0
clF3seQNd4/R9qGb0tmuUqqmxJkvlgup54AdZLxfcT3G5s8hz3qcYKkuMyzV
NJEl03SlRt9zUhq79uL5zvEsfbo6pLXbDpZM8r0H9/SRvc+Z8Oq61mnfcnr5
qHnR8WlVtFHFz8W/kHueYbszimLeMVT9JaXQ7I6EjhhZhc/uzz3P3PLYH1ka
QnLfYJWvv0BEcQd4FNVO9n3qalWJdVzF9Ny05+rVlVLK/XGpYfNgxfXoNDsF
3l329/m8wz+5PlaTpQnXqt18R/1fOpb9M6enbeJRL50N/sazhBT6M+Cq6kPu
5z3QI2mh1d/Pu2op8+XaA4YcR3s391grv+c94X1Joq5nNdWmFYlKHknodTvl
baabuN9vuQaWupfDGVqkfOT4dnsxpe0s63V1N/f7TVE2Pd3t99ONIXPb4ce9
v4loco/Kmz32/H7fF1ldUtB437RKTBYTlHpGGTPUdtuSpOhF6DFCCCGEEEII
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
J4+vl32/sekad7LWsvTt9OqHPkUMndesm98hgbt7uWb3Ke9gMxFlNqwX9x0j
pW8jbBN3psvvOymatlHvwnKGJrxIKA6tFdE59UGfGoLld25PyvbZnj4npiEF
xk9fqjJ0pU76ItQKHUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEL493ZkyniVyGgxrQoqvn9LgaE3ESVddMdxd7RuON66
9tWZIeXk4S3JOSLqMUxQdlSPu+tVqz9DWJ1ZTWnP+/cvb5bQE9XXv+6dkV9n
TP3iZWc/T5bmNdvt3PiMoe8nam/f8+Lunp3cOmS0uwdD0VNjN/X6LqLIuIdz
tffI3iU7/qaD4Y1PBSR8sfR19c9y+ply3zC2lLsj96mHaiffLSzpNlzIWdKT
pXt9J3R4OONf9Bhv2SX83lxOEj1fw4EKIrqisvahVRH3+D1lWj4VdQxN3tw3
SF1NSgs0g0IH1civy+e7Ns9xtkREJgJrHeNzUmocGr+nVpH7Oen94auhxVGW
zErrLtQGstT0ylelj6WUIqIXeTmlldGOIk+Nff5VZNj7TEUky31fXG6e0z9c
XVtK+tHfZvV0EJJW5/l9zvWUvcdovMqzTPNcGR1Kqdvu7V5FVzceVl4mlH09
XA63DSNmoJi++hcP806XUunovBO23bnPLX7Y7o1OD1gKfH7I3H9RDT1ve2fI
gDM1nON/1Bh8j8hnqNp+34z5RyXUcX/8oNR0Ief4M8VON1IflFPQmtvE9BeR
Stos1p6VX19RVmOeuT9d684j/4UtA8rHCSnpZo5QmM39HtWNLg2ZHcjQC75q
wpThYvIxPTXjqKHsPVUutevWFAevZ2mDS1G3jd8Z0k0s6h9dJ/vz4OxulC7d
8dc87dc8nGPM0pGH71NfBXKfc2Zdo8KPA9V0I+P9tg+fJLTDRS/ZOlJ+38lv
PRbNn+7G0JHQMZd55SJKelFU2LxAfj3GuI/L/avuiykl5LCKmzZD9qeeVCpM
Q48RQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQ/md5ULggzcKPoVJb9numnphWKKUcn/6Lu+t1QsU+59cWlnR8u+wOHF1D
DV1Cru/ax92Xi8notSfQhyWDs5679wkZavt9hu/8p/Lr48lqYMFmNZvjPNLw
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
zYhqqksRvw13435OJuV/cT+xSUSNfZ5mKS+T0uglYsXVn5hWf5/+t96ZkNjQ
0LWSjrd7yHcIFFMkc7bNqfvcz+eXelNln8s86tWp68gzrkJyEpre3J4qv17i
5AmpxXZBDFUcrf/ebZSYnvfsmrlj2H9u59Bdu70o2lxKtt0f+hVLGFobHRX2
OZP7e8jlSU+v9yaBDLlce/XrjbmYei/f2WmpAfe5eX3SON0oEVPoEX685XCG
rOyrPIwWyf67EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEML/dz1iBFl7O0jJJu/311cfGIrxCnJ89oC7AxYb/+uTQzhL
bDtFj8GjWFI6PTFxwjHubp7G7ZYjd9ezVGwX6LyskaGCL9uEtV9bryu4xebI
3lSbSpIWuaupHhLT6Z0l669myd5jtM3gm+t9YmhHBPONd09CC2PW7Z/VU349
xkWb+1wpO8tS9qATA2xOs1T6YVGYcoLs65SXh91q2lW+kpIwV7/HNO8q6njx
bBfXybL3GH3eNsa9LS2j0vTZRxzCqujsBp8M3R+yPw++a/McZ0tEZCKw1jE+
J6XGofF7ahX/+f06p+TwV9ZLK0lxQZLH+rNimrys91N6z33vk0es5937UUD7
585yPdteSEM++zFjirl7jJs6eJg99WAoJLbd4u2NIio0Wfv64f6yVt/338XP
oXs3WjES0kq8P+lKOkOKXwPMYq7L/ly1KH2o/+nC0NSWyWrReSL6OkDtxqWh
3Od8kslR/nJQTDqez6dk/5bSLy2Bw+Gx//znGUIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEMJ/p3Mby5O0VzJ0JZZRd2gj
JqeGoVOvXPjn99aO+ZnlP17MEoXd7/M2jqH3NUuuOqiKybt89o6bvwto5W6x
UWQHIRVK786fWcTdo5OXixxTnU8b51HB82lX5wwWkFXSA9bOX/au4FyF8TN8
41haOmdc7s5Iln5rZrZft0lKz5ZXzrczL6dTW0eOd/1QTcai+nH5adzdS3m5
dH2/u59LGXJZNNpy8DMJNUpP1A20qCCVF/znZ5yktGnhgvK8LnzyWvDY0Wh8
0B9fj8/bppoVQoaMhtUnTs2TUHIb4+xLS+XXvXRx5Bt7zCmnhdaGv3MqqmnY
Wf1VsdnyO+e0bEPX3wvzKORYjEHbSQJ6t6CnRbc13M/JdrvokI0nWGo7fkZR
910s3ezTRr2/V+t1OLmc4ec34+tmHjHFh0JcpgtJfWzKu9hM2d+7ATN7xR1Z
xJJXXt5WnUiGtrlv2LG97M+/v3/a/RnDdu3ayNDp7eZnxlqLqW/jw8QedvxW
XxeEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGE/43G1D4rnLSUoYcd8l9+LxWRzsecz9W2//xOY4qHqLtiDx4lGagbre8u
pKaHiYHbCkRUHBLp2u8WQ9U11rwxGSxtLw1Q6Tit5o+vx6rctdOVd/n0Nmzw
heofAhJXRj8KMZO903hq+/XojZIy+rhsVIR0bxW1692yoUOLmALuX3GbvpWl
iT8+TD6ow9Ll4X72qg5/vtMYvYwd18dUSh3TPE92GscnDyehaP3cYM5+o6zz
t0sasGd5BUPJ31c/UuVJKDxu5zifVfLrLsrqzKfPTj65XEYN09ZKKjyraOtZ
ftK5KtnvsaeT7cqsXh9I70jsjGF9y4mptXNjDLjn2fu2y22xF0vMw5bT7V8y
dOGa3hPjINl/909btsVj7NSuPDqf82uNfjchWVrmOEzgyd5R7JpxSHfUaIaE
uc1d0/56rp+FfrJ71vfPv6eyejdf4OLmypDRHMPH50tEdL5m7hmrKf/87yeE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
8J9rok6C74ZxPBofr3Q010hIzu195za+k70Lx6WjtvYiv3t5NKbbg9+WPgKK
to+sWrT479fHU6sQjVlTyVCf4AI9tkhCfSPVvx8I4O4ZZs7uv3r4zHxydXZK
i74voBKJi/FsG+59PdD/0G14I0u9o2OOujMllO/e8HDfZKdW3/f/tKBY1FIy
L5/CtAyP2j4W0OQhik6vJ8t+X4lH7ecaCBmy1t+80eG9hL6WqieYLJG9D6k7
b07qiqQ80t2a/rh4pYAuzM2pd3eV3/NTlnwzX3kEjwKaB8ReMhBSXufgjB+5
8nv+IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQ/j0tGKw59X0Yj9KPbXQaaSukfqoe110z5Neji7gQ/kGXyad7qub9
ClTKKc1zaULHoX+/HuObZOU3wgqGRrmqeLKFEtJYZC10WcfdD7xNbp/bmOeR
R0lmT8ZEQHsGPuli7Me9r7lVTY76NSyFrTFc7Pa7hJTMSrv5DHZutf0KwwVJ
4zXyaFBS7DZBXwE9jr95wCZIfveyp0zLp6KOocmb+wapq0lpgWZQ6KAa2XuM
r30W9GB6f6DjhnmaqX3LKWHnfkGqgfzWaf60POv9LB5VtJ1wZY6ZkKzK+8RY
v0WPEUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEII/2kKIka/z/VnaHGgZ1HpIDGNGXI01qAzn3O8t5ev4cUIHjXxv1gc
my2kqvahNWw6d4+uSSfQlWcrIOUJ7jPGzqum50rOr7QCJHJbf1T+2WsZFQx9
1Ov6LrhQQqf9BSqDvbk7fsa6FhnTD7M0IsptknQ1S30WVn8L6C+V+Xf9+jQf
aEzPozHnE7I+BQoo+5lj+QRn7u6f7pR5PyeFspS2/2SJiylLEx9smVGzk/sc
ri/QLThjJSWB/ex7CYP4VCoobirkB3GOz5zdf/Xwmfnk6uyUFn1fQCUSF+PZ
NvLrEJZ67EyaG8hS868ni67+ZMj45BGdip+yz7/MesvUimUsmZgw2gaDaih9
/0irtTtryC4tQdz9K0Nfn5ZHHekspUnPKwuZn9z3eGNf1O8L1gL6VdQjM3B2
NR32fC9N8JH9uTIU5i7wMeXRkTxjF2aAkJprlISF7+XXV7zz7t2oSR4MPcl5
GXn2m4j2lS57WRxR1urvPYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQ/rd7e4XJ3tDlDGmSenCnWhGJt562Tw3i7sX9
cij33/6xgJKPR18raSynxTdbDK3KuPt1bOik0Q2zymkoE/nEW1hNGSmiTS+y
5NdjTLg3emEUw1DIDe9qpkFConbPNLJTuDt+18osDQUuLKVZNikcPM5Q8rfc
TUIF2buCXrc6L9+km0d7hpmeLDYQkDlPL73Teu55ijfoZIw7wpK6eLmmjT9L
w33j7h+y4O5Ado44/SPITUr6+m2mtVflk9280BkH1bl7jLfJ7XMb8zzyKMns
yZgIaM/AJ12M/eTXY1y0uc+VsrMsZQ86McDmNEulHxaFKSdwr7+L/3SbebNZ
mnvyIP/gMoYexWUE83xFVNpUfiqskCFH0wfdPOMltJ/X0LZGIpR5Pedu2SX8
3lxOEj1fw4EKIrqisvahVZHsz5X6vZiCNXt4VHxn1pSgOUJ6+2RgScK/6IvK
6l2B+uk1wQzNvLVkvM04MbU76vDBcxx37xRCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCP+0zzd2ODv2hZjsexRXbejL
0NfDJenvZrGc4/3fmM9P9mNouvBb2FkDMcWvcf3Wu23rddWGevXdvN6LoYeG
s9vW/RJRZxcFrZBTZXTnuNhpZYqIlHt1LwsPl9IQk4bSnXUM5zwdM79quCzk
UeKRAMeGkUL6YTazLvC1/Hp0strL0yT7pIaI5jFurM5AKf3wfqP67gFDB0o8
cg6eYqnUY+y0Z9EstV1W1m7DX/szd0lc+3QAn9pld507+HIV6a1d1nKyC3eX
r+jOjZV67wTkMFsxryyumiy7NSV8PC17x2/v9WsZK0oYOr4idnDHOxIyz3h8
R1mTuwPJZe+LG7NLglnSc0p+OV2Jpcp3Y0XCrhLSaFS+VdhdSqvaBo4UOgnp
bZxDLDs/nXMe3Snzfk4KZSlt/8kSF1OWJj7YMqNmJ/e+1CpEY9ZUMtQnuECP
LZJQ30j17wcCKijg/hW36Vv/+vsfHyYf1GHp8nA/e1UHCd3pvetB2rBySgq3
dtqcX03Jqia/bdPk19Xkcgkbo9p1A5+a+HWK34qrqN7uW/2JIbL/rnXsQ/Nd
m1ja71K9xqUzS47nlEx6mEio3xOV5w6F1ZSlHbXjobKU/CMnvo2K535f7u8I
T1KIYslns8uX7a4sLZqTVD6oDXeXsm3ZPHNTLR6FVCn/jOkmpOARvgY9edzv
l6dWr57e90XUvvqDgVeYlN5e277x4xfu9bSWb/K7nkhfwZDn68eVmV9FlOXQ
fZBqKHfHlcuq5v2Vnt4MxT/98G5VNzEt/GkVV1Mo+zx/N/PvvLZemy0mtwnM
+Wn9GPIwpeflttz/XyCEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCH8d+p1XF91V7KYmhXMZmdqMsTXO7G3ZAp3L2ve2X0T
2rszdDNFqnapUkQdMz8Nn+vaet2wHweWGWZ6M5TY8V7DW20xXbbJ/LG/hHs9
L1qGO7Qrrabd09b1ClWTkrLfndW5iQx165Va5DeER73qZ1wM7C+kPW12T7fL
a70eY2VA+w/Xs0Rk437fZtABKTVmhgRf/M7do9s71fTImQnlNCpg04L04mq6
dqP9gLPpEhKtTNr0eBtLfgemLew8gKXHoccu2rtJ6GXEh7YdlfhkLx16MSe2
isakqo6Y1U5+XUFB764Nk/gMqfof8Vz7QkJPBnT3/jBR9k6jse/M46u7S8mi
Z1xflUVC2heXdWnKtHTOfmPxBp2McUdYUhcv17TxZ2m4b9z9QxbcncA3ycpv
hBUMjXJV8WQLJaSxyFroso57nae2X4/eKCmjj8tGRUj3VlG73i0bOrSIaa7C
+Bm+cSwtnTMud2ckS781M9uv28T9u1zaKQoUFvuVU8SjvkGHflTTs179Bi4s
kN+9fOqh2sl3C0u6DRdylvRk6V7fCR0ezuCeX+Pt2nO+jSKq0K0bdfSSlF7c
fzrPSYWllXbtdc57s3S+78gJ8Z8YiungY7j8uphzHrPi9fvu6fNo7IK1T6/2
EZKzraZiWD73+3VqxXum951qsiqfbJtXJ6HmI/xxj4//DXuMoZKWXr4MGdSc
nHJKV0xugy+MD66X/Xt4tjpOedVf39Vzz/z29aoW0bmDmXM1l/39eoyLcpx0
J6aKyd7f5Mv3ngz1G/arZcAM9BUhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhNw+se0x68taHt1W+dIcNlFIbY8OHtgz
61/06BR3J25alE/hDltDD6YKSPtprqDrZO7eXV/96N91LENvHMbZGDZJqHZ/
geaSl7L3D+WlnfY3ZoU4jxbvj/1multArt3LfTwdudfP5ZqcLes/VbBUl3Hk
Yo7GJxq2JdhU3N1Fbut84T5fpTgjj37NHnJxVpCA+gVcPtjLWfZ1ysvHs9Ua
lesZyvt+Y/ABNSml9MnS9q+V3z0WTrnU9rlrPh13OeN4/pmAFgUqm/S05t7v
Su3SLm8f86ijVV1VnJeQtmjsnnnhUet1SiGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEP6zjFSTTrxVU0CTFuxqetBW
SLUOOTVZJdxdO4ubESMuXMkntdXDNk6pFlBJ+czVvUdxd/NSGhdP2F3A0LQg
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
PHX88s3dGDJLqTq1YSor8zxtjFY23/FiqL/euIcVv0UU4vpC8dsZ2btqd53Y
dmYTRPTlUopCKkkp18HrhP9LhnN88qiev0V7WSqdZr156iyWjqnnDzLMkZDl
mfU2c9YwlLq3qsPWTmIqezdkpGO67Ou5XDLiZbADj2Ykvn930EJIs+9v6zP2
DXcfMnb0vdWfjAS09Yco3oGq6dhjrXaXPCXUuU266aLNLLVJOWYzoRtL9Scu
2jaThHMe55Hvb1SWMzS/c3aeR66ESDih1wtn7p6h5rsb1sH+IuqxV9927RIp
pds5TrxexH1uR7R693J/x6dfPysa53SqJq1uSzvXTudez2pzy0Vre0rJNDPg
1Rs3IY3sueLw7P3pnOPTzUTqB7ewlDR4uWJ+T5a22zYKJDO55598ZzjbECug
7JC22hO3VtPqzyaX4vdzj/cZ8ax3/naWNLTfmA82ZGmW7p0R7dZwj+fSreru
yHyWoXEnt9Xd/CmhvmVmW01fcJ9zL0+T7JMaIprHuLE6A6X0w/uN6rsH3Ofc
pBPoyrMVkPIE9xlj51XTcyXnV1oB3OtM1Enw3TCOR+PjlY7mGgnJub3v3MZ3
8uuRTr8f91hjB0v84ZO7aw1kSXP11SZ3b9nPrXLBd0rxZGi4olWISbOIdsaK
H808WkYxGb32BPqwZHDWc/c+IUNtv8/wnf+UuxvZtd1P89eWItpRe251gpWU
hsa6p7T8i/edy1tdla5+WcWQaEc3hfntxRTbfltn0V35dR2Np89RM70tpvhI
/x93ujJ05lTmj1U2sn8nIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYT/XKVi25OH94hJs6JDjlmzlFYYnLfzHc2Se/8+
wXedGTLrnVL54q2IJjd3XWHRX/YeWt7TLr12/a6mBU9Lf5XrSKnz5srCR7e4
+2yeg2zPe21laUKRdKlyn79U0N09fp7sfTkTO+v2Rm4MDY9ckLuoXERl0xdv
vTO/jMQrbSPXpxfQ3mvRVgfYchq5/lh4RDl3H2+qylEPRZGAisLNMmouV1Ps
tOh1Fonc61G3T+4n3ciSvtmEAM2OLL3uvEdJ30hCGadeOoWLGfrWW2e2t1hC
JDHbzj/J3QlM5kVuO/RYRKJdb3PsIqSU7e2sdLie+9xmLOkwP6ILn4bqDkiy
PVNF935Zigaqcq+TfWtpPl5bSu5aitMLHYRUeCjSb5sud49xSFZvvYTDLOVO
idCwXctS9ty38WoGUs7xNiPGRyvO4NP82AfHnZ9WUfI7xcuvdbjXY7F1RKbC
OZaOjbzsk3qaper+FztMSuSen8uUxsUTdhcwNC3IukPlKQntu940elWhkHN8
ZUD7D9ezRGTjft9m0AEpNWaGBF/8zn3ObOik0Q2zymkoE/nEW1hNGSmiTS+y
uPdVMFhz6vswHqUf2+g00lZI/VQ9rrtmyK/HqHG75cjd9SwV2wU6L2tkqODL
NmHtV+5e4nej0yadAxkalL820d5cTNf6fZqgq8+nxd/Wr6vdw1JB7pzAY9NY
OnMtZXJUhuzvXa3+DGF1ZjWlPe/fv7xZQk9UX/+6d0b2HqNkziPNdasZOs8f
U2iqJqbjFSpRDx7Kr8e4Q3w6ziJHTGaev/SaBzBUUqh4Z8sc9BghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh/G9ycLPl
2vleDFmZjTkf8ktEZ84uypwRJ3v3TOhq0f5SDEsewVZkM6WGTM6bpukfrpF5
noltQ6cdDWNp9Of8LHcLloR5vB4KUbJ34dL4d1IMpvAouMvlp/uHCmmI3Wut
wBzZO3gp6g32lybk06/OFup1NwV0f9GOrFXTuHt3oZqnPo6sYshrctIbyScJ
nSwKC1sQwt1dlJc+Lns7iH7wKf/jDt0s/Wo63ZA+uHwB97ldbcrKjRwjJdHO
kMdXh/EpKGlldlXnYM7xR7R693J/x6dfPysa53SqJq1uSzvXTpf9XuRlp3kx
5tekDEW+rzp0qE5CxR47N2oky37OpxR3J25alE/hDltDD6YKSPtprqDrZO77
lVVvL1/DixE8auJ/sTg2W0hV7UNr2HT59RhlNePTA1fXAJYsLV9629czVJtZ
ufF5lfz2e0LFPufXFpZ0fLvsDhxdQw1dQq7v2sf9HfCZ4HFtWABDz+I1ZtsM
FtN8rVffsjT4rf5dhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBDC/6lNw/tBSq4MidWFB6yLRRR+ODTmysQy+ji7+3Mf
LZbWvLh7dFwzS9k7HMMfecneY3wQa6iedYylYSvyksUhLO0f1ZyfaCv94/v6
tsv5RWl5AV20t1OobSmnlwumG5z7LKIP0w4t+RScT4fPHOnJvBWQwM/tgwlx
9+uKcgr2v/vA0IZ12sZDTkqoaeXkn/a5wj++/lUGRhduDuKTefVp++7Xq8jJ
YVn8Fw3uXqKeu5NJsY2Unpz0rAnS49P0NeXHjVKCOMfPWNJhfkQXPg3VHZBk
e6aK7v2yFA1Ubb0e43IPkX/+R4buvJg1b+FlCVkrhChnN8p+zhY3I0ZcuJJP
aquHbZxSLaCS8pmre4+SX5/wl0O5//aPBZR8PPpaSWM5Lb7ZYmhV1no9xtj4
X58cwlli2yl6DB7FktLpiYkTjsl+j/OVrsU63WTIeMryhWPS/3pfrV1i/afK
/r7fcLx17aszQ8rJw1uSc0TUY5ig7Kie7D1YCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCH808YNzNt4dZSU1kkEzY9Z
hj58TF4d85KVeR7354eHdNnF0hB+rUnNGJb2f72Z5H1a9i6cq5//7PhNLE3Q
SvuR25ml3MM9aqebyj7PLFOPcXN+VdCx6zs/aq8SU2gnHZ2FN2XvQDapOfXW
rmIotP+Erj6fJOSucvJmt00VnOMtA8Ir1uxlSeVhcbr3DJbWO6YcWpj95zuH
SlXvP099K6VfEqf2t4KrKDbvZtDCtQWc431c9nYQ/eBT/scduln61XS6IX1w
+QLudWq+u2Ed7C+iHnv1bdcukVK6nePE60VMqz23YUpmGqRSSdKKxo7668SU
nlZ7duFt2e/3iW2PWV/W8ui2ypfmsIlCant08MCeWfLrKwoiRr/P9WdocaBn
UekgMY0ZcjTWoDO/1c6N7Z7S/HWslMqMh4Ydq2XoVN/aNdezZH/fuTwoXJBm
4cdQqS37PVNPTCuUUo5P/8XdYxyWpDLlTZmY7K7s9WCHMBTf80KFp6P81gMh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hPLyYprFykQdKdkkJfQOLmXIIlelZHsqS29O/ejw/CBLQ3cv7xm7hKWjc4Zb
vv4le4cwrFyn5HEAS+5hG4LvfWXo56QY4+US8R/fl9eTrY28YZU0jYlwSggX
U8Okghdzn0lp/O+y3JEfGdr4PeuK0iUJBV6yv/qoTsg5T2HWq5pJZ1lSVE/v
XneSpZHz8gY1npG9EyirbufMzoa+klKgi77JqTVVNP2FVnneBO4e4yoDows3
B/HJvPq0fffrVeTksCz+iwb3fSXzIrcdeiwi0a63OXYRUsr2dlY6XN96PcYL
Oha+c0ZW0kqlNl5Pdotpok2n8oHpsp9zpJp04q2aApq0YFfTg7ZCqnXIqckq
kV+P8fYKk72hyxnSJPXgTrUiEm89bZ8axN0n/NN6xAiy9nb46/3N+/311QeG
YryCHJ89kL1/+NQzzsxyCUPpdqtCFhSKKDRKPVNzrOz7GpkyXiUyWkyrgorv
31Jg6E1ESRfdcegxQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgjh/81JQgOP0MU8YkdXX9w0RkiPJjooXnrF3dOrfbnT
yCwnj6740fnPmwR0YNrQ9IuL/nzvkcsuW4wTim3yaWnHml1+dwWkrxUa3WQj
poCU/uMcGIYOpduat22Q0MLUyIOe9ys459FbYvmFvrDUPdjM1qyphObl+tXf
bnBqtX05j3x/o7Kcofmds/M8ciVEwgm9Xjhzr98gJykhf2M+9ZsZG1ieIyAt
w02OZZbc98K75+orjsqjj6pDP5QuFlBwbfxmi2Wtd49cdsz8quGykEeJRwIc
G0YK6YfZzLrA1/LrPUIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIfzvVP+9X7iPMY/SBs4v29hPSFGKXjvO5HH37uo6
p7y87pZPN4Ql+w4/F9COUW3tX09qvY7fQP3BIcXH8+jyxbAFVu4CSjwTtj7H
jXs9R7cW62aUMEQLXDcF3JXQufwFouvdKii7zjFf8ydLmmbqgZdEJTRv6tn9
L7Rar8eYceqlU7iYoW+9dWZ7iyVEErPt/JPcPcb8dy2ll9zyiD/drd9EGwEt
vb93yMNV3OdwOWpIlu3FfKp/4dp4VSigqYJ4T6vRf78eY7deqUV+Q3jUq37G
xcD+QtrTZvd0u3/xfEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIfzXhhgGvFJPF9Ny22UGN3QY6kNOD9Nmsn/8d7Ob
lqzUW8dQweP+rqY9xKS4q9PZAWVl5B3/5MGrNQwptqmf49hFTOKo4pU6WWV/
fD09f52mND8ebbXS2l9mLaR99Hvgopciml/vf++kh4j2PjNPM1ogpTPS4KjF
BQwdPHn6IztURCvyKtrrjpLSqIhfAQ7PGQotcP5SlManFQdCFHcrVdPijmEP
70+W0OfR3du+PCygvttbTjiEVFOkuaG1aK/kj+9r9/SXpknHWFqmZ6UcGMKS
uwo5bZglpejjtjvsNrIU7Gy+MlOVpdgpO4OMB0jI6KrXzuk9pCSxajmQ6yIk
ZaXbK7t7pHP2GwNS+o9zYBg6lG5r3rZBQgtTIw963ufuJcpLdfvkftK/1q9v
NiFAsyNLrzvvUdI3klDnNummizaz1CblmM2EbizVn7ho20wSmir5qFXcqZye
nTU4/jytmlr2XG0fc1tCzc+XXC9ayKewoHmnU7OqyK6LYFhWfwkdUzixceVO
lrQvTWwxHMLSzq3ndsVskpDfjpQzLrtZ6u2WdejcJJYSNwTOUb8r+z2+bv+5
+GVLAX0pYhpOqQlpVdy4yKNFsvcVX7QMd2hXWk27p63rFaomJWW/O6tzExm6
c1zstDJFRMq9upeFh0tpiElD6c465o/fS0zts8JJSxl62CH/5fdSEel8zPlc
bVtGcxvLk7RXMnQlllF3aCMmp4ahU69c+PPv9Z92WEtSmiROTJ/NHfz6qTD0
KqsqpNbyz38/IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYRQSSO0Q8BKht5/cRbfUhRTbKdcjUmJsnfewnmNCkeG8mj4
k73G7QYIadJGnbIBebL38cwXum1uN0tAsYV96s0dqslY++PMYH/uXt+2c0si
I0QMXfbXmHy9UkJ32ih+G3Cogix6BvroHmep5y7yb9zO0qKyDy1vnKQyr2dt
ctdp0U/zaKFHZubw9QKKzDU4m+Es5hyf8ag0LG6alN72eHrofn8+xdxrvFZ3
LYiz38g1T5ctxgnFNvm0tGPNLr+7AtLXCo1usuH+XcuA8Io1e1lSeVic7j2D
pfWOKYcWZnPPH6p56uPIKoa8Jie9kXyS0MmisLAFIdwdyNjR91Z/MhLQ1h+i
eAeqpmOPtdpd8vw/7dz5X43rv/jxjLFNZR4yDxm3vQ2Zvc0zmTIkIgpliDKL
jZAxs5A5lDm2YZuHyBBRaRlCLWtlTfedzEP4+gPOfR6nc47v3p/zef30fLQe
V+913dd91Y8v7fkbmiR6r+itysNjEflcKmTIghPuScrsDM31d/Qh3Wq21UnO
qWsvbapjEP3HFj4l7mX//vxs642pEDRljCJna/TK9fqbWQp72BWfve1fv4uI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj/uXOHJ21/
OUKRgBazbtdLN8upLbrtDsNSJdn724noO8ky2DVycfE3L6SWX5vYUvrs9/Ra
t5m6dVioXmrG1lrQYYZJht/voC+1VLv7V/t07a75XihimhXmW+GuVVKSClRs
1U+7K6ile1KeqI1TVHlbZe4s9YMiKxxLGy69scjHL3uXx41MlPAWkWd6dNZL
1NYaJm9f7S5iniVRMYXcbeI8rZnZ2yFNtm1Z6nRfpmmuX9L1Rv39YaqMrNom
79TZqnjZi/uMHj9+v1qd2U82J8qBPQsHtvHSS+SOhVPiR2h/78ObtzPa7VQl
p0NMqdfhqrj0T6z1cYd2f9Jp7ZeY6AeKpJ8aknxqi1Wcz233qXbPoLm+s/1G
n5xmvTxe9Pu1jAMm2dRlzcRGkdrvpZ5lT605gaq80S25fv2NIsOf5y7z2qS9
f69ub+K29dFJ75R8cZENDdLJxbVA8J1/Xo/xU+jIGtcnKBJZ8NS7uyUtcqDT
9U8rUugxIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL+
X3dqIeO121V04uBxLe95J4O0WDDy5P2k7HfzbjlPiHxeN0mi8tn1PhOlF++S
D5zyd9fu9WlpTVjUuMsLRRJ8en4oEm+VrYf2jo12y36Psfn5hErhTxIlomnw
9dfz9DIv8oJyYmD292O3bM4fIR9U6Ru3Zu4JNUUqVapSYombu+b60uP/unfk
UqKsOdPWGhOol6aV7r0xDflvfG82/fKLe7mSLxUJrtyqmP9Tq3jZh0eXmKV9
bmcc3vWNapUk3wo3cngdrZfTg+ff9O2ivc8DKY1vTO+nk26RCfdWNTJIr9N/
lG/+D+wrIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
/gw9ZuYJevUuWSpGPtDF5jXIhFq94u89MYtDwYv7p/ROEtNQ86XqZ/Vyo59/
/dkds98h9LiR/1nmA0U++LwrsD/cKj2rLhmzOcHw05/rtJcSdjkgUbYO/dPH
yVUvFYctv2AabRF9g4F+7/JnyJhfV9UpeytF8n3MbX00d5DmnI9f9i6PG5ko
4S0iz/TorJeorTVM3r4/v8fY8nvqfZdHisz8cPNg7iirTI3qe+jca+1ze9Bl
7bCn05Nk3Y4NZZS7etFPHvHgV9Hep2Vsz5VTYpJl2eE1bULVF+IyJWxRyAt6
jIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI+O+tqdyZ
pbed0iWkevfWfWdZZO3JJyfWn7VJ48leW/58pIhL5e9fn++3yvmWu3Kv/pD9
vuKaK57fjmxTJepsYvmma1WpXavhwgOLbT/9uWb0Tbzm5msTt93NE7ZfNUqZ
7Zt6LB8XL4UiOztEBCaKV/5m7Za56mVqEb3ftdHaPUP3pDxRG6eo8rbK3Fnq
B0VWOJY2XHrz8zuNYy7M/aj7LV26KCHu+xZZ5F275Ng+V7TP7f3iIbHPXyTL
nr697V59fSE3BnatvuuZdnfx197t89UcoUjDlQPvD35hltSuQ+eeGJD6t99H
RERERERERERERERERERERERERERERERERERERERERERERERERETE/x+Gv/XP
bffJKJONw1eUHG2R8FbXFoUeyX4v8cmuzDnOLxTpFmgavO6uVT5vbZM2sb8x
23Pi4u8+TVulit/OX0ILeapSpVHR2l++W7M9Z07k1R2FJ9gkZ9Xb19MTjWJt
03fHBlt8tuc0P59QKfxJokQ0Db7+ep5e5kVeUE4M1O4xNioz1b/iZlXKLJaA
j/NUGZz64Osd95/fn+xR36eF6zejhB1Z8Kikr0WCCzk5DYrW/t5LaSfOVO+o
k+lFDlxeUc8gdXvHFZ8ar91vbL1jSifXcYpcXPaywNxCFkm9V9fFLYZ+IyIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi/tdcuqrJ2Hg/
RXLN9knbUsAiv96YHzju4s/v2r3vf3NzUrgq0Z+8LjRcrsrjGa+++06xiWPD
wEfjBugktnQJa04Xg9zfXue3mDjtLt//lr0tXneCnidKbU+P3x4t0EvhFPOr
sgMt8vJg8onmC1Vp3HHH59wNVXEs5u8yeYVVzukylTAfvaT4nt3U1MskGcYc
R71nW6XP74NeOVoVWbO3wJUgm1X+ypoT2GqXUd61Xl9xWHubRAUPK5ZRI01m
pQ95NPLetL/tvf+xa9jKELMiBwIcOxxJt8qJHDnfV1lrlGdNS+W6sU4vFeZ9
3dJvtklWNqjR3rxMuz/56saCmr/HJ8rBybL72Sy9hHapF7NnsHYf8md7rEmZ
7+Zlqjzv0j6ocw9VwhySatWI195/3QelEk4F6mSFfc7Cug4GeVFsX/gvN7Tv
W8TbFpuOLVWlRo53tw93VuWPavlm/341+33On23AnQYDjk1WpKvh/cKd1S2y
d5zn+3K50v72fSEiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIi/tMds/uVz2RfRRZsjHOYktci9cbsKJv32M/vNEaci+kxerBO1Cktq09v
YpBruT607xlnFuVgnYcNolQJP3t+UZ/eGVLXKTnzz80ZP30/3yflcI+tkSTn
dj5fdGGvXnL5vZ+Z1d0iEbXXXln8JU1efV209Hh1kyyqX2LWhEFWOfhLbp9r
c1UJOL7XOKqCKnm7HGofN9Aqxcu0zpjW1iatSucvkFAzTQ47vneZkzJNs9/4
s5+r9unaXfO9UMQ0K8y3wl2rpCQVqNiqn/b3BicPyXx8KU28Q2fnXJLbJEML
Ljx7uoNVtt707HNneJJYmg6Krn5VL3UWHYrIaPf39RhH1+q5e8yP82/12DY8
b/kf2lVc0rK/di/xl9vO/Y/m18m3Fn3PTHYwyM3HC5ufe6jdY/wr8sWG0o6q
fH9s2D3wsyoXkj5aw0f//HuYXfvvXN4qn5ci0Wdsv0Slm6Xg9acN+3j+/L9f
RERERERERERERERERERERERERERERERERERERERERERERERERMS/y5XtKxb9
65BFtrkUcCzioMjG+Y4jpIOa7TmtB38JfeGtyJxDltQW78xS4eTB8c0WpkrW
xbWX1/Y1S4ibbtOD7jYZHHcpale8ojnn/qeawZV9FBk3JSCr+nuzROS76rF5
sXYXLuWQR+L30jpJuTXGI7OUQXbU6vxiULJZYj7da+myVJVOM/o+e9hRlbuJ
5Wr5XbDKmaDtnybb66X2uh6t/eua5NKJ9RMnelil8JHPBd+4mSWwZPN153va
JKlGaGTMPe19aimBZWIbv0+TvSfSD0VXMcmudec/RAywSvDblXpPkyItLiY0
7aW3SvKqSfYXFxtl9pRaTbNmq/Lrh1yfnxZT5eKvbZb5trSK3/XG8fNL26SA
S8VKcUMNoh91cvSt8TGa/cZzukwlzEcvKb5nNzX1MkmGMcdR79lWiYu/+zRt
lSp+O38JLeSpSpVGRWt/+a7dG9TSmrCocZcXiiT49PxQJN4qWw/tHRvtpt1j
bDBoRFCeHnrZ9LD8mwb9TFK75KPu0wOssip8+yO1nlm8E435KjaxSZOQb4H9
rmqfcztDdZ/goTpRm5r2zGpmkHNt++WMuq3dP/ScHNBr7yxVWhW/9Ol+YVXu
ryv9qmt97edtmyu4y8aFqjR9lnTTq5EqhkRdabvV2utPuqt5fm9llsyoM3YX
xSb3+43ZEnBDe/9TevzZvet4RY42aB9f39Eia4s02a7e0b7P5540Gr73x/pa
zgWWhBa1iNuQvUHz7v/zuohXZxbY2TzWIn1LP3k5o4Iib9elxNzrkf3/G4iI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI/ypG1PHZeWCz
ReZsPVWyWx5F4oteff+wlSoJW6Zt2TdcEa8CI0MC08ziUPB889g+2h25uEy/
Jdfqm6Xu3PalajW1ybwj61dnXlUkuNRe1ThSEdf1n8ufVMzycsnAIZGTtOcE
Ny3wNL8lWYKr9Q96a2eQHjGdchx8qt3rK5h7/YsSffWS0z910o4BJmkSXeD6
vClW8euxYvb0haosEw9ftaEqg5dE+twP1e7yFbwy53P6DLOkR0WVc/CySRWX
8r4PUxRJkK2u3XamSdHEi+OiX7+ULp1DXCs0156TOnljp3ZmRV7Vi4neY7TK
tB3X6/uvMkrZXIXbx5Wwyc5LHW6ofQwyrlGsYYpDjGa/MaL22iuLv6TJq6+L
lh6vbpJF9UvMmjDIKi8PJp9o/uO5Gnfc8Tn3j+dyLObvMnmF9n7WXPH8dmSb
KlFnE8s3XatK7VoNFx5YbBOPG/mfZT5Q5IPPuwL7w63Ss+qSMZsTDJpzWreZ
unVYqF5qxtZa0GGGSYbf76AvtVT7ewe8CTgV7mOWZVcaXKo50CY7bNNXD01W
5N7y0kVW1tLJ51n3cxesZJAWfYo+uJqo/X4XvnBKOR+oitfCGdNPvVXkc7v1
tUdZLZrr/9pUw+FmmCq/eSces/w41xVNspIie9o01ydeLlJ28XeTDLz8/NsL
J5sUDkp/eO64do/Rwenoqg9jFCn2NX7JUzuLrJn5fe3M3dr32SnMu+ZOH0Xy
7lvmmu+jWXovqKT+sfyf12Mcs7la/sXHLJJl93uv60UVSau6ZVlKR3qMiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj/XZNCcry70kQn
4e+d+9g5G2TSrAerl9/X7u/9b7lj3NXz7WyJ0tW+yLAyS/Vyv1DRouXdLHIu
rJGuf4MkeXpiiPgc1IuTb5Xf6nfT7vv9bxmlRoW7v1Zl/m9dTnz/mCIReYuO
CX3krtlvDH67Uu9pUqTFxYSmvfRWSV41yf7iYqN8n5TDPbZGkpzb+XzRhb16
yeX3fmZWd4v0tnjdCXqeKLU9PX57tEAvhVPMr8oO/PnPlV3LfNsulybrZG6b
4itS2xtkuXx3Hnzj598HRERERERERERERERERERERERERERERERERERERERE
RERERERERETE/4oj9QkNFnkrEjZtQ/Enb8ySlaPCtd3zUrM953RidNGTMarM
7Jd06plnhoSdW69/vTtDfm0yc96AlapUt//awt9NlXaLyxf8lG7VnPOk79kR
SeV0Ej/scf7+ZQwy7GCd1JcPtDt+Z44U238sV5L8Ve35yDXr9eLZObzllD7a
fcL1NbquTElVJGttRKDlmlVS27fMTG9llIKtM0Ke2ullwqDXy07VNEnJi6Ed
mrlr71PLUsaOHk272MTD+6pj+SppklquybBp0dOyPUcCy8Q2fp8me0+kH4qu
YpJd685/iBiQ/f082ZU5x/mFIt0CTYPX3bXK561t0ib2N2Z7zi3nCZHP6yZJ
VD673mei9OJd8oFT/u7a57xI99FuQz2dNLywrHaeKgZpN9MptUriz+8xel1d
V7fIYlXqpr36NaOZKiveRu+fsF373AyejfJFrVfFZ3ob6dTxx33dXf9StXUZ
mutz1BybdWKMIpWrtjhr/G6W2Z6xOd/vyP7fCyIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIi/msZ3tmzis9IRaosW98w0WqWJRsmtLk0
LlXmVPE7fmqVKhNGB+ae1S5Duu5x+3PWGu2u3YFgv9UF1qkyYstclxx+qgT3
3bfBsaJNfH/Ld2huXp3UunH/g76wQfIGfd/c4pF2x2/2ttevhjVPksrX3U+4
HdXLtiXD6qldtDuB64ZWdfR8rEiNXA/LjzpklbKLX/s7fTNk+xx6eO61q/tn
mgSVmXRw6NeXMqf7QfupbaySc9XUDt172aREtZzTijulSbuKpt5Xlma/x5gg
W1277UyTookXx0W/fildOoe4Vmie/R5jdp3WeHHC+keKRIztsN9vv1WsK7/6
e703yLnroxqudU2SqsdGGU+e0cvkXWXnb++ofc7J3t9ORN9JlsGukYuLv3kh
tfzaxJbS//we451tnwpc/XEP6y0ZVWbTMFU2ujZsHfdN+9we9Sp11b+4KuNi
T25skaXKrflui86N0b63XpXLTz85RJHfy51Jj71rlg5ZxbwbVabHiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj472rxS44X29W3yfTF
8XmyzIosumDZcvmaKkXMLmcSVqpya9LtXR0HqvJH4AC7C1btPt757TVrhkxT
Ze64lVvbfVek0ILM5/fyWqXtL12f7SucLmucnZv2D7CI5EyPe3DSpjln5aX8
Zf2fKZLvXm/r5XNWidio21S8hlFzvUN3jwtnNquydWvFXu2DVdm59FhAzHDt
+VoWbjIyuXWcTWyv5wbFTXwpg3wMBwZ0S9bsN2Z3fsErcz6nzzBLelRUOQcv
m1RxKe/7MEX56e/XVO7M0ttO6RJSvXvrvrMssvbkkxPrz9rEY2aeoFfvkqVi
5ANdbF6DTKjVK/7eE+3u4tzhSdtfjlAkoMWs2/XSzXJqi267w7Cf3zPcc6nR
2Egnm3Tav6/c9OeKNLpvnzLvoqq5vtO7hFq5PRWxOBhC2/94nkXrgtcfbKu9
T5ulZ/i6pRYpaiwQ/3uWTbyr7+49qan2fERERERERERERERERERERERERERE
RERERERERERERERERERERERE/L/h+I+VzpZ3sYm+2hL7FEWRsq7eVYvcyH6P
LjXhvmf4ClUGvKxvONpXlaAegRsTn1slpNOJvb/PVOXW/si7ffKrknntaJ0v
lbR7hm6To+tlqUYZXT3nwPEjLFIowqFbg4PafcUiFdqenpWqyPEFQUtmx1il
UWjJmvWba/cbM3e/rnB2tSreO0zz2nmpUmXA3YV989nELfJ6mv0dm6x+kny4
RcBLWfDy6Z6HA5OzfQ4FW2eEPLXTy4RBr5edqmmSkhdDOzRzz36/sfCRzwXf
uJklsGTzded72iSpRmhkzL3s9xvD3/rntvtklMnG4StKjrZIeKtri0KPZL9X
ObWQ8drtKjpx8LiW97yTQVosGHnyfpJ2vzG3Y3CBwLGKJGQOsRzPaZFNhe47
tov8+f3Grc6JMw81sclEqz7rvKrIg0fH/Nb/J/e5Tlbr8QPGKNLm92a7Z38z
y46dg69326q9z80lss70P2WRY51bjgoqocjvZ15um9GZfiMiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi4v8Vj+/rNOnRaEVMGw67R2SZ
pWXxJv3mhGW/p9d1t7X2x0o6WXfFrvLDcgYpH7tpT9kHZokod0XXuqJeTpcd
f+hFM5PU7Nwlbvwo7W7h792a95+wXZXO0d0H2W9Q5cin8O6fV2p3BUvcPtKq
0atEuby3xGL75Xo5d7P/1rn9LdLsc+KVO+mKHJ6WeWxYilUeBYzb1mu6UYJq
zxnk09Emaf4pPSzV0iTH2B1h/lenafYbs3sOD83jr51PVcQ3xVxp6jWrFN2w
cejplkY5F9ZI179Bkjw9MUR8DurFybfKb/W7WcSvx4rZ0xeqskw8fNWGqgxe
EulzP9QqZ4K2f5psr5fa63q09q9rkksn1k+c6GEV5WCdhw2iVAk/e35Rn94Z
UtcpOfPPzRni2DDw0bgBOoktXcKa08Ug97fX+S0mTruj+Hc5Ye+Fv26PUyRn
jjeubkUsYln9ZKzTzZ/fb0RERERERERERERERERERERERERERERERERERERE
RERERERERERERPyfqMvadfHqKEW+3NT1zHplloiQqBV1Z6bK+YObDqZ+SJbG
gc5nz9gb5FlZg++CJ9o9wHTn5PMxXfQy8a65pUcfk3iteRo6fLJVLlf3u1ov
TJXMuh4p22eq8vzBRt9jnbW7iFGuZ6JTDyXKtoujn4X66WVo23tZumEWzfWj
c0xY+dzVJj7F4x7PL5sm8yvlSov+Y5pmv1FrjkN3jwtnNquydWvFXu2DVdm5
9FhAzHCbrBta1dHzsSI1cj0sP+qQVcoufu3v9M2gOae789hOw62JEjxk6fz9
S/Qyy+PcqDZuFimYe/2LEn31ktM/ddKOASZpEl3g+rwpVon5dK+ly1JVOs3o
++xhR1XuJpar5XfBKhHnYnqMHqwTdUrL6tObGORarg/te8aZ5X3/m5uTwlWJ
/uR1oeFyVR7PePXdd0r2O5M/21tfho2tOlGR5POVPeuXtkjOxYV2Vkml04iI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiP8MZ187viuu
qk52nB95tXl5g9Rzyb03Kkm7u6il16l5URGFkuRLyT8O+2/Wyx+tRlUyuVrk
YbvuKe31iiSFfKvb9LZVstK7Bh3rrt1F7J61v87c9ETpvHtZkc6L9VK92eWm
uQZo9xg31Ss8qV2WKtOuFNrXx5giNf9IDCj8dLDm+hK3j7Rq9CpRLu8tsdh+
uV7O3ey/dW5/ixSp0Pb0rFRFji8IWjI7xiqNQkvWrN9ce59aFnk3vvL63Eky
995IybFBLyc+Zpr79NHev5YphzwSv5fWScqtMR6ZpQyyo1bnF4OSs/9eEBER
ERERERERERERERERERERERERERERERERERERERERERERERER8X9upzLRQ7NK
6iRs4p3870oapPWuLl2jks2ydub9txllk2S/+9Mdr3fo5dj6hB4Pemp3CMu2
d+nZ+okibYeeijpy1CrJ9z6vPZzXKOXf3d2y7VyibN6Z1jJ2sl7auYS5L/PQ
nlO3V2LOhzkypGrn36Y0e5wigWsKtjjRS7vHGOV6Jjr1UKJsuzj6WaifXoa2
vZelG5b9XuLKS/nL+j9TJN+93tbL56wSsVG3qXgNo8ze9vrVsOZJUvm6+wm3
o3rZtmRYPbVL9ucHNy3wNL8lWYKr9Q96a2eQHjGdchx8So8RERERERERERER
ERERERERERERERERERERERERERERERERERERERHx73C/R43b618bJaLh9i5T
R1qk/eTKqaMP2bI9x79ynjYxaYoUaf/1g9tNq2zz+q15XCejdJsfbbciVJXV
sWcX5nFXJayv6ZnhtVVzzp1tlwt8HmeTW4+3Sb14o9jXKVl3XGy85vruWfvr
zE1PlM67lxXpvFgv1ZtdbpprgHYv8fduzftP2K5K5+jug+w3qHLkU3j3zytt
MvKsw+1lr4wytMK7pq5eFlm0IHnR6YPZP4cnfc+OSCqnk/hhj/P3L2OQYQfr
pL58kP3u4v1PNYMr+ygybkpAVvX3ZonId9Vj8+LUv/2+ICIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi/jsatqDPoyNZRrnwML5Q3bEW
OeYzYG3cUZsMW3Hc7s0zRYZ1nhN69IJVGr3d06hcHaPmnLLbAw7Gb1TF2NHU
p+UMVdp0v7S9RAebhB66XDTezyZOO8/ccbxlFFevozNlu3aPsfy7u1u2nUuU
zTvTWsZO1ks7lzD3ZR7aPcbL1f2u1gtTJbOuR8r2mao8f7DR91jn7HcX2/7S
9dm+wumyxtm5af8Ai0jO9LgHJ23i+1u+Q3Pz6qTWjfsf9IUNkjfo++YWj7Lf
YwwutVc1jlTEdf3n8icVs7xcMnBI5CR6jIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiP+Rn+5GJnoescgA+1323xwU6RbybOSdDqrs
t4VuzOmjSMjrqMrR78wS7pYw1ndRqkyqtKXkHm9FTMUc7rq+Ncvn9DEjEuen
SsjuXmN35dPJ7InnN6lFDFLfXLt/+kOzVLjQ7OWJnmaJXbBzRImuNpn1i1rT
7q4inYYakge4mqX6ccfCObrZ5NCXtk2W//h8vLv/jUL59bLXNzNgUD2TTDpt
mvDJwyozi6z+VM5JL23i8j4p39Qkz98+LDN8pFUO92h5IqWkTV5dL9xswwCD
5PVp5Vi0cYxmv7Hb/Gi7FaGqrI49uzCPuyphfU3PDK+tUra9S8/WTxRpO/RU
1JGjVkm+93nt4bxGediue0p7vSJJId/qNr1tlaz0rkHHuhsl3Tn5fEwXvUy8
a27p0cckXmuehg6fbJWIcld0rSvq5XTZ8YdeNDNJzc5d4saPskpIpxN7f5+p
yq39kXf75Fcl89rROl8qWeX89po1Q6apMnfcyq3tvitSaEHm83t5rXIg2G91
gXWqjNgy1yWHnyrBffdtcKxok1+bzJw3YKUq1e2/tvB3U6Xd4vIFP6Vbf+wv
x7srTXQS/t65j52zQSbNerB6+X2zxGX6LblW3yx157YvVaupTeYdWb8686oi
WRfXXl7b1ywhbrpND7rbZHDcpahd8YqM2f3KZ7KvIgs2xjlMyWuRemN2lM17
LFWWrmoyNt5PkVyzfdK2FLDIrzfmB467+M/rPc6uEXjbIcYio3qOrH7USZHy
4n72Unf1b98XIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiL+a2jvM6Sjy1hFvg4/PftWDot4PSzwUr8nVZI23Rm/oqZOfGu7ea+saJB7
zWulWBPNstqUd/GeR6o0WB/h/Kdfhix4sbbJl/0ZUq5+6aCgPEnyyq7118kb
9JJ/R56D9fpYJNVmLnkij17W5L/aKLCOSTqpV/Y9GmKVXz53b11zlSofv9hX
7e2hytmYTX8+/miVX9+m+J95rsjx2LD6uy7/+PlNp4CrDYxyY/GVgGtdbfLZ
lrBlTaU0eTIgR9y6fdNk0aBXGw6U10uja5/OfW9qkoFJ2wakj7RqPq9/5Txt
YtIUKdL+6we3m1bZ5vVb87hORs31XqfmRUUUSpIvJf847L9ZL3+0GlXJ5GrR
XN91t7X2x0o6WXfFrvLDcgYpH7tpT9kHZklNuO8ZvkKVAS/rG472VSWoR+DG
xOfa+9TydGJ00ZMxqszsl3TqmWeGhJ1br3+9OyPbc1oP/hL6wluROYcsqS3e
maXCyYPjmy3853UXERERERERERERERERERERERERERERERERERERERERERER
ERERERER/3/qMCSlottYRWK8qxSTnBZZGlCtZtF9qdLl5p/5ZZcq454pp/bv
UKXGjEF59+63yYTxe2ttdNaJq7L+YYmKBvG4O75j0SSzDH1ROf1lVqLsb9lM
ZI1ePOzm+wf3tUi1vsUcF65S5d31KYbDQ1U5faNgIb8sq1Q3/poY/y1NGkyc
NXKls0mu+bc7GDLYKguWFp7XsadNVvUfO6d0+TSZ2jJieqfV0zT7jePd/W8U
yq+Xvb6ZAYPqmWTSadOETx5WGbbiuN2bZ4oM6zwn9OgFqzR6u6dRuTraPcbW
jacFFSqbJIbDg64t2KGXIYbZ2z/21O4xnj+46WDqh2RpHOh89oy9QZ6VNfgu
eGLO9vkXMbucSVipyq1Jt3d1HKjKH4ED7C5YrTKnit/xUz/ObcLowNyz2mVI
1z1uf85ak/0eY8KWaVv2DVfEq8DIkMA0szgUPN88tg89RkRERERERERERERE
RERERERERERERERERERERERERERERERERERExP/IpXPybHZqbZMN9r55R7xW
pIiy7NSFW6ocm1N8m9tSVWYdeTfJtZMqU6uc37D9olWCh0z9fOqdUepdqXO6
hbdFjhVPGDjlsE2WbWiStkivyPxSYeMax1nFwedZ4469jHL/wJMbcTNV6RLW
JHd4AVViApa/yahhlXHDZ825F2eT22NyTus6+aWUdHH5VLF/sma/8ZfP3VvX
XKXKxy/2VXt7qHI2ZtOfjz9apdNQQ/IAV7NUP+5YOEc3mxz60rbJ8ruKhC3o
8+hIllEuPIwvVHfsj336DFgbd9SmeQ6dykQPzSqpk7CJd/K/K2mQ1ru6dI1K
1u4u6rJ2Xbw6SpEvN3U9s16ZJSIkakXdmdnvHxa/5HixXX2bTF8cnyfLrMii
C5Ytl6+pEt7Zs4rPSEWqLFvfMNFqliUbJrS5NC778yPq+Ow8sNkic7aeKtkt
jyLxRa++f9hK/dvvHSIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIi4j/RdhNO7w5uaZP0EavGzcxUJMIz82DjW6pMnzKp1+7PRim+vuvK
XGMssiB1gqfTUZv0M6/oUWqpKrkCj74b2VGVuBXORVuct8qSph++GPWK/GWK
jgu/YxUPfZHP1j5GCf9S7EKjOzaZtqPy0+8BLyXt07w2Ke7Jmv3Gan2LOS5c
pcq761MMh4eqcvpGwUJ+WVZJtZlLnsijlzX5rzYKrGOSTuqVfY+GWKXChWYv
T/Q0S+yCnSNKdLXJrF/UmnZ3Fc3nPb1n4Zjqb42yue6a2oNGWeRsn5dO6iHt
fuPsa8d3xVXVyY7zI682L2+Qei6590Ylafcbj+/rNOnRaEVMGw67R2SZpWXx
Jv3mhKXK+I+VzpZ3sYm+2hL7FEWRsq7eVYvcyH4vcaQ+ocEib0XCpm0o/uSN
WbJyVLi2e172+40r21cs+tchi2xzKeBYxEGRjfMdR0gH+o2IiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiPjv7b5xzgVt3XVytkHOv579
ZpA3nWauGX3XLAPXlZn+Z2ai6PbNCL+6XC+WP/oead/fIoN7dgzwf58oQV2G
vygeqpdOsVv3LOpnkdD0Om3WflYl55CCffebUsThS9X3X+3dNfuNyzY0SVv0
4/P5pcLGNY6zioPPs8Ydexll6IvK6S+zEmV/y2Yia/TiYTffP7ivRcrVLx0U
lCdJXtm1/jp5g17y78hzsF4fi4Ts7jV2Vz6dzJ54fpNaxCD1zbX7pz/U7igi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiaumzskne
CLNRbhbq+nX0MIvsbfvpuM9+m8wdX9S1R7oiTav0D5ny2CpBtRu1HRBglDwP
/HxPj7dJxae+V8YnGMXxZn6LXVq8Zr+xn3lFj1JLVckVePTdyI6qxK1wLtri
vFWCh0z9fOqdUepdqXO6hbdFjhVPGDjlsE0mjN9ba6OzTlyV9Q9LVDSIx93x
HYsmmWW1Ke/iPY9UabA+wvlPvwxZ8GJtky/7M2RSpS0l93grYirmcNf1rVk+
p48ZkTg/9W8/V0RERERERERERERERERERERERERERERERERERERERERERERE
RERERPzXMzzxrw46m1G+Tfd2bDLcIksMh9JnHLDJ9QN9Tq4Zb5PwnatSb9w3
yuNmu00ZT+I1+40HHwVkbHidKFv7fZvWYIVe2jSI9KjU3yLTp0zqtfuzUYqv
77oy1xiLLEid4Ol01CYTz2b4BC5VpdDoo9eudlKly70Rte9eskqXm3/ml12q
jHumnNq/Q5UaMwbl3bvfJkmb7oxfUVMnvrXdvFdWNMi95rVSrIlm2W8L3ZjT
R5GQ11GVo9+ZJdwtYazvIjqNiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiImH3z28X98iqnIg8C3Bd8GmaSpZn2vxb88EhWLnXf19lq
lHx/TK7v5mkRxzymqDf7beKzskneCLNRbhbq+nX0MIvsbfvpuM+Pz/eNcy5o
666Tsw1y/vXsN4O86TRzzei7Zmk34fTu4JY2SR+xatzMTEUiPDMPNr6lytI5
eTY7tbbJBnvfvCNeK1JEWXbqwo/PHYakVHQbq0iMd5ViktMiSwOq1Sy6L1Xs
fYZ0dPnx+dfhp2ffymERr4cFXur3pMqnu5GJnkcsMsB+l/03B0W6hTwbeaeD
+refKyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv7r
+f8A86PcWA==
   "], {{0, 0}, {871, 871}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{870.75, 
       FormBox["1", TraditionalForm]}, {621.25, 
       FormBox["500", TraditionalForm]}, {371.25, 
       FormBox["1000", TraditionalForm]}, {0.25, 
       FormBox["1742", TraditionalForm]}}, {{870.75, 
       FormBox["1", TraditionalForm]}, {621.25, 
       FormBox["500", TraditionalForm]}, {371.25, 
       FormBox["1000", TraditionalForm]}, {0.25, 
       FormBox["1742", TraditionalForm]}}}, {{{0.25, 
       FormBox["1", TraditionalForm]}, {249.75, 
       FormBox["500", TraditionalForm]}, {499.75, 
       FormBox["1000", TraditionalForm]}, {870.75, 
       FormBox["1742", TraditionalForm]}}, {{0.25, 
       FormBox["1", TraditionalForm]}, {249.75, 
       FormBox["500", TraditionalForm]}, {499.75, 
       FormBox["1000", TraditionalForm]}, {870.75, 
       FormBox["1742", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.69375412037878*^9, 3.6937541463142633`*^9}, 
   3.69375417720403*^9, 3.6937542845601707`*^9, 3.693754431642583*^9, 
   3.69375448526265*^9, {3.6937547609974213`*^9, 3.6937547703989587`*^9}, 
   3.693754938982601*^9, 3.6937550513370275`*^9, 3.6937551109284363`*^9, {
   3.6937553237626095`*^9, 3.6937553490410557`*^9}, 3.6937554506568675`*^9, 
   3.693755529819395*^9, 3.693755986289504*^9, 3.6937564241895504`*^9, 
   3.6937570157013826`*^9, 3.6937573464533005`*^9, 3.6937574999590807`*^9, 
   3.6937598869556093`*^9, 3.693759958251687*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Possivel BUG!, Modificar rangesearch para o tamanho de \
elemento em uso! \"\>"], "Print",
 CellChangeTimes->{{3.69375412038078*^9, 3.6937541463172636`*^9}, 
   3.693754177220031*^9, 3.6937542845771713`*^9, 3.693754431659584*^9, 
   3.693754485278651*^9, {3.693754761012422*^9, 3.6937547704139595`*^9}, 
   3.6937549389986024`*^9, 3.6937550513530283`*^9, 3.693755110943437*^9, {
   3.6937553237766104`*^9, 3.693755349055056*^9}, 3.6937554506718683`*^9, 
   3.6937555298343964`*^9, 3.693755986304505*^9, 3.693756424204551*^9, 
   3.693757015716384*^9, 3.693757346468302*^9, 3.6937574999740815`*^9, 
   3.6937598869706097`*^9, 3.6937599583076906`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"rangesearch = \"\>", "\[InvisibleSpace]", "10.`"}],
  SequenceForm["rangesearch = ", 10.],
  Editable->False]], "Print",
 CellChangeTimes->{{3.69375412038078*^9, 3.6937541463172636`*^9}, 
   3.693754177220031*^9, 3.6937542845771713`*^9, 3.693754431659584*^9, 
   3.693754485278651*^9, {3.693754761012422*^9, 3.6937547704139595`*^9}, 
   3.6937549389986024`*^9, 3.6937550513530283`*^9, 3.693755110943437*^9, {
   3.6937553237766104`*^9, 3.693755349055056*^9}, 3.6937554506718683`*^9, 
   3.6937555298343964`*^9, 3.693755986304505*^9, 3.693756424204551*^9, 
   3.693757015716384*^9, 3.693757346468302*^9, 3.6937574999740815`*^9, 
   3.6937598869706097`*^9, 3.69375995830869*^9}]
}, Open  ]],

Cell[BoxData["5998.929082504428`"], "Output",
 CellChangeTimes->{{3.69375412037878*^9, 3.6937541463142633`*^9}, 
   3.69375417720403*^9, 3.6937542845601707`*^9, 3.693754431642583*^9, 
   3.69375448526265*^9, {3.6937547609974213`*^9, 3.6937547703989587`*^9}, 
   3.693754938982601*^9, 3.6937550513370275`*^9, 3.6937551109284363`*^9, {
   3.6937553237626095`*^9, 3.6937553490410557`*^9}, 3.6937554506568675`*^9, 
   3.693755529819395*^9, 3.693755986289504*^9, 3.6937564241895504`*^9, 
   3.6937570157013826`*^9, 3.6937573464533005`*^9, 3.6937574999590807`*^9, 
   3.6937598869556093`*^9, 3.6937599588777227`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[RGBColor[1, 0, 0]], FaceForm[{RGBColor[1, 0.85, 0.85], Opacity[
    3]}], GraphicsComplexBox[CompressedData["
1:eJwdl3c8Vf8fx6VtV6IQKpWUtpBuXiipZCYUZZORvS/u5brLde+1yUiUUSEZ
hcqoUKnMltGgr8poaInyO35/PR9ezrnnM97rtdrB28xZUEBAwHWugMAsLTbc
TxcHHyc3t1XNslxc+fVigo+307oCHXiIsFx+bpZfU5dNz+opeqvCtjnysFL6
zVZlgurUcupcQr+U6K05vZ+Lh73r/k0R9I2YOD+rFx7wkrTX58LFb9OTDuL5
z0zGhXcEN9sIHzQh9M3lw6p3D3KhdmS/8wWCn6cdCrs2xCO5Zpv9RuL9L7uc
tWe5YDpqclYf3vNKQGFjPHYVDRnMOPEw4VecpESQNc+4eT6hb16jEZOhEg+/
hgLRa4e4oCX1NP4hfvdeR4KLK6Hb+O4ZuUL8nlOHokCnEAeru73yOwjKH/ee
c5XQJUzzDJ8Ic3BGNLZx3IWHP4ITN5SdebAJOFp3hdArDTbY9BHfqVVM6b20
KR5trk3qJFEO5rxhfeQbcrG9qjtvHvHdDlf+4KQIByLbv7gFE+9N7hs+2aNK
PJ/2kiVOrON6+JPRY8R7ocZdqpd1+LjI2JnbNcaGtJDFulnqmjoentVXq68p
ch1nw+eLbluGOw+F8WLPfhPr2h3+WP/HKBvVbcoCzZ/ZeJyQnjtuysXGQwvL
rx7mQnZqPPs98f8Uvop+K7G/oZ5W81YxDjbo1e6MIPTXnhZHwnfFw6ShRuc9
sZ7en/tfyBLf+fk6uyajnQWmykZfbT0+7szd6zfLZR88N54j9IO2y9ZdIaix
/FVKmDcPylkKxwSJdXHXW8wMPWahey4MX3ewgO/COlwrLtL2jk9lH+XiwLj8
95NtLHxY+p0T9ImNeM6x/EopDmwm2/80E+uj7Z8IyvrCxqjXMpsZ4rllr+wZ
wXvjoUNTiFxGnNvMQdJBmycscONyTn67zsS57RlfAw7wERyeMTrLQs+LTbP6
21dtqhc+svG75L+Ryt9sfHlg8yq+nImf4jO20oE88B9YGvd78fBN3fBAcQkT
wnVM3cQHLFQ2DUpKKHLg+XlGcztxbxvNfnfM7iND2XJzEfE+bbzL7dRpLjzz
h/xGTLhwNxk9N17MxPpV6aqjV5hQaF3Wf+NAPOwLVh733haPlYU52U2Ezvha
3/+6hYWLwktLrQXjsIyyONuU2P8KxWBnhVcs7Nc1ZecnM7CpI1X2uAEfq+Z8
WzXLhUbb387quc9Sj/cUMrGkOFOseRMH20Y+J99NYGDp3Tf3Jck8vN1ytCNb
nIP7/W0XLcqY6LZ4d1nOnwctj7WhdRwGFroq9dXyGWhyC5vOdOWCfF5RpNSC
i8K779Xu0hmIYzXf6CDW95AW3yMyxEJLvODZlWwGvPpzKvxM4rFCxFDrqFo8
fmaccHBkMrA7ZrQmJJ8JuYmBWEfxOCT+Z7G4gdhPrq5SwttqJtLJJz4axzLQ
I2z6Y54mBwuElCfOSRLxd95+iQCxnp1Cli4hgXSU7n79s/8IH59tLwkOEJxz
r6VsVrf1u+uzxJeO8vOqYRGxPGyo4D/YEc5DZNjp9zc86GjjvFNpP0uH1cf9
82z8uaD4bRd/k8vEZPpUvvc34jxP6xfvu8+C/PWBGYMGJtxXfUp5cIqLbV+/
PtN2okNL52zwvkgGMvZ97xSVj0PQgk1x3UQ+2G5cqNqdyEDrWu+ag650ZCWk
yc85HY8jQ2qv0/bFYzo5VI7uSMdfj1vxLfZ0GL9v8z5zmAP+1XeisvIcXAg0
XjffmY6OtR/lA9KJOLyX8MbrKROKu1xvLw1lgDnFvhovyMaGNUVOOhax0Agp
Wi5iwscr3x7JWYpdOp88q+fNtIW632MhUdnMtyqTgaovg99PG8fioaa12x4+
D2cUNyXl0HgQ+FPUU34oFppnxB+MHomFYWW+SDiFiwahFxoHz3BRxhz+cQex
KJfsF5h7nDhvMaNdozvi4PcpXjhlgo0dhV/sV7rT8cctUCRSLxa9/ZTDv8/G
Q2NggnfsEFFfjRBQTIpFVc5c5yZ3BqKDPn8LfsNEQf7tqrcJTHgnvnuWf4WB
WpO6p/uJ5369KE+FLQdbr9ebym/kIFrp5M6FhL7o7Qt9GNJh7lXw9bsMG4fS
Fid7t7KQtLjhozdxz32mx4vadtKQ6ljwvOMYH/Tsr+9n2a4j2DerZx5Y+C9b
lYZtbdaU0Cwe/CowV4THw+XRQl2t9TQI8yXFZVRoSDSlPXbjcXHl5JRU4+ZY
2JjfDTE7FIeBDfMlkgK4KD149ztflgbn3a82jE+x8bJD7aElcT6fyPWhdqtp
GD8mdeA3NR6b1gt1u51iwJCx70DBbQbS66RdFhyLx4E/j4qMpGho6H0fl7WL
DtEvd8Typ5lw+/68QJnLhI5a2JYvUXREqIvKzsjQYJy5eupEAAfhk6Sv1vKx
kDuZGDO1i40HGinr1xN1zMOnPna1fiyIyCkg7eRg4KSObe0yGnbVKb79IRED
2lf9gHUn+Mjivfae5Xa2/eis3lxnuTNFKAZFmvt7nhfz8Mbk98usc0Sf2nrt
dvCcGDTESjZHL6IhoIJ64ItLHOakbPNcvjAGWm/Zr8LPc3FHUear5aI4XDGL
FLWWpEHT2CN/oQIdq2w3GJf2E/mt2BnwyYwBflLv3SY+HRYr1nwVoXKRUqdl
s/5HNHTynamH/9LgtUUqJ0WGhZVLrh2Q+xeNoz84tDWp8QjnverS4zCRGf6u
Vd08FutXsBd8J/LolXBD0e2xaLya+3Z4y+8YiKdeVN1mzcbeLr9Xab+i4Zh8
ZvlFDgfXVvNnPvWx8PtlU1miNA3cf4Z3C/dxUNo7Wqr5MRqbqDta5QejsS3Y
2qEpNg4NPuOVywTpuL02xlzlGh1FynhoN0DDBod7tldmiDrGU9iXMEqFR1iU
79fTfOwtkGPOcsjw2/91u1NfTht9oKKHf6fH9waRV3PFV7odYqBObdOFIYdY
HI9oKJMr5GGhnpNFTi8V8dKfZFcMU8EzOF8nXsbFYLxn5yqpONzxY39cMxyN
hQ7THv/aYrBG74xu6iEWyJbTSt5cLpITFzSKP6Hi1ibq35psJg4UfF1erUCD
qID2xkVvqBgYXG07p4iIswzD2p72aLTGnTqZE0nkqfs2nqVPPNLrN+qfvUcF
IiKus4h1NLMGkrpyiXMJesVXHGPBpGxz4H3i+0q+yTPSZhwYLBise3KbinWp
XkWj+THweVnKyNdkYtP3PcJPy4i8yjs0/LqDDgnrhQ9Mh2MhdlV1URuVqAPZ
ic73O6i4XqF8z+tCHCjZ+/MLbRmwjYvyTyDy7ISwR6NTJvEd3nTP21AWGpJy
yunNFEgsv7pfyYWPuLQdKrNkFy+Jm9W/3P18j32PApEoTby8z4PEoRMF4pvj
EO49LJhTQ0UCyz/obCUP4vKyJfsqKWjb6ybVcJ+CM2dnCv3quTh49wS18RoT
9lz3wP8+RcP14Su1zQ+pyLMTOPb4AhsxUTb/irO42JSW8YtziQLVpj0ZpQ0U
dPR/oF2rjQc7VHJOJpHXwYdQUJ9BgY2lUrbeHQqa4eDYXcVBl47i8OX5bFQO
D3pp36RCbozCc6+g4oWloFbbbRaE/px4/0WAjlf3pDTPadPwVMtAY4FbNHbY
2I/8DGDiz7VflgUxNOT8DdY+kx+Lqztdj/u4cKCds1d/cQIF5nPk24zqKahZ
NPr9xe04fK6bQxLSioGobfbMNzEGwi8ldOX6M6Bxhqf+5ks0rj6Y1A5tosBv
vWhZ8X02rv9l6R5/zIRyl/g5a2J9qVom4ye0onDE6K9heTsPLd+O+n/XjUOV
1/JHtWwKfFVf73chReEJ9Y1lvicf5x59cppl1h0V41n91NWh4SM5VITOyPHO
vWQiSvWZ1yJEYTLXJFiulYvFnnfWC97jwSrhe8RfqSioi367uVw3Cra5ou3e
DfG4ibev20q5yNp6JvHTr0gMfgwJLn5IgeOQRo000d9+dnnr1B6Kwm/D+OTL
NzmY/smr9Ewh5vG8869/DkTCfKpEYbcCG3Ptyv+aMCgQcDN5fz+Phnsbp0Xp
ljR84CdVsuXomBz5lz8yFY2EB69vLOmmoFSqrdl8Hwtt0oEbnIm5SGowesSh
jgqth+q6OnZRqH2+wnC8Og7ir+Uo0+Ec7B7Wk7Voi0Re7fHqJ93R+NHO0t07
RNR7h6aYFUQeXd8kmznfiIGLG/PPBIdHoWtE/eG/SjYGlTW3zHxiopUcXW9C
o2DRej+5/FEKit7n+V9fwYTaoPAdgRNxeHb7+Sj/diR6j1w5a/SJDEyQFv7q
5YFuaLlzJfG3Oe918XF/PuZtLUuY5ZLH+6/O6rs9XRce6YjCqiLPMjFizrX6
4rCR8ZXQhQbP7eng4mrmlp6/XTzEBUoVbWgio7DGOUlEIALHUs+JFTbHI5f6
Ic+qkYv/vro4F1wgI2MgafuOezQUlSWPChN9oVHpn7zTAToEB12UFBqp2PqA
bYrlFNxUz5zX9I6JnIVO305LRkCuS8zhbx0HgXsOk/vV2TB8xJhTVRmJ9YIr
bIqL47FFzLAukkFGqiyTslkqBkqNXi7Pw2hg7dwlZFnNgETPeM3s+Vws4SYn
aUfgQr7Be/a1OHxSvJX9M4GDj7TR7zf9yfgodPJhv3cEMdc1lH64yMaVizP9
vWuo+PFdyffTBjo+9cnHdC9mwWiDQvTGK5EQ3WsW+EU4EqXP67aXpLJQqGGw
fkyLAkbVa+dqKwZSv/q3UHzjUKDktLXVgYy3RRcVHVPCIJFhT7UY5oE0nXvU
5gcNShtLj4nM1onAoHm/E8Owr73fRzGMj4cv+ddn6WR7t25WV3w2xyDwaiR8
Q9s+DjCYGNRZem0iJwyGHNark6+4CHbZ+fTFO8IHD7mGTHiG4e+abQbx3nT4
aayOSKH9P9+MLE/EQOfXGw8X8RhM72cVp5SEEXPG69/LHsXjUMkdfX/iXp8O
3M45ZRQG03sHrOeYsnF/qv1tmyUZ9Zkd+qSmMBxeTcmuJ+7DOmQqmNXLwPQY
L+5cYSTG+jcujaoj7uNmzIbnO8PwdVFo1xwGFSe3OX/edoGG8rGny7tGwtAa
dGxBS2Ec5re/ZCZf4iBxTDe3QCEMMk7WkX0y4Wj8/iatIomNp8n0hs0bWWCR
bTqZh8mErxb4Lqgci8xDqfqrmRSk6678sjM1Bn1e+0Y+Pabi3/ytobcYcfh+
Tfq+l1gY/Iz1o2XOhaPe5fMOET8WkgMMJH6l0nF13kb1C3mR0A7dmShGCkHW
Y/WoK994GJlrCzGNEKxryL42SOFDtd3uxiwLgzJXiBP6wa7PZw4cCoGi5uDm
sEEuJCzzP+Z/5SHRyHPZcckQuK8L0E8dp+KvNjX7s3QMXB5FOGyxCkGVz6gd
4ynh9ydv1t6TJ+Ps+LOqUWMmftfnfAp/y8XWcLLC1K9gyDy9/GHyDBt7xHvf
Ss0l7k/ZqM5gDhNVubULNumRQU9akZBoGwGtB4USeybpMG2+0qjtFYLMVRly
KcR9rNE4xsHjeDz3HTLe2x+MwI09RWopIfAdq+VsOR8H2ocvf48S+1aUdUu5
khsL483JD+RqODjmMTxe3hqMgHlPhG91xUC/UPS+BVGfwysUtiwxYOHI6YPH
B76Horx1a+qwKTGv+kCAeTESvITN06NNISj3cw9ri2bDdGrgm6daNKRHOOu2
9VBh8/i1ltzXKFw+9/va3/00pPcGHBSup4N6OoBvqkGGipGB7dvsOPwzT67d
dCMY6woqC2aUQrFDe46OiBELVBcXtZmXgXDpJF0a/stDrlWL0RHi78/7ufpU
BuE7ZXZemWXH6MVThoQuIqIg/PhtIAy7TZ9VjBLzo9eJu1b/eHicszL6+c1A
yFMfTx1ez8RSVzue42gojuYOrNmSR8Fwv8VS9n/RkJneWnVnPBDfnr0dCHoe
j+F3mWv7iH0FpjdYnboSjN64kcD8MS50Rf82JJ0PxMFne5SC40Nxv0N0yfKV
TBzNOMWvmROEPVdLAo40cbDsrZLkyZfxOFskzwhiBGJwbYDa6R8x4BtX+ddk
RkJpyWebDZHReBzHtFzNp+DxA/nnF8ixuHZQ9XXyLjIeFLJKYxWCIKrlWzXv
UhzO7cq8oHGfg/ZVd27YBQaCPb9XsM+FhSt96/LnZAVDMjVlf9EPCqp/p37n
EX1D6ty2Z0FfCT8zqNJ68G0oLir+OHJ4Xxg6VaSKzLMI33pk7mIBvSBIZnjY
jzGIPpeX+Gp+SRy0Zial41wCoVSeGbH9CBOlx9L81yUGY7lQYI1IdBA6s+v/
M7Jiwb/zYX+Kvz/OibiFHJnHx5M39OqBIH98lR/88CKej2zhQ+tfEhzSNvB/
Tegf7EKztOfz4X1kscuyE/4o9NpYph7sj08eTUdO/+Dij3anysYUNiIqH7M2
2gZCW2bYtugpGVFT14KejRJ13U3/VfPvMJSXkgQPET7lUZycq+YkF1P6g41q
+/2xdOeuFJNof6gcjzv3YiAeZOrQqEZRJGZUfjnsuRmNWrH9OTWHqWiTP783
LJeCW1VP5rfeioX92FaHj32h6JOd29+fFo2UdhmjU8T9SP0bEjq8gobBd24S
v1cR/UH0YOaboXjQdnxvHdrij7M5i+9oJPkjRa6xM6iVg0xh91qbliBcDe6T
6VNmov7zPfnfYSzIfPzADzEMRLCewceKtQyUX7nx1IcejIROYZHb7YQP9Z9X
YK7gj7IoN82SAn80lqyqNLsch4/7uHsM3KKQS7nk+6GamOcFlWfi6+IwkRdh
t2GZP45y6BO59f6wWaDWyeWwEfL1krmvajCa3Cb7Hj+mw9KxM8/cnoltJzPF
VukEIpWicn6OGxWXAj0PLVoahXmWZZR6jQhMha3ewvck5mSfFH5GIOGztlPc
fZpDccWRfTCA6Me0eRMZFysoSH15v+1adDi26FRm2JOI+1BTWtZTwMaM4+Pn
kiL+MPx4KbFoOhYSoYYb5lCD4bkuVrBXwhdD77KMHifxoXEnsmyW3Xanns7q
x5ZKe3ot9oW3dtUuCSHCR5ckK04QPBP0obfqtw90W9cZfX7lD2mnNnMJBxbM
n4Q+CFjkiy9Rf2KZAjzw0llTIRXROGt6apXQEjIcbv3XtHIeD7st3rHnD/tg
3ctqp6ePQlHG7GzbJUKD9fKJP69FfYEUyGt+jIdNdIDwjxsRhB/geqqkUiGt
7bnqKJFHt2t+Nmb5xRK+7I7Hrc/xeK3gbve0wweRYUIpt1b4QsvKb9e6Tg5o
K/Wn/9NhgFToflRYPRDk/oOrvbksCHjeWdE56YeFLZ/Xbpn2R//6lkoVDSaY
L1e0XerlIN/yAXei0Qc3IlZ/eadGwd7PuX8EuVEwyxBZM77Gl6jLp+h+VXFg
erS/Xkz0z1hBVX7XABk3exWeFreG4+YrY137NYTvGnjwrkQzEkaWfs5BhE+Q
ee+83LCTBjdjgU+q7sFQSdRaUdASB3vvnDKzah9ExY00MbfEQH7tKCfzZiic
3m3LehLExL8QamfuqB8EvCouaezwxT4Pr0cmGWzoJS5w372WDqHMu2IfdgSi
QdlpmZlsNPKGrPeVLgxHGV/2w9XlASjYv6yM8o8OsrphUbN6GB7OcQ94yYuG
slzi+9vzyejfp3p0aTAV2YfUPEDMrbQ1Rn1nynzQkfNr6wZjLzDDfi0mZfAh
4vXVdZZDaxvXKBM6fYvvvmQNL6JfKcYeEeeDzxWyU5TgI2bJ1e0flIn/a6r+
67Qk6nfwifXh5RF4d7H8WDCIuDpw4+PRABZS3+h4dEZGojvxfoXRoyjE3qid
fK7qhR6j2uREIR76JcUTnvUF4Zr8UgOODQ0dW1oyh0V56Cs1S/YT88IftfSl
fsTzlXNS5p39Fg+vd1OLnU8zYHK0ILl70A/X5Z5Hp1wMQca17bXx09FQGVuR
Fj5J+If357UChzzx8Vrwr5z1VDTemP6RVByOhHfnLi84QEZfvObKlY8oMDl2
TGIgi4XWBeGnYy/44FcAfsYUxaBIRKG59UQwmp8nuU7u9sJRtdrUzFccXLzK
WiyrFQbVn4OxHU1UvD5op+K5OwBtC39LXr8fi3fXDo9OChJxu1/kddLaQJzY
41svYBcNDUet0YUyoZBd/zXG9T0Hyir/glTvecIvwm6f0jFfbFbWUFc3YUJY
PfG8D3He2186mBvUx0FpeZHRr+ZIDMw4Cg1IRUJZ8+nJShoVf6wka80FwhDZ
+daf0xkHhZo30y9KPCHNuH4gmM5Ebf32jtPpPiArdmv+3kqBctWzyzrGZASK
vhGdMaBD5HX1N8YbPyyvarBexiXDPnTnRpkFFBzfVSIjrueFrbvHKFXE/L2g
aOnxGM8QtK79e9NfLBqaS116U6188d44cGfJOgaSuq/w6Lph0E7Y3uxH9L12
8WqTsw1shGUq58/JJfbX4JPxpIWCkg2v9esDwnBiheoOysVoXJFjlUxsCMay
GPn29LVBSD6hfD3NIAY3yu0VJHL4MHmtLBsb5IbR6U2KNILuqdJd4oQ+d2XS
vrLBGGi0xFabyAZi588irrUkH983n9fKsXbDk03XfY8QdDX1a+pdxseEm6Df
gYZIbM4TPjrVSczPawK6U977Q87x2um7V2iwKvh5PcqXAZWWPasNE30wTU+R
WLech0uhcSVCB93QLn+/NFjfDfN6RDu2LONh9cmwxvD9XkiM0b8uFstCi1Pa
Z5FXZIjt6LNri4oEf0fp3KJEKsRXlnV3RYVg+sF4/qMdsXBKr1Xf88IPebnz
DZ7uc8PWovFtb/7Ew+Shi/PCy8TvJO7MiuJ4IpahcGhYgAtugbJok7wb1LY7
XLu5mIK2d10a48TcPjJRe2hrRhhs7BsMW+QoWGyll9Cu7YaZsaqA3+848GvM
W3LS0Rd7Tc/S6EQfWJPVI7l0jAPLzBPML/9ciXqW8OKXXATWmopHTFhFYO6t
9jEvIs8PLTx09YILE+NBJpqDdZGIGt+wIzs+HCEXXia+sqWj6UAF80yCD/Qy
Lr44tycE4/0KPk8UqbDL3qHgSOzn6cKRGonWOAw5DTzoSGZi++pH7hepnvhz
lL0k/zwF/Irrd9eMhkBz5/oyoZdxsCsVaq7+5Apzs3pS+c9ArBYRcc8zjIZP
fKa6R280WHNknJcIBOLYfqfl6heosKay9Q2mg/CrznfrQfsIJC+YP314GxlW
qV3Og6toeLNpaQ7jmR/4XhVpcZn+qKcsfpKbFIN1maHWst/DIHpSqdooNhLV
euLxn/e7YekPTZOlpcSc80vyw9B9NoTK7y2e7HeFb2RrcNFmL7x/YEEbPMxA
w7e4W9rRDLCvP74lHuaJDxsMW85s8UVQj75g9380DAxtn5A5H4KTJz0k9xB9
hNoTfHt9Hh9aWwe/VqU7osmxcPUs/+ted2RWT27cLdItzcdxK05Fa6wjjmye
88vAMBYHdjhZ2sb5YI3OqfUWgY5oezjyq5B4Lv26gkZydjiC9l4zipcnfL2O
tG+vDA9r78a0M8Id8c/lv+1vLaJwO02xxftUKGzVpZe573HDr5z3LgGJLGgd
7jzWcMIRZkp9uluI91bnHntieI2Frp6j5RUdrug+erAurSMCki2frzaywiA2
93PdrQVcmPsuPC9j4YjJ5nV9Y0ccEbzOsD13DhfqyauNT4dSsI+jOS1tHwxd
yx2WMh2BiLC5b5JqSsU783j57d1U/NwWsjt0NADScePBQgZk6AnKP5epDMfj
VuXKlCUxqDOs67fo9INGR/1ho/2OiNVLfsX5yEHqQa7/8gkO3OtWzdxUc0Sa
375mFUkvLHJK//JzGx2Lvb5UG/nSUZp1onke2RP6O0tkKkOIubbEMtCIHY2M
h1se/VN3g+HT4+rGIUx8F6QMXlwcikvbfuWN8yIx2DIaLJvFxIT87QTRx67I
znzs6LeXhqRYtnIqcf7y2hstb2o74s+xJVf+PInD2W8+Czv741D0ZrTJea0j
aNLnDD7N+BB9sKnjAOHTfji1p+fIheGWE09u/AMZu65Oc2t0HCHQjZygKjbu
skVKEx+w8Su/1/KEtCPqP3gEgMOAp1TPcbsHrvg2TL0wf4UblpfeM/1iz8B1
coTpEadYnH3w37OV/p7I/PFBz102CGHY5zBPn4LKiiR15xEyZKayxfyYoXAT
Dg28vjUcfScePmFohcPCJnaPwltP1DH/eHkrxEJTZfK59PlI7JbdrFvRHoyx
90erw2soMHyip3Z1GzFPDFxurlgQjU+65PWmRP5cE++T+uFpi8GHdjt9LvEh
/8QvdZabDy14+53Q3Y0PMEdX8pFBud9nbW6Ll9t8RZ/usIUwTS/eVIYPvTd2
c6/I8dD297Dz4YO2uGco7ad9yh9B+vGSedFU3MikZ1ZXsmDTKP7g8RJHyOqW
GVsvIL63KNFRR56HL2NTvRkqjnh3tndOdTYL1WULVfS3xkAl/pTcCaYPPs6d
aFdfyEWU8ALLU0K2cGrcu6tsxAZHRbU0zs3jIo0+nnBnwAdXHlZWZz2NxvM5
Xq9NI+nYFS/cp/jEFS8U1wq3C7hBwOUD99pROtbVvCg+/I0D89I9JR4vbHBu
K09drc8GwvnLdMkjHOysbRPxs6bB8POthfWBRP7X68T6XWBiv9ONnqKljphh
qhp/WekINbFs+TwGE596VgTI1HpiYiBrtY0EDSpZhl3zfYJQV1M7lO4XibTS
lHChPqKvBw2qfKizQeql6urpJhv0fCklGRB9PHd6QP/w3ig4L/i9O5gSCLNt
Kk+0Jil4t7JVuuKXH3Yds+wKeB+MvTYJcskXyNh3tlTlUkAsNi3Ut/nvviu+
K0msOqAUjTv9/6z94n3whL9l9LV1KNquuVmYNoehoUKzSjWZgc0vjfcsJNbP
kD7VMtrMhnWcleWWYhvkXTCSVv4Thvr2rPIZoVDkNjccW8/xx3iCxB4DawrY
Vw9PtlTY4NmFJWztWjbkpt972bxyhUz+kowvOrHYvaFd9+OUA5o1Lj/3CGJg
18qDRs8TyThV3/ORbBCMezeu3+Hc90GWrd/YySdUiEiXp5GPxMAm7XnCtbOe
0GgcMX9+wZyorxcNugsJP7K85/Is1bUzN70g9FKBpuUysnxQznbZOqaY46O5
cOT6QHOkthk/FZcj6qpa4dSeChae5snKXMmxwc/01dV+IZ44WzLmJLs0BqX6
Bgfv5tqAmXFwCTePRfiBi17JRLwyN53KMEs0R13FFfevpuZQNv867KnIg0RP
3saVLDpen74oSV7hiDOlieV35nPhcnTaNdLZHPKPJENd9pgjYE2+Vjqhh23P
zUvxomHhmsl/f1tc0WAcL7P7ZRQmbPWXvlPyR0XHscPvhxxgsy7vX5IrHXIa
1zSM7rji3Cr/QSFNGmxV2xaFf+bgWFHBA3WY4+d8YbNaok8f/XU/qHxfICLX
pmvRVcxhJnfez5qIz8q/KV8MiXjclHlDSozYb9KwkOp/aTZ4UMo/UMlh4r/b
mqdVl1CRo6NquPGSD25+Fj1y9oE/3gyt3ciwi8RtgZIc5ReEz3F/5+qwyRwl
jWLX4xCNH4+Cu0SIc2t4sjzt3iMf3Dn0wzaikQLudPFp48JA3GCvU+5xIWPd
Q7H7DwTMYSfyOcSuKw79Omu38KNj4ZveWMkTd0Tf11SFquhgNJih5btNGLol
JHK3H/CE1tivOQLS0fCSqjpcR9RnI7/T62iZIRDYd25eFRGfk4WalaPEfjaV
F2q8feCANUFDXeb2sRgUXdun5h6DnzNPi0xqXbHJYEPEIk8bOBaa/HaNYOAD
qeXNkiY2OObmevtXmUMn+S/vcr8ZIjR+Py68xcaS62We69hhUP7+r1KgPQgK
C8arfspF4ozcyN7DKv6Quf9VKj7OFdofNARuIAZJKwMinMuIehWqetJxqTn+
TBiFGxbzcRcyGWsu6qF7zZ9+RYKsX4sWzOol9fUH24j4HHZJpZim6SHQhGwv
9d4MGgONBz5dZKFSe3Pn7yA9NE2Iahwg4rXg6sHIQAEKQu8V/9790AcO/nVb
RaJouNrbYmNJnN8GmVfcBDYdx7sM9k9etsGrpQIffYh4bbr5dEY8WQ+5laRO
prkenlm7xVkQ9VPaKnvxkpBw7JtnI8gSCkTttQnq3CM2GKs2P3vdh5j7XURK
rG84QFz+zqT2KRocHr6/+UiQi3j/i0XbXPXQ3PjxsehePVx1OnKkgtD3bhOe
8lcm+rqm2K0+rieGkuwaQ177wPRW766Ys1F4efhTdk4OE/6S97FbzBy/5veN
BrkT/jRXu+gycT93y0ObO6c8IG3/OEN7HRVSUneO3CX6/KKJG9ukdfXA2f3o
Z9qEGST3dn9dz2PixsunS2026+Hms+DvZcMcKLxV77Eg6maDLonJMfSFxfA1
GStnV2SNGzhIEPOiaso6qpcDGW9ejvVkafnjyXxNpdOMWLx9vDHdlMiD9Sqy
VpPCQZAf7w5vjQuFeM1mrZvtcdjdciPokqoe9lw9YDkiqIcn60O1jIl+r2tb
Gf9VOwCeHmpxEvvDsVhKceAxJxi7xLZy5o4E45GaleXD2Bi4XC6gH5p0QOcC
cerODTbgSaicpHjFAgZ9w2nefsS8+tBFb4yMBd9IPZGJDOhOP5/IEjdHukPR
W/aCUKw696vKVTsI5YPfL5Q9M8NkzI/PPCrhaz9oW7xJcEC05+ZD/h4xeB3j
PTp9k43kkLcrJRWJeNqc9XLvG13I3rfegmo2jqkZOie/JePitYrf6S98UeO5
vjhNPAxydrr6k6kB+L3gfMcdSQrqipftlG3yxE21Le7fPKnYcO9OP6vAFW9e
XxdnM2i4Et6QppRgg4f4o/8inwW7hIBLi6T0IFVuciaw2QP/eo6nDalTEHzJ
UUbrgy6yWhbKpeawwEtWWylE1MejtcLCt1eY422ETFmOhA3sro74NRN18GGW
rUIrkRfNO3QbDT/TSRfOnRzr/o9O+ui0tbaF0JU36VvJtkQioLbIu+zBWWiX
lCzdtNEVgZd/XlB3oSJ0ImdTGJFPsf8J5248zCQVJVovCVdlkni/nzwJJXQz
5LjLN5rh4nQWvyaIDrul1gU5/GhMDT/dc3zcAV6sBtn4aBqpMMnObzMx/z74
YWSrSrD2d3dx1HkaSdw0WqT5mTfaLcPfrZuMwLOIT7Lhy8Jh9GjE9NOQH0by
Eu9HnYrAbarEytvePnj7uiTl8t94FB9W/WgaRicVrzUY0jtBJwWkyqQXE/qZ
XUsOXglygAF5JKeRHA2LL/vv3eIz4f6maev4Uj2Qrz1R8v6li1siE/ECLGJe
GInxqciLIY0odGc9fMuBzg2LM48IGnSoM7TLYkgmkdXUZ0xiHrQ8uUp+jjnC
btQ+W5Qagz82p8//9LDB1UJO6cf0ALyZ/DOj/SgE6LXd63w/HFb6+W8mg32x
MSI2iSMZhJxz8pbMw8HYE/Bj75MSM3S/v8Y4EBSLN53PrC2YwRC6KPDz1J1A
9La6LOjuPokzy63nHqbGwN/UhX7mTyxpVUX24bHmOOxyTxEcJ9jVq58mLksn
bdlznis44IcfWxlk4V1hkPI76dQaQEHVwqCJ64Wu8AxPV9hPxPW7N3E/viwn
4qlua8SNXl34fqxubw1hoKL87I8VJSFoO/L5e9m2AHj8t8Mr6K8LtvA6bU1i
KejPXSirL+eLNQ9evjDihWP9fKXrylepSLs7NzSixAE+xn7P34/FkFYoDzR5
lLBRVf4v0pMgP172X9BCGklf8i193I+MHXklErfn+UBGc2MJ85o7NuySGG/4
FYkc6u77v3IjIB678tMnfy/cWT55Yk5zJCrcjeOC3rvj8KHdppv1HZB1kyE9
N4+K4vv212kPQ+H7XfGuS4Yf7HMsq8Gh4XagqyD5mxnYJ4MdE/LN8N35gwwl
lIj/6orEb0XRSL26xifc0gZD5NCYqgA6XC/WGCus1oOZV9nLF9N00vryg2aX
Ulh4GJmkVEBw8f0KwUuyDBLDPf12aYsuFta1HIj1oINNCrrlW3QSFwweVuzI
iEbP8sDnq6+F4cyaW6fVFHzxaufJgJopL6TNy7jim0KGtt7c5b6Ej077b9N+
gXNBSMlokfFh+kPI8tDfVsEQyO+bE5zgHYTuAQubJesC8cvoi8K96FjS96FC
+kwUEwU+KdOzlJr8I7KLHUvqshbduIEbDu2k/N4ne71xIILZOnEhBh735Zt0
O81w3aLO3OsxBZ2pMQbLwhywWD7M4PwWFxjcvLNyXmYUNv+dS84NjsXzpufb
q4X0MBKaLXw00AyDA7btHYkx4LfO89OKjsJ4lKzzOhMXlP27NGSxxgFLbg2L
cdooODEu0b/rtS9s8m8cPWgYCrFt1GebqnQhal/z3uRsLI4K7kkxOheMzIN2
k6su++PThUKDVU+pOKJ+dmJy+CTW7jhgtZNBRp5+SoLaBk9cPh3buLH4DBiu
9a6/4yNwZP4plsYWH3iJHjf8xSDmlb/r93rcCgF/z5LHK9f5Ibmi13i380k4
q917WN9MxdnCFsMRAxaJ3vqyd8STgWQzgzWjBDPLkuvkAlikzguqAkKBEeCf
CEo0ETuDbWXqP/WvheKay5+hmGIfCMQtTTKNpOG8rVi9319dLHHe8IV0Kxoq
H55f6LhlBtmWuSs6r+hiwaYU3ZEAGrbVJBsLmpqhYO7ajWXXonFFh1VsS/gS
ryP/eh1jwiEneqKp6VwY3vaJuFkdPYubL6R3tDxhkGZCJfeM29Dx7aSq2yy5
jcphD0cYpNLfzR3PpSmYFhaQ/HrZHgYmK3SFMu3x/TF5B20FBRsMNHmfTgci
o/aM38KsAPRZzZFUmaKghR1goRx3EvZGRgKfPZyxnPRpbqRmJM69jvt79Ttx
7unZD+ZOBUJZ+UbllV0n8exLjXAL4WPybOXPbIvyQ0JyXNL+o8GIDxc6y0oI
wvespz8W7/BHabJH4R16OKQvvI+wW+0BOl2hNWxTJJYEpTd1/XPCD4HegCsZ
MXCixsgN9OviXLPTCflIXey6HCYnRsTPGePwkf6bwQi4U7M54zZR/8i6H62G
fZBmvfouOSQEWlO6KcwwN+R6+6vv9SFDRbLed/MoFWIqT0vqTpmhJMihvlbF
DF+quFu63lNhHV/wIs0hFr+mFbzFyBzSwPv45v80OCR+/XPurO7ZKXJ8GzEH
Pwt/MRA/7gpa5O5Eh/izhH+1QmdKKNYkhbKsifgRkluwRWefD+r4wlZLK0PR
Xhq8pszLC2Xzb2ctkLdHk7FPatKzSKiv9dzr7XUCVe+42x4ZUCCgtf/4JMF1
68Yem3qcADVQeX5FTTS+eVr1Cz/QhfAO1eOsrkgk90TKHBy0w8aQmgq3E7pY
VD7w9FlFNC4622rd/uMO07c765fHhsGelFDzr5JNutgjlrHMkwa54mKvWbYf
+LVH4hmbVFscURcW6oS10j3vE2UiMN0rOHqDFQDmX7L8x7UBuBysfm5kvT+8
FU5urfUNhLZt9djYaira1t6WowgTcanb/uWyhBnM4y8pBSpSkRcbl5rdEIi+
bsEddk1+eDawSF2oxhcRP1uMVl8Pgv/SWx2qUhFIDTY6VSThhO2pIRZ5KWH4
6PXz4nVld+QcrvqaOBKEIRn90QQLXyg92P3TWtUHgykfkPYkGO46VQLPj7tC
IaFmx3rncNRKKvjdnAiGhOlYhFmJN1w2NCiInAlHybGa48YvXJC1WFl04jMV
9hLd5l7uurjwY0+S13w+id5w+TiLEwPvmH0rZuk46kcKUOOT/jCS07jbvGDs
s0RJuy8EOeNJXRd26eKGwn+P6oi4Wd32aLlxlTU6mf9+h5GioDSyeI7leAgy
CmqX8bI98ULgvFmYmx1i9744xauKwPUtgoVbCH9/bkDfqva4NXapC1x6Vh0B
+nAW6f56O+Qd6Pq6k2+KtDy21JgvBUFaq7ua/CgI+FKwM9vDFP/S1Jc0t55B
zY5POjsbQ+Hx2+n1N54jBKXmaT4VJSOCnJ7WdccfTkYvwzoIVj0skw57FIrV
i8bk1WzPYO9ymWETVz8E6zyKFZ4TCC9VwS+zrHbVCrMjdA3/zTEeS8mwtA89
ZKniCLejduPZ5dGICl2mc4rCJTWLDup+0+GStF+hcVbvkFotOzXlg7Vtf/6d
2UzMsxdOffQmKFxO9flH6AfMu/Z/30TFQtuZPTpSRFwmv9MRltVFdscwaS+h
D9vG8G2JOv/KMVH1G3Hve9T2aA9On0Wpk3dto3Yw4Jkb/4Qg+UXDyB9CVzb+
riGZEQYHCVmbcHEXnD8eYuJ2wwqXd2zNGZaPxEYpwX3GCpH4luXK2WZkhUOi
2ruvrjTFUrv/nuQmR2F3YoZX/hsP3BVJ+ZSrGYLIr1rOZQS5++cUFxF6ZLfH
6bCA0+h8aP9sXQEZTo60Au2UKLRXu2XLdZtgjwTVrOgKGawVQtKSb0/hdMTX
b9tsE0mj+468Sh6jgmIdP5pC8Hd73MvaiETSLYMPzJJqB0RkjnCvaIVjqlhI
tz9DB/+l8Jz0KBQsuG8bmE3wYovSCbVAHYRUiyy7XOAGmeelPeIrQ/HPsrtv
HcEFrS+MKgm9oOn+56p9RH38m5x6ItoBVvSysTq2CdoMg5VuBEciauPe+YFm
zvAzOk970xeKqf2hi4YJrn3h3xZF6O92Xo9ovWeJy3fTZpyWRED4MzmeRbxn
/VljwoFkgul37NXPDiaQbul+0pbdSkX5UbWYWfonlT0vOpRA+jAtcTNmWQRu
bTivXWJsidwoL1EbhVP4fJFZIN0ejoI/RjuVu8KR7jwZrtJli9/+xqv3rtGB
z9PuYf2bUfh27PDAMYL6jLn7V/QBO9KW1V4atofVo6939tLCkFvq8XsfwbVL
ZJQLCP3G1/A2GQYFzU/to9yeJZOkp5+nHfqWTBo6KC49q8fFnCllzTOBgHpb
grFHBOyRnve55ji6347pLdckQ+qY8CKmewTebPj63sTWGLWC8a9O7SFj30sP
OYeI4/D2n7rulQhEC2126s2JxCP248XBBBNiK+Yr7gcKlD6O5nTZ4J9o0FMd
MaK+HHfu0yZooLS8b1Z/OK04RXsUhf4tYj4znkmkqR/v3jnEJ5Eio4WlYgnd
4YbAXTLbCM2LpU4P8ciQ3GWneIXgekWtc1e2G+FZsFwTu8YCRQ6VH0+EhcN7
3snnVgRLLCZ2xhG6SYPG+rnCwM+E3LTbKREwOdWwejo5Amvkvi1guGrjXnfx
OdOENNKZsrGK4MpIYs7ozpjlaQFNjdsGaaR7oefv/pE4iqF6h673LeGQOdDe
/Y7g7rSz3FFCbwueI3w1ZR/uLQ2tK6khI2jcKMSW4CKX9AFLrX24SbYbnT8/
lZRlf0bRtSQC1VdX+zoTPLFS08WxPYX0jXG5w0qRhIaeouTMn+EQqu7dmEVw
8dLi6/sJ/b8dP66YtJPxfhNv8eL3GSSthz8t1GXPkQ5SSUuPEXptlH+q6gIy
DvbH5sw0p5POKFpsu/o8nXRrh2nEVkL/H5hyVxw=
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}, 
   {EdgeForm[RGBColor[0, 0, 1]], FaceForm[None], 
    GraphicsComplexBox[CompressedData["
1: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
     "], PolygonBox[CompressedData["
1:eJxNk0to1GcUxf/fF/uIKSVOqAu7sCoYkTqTiGKtj0nEB2gsbbpI1EbagCOI
WNpFlVqaMhqKSVNDgi0JTLooFokI1kRRF2rIJlpw06AEMpCFGoPZSFREbOg9
3N8ii8ucOffxv9+95y5p/rr+SEyS5I7ZPLOmkiTJmX1lVmd20OwLs51mX5p9
VuIx8lXj+9QsQ8xGYuR7B98Gs/nEpImR73l03yqzmegxy4iR70l031Kzh9Fj
3idGvonoPnHCilHf9WZV9Pg5fau3D/HVmEVissTIV4LvA7P70WOWECPfWHTf
rP1eih7zX/QY+Qai+4pmeWLGiZGvzeyk2QqztFmH2Rs282D2plmpWaVxrWa/
mGWI/dcCxoLnlCeeo9iFZqPBcxQ7Hjy2xexncpYlnqPYSr6zwOw9avwYvIZy
W8ndaLaFGh8nXkO5NeQuNVtOjQ3Bayh3M7lvm71LjT2J11DufnLXm2Wp8Vbw
GsotJfe+8eOJ1zieeA3lniC3UTqlxj1qKHcs8dy/zC5QQ/g4uRfI/d6shRpn
qaHcfnxnwYrRLm+ZNbPTm+xUu8yZ/c4etZt17O03s/XsRLnnzXZR4zw56+D6
qaladeT2g1WjGh1Lq6+i3001eDT6nYgTHuJmnoP/5kaegPu4kQlwLzf1EHyO
G5wB341+N7rbF9FvJMMtyyeuhNsRHol+B+KEu6P3rTsajt5z5Lbao3MD5Ci2
iZvS3TQQo7lKx5PBZzaGLs/ASbcZZvUIHYoT7gy+pwFqr42us1Z8O9HNZnAq
+Le15yp6kC5K8U0k/m3p+hN62ILWF8IJS3ePEuf60ZZyL6JJ6fAKMaXc0WJu
tAXtKfYUGm0BH0DzTeDt3FAWXE2t5WDVzKFVvT2FrnLgmeBzqwNrZnl0uoAZ
NKPTZ8G5XWhXsxdXSd/61mruvBK8g7utAed4u26xnRmcICYHN4pOpI0f0PEo
uBMdD4EPoUFp8Sf0dxftboI7h7a3wvVRQ7m78fWBFdPJHDSPP9BFJ7geXrO7
ATeJDv5kHmfQwV64bvpSL9vQYTe4IvqcFrOv2sRn/IzcYWpJRyuoWcVu5JsK
nqfdN5C/HW0chdvBLuTbiyalu5eJ12xgz6pVzs2JE86yh3awdpCjpmodY2c5
cAFNa68jfOMKMQW4A2i5lx5PofXrcBe5lUm4FDvQ7BdxgymwYlJo+3Hwnaxl
xhVww8xSs/uOX737I/4rR3FdZofZ6Q2wvlnLHL/lzQ30/SvcUfoehOul73/g
jpGn2C7xfEvfrKBPaWFedN82tLIJTr1qjuX0/JI5PoAbYbbX4Ap8swtuihno
rQV2PAW+wxzree/K4L1rrk95QxYtKHY2uAbECa/hDsWtmXNTh/j/OvhN7Qa/
Cj4HzekyPYqT76rZbeLFTQefwTXiFF9MfCbi5R8KPjNxwm28U3PaN+eNBf6f
xqe5ZeBmiZFvhDfNgl8Tq7kGch4w1yLcYfZZy/y66KkNbhH8U+Y6yFz1/zGz
GARfhl9Jrrhp5qbZXOLN0+AOeM0uD3eVvtV/D+/aR+/N8KfBPfQ5RK1v+G4b
eCt5emeanCJ9qrcyfEVwmp5ryS2jjmo3wnXQZx4uT8891C8jrnHON9NzYv8H
UkSHdw==
      "]]]}},
  ImageSize->Large]], "Output",
 CellChangeTimes->{{3.69375412037878*^9, 3.6937541463142633`*^9}, 
   3.69375417720403*^9, 3.6937542845601707`*^9, 3.693754431642583*^9, 
   3.69375448526265*^9, {3.6937547609974213`*^9, 3.6937547703989587`*^9}, 
   3.693754938982601*^9, 3.6937550513370275`*^9, 3.6937551109284363`*^9, {
   3.6937553237626095`*^9, 3.6937553490410557`*^9}, 3.6937554506568675`*^9, 
   3.693755529819395*^9, 3.693755986289504*^9, 3.6937564241895504`*^9, 
   3.6937570157013826`*^9, 3.6937573464533005`*^9, 3.6937574999590807`*^9, 
   3.6937598869556093`*^9, 3.693759959214742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"ComputeSol", "[", 
    RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol", ",", "eltype"}],
     "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.693755774970417*^9, 3.6937557865700808`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.3593687129303431`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6937564570964327`*^9, 3.693756534267846*^9, 
  3.6937566140414095`*^9, 3.693757024778902*^9, 3.693757355424814*^9, 
  3.6937575091876087`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sols", ",", "dsols", ",", "X"}], "}"}], "=", 
   RowBox[{"ComputeSol", "[", 
    RowBox[{"topol", ",", "nnodes", ",", "order", ",", "sol", ",", "eltype"}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stress", "=", 
   RowBox[{
    RowBox[{"ComputeStress", "[", 
     RowBox[{
      RowBox[{"(", "dsols", ")"}], ",", "210000.", ",", "0.30"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.693230238317814*^9, {3.693235462810638*^9, 3.6932354642807217`*^9}, {
   3.693483142061198*^9, 3.6934831434772787`*^9}, {3.693501417415185*^9, 
   3.69350141855025*^9}, {3.6937557970826817`*^9, 3.693755799570824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sollists", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"refine", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"v", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xi", ",", "eta"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xi", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"eta", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "refine"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"sols", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Sol", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sollist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sollists", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sol", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"sols", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Sol", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"sollist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sollists", ",", "sollist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"sollists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sx", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sx", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stresslists", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sx", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "stress", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"xx", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"yy", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Stress", "[", 
         RowBox[{"xii_", ",", "etaa_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"stress", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "sx"}], "]"}], "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xi", "\[Rule]", "xii"}], ",", 
           RowBox[{"eta", "\[Rule]", "etaa"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"xx", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"yy", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Stress", "[", 
           RowBox[{"#1", ",", "#2"}], "]"}], "&"}], "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"v", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stresslist", "=", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "s", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"stresslists", ",", "stresslist"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lp", "=", 
     RowBox[{"ListContourPlot", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"stresslists", ",", "1"}], "]"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"Contours", "\[Rule]", "10"}], " ", ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "12"}], ",", "2"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lpd", "=", 
     RowBox[{"Show", "[", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "300"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"lp", ",", "lpd"}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.6931440499884806`*^9, 3.6931440691165743`*^9}, {
   3.693144984835951*^9, 3.693144985092965*^9}, {3.693145048861613*^9, 
   3.6931450689137597`*^9}, {3.6931451020276537`*^9, 3.69314512749411*^9}, {
   3.693145160407993*^9, 3.693145163173151*^9}, {3.6931452083827367`*^9, 
   3.6931452093477917`*^9}, {3.693211726356371*^9, 3.6932117296435585`*^9}, {
   3.6932118758029184`*^9, 3.6932118930689063`*^9}, {3.6932302415459986`*^9, 
   3.6932302444241633`*^9}, 3.693235166167671*^9, {3.69323545497719*^9, 
   3.693235459291437*^9}, {3.693501420228346*^9, 3.6935014230955095`*^9}, {
   3.6935015338318434`*^9, 3.6935015591632924`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
m8Fq2vRwbhk3/5DzfHOeT87zxanPnDysGXVdmgVRpohZHPs23yceZTYG1PAQ
S3b9zHqneJiWV9Tq+21G7AL3sm/m8Xg2YDZFwtMBg4eeHjloSP48B29v/f2a
WsMVprgy/5DKoug4Ngf9kowlPppd05D3iYOr2CUeOaHNSA/h11Wxi8P4J5Ez
9n61R3ZK2Ab1DXHg5O1RKw7YfugzQXhyQ+Ipeiw+7NE1+HXfAq1DaYUi4bGI
796jInTcBksyt9YFusb+p24x1R4Whvd6H2yKxV+8vdcjvL2qA75dGWdMcFJH
8L5KVgxmft1XtDreAk1FdpM/J8SgUM/V64OhDazSByxObomB13BBm7g9lL+0
7fE2j/mtPjv9QZ+Ff6PPnPcnnPcznPc/nPdLnPk+J6/1qbts1Y/JkZhjs4pf
r9UYSFqfk9oXgaiQuPbF5maQHhMZJvYoAiUbR90QrbZEXMfxjQdKid/oqjj0
bcVmLl7rYD7vIN+nSEiaafRGBG+Ca8ZPmkNjJLwn9e/oGm+OmqResYvkXJyv
O7nMPt8KiiHdeaLkXAz3Ld5facvFa81e80ZlUh05xzOkXxeNMUHqwWMhqmei
4NFkgqJr5hj91OKMXVYUrlPX7T8aaw2BjrefkmKjsGKx0M9CNTsunudpnQd+
M49FY82ptnvPM0xw7IyNo/COaARW7uzxDLNAFV/eptGR0XgU/mR8n5UNO//q
cyD/fXhwhLr9P5bX9Bt5f/FBBUb4oDJlhc1NB2NA9x41b1WPCWpbFbIy02Ow
9KH4W9dm4rde5ppYRcegf05n0dZaG9wu6Zsw3SOGzSk9X2bPxQf9Ne/ouu3k
nNyfNzNqr64p7skb3pfaGovujqzXjtqW2L+yy/RkbCzE7/8wnL9mMwLWsh6t
8ovFulerz3RpOXDxQXUpDZeNdsVh2ivVez+Ivp3KLBhXSM510TeJZttjltgl
mmjOS4mDSoxg19Xzm9H/0S3fMTQOl7YIfJe+7sDFj/xWs0COPy0eDvtM59p8
N4XvDN3VCrR4dp+ZlagV2rxdLW0S42G2cCbTUs4WNpcSfZNj4tl9OnIyjlx8
smf++r+YrmbsejNzsk696vj8NNUKPb1Jl25dS0Dow88XnxTaYt/NfptVZG1q
E29EcXPEyvnMgVPlCQjk4B8mf9ZME5U1gwHjlsJOzQTsan/KP3eNFT4tXq17
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
fMvppnlMTB/YsfWIKgWXRRM6pWYyuez93j/Y+/ARe7/mN/aek3eRuE4x6I54
MlpIgNq/k9jPx4J83ZOTEZA5eCmDxPfJTZWZQpOSwaMY0q1A4vscXRtZeZLv
7LjbOavuG4nHR3gXOiO8C7/1l06k0pJQ2rr+F7JIvuq6Y/uZlCS8670yo0aY
hRmXtUNbSP71SFVhpXkqE34m9VaClCQkDdel/2Jw8S52tG54p03yPWuVccHM
vSxc/jBNMvprIpxMYmJGi7HQ61thUtKbCG//jymRLCY07fVT35D8MYjlmv6R
l8nFu/g08ePc0T6JKCdm4OF+FjZHE0/klYinp9SbV05jDXNMFZJIPnvl8dkH
OdvJufIuP1fpkghnn9m3eASZ/1ifb/9Gnzn5VZpO9LF5ZlQsI/ZGjcECNo7h
X2RCxeDGX+/tfjGhWLOf9/RGKi6Gqm5MCGJi8sPNY9TXU+GyaMepQx2Mv/lV
3iP8qgXE/8neSEHKu+it71gsFM7MuJF9PQVPZv9yOkbyI8mLKu/GXUuB+wfW
ct8wkg/OfDchoiwF8iYLBeW7GFz8qtGX96w6p5ICseJZrKx0FobCtVPGK6Xg
/JfBxm+8JM9Rfl/roJACK9UXs6yjmOz+m3NLUvAj6qr7xQ8MWI3wq7xG+FW3
r5g/0ipIxnPBuwy9HSTOd5qqE32Q6NeNQT3dcSzc0rx1+nxeMhjr5fh04pgw
M/eU/pyTjOqDZtfX9jK49DnpX+ozJ4/yVOdx8YU7aOilrzJ4T/KklWdvhUlu
o2HfwLHqZpInVcW2NYml0WDW8l2n1oOJDXqjVAVZNEiqzK+6QvKuv3iUNiM8
yo8mnaI3R9Og8PCuTQKJK3/aZEocGEXDnvbT9YMkrjRcBpmYX6kgWYF+FMlD
Hj9sW2T5M5V9391P4kpOHmUQSdhcg1PxvW+tjxiJo8t43K/OCUxl30/OInH0
uKhC31a/VPgO3TFcQOLo4Tqugz6pYD9UkTj6Lx6l+QiPUjXNSnB0G5U93/4I
ifPjC5WdC15RcVfYtl3jJxOjrGZdNGyhovae0PpGEudf3icq8uE5FZsWXzjr
3cr4n+vz7/zRi3/oj/7iS4uN8KVdwxN2rNNksDmJC+JI/Lf4QZWcBgO1hd9l
VT6QPPqVzNfxqxgIuT9v3xpH4s93By/qVGNgnZm/kHE9g4svLX0p7+quU3Tw
iWjuFCN5//RTkeYLTtJRx5zs4PuJCdFDJt2lx+lI3jVe9iaJswSz5ZIMj9Gx
eMmcPslGxt98aZ0RvvRrlVOdL6TpaNt/0o+H5P1Hl83ukJGi48rPDRmHSRxI
0qFX7rPow/z/CwYkDlRexNdcNIOOmRHnnvc0/ff6XPknfebo7yzftV3KYps5
siqmbZ8rT8X35O4rWz9bo7zx3t6iZVQ0mPFZ3zCzx8PQwgIFZSq73yVusxOe
HcovOb+cysW76JWNqW7yMYfVjRnZGbkpmJh6OGGo2hqrpupG1R9IwTgDwVUL
59hD6Ov2zcKHUth9jQu1nNjve+sLuHkXZw5sCrA0MGfnN6NFUrDvm7deYI41
Sq2vWH2blIIJb0KlmJ/soBcRLfJ+cgoSl6+MeSDjhKq5trdap6TgLQfvYvD7
JInH88zx9O7so4GUZBx+smpia5A1lIkhkkpMxoulOmPel9uB8t31xt2kZDTG
7IqJ4XfCxbZS06iU5P/5+xFnf+dEx2fdK2+Zw+d20bjWcBq7rs7UyAbEbO7u
iaQBMXwTfevs2dzcb9E0XPJS2lBZ6ITejQElo+NomMzRrxzVQ/uOS+boCmzx
PtOeit1Oz4VkVGzYdVHP36TCI+iG9Jhie7Tl22jzd6aiX5hETLucoLfNsES+
m7tf+U3Ucn794+YIMh1Tm2SaCidfVs5HSRswJL9Nu2ueCqZnilL2dntkhE90
E7NKxbLzIm3SiU6g2+uW2NqkcvUrm41rE9243xw8fuLyZhVULIlctaR8nA0O
f3exuVxJRbG9jq58sD1WTG5IkblJha/t0Ml7fk64dMmlhH6Lu1/53+oz5/st
5/sw5/sz5/s253sjZ7/yuaYrGyV5LKC4wHNyihwDJetlJWqibLBKgfJx9VIG
dl292Rbea49fy07U/lJg4LTYbUvRC04IWfyh6LISg6tfWS9iWdKC9+ZoptwT
3riHzr5P/OZtgz0942Pv76ODx+zuvttv7KH31qNzUy4d1Z6zzNefdkJrQIdl
wwHufmW3gW0XFJ6ZQ2eC+oTpAnTopoXwz99sg29FuwQcBOlQy1huPuOZPawE
xMceFqJDKqVrE+2EE1wXXOHtEqb/Y31e+ht95ry/X/7/eX/f+5v7+6UjvCSj
EV6SRJBPmUkmkact9VpuiznuxjW/u7ovGfxb9q1fcMka2v2rxeXykyH9ccYl
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
HNd9ZEjoWdkUlsGwaAxuibbVVMZG4/8Bluo/0A==
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmMlzVccVxt+T9VBeucpg9O4ToFliSoAqB8qQIrjAGw/lgMGAEBIESQjE
LLA32EkQk0BMC3vhPyEkzJMgMcSVyVmkMnmIU6lisEECCYnZZpNNvs/np4LF
9/p23+7TZ/jO6X63uqX9rU0FqVRqpH6eUbtU7U+FBmG5sExoFn6UTaWmCjOE
1eqvEtYJK5i/UmgUmlizRRiTSaVKhVZhrfBiNmS1IPt2YSrVI/QLh4pSqS5h
r1Cmebc0Nig8LgzdPH6Q9+4PS1KpX6otTELmMva2Pq08t6KnnyutjzBa6Eti
v1tq16u/QWgTKng/SrBT2rHxajqVupYOGWWyozwT89vV3sCGMvVLheqCsNnz
LPcbvbsn3BWeV//bwhgrRZ8q9vBe1sX7VKHvDem3RHpeS2LPikz4rhtfnxcm
KGY1wvhU7NEn3BEWSs48Ya5QyxzPnZiKvp8focvQOsfB9vQVh7xetffVHyiM
WPUzz/PvFYeMu8VP3tlOx+0msSspCL+8XxTv+llrO1dj93DhocaeU3tKOC0c
E8ZJdpUwVmjR+jbhzWzYUY29FUI59kySb8YJP8hEvBvhgjlYKVRlgidNcGKK
+vOyIXcF8xvg8gqer8vvdXp/Ve1szZ0pbMrE2p2sH8Re+6gNu2zfA/llivTq
V7sWPtneB4Xh08es6cW378PvEvKjGVmr85F7G/ORY2vgtbk0Ej59Uhz+GiyO
Mcv+Ftwjxg/Rx3r9VRij54vFIcsyreNt2fmBdLiTxN5t6PJxLpV6XTz6Qy5k
3kfuWmyyP5dKx0XCQmGifDMBP5l/rwmvCvV6d1BjL2Tj2e0PhV16t1vYlo59
m5H5E9a9IbxC634r+nrOJvnlJcloz0c+Oa8Sx092LBaOF8Re1muv9n5L6xcI
S9IRiwHsuY+/7LtH5JB5aTvGC5MzUdOc05uFcurFKOLdzngVee38HYEuedat
Z86VdKwtJ4aOZQnjV3nnZ7+/rLZHcapUvAaKY26e+WW5GP9S4ytka2NR2H0f
TjlG6+WXabJ9ndqc1hRT477BTuv4iLy8Q97aJ9/5Bj6YF+bnB3DU+ywritpU
is3VyByBPZY5HB9Usqft+iodc6vg3UZiuZZn58kA9j6bCzkPkdUjPeq1Z0U+
aqFrYq0wX/YtL4o6sSMTtWA7cRtH3/rWo7PPopXCGt5NZu56YbWwKhMxdOzs
M+9RkwleOx+8t88v910/VuP3MwURhx3InEQeVCPfZ9f4bHBsrPrfp15V8b4a
fccyvk/oct0Sdgu7GOuQD98lXw6o3ynsz4Qetejp+mQ99iK3lH32ZGKN8zBP
rByjanQdsrOG/gNywnpvUf9tn2uZqHl+9lgV55Zj65pRjp+85xj2reFMrMa/
9nMTPnd/Hb6cSN3YwBy/byFWjtlm9vR4Bz7cho+aWLMRPd+xTPprmNuBb9uY
u4H9JhAzc6OVvdqQ+x0niHNzUchq4f1V7gUV8KQcWz2/tSi48ix5Oknt42Hh
p950yO5Cb58Dts13ie1wx3pWwokq/FeKD9vQoZlYTybe1nEVPNgHL3bDrypk
lSOrBh7YXtdi57jP6w+LghPDyYFO/LYbnfy8nXYb43vY3+OjqTOujbt473n/
lf37ZfelXJyjG4nRTmIwGZv2YZdrts/YncTjAPYM7d3J3F34cQd6mPO+h7wD
D1x7ba+5Wc1dqCwVd51+7m+9tK6bpdwxyriDuD+G52r6XydxvnyVxNg47iS9
1E/nRyX3lyruKWXsPQ45VcCyK5lTw31mLmedz8BDRU/uv2XUWsfItt3kzrUG
f9qvy+Gp6+FgEnP/lsS9ZiX3hwP4tBUcxL9N8KcZ/vq5CT6tgs9tyDbXnqNG
miv7iUcLsvfzvJtnx6uZs8Myi1lrGZPIEZ9pFwqivnr/B8NCf9vs/GgnRzaS
u29jdxv9VmS7Dm8in+0b1wvXmM1w5CA8Gc15bT08Zwty9qDvAdasY+898K+T
uZvJXcdhC8/Vvqdm43/MgmycT3XZuAf5Tu67VEk2+OnY9al/Q7guHBPuCIPC
XeG4cALcY+y20E//x5IzPRv/rUq4G5gjnyfx/qLa53Vejtb7YrWjsrF3ubBW
/Ua1q9S25UPX0WrX5EPfVp+z2Vjrdbck72vhJnrdRddGztU6ONECf25ih9cd
FQaEI9g4yNgd+pa3l5x3vo/kjjN036jjjF1G3zG+wHnrc7eO+14D95RD5MsA
+3i/au7rD4hRGX3LXM794Dead1Y4I8zJhn9nMrck+yRet9C9nftnudqL6ncL
HwknhVPYa/18D/V/m2cUj1+rLUji/5vHhv7P+T/seWDbvK6EvR2vhDwzV6dz
f3bcK4iP55gb/xsW54s5WMv4v5I4e/6ZRAzNtcvcN6/Av8MF8Z/6KBzKc5++
zHzPK2U84cz3+h7hXEH8Z7ItM/GbdevlXnAN9HD29cFh75vPh54l+fgGMCEb
940R8G9kPvqOmWP3WRI2fppEXeziXmUfmwO/sl+Ju2OwhbuIz4GX+IYxKxv/
Mw9jby1+LOfddGzwPo/xp31zhPkz+B7i/y859Lcdo/Kh/5UkuLyIM+w/qmud
kvFlLvLMfHNdqId7C/CXY+p6PB3ZL/Cf07ViNnXFfvAea6n39re5+jI6z2Ct
ZZxE5xPCpXRw9Gdw2+ss8w58do543VL+n/UTJ+d5OTysITYT0KM3Cf/fTGJe
H3lxnVpxC47cIPb9yLvHuz7m9vL+NnVikDrjfLwg/C4d/4Ntm2P4cRJj13IR
rxnY+x42Ogd9R/6tsPWpvt9fQp7lnidnvWYW/nsZzKH2nSZ/zRfH3Hr4P9Wn
8PCLJHz5IjFxLpwtiG9pzgd/1zhHjneTJ83E3bXHc08So8XZ+M5h3gz5a6je
9+DH49SGBji0mPPlGHXLtbQoCW5nkhjzO+dEBWekz9ch+y/BiYv45xT1y34p
zYcvyvJhv/d2fs1K4kz6IIn+Yfxj7jSgfwfy7Pft7PEe9fU4ui6n1rn2+TuA
/9P8Ih3fdnwPqtPzH3Nxbv4+F/W+iTPgJH61f30nmYfv6uHwQs7eFr4dmQPn
4EQ3Ng7134Ujs6nzrqenyHXvM1/vFqfj24F1WsJzNzI+4n0FOten41uD5/kO
Nz/95LuD39u2hczx3MXoaj2PEAPXL/uykRgfY+w03D3DszlxhTy6wL3JfrLs
uU/t7/YN4nyJ2DdQx6bB91Fwfg61wX3H68RTMbtAXu4iVjsZO41M360cA5/n
C7DRe7+GPvMYW0i/Ec5MgzdvUjO9v+ue47Ed7nSwx2l81E3fz9+Di5d9Lqjf
hY72ub97TgH1jHXCS8usw8dDvl6ETieonz6z/52L+Z/nok5OhWe+o/p+6nNu
Xzq+ZXnfv+Rir09yUUPOk7ee5zPF6xbAG3PC//XG8h/Nd8T9yJuKLt7Lvt6b
fvLNrIOc+XMu/PmnXHD2CLyt5ZvvEuR1su5SEjE8qfbvSejyjyTkdrGvv7m9
Sv88OWp+bSXu3ncrrfNnKbXNOZnm+7y/03dzz3E+7UMP6/BZLmrCF7moHUeZ
04ldu9HDvHkdu19Bn59T/30OnMPWs8jvYk0X+vv5/wT09WE=
            "]], 
           PolygonBox[CompressedData["
1:eJwlkzlPVlEQhocvwCcdeO+5sihGRLCh0oICCksbEjGCiR1RAQnwA6CgITEk
FHyFP8GtgBAbEpAIiIVRMSAYwiKrrIJaUEDDM3mLN3nuzJnlzJl7ramzviNl
ZrdRNpqOzR5mmVXB/yOz0oTvtNm9PLNm+DK6AxehAjgTzAY5/w4tEXsFWy2+
GlQM75OjnFxX0RYcJYotRfnwD2K6iO1B83A2+V7S0CuUhnOC+DW6AJ9y5m1K
Z7L4PiTnDVMNrzUXK1cv+hmrJ+9tBI1xPlCzjNqVqBD+gL8O3330EX6C7RG+
W6gNThHzJqWaXnslKPY5M9mGFyLdrRh9hp8liq1GT+FtbBWmHqfhVWIaiG1E
m/CvIPYZb/k3Nd57r2gVXsP2IK2YjSCb+3xms/AlalzP0538bstBs/KYdXgP
DcAv0CH8O6j3frQLX0z0Fp4jhr9h+5drdoK+w3/p+Sa9V6JjeIyafdS+i8bh
hVizdtsiXJRoVxpQCzxMjn18x2jO+4m0W57Tc38J6s1rfoUnYuX2N5mMtUO+
S75zJb4vnDnLVU7PPRPUq9tm4dGgWr6TNfAflElrBj6Lo0h38TfZhR8n6tXf
vBXeCZqNxxzA7Yne0ne6A56KtSv+j3yCh4J2y9+sGz4HF+56nA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.39742044186367353`, 0.5186473446352755, 0.9465442570238232], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmVt0ldURx7/kxBPIIYGQfCchXFyovQA2iCKFtk99a19cVfugT4r10lZI
kIAEEqjt0opdBhewFiAgFw0JEOSaACoUr0vRqlXbrl5EFG9YrZZggZSE/v/M
7xQeJrPP/vaePTN75r9n74yd3nD9zOIkSX6kPxnxKyqS5HLRf8uTZIJ+XyW6
UvSNNEmOasB3xLfoW7doq6hLtIl2e3l8c/tNjTuVTZLXxTsY47EvlSbJq6J7
1D4nOiMaEH03nySPaPwOja/NJcloUa306NO3yypiXLfGNIjvFy+uSZKVQ5Ok
RPxgPvS+RO068QrNHSG+WWMf0lq7xf9anSS/K0qSP4v/Sn1ny5JkgfhB/f6x
+p8R31Meczx+D3y/6CZ9v1W63VgU9tnOJ0QbsKuDcU8xb5xseFe++pb4XyT3
Ac17W3y51lslOuCx0nmm+N3iS6XvMtHDuZA7bnDoUS+/jxP9RLSkNObvU/8B
zdkv+z4X/4K2+7bp+zDJ6BQv03o3a95g8c+lxwr1HU/Dhumy5Trxc1Uh+2Px
NZI7TXNXi++VrBniPeLrsNU292r+C5Lzb/HZ5bEXtsFzN4rW4u8l+Hy96NHy
kPGp5rSp/2Px90Wtav9DvFT63SQdisQH0Xbf9eITsX2C9Dqn/Rqfi3Vz4kNy
sZ5j5/tqN4mXi88Rr5Xe35YPU/FhokvVrhK/LRt7bfub0N/ypupbk+YuEG8R
7dP3VvH7REvU/0A+YrWPeHXsziCWZ/PbOmVEA9KzGH38zXrO1rgmUUNp+GsG
36z397Dj98TQwfLYY/vPfpyjOGoQNYnuFc0T3ZMJO2zPGtFe0U5Rj2ilaJlo
qejTqsjhf4l/IF8vlLyj4rdnI55vyUaMmP9UvNp5JF8NF1+rcXeqf4N4i2iH
2tvFn6uO2HlW/Ook5nn+S9WRJ8+Ln6iKby9Wh50z8JHjxPY6zmbIhrux5XHJ
vUsyNqahd4vk3FcU/GH97s7G+t3Y6bG23fqtEi3H5nbZ15gJnyVqb1Jfh+jv
0mOrfSL5s1jzbvzp33NFszOhk7+1iFr53oT/Z5okc7toEftwL+M2ggXGgTvl
uyLZN0b8xiT8MIk4djzXg6k3JPF9OrhyK3vgPudApebXaS9GifeAqd2QceZp
8NT9PcTMcrBlEpjtdZ4itg6J6iTrh5I5Oh/jCrG2n3hz+zV9S4Qne/IxtxtM
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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlUtslkUUhudv61fg9wfx/2eQe0waArRAwC0rlm6IwEaWRu60bCDhUu6E
awJESCgLARVk4UIicm2tLdAu5N4KBMJd7pQ74gI0Pm9eFm/yzHwzZ845c+Z8
n341Z0JdWQihDlWgszGEd1kI/6Bz8CPUUBnCFvQYbkQ/8i0w7tT3FMLBAvPo
MfwBc/3LQ+iHKuEBzPXrHsI41B8+jOaydh5qgp+wZlulz9BZg5jL5UNYxvgO
48R4GHurUAl+iAo9QziCnsBvWNPO2lrsHWL8jPFxxifQK7gi2pe+KIN3oCn4
P5kQepRCuBF91lL0FzxT53F+BZoFH0FzCvZZvu9izdTMNnbCXcm+KAfKxU3m
lmBrMboFt3DGpFwI49ExuIy5PSR8NyqH+7KnLO+Yp8G/S9haz3gp/CtrNnHW
VnRAsWHjy5xtnoDb0JjguXb4z+i7yaHzcC02RuYd01TFgj7Le64Ovsaadawd
Sn4/0XfGW/jWgNYxHph8d9qjva0oEG8FOg03cebnnL0BXdb5aDlcjzrgU9h7
mfmOu+AVybFtQivh2aiu4Bw3wl1FfOWI4agN/o490zLn/Ar2TrLmbcE+nILL
+4QwGK5Czck+ybfu6CzcyZ7VOft0Ab4fXcsb0QN4BLpJbdxCQ+CnnFmN+Rr0
DI7MzeZbLaqBB2JjALrIt0toFWdsU27QfHh1cmwbVcOqZd0XtiahAFdh4xq2
rqPh0TZlWz6MhM9Evz3l7DR8o+RcHmDcHF3DqmXVUA4+iDZnrhHVyv7oWtmO
DsOL9eYyr/mN8dfKWd41Nx1ekOz7XLQQPpOcO72x8+KS34pi6FZyTIpNNbIG
HorN2+WOaRg8KjqXmtO3D9mTR9WopuSaVG2qx3REz1W/z6lyOyX57cnHGck9
Rb2lBd2HL5Zca7rTS/Da5FrVHeguHhZ9d6PRC7hD/aena0S18j1nTs9cU9+q
NlFbpXvI3+oXrGno5T3a+w1zP2XueWPho+oh2ot2wx8n96bB6KPkmlBt/IFO
Ft3j1Otks0XxMPdFcI3fge8WXeuquQdwZ3Itq8ZV68Vk2+qhveFjyblQj1Cv
uBrda9Rzu8H3omtbb/ouvCj5bvfj7y+M+yS/dfVU9VblSLlSD3kJ/4smBPv4
X9E1p9rbh+qjY1JsjYoNHYquNeVkb3ROlBvl+Af4RXQvVo5fw60l90L1jGa4
HRsTg898VbSP8lU1W5/8ZvR2tOYd33+O9kV30gRfj+7d6rm39R6S/wXqKUfh
6ui3pn/Cc/h/F/v+sQ==
            "]], 
           PolygonBox[{{5094, 81, 5099, 5131, 5132}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5835541231076635, 0.6727945518092866, 0.9603586646816735], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
P0Vs0OOqgS64/v8BiGqd2w==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVlslkUUhgcoYre//PSf+VUWA2oJIkJMlKUQwDtvNDHGlcUWi7KriYkt
azW0AsW4UBVUUIhgVNQEWqBaBDRGFBHFpAgoRIlolNBSwBtcnjevF0/yznwz
c8535pwzg6sX3Dm/ZwihCQpgZQqhuDCEvrAa/YLGJSFkYQ16RC6EG2AgDII/
mdueCWEbtKNPl4fwK5TwrRSGxxB+6BXCEbgePQA+Q38CV6IHCwwPgWvQ10av
7YCh2suZFdi+jfO/R/fgzHvxcyr0QZ9g7i6+3QdH0B+yZ1FRCIthNONBjL/m
rC/gavRIOI4+BhWyha8d8BUcgLHMjcKX4TAO3Q9msrYKMuhymI2ugSy6CHoR
qwIowd5QfJqBb9VQjs4w17vQMS1LjknJ/zFULPtH+/YpDEQX5ENYWxbCi9AT
3TfalnyQL6OjfauAMejSaN+mQEl0DBVL/fMQdCE2puHLdChC3xy9VzG/Bb0Z
Fl4WQh28g16HzZ79iC28in4p+e4TNKP3wariED4g3r8lx0yx+xjaYRg2GoJj
oFhcx5lH8eUE3Ii+IvruFcNc9B3qLuXj5eiromOhHFGuNGBjDfaaoR79LzYe
YO3d8A96Kj5uzIawBaahL7CmnrVN3P8SdBVzm7Jeo7XLmXuM72thBbpL/vQJ
YTd0Kz9Yc5B/OwyT0X+X29Y90I2uZc8T7H0UnkQfhAxri+AQ+lnYVuyaeT65
hlRLmluFfiZ5r3yQL2Ox0do3hBYYj34YOvG1C+agx7NmOf+yDCrRDzE3G1t/
8L0GfTbad9VYZ/QZOqsNJuQdM8XuOXga/VSy1h0uRU9hzeasfRiHLkrOZeVs
qXKXuXVlzsndjHfJ/1J8gBb07znnnmqgkPEYqCt2jOrQF/FpL/7tgQvoW5Pv
phEmJyPdAJMUO+UgudgMLehd8Dh6A2xBn4s+S3d2Hv0e1PNtGWxVPeecy7Xw
NuMJyWcrhhOTY6hYLoVx6I2smcvaebBJmrlZ/Nsj0JZ8p7rb3vANem+y7gHb
0T/BHRn3oK3JNaJa6Q8vo6fnnZuKsWK9IDr3lNONuv9kX/QP70fv0d4B8Aq6
NdkXxXBHcs9V71XPUu+amPdd78d+Zd4+ybdL7Dmgs1j7YHDNnGH9QuZqi31H
uqsKvlcFr9Hat6Jj18j4JsaHk89SDigXLjI+yfmnoBs9mLmajHNSuameq967
hPPbOauauS/590MwI28f5atqbBJ6RHQvVo9Qr1DPV+9Xjx4W/abobdkJZ9Bv
qP/i3xw4in+fl7s29SZcQi9Otq1/XIReH937tGcDulI1XuAer14/N+9a2w8z
0a9BCb1vH6xAvxltSznyOnpl3r1Ra7RWPVq9WjWxJ7knqjfqTTyNfjc6N9Vj
1WvLcn4bFPMs+q/kWKpnqXd1wneMO6Ar2Sf5phjOyzuGiqV69HzlE6zPusc1
oVfn7bvm9G1W3r1CPUW95Rf1kIzv7BT6XHKvk03Zbo2uPb2hektV46p11cRH
yW+s3tr74ST652StM3V2R3Lu6s3W290WXVuqYdXyseS3/Hb4ET0q51zTmzEy
5zl9U00dR59NjoVy7rz6TXIuqOd+i94R3RvUM3ai/wN0UDUx
            "]], 
           PolygonBox[{{5122, 91, 5119, 5094, 5095}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7781538084743556, 0.826618936458936, 0.9785227574340886], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
dz46fy7673/S/J+fvxXwP2MJaHuM07E/o3knqcdWPcYbiPf8mZWR97uI807P
p89w+g0mddn65+/Y/T27v2HvlYxv3W1jRkF/AG218GBaZwHm0/xewPzGIZtz
edvwN/CO+zjm47SRGNBY5m98f9u7BZs0Dpl436eqg0ZxddAbi4zGME/Paxi0
/c29z2r/B+D/Aaby/ccs3lly4clzysrJfYbD43m0W/71beTUn3n3gra/53cf
248R5NcL7sZO9kJWtkn14NeCs6EN3t3Y13WUbbvm4TtYl113B/Un8caUz3ni
885nSme+4/X3vMdiw3/BWeX3KPfxNw0+99Yw1j3wt55xXbede7DPLePdCX/r
wO1D/5W09WUu2TndS/t6cPuSX0d5OGeu5bkkGd+z+LuWO8lbDssz8Ya/NBNr
1Mg6jUcXrBMl/LPpfzd9NjZzZo1iPcfQ51R03/ppmlmdHUPdYv4FnpYJvu9m
HsciP3+nfDdzzZ6BTrO8L6G8Cpmspb/n3S95+Htofx/tdtuQZeAug+6d5E1v
GD6bfbf7iS39/E0fttC23b60/ft38Km34Ve/Qvl12ndSfy+82M75rWEP/mjW
zpr2bu539rdsE20L7L/431/HUntzHn2IjTUvr3FmvkrcIXuXewMeLIv99NmA
bbcvbr/OMVL7lz63+kP/Dei471HEjl7jjvIK473NvN22i/FeJ/8683+Huewk
/zb+46voteflOfVhXLdtBHcbZ4BjQubTMdgF+M296bMdXrbB1wvkPZ/dyHAX
/02/mQ6/uws0VnGH8v3lXcbcSJ93yf+VdX6TM+lT1q07PJiO5em7jdfP77mO
zfqM2sf6Gn8Avr95Xkgc2TFm2yv7OLZZu5Ghx3acyXfLP+OfrGN9/d+wv49w
LOUA7Vk8l/1elX37sf7uQvam6Xu048k9kX8DNvnm7DcXRfG98K3Z+yl3FfPc
wJ3C9wOvUfYdz282fodxvP815GQdKSeu8hfk6D6OORcRxyokfvU6evYQct8E
v7vQH8t7HzJcVx289kxHTGEg8QLHl0YRY8ojluY7+YZ0xO/WpmOPfQSdocjP
c7bsX0X+r6FD1h+/XSSJqXvfrMWe1qA/P/uF/Mft/7nXs389/xuIQzoe+fO7
cnGsZyH0HPu27F9F/83jAXj2vdXxP89hO2tuvvqzbo47WMds4z5E3xwvt855
LtuZz/8DnI3QrA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVls1UUUh0dar9Jeutze/4xKhBaiURBooS30hi6ICihu2OLSSLHRRFxQ
WYxP+GAxoS0F2t5LK2Uz1rTSVtEHTRQwasID9c2l7mJEQwIioKhR0O/n4eGX
+92ZM2fmf+acMyXNTy1bPc45txVlo/lJ57r53YLK4Bu9c205zqXRQnhzcO5w
wrkPURv8Cuoscm47GoCvZ81G1raiafDfrJmY71wxOg9fQCXwFHTMm41s29As
+FF8/Fzo3E/oEfhj/I6iA+ggKgk2t7QAH7DDx5rLnVuLsuCv0K15ztWhL+Fq
1Jpj31AHN7PmCOvPoqlwadL2bkezk/ZN+rYK9toEj7BmPb5/jxMTODdyLpbl
XCOKw68z9gdzf6I34V8Yy7DXcfbfwP/d+FiOrwa0E17EWC/zPehmrfVmewyd
hW/A5gTcz/x0eD5jLfAmVAPfz9hKzv4QaoAnc+ZJaAz/X6Br4Rf4lhZUCP/r
LdZTkQtmM3YxportLMY+IpaHUB1cjvYV2Bl0lnlokP8DaDZ8Bn9jzPXxv5T/
+UnbS3deBFcyNszcEJoJVwRj+ZwRzId8yWYO/Dn+avGXQp/BnYz1FVnM9sLb
0K/cx2mUhguI70pi34Ty4WpUT+I2oHL4KD6W46sBfQ8XMfYwtqtQEt6B7oyR
I6gXPs6ZL8uyO9XdXqL12ZZTyi3lvHJfd6q71Z7aWz4L4QmR5YLOlAffjv0e
bHejpYoV/jew1/PoNeYPqabgDO7r4WxvubsOtTCfy//tcAZNgPdFtrYFDcJ3
sybtrEYXwFXE5F1i+R6qgasY62BuM0rBM9GMizmiXFFNq7Zlc13S1mjt2ygV
rKZUW43E70edhT2XsPdi1APf4u3bdqEl8D1J+xadaRn8LWN3sfY29Km3mlHt
nENvwB1oJJdaQW3wd97uSmuGvdWsalc58QlcxnneL7BvrA7mU75V41/Db3mr
PfWYv+BT6Gie5ehp+FJvsVUNx+AulMA+jrp118Fqo4l6ug/OMBbiZiNb1Zxq
Tz2kFr7JW+0qh/qIR6u3b9mP2uEq9GLMajYF53i7yzSKwz94i61yVLmqnqje
qJ74DzzkLVbqKfvhPBQbbzmh3Oj0dnbFcBvcH1nvUo4NRJYjypWNaBgeiox1
phF4S7BaOoMywXqSetMKtAd+Lhg/iF6G16G52Fai9eo96B31A+K1Am4Kljsa
09y9wWKpHlUPPxCsVzWjRtU/ZzhPrVxAZfCcyFg1rFpWT1FvUU9aAJ/z1ht1
p7956xHqFbqjHuVnsG/RG/Qq3I1OJaxndME5kcVeNT7e2xl0FtlshTvQaMLe
tHadNdi3aUxz/cHeNvWkQbg12NtQinbAvWg6HEM98K5gsStn/Rr4MXQSfyfQ
48FyRLmiO82Hn9D5C81GthWct5hYXIPmwXMj42koFdke2ktv2Gp4sbda1Jui
t6UEm1G+9Qgqjkz/M+sr4a7IanmRehC8KtjZ9Obq7f0maXPqUepVk7A5nGU+
p8BXRNZLD6Ir4ZrIeq96Zi18h7e3Sz1QvfAZvSEJy6Fng8VEsdHY2mA9WL1Y
PSYNPx0s1/Tm6O2pDfY2qQeoF1wV2d4HUIhM4g/Q1ZG96XrbFdMn4YmRzekb
JsPjktYb9UaeJI4vBbtL3aHu8j+gyzhH
            "]], 
           PolygonBox[{{5179, 141, 5133, 5165, 5166}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9171932807789265, 0.9368090418174826, 0.9919639079804434], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
eXdIvkNc5k6fwr7D+d6cTgz8H+c8Aqg=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVlsVlUUhQ8FS9NCKHD/exIBWxJlcqIBa7BFQUUE2ir9W8aS6l+HJ6GK
UIKIgqhINBQKRUVAwTExKkUFHGoUNWiiPhCV1pj4ojGAA4OGCoLfyvJhJd89
99x91t13732H5xbVLswLIaxGfdAFaQiLCkJYiNZkQrg4hjCrOISRqBS+EJXC
Jeg0e9vYU5UfQjV6Gi6J3jsCDYM3sdYZvKcd3sMzJ/uFcAJ1wLvY0zQ4hEb0
PNyLtXs4uxdmJrG/L9fNBfaUD59KQijDcDk6Dn/B2uH+IRxCn8MnWLssz3uO
wn8n3luBTsJz0fv4eQ/Ng5/ljCze6tBz8Pdoct8QpqLD8BY8/TYohGOoHe7K
+F416ob7pM6VPPeGx7F2vncIPWgs3MIzE3l2AloMf5vxs1n0AzyXtYaBIcxH
dfCHeBqNl4P4Ww5vZU9Nvj3K6/poL0fRZngMuptc51AxfB8eZhYREy2Gn0Hp
AOe8Bz5DzGXkYiU6C/+I9gd/I32rJq4PwJ+gHPwEa1dy9hi0NmOJ5fEI99dx
XQaPRevhV/DQMdg5exnuYU9lns/U2ePlEa8t6HJ4CBpe7Jr6BX9vpq6N42g3
XINeLGQd3QI/xP47iN2EHojOsXJ9GpXBT2bsRZ6fgs/wzFDeP6J/4C0Z16py
uhluTV0736BP4Uo8tvHu76KJ8EHWmopcY6q1EZw5v9g9od5QTMVWjpXrazNu
JNXAePhrcvEV6kQfoW7U9f+a7qnGVet65jr4emIeInYXugGeQcydvPsuNA1u
ZU95vnOu3JfisSRxTMXeHl1rOXgn/AbP/NnPPaReej11brX2FlyPOom9H81R
7RBrL3b2oVq4mhin8PIHmg5PRT+p91GVZgOaR+1exPsH+EF0F+ffiR6GZ0fX
tvbM0V60YKBrvl61zBkj89yz6t1aPOzFSweaCd/KnhXEakGr4ZtS50I1UQXP
RvsK/UwW/jdxba9B5xLnULnsRlOiPcmbamgFfC+qHOQeVa82K2fsreB6CTwK
3c51g2YgPDR6tqlmVbvqOfWe9oyGy+UXXoWult/os5Uz5U4xFEs1dAl8Ds/D
BrhGz8LnU+dSaz/D90d7kcel8PLoXOxAj0afobPkeVx0j6hX1GOXcv0l17/2
d00dSD0DNQvVk38l/ub69sphgfKNdhe6xjZoliXO5Tr9JDKemZqd76B6+CXO
eJta24NehRsTzy7NEM2SDdGz6ghqg5dF16Zmvmb/jujZfxt6QblOPHs+Rg3w
LPRB8MyelHhmanZqxjXjtSpjb5rZ38EVib1tRNck7mH1smp6MrwgcWzFVOwJ
ifeq50fBm6K9qkZb4bXRud6KHod/T/3vU880pl7TvXb0GHxj6n/JNu5PSV3D
qmXldLpmWXSuNCM1K6+KnoWqmSvgm1M/q55X7z8SHVs9tQreGJ0r5fw1OJu4
VzXD6+DPUs8yfXN9+5roXlUPz4CXsJYr8kxbqvpK/a/Qmu6tjJ6t+qdk4WnR
va8eVC/+B9FQJI8=
            "]], 
           PolygonBox[{{5171, 181, 5166, 5151, 5152}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9801014818504653, 0.9846802982616858, 0.9185671802491637], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
vI94I/FvvTewD/P8f/8d/yU=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlddvj1EYx4+m+bVapa3fe06J1UTFvqBSMRIRGqpWxdahEjOxg6I1asZO
uCmx4m9wQ2O2xAWJ0VoXhFBFEVuszzdPLz7J5x3nOed9znOeN7t8RdHyBOfc
SkiEb3Hn8rgxCD7hO4JzxzKdq4FdeAX0ynCuH+zED0bODYs5NxyO4KWMuUGc
ZtiAV8F7vAkq8TGMeZDu3H0Yi1fBYmIvgU34OHjDsxYowCcG888wAd8S7N2l
sBm/4Z27m+ZcI9TjP5hjJGsfCt/xybzznbFPoBB/xBrHJTk3Gh7i+2Awa8+F
A3hlsNjLYBv+jhgDiNUbPuCTgq1FMRW7N5ThC6EPPp81vEhxrivxdhPvH2N2
MnYL/MW3cS/wzMNWvIgxI8hlHkzF+waLpZxMU66hf7rNkYPPI/5N4l+FuXg3
jeFZP+iKFxIzL8nmdPgvuMfGLmrLmvHZrOESjy7DKHwWzITBkAttlN8Ozt0i
n9eIP5d7dbxbD/PwamJkxewbtke2x9rrt7ARHx1sbxVDsdZzr8VZDaxTLuAX
/hV242m8U8u7r6A93ilYLrKIkaVaYY5JSbZnj/Ex8IDvaYCx+B9o4tlL+Ik/
JWZ6zOY4h6/lG4pTyTOswVvgObnrSfwfePdguVOOe+D5wWpFNapa3UGML8T6
ABV4Y2S1oxw3qJbgfqKt6SPPa+OWi4GsoRlPYI43zNcE5XiZN1eNqFaK47YX
yrFy/Y94K9pRf1DD879cr2ln905wPQMuMPYiTMOnQy3+DErwM97GHoVT+MZg
Z7WZ79mOr/aWi0JYhc+G5hRb4wKdn8hyqTmPe6sZ1c5r7v3G13OvJNVyug4P
xMwkdgZEeNtgngqZ+BRvveE88Qvw+XGrJfWIcvw09+rY+yuQpLHBxqrGi3mW
wvXzDnZGdFY2M+a1sxouU+16y4VykOztm/RtqpmV3nqOeo/GbMKLvK1FOVQu
lTPlTjVR6m2Ptdeq2Wq8Y7Ba1DfqWwsiq71GmBBZj1GvUc/8qvqO7OzrjOis
5LaerR6QDZ2D1V4OvGK+PcF6q3qqemt267uPO1KHUEmMjJjVdAv3b3rrddoD
7cX+yHrXEDiEjw+21+qh6qVao9aqHpCPV0XWexRTsb/Erderx73F53jrLaoJ
1cbeyGpZPVK9UmdUZ1V7koof5p3badaD1Yu1Zq39NtxpRX4JLsNP5qhIsB6t
Xl3nrdcoxnX8T9x6pd75rX9H3GpPZ1xnvUuw3Knnqfcdjuzb9Q/Sv0g9Rb1F
Z3YXftbbWVCNJfP+SW+1pp4T47o6WK/XP07/uv9mogRk
            "]], 
           PolygonBox[{{5216, 191, 5205, 5207, 5208}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9951846239370664, 0.9922767324955263, 0.7294667733639822], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
ALqD
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElLllEYho/mkF+Klu855hCpC6XBRu0HNNeqogjKIGwTLYyKlDLSLA0i
KGgRNGdmDtUvaKErK7NP27RIaDANoqRsoTZo183j4oL7Pec843nOW1R1dFd1
onNuLyRBRo5zI5nOPYMU9JLg3AR6HDL57vPOjaU49xXS0G3sP0h3rizmXDG6
KXJuCj8FCayjh2AR2nN+DD0Mr/mOwwi615uvTnwsxr4d2tCPoBWdS8y3xB6C
negP2PQnmI+PkZ3R2RbZoLtEuvnoCBZDsfrgM3qaeNXsvU917ib79+Ea30fg
Bvol+99TrEbVOuNtTza32E9XDpnWo3noWI7lpjXtFROjCN5lsw63g+WmHqlX
o5Hl8gq+oC/BDP0q5fsqujNYL1SDapn0luswTKGziZGTZT1ZiE7kTDe974FD
6EroRffDAfRZfH7D/09oRN8JdrfdkIp9O2v5xM6DDvTDyHQutEV2h7pL3WFr
ZD7kaxxq0M+91ZJJfi/QZ2b3FbMOfZB4xfTyd7Jzu9UL1goTLKZil7EWJ9c0
ztRhf4G1X9hOQj16X7DaVNN+9CqoUm2wEn0Mm0l8T8AGbzEUSz2pQq+BwzGz
WR3MRraVsAJdGGx298BydAVUx8ymXP3zNrt5UO8tJ+WmGW9Gn2Ytib05cArd
EFnv1IPL6Aoon50JzUZpsNiqWbUvCxZ7B5Qod3yM0ssMHuUW9DnIx3cBNKK3
wxse6iBsQj/BZwnxiuAxemkwX3qzeruaQc1iHAZgvbdeaeauc/443/+SrYfq
pXzIl+6oCx0xI555CwKdBllZtqa9rdgMkEsctuntRDarn+CPtxpUi3LejF4b
7F+iHq8L5lO+NdMePT/HZlcxFqA3eqtVMX5EVoNq6YYeOOGt99Pkf9LbG9Jb
Uk+eRjaTmk296UG+ayObXc3Y+cjuVHerHjd48yFf6kkNutbbbOqOdddN3u6i
CJq9Ia0Zv+itZtWuO/yLvhfsrV3hPc+lnpZgWv+cu+j/yEnKnw==
            "]], 
           PolygonBox[{{5123, 241, 5208, 5172, 5173}}]}]}, {
         EdgeForm[], 
         RGBColor[0.990062431366399, 0.978140388926098, 0.4158948517211745], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlttTVmUUxr+P4gO+SbvZe3eXmVqTUIApzSg35WHUBpxBrYsmG620CbUp
U6b6B5y66aLSCBA8Qnb4E7K6EBBRDO1KDnKSbIz71Ol5Wj9GLtasvd/9vs9a
61mHdy/d80HTwZJcLvdIXiJ9VvqMpFeyWJIv5HIV0nOlWpM0F+P9np4fle7J
tP+xXO68dHeSyy3R2knpgs5dFt6I9u1Oc7mL0i9LH5Tc1fMu6SnpvyTTki5h
vCTseslZYa2Sbs9izc+1xcAalZQVwp7tfi/9vrAmtJ5J/wPmXfy13QHJuGSs
NGxOgDOP5/dJyVs6/6f0Pum30zi3R/oyWH7/VzHdkyzPh9/jYE6Cb7zZBWuz
+GKfJuT3bclkIWzeZs8uOGnGf/s8x9lJ9pkfc9MpPVaI2P18Lotvp6Vb5dNN
fWuRXq29ayTVkn2S3ZK9xfg+LPlDcl0yJLkquSDbg9K/S+/XvgOcWwlGjaRJ
8nNprDUnkd93kojNft+Bp7kFMdzh24dp1MxH0lt1/lXJpmLwYV5m8OsKvv2C
P/ZrQzHqbr1kfxp87JS+Vhr5aigG37PwfBpOurOIZR+xN6Ptl9eNu1FyQnzd
KgQ3g/BnH+bPeO+o3kfw9Wnq03V6gO8b0c3gHmDNMe7F1/ekh8TX38LoS4Ob
aXzuoXfcQ2clT7oPk8jNMLm6CTf27wq++t31cKMQPo7y7P2u0xX5qNUJ/Hec
TeR1u30mj87nLfbYjjk5DS+j4I1Qu2OFh3wMs/86doeQtcIekJ7lzG1y3JN/
GL91bxp7ptg3A8e2u0MY2/BzB7pS8pN8fSCfv5R+JotvlVn0qXneXIw+ddzL
JOPa1yc9Jl2BvUtpxDeDLT/38D5JfPbj8SeiVp8TfmMxancLehM5rivGnPKM
6pSNRcI5mgTPrk/3zK9p8DGQBN5WYvMe4zbwvJ33o+CcSIJf97ZzciyJuftK
GnnznPWcHmNWuA9GyIdzM0B/OyfbwLaNS/DQL10Fv5V8W8mz74TyfNg7n0Qt
/ZCE+PnHJOJoJJYt8LEBcb9uJtaNfL9B/Xh2TTHH/G6emuChKgufnsrivZGz
8zXkutkAttc9c5z79fRfL8+jzORy6muM3JqzkkLcbR8rjm/Mq6QrH/ffSUm7
YiuT/lr69TRy+Jp0VxI19UUSOa/jzqrNYs6syqI3h+G9DA7N5Wdp3BfPa88L
Wczkaulz2LRt+zbCHVfL3K1jltcwiy/L9iHtvSidl77PnVQPv+a2GvwaONwC
Xw3oa3C2mTwZ33fGWuxUUgf21T4/m4U/lXw3B55XnlOrmYNrsuCpmrP/8wiv
FdRROXPllGcd4mdzsCwLH5ZKzyTRj9NJ8NLHngow3BvHif+rJHp9Cf2+mH2L
sNVNbzu2dcRaAm8+30GunfN3ufd9/+/krnlT+rc08vpGGjxUwYXngvt5JXm0
n/35mE2eUZ97rmdRfxd1dj33oO9D+1BGbThv9s19OpUExkQSOZzmHq2nFrxv
BVyZM8+FDng8Rj1/J2mTdML/t5Ij5iwfNe99hznTQf3Vg21f5mvO78cW4LWA
5Xm0jnqxz71J4PYlUYv3uXu8dmhBjx3HruegZ9Ny+V+XxSx9kZp1rL57y+jT
ApJn1h1OY/2Q9Kdp9HcLvFbwzzoHhrGuJBH71SRy1E9NHAHHeKPMCds8Sa2Z
m/4k/B1EH4dHc3qGnm2Dn06+t8NRO7x2IPNrHczyVnA6wWqlnl3X7WAZ+wF8
lmCvlzprBdN4k9SMa+cUdW8ba6iZGvLYBm4Lcfh8FXeX/2k+gU/z2oZ/7fhQ
Qq3+B6G7vCw=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtvjVEUhvd3nGqdFAN7f2aqN4TGpXoqMUNiYtBEhIEIbap1aUu0WmLC
kBSJa9xbUr0IfoK0Lqet6sXEBFGl2kT4AUo8b9YZPMm791pnfWvv/a5TWHNs
Z1PCOVcFSXjgnVsYOZcHd9AtwblovnMJaEW/gnH0CPSjv5AzRO4gzKBfsjdK
bAwG0M3BfpsLp9DXycklNwG3vH1D39LeffRRcn7lODcLjejL7C2KrKcO9Bv2
Zqj1EyZYZ1h/R8/CAvRb9toi6+EF6ynWw5H1OIk+wd5cjp1JZ9sNz1l/gP3o
aXJ6ye2Brzo/NMM8SMJTKCX2l7u6hO6KnduUcq4z37lu9N5gZ9cd6a4Gg/Wq
mj/US7BedQadZZ/Ow7en4Ah6NTV2UK8KVsX2TX07DZXe7kx3F8Ft9EMoQJdA
H3orNZKRnXEbOk2NRmpth0r0XXLWpezMe4gXsleRsj3FjutNiU3CGfRy4mXE
yqEIfYi998TeQS16ZWy503CA9cbYvqUzLF7q3HlqflY+99WALonNO5uJvw6G
tHooJVbDeoT8DFSjPy1x7iOMwwRsCRb7DYeD7SnWDwPQR42ufPNEAboc6lN2
BxXoYnoo8lZTteUxeU1v0IDuie0tO+BRbEirZi96PVSnrOYG9DlqnYV2uAjd
UMz9L4PH3t5Qb7kLVqAz8hOxFs2MNw/JS//gmbcZ0azkwWl0fTBv6s7rNHvk
tEbmcXl9yFutkzCMHvWmlTPmzRPyhjz7RH711ps80+vN4/K6ZuQb+ob8FpmH
bqLXxNa7PFCGvsLeHL3+gavZM7dnZ0SzUuvtrTWzml15RF7Rmx4M5hF5RXe4
lnptwc4qz8l7elO9rf4DmtAXvN2NelJv92LzomZOsxcHmx15TF675m021KN6
VY/qVW/SmZ2hdNYD8sJ/Ssy1jg==
            "]], 
           PolygonBox[{{5259, 291, 5287, 5248, 5249}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9485976600254035, 0.8339138813547754, 0.27749867456969024`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVctOk1EQPmrKQlie0z2JPoQ7EDDxbtB4FyNpS6EXLm/A0hhDooVEaiwm
dmMqSouKCWC8FKQlFkgpifAKvoPfl/mauPgy5/wzZ+4zf/fw+GD2uHNuETgB
dBxz7iTQCdQizhXxrREx1CP2rQnsAzvAgrNvVWAsOHeA+4Ng/F3JPMR9EfRm
MB0b0pOAjRQwArSk853AcwmoACvAFyAb7O0o6GPv3B5sRXFexrkPOlZAE8F0
jQSzsSHfHsn2MGg8mG8x0M/SX1ZcJdnOQN9Wh3M/gQXc54ECkJS/aeCpt1xN
e9NBXWvyj3Z7g+mZkq5pyT8BvQzeG8gMKlct5Ssp3XzXC8SAOPAXvCPEm3d2
Jq0qL7S9HrEct5Q/2qsBVWAA7/vlN/WNSecc8wP+JvARPi3hHge9E+zMb2cl
y/xeD5aDa8yl3vH9kuTKoHnwZ5Wvuvj0g9/nxIvLh4Ri5J3v70LvKvi3QW+x
rji/hM5J5ZA5+YR7D+h7bzqywDjwVn3Kfj0dde7MScQeLN5R2UurZ9g7I8pJ
QrEldGdM6/I1/h+/rBgrqnVFPbOqmrP2S6L8zp4pRqx/quohntdUK+pYVs0q
qgNzRNkdzVpDfqzLRiZY7VPB6r6st7Pi05cr4OVA7wfLHWW6o8bLSfaDtzNl
1/St3Quk9CMPmS7EW/Dme141faXv5L8GHM7PQXdwbAL7wB/gEGgBQ97uWdDz
QAHnftAt7g1ne+aqt/oNeKsB+7VHeqn/mbe6sKbr8jcnfzhP3FkRyVE+R5+B
bVxn5BvPdWd2O7Xjitpd3GFd7Z2H87w3nS+81aCpPXZR/jMOzt+8s7cZyoGO
yhbt8D6l2IfUb0nF1lCuKJvWXHIPLmp2K4qLMTn17qh6vSb99LelPHPn/vI2
B5ugu8r9nnLK3F5SHavqswX5X5AfrBvfXfCWl3Pe4mceZr3xW5LZ1ptdxVlX
LRua1d/eZqCkmTiQL3zPmeDeY33LirekO3NT1J47lH/fg+2PH8H4zGF7Jxfa
M6Z9dE+yG5q5qvY3d2FMOz+pncy809dveksdY9olKdmgbtr8Gmz/1L3lrar9
S9kJyTPHTc0s5Si/Azrhrdbj6oWWcs33R4rxUGfmKSWdacWakS/cZez/U1HT
RZ1Jb3uAM0HejHo+BprWruDO6Fff9mlnprTXbugfxH9RzZvdLW9xF1SnimrE
Wk3KL8r9A/9eP2E=
            "]], 
           PolygonBox[CompressedData["
1:eJwtk1tLlFEUhteEnxfWnXt7L9ZfKLqptOiiAtPOZ7LUShtN6j8EXgUGMVBj
UDcRlSSZFVRKh3EsHbGCTv+g/9Dz8s7FA8+stdfe+1t7TefAWH95Q0TshBao
pYjxUsQYfMY7csQa8R9wBf+UnCvDF/wrXCu5Zgk/xZp6Kw4L+Duo4RPk3+KL
2TnFlJujpptcD8zgmzsitrdxDvllfq8m1+qMFfwp7MIfFBGHqT8LH/CPUMY7
qZ/F56ELHyH2r/AarS2ob4GtsA1uwPVmTLmLsMy3NmAEvwsbOW8T3MMvsMcq
ezVgEJ8iFuQKuJNco1r1bBS/BOv4ClxNXqO1rVDB98JDctPQg19OXrsEw8kx
5aqwv3ln3b1LvYIhqJFrY79byTWqVUy5m1APf9M0/hrmuPsMnMjukXqlnm/B
q8nfqhrV7k4+uwI79NbwLfxN48kx5X5pPvAD8Cj8TfvwI5zxO/wGo3iZ2M/w
HtrrOLE3he+kuw3z+zv+BM7h3dlvW4fz+EGo4hXowweyc3oTvU0vrBe+Q6/6
n/1W2nMIf0XsceE1Wqs9tNcUPCPXnz1bOuMQPpjcK9WodjK513rz+/g87Cl5
Jl/gL9WzkmPKPU+ebcVm8dvJb6+Z0mypZ+qdejKRPPOaff2H3nP+mez/nnqo
Xh7N7o1m/Bj+tz3iDzRgrYl8ARbbPSOaFa3R2tPZ36qen8T/A8zslGE=
            "]], 
           PolygonBox[{{5265, 266, 5261, 5236, 5237}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8942407297160196, 0.6126536789931273, 0.23346421128916275`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVM1Ok0EUnWq+TRfW+N0PgjtfwdKW+rVINSFGTVB0ocaViVAIrZZG240P
YVhYE9qEYoJdqdGgwgvoxo2S4E59BqOiG8/xnoWLmzNz586dc//mxK07881D
IYQHkMOQ5xbC4yiEy0kI+9g/gnyGPIVsQrYgC7D5AFw0t/kYfH8G+yfAWeA4
5D7WE8A5yBLWc4n7GECGkj5kgz7pT+8MZdOX3/Xg7zzUu3y/Yf5uHXjXnGPL
3HZDd9uQLmQ3cq68uwRsAhs6/x6DL/A38Ar4DWA7D7wne765Im7k2MN5hf6B
12G3DdyFTTG4vgRZZQ6By+b7iu61xLMJrMsnebzAvpIJ4TXwgnLIXJ6C7jQk
hbzCfhr40lzHM+63tX9rLly/Mc8zc0lf5NhUvMviNm1+Tg4j1bmnWjNfzNta
5DxHsvuFHKXAH8Dz5vqLwLK4/ONr3iPnzHPE2GvBbfKQKdkVMq4rZTz2KmRS
uoL2ZdmXdZaXfVX6kvAkZBj5O7OSKLiuKm5l2U3Jz1Hwa8HGzO02I+f7B7HN
QH8Qu91E8HsH0v+MvTd76rGuas5c9dSrfeV+pPx/wZ0ccE8+LbhfzgTzy9qQ
y2rwXuPcdKRrS99VPIyrmPEZ2dJMNmTTFo+S+o3zxjd2VPOe5qqoGrCvjpj3
9TFzXnnlel+xsC/4H9AfZ4O14X3yeI94ssB3sd/hOideC8rBnmL/FLt/2uU0
E5yZVL1Ifmc1m3XFNFBNWJui+HK9o//ktnnNZ1Tzjnx2lY+WdJ3/dAXFTn/r
yglj5AxzTq4hZzcSn4Gbmu+2ZiLVWzXxT7WeVM9m9S8MlK9vivlr7PEsqr5Z
8YiU2zXZH9efOQa8mni8z/SHdBUb4x8qH2OyH9es1dQj/Lvp91Li764o9r/E
Qa68
            "]], 
           PolygonBox[CompressedData["
1:eJwtkrsvREEUh2cFhQJx5yboJLRKJIuVeD92CQpEFBJCwnoU/CEaEtmElYjK
WyRKEjQKq6BZr3/BKzS+X84WX+43d87MnDlnqiYXBpN5zrlayIe4d26L7yZ0
4p+Bc3X4KpQz/mIcdfZPc4pR7B0M4FMwiyfhFG+AeqiGGghhjrlpKMYTsO3s
TJ39zZ4tzs74wZ8hC/eQgXeoYI5Q9xZYTsptBSrxa/4V4B3woVhvc0tQis9A
Bn+EBfyBmBK8CG7xI/41RZxrhENvMYp9gkV8AtbxDVjGO2AH34MevA1SeBq6
vSFXTK9q461WymEeb/W2l9Zo7W9guasGf3jS29k6U2eXeavdLsRw7+1uqqlq
OxCyHwVIwRDe5S1WNVat21UDZz3qx/chyl1jcIaPs+aCtWuQCK2H6uUZ41HG
x4ybI1Yj1SqT680lXMFNYLVUD9QL7aG9lNMB8YOh5ZaGeGjIlcMwXkhMQe7N
6O28BtZr9egFHwktF+U4hvd5q73u1J57Y3pr2dzbOfd2N+V8gv8DIsFgVA==

            "]], 
           PolygonBox[{{5200, 206, 5237, 5125, 5126}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk01KA0EQhdtRJhE1ZNKtRncuPIEJJEImECO6UURvILiJYFzEK+Uq0bXu
/buCf+jGV9QHuijedHXVe6+re7bOx6dXWQjhTDGv2E4hTIUd4VsMYUHfM+FI
eKm4UAwUcwrrs3xHMVEM4dgnb7XGVUveuyq8F1dd34/Ca+FYcYOe1ebCRWHV
+uA1/h34jbuPhz1FLzjPCK6f6DXf0fetp8TXEM8ZvcbRlF5b+K76Tb4tl+Pn
JLleSf+X6naFn/Bn5HvUdDinnTcl1+jgr6TO+lY4n53T+LrhT6fPuktvidce
a6tvsW++zfNH9JzttdlrMbc6/VP6u+QLfCwHv+d95mRnquDtgDkcJd+z3CJr
yx8n15nA2VCsKyIc9k5yxYsSTeFr9PUAXw08FPgb/LvLCW/jGK3D5NzWs6Z4
iq7zHH3eI95CPTluJL+/KedYo7dAe5XvDJ8VeAv2lvi2+fSTv+dGcl9j9Gb8
I7d4MX9NzlSFM3LXpn0XfX4P0flzvNToabAu0F9CP8dnlTuaY1Y5Gjl1FXCF
2U14Bwv0mfYvzqNDMQ==
            "]], 
           
           PolygonBox[{{5087, 16, 166, 5157}, {5192, 166, 101, 5183}, {5064, 
            4, 9, 5065}, {5142, 52, 53, 5146}, {5076, 9, 14, 5077}, {5060, 21,
             16, 5075}, {5145, 112, 117, 5143}, {5138, 101, 107, 5134}, {5113,
             63, 69, 5115}, {5140, 107, 112, 5136}, {5089, 19, 24, 5090}, {
            5114, 69, 4, 5108}, {5110, 53, 58, 5112}, {5111, 58, 63, 5113}, {
            5077, 14, 19, 5088}, {5143, 117, 52, 5142}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5091, 5090, 5089, 5088, 5077, 5076, 5065, 5064, 5063, 
            5108, 5114, 5115, 5113, 5111, 5112, 5110, 5109, 5144, 5146, 5142, 
            5143, 5145, 5136, 5140, 5141, 5134, 5138, 5183, 5192, 5198, 5197, 
            5191, 5200, 5126, 5176, 5157, 5087, 5075, 5060}]}, "0.019`"], 
         Annotation[#, 0.019, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5303, 5297, 5298, 5299, 5300, 5304, 5305, 5302, 5295, 
            5460, 5453, 5458, 5459, 5456, 5457, 5296, 5454, 5468, 5466, 5464, 
            5307, 5465, 5301, 5221, 5306, 5455, 5199, 5189, 5196, 5194, 5190, 
            5186, 5195, 5193, 5188, 5187, 5182, 5226, 5234, 5214, 5230, 5233, 
            5232, 5231, 5224, 5229, 5225, 5223, 5222, 5265, 5237, 5125, 5175, 
            5156, 5086, 5074, 5059}]}, "0.0171`"], 
         Annotation[#, 0.0171, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5325, 5319, 5320, 5321, 5322, 5326, 5327, 5328, 5323, 
            5567, 5568, 5571, 5570, 5467, 5572, 5569, 5324, 5668, 5573, 5669, 
            5667, 5665, 5276, 5463, 5462, 5471, 5479, 5478, 5480, 5476, 5477, 
            5475, 5474, 5473, 5441, 5481, 5486, 5470, 5483, 5485, 5484, 5461, 
            5469, 5482, 5398, 5257, 5228, 5227, 5220, 5263, 5280, 5256, 5279, 
            5275, 5278, 5277, 5269, 5273, 5274, 5272, 5268, 5266, 5267, 5281, 
            5259, 5249, 5261, 5236, 5124, 5174, 5155, 5085, 5073, 5058}]}, 
          "0.0152`"], Annotation[#, 0.0152, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwNzzkyAwAUx+FnVCqFrSQp7EFIHCBuoFIaB7BFrI3aGKOKKg2y4w4ahEZ6
hdiP4Su++f27Ny+xtrG83hURK/z1R7zT4ZNvvvjgh1+eBiJatO0HfeaFHh4Z
Hoxo0KTOFTWuqVKmRIUkI0wzxSjjTDJB71DEgi6SJcM8aeaYZYZVd8c0xZG9
yR6HHLBPngK77LDNFkvkuPBPkRPOueOMW25o0uCSGnXKVKhyzCl5usmS5K0v
4pV7/gHMRzWM
            "]]}, "0.0133`"], Annotation[#, 0.0133, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwNzzlOAgAQQNHRwh0TZdOSO3gEdyuIBS4kiL12GqOAgsAd1OACB/EGHkCv
oLFzX17x8pvJZCZX2S/sDUREiZV0xDKvqYh5XWCVNRZZ4pM3vvni2eyPfvDO
ZSbiV6/0Ty/0lmvuGMlG3OiwdnVIE0wyzgRjFMgzywxJsqTJkGKUaaYo2bXN
FptssMsgFdYps0PHXW1aNGlwxil1alR58dsTfXq06NCmzjlHNDnkgAY1qhxz
Qpkic+R4TEY8cM8/6/wzlQ==
            "]]}, "0.0114`"], Annotation[#, 0.0114, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwN0TdPFWAABdDvbY4koCQqiImgsvoHCB2kCeE9OhF2wEJH6UVsjx9EGOgM
bPSdQQiEDkHEM5zc9ebe5y3tlW2REMI0x0khHHLKAeeccMkZF1xxzQ23/OWO
f9wTHoZQwiZbbLPDLhvs0fEohA985BOf6aSLblZYZYll4iywyBrzRJJDyCaH
PHLJp4ASyinjLaUUU0gRFYzQxzi9TDHJBGOMMswXhhhgkH6+UkUmCbzmFS9J
J4MXpPGMFFJ5yhP29X8sr+URzTRRTQ0PiFFFlEreUUwFMzb8RZxpfvODn3zn
G1P88ccsffTQTCstvKeBehqJkkUtdVQT4w1p7CaGsM4c/wHf4lM2
            "]]}, "0.0095`"], Annotation[#, 0.0095, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0McuJmAUBuBPtAtgxlLsJIzodX4lUYMRve1cgDLqxs6e8f+60Wsi6p4r
cAEWli5C91g8eZOTk5O8J2NopGM4LoQwS/6PEPLIpYAIhVRSRTVxPy0STwJz
ZokyiWTOmeeSM6644JobnlnjhVfeeeODJz6/76eF0EMfvXTRTzcDDLJAjCj/
WGKeZVY44pgDTjjklEV22eY/O+wzwx5b/GWcacaYYoJJRiklnwJKKCaHIn5R
SDZZtOnzh1ZaqKeJZhppoI5aNv1ynQ3WWGKFVaIsE+MxNYQ7uuikg3ZqiPCb
PDIpo5wKckjnISWEe275AgGzRAk=
            "]]}, "0.0076`"], Annotation[#, 0.0076, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0cdOFEAAgOGRG8Ky4lIFkZJgICEgCejushR5A84oCkgvb8BdWgKConDF
AAJv4Bt4tCxiATQxHLCDVz8OX/6ZyRymVPROdk1cCCFskMwPIU6Cm9yiiWbK
qaCKSsq4RglXKeQKpRRTRB4xcolyicvkECGbLI7zQsgsCOHi+dp5iZBFDlFm
mWaOGeZZYJElHvGYZZ6wwlvescdr3rPPRz7whk/s8Jk0BxxyxBe+Ulno7vTz
gCGGGWSUEcYYYJwqeuljghWe8oxVplnjITPMMcks89znDne5Rw/dJGglTgsp
btBGknbq6aCB387+k1/84C9n/OEfp0zx3bt36m06aCdFG620kCRBnF37t9lh
kxc8Z4u0v9zQdRqNG6inlhquEyNKLtWUcBILIUO/aUTrKCNt/oqX/Ae0AFb7

            "]]}, "0.0057`"], Annotation[#, 0.0057, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz8cuBEAcwOHRosSN5eQg0S2OPIdHcBZOEjV6ewhd4irssno5uOgcJB5A
F91J+xy+/OafmWRmChua65uSQggtRCIhRKmmmCpKqKGMckopooJKnnnijRfe
eeWDT5bzQlhilUbWiLNCgnW2Sc4PIZUz6xTd1DQ9130OiLHDIceccMQptzyy
wQN33HPNDbts0U0f/fQyRA/DNHvvqA4ywgCttNFOHR0sONepXf/3WdfqvC4R
I84iif//M8cKq8wywzRjTHGZG8KkTjBOljmTDNJJIvCVE8Ieb3zzwy9XZNuP
UsCFeZ91/gAm6U/C
            "]]}, "0.0038`"], Annotation[#, 0.0038, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz0dOAmAQBtAfe+JGpdjQxLVX8BQewdgLXMBTeBHjGmLsC2MFxBgVLKA0
69KVj8XLZCbfZDJTc+nZVCSEsE4mGsIpRZKxEKbpp6mv0KDFMVVqfPLFN3V+
+G1n7J1wyBF7HLDPLlnuKHJLnhsK5ChRbmfjIWyyTZZ7sy11hgx5dihwTY5L
rrjgnDNa1PmgQZN3arxR5ZGRRAhxhkkQY4gBogySZJwxJkiTYoNFVlljgRXm
WWaUJSapuFXmlRIvPPHMA31000sXPUT483+H2sk/pxRL1A==
            "]]}, "0.0019`"], Annotation[#, 0.0019, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      DiskBox[{0, 0}, 300]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0., 1000.}, {0., 1000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.3974204418636735, 0.5186473446352755, 0.9465442570238232}}, {{
              0.5835541231076635, 0.6727945518092865, 0.9603586646816735}}, {{
              0.7781538084743557, 0.8266189364589361, 0.9785227574340886}}, {{
              0.9171932807789266, 0.9368090418174826, 0.9919639079804434}}, {{
              0.9801014818504653, 0.9846802982616858, 0.9185671802491637}}, {{
              0.9951846239370664, 0.9922767324955263, 0.729466773363982}}, {{
              0.990062431366399, 0.9781403889260977, 
              0.41589485172117413`}}, {{0.9485976600254035, 
              0.8339138813547753, 0.27749867456969024`}}, {{
              0.8942407297160198, 0.6126536789931272, 
              0.23346421128916273`}}, {{0.817319, 0.134127, 0.164218}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545453}, {
                    Rational[
                    15, 2], -92.04545454545453}}, {{-7.5, \
-92.04545454545453}, {7.5, -92.04545454545453}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.59090909090908}, {
                    Rational[
                    15, 2], -71.59090909090908}}, {{-7.5, \
-71.59090909090908}, {7.5, -71.59090909090908}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.13636363636363}, {
                    Rational[
                    15, 2], -51.13636363636363}}, {{-7.5, \
-51.13636363636363}, {7.5, -51.13636363636363}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.681818181818173`}, {
                    Rational[
                    15, 2], -30.681818181818173`}}, {{-7.5, \
-30.681818181818173`}, {7.5, -30.681818181818173`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.22727272727272}, {
                    Rational[
                    15, 2], -10.22727272727272}}, {{-7.5, \
-10.22727272727272}, {7.5, -10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.227272727272734`}, {
                    Rational[15, 2], 10.227272727272734`}}, {{-7.5, 
                  10.227272727272734`}, {7.5, 10.227272727272734`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.681818181818215`}, {
                    Rational[15, 2], 30.681818181818215`}}, {{-7.5, 
                  30.681818181818215`}, {7.5, 30.681818181818215`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.136363636363654`}, {
                    Rational[15, 2], 51.136363636363654`}}, {{-7.5, 
                  51.136363636363654`}, {7.5, 51.136363636363654`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.5909090909091}, {
                    Rational[15, 2], 71.5909090909091}}, {{-7.5, 
                  71.5909090909091}, {7.5, 71.5909090909091}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.04545454545456}, {
                    Rational[15, 2], 92.04545454545456}}, {{-7.5, 
                  92.04545454545456}, {7.5, 92.04545454545456}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.49999999999999`}, {
                7.500000000000001, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -71.5909090909091}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -71.5909090909091}]}, {{
                    7.500000000000001, -30.681818181818176`}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -30.681818181818176`}]}, {{
                    7.500000000000001, 10.227272727272736`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    10.227272727272736`}]}, {{7.500000000000001, 
                    51.13636363636366}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    51.13636363636366}]}, {{7.500000000000001, 
                    92.04545454545456}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    92.04545454545456}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0038\"", 0.0038, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -71.5909090909091}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0076\"", 0.0076, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -30.681818181818176`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0114\"", 0.0114, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.500000000000001, 
                    10.227272727272736`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0152\"", 0.0152, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    51.13636363636366}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0190\"", 0.019, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    92.04545454545456}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "3.18900520948866`*^-16", ",", "0.021198018544220164`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.0019`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0038`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0057`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0076`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0095`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0114`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0133`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0152`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0171`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.019`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.69375581627378*^9, 3.6937566210068073`*^9, 
  3.6937570284411116`*^9, 3.6937573593330374`*^9, 3.693757513092832*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VUdiOo9zOat2plAKdlAljt8gvBHV9TvZ5qSgYIan5W7CixAOeRFP4rn3r7C6
EV5Se6rCDxJz3VA6o0DyK2wflxA0N4XBm9ObX+F1NAWxc907uwjvZ9+YU5KC
d00fKs4Q3k/fvE7iTZMOZOYQnoJXg1v4sRQcuEHxphJeZcSWYanjYzwhCQtR
7VWpePSubuprwjPP1/okuzoVy7jzZ3QQnuigUBOPUiqGzXcI1BNeOHfHnmES
L2s+uKCU8GzYQn0eKY/5M93vT/6Xfj9+vTV+PTd+vTh+PTre/+i+TOeNvJzM
mk982WYg64AU0XVerq1iGvHlJVPU1pmSOrk6N985gPhykM6UvlhSJzEhjdtt
iC/LVT3POE7qhN436LzevaxVnaRv5MsaibsQ3usiCeYu0jfk+y4bNBPeyDwx
vS7SN0qXW4QsJ3Uiyj4xp4v0jXmc3AV7ptEYfY3OsxH74MRH+ppJrsSxAsLT
Fb11TZr0NWErT3NNUnd1H7PkNUhfs9ZtnNJLeFfylHdsJn2N01H5dCqpO3oe
6DyHxIaZhiQPUbICS7oJ7yyPaXYEycOI5TLHasKbeeAFXzHJQ2Ta+pxdO4mf
ygfvbCd5+HGG7NTYaIw6o/N+vm+Q2eyOjIkncg4R3s2BrfZMre5gz46S2UB4
gUsUdbzvuSP4FKX+I7k+W5XN8l3d7mi1S7DII9dH9wHGOsuuu2frVlcsHend
7UR4QreU+9yzXHFz8OuKa+T+qYV9eLsmxxUdtxRb5Qiv2mbS57m5rtAr2ueb
Q+4f3afovNCUMr0tJNZZqJS/gPCOhjlS20gc35Grvo7w5ipsyxUkvvTzvWt3
kt/WqhUX7Uhc33smIYPkl+6jDL30dZ2i8TiiPeDwwcdEf+EDLF9VuR2xaMNm
/TqiP3YHNrWh6Y54l8b9vpDor1j7TWIhhyNUpFt3Jf4P/ffur/7b+of+O+1X
/y39Q//9v/K/n7/nyGTxgpyNdXQx4V0Pld8uM8ELpEyYjMUyoJjI9KjxuycU
81qiRwjPlVlT2nHYE5yRT5iKOcn+cPBH8MhHTwbvr08fDGOo+RnhKQSmvJqz
2geT39fuvUZ4EqK5basVfCAy28+zbDcNHdMWX9os74MNpSOrdkynYa2Y7rEg
aZ9/9efzvjD47Dln/qkMLKEcFU466wuZhppV6uKk7r51OplW+mKn21dThz3E
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
tioB+Wmx8So2ttBPb9ncrZaAh2GTY+asdIRhycHAaSsTuPiHs8ZYSmZ/MMWi
uk16DZcpyJ9gvmzXoCX6XH/VXyilYNT+g9rbBW1RTL9ru+8cBXs2zz5+c4Ij
bFddeUM5zc0/PHRg20mpc6a4H1NnJ7qSgmKle5v5L1ri+77LdqeUKUgf4ybQ
c2UzHp8rs1unQMFaEhc0XHOAb3Wj3Ts5Cpe9lxix99H/0N5z7u/Xf7m/nHzQ
vGUZC1uNKJhpd/jy1sVmKCpJPrfdkILG/T2L29dbwVuWuQYGFETdttm/yt8W
L/cW3HuvR0GqX/9YQ31HLj7o8JywSrK+FrTItMLBDLnm7oaC9RRMv5yWGEi3
wuxNntamZE2Re1Iy+4wt+71iL1n/cEr+6OnnyMUH1RDw2XDQPAGGzS2dvTvM
kPFdryXZMgHLHSiPB6ussPuoQYC7dQJcN2Te4P9qC73pgTz6mxPgZy76JHWn
Ixc/UmWXjlPS0wSU7buVuPCmGWg5i0J+NSdAlnl9KWOUNe4oyadGvkrAYsVd
T7qIvRuwtNjT25aAl/p5FQWXHLnqGzjrJzjrMzjrPzjfGzn5VRIDO4TGBLCg
f/PG8VGWFng+aYNg3UsmbuyhTAlbawFbGyGB7E1MHB/vGdslb4E9jff5Xa8z
8HNKTJvjTAtuftXBmr1zglm4eNPjtNQdGyzl+XbErI2J041R5fVnbGDjMPds
ijkTisEJNUk5NqCVGV87f5OBFfnRTSqpNtjBwa8qiBknqx3GwnwZoVJNDQdQ
Ph7QHuZxfPjV4LlkrgOk7y11CLJmQqK1cdpMQQdQp52KFKhhoKhO+Nb4z/Zc
PJ3xNINS10gWDLufvlj62AkPWoxeOXUxUT7hJk37jhOOH1083sGOCaUlJYo2
V5yQ2d6laHuPgaPr9z33P8nN5xH4/5Sn/Bt5f/F5lEb4PGePD1TzR7MQfJ5y
n1/YFbc1b50W6WGiY9aRt9N4XNGzJjhHwoEJ1jPPUXJfXDD34s/UufUMdp+g
RrsLF5/Hof7Eo8IYFk5+5r3+Qscd5TnayeXvmdj0lUe/R9Ud8s8vKjQ5MqFa
FVE7sMid/Xm6HzDgaO1lMn6m+998nvkjfJ7x/Q5vDONY+JbnceZ8jCfO/bxm
7veRiV9ZTQUVfp7wDx1Vtd2ZieVvXmbfdfSEhqOk4rlGBrvv85GJJxef4qyE
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
9NnNcORLttZ850jxtKFfhOH5cPjv92x6+UmCGf7fs6VZ4WjaNLF/mbMECjZf
Xj1PC5er/7yb/HtXnWo0nsyfeX5NbYSsnyOBLYXOi0rzR/cj4OGdcdO8UYII
4v3WXo3AfknI5q6NEpTMnOL7OD9Czv4nhdZPC54ThHjt/vZjZ0rwMXbj5vbj
IShV1AkdNF2Cq0ZaFsXDwvA12Cum3UCCXCJRjrGloE/3QdWTyNl/6UyOxq6R
QVjTvtx8aooYh/UU04N3h8jmwFTEi7FteojqIZUwBEslK/mxYoR4xdyLt6Gg
nMgXDKLl7X+W6Ym+59oJvdvLMFrcS4yDsVoVr0QhKGpIGpf5XYSwe9GPJP3C
MGXuaYX+X0SYWVhklG5FkeWvQe/k7X9XflRTzfNAJA7O0bfyFeHt+Utq9qEh
mOuyOjzIWYTA0aFJvgphGEX/fDHOVtQ9j/TgIQsKlmyO6XfSRCRnryURr58r
XA2ExprqMc4PhPAlAs07TiE48aDfnQVXhTI80qIjFCts5zJH5BN5tIfW4BPm
FDy9767XlCmU46eT+fRkvj65H4Acr5H56Tn1anfdTYPwO+ya6OM3KSzoy0/M
IPbbYve5z4cmKULfXzP/NSgMY8MHSOubpVjQ1njeE0R8eHtY//ct8vz0e89z
k70RBFb4h9sdTlIUm11PuJUbgrhbNL1WYv2sqtE8UTUMJ+JeSz8T64pYmlnJ
Sgpel0x7955Yk/nptwr2u/svDELvkwpDlEsk+GFTxtxM7Hcgp86q1w0JMle5
r5o6JAyWr3KiW4olWGe88skUSwo6bf2u11+Tj2f+W30m12/J9WFy/Zlc3ybj
xUUkfkhezaMPGxul2PStXGshYQfb02yjr7+Tom7eOk1/ws4nph2dPP2lVIYH
phJ2S/Ss+lryMymMjNPG3ibsFpkfcl3rW1OKgxRvWt3WRo+MRpri7j3iNVII
7Nxu3ZYQf6+bYE6xkEJtJX+pSpsEUeqiJtcVUmy9Wnx6tZdEjh+iSWlvr7gu
wVuXVl7FmGhYP7ucb1okwQil7SEGWwl5W4b6nzklkfUv8tolEBQPmqSTLUHZ
fRXrJ34SOT7HrZufFUcYSuCuF39Ce2I01HRu3Ow3hZDTsjr1bdul2CBK29Y+
ViKbG9f8S4K0V2FrPg2VoCuA8XZjsPx+pf+w3/p/2I/MD6kYt/VTfKoYC6rS
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
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmMlz1NcRx2eGGUZjbbY1Pzm+JJUTBoKEtSCNVksCn0wWwDZwTAVIiAKY
TTIYzGLZYOywpArQghYkhImzVZJKKpWqXMNq7buQgUNy8x9gEKS/6c8Uc+h5
7/Xr97pf77/5/k93b9gVCYVCL9vPEhuHwqHQmMG4QZlBucELhu9OhEIdBu3A
WYMfx3x+jrXgzZjjz0PfaXDG4BODjxN+p+7LN/h9MhR6z9Z/SPod7Rlnugwu
GHzGee3/0egOGv2foD/PvsbPmc/b3il7y7iNwwYnbD5i4xEbj0d8HTOIGiQM
lsdNHpM33yBs66UGESkEOuGehh23JOIy6n1vG1QbVBnUGxwzfJvB8YSvha8z
uGK819r57qTr5xzvGYoaX2Q4hX4kf5XJU2aQijv/F5DpLOc+RccaG2xsgk+j
wTXD9RoMGGyy9RbkPIHuxaMH/aZtqf1u8MJpnjBczCBqUG68c21cHfF7RdeP
fTrhN2jQl3D+YaNdtLc9iTrPNmReY/hHhnsY9fUZZPqe6aXK9NORdPnOoIfj
7Ev26cDHGRvn7fwD7pk0GDGYiDrv8rjLIrlDBs+irgfZ60cxP3M/6ncMG4xz
Nifi94wCuRHHtaFjyRu3cYlBJOY6GODtbUZXYnyPYSfZKxufWQw/96Uo/jRh
uGHi63bY4+2OwVfE3RDzewaj4KahF8yE/Y5ZRq0fGzwLO58R8JOcmzL4lrPT
0KfPPEGWO/C9y3yY9TjzMWTRXVGz04vG6psCs5fNOwx3InDdlsfczp/ZesDw
Z2z8s8GU6ecvgcv0qs2TcZdzGFnPB467GPi+6OaQ91tkvQv9CPjHvGMyQx+T
jHPAd+N+X5yYln3eMPlqiN1F6J+gO+lQdtJaca/9GDEqu35i8vUY7uPAc4Hu
TN+9yJk57P4UGWbDz/diyDADz1neEYJnWo4w+Ut5bCzpvMQny+AHBq8brIq4
XvXGp/DTXDxzoM8GJPsw+WYI38+CJof71siP4SGcYuAx+pdelsFbfBcLvC60
y/6B8z0d+B3VBhUGrxV6LC4rdDn1hvm4zyXrEnSRjRyK1adRj7E4cbaUHPQM
fAU5ZA02rMCOC4abNZghN8wZfB31PKn4XWew12Q5aNBisC/ha83HAl+P29hs
43sGv0p4Pq+Azyh5RvlGeOHayFOqO8rfeWa6XNVRg5umnxwbbxf4WviXDO7Y
2khDd2001f2/FqoOVvMWvWvKeEwbjBmspbYox6cMasn1ynOrDYrjLvsu3vOA
GFQs6twb6Ee6lG6VlyttXmZQSo0q527JlUddlr5+SM6cIUcqV77EW/S2FPdU
wmMN970a8rd9J+S63Is+pYdXDOzpodKw05WE/U0p7hG/jTHP2c2c+7nBjoSv
Nd9ge+9Cpzw+hb0nsL/8QD4i3sr1zYxaT6FX2fMrbCGbjGLbKfRXxXsasLPs
PU7cKH6kO/nXAvcpVnTHXvxHftYTeI2ct3EkcBuNBr5XQb8gXrKZ9JiWVbZP
4PdZMdfBXmycRH/Sre7QXXrrPny5NeH2U3+lt/0n7rr7b9zraQt+XWXy5lHb
6w0OK16pYavivpYMolFvlEP9Vx/QSQ+g2nfDBNphNvxt0vuWQWpwN33FVs4q
nrPpQ1qp7arP6iNEc4EeTndLHvViknEpvqueYiU+P0B9j8We39FD31KH7eRP
RXHv7fSuCLVbMVBJb1VqsFDgtUw1LY6sWfj1A3JIP3dLzlXoSPV+BX2jePTS
+/TR/0TogbrQk/DpvJaFLsVrJWMu+ChyZpHTvsaf58kJ8s8k8aPcoVFrxdJD
/F5+pDcF5Bzp9QJ5qj3wGBoK/Fw+/jRJDE3hiynywivks0JiWffL58rwf8XB
i/DJNrhM/f4o8HvzOF9A7MtvZbcEfpWNTpaigwRvz8P++dgkG13lc0772fBV
LpJPyDfSPeA11t9g31sFLkM+MhVyNmD+MusWYlcxkkt8iNcIvUW6R9F4ycbl
hW7b+zavUC4zqAx77yv7K08NFXg8Dtu4YEo/bXfet/Ed8pjyWRn+KL/cjO/I
V1X3tuC3ot1M3qunDqguqLd9k9z5E4P1Bm/FPLdW4iMb2VdOb+RsLev1yLCF
+8Xrip25qm8WRq37gF6Da2Hv+9qh6c+gHTS4aXALUC+rPnenwW6DX4adl962
FZ6beNfbvGcT8d5PntjOOeWad5BXb+3J4C97ryQu16Obt8hB4qV7yvm2qoJW
vij6s4H3l+ds/Nzghs1/HbjOZQvJuIP6o1yqt+ziPTuRbTvzX2Ts7TPYb/Cl
2bvZxt/Z+DNoRJvKiGPVGtUZ1ex7BV5n5wv8DU3YTfZai80aoF3HWM/e2gxc
VaH3JtWFjlvLHRsZN+A76/CPrdhgC7RN8JIepHf59QZw0v8A34LSZQX+Jr/b
xvu24zOD+IbspO+CHvRywGAPutqDHnejP+lO/w00Z+ztYa2zFw0uGfw76Tb5
R+DrToOusNc+4R/FPXfKfqrVD+O+J7zoLyPHfnheRIb98BPtGOfb+CZV/eoi
FvQ+7Ysulx5XPO4zPmIuvHpr4X6TdNzfTOaFwP1xwMZ/Jp3+7zbvDrxWXbFx
IvC6OalvqcDz+YpCl2maviGXu8VjmH5DfUeNrd83qI34HS3Ivx/96e0H0bXm
1zPiuAt99hLL94hnQfrbdJB8cBNdXsnIC+2sD9Fj1EX8zj7wl+CRPneZdTc+
0gHtNfjcgs89bHMAua8it/xL369fhD3nPMQmss1fA9e5dN/Omy8jw0XeeQDc
QfxU99xg3s86Lcd14Db4ucBjTTF3HZr0Xj+0WfiHvn1uo0d9ZzcRK/qfaDPx
pxy4Dbz2V5PbihmXM6+kdqgn+TTi/0d8FPH6PEf/IPvLD1r1bRZ3GtGWkg/V
K/UGvtcXeJ9TRO9Uwv1pXDG8O+jZ9H9WBXKIdgfvkNyv802pb8bXGIuYa1yO
rKeRR/hl0NUUes9SW+i+K9+pjHgvNMd3Xh49g2p1KefET/3VCoNieBSzLoWv
6EbpDdQDSoaTyFHKO9PvLePN0t0HEf8f8X10eZS4OoR8h9j7MOJ9ygpqzCwy
q886yr7oZsHp20W9TT19eCt8jnKn6I/B4zA9+wfI0BLxulaMrCfRqc4e5x7R
qv7FqKst+EM1vWwbftEfeA9yVd8ugdvkX0nnf5R7a5Fdcp1Ab0eQ+zDfDxN8
L+t76Rjyt3HHEc4c5g7tn0L3J7FXETarD/t/g3XE4RfEdyMxIbx8UboT/xvs
3yU36f8q/Vd0ElnFR/fpvwvV3nL4lBl0Jp1fV9LllvzZ+JJoyvGfEvxQdVP/
yeq/wVpkSSGb5sKpVikeVLsawh7PjdCp5qtelqVlCXsNreFsKXxSEd+vy9CF
3i5Z1Uvs5N4G1tu4owFetdxfSVzWc17/1VTwnkbONXE2fa4c3VRh90r8pgp8
Clwd8w/xkTbwJfBo5VwLOkxxXv8zScfS9UpidDW0lZwtglY2mOf7RjWvinvq
4V/PuggeZfh3Dff8D7Vj1Fs=
            "]], 
           PolygonBox[CompressedData["
1:eJwlk0tLm1EQhidFCGlVhHwn4KbSldq1ok1buvEX9Ce40YUXpFDcGkoTram1
CDbRJKYGIWpV1FpEcKsW29zUWE2y6Ka/QugzzuIlz5kzc7655cng+OuxByLS
g5pQ1on0+UVmMC7DZ0GRNuyPUAlOeyIDPpEhlIff45OBc2gW3sQ2Ak+gb/BX
bM94rx+l4SU0GhAZQ0X4ANW5+4uO8K9zznK3hrpCnPlmK9/mKL/hGvfLAfPp
5j5BTC/fCqMOuOzs7Teoor7YXvks5xScwxb2W06r8FPe+BywNzOcL5zFTqJL
+JCYBLFJFIWvnN1F0DV8g6JwDN3Cn9A5viW0AH9w1ps8isMl3ojQ2ylUhj86
u9OYOe0FtmnuYqgGL2LzyLUdfYG/o5rferYPH3s2K41pwO+c+T5GSfh5yHKL
oxfwDj5vfVaT1qYz1dk2o1N4j5iq376h34o4q11nHIXXPZu9zngD7gzZrLSn
De4rnuWuNRa1Fme56Ju72k/0Dx4mJgFvebYrmtM2XCOHFrGZ6+y1h9pL7cG8
1ouNn/udLMPnQduNh6gAJz3bBZ35EvwzaLXpm7/gYtB8dWfu4B/Odk9zOsH/
j7PZ6kx1ti9D1jvdkSrnlLNd1v/IClxwVovutO72f5FPfow=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.39741971201990484`, 0.5186467124812861, 0.9465442105188236], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
LtNcq2LoYeHVSdj2ReGv6If/VxLyjkd/29T+aTk6oDHtr7TmoPg86fos2KHv
K4V/n0Qv87skavpWQX1RyD+fM35Gc330+9EkarHt6X7tgOj2FYXcDfSAzYKH
kqhv97nXzou9umpeM79dB+sFTXmhn7F9vZm5Jub9XWNcEvfTupIYN61pKukL
3B84njzn+rGZGuLvUdQw15L+Say5P4m5GmjtL+/Qx/i39awAv8x3K/I3oUst
8i10TaDvss+vExxNh59n6OecJ48J3kyHLfvmRy/ZB9/w7+nu8emtB+A/falh
A/GjevS0/odl38d1zp3ClwkvF1yeGzpVY79y7jV+w2jWWTXQL+1E5r7chy9n
/WF6EvfuK7g7+A5xOvK6t7gkN/a9lL0qseG34eM65X7fe/jeXIltbeNaQQ1n
Ucdv1/ndeeErtrHvF75bLEqHXt7nidzgY/qqdPy+FDm870XsbfoLmRvOuOc3
aM3bnM06zmkDOaKGnHER683H942hwqXwGUI+N+9vwX8SfZjro2PgVuK3DT+x
LnXodyP71LJXO3Fg2muYs59W870Z2jr0dR9QVxTftdjvOug2opt7et/v3OO3
Yf9W5qxrBbyr2auKc7E8TcSuY/gK+gLbrQJ677M3L/pey+53Hfcn1usJalNv
fLY3fnuU/L8W23bZz3lqOjn2Ms52OXne/j8Jn51KDvZdyfdz5+I53H99J3HP
1TM/7mNPcYcyH/ce+/Ki//D+7vPd7zu2jxODR4jRQ8TlOsa3uR77vpkJetvH
9xfzXcl70xHWfUmsWuZyzt9xtpCxyejinLqF8/MdaAbyz8AGtsVEfMRn6jzt
uPtEeBbz3sd3nWbi13Hr+LVtlmNDy7eUO4TvMk3Eez15vRo5bMP16OV72AL6
2hP+VRQ6b8fX7H9+W/Jd5cQ7BedSjk1d222PKvq7LbwB1HO3ty1aiAvnFOcW
8/oc+9mOXW9en4Mt02fMG7vvNt1heHRwf3BvfYhz9FzX3cb103baj/6d8O56
j+ji3U6/tgt/7Z1/8n7vfOfe9bNvyNWP/sj+noWmF/l7wDd8/hjyXEEusV8e
zcT5fJ3h3a447nstRfGOYXmP4odd643dV78jO27KCb+8j7fCB+m5v4C2gnnT
dVIXDvkeKR068iJ2dyRxZs1J2OJTbD8Tn/S7yjHktLzPJtFr/yEJWY4jTzt5
y7zdo1TypuM3Fcee7Tac/HG+fTOJ/P6Y8MPZ6Bseywb4e0Q27OB8737iY+S1
3K3ks934v2uDaf1mVcEbUiO52jmsF+fWSQz1JI4O0Ke4z/K7wSz4teOfbfi8
c1pjUdA08W1elsl8phGPju1OcoznFiGX5TuXGtFVKy6hXuzHZraF38Ksm/Xa
S07dQ71wHjghR07UHeu2j32832reQfzu+Al2cs7oivNG+jLLZJ1nobPzTQN5
fgewjTh1rzeQ+6z51JAvqrGxbe3cNjt9Mqadf3bC3/lpHnb02107ea+OO+xc
cqNzpGMnofd5D5vPgO9s+E6H7wzO37Y6m7unY/8gv72/c6Hz0VzkWMT3rcSO
48Jv/afzruj3xdu5vzpPXoyf2l8b0N026CB/7McnO/CBTbyLOtd5bD/272Ct
11QRi97/g0z4a2sm7LiJHNlC3He9YdVzdpu+kUdbOMuPkKOZ7xZs34a9ZlML
duLbPosT77k5sXcded05/XvZ6BU2JnFXKUX/RdjMPjMcv7P/DUjC34Ykca9e
g//V0vu5B3R/4Tr/CHXWtdR9yQ78bRj8hrNXA/2z167h7dd+vY8ewzHhNV5b
SmyX8rsRP7dfbS2J/0/UlISs59BnbEQG9z4Dk+A9NIn76528Mbnu2Y/sTxch
m9f2xD+dSzqIS5/xedzrL+SOdz590mb2qcCHd2HHYdjWtP6fh99q1nB/Wo3O
vlf4fjGK/x+Yxnf4TnzNsixPYv/Hk7iLL+J/E3vIw7vh8Tw87av7sOG75DLb
zPZp5P8CW6j19ovL6JOt14fI385Z+kxd44eir/WxDvYD61ROXM/F3uuwxf8B
WlIY7A==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVls1VUQh6cX2kJaU+K95zz4UpEopXF50gcr0tX4TIhAsCCiAVxKJEaj
UCgtULRFoY0LdAGXF4uoUcMqLSRIW1AopdUSuhAKlBDjI2BZv+Hnwy/57v/M
zDlnzszcqa+umF2RMLMKNBG1R7NlOWbL0RF4A7rygNkYWg+PJM2G0cSUWTo6
G8xqJpt9gAbgPvQuvAKdgddE+V5GNfAP+KxMM3sb7YZPYbMc2yuZZtvgcb41
TDCrR//Bxfhcxfd8ltk6uMjPAF9ED8Id+Dw5yewJtA8+gp6apG+H4To0lmF2
AdXDe9Awe51FjcSfgEq5dxlKwL9F3f04e66OsnHbAfRrkI3bFqKb5GEv30Yz
FfMga3f5VsxaCRqHXyPGefa+hA6wvpbf72SbvYeOwoP4l3KXMrQD/gmb99OU
ox/htJRi+RkN/izoro+jQ/D+oNz5GTr9/EFrjeTvDr8ro3J/CVXBp1l/Y7Jy
3hN0R7+rv3EHXMW3E5y1B62DNwblbgjVwvOxqeXsm9BL8F70VrbuNAeuxOZY
hmKsgY+TA45m/LQueD825eR3IdoDL4iKtRmVR+XEc/Mh63PhhVFrDegV+GX0
Zrb2XAJ/xR5FbFCMdsLT0M50syb0GDwPm+psndnPviqlu/WjmqCYHrsRLYYX
RbHv4XtVB93d36QW32ZUCBegJvgOdyribi3s9zC221Naewblwq1eL2nyaYEH
sed57ufkT/ivoN7xnumHt6XkSzi7ndSb+dt5D1TD+VG10o3+xv5WUrXoZ7gB
9yTl6718Cv7W68vzg/0w/H1KvbcM7YKvozpq5Wl0DT6BD3j/jCfhlqDclqBW
+I+kYruN23agdtSLzriIUctAOYr64K+DfP0M38DTg3LViqbC7dgcS+gNm4Ni
9P4/Y3zWlET1vve89/5htCRHM8pn1RD+vycUYzilHvNea+P9lrJe4DWFbwd6
NupMfjb3GYTXs+dD7B3Ql3BbSrnxN/sO7oqqxbWoO6qnvLd8Rt2GX+TbXNbm
+cyA90Wx17jX+qNBteg9kQt3RsVyH/ftTqo3fGb8C+cHnd1r9nXWZ/B7R7pq
2mu7jG8XsjTjnodnodEsfSuFP8HmnwzNvM3wJjSSoRn0Mfw5msJdc9BWuCCo
F9zGbYf8vbI0k2YQb3pU7fi3vKgcei595p/D9mBUL/ubHIK/CMql7+F7fYRy
M5Xj7UEz3We719wN+DTamFDN9MBbgs7md/gU/iVo9nqMn+G8oNrxnDwCF0b9
F3gOXoB7g/57fMb5rJsZ1SteA8/B9wADmApn
            "]], 
           PolygonBox[{{5125, 5124, 5102, 66, 5051}}]}]}, {
         EdgeForm[], 
         RGBColor[0.5835525325461455, 0.6727932605197923, 0.9603585394668444], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
f02fZ5mcHgydp9HQ1N78kL0cR5ciyDuKrPPx+04RD63hfNIZpvNeMS+do/XI
pRG8OnDU7wS81IFTT90p6nN1mpfoie7PtGnsYuKXWuMUfMXRxQz6oBj64qTH
1HX3V6xBZ6bO77cN3k26v9qSGF0J8RzFE+V3P0LfKxV/kMyg9yrtavt90s8N
3QFnGC93yb4lnP43zXyOLYyptr1x/1Ygv6OK/rrjit8PDN4zWEu+1nA/MujJ
+B8gl2PIazw6OBXbM5k1z/lS8jVko2ST5V+8g8+Sk8FyfJpR6LT0YDX1ko/y
7xusg9d3mtVJJuvh9XDceRXN/ZauAu9dcKsor2NOH9BvJ3J6GznJp9qKvhxB
PzZRp3XR3WJz0veLvofo24jil6pXXUt0s6GZnGbhn41Bx0ez709il0uxT0ls
l8o6V9bDr/hPoV8taX+Rs0f5Esqt6CdbWIx9kl5Kf3ohr39AT2v5hUH7hM9/
Ezqylbae6N025q36z8irrnXC+29GfjuhJ73axTp9Be5WaG9CbltIN6NrHzDm
DmjsZC1y/aqQg74JfAGe+h4lDq04yyfEZhQzUvzvZvbn322t3zJYKt0weNNg
GfnllFfEHa/a7vUrKStmsT3u/tY2gw/xueR7jbIz+Akbc6Kl7QwOGg9Dsh6f
2w7+PoM9BrsZbyl86I6uu/onjKk+iu1tI7an8gCb28st/PviCvrlcP8OrfVx
94NE74zlTxtEE6772t/fx92HEk4N/FQbHDA4ZHAs7ntmD23CP0jb96T7yavP
6/hky+BH8pM+zzbdnh5zPiW/A3kus83I6nv42QONA/DxFXNWXGMlNFfQ5yPk
nbM70o8im9u5spUGg228Ow3uMoglvE31NcjlKP01xw1xb5OdjZO2JEbQmvy5
gOhkDaZBe6bB9TEv3xBzWkcZQ+fgdPgoxuZ3sL5JgxA66jsYWjWsl/rm8e1V
32B3G6zRGmT8jHkg5meO5Cu5CE/68lncdWY9OqS84nLjUx6ba8uYGvszdPUT
1ng/6/kF6yId3WGwhbpPwNf81jBuFXqxm/WqYe4H2RPC/4zyPnSkijWUDkSM
j58114S31YB7FF6U/8F0fISt7QFLR9teHW8wRrFrvj2MJa6h+EaXrJ9xZZxz
Q4inZegjfH17rKDtZuJv7YnBZcEfCt4QcC/IOr0Ls65r0rlNcY81KUYmnmQj
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
uh7Z6l4ymzNFMh8Mz5prHftX6/r/12o3jA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlmlsVkUUhgdKCRTrR+m9c40EpBRKwY01ASmgKBgRURah4AIibvxAE+OS
ICgUTSBRMGkVNG5RE40JLgEptqWgQaTxj6EqRqWoFfuxayQgoPi8vPx40vee
mW/mzJlzzrRs4cMzlnQOITwPXaBfEsJI/o6CCvTgNIRXCkPYAP3RpRm2khCG
QG/0AFiAXgwV6Bxsy4XwBfTIvIbWegIGoRfFEN69KIQ34TjrXc/37z1COFYc
wgr0H8zJ41A7dKCHMqeevbfCleiu2AqhoTSERrga25ZCz7kCfRLbNew1Ac6g
OzF3PHocnOb7c/Zowbda9r8XvRDWol+Ae9DVUIP+AO5DN8B85s+Dz9D9OVM1
Z70TytGXKAYljolic5b9Xi4IYT38iz7LnmODfZJvB7C1cbZ9sB/9LGse4ex7
e4ZQlBnpPdDMWMp3Hn0Q+qA/xlaFL5PgE/RJ1ljDXuvgKPpcqc86Gv5Bn8b2
YoF9km/L+M0h9jsMNej9zGkrdUwV28rEd/UklKG3M9YMe6AVBiceayDefYl3
WeZYKAeUC9tZc1HOMWtC3wGrieUqmId+Gh5j7BGYhS5IfFe6o4D+jz2qgmN2
qtQ5pFzqy/onmJ9k1uUQM9+J7mYufBpt05jupCe6MTqWrdCd7118P8PcpbAb
vRNW5GxrQddHryWbxr6Ex3P2eY7uHx9HBNdIOfpmbOM420S4Cf1r4rv9AX5B
7yBGI7uR1+T4eN114rGp3McJ9FR8yvB1JsxBz4/OTeWkcnMzTGHvabAJfS3k
Wesg3Ih+Do4X+05XRs/R3HUXh/ARujF1Lg7Dh23ou6NzXXdyF/qr6FjojDpr
n8S5ozPqrK3Y3mbue7AHfQuMQY+HaejborVioFjIJ/mmmu6FnikbY2/xPRo9
KToWHXCDND4NKwphOBxBT4zuBTrT+bPhw2T8vw7+Qt+P7Td8bYcf0cNT52Ij
XIU+xpwq5m6EQr4LUuv3oQv6XGL9DnTie7f6S3dyFfaj22ATeit0Ro+F77qG
8A3UpK4x1Zpq6hR6ILaX2LsOBqRGWj2zInXMFLt9+NsbPSR1b1EPfIDvLdG1
oJ6k3nQ0dSwU84zv6Zlr/6leIRSjH1JOMrYTHlRvwra6l3NIuTQmOtab8b+F
tSpT9+71UIaeEB175dBk9QJsQ4t8B2c4z2zWWMl6NTATPSvz3rJprD1xb1YP
Uy87n8MFvqO/E9eYak09YAfrL4/uNepxq9DfQlPOb8TP6PbUsW+EQ/z+++hY
6Y511/v0PuT8G/229UIvUs9S77qc/R4tcU/cGP0m6G3ogDy8hm0DtbCDeNWq
9tnva+5yFyxPnQPKhdchpH6T9Dbpztegb4+upbWwPnoNraU7eDXaprFa2ICu
ixc0LI7ueep9elNmR/ds9W7V9IeqFfYYVeQ7OIzeG53bOvNP6GZsI7q5h2xH
L02cizrDCuW7+kuR19Bay1KfTTl5Gbo6810qR+Zm7gHqBcOhCb0gc+/RmzYD
XZd6THvWowdiW1LiGFcqFxPfld7oPPpA6lpRDamWLs38v4HeLL1dfyauXdWk
avPW6F6pnjAdPSh1bqrn95Nvqd96nSmfOseV6+o5U9RfU+e2alS1qppX7et/
gDf0/0rm/0Xks3z/H7EuTGY=
            "]], 
           PolygonBox[{{5097, 5096, 5113, 56, 5129}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7781517161616536, 0.8266173019283511, 0.9785225488919123], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNm3l8lcXVx0MIvhcIN7nJXQRRkU12EAqILAYISMISEhZZLKKA7LtV3yra
UkEEAmFJwLBTFAICCtTWjaBgKyhSWQSL9BWtgCwVKIt1gff8PN/7gT/OZ55n
5syZs82ZM/PMc9ej4/PGJSYkJJwvl5BQ1srXKiYkLA4kJNxSPiFhq5XNkhIS
ZhiUWuMugw8MPjR43+BvBrWtrZZB/SRv21HWcYWz22CnwXaDEQbvGvzV4COD
jw2uGP3zBpcNDht8ZvCFwXvg/Q1a2xn7LRuj2NoXWVnPoLFBE4M6BncbNEzy
8XbRpwF1asuy92yDTIP+BmUN+sHnTuTpatAJvKPw08j6joT/7cg32mCUwTtl
nVf1TYwYf6az/4s4zb0Gn9BHMojGMPqp/3D0MQI5/4pOyhkMNLgFPsXjINUb
3dZWfhd2GiOhG9evaC2QbgJuv53Uvc+YpfBexuj80crrRqfI8MqV9z6bzP4b
DbYaJBnOOuko4rw+Bu/ir3qSy1YDvdc1eBhexec9Sa73+rTVTHJc2eCuJPcX
PVfnfTc2kK7uK+sybuS9Bv1lw6ZJ7ouCRtQVGsw1WGiQbLw2tzIQ8bYG9JGv
aRzxXh+/kc/IzvfjD/Ip+daKgNdlwEs1eBSNPfj+LniL6+Bi2PHPh10Wte1D
jvug9ask520tPjsNHp7nuTFzqB56a4CO4rqqg75qUOp9p/G61GCXwYv2Pgdd
SF/74KMBNOqjs7r0rYP+VLfKIEe0rPwf/O4hBQKeyxhUQLfScfmIy1Mx4vhl
wJuOTJJH8/oCczuJuSb/mEX7zCTHfyHJ/eUeeFR/+bd0dyHsfNzCfBgADfna
y4a3xmC9wfvShcG7Bn82eMPgHYMlSS7TTvxDbX8xeCXJ+2+4qY/wSw22G+wy
eJs60TppwfFrg68M1mFD6eKyvfczuJTodP8MPcWmoiT3p/cMdhi8xLjS9UqD
N+FF4y23/pkG001XIdNpidWlao5auTrJx9RzCTKfhJcTia6TJPRy3PR1TG1W
vpTodF8wmifCzv+/rMy3co7BKYMZAccTznHoie43if7+ZaLja7zZBo2Mpzcs
NjS18gvaj0Pra/BWolvJ2s3GG2Fu1NnKWdAX7aMGhw0+S/T49A4x6gj1X1Ae
velZsfszxshnTPF6DB5mwaPGeA/byYZ7ia2a++9hh2LZ2GR4yOT+MOJxdAhx
OO5ng4llv6Ytg1jRibZhxET1HQqOYu8cg/kBjxGKv7vBHVr2xnrxLrFfa4zk
knxdeZcOysHDQPTyHjI8wrxU/eWw9zkXdtojoZ8Nj5nEIMWCjwNer3FEfxd8
KZ49Cu+/Rq6H4XcIbdJJKf66nbn27k3zayd176HvHeDtZB7Jt5bj229Bp/Sm
PsXgbofudubFu8zdXbTLx68lehwZDl+PotdB8PsYOhpMbP4QvQ1FLuF9afbe
buvd7ojXDUXe/02zuWnwVJrrdzC03odHyXoq7H53Muy63YMeNVY8Nv9g/S8b
/NcgPT0hIWxwIc3nd0eDLolef97q0qz80corad7vosE5g7PiweAJa38ozfur
7ozqQgkJMaufaOUpez9Jn0sG01NtHqT6+0n6nDb4teF+Z2V7G7uzQYdEz+20
7lfU2m/05hvMMzhO36/SvI/6PmrwjT2fMPiS8gz0f2vwnMHXac5XVYNb073v
eca/AL7eJ1vbUwar7blH1OZUckJCdyvPmT0aVLCxI962DHt0NV5zDHoaNIx4
btLEyojRqALPGYku2xKDO6xtssWcumHvLzpLoaVypcECw5tLHHw+zWWWvNKp
bDIm5LqUTiVPt5jL/XDMx+rEeDvlQ+bXf1XeZzDInj+wsgDe7jR4O+LrTLqV
Wdanu0EP7JCd6PKdhAfpNYIt5AtXwO1lsDTd7VSU7vZbCg96LzRYYlCsd4PC
RM9jlgQ8r8kzvW42vdWzchQ+tT7dYXO6121lXI3xRMzp/cbKRYy12GBIzPl4
0sr9Ru+wQfcK7ofr0t0HirDDIvx9Gf5WIp81mATID9Qnk3WqI2MIX2uS+NkC
T/JnPW9M93E/Y+wHDS/PoC/r8GV0pTiheHE90fucYo58gx9Kz0+ZDNvES8z1
fwJ/HsNckc+fBl/9ZNv+AV/XxNs2dDcfPkX/W7PxNuPrHisPween8KrcWjYo
Qe8T6a/nTdDYhIybedY4V5BJsv030WX6IdH5TGOeKfZofVOe2h7/lH91Ndv0
NLiaYvow3OuGW9bKa2n+rJjTGXz54k/2fjXNY9IthvcfG+Mj4o1iVhowkbpb
qddzBJ8NE/MqU5dAjNN4olfO3v9tZRna9F5ocy0n1XlTm3j9NuT9rhIfVVeW
+mvE14JU759Ev3LwLN5/oJ9isebhHen+fiv8pdOvHHxId9WSbuxla/NeajZ/
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
H1/yS5ZqRutXyX5ulcxcCEHjIGPEqBMf1Sv5OZd4eJU5sZa5sIFnjbeaZ30r
zjS4J+j8/JE+583Wj1vdh1Y2RDbx35BS8tThvS6lYnFTeNCacncl10dT2urR
V7qXTE1uelbZjLr6vDelrhHl7ciWBc8dsbH4rsRzF97HR31+T4i632pOtQr5
vBiFr7Zi7qt9suE9aPiToh4LFOta0t6Kd5Xpqf7cgXggXM2H+6DTln5tiAsd
wR2Kz44wWGKw1KAo6HLdiY134DtxH9J7dc4rmyK/zod1fpthz63kxwaNKvnY
7YhZt1nsqCVeVXLmKd+PksOEY7TZ862xG+fynSr5s8oMoLNBe4MuBh0MHqBO
bcJra9DSoI1BjsnT26CnQUfa4n06QKcNpd7zoKt4nGF6nW/97k/19WAQ5xva
8yke1aKsxvNxmycnUjym94WG7C3b3JrqNsip5GdHivVT0/1MY4q+h8X8rCgS
833fIs6Jkokf8iX5WXXiRXVsIZ9upzGQTfIrh9Q4LbBNa+xRlzgm3bRGbuFo
Xye8luAJ56jJcdjgsxTHbQlug0qeb61mLum5AfWKYXdDoyU89UH/io91wGuI
j9QFtwV1DfCJOrSNtz6jDMYF3V/kN9UYI54ntoKGxpIfjzUYGXQd3Q2tSfY+
0eAZg0X4eTuzx++tfMFgquK4zbGGtjf8d8TbOqa63duiJ/mGfOEXn0j1b7P6
7qhvjnffZJNayFDP4B/oT+ftzzDOlKCfKTazcnnQZZYuW9CnJrLXo2xM3Z2M
0db63GvQxqCYeVsITcXNpkE/r9T7SCszwG0ddB23wDbtmKvS20HWEK0lip/K
wxQ75cfyZ+U38gfJ838pfs9A3xJ+NuhTwZ91DvqvqMeik1H3eT3L7zsY9LXx
H0Cn0m2m7t1EfT5difp7Bu0XU/xMVePoTHeawcxUv4PSwyCrgq/ZWrt1x0v5
xWvkHDqzVP/vDbIr+BljJ0rRVFtb5JYedL6pPl9a+ZXBD/b8bdT97oTJMCzo
e5Cu7EOy4L2LwUBkkmybo463xcruqd73ZMh9Jd+gp7UtsHKuwZxUf56DL83n
WXhtiNVfpHhcqUrMzubuRCGwMNXrpLNO0MuirhP8Sc/iry02iPt1B+rPwKN4
3QL/r0e9/0JozoTnWdTNpV561/ca2eEg/iBfuG7lNfx+Lv0lWx62kw3XstZr
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
hIbwvieG6ztBBvyIx/8HF9+RWA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlllslkUUhicUKsVu/99vvgFZK7K2DSoQpaiQaCullEJBEUERUOlCW1qK
6IV6oV54gzFajIKaSGJwgYqgF7jvxhVIq4AiXWihIC5txe1CnzenF2/y/PPN
mTlz5pwzf+66+oq6Ic657WgoOhU518XAGQm+LzjXkuPcAXQvPCd27sWLnXsB
XQ2fZM5R5p5AHfAixm5Id24eWgyXYbM66Vw19nWyR4cSzrWh6+AlzLk+3Wxk
exNjDzD/frQMzvPO7Rvm3Jvoeda/hbGHkzZHcy9Ft7HWWX6vgzegfPbKQ5Xw
EdZszXKuYIRzAd6OXuX3igznvoKbmNPM3CdRA7wpmK86s87+LHOey2RvtBNe
w1g7e3WgtfAj+FfC2kWoD96kM7D2clQLP6M9sX0cPQXXYDOTtQtQNfwTYz34
04GOwRVoF7FdQDyWwuM480buZQMaBY9FTXA1SoNPR3ZX21AXHKEaZzay7WCf
dpQKX4R+8RaLfHQe/o49jmtvNBoeE9naWiPAxagSrkJlg2torbdZ8x10jjXy
WGs6ehD+Fc2AD3BfvXAbc1oHfZAv/dgWpThXigbgs+wZsp0biXrguthit3q4
cx9j34kOplnOfQEXRRYL+bQIblaMiW0zehqexthmvjWiXK2PHiM2j7JeF/aX
o/349jrK9xZzxb4d/ahciS0Wyhnlzh3cUXfS7nwFfHew3EpFd8Llsd2VcrgE
7oysFjpRN5zLnLUJy9GJcITGw5egJDwbHw7jyxF0FdyD3uW876EOOAe9QmG+
jDLhpDd+CSXgKaxRk7A9JsMJ1RhciLrw5zd8mJ9iMVfsr/B2N4pBgbeYK/Y5
6HhsOa5cV0yr4c3BakM5e1ewHFOuKaa9kfks3xdw52fgQua0svcxdC08w1us
VcOq5TdYs5zYlqL98CzGWvnWhgq9SayYzISrmFOYbjW4Q7UV212rplRbF1Al
vq/kfm5kvy1oR47VtGpbOancVE7+DP+Oz3NTLCZ98FLmbMU2D3/Hwld66zXK
oXHKbcYeYv0mvk+HJ2BzD9+2oMvgMcH2vhWVwKVoVdJ6nnqf7lB3qRweAs8N
FpsWzn8Y35fF1ktV86r9jejmDOsh9fB/7LELX3ejod56hnqHelwVPB99mbCe
Og/+3FvtrEKfwX96603FaMDbmL6tQR/CvezxT5bVYHdsOavc1RvQHlmPU69T
z10ZrIZUS9vQOfUfb71EPeDfyGKkWNWjqXBjsLdjJ1ovX9ljL/vtQV/DWdjv
JpdnoxHwtGC2ymnldipje1LszobBjbH1bsWoAb4m2FuinFPulcX29ihnFsKZ
we5Gd7IQ7veWq+rZ6t1ZjI1KWA8+wfzzkfUmvWl62xbzfX3ScmyA76djqxXV
mGot21st6gw6S3qw2qvFZgmc4u3udAadpR37fvb6G30ET42sVzWgSZFJrByb
ElnPVe9VjczxlnPKPb0BE+F9rFGcZTm6N7aeot6iM/3B7/H8rkzaGXSW4d5i
PQulwVuD3Y1qplaxQJOxnYRGw0E5n7CelR3sjdVbq55YAR+NrXeeRD/A38fG
elP0tnzqLdduRwfhU95y5wnUDU8IFiv5WB5sTN/UA9vhT7zZqge+Bf/lLZf7
tKd6d2yxVA53wodiqy3l2Lex9Wj1atWIamV5sP8WqvkMxSpY7evMOvvIYGfX
mXX2D7B9f/AN01umN1xvuXrYa7H1MPUy3UFLbD7JN93xBXz9JrZc138O/ff4
H17bUUw=
            "]], 
           PolygonBox[{{5053, 5052, 5097, 106, 5185}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9171915282845634, 0.9368076444260476, 0.9919637408259666], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
BDyOwz+RG5ruoRWxj0dQDkcG5v8Fxo1HPl73S/aTeXtP8EYyfMAw5l4Pf8OQ
4URofpD1l2CD52TDhrpT2ra+Zb/ZNvvgT+1LnZM7J/RZpGTHXdD9YGxhCP7Z
+2hsNmxlTDbyG9uFc4yZxeibrPIW6m7zOM+dQDmGc+54ynHYpO3Re/NrfIX9
wD7s+in292tVEbe2sqbX3kw+65zd8x1/arFx5yLOe8Zg115vGDG6Fh4Hwedu
8O9nTdv8XvbXU/iFWvD3oM/8r6S+k2+fG3zW8NlhJOc858/D4X1EM1lYrmvx
KTX4JfukAezbGvjYyJ42Lw+iX48ZXwzdjivGXh+I37sCX3c4FmfDTzRS78Z3
f3B4vXNY29+vwfN+ZN2fMY2M64592G+kiGeDiXFXsnYtMAp570K21uGoZnq4
inI4NnAFunmP/e193oc5lvlw/NJVyNJyHJtt8tFr0VEP5vTBxl13THFOaNu5
inW89ofEk0n4k334FOvxfWLPZ9LhP1qGLn0fsJXvndR9T7Ad3Vm2jybizqCR
cR7jc/+ngi8EX3KXcpC+KdzX+d7O+/Ft9uRIznC13L8cAN8O6DD+S3PKu7Xe
gFx8f8kaPrPcKjxrVNao7xGN6ZsLn/JX5Ps+vvM9znb2re8kw2fOwb/Zz42k
fgFr/dl7v0UiMUu4OyQDblG9kAz6PmtGx0OJoGs0MWaqylVq2622pYk4LxY4
M74PLZb5naxr3/kl/JZ08Alr+B6mG3cQvbm/6EV+cQH3DL6z6NHs3qYnfY3g
NO6P0P9k4GNo+AA5vYNO3sLPfEi/aR3N+cu+/C1k6jF9Wce0fMo6n3GP1A+6
zuPuxfTtwY52Yxtbsa9XqZvWc/MxrqvKs6i7bRdzSuP3UN/Nt+2lO7KyDFrn
Y91W+bi7ORdaludDpyvzMWcperItOebbnuqI2QsrI0b+QC54BzHMbacq1/4P
wc/SIbd9yG4TOWMD+a/vaqYSeycQy9q3jbOUz1wPao3FgkWChRURgxcAts/5
wBzi/HzKeYyZS5/nm+bJFXFOXc4Z7+Ji5OVti7EP9hJzHV+dTzge/w2dfsxe
eQO9l/JR+46JhYjLkwvB55vN9tbr4N2PHN5m/xnPnmSs8Sti+h7G+h7tG/L6
X7MPhrIX7hEvcwX3VsbYPeCqbhu5l+Xnc94M+J2lvjJBeTK+b0DehumMmUou
YZ04FyrnXDyGvGsB8yaj+3nkLPOh+1fkJwsYv5BcbUEzndxJHub+OsbcAU/D
0b1pmAZdFeSR06G11O7StJmf25LB323w5/uRXwr+S9BacLPgP2mbRWlZlO6y
fY/2LvrwHp9pPwa+wzaH3UxDRpbLHOn4kHkqhN3Pw+bnIxPzbTpuB8+t4PW3
8yufFxyLyrlH8J3CRvIU36mskl9dJljaIuLIEsHvBRX4Xvt7+0/vzZWA608K
/ih6nxP8qTJsf73i3bOZ8MHGY3z/h7/ornJDJuzpRee54met6q8VYr0nGb9C
42aKz1Uq56vvRNnX/SpfEB2jReOuXNx7+l7ym3zgNf6zVRY0bqvac4XA1Ug8
WEp8dNtQ7Nt0t9O4PRp/jMoe+eDzEuGvyIfP752PmPgJcaBXPnzrefkA189X
2Scfsaevylfyca7e6ns5ZOlY+D++g5N/+rQQ9DwKzysSMW458lyLTDdr3D9V
flAIPTwueCwR9xxdOXfdy9603dxXGWcHnyGeywSPs/FFixnzAON+I/hdZfg7
92fkj9qKtv8tNL2R+L77Osl7mOD6FkHr76F1XWXQar3vLsT3HugcCy+bRMNG
wUuZmPMIPGTyERuqVDYwxvTOxn/afi7KBa8/V7k9F+tvU1nGW4DfBNrm47yb
zcf6puX5ypC75b9N5aRCnGFuUtlJ/J2SjlhxsBCx4nPvqUK86XxfiL4u6Rh7
HXyvFzzdIvbJSsHpxJnO6aifyvdq9S0XPMWcNYJ1fK/i+wTilOmYVxl7wbo4
7NOdkyTj/sb3kb5DWs7eNI5yfR8l2FYW98GbfXequa3VdoagleAd8VCl8hOV
KejznGfZ785XT2V907GSff8ktB1P+1u54OevuaB7FTJYD0+WzT/z8V7wfT7y
2tHk1Z1Z02t3xYfYlywQTe20l+cVmnyofd+uQtjSq9j7GN4FbsyFDxmn8jzq
bvN9XemurrYYd7tDVS7CV9hntE+G3KpV/oZ1vf4i7ud9T+87vTx42lN3W6Xm
tBXkBFMKcY6eijxbYR++kz4N/7kCvVtez6Ary2xLPmJ6fSF06bs76/aCYtyl
+l23C/ZjWdXw3nqhz1bFeBtNFOPc3Aee7V8P5yXkJ3XUL8FH91fZLhk6bQ8f
jkutkiGbkwTHtg07c4yYDtRje8cgC7+pVjPWPuIY/IH9guWSF6STcafu+3Xf
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
            "]], 
           PolygonBox[CompressedData["
1:eJwllVlslUUYhocKaVl66Fn+f1qtaIVwYRBZS2spWMqOiUsUY6kEbdrS0IWC
uFyoiV5g1KjolWA0ksgWY1S4IC4XUhciLdQLUOuN4IbYqmBBE3F53rwXT/Kc
OfPPfDPzfTNV9/fc0V0UQngSxsKeJITe4hC2wRv4gzGE2/MhrIUufB28lQvh
w7IQivEr0xD6J4TwGVTg26AiE0I5vKDf9NmZ9xgaq5K2ZvoOQjn+AIyh7+XS
EJ7Ct9BnA31b4WG8E2rwl9WGt8NsfA504OvhMPEchHvx6YxRPpF5YCq+Kbqv
xtBYn7KmYdY2An34QtqGsiyc72vwWhiDF8FifAdjTMl4TVrbizA147bn8a3R
sWmNvfjm6Ng7oAf/hDl+Kfac7+EPRe+l1tiCX2aMKvbyMfgbb6JtVt5r3Bjd
pv8eh3/wNbTdTWxrYXX0HJpLbd34FBhP3wx8R/86fh+a7DXW4ycLIbzJgb8N
Q/hRaMLXwzG8E3axHSPjQlhEvOOiz/owjMW3MOY6zqoZtuKb4R68CXrwGr45
wbcHGKMWv0RbC9+2wyj+TOrc0BnprDZBB7nQDZfoP5c5XiHWHTAHnwFPZJ0j
T9N3GK5nrOnwa+oYFMs7rLEfv5kxfmb+c9CAz4cBvB+q8e2pc20a4z2XGrnO
9CV8ecGx74db8GO0vcvYB+EE/j2UMncOhvDjqedWnwF8MHVf7fkX+LcwOtlr
1FonEkMthXYTjMerWd/urNc8D78CqjnL2bAMb47ObdWcai/HNwv4tgYy+LW0
tRFLK9ym3IW6nMdYjt8A27PeQ+3lSrgz5zNZgV8TfTYa49boM9ZZ76X/Avw4
e7CR3OiCfrwkcex1MAn/mrZDRc6hU/iXsK/IOfYV/k3BuaY+6js/emytWWtX
zan2VHOL8PPs0cwyn/Hv+ADftBQ5hs/xEL03M6AE/1f5hOehgd//pa4Vtek/
5YBy4Ucoxduia1s1plprjB5Ld4jukj/p08VZdcJFvJ45X2Xa16ARn0mfZ7Pe
0xvxfOKzUI2/j/+ROnfVZ1b0HmmvqmGCcpP/U+K7SE6cwffT9mix92y44DtJ
d9OGkhCOJM5Z5e4gzMVj4rv5EX2Dn2WMbJnH/AFfkrh2VQMLE9e0alt7+AFe
ljgW5VAWXxK9d8oZ5U5n6lpWjffiBxLPpRj34j+lvltUA6qFbrivxHdAF34u
dW0oJsV2OvVaVQN9+NHEa9M3H+OVxNSqdwca8EpiuCvnHFWurqTtdf7bDavx
aYxxFXfHBc6nCp8Unfu683T3tdNnZ/AdprtsjfIRb4MKPFEMfNsHWXxe4r3V
naW76+rUb5PeNL1tywq+CzSGxlIMikU5sbTgnFBuaM7F+IqC16KYV+GFgufW
GiOeT/1WKgbFohxTri2FC8qfxN4oVN+pY1VN/Jb6ztPdpzdjBL8u9VunPdHe
HCGvP4KTcAr+Sny3KqdHE7fpv9NwBgYS76XefL39mei3RWewCq9PXDt6s88n
jkmx6U49i/8Pd2gULQ==
            "]], 
           PolygonBox[{{5090, 5089, 5127, 166, 5162}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9801005842228643, 0.9846796288124907, 0.9185686996985535], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
NjUPu5INy351b/ZJeZz7OvRaRratO3I9977u5RFJ18k11l5vkGG8/MLaGw1a
Wv+XSfeBNdQOvzGa+6y9NuU+ormNBtelvL3I2lYp953A2jXIYl3S648HuOd2
Evt119VzF+tO2MvcK9Cuhr7uc90DW6lj1kNrVdL1uNraVqHnN7HQx/q+P+l3
azX7/gy+W6Q89sv2cuBB/rc8x2OHcgfNx0PPeTuGfjbxMtLaK1P+lnmFtdmh
++XFofvxXvhvG3p9k2vtZdyzum/3cN594L2LzjYkL7zBbITnBeDWg78TOW3j
21743sXcXs6wj/l25OfK06uR3cPsW07cqW8m+5WsV336Q+g173eh61/6qGT+
eXBe4Jvm4tiSbOps6PnKV6GvF53vrR2R8pq0KfRz7SAPeCL0fPo+ZFiOvT4Y
+r3729B18hx60XrROW/tH0J/774/dFD/j9i87F05ayVnrYD3SnhXvGjR0u2+
FjtbxT2h+2JAyvnTnHKRCdi//CCacl0Wpnx+B/a5A53tQbeStfK5TO6pSMr1
tx2alfC1hn22Q0M56DZwKshnV5MTiUfddTt479W77wruPc0Vwtt4a+/i7XWq
cBP+Zjop4T4ke5CcSvmu+SjykP/fTmxRDJKcVIM3KV7EPOdQ7OvL24xyH63R
m7HicU9qvD7UhKrtFKtSsQvvnYrTDdwvquHfpq5XTS66quuS1OA/Cv0tVLFS
cfIQ97vu+QnUjKod30947nM44W8D4lm86w23W8xpKH/Xna48TW/uyjOUR3Xn
vTaPfEr5Sh9q1iZq6V7Uxzpf25ifpwP/c7WL+dtdHvt0g04fcjPlBLr7J/Df
YAfyrI6sFT3xIf71pp8Lfckqxdk7QLc7++TBs77rTurB3EH0IH204y26E21b
8E/wf4T+J9Fd9An30Sn+MznJ+/MZ3sKLkbH+MznNfxjCTdPNh25uM7468k08
9eCb3qXvNriH/11mMlZeeRtv0905p+7bheQFyjWmGN4M1k2GF61dyJvsY+QH
j5A33Mk65RZ6L27gbN2hLZl1RV864/qkj99IOt1pzfZRW8x+M+G/gXxDecds
cjG9ZZTx5q73+Imsk94HYA/KKUqRp3L9seS1ekdRPjKF71M4q/o3k5+MIs/u
h42+nvA1+xO+7zR4m8K78v9zFHieCv+l9AdBYyB5jHxTeY18fAR+/mbC+Xgr
4TWP1gzD/4di2/noVjquxp9UUwxhfgpxQ+Ph0L4Gu78Gm0z3hzMeBv0R+NdI
+sPgQTwr71Mupbil/zf0f7f+9xqLLBV7RrBW687xxiY/Ho5/tWVPnV1jxQvF
OcVByTj9Djo65vmjbFR1zDj6jcTF8/iP4o54km2cIE8elvT+SHKrj8hXPyY3
Fn4jNPTWOIr99GY2pNl/y428p33Dm9o3vBEKv5j89jDvJ6pPRiBXyU+57E2c
YSxnuBW5SD7S7Q38/5j+H1K86M3zNtbdxLrbWNsXO9S3W5KOe3PS6fdhXnoY
xVkKkZvkOZ+6SDoaDU6at6Xk/2o1Vk1RS1xM/186nv9MW3GPS54v8U32Nxg7
0blqwVesH4btDIWXfvCzlVpTddk5dKF33HHwLR4VI9/m/fqrpI9/nHSd7+Wd
+mJywmjoZ9Tdp7igd9Rz0IyRr2aFvv84ZDga2Y5DXqPZuxV2pXNO4Bw6z/8A
Q87bMw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVuIVWUYhj92zmzdw95uca1/peVpQiXNjh5uMtPMxhJLoauMwrSywCjC
cgSxq1ITO9wkHUzwNE4qolGBIk5gqaMpVA4ZhFoYeE5J007PyzsXLzz/6fu/
/zusNWT2SzPnlyLiedQDDUwRJysRv6BB8M3oO/h4Q8TFPKI3412Mv0Q1+D3U
XIu4Vo14G25CX7G2A/WE+6IOeA/K4MlFxOp6xFrUE56BzeZG31llfRrjRsYl
9JCYPTvZ24HK8FbmVpYjlqIt8Ows4iP87tIb4AHYOFCxzzfCk5j7gLWP0WT4
Nea2V21jgfZiY1iviD95/GdwYm5vxTb6weXkt+pNetsN+NCGL1vQFHgUauT9
TegOeC53HOauI+gZeB76Pjz3LHyQOxZw9xXsHYIL1Fr23Dq4nhx7xVixHoxO
VxzDPslndPYSGsJ4KWqo2YdlYnz4ou6YKXZj0Jo+EevRXfAxfPichG9DP8G3
F/a9ju6EP8VGJ7wXfaLcs0cFMg91wquT15Y3RYyDLyWf/RD7d3N+LeOjjI+g
2+Cr6GV8eQW1w++iATXXzErVV+7YX0A3wSVstLP3FOubWd/HnU+U7POP8FG0
GX6ceJ0R566F4eSwE/4h89u0pwteoZiHa+rh3HforvMowf3QOfgsyuBHctfe
v9T7VHgFPhQ1+/yO6om531n7GZv3wY+hvxpcwzPh8bl75TdUhSegXxt85l54
ud7fZJuyrZwoN8rZOPj+3Gd1RmfVU+qt6+h9eAPqqjnG6+BNybE6gdo05szi
smtqI9w/91v1xhzemLxXNmSrktyrypFypR5Vr6oH1AuKqWKrHmmH30z2JTj/
Fvy6+r3qnlJvHcpcK3PQfvhb9FTJOVQuD2Ze09xOuCVzb6qHp8Lj0apwz6p3
X8jc2+qhOZl7Sr2lnD4N/8edS/C9FV2Ba8xV0XT0KGpO7pXLaCh8T+FaVU+M
Lpxj5Vo5bIHHJtf2bt6zCH4RG8fCPk2Ax6DR3Xforucy14L2aG9r8lnFZCH8
N1qIb4PR6WQf5avm/lE9Ff6WvIH+SN6jvUPRWeU+dfdO3b3Rlrv2leMN8EXW
b637G3EeXpPce+ph9fKrybnSN0LfijPJtnXmgnq1L32FTqCTaFbhb+036MnC
Psk3xXhi4T3aO4K3jkRfwx3dNmRLMVasVeO36O7C33p9Mx+EHyhsW/8A/Qtk
Y0R3TBXb/wERzfL5
            "]], 
           PolygonBox[{{5199, 5198, 5191, 156, 5218}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9951843813322833, 0.9922766321722138, 0.7294707939530798], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElsjVEUx8+r9j1e9ZG63w2Nkq4sWomplVibUnPFsNMIggQbQfsskKDG
CFJiUVFK6UQsWCBoY1NBIoaVEFISQmJIkBh+J/8ufsnv+96555577vlexeot
dZsLzKwWCqEzmn3MmX2CLvxQMEunzArgAN7Ouzf8NgCX8WHQnTW7DkPxi/A6
p5g2/EpUrOf03C9Hmb2At/AOKnm3u9hsF1TjNexRDTkYAXuD9v5LbfvwWYlZ
TJuVwgL8KpzMmN0sMdvG+l/QRi090IGvYk0/ax/DOnwR8WVp5ViIL4YK/GeR
2Wz8LGuOUUs/9bbgDby7xO/GHifwlTCD5xpYgT8g5xfq+wx9+I6oWu5AA97H
GXsHz+xnPxeV+wm04lWsqRw8s5/9Au+e59RD7+WGoNqfwhp8CXuWp1VzXaKa
vDavYTu+lpiHpjP72X9H3aX3xHszhphvXPR3SPDbQbV/gN6gHngv/sBcfCz8
ILaUISnHa8hxsFg9mo4f593hrO7Q73Ik3OL5FYzHN5HzEbVkyb8nKIfn2k/N
nXgBMWeIbYYUvjxRbzt5TvM8BFqyijE8G3W3PnM+e/OJTxGfI39tohyey2v6
x3MPHM1oRnxWuqApo3fd+DVozWqPQtZmomb5BgzHp0XNZh4m42WJeuc9ifho
+FqongZ8XqLeeU1zEq3xtY0wFW+Mmg3vYR4/RU8mpDSTM4nPQzfeDplEM+Kz
8gzOR+HuM1KFj4vqtc9ESdQd+l2+h3v4/SAfgLv4lKhatsKkqD18L5/xRrw5
6Fvzmk4HfWP+rfnML8WPBPXaZ6w+qEfeK7/zHD4xKrefYSfxRVF36T1e5rMS
NAv+n9Lk32aiWfA76Uj0n+D/Df5N+LexMWj2fYbW4/8BHXWmaA==
            "]], 
           PolygonBox[{{5135, 5134, 5199, 206, 5229}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9900633536919983, 0.9781435001469162, 0.41589843478196065`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVk1PnFUYvdPaMRk2bXLvbGhjabCJgLUIJrCXhU2kScGP+BHFhUtr21iF
oQVMPwSkVGZQIHGhJi46YBkGhhEk0db4N/wB2sRNF6USPafnTMLi5Jn3vs/H
uc/XOy0fnD/30YEQwp/AQeCXTAgFYBQophB+zIYwDDkZQ8jgbBpyEGcDQDuw
CVSAWlY2Oxn54PkscBs4iecTQEtGv58F9oJ8nAX6gZfyIdzMwSfkPGI8A53Z
KPu64wyBxznI95Ns28yBkufPZcWNZx0+G7D/HuAhYu467qBjjyLmPGQBshUx
j2cUu4rYn0FWot7zLiX7OgO8AvyOdz9B5w/IH6LiD0Xxpo+vyB9oxu8RyCuI
MQF8nlMOGKvV+Tjp/KwBy4zr35tAHdh2XmvMHe4/Bh+PIDfwfBdYt27FOtWM
uK24nrQfAXZhswSel5P0a/Y7ZP7v4fxnPA8DWxnFYKyPIf8N4krOzeZ/FPgC
tocgv4R8HKTXaj5r5nQ4q9wfY8woTt9F+Wuxr07UfqwphO68nptdi/8Qex4c
MjgPGcViL7Lnbrk36PtREB+CcXj2wr4eGXBPtBm87ylgDVh2H8/aZ8m9y+d5
9/ZGVv39Nvj04ff5JN1Zc1ixr6r9cXbKQNE+Z4APYTMHeTFJp+y4q1n55+9r
uOt1YDynGpbta8lcSvZ1y3NXsx3tOUM3gOmcuKyYy5p1Nm1XtJ9Nz1fjfXkf
lxn7XvW9eTaS5PNpyAtJfi4l5Yr9fbVJdswX7znnWDx7FXpHIPss2RMJOO0a
sVYvJ+2Kb6Ke21yjgud0ybHJoZD07h/UuYs7BOi0v24/N37TV5d1H1q/3e87
vR/Ip5f39Uxxtrpse8o5YC44j73222N02/+FqBiXonIw41z2mk+DS7dj99iO
nN5J2itvJdW96tq/kWT7pvP8pB+Rj3etTzvuJPYkn2ueuVXb182b9+NcMOfb
vh9nnLbchcWceo9+JiEXovbS11HxuLtY47q5cbZ/xbu/Ie9BliH/Au4AD7zH
uH/avdvnks6oT937UXo7UXzL5jyaNEPP5zXne94pR70rjnk38Jkzf9v5IDfq
Be+HLe9F7jOe73l/7boHaJucE/bcsGvHGo5Fvb8adaeyebNetD/suWG/Dzfp
Xg+swx3Gc/KpOc+N/b3tfUybqn385jwwH9TZ8e7sd11Yn9N52bwI2eU9yX1Z
ty5tGJP+mI8t7/ARY9v5uOj9M5jk44q/R7zPEfcp98dNn9fdQ6x31XuCMfqT
cnc2KQ5zzO/luHcXe+VT/3/g/4jL/u58wm+355/7gHqj3nXHXV/Wlfu+BCzm
9K3+lv1oMCeDRoffZfOa49eTdGhbNJcp78QxxylYjrnfF62/4G8MYx/Iy++i
z+lj0j5L3q8NvxOO89i996QH87I9mJfOlG2est9KEt8O76H1qDx+D/la0vmh
vPJxwj0/5Tjksez543xNmAfrteFvOueowZV2ZzzTfe6nov1sRPVHc1SNV+z3
rn3ccS2m7WvZs1Dxu1U/j7uOBddnYV/+rznWjagZvB7Fc909+T8oDl7a
            "]], 
           PolygonBox[CompressedData["
1:eJwtk8tvTVEUh9et9gwYlHTvOzEQIhJJW88SIxMGJpXUm3gOzLRES2/b9FJv
FaFar8QAiZFKqMdIPNL6G5gzQmJiQBXfL787+HK/vc8+e62z1roLD3V1dNZF
xHqohwM5oqOIaId9eEs5YgKvzIlYjm9mL7NeVIrYgB+HG6xH4DC+mjNVzg7N
jmjFu1PET+79ARV8a/bZAd5/xXqE9QXODsNf/ChU8X6Yzj6js/3wEp8PfXgF
nuP3k59p7wU+i5h3ePce1OPD7JV41gAX8Q/wBH9EDie5fzdswjfCHnwntOHr
YFd2DsrlLuvfeE+2j0I3PtUUMQkf4RPsZ29p4RoexCvZsR5DL76W+GugEebC
leTcAi4n10C1GIN/+An2euAUnE6OoVif4UuTc1Au6sEx/GryXdP8jOI3YQnr
Gdbn8QfJteuFCdUfFuMLYAzfzh0rCtdgB/6ave88G4cp/AwM1XJSboPwK9xj
9foNfOXsN3iLn0uOrR5cSs5JuSmmYr9PPqsY79Rb9bjkO6vqLTmMF57BAfxW
8uzpm27jXdm9O0u9/uAry57VQVhWNnLN5Cq8k3eO1L5B36IZ16xrBvZm96Sx
dkZnNQOahXmwRfOePMutrJ/hdWX3SjMXZc+8Zl8z3Ya3cKa51nP1voG95sI1
LsrOWblr5meya6xaa0Ynk2MolmbqYXLP1Xvdqbs1U5ot1agPf5o9+4qxTbXJ
zl3/2Xb8enKvVeNr+H9Md4gw
            "]], 
           PolygonBox[{{5249, 5248, 5258, 256, 5262}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9485991400407882, 0.83391974912259, 0.27749986542480926`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVVtLlFEUPVMwD716zoMFQvQzhB40GgtDlIrKtJqJxmpMHSciNcdpxskL
REk1CZnY/dkuNg/54ID2V0pUMivpAq3FXkM9bPa57r32Wvt83954T9uVHc65
OdhOWGvUuSOwZthExLlRWAH2Mzg3sMu5X/B5zIdhN2BvvHNZ+D3e1rl2EzYe
sfsFzW9FbH9ca3nFzmrO/TGtDyB3FjYIe4e4OawtwJ9H7jjWEvCJqI2TUbuf
FaZXONcC/xJ+UhgOw2Zwrhv2GDai3EXYIe1PaDwhjMRzUJg4b9L+LO5PK842
+NqCfXUWuwuWgl33tp6BvwZbwzgNvwn/HfYDdhzzD/DHvMXi/TSsFjl2R+zM
W29Y5+CHsJeLmgZFjUdhw+KKnBFvTJjHNCZuxh3SXdY9Ir5Y66S4yGm9KA0K
4nNcsapxZlX7C29r32qc61P+QdXAWri2IO2OQq/uYFjbvfGUkHa/g9XTE6yO
AvVRbRw3Ri0GcZUwfu0N1xP1W1WfrO4Rwx1vHN71lo95U8F6lxz0wh9Qjkbl
4f08bN2ZXtQqhnkZflH6plRXQXeZ74/ws44W9RL7JK+YzF3B/Y96W9XaqF9f
sF7KBNMnLfyj0oU1Z3TmKnxnsLd5NhiWXuG5FGx8UZ57l9mPwXwyGOdJ7Y0o
P3PGxEED7B642oect73F7ZWu5Koo3M+99dWXGoszJMxV7fuUj3nfe+ODWj+K
2jthX/PdFMQ382b0Xoa99VdavZrW2znt/+nUILzE3RQ1nhi7pO8W15qVa106
1uP+A/j98J+1vuEMF/HFpTv3PslTrxXYBdTyEPv98Cf0Zvl2l9QXnLcpfr3e
Ms/ze/MU81Wsz3vDV5Su5I4cPvPGNTnPyddF7BvA+hiftXRId+o/pXPUaka5
Svpu1OnbQV6Jh1x14Nwyxie98TSpHm3XGzgVrD9bxduWuPmq+qt8rGu8pm9Y
rb5RMd1rEucbOrstrYlnXjz0e8vZqPPkcFl5kurZlDQuK/aMeqf6zejSvCJu
FqVDWVpkveUeED88z7fbIp1Ze6c4ITcN4qqs+laEaVU9wNqnxTO1TegfFIc/
F4y3M8HqXtX5ijAtKUZFce9LuylhK/33LjbF14rO8+5f+tAQTg==
            "]], 
           PolygonBox[CompressedData["
1:eJwtks1LlFEUxq8Rs4gWRecuMhDE9bgKchUuJKdFhIOC6VjNkGlNzofSVEOT
ykTbdOHXqu90K1nUok1g+C/k3iBEgiipQPD3cN7FD573nHvfc89zTnuhnC0d
CSGchaPQZSGcgxNwEs7DIvFmKoRSDOER37/5/gvT6CvwFf0FhtDr0GjhHLxD
3+XOCnefQQ09T6yVXBs8RQ8R6yGXgRy6Suxn8BoPzO/obv1YCP/Rleh6ltg/
dI4ze5z9ARX0AHxGf4Ju8zM6+wQO0A+Jnab2PvkG+jqxS+T6II++Fl1vkc+T
v6OeVR+K6O+nQtiBNLlO2EZ/S2LKTXJmibPLcBNdjl5bPQ6jV7lzmfoX4Tj6
IxTJjcEo+YJI+Zk1ci/NvZyGjaRmOpmRZiXP5J16GInes3rXzLLmParXX3Af
XTefnWYwh+6XPy3+Zr19ithu8BlUkx3QLpSgDH/oMcP5XnjD9xnzt83Ae/OZ
arYdsGDumbyrwO3oO6Jd0YwG0bei5+TBePQaqtWEx9ot6m0mHsvrWfN/a4Y1
9Gvzt1yA5+Yeykt5eCN6z+pdO3LP3HN5rx7eol+Yv10efDDfIe2Sdvqq+c5r
97UDE/In+my109XoO6JdkWev0Ie6/XSS
            "]], 
           PolygonBox[{{5252, 5251, 5238, 281, 5244}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8942421947648584, 0.6126603314377329, 0.23346543376182538`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlMtLlVEUxc8tkKgm9Z0PokEQTZoIPaYRznug1255JXzfqFt5nUQGNssr
aHCVdN6g11/QFRNU0L8lCaP3vLXYv6DBYp9zvn32Y619vrMTrer0oZTSE+Gw
MFhJaUioC/3CdeGacEu4WYnvNeGMfG/LjspOCc2e8Pe3AeFAZ/vC5xT7KrF8
7xx371TCen88R/z3OXyd54bQUNxxYUxo9USuBecsU7qnfUP2ue780Nmc7Kps
V1gTqtqvy/blOPsofBKe4j8r+1j3V7SeLqOO8ynqeim7JCynqLufvoboxT6O
cUCPwylqrMFhFd9/ffqu87u+V3BS43uTvtxflb6d8x2cmJuHqu+Zvj8qw2fg
vxqcf0u4JL9F2cuyx4S61kdlR3JoMZNDx0H0Pa39vM4vyu4SZ094nUPzNzl6
6HVsUKcvr2v0bI1GmYG3Oer/U6T0gXwTZfjY1zyNc8f6NbHeuz9ra+4b+Dru
/TK4eVBG/jFmogkn5sZcWLteMAQ//Tn4viK7gf7WoZ2i90V6qNNTab5kixx8
7MPJzyLify1iJjpouUK9y8TqMDdt9kvMlv2u5vBbZT6X+d5hJlZZrxHX338X
0c/3Ivgw59b1JPpa5xn0vUvNu8zDkRw9/SpivszlJNax3OewfHYckxlwr9t8
r+OzRUyf72D3mAXrYI1neVN+iy3WJ2Q34Xwbu8W6wftd94xRwzDv1/p0qXUe
Ltc5c7w+3nUtRy8j+E7hu4De5vQCNXTJ38ZvEt0W0GCJdZv34LynqGuTmr8U
8Y84KCL/GnFf0K/7nmPts2/4+16L2fa8bsCD6xnkv+o38xd9tbB6
            "]], 
           PolygonBox[CompressedData["
1:eJwtkksrhGEUx89Ikyy9z0gWShZsXBobl/IFXGLMYHIpM3KZMGUjH8BGSpJv
4PYJNEnJAt+BPcqIcVv7/Tuz+PX+z3ne51yf1lwxtVljZu1QC43BLM93ARLo
esiiM/AXmb3AM3Th74YMlDi7hin0esJsJ262jz2LPQ936FfFRA/CsfmdFDoK
nks5GtBbUEZXYBu9QrwC8YqwmvCYin0IG9iT2DfoK0ijv6ktie6EH/Rc8NyK
qdgVfCMxs1E4xf6M/N8O+EIPBY+tGlXrE77Has/q/QHuqz6dvUd+tw0+0BPc
uUQfwTg6R41pci1Sfx6dxXdrPhPNZjp4r+pBvZQjj9UCb+gmfLvmO9Fu1KN6
VQ7lKsFy3GekWSmHcsm3hO7lfM88RjN6AA7MfUn0CQzHfCaajXaoXarGmeqO
tes+6IffyGc3BmfB34TehmZeh90TvHflUK7z4P9qBhfotYTvUm+kgP4HIsRU
nA==
            "]], 
           PolygonBox[{{5177, 5176, 5137, 241, 5207}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNkk1OAkEQhTu6MS6d1hiU8BNmCD8B1JWewmEMkAAJwwH0ELLQxbjwLp7B
Q3gAF2o0alz7yv5IXLy86q5XVa96pra8Gl5uOOdSYVM4ErrCQOh75yri58i5
TPGD4rEPsPhUfE6c+gCLL8R7wlLxvg9nu7ceK/GNcCvcC4ULuWvuLX8m3Z15
8CFvOjtP8VmgLehzjN7qMvHEPAglH/IncEGfmTBHZz1H9E2Jh/gxLzlvkdFz
l71sP6td0G/Hh56RD7ULes/J52DJXcac8b99rO5Jb10SP4q3fJj5EwXtCP0A
L0fskHE/gW1ehXctqJuSs15Wu43PHK9NIRE6+Pr7/kLVBT/W70CoCYdCW+ih
ibmvghraKryub3CXUtfD+4CZMfkG5z7aGR5z/LXJ9antsF/BG35H4W2+ojDD
9C10pu/yFlN6t/C3/rdSzi+qL4tfxXX2SuA675Dgez0jxv+Kb52T66BtUpuw
f4t5MbFpP6Pg8QNuUv8ehfgtCh5i+rSYaZ7L+LIZvyzfUtM=
            "]], 
           
           PolygonBox[{{5144, 98, 132, 5169}, {5130, 84, 88, 5131}, {5107, 49,
             84, 5128}, {5169, 132, 137, 5146}, {5177, 181, 31, 5167}, {5168, 
            142, 146, 5180}, {5095, 31, 26, 5083}, {5098, 34, 39, 5103}, {
            5139, 93, 98, 5141}, {5101, 39, 44, 5106}, {5171, 137, 142, 
            5170}, {5131, 88, 93, 5138}, {5104, 44, 49, 5108}, {5180, 146, 
            181, 5200}, {5100, 29, 34, 5098}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5063, 5083, 5095, 5167, 5177, 5207, 5203, 5204, 5201, 
            5200, 5180, 5168, 5178, 5170, 5171, 5146, 5169, 5144, 5142, 5141, 
            5139, 5138, 5131, 5130, 5110, 5128, 5107, 5108, 5104, 5106, 5101, 
            5103, 5098, 5100, 5099}]}, "0.019`"], 
         Annotation[#, 0.019, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5280, 5284, 5105, 5285, 5109, 5286, 5132, 5287, 5288, 
            5474, 5475, 5476, 5477, 5304, 5479, 5480, 5481, 5482, 5483, 5484, 
            5211, 5485, 5486, 5182, 5179, 5202, 5184, 5205, 5206, 5208, 5210, 
            5209, 5213, 5214, 5232, 5212, 5234, 5239, 5240, 5245, 5244, 5252, 
            5231, 5137, 5176, 5166, 5094, 5082, 5062}]}, "0.0171`"], 
         Annotation[#, 0.0171, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5297, 5299, 5282, 5300, 5147, 5301, 5281, 5302, 5303, 
            5460, 5490, 5478, 5491, 5489, 5492, 5493, 5494, 5626, 5627, 5488, 
            5625, 5629, 5628, 5487, 5467, 5466, 5468, 5469, 5470, 5472, 5473, 
            5471, 5217, 5283, 5298, 5235, 5233, 5241, 5236, 5246, 5247, 5242, 
            5264, 5265, 5263, 5269, 5266, 5268, 5262, 5249, 5238, 5251, 5230, 
            5136, 5175, 5165, 5093, 5081, 5061}]}, "0.0152`"], 
         Annotation[#, 0.0152, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5311, 5312, 5314, 5313, 5315, 5309, 5317, 5316, 5318, 
            5495, 5523, 5497, 5496, 5498, 5383, 5499, 5500, 5677, 5680, 5682, 
            5679, 5683, 5681, 5684, 5678, 5685, 5675, 5522, 5630, 5631, 5633, 
            5634, 5632, 5635, 5636, 5553, 5461, 5637, 5638, 5462, 5463, 5464, 
            5465, 5459, 5453, 5445, 5454, 5455, 5444, 5271, 5272, 5270, 5254, 
            5253, 5257, 5259, 5256, 5260, 5258, 5248, 5237, 5250, 5229, 5135, 
            5174, 5164, 5092, 5080, 5060}]}, "0.0133`"], 
         Annotation[#, 0.0133, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwNzjkyAwAYgNGfRmKJzGRBBKOmjdzAPoMUWibCoKCznsEVrLEmwR2U9DlA
LhEqr3jztd909bhy1BMRm4zmIrKMkaNAnnGKTNDkmwY/tHjng09O8hGnnHHO
BZfMUeaGa265454HZqnzxCPPvPDKG01a9I5E/OkvDbr0kyTBAH0MkmKYNFNM
MsSGzwrrzLPIEisssMoyV9mIbXbYZYs9DqhxyD5V1khRYoZOJqLNF//Cxyu7

            "]]}, "0.0114`"], Annotation[#, 0.0114, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0bkuJmAUBuBPMDQKsQuJdQqxr431x2AKhdZSaBSEhitQ2PdrsF6DSmVX
YZhuWstYCoX1UTx5k5OcnOQ9uYNjPaNRIYRJzpJDOOaUQ07Y5Yh9Drjgir9c
c84fLrllOyWETXbYIo11NjjhlNzUEArIo5B8fjLHAstMsMISq8yzxiJTTDPO
DLMUp4VQQhmllPNsXimrqKaWGiqoI4ZYfhBHL330M0ArbcQTaCeaX0QR4cmN
FvkhP3nhnVfeuOGOe2554JH/5JBICkkkk0oGmWSTTtb3jt4aSKCFZpqoJ0Ij
I/ofYpgmWmkgQhu/6aSLDrpJoJoi/iX5L3t8AZfOSAw=
            "]]}, "0.0095`"], Annotation[#, 0.0095, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwN0McuJmAUgOHPSo3RRSLKNRijtwhGl1la6vUvuguQuAIXQywwg0Rf2Njo
dYnB0rN48p7kbE5O6UD0TyQhhLBKam4IySSRRgo/yCCTLNLJZoN/rLPLDtvs
sc9fInkhTBMjyhRxZpjlkDWOOeKAE045oyY/hDqqqaWSeqpooJEhRuhnjFHG
mWCSKYaZJc4c8ywwzSKDzLDEMjGiROimkw7SaaeQ37Tx4c53eszF9FJCH2kU
cWufqY96xwUPvPDEPc/ccM0OV0zy4Y+X+qXvfPKfV1Z4o5knKijnF2VU85NK
qujOCaGVLlropIAicsinkCY2s0NI1Gs9Z4tvz1FMvw==
            "]]}, "0.0076`"], Annotation[#, 0.0076, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0rlOlUEYBuABhcQQo2E7IMFw2FdFKrgEEEEOslUsBQEKvARvQqKohNJO
2ewsaKFE3ILKJiD7IlQU8PzFk/ebmcxkMvPFB54nRpNCCO8JWSEkcZUZwk15
g1RSODZ3yhkn/OecCw5ZZZ0Ntlhjm7/8Y4dNdtmLamfuR+tyizUW2GadZFbZ
YJGG7BDqaSdBG6008pinNNPCE5oYYpi3vGSCd4wwxjiv6eANr5hijk/M8pEZ
pvlAVSyESsopoYIySikmThGFDJCgjy6a6aWfHrrpoJ1OnnGbNvLJ4h655JFB
DjHukk0m6Vy4W5q8w2/1V/7wk1/8YIVBvvONPL6wzBIxjrz1ITtc+p99+YID
9qI+YJdH1FBLNQ+pYtKeB7KO+1QYxymnhDJKKaCYIgrJ51bUHxkhfCY16iG5
zDzX3mphkw==
            "]]}, "0.0057`"], Annotation[#, 0.0057, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0bkuBFAUBuCLKCitpX19BYl9q0Xs+xIdtTBjF9F7FYaZscXeegCtSlQY
xvBN8eXPOTc5ufeeqrmVgeWcEMIqHyUhfPLGFym+SfNLhkRpCOckOSLGBZdc
0VoWQg/dtNFLO30U0UEXW3SyzzabRNghyi57FJabL9dJUKC+kudckiTOGcec
EuOWJ/q555EH7hjmhg0GOeGaeSaYZo5ZZphiknHGGGKUERZp9u6l7B38z4J8
Vx9yQAs7rDnbkptEiVBBHbXUU0MT1TRSRQOVZIrthDSf/JBrZh6BnOyu9P5I
8UqcfP0X+cwF/yXqTG8=
            "]]}, "0.0038`"], Annotation[#, 0.0038, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0ElKA0EUgOESvIHDVlw5HMHhEh7BpQu9g4gizihqEhPHjbM4EoRsnU3S
iXN3juANBL9efPyPWhRVr3N4bGi0KYQwQtQaQpUKNerEJDQosdEWwjZb5Cmw
wy57NOhqD6GbxNyjsW7Sa/7QQR2gnz5+nH3zxSfvvFGnRkSVCjnKZChy5003
eqvXuqyXesUF50yTZYJ11lhliRUWWWCeOWaYZZIpxtO6t8gZp5xwzBGHHLBP
gXy6J3Jk6SDDX4s/UOaZJ15JiHnhkXuqPPBLc7p/jSjxD/DbUMg=
            "]]}, "0.0019`"], Annotation[#, 0.0019, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      DiskBox[{0, 0}, 300]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0., 1000.}, {0., 1000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.3974197120199049, 0.5186467124812861, 0.9465442105188236}}, {{
              0.5835525325461455, 0.6727932605197923, 0.9603585394668444}}, {{
              0.7781517161616537, 0.8266173019283513, 0.9785225488919123}}, {{
              0.9171915282845634, 0.9368076444260476, 0.9919637408259666}}, {{
              0.9801005842228644, 0.9846796288124907, 0.9185686996985535}}, {{
              0.9951843813322833, 0.9922766321722138, 0.7294707939530795}}, {{
              0.9900633536919983, 0.978143500146916, 0.4158984347819603}}, {{
              0.9485991400407882, 0.8339197491225899, 
              0.27749986542480926`}}, {{0.8942421947648584, 
              0.6126603314377328, 0.23346543376182535`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545455}, {
                    Rational[
                    15, 2], -92.04545454545455}}, {{-7.5, \
-92.04545454545455}, {7.5, -92.04545454545455}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.5909090909091}, {
                    Rational[
                    15, 2], -71.5909090909091}}, {{-7.5, -71.5909090909091}, {
                  7.5, -71.5909090909091}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.13636363636363}, {
                    Rational[
                    15, 2], -51.13636363636363}}, {{-7.5, \
-51.13636363636363}, {7.5, -51.13636363636363}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.681818181818187`}, {
                    Rational[
                    15, 2], -30.681818181818187`}}, {{-7.5, \
-30.681818181818187`}, {7.5, -30.681818181818187`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.22727272727272}, {
                    Rational[
                    15, 2], -10.22727272727272}}, {{-7.5, \
-10.22727272727272}, {7.5, -10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.227272727272734`}, {
                    Rational[15, 2], 10.227272727272734`}}, {{-7.5, 
                  10.227272727272734`}, {7.5, 10.227272727272734`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.681818181818173`}, {
                    Rational[15, 2], 30.681818181818173`}}, {{-7.5, 
                  30.681818181818173`}, {7.5, 30.681818181818173`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.13636363636364}, {
                    Rational[15, 2], 51.13636363636364}}, {{-7.5, 
                  51.13636363636364}, {7.5, 51.13636363636364}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.59090909090908}, {
                    Rational[15, 2], 71.59090909090908}}, {{-7.5, 
                  71.59090909090908}, {7.5, 71.59090909090908}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.04545454545452}, {
                    Rational[15, 2], 92.04545454545452}}, {{-7.5, 
                  92.04545454545452}, {7.5, 92.04545454545452}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -71.5909090909091}, 
                    Offset[{4., 0}, {7.5, -71.5909090909091}]}, {{
                    7.5, -30.681818181818183`}, 
                    Offset[{4., 0}, {7.5, -30.681818181818183`}]}, {{7.5, 
                    10.227272727272734`}, 
                    Offset[{4., 0}, {7.5, 10.227272727272734`}]}, {{7.5, 
                    51.13636363636363}, 
                    Offset[{4., 0}, {7.5, 51.13636363636363}]}, {{7.5, 
                    92.04545454545453}, 
                    Offset[{4., 0}, {7.5, 92.04545454545453}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0038\"", 0.0038, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.5909090909091}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0076\"", 0.0076, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -30.681818181818183`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0114\"", 0.0114, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.227272727272734`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0152\"", 0.0152, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 51.13636363636363}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"0.0190\"", 0.019, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 4}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 92.04545454545453}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "3.196965331837882`*^-16", ",", "0.021198084874450233`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.0019`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0038`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0057`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0076`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0095`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0114`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0133`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0152`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.0171`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.019`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.69375581627378*^9, 3.6937566210068073`*^9, 
  3.6937570284411116`*^9, 3.6937573593330374`*^9, 3.693757514786929*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VUdiOo9zOat2plAKdlAljt8gvBHV9TvZ5qSgYIan5W7CixAOeRFP4rn3r7C6
EV5Se6rCDxJz3VA6o0DyK2wflxA0N4XBm9ObX+F1NAWxc907uwjvZ9+YU5KC
d00fKs4Q3k/fvE7iTZMOZOYQnoJXg1v4sRQcuEHxphJeZcSWYanjYzwhCQtR
7VWpePSubuprwjPP1/okuzoVy7jzZ3QQnuigUBOPUiqGzXcI1BNeOHfHnmES
L2s+uKCU8GzYQn0eKY/5M93vT/6Xfj9+vTV+PTd+vTh+PTre/+i+TOeNvJzM
mk982WYg64AU0XVerq1iGvHlJVPU1pmSOrk6N985gPhykM6UvlhSJzEhjdtt
iC/LVT3POE7qhN436LzevaxVnaRv5MsaibsQ3usiCeYu0jfk+y4bNBPeyDwx
vS7SN0qXW4QsJ3Uiyj4xp4v0jXmc3AV7ptEYfY3OsxH74MRH+ppJrsSxAsLT
Fb11TZr0NWErT3NNUnd1H7PkNUhfs9ZtnNJLeFfylHdsJn2N01H5dCqpO3oe
6DyHxIaZhiQPUbICS7oJ7yyPaXYEycOI5TLHasKbeeAFXzHJQ2Ta+pxdO4mf
ygfvbCd5+HGG7NTYaIw6o/N+vm+Q2eyOjIkncg4R3s2BrfZMre5gz46S2UB4
gUsUdbzvuSP4FKX+I7k+W5XN8l3d7mi1S7DII9dH9wHGOsuuu2frVlcsHend
7UR4QreU+9yzXHFz8OuKa+T+qYV9eLsmxxUdtxRb5Qiv2mbS57m5rtAr2ueb
Q+4f3afovNCUMr0tJNZZqJS/gPCOhjlS20gc35Grvo7w5ipsyxUkvvTzvWt3
kt/WqhUX7Uhc33smIYPkl+6jDL30dZ2i8TiiPeDwwcdEf+EDLF9VuR2xaMNm
/TqiP3YHNrWh6Y54l8b9vpDor1j7TWIhhyNUpFt3Jf4P/ffur/7b+of+O+1X
/y39Q//9v/K/n7/nyGTxgpyNdXQx4V0Pld8uM8ELpEyYjMUyoJjI9KjxuycU
81qiRwjPlVlT2nHYE5yRT5iKOcn+cPBH8MhHTwbvr08fDGOo+RnhKQSmvJqz
2geT39fuvUZ4EqK5basVfCAy28+zbDcNHdMWX9os74MNpSOrdkynYa2Y7rEg
aZ9/9efzvjD47Dln/qkMLKEcFU466wuZhppV6uKk7r51OplW+mKn21dThz3E
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
tioB+Wmx8So2ttBPb9ncrZaAh2GTY+asdIRhycHAaSsTuPiHs8ZYSmZ/MMWi
uk16DZcpyJ9gvmzXoCX6XH/VXyilYNT+g9rbBW1RTL9ru+8cBXs2zz5+c4Ij
bFddeUM5zc0/PHRg20mpc6a4H1NnJ7qSgmKle5v5L1ri+77LdqeUKUgf4ybQ
c2UzHp8rs1unQMFaEhc0XHOAb3Wj3Ts5Cpe9lxix99H/0N5z7u/Xf7m/nHzQ
vGUZC1uNKJhpd/jy1sVmKCpJPrfdkILG/T2L29dbwVuWuQYGFETdttm/yt8W
L/cW3HuvR0GqX/9YQ31HLj7o8JywSrK+FrTItMLBDLnm7oaC9RRMv5yWGEi3
wuxNntamZE2Re1Iy+4wt+71iL1n/cEr+6OnnyMUH1RDw2XDQPAGGzS2dvTvM
kPFdryXZMgHLHSiPB6ussPuoQYC7dQJcN2Te4P9qC73pgTz6mxPgZy76JHWn
Ixc/UmWXjlPS0wSU7buVuPCmGWg5i0J+NSdAlnl9KWOUNe4oyadGvkrAYsVd
T7qIvRuwtNjT25aAl/p5FQWXHLnqGzjrJzjrMzjrPzjfGzn5VRIDO4TGBLCg
f/PG8VGWFng+aYNg3UsmbuyhTAlbawFbGyGB7E1MHB/vGdslb4E9jff5Xa8z
8HNKTJvjTAtuftXBmr1zglm4eNPjtNQdGyzl+XbErI2J041R5fVnbGDjMPds
ijkTisEJNUk5NqCVGV87f5OBFfnRTSqpNtjBwa8qiBknqx3GwnwZoVJNDQdQ
Ph7QHuZxfPjV4LlkrgOk7y11CLJmQqK1cdpMQQdQp52KFKhhoKhO+Nb4z/Zc
PJ3xNINS10gWDLufvlj62AkPWoxeOXUxUT7hJk37jhOOH1083sGOCaUlJYo2
V5yQ2d6laHuPgaPr9z33P8nN5xH4/5Sn/Bt5f/F5lEb4PGePD1TzR7MQfJ5y
n1/YFbc1b50W6WGiY9aRt9N4XNGzJjhHwoEJ1jPPUXJfXDD34s/UufUMdp+g
RrsLF5/Hof7Eo8IYFk5+5r3+Qscd5TnayeXvmdj0lUe/R9Ud8s8vKjQ5MqFa
FVE7sMid/Xm6HzDgaO1lMn6m+998nvkjfJ7x/Q5vDONY+JbnceZ8jCfO/bxm
7veRiV9ZTQUVfp7wDx1Vtd2ZieVvXmbfdfSEhqOk4rlGBrvv85GJJxef4qyE
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
      "], {{{}, {}, {
         EdgeForm[], 
         RGBColor[
         0.21143660934499303`, 0.3395636606498711, 0.9353523741585402], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNkT1uwlAQhJ9NBJYwEnjB1KlT0pACFzYnyBFyALggNZAyogyEHhJ+mtSZ
p/0ipRjN/s7Osx9fly+LNITwJLSEmVAJU+HDQijEe/HavL8Rd8S50BO6Qlvo
sz8XUnpZ8NkUjvnWnN/Ndwdo9YljLRFqdC/cXXM3od5wq0I/+Xcrw0uBjwH1
Bt0OGjm9HnGNTpxdmedH8c7c3x3POfvPfKeKvOYdP+b1dBjC1dznTfygfKL4
rLjk9kgY47VEL+pOyAvm3vAQvXybz3zhseG/Hcy1PpkdsVvT//M6Y6fhrdHf
Cc2o/QssJyPs
            "]], 
           
           PolygonBox[{{5099, 51, 57, 5098}, {5104, 68, 3, 5102}, {5053, 21, 
            16, 5065}, {5084, 18, 23, 5085}, {5073, 8, 13, 5074}, {5087, 66, 
            56, 5110}, {5100, 57, 62, 5097}, {5105, 16, 66, 5052}, {5074, 13, 
            18, 5083}, {5063, 3, 8, 5064}, {5122, 56, 51, 5124}, {5097, 62, 
            68, 5103}}]}]}, {
         EdgeForm[], 
         RGBColor[0.4185421717618889, 0.5369419254640975, 0.9478901149757251], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlL1PU2EUxt9C7yCDHe7bRKNB0KDO0l6gpbYOsEvUBN1UQKFaK/Rj909g
kQESlZQ/AndddVXj7Ef8WHTU53h+pCZ9et573vP5nHPv5O3W0sOREMITYVS4
GEMYSJ6RHJNMhLzwPPFzlgthTigJ05wvCxXhVjGEQxktF93nWPAYde7NzuJc
kW5RmNHzrHAp57bHhYLwNvXzm9TvZsn1OnW7V5Iq718NBWIl1Fggp9mtRc+5
KjkqbEp3WnJGcl54KvstyZawLmwgH6Gzu45Qpn7rvZrzfhr0Pk19dl9GZ33N
CzX0dfyuFd3vXPS7OXx3E6/HeKnB0xHHc8T9oJ71C+/1dzJ4/yeC57dn46lq
tQoV4ZvsFiR/pK43XQNuLF4CZ4vMd4FzA26y4H7vmIXN5GXqu/FTskRMy/dJ
z3XJr5K/sbE9yrivkjMjbz46tyPRexxj7gvkr8NFg5oifZptxDZFZ89HfKRw
Use3gq7Abq1Hn8V9ybvRZ3Qvet48uUrwPUbdDWop0UsXfqrof6W+Mx8lv8OD
8ZFhNwP6cPoZ7r6kPve9xPfQdvMxdkvakx3prha9sQcSOckp4UDns5KTwjOd
J6LzWmHHdohnca/Lf1/yRtFjt4VeGO7xi8T76XHXZfc76Lr0nPFc5h0x26Zw
J3o+q9di7ZO3TS9N4rXxWxVWOF+Q75rkePR6jSvjw95hi7VLvCrv2jj2f+w9
4Btlu9YkrsW0Wrbpf0Au42uPeBbX3j2LtxHd1mZj9hPweSr6DEy/jY/VsM/Z
6st4x2u8vz3mZj3brNb+6912o0Vvti/mb9/IPvE38T1kFh12rUmcVWJYLwPu
t7DpMZt+GH6zOmH4LTOfZb7JNyUTeDP+2vhYzvPs1RS71qSXFfIf0JfprN6/
BWaR9Q==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkTlOA0EQRcvGDkicdLeEZBYZIbgAEQJMQs5mAsjYLIyAAG7iyIklJASH
YAnZMgQZWw7YJiKF91UTvJk3PVPV1X8qG4dLB3kzG4YCfASzBvczuMQf4B6e
4BlGo9k573ZgCP9mrYpPQQe/hf6s1w3+CCXztTt8kJoj/KJotp68RrWT8Im/
wwDOzd64vAZ39XhBlqlpU3sKteQzaJY6TODbMJMzm4YtPAf75nv24QvUNKlt
wWb0GTXrPHTx1eS956hfwfeiexUa+G50n4U6vpb8LOqp3mPRs1NG4/g1Pa+y
DJVlnrVj84x/eV5MPovOpLP9BT+LZja+LcNJ9j/U+yf4rMq8h49k++mbirKI
PpsyUBZfwbPVngWe/wF8cD0O
            "]], 
           PolygonBox[{{5076, 5075, 5105, 166, 5125}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6900496757322319, 0.7577913183445796, 0.9697413608622854], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNl8tvVVUUxk8l9w4Y6jkjNQZjNHEig2qkgArUueIzGo3h2ZZSWqww0Pic
Gh8E6L3tbXuhvYUSCgEboAkwoiWFBm5pbxG01ACJf4Z+X9bvph18WWfvvdba
67XX3mfNtn1bO55IkuTJhiRZJTos+m8+SR4K5VyS9AqDwl7N7xemme9j7bbG
N4UbwinJ39ZcRXTd6iRpEhqF05qbF1qT4L0uTCE3hezb0t0iXMsH3cu3UcnF
+rjoK9J3VvSMMCb8IVyCnhcmcsHn8RXhKuvvZElyWPQT0TuiC8LdXNg3jtxd
9Fp/DZ5Z5hbYb0uaJH/Lj4+y8Ok0vPbd/nnOMbgp3EDuDnqW5MsD4VF+2e4J
9N+F13JVYYb9auyxwPdYbtl/292hPS+InhMu5uL7svCj7HysfX7LYs22mddz
S9jwj7DA2PmayUfOXhVeE9bybeq4vwxdy7rX1gsboNZ1OotxNYs6ekQtVZk/
Ibp1dfhrP2azsOMX0bEs9hjOIr6O8w7R39F1KIt4OafrqCv7dY58j1ED48TH
c6418x9dESPzlKnrCrmr5+0SPFfgGyP+lSz8HhE9Qw0NZeFDPTaOteP7Mz56
zfO7NJ7S93bRRHlpEfnvqaiPCmfmsyxy/kUWtl7FhiGtn/S5TCIefwm9Qh9j
f2+QznnR9aL3RWvCPeGlNGSfFS2IloR+4QWNj4s+LVpMYm0AXR4PImPZ59FZ
ZG/b7niNCn+isyeJeE7moy+U0NkDTw/2nCUu50XfSMPOjaK7Ofs+46PUg+ti
hl7hPmE99nEOXfPofi+LPL4rujkNG99MI6bznKUivnntPPl0LZyr5ymLOmrh
jNwjht7j0yzO1DPSuVPfk/r+XPT9LGrnwyxq3+dmNh9xLBDnQ9Ttr1nk2jVg
+XIS40n6wgx2XibnF8n7IHmpwVfFpxrfVfpFvd9M0XOs4wg17/5q2odO63Pu
vddh+Cao+6vUn+35OIu1K9hVoAbuU4u2bYg6dGzLoJc110dlBW+RvVupnxbq
ehSe7ZyRpizqpUAe1qRRT8+loa+8Qucw41PsNYpvA8T/ArF0rmfpba6pe+i3
L0eIg+8y96/15PED6sr11UR/c7+7SKxcR9vTkPXd0qbvZtXvHtFu0S+Fo8JO
YZewRTggdAlfCW1Ch7CPNfM0w9/GeIfQynh3GnytnJdmeDYj47XjwglhqCFs
baQuBzUeYL6T/W3H92nwf5uGbL9wTCgJZb57hSLy34hvRPRrn4U09t4l+lMa
74Yf0pAZwZbv0O99+pmr2zHA+Bh7VewvOq27j9p0XjYRC/vZR117rY34dBCL
PQ3LvcS0nfg6F93Mt/O2aIfHMn7DzPuOyofOfcyfzOKeOyX6ehq9p0n0Rfqn
++hG+thbogfJcZGc7cGug8z1oruTtQp9wDXcxftqL32wGft2oMu+b4Juhm+a
91GP40LeuvCtvkcn427y3rnC/y7s6Wb+ALbuZ8712wNPB3H0veue7HN0ghyO
INOFjkWtzeVDV5XY1ngH+P2zyJvPvcl3huN/C5l5xnPIzJKXGajH27h/fQ9P
EoNpdNfQ4T0cb9e+z8EEb4Yab55Z3j0LyExxd01ik++za9BKbjnOBeJovQ/Z
Zxp/JtlzEd/NM9yw7HfdrkW+55Cbxv8qd539b6Tf+G2xKo17qSENvtvILWH7
A+T3k78S58pn7jHvvCXsL63woUC+HqHjITxHqadG9h+nRn1fud8P4dcgddKD
vgHq3PveIgb2sYS+MnVyC5/7saHUsJzj+v+Bc+X7qIA+663fZ163fxVqr4gf
5t3A29T9egAbnZP/AReI/r8=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkj1PlFEQhWfVpdiWeyuIEYyCVFSCSMQF+QFs0CAfGlZElAR+gIBBW9SY
UAGGBNgFVBKgoCJQYSE2wCJGKUg08SdIB8/JbPEk533vzNwzd6YiO5wZumBm
N+ESfI5mP0rMTmAZXRbM5vj/Ea6gT0vN/kM1+gZcg3nzmOvoCXL+kvsH3qI7
YTJptgkP0YGY0uA1VOsu+pDcX5BGN8Fv9DG0oB+QkyN3Fu6j81Cbwi8sodui
n01BJrpHeZ2BCvRlWEYvQRW6BJJFD/JyhocB8xjFLlKjMeVvoLeoDJ6rHtXr
Kv+OdBcxa9E9y7s8Nwf3IC/q+Qnfg3AvYdYKV9Hr0XNrYAXdz79mzlrgGXoh
+pl6zKEfwy61vkMPuhumuWuH76fobfxvwTfYhVHNg1qL8Cr4P50V4LCIdLL4
FmPBY/Mwgi6HDWoPccdF9MvgZzmYQCeCn+nNDD0uzwm/U3c/D96Len6B7sXj
HvX2IRt9B7QLuqML3Rd91upJvTWQc4AuQGPwHdIu/YMP6HfRd1M79lq9Rq+t
mWg2DfA16W+mt+uI/nbyIC+3g9fWzt1Bv49eWz284bsu+O78hFvBZ6bZaQfb
if0Uffe0I1+ixyhWnuvRA5BO+Ez70I+iz0qe+tHnslJ6dw==
            "]], 
           PolygonBox[{{5161, 5160, 5151, 156, 5175}}]}]}, {
         EdgeForm[], 
         RGBColor[0.909955292210085, 0.9310376662026542, 0.9912735421693186], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
qAjd21ltbG1A7/39ND6OfZ2dpO2g/OxU0NtIust7LhmHXOz7PIQc/p3/87zN
+4+d0BlMm91H7+NL2mZuA2cX4V7GuW2K+fWYmEP9s8HbT9vWM16s/8OZM21L
i9BN69wGxuVqdHEPY2AnNsr7834nNpl3Ht8kIcf8qsD1OPV4+XsSdvhvfiuW
hH/9Lr73GOaa+tyNuURhlvc7fsezj/nT86j3Nf02zfbJde+ClzqcPfk8qZT/
NdVgHzRNvy5MYgzOS4KGx3+a/CJwCqoiTFVF21czLkfD53PorX3Vh5mvptD3
9i0uYT/Bft3Z9+blMfb7M/5n4KNZT/ZyXuGxnPsvSaNs6GRdzsaOVcQ7OtuH
NpyNeA1vPfba3OdHP0+ib9v6vSPfTpuCnzgN3p7NnJurZsLz8/DkdjVAht6P
GJeEDfw0if0F2x3zuR69tw2biB56Dm/MGPY+bBn/1KpdFeP7Icb+o8y3XifZ
5tue2r+wzEbB01HOC9zubbTdc11xVehZuirmx2PIpAx9cD8fRD8PoJf7wDlC
PUehdYw6JrLudn4Ve5/eJ92QOmf7PU95LHkcfcF9Cd+b+DwJX/bVJN5L+N3E
wIRze/rebbIueJx/nYTtn59E/Rtp21H4cZt852Elvtpi/GL7yVvRU8vDttPz
y9l/SmX4N1UmxlwR8+NexugP0D+ADA4hkx+Y17cy/j12PsEm7gfPc9L/AEyN
w7o=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlmmw1lMcx899nnvr9vR0697OeaiEDDIqFCp120MxGgot1JAlRPXGMEOW
vOiFpX0npd2IkX1tG9pL0Q2FLFGmRPt+fb7z7cVn5vM/5/zP/5zfOed3/k0G
D+89LBNCeB2KYVUKYUA+hG6lIazBW0M5FTOzIRTwQiGEJypCGAkR/y+G0Jy6
pnAA/wG20OEG+B5fCr3wI/AHfhBaZv3OIXwMfS4qCmFvjRDG4x3gbr53L3TG
T9OmO217QuD5I55H0ddI+BCPyWObAw3w82Ax3g5OUP8a3EDbG2EmfoL62vVC
yMMp/CrI8K2acDV+PPrdTnAKb5Vcl4dr8QrYT92/kPD6MAOfBHXwttCbtn2h
Ei9LrhsLdTWf5G/XgR14O76xialthLZ4E8oOZf2Ni/AmxHhWhWOu2Dej7Ah1
h+Fy/DPeeZG5jYUv8KaUHaPuNFyJn0n+Vhmc1FzpI1fOx+rSjufq6NhW8f4O
fAFls1j/2fCN4gGrc46ZYtcQFmYd48b4m9CG+pawEO8ePZcca9oLPwyts17z
I/hzsJa6hfAsvgcCddV8/0/8muRYa8+1wb+MntskWBY9Jo1N33xLa0NZDe0D
SNApee8Mha74/OSxNYN5+FJYlfOcVmq/EI/JxHYGNMZfoWwXe3Ee39iMz4Fb
aNsD3sZLaFO73DHcwnNfvlmTuZRCf3wJZX1o2wvewbdFn4XVUKWx8n6+3H1k
8U6UbSMEVdAVr05eq3ZqQ/0UnrtyFrvAy9TX0jvUDWO8OXxScl1nmJx8hnSW
dsM4/DHI4sUwDH8puW4PjE1GrjmPip6j5rqhJITB+ITkvo+yRhO11+HrnGO4
PHmOmqti9C4+NznWisFifH39ENbBVqiCqXyjkli0gYl4EW360/cgKNF6Mqc6
5Y5RMb6PNsVZt8lQf1T7Pes9dQyvKDgWw6EMH0Sbfxj7PnhA57PguhFQFz8Z
fbaVU87orGs/0HY/3KdcV3DsFWPFur32XPAZrcTv0BoWec37nd1z2nvHmNtx
WEsfd+WdQ9fj65TP8i7bgH8Fa3OO4Qp8EwzMu81GvAHfHMVYR0OjgsessQ+F
PF6vYNeeTXiL5LVRTmiOn1/wXlbOuBAPBfelmJbit0efzRLog/eOds3pTvw7
WMnajIZv8UuTc41y0sX4bdF7vRYMwIckexH75yH8Vco68+71MA1/OLkuA0OT
y1SnnDwdnw+34jfDnOgcoFygNd+L/wa7Ms5xn+K/ws6My37HlyXvbcVUsd0V
fdechL/wrOJLX4OhJv4LZdsz7mOn1jK5bgjUwkuT/XO4QGclui/lqL/xn6L3
qvpU30/xvJr5r4Gn8fbJuV93WEd8gfZMxnOci8+Ovot6wBvRc9bcb4J5eJfk
3DUCuuMfRN91T8L7ih1ljxf7zmqJX5Gc63XnXKfcHd13T5gRndOV2zXnn/H3
ovvSGVyCfxK91rpTP8ZXwPSM13Ayfn/yWdoNffFuyWPTGC7Bl0fnZr2zUrHV
eMq8pw/gB3UHlbnsMH6P7pMSn7mByi3RuW8zdMDPTb7Ldcc0Ss4Zyh3K8cr1
5xT876Ez0hB/JHlvKcc9ii+j7dKzOUe5R3e07mrd0bqrldOV23XHLdJ5jI6V
/lH0rzIlOje1gvF4v+RcqDFr7NOS/42Uk6fitZPvduWkvO5m3allnrPmfjT5
rlXZoeQco1yjHPUg/kz03tGdqLtxe/S/lP6hfoyOuWKvO6KbYh09thYwBn8+
+i7VP9QLuiuj6y6DcdExVWyVwzpG30G6i3TGt+L/A4OfWUM=
            "]], 
           PolygonBox[{{5113, 5112, 5161, 206, 5188}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9873699391680177, 0.9890451595152867, 0.8589763237430128], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
PO4iQ+sB2jnotglYvzLxwZ1heH9r94ukQ33r2gbw07oy06h/esDj5UmT9lxl
m+5k2+0q7Kj8OynfjsoFT7eGLXWTl/UC9sPGA/atTrqz5O3TsqwTGe/VnuB3
kyjzbuRtVpnzwRrnh3mmkde1MvGoh/Hj2yZzBiH7DT86LhLHpplfmEfo7z0c
Q4pzD2NO1+CvS8CaqpwDFjnPNDPt96rs7/T1B+zj99nPvwo+jg74sjLnjI+d
S77w+XN5ay4fv8oT8g11jhtkn8PvoN/9oFysBdc4N5IHzlaOdeQzRuKnlzo2
/K48/3Uu/dG6qXMj+xX2sjV2GdCrMvWKfnurX3T7lnruZjt2NW0Ty2yuvfPc
I6B7wCj1cIRpG5oO3SfKsm90N31T23DTyrX2sqG8dZc+tDcyjbxuUb6rfbu3
9W8u7d7KsInybKp8PZrIuLnpX9fFmMf4HmGnqtRFx6rE6S1eF/txB/N7WR/p
y6OejavSZqdqz+wPDHEeZN/ucJ+5a8+d+79Fm30Z8dUB3/ruCO+Q/MB5aMAD
AdMC/leW9764j8Ua4W7XCQeKM0i/+W7xzyhL3xq/epo408WZ7rrpXuso0v+P
dXxXlu+vFNOWe+fs2fLk97nyrO8By78iv/D9neVe8q7kmc4l5L0s7h6OoYyX
3yr7N03k/0E6KyyHTOzXF+WdZd2PluWac4EyPWDeVOWbIUwx/8Gw9dkV6Y88
HzK8FLBCH+TmsvRDsOVVZWnvR0VbHhtwXFX6N/g5vJ/Buy/XlOW7FO+K/451
TZeHe9TrdPm50/XqwoC58k79z6tP9ltI4w4gewmvluX9u7ttp2m2MfoeKPDM
OvG1sNeLw26vqE4dLXP9eL849/o8wHLIckRJ+m53qJ/J6hm+SWPv7LSAk7SB
z7UD9rrZ5+b9DvoB/QP7Pz/i5wU0q8j62UcZYLkvAj4uSz1XOE+h75vU+UcR
LilJXMb/T8qyT8yOvDcD/lGe5T+S3mpxSGN/h7My9hzo7/T1x8py7NjU8QGd
YyOLlOFz63vKdMpyv3GZOH8py37D+hP6z5Ql7ifW/aXtuBi7lK8/lyTNj5V3
tbSWiQc96NIvmf/xA14uT/q3WMdc6cH/UtuBdiEPHO6MfVSe923eL095H7MM
fYU+Q7/7Rh6+ls4i+f+PaV+Y/ox13Cmf1MWYcUpZ3itYIu3FAjjLLfuU5bGF
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
upvrCw1XBvjg/ZUBpvUuX+tjgHeQOLRZ0VcaYFn6Rn/7BXcJ4A0e6ZvcLeP+
APcguFPG3YFqdYtO17csNOZ454i2/dZx7I+5UDlq1SvlPtIuym2jXezf0ONO
Az4ddxz6qpMt5K+//Zh3WA9QBnRymHrpIy7vkcyKMfeRgNk1+c7cZr5X+FZd
jE0BqwJ6VeV9oM0DxkVbHV+d42hffQd8CM7yOf/o6TNnEcX4JqZtLp3NTOvp
czfjxby++jBDoo7B3j3aRl9lB+6JVSVPm5u2TZMym0tjF/PwcbgPdnLAXwK6
W08vy3DejAw76TvtKP3Nje9elecdA8yj/v7yjnyU72udPS23jWWneLeNOy/c
U7zDtPWq824fd9Ime+/tDvNvtwzvXt4YcEPAVMvNEOce45Qlj7uQ/yjkvZo3
C1mG+4gnBbSozvs3pQEv6+NwL29C5F0ScEXAxdHGN0eZi+oyTvrFAbOq8p7O
PMf7Datyj22GMs0Spos3xWfy4eFa+eBdUu5IIveqQuKuLCT/U5Shu3ZA29QE
1Aa0Dji8Ks+COAPjfRbeebnMNPIOqcq8C8Vljw9fDT+NNhtclX7blcHLhICJ
AUdE/NCAUVXpFx1suWJ8pHSHS4ezvl99B2W4edTF2IVuf8bOamNdGM9/qs29
xr3kY7i40LzI8ELrG259g6U5xLyirIfK2wh5O9Tno+QJfnbU3rBL7Jj7FDur
u5ZV+e3I1uqzMuDlytTvisrMqzGfvFY+VzhnVsdzXcArrDksV23ZWvMohz9A
/6YP3xE6mFyd3w/mrgN3gbj/w50fzikZF0jHntin3VDbou2P1S/DP+sgfhd5
rLDuDaTV1XzwOBPvJh3S6YfFfrmxaV20327aGn2I+6v0mR7RZhsFdA94tCH8
zoA5DVkf9fINTvrDEbYD575XmPaKukCvlJ0b8FDA643Nmj0Tc/gbjfltF77H
8WBj0iqtyjORN/028srG7HNHSPP+xvyuwH2Neaf46IBrtZ9R2hB9gL6AXV5u
OfKvlj/sgzl8fFXO44drWyNNZ44/TbyjLEf6OMswpvxWlfd2qZ9+TH9+oDG/
WzAzwtmN+S2DWXwzqZB7S20L6ffxbtzqgJ0L+T7CjhH2KeReYu9C3nMDDz/x
C/E5K/y6Ms8IORucF8+PsR4KeBk6rPcKadettdcb+d4s34SJsGch33HbjPMW
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
5nOH5h8Bbyj3MnWxVDm599ZPGcmjHWkHzsGwnV1r83zzl0j7IeD7gJ3lZfvq
HAvfU9a3rOd19Ykusbu31Ac6WBPwc8B3yvmD7cbZGO8TcVZ2i2MM9de5JufM
rcLzSXC+lpdv1NtX6u4H6X5jnHXNauvj3bA1xr8QZ51C3iv+sjH/Y8p/i37n
zC70XhpQFrAq4i9x1z3CHwP6BP4PjXl2xdqJ70K+5PnWi/wHoDLvuR1tndTN
2daRppPPeRc8QOND/3fAfw9W+E+KFxuTz9FN7PsLy72snl9R1i+VabUykca/
Azkzo91+rcywpWmcof1qW/AeYKnxH8SjLUgj73t197P536j3FtImnfHsj7Pw
2jw7pQ7yvzf/F/FLbbvvlec761+jnr5WT6SP8J8s/JvlK3V2tLb2T20JWi28
dwWNUutdY30/K/uP8s56o7j+oK1Gah/Y6wr7zt/VK32m3juK2MIg5xDWs9c4
DuCz4Dcxz5Q535T7/H4h55QPCulr4B8crP8yS5/pfn1O6Fzs+HGR5ZlXS6QH
Xfy3FqaXW/9llmU9wh0d/Nk/VWf/pG92q84zLs66uG/V1XGfkPMs8s617vOc
11pXp+8wT38QXqkHH+wq68ef+l1f8yHnS8q0lMf2zil8V4nvQ3UxraNzzgbK
U6EszOmk8w1y5lrO8tZ1btrAefg9fe9/FZLPWnnFB6YOvjNFHVtaZ1HOjta/
gfRK1W+59beWb6C5/NMGjOkXqttT1W8XaVBP2+q1PHazrp/dm8BXvdT2uUDd
Ubaz/LI23NExdBvbqjie9q3O7zexbwCtC+TjHGkx3/a23Cnyea7x3pYHuJvM
t4q4p8w3lviWEmNx0f8ifwtxmik7dnKeMkOTdwexJ959PdV08vG58Mnw0d6y
PzIevWxfesP+84rPk/QH8S3muG6b7XrzDNef+PPYNP3hT9a9tzq8UNk3da/5
C+e6VfbZrrZBR2Xizjly0Q9Yj6Jv1oSsUXso097mb2d96P6+muxPV6nDPuZv
pw7A41siK70nxxyHT8UcuK91DZD2PtK/VN53st13qF47f/Zr0m5bWid+1pam
0db4H8X83WzHc2x39mrwIfHz8I0PUE7WwPDTX9l7qEt02ldZqffPIcORAUfU
5R7FGPc8R9SuPStrFzppU5NzLGNhvXe28UUbHR8ZY7kPzjjL2SpnSZzznGHI
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
1hPtTe9hSN4G5nVxLLukNs/xWO+xt42edrVdWVv1Vq6+lu8s/e3kaVvbFp7g
h30Q7sieoe3sZl/dWnl6SWu7mrXr1h185n8atB97X9wb5r4vfYz/Uh7kvym5
G8h8SlpZjNf1ETZrk/cyu9mO7DlwPsj4c4nz7cXO3w85hxI+7JzaKcpPxvdr
k33lc+fvCZajPu5xMC/fUp93RbjTQRnGurMc7y4xpL497U/0HcrDJzzzj0nu
+eLDcweEO7XcF2nTJn2Dzm2yrlusA9rcB5lifbeah7zIyn7FRtojfYd11ixl
4w7eg/ourewTLR3/ytRvK5+LY2J3+1Av+0B3+8UW4vfwmTTuSeP/cLeZuZxx
mbPeF9yb4m7g4a4zWCNsKu1iHZva1lPUKfLx70T+e8g/D/lvKv+1fE49TNF/
eka5kG+qZcmjzblL84e+3DPkjG2CbXOx7cr4hz1xlxLd8J9P1nKsy1iT8R0o
vrvEd6PwNfE5yRtel/fkhtTlMyH9aZT3Aka6fmI8PkyckeZxf7N4J7q4ZmMN
d5jrLcodX5e0jrMcY8Fx0mFMII37mKyv9leWgy1/qHUOkyfwKVe860y9x0kf
OueqK/amD7bcQco3XJ5HSPdgefuzfG7m2HWcfG0mb9wdHCQNxjf+Y/kHXn3e
9canGyLOQPtDG8txv3NGXe5NsCfBHMldg6kR3hkw2fF+smN+he9S8U7VAstC
A5x7pINvi4/LnVvG6n0cr2nvGbY/+8Ej5Y808qiTuRka06T3iDwNkueCcg7S
Dg5Uf+uqt4PNX65/tEwa0OL+BGcynO9crS8wTbnXc4weotzY/13yNEW+/2oc
Xk+rS//0JJ9PN36aaafWpY0jK/2loj7nxUvlrbQ+7/e0jLB1fa7pANZKzYV/
RH4z0/C3/65M+Cr4LAv0y5aY11zcFvVJt5l0Wkr7ysCZWJf1VVovcdYIfH9/
dV3eIf7EZ96X+TLgG+PfGMfXYN2Jv/GZZUg/3/HiPHlopozIjS+A7AB8VJjP
/SZwXnLsed4+z34AYwB65P+szJXj7A/YN2t91uDcN2rpmvwi7Z95jTKkcScJ
POqnzCWWIX1CXa5z8fsvss3GWR/z86nWe6ptOk6aLbUj9o8Yo1hLsl+60Ha5
tDbXF6dbDrs4QRs5zfw/m3eCdP/cRDb6N/33JNPH2e7QXySf8Hea+MdbZjPX
tay/6fvH27/IZ/wYZblLLQuv+LysBebr7z+hfS0xDd/k2oBrAibot+C/bKOO
qf8GccDdQ/8GvZE+0TzWGbw/w7szvOPFHhf7ZcR5d4dzlOI7NvgxvGfD+3JT
A66UZ+pnHJpUl2MR9dPWF8vfvvqbV/h8jWXhAVvF72aNeWNt2sMl2iN3mfl/
M+97zXUOx08pvtvA/XneHeBO/19r8x06zm/a1mfZsy2Pb8u7SufL95QmciDb
g9YxWxmnKzfrr6nWRRn2qrmf/4Rpk02/S7rw8D/7H/2Qdx7YD8YHwSc4TB+B
c48pludO/ijTeSeJO2WD5O1ead6kboo6uk7dfWIfP8B25JzrDNvqDGUhnfUk
eZxr8Z4B7wVcqG54V+9uZfirMNX64RMeObe5UT6o+355u09+JmpTU6WDbjg7
/9oxjPHyn46Z12sT2MNEx5xrDSf4jB3xrsM1PjMnMDdMcHy4xvBy865uksa4
+nfrvNQxZYI44DM+MN/cIc3WbdK3/r2Q95PxJ/EFrrXcNfY7+uA8+zl7Ale5
Pl3oGED+H+v6uhxzWMtzzvCg/hn7Say9KIeNM18V5/Ar5ZX6eNeD+Y3/uV/i
fsD/p1mT9TGms0/JGI+/zHtF+Mwd2qQv3L5N2uBl9rOdbR90z34O69gDbLcr
HQcusy8X4xNsJ9IuMb677X2Ddkqf6mJfmaK9XFG7dkyaIK0rtd0B2tBdynmn
4UTbvdZ2oc3vcSyhrSbZDlers+vFwR+ZoQ6hhU7xBeh77IeyF1qsgzL4W7xL
wHtz11vnNep6oniTpUU+8yr/vXmhLucD/FjG/S3cQ2VOf6Mu7wW8pY1jd6Rx
5tVYl/to7IOyT4iPhK9Ubxp7M+zRrLI8IXs3PxbyvGydNumTMA+z98LeyFvi
sI5iD422PFC6g+xvpLPHxjP+AePEANu8OF7s7/ixSh6gyf7hK3XZf9iXQnbu
gKCfSn0S2o/9+KJ+2XNmH7rR9RrrtpfVG/tbS+wfyLHM/rPUdNLwlZaJs8hy
1L1CO/9UGUr1XX63PV6WV3yYZdJsqV/FOAPd5eoNXdIetAV3TtD7a7ZJo+3C
+dSW7uVv5bqHebu3YU9hS9M66mOAR1nWsJw/9ZEGfh3rmX7icxbAmRH3ydg3
w+conu2w99+hSX1bWRc+Q3PXRb2tu6e2x/N18jHReA/r7iNPWxj2kb+frIs6
i7aIHa6nf80ahPsAA9XLQHXTqF3/XZ2Ds554K9Upe4x/2Lx2j7+P/49tsu/B
+h+bHePeL8/FPkN/YY38vOvkRtuG9lrX/tJGGyja0evawAptfZz2/oY8kocv
W6p/z7uGxe8Q8H4n68ZO5i/TjtDRc/q6txbyjudthfQnmCcvcOxiz4I+UfQb
yMMnp/+w904/xe6Qra0+SfGdPL4P0EYfv0Lf/9SoY7uW4Y8W8l55R/HaWq5B
Ghs0SceX6eAaooX0mG/RA322tenUAV/f2m9aKHNF/dr1RivptVXGhb7XOa+Q
72Puo87o94wjn0nvG2l+Xbd2LdJO+dZ3bPyH7fGV/Zlyf1NX2BPrEvaM2KO4
uZD/zbmpkHa1qkk7v+DY8LptTv+9sZD/xrmhkLp+S92/KP4r8va8/L0hLWis
r547yWtBHf8/xE7hQg==
            "]], 
           PolygonBox[CompressedData["
1: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
FOxuq/2js/o/praTZg==
            "]], 
           PolygonBox[{{5195, 5194, 5197, 291, 5217}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9930710468079903, 0.987587994683949, 0.4872043894712005], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
uC/0/y/0zUc5uJtv5vLn48ig2OmDluj8D608lAo=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElszVEUh2/RRp/opveYFkRiLxFtWNkIr5SKbSuGhE3RVolpYeyjfUlX
bMRYXWjVFG0NfRJTqkFLTS2JUGNRpTusfD/H4ku+9/+fe+6595z/m76mYvnG
USGEYhgD+yyEtpwQbmSFkI4hrIQp+GRYhW+HDrwNUvgZKCPBamjCP7K+My+E
h/ABr+NZJsvXHIy+RmtboQYfIeYbsScTIXzFm6PnWgdn8fNQjlfCRbyBmHm5
IUyCU/gmmEO9f6h9B+9r+X2Y34cghV+DBnK3QAYvI+Y3sb90Zvy99szzmlX7
4uhnHeF9SfQ70F3oDLV4UfR3Q5DEW6LXqhrP4Sui16I9lkWPUewgLMBfsEfj
ePaE5/hL3TfeAa/wXGLGwgSYCF941kttffAZf2ceexPe4sOKG01O9r+LD5i/
S48L4Q3eDqcTfge6i87osU3QhT9SP/BSeBB9jdbqTl6bxyi2GU7g3XBBvYAM
Pmjea9WoWpVDuTQTT/CjPJtKr6bBcXwvpOjNLuq5jPeZ34XuoB8/Zt5brdHa
K+az0QhX8SSUZ4ewHorxZ+a5Z8BT3aV5rM7codkyv7sBGMK/m/snGMZ/mLtm
8Cd+xHxWCqnxOt6fz/p874l6s5RnG9i7GkrMZ1KzWQWX9H3wrJi1SdiGV5nn
KoDN+G1y3YJu6IGF6jGzcQ8K8YLofgdmRt9De2nmE+Zn1Fk1Q134/ei9UU/U
m57/uVWzateMa9b1DZfi+1lTTy3tUIdXwNwc/4b0Le2BnQn/hvQtzY4+u6pR
tRbxbG2290C9WGTeC93JEvMz6qzKuQWvMe+1crbiB8y/TdVQT75Z0c+qO6s0
r0m16T8ordzR73I+bOX3bnP/N0P44+izqBnuxf8CJtPDnA==
            "]], 
           PolygonBox[{{5143, 5142, 5114, 241, 5168}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9402028077430584, 0.8006310894739673, 0.2707439793708063], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlctuW1UUho9B8gBREOo5A5h1ygQJFR4glXIpdSqSPAAkFFCcNm5KIb7U
sRvHTuxAW9zSUCX0IUC5NQRakQ55CCZ5CBDi/7M+Cw9+rX32Xnvtf13PhdnF
qRuvJEnyp/Cq0MwlSVt4nE+SkrAgFIXvhb7wLajlYm9O+FLYFn7OdF/yrmQv
F3u2s4POdWHJd4XKa3Hmt6zr/afCT+hvc8e6TfRbkivCaj7WliOWun9HuCtU
0KnmwxfzrAp/n0+Sz+Tfv5IFfY8LY343TZJPpHsjDZtrQkN4Ah+/+7bO7unu
W5JvCm2t35DsZRGLruSabK0IrVz4MPD1KdJ2GvhSw7cviO98PrgtSpaFjtab
ScR9kTxc584Cco77nwrXhM+B92Y5n+V7nrNr8PmROJex7TcuEdMRcrZFzr9L
I++dLO5skZ8n2LG9m/mIe5W9PnrOoXN7WXggf35IImc7vLGN/tZQ3rc4a+Qi
pq6PkjhMSX4t2ZFcz0XOv8mC94L219PIc1fyULLsWhAOWHtvIwveTcmScCw+
70v/tvCxzm+l8WaDXG7w1jhrywnhqjApzOTCH/vluJV5bzkXfvSJoc8OpDOW
j1jM4fsEsenaV3i308CZD2nku0SMe+j6zk2dTTsGadiZhJfzXaRONtKo/14a
nNwjdXyrEJcG/eHvf85HLyxhs4vfTfTa7PVy/8epMhSrLvW/Tm8N4tYiX+7P
DusW98ynTs+6hm6Ri7/EpZIFH/Oawcdp3u7BZxUbd1iv8+Yy+/bxK2zepn5G
0fOe6+oKssC6SL/M0zPuMfOY4v3B/CjAaYf+dA134Wf/DpXz34Rn9LZ73L09
Rx24P1/o+7nwUjhC9/ckZopnSyuL8yP2R6i3A2z/wf5z5Am6/v6VmrtEDd5P
Yo49FB4l0ZPeG1dcTiUn0rhj2/vc9foYvcG999Lg/YHkh2lwH0uDyykcTuFm
jqPYH0fnBK4v4XkCl03emSE2V6npy/TdNPEucG4956YPt3vc77HeZH22Ry+s
ZsH9mPgUqFXn/Z00bL2exnz3nD+XRt7a5K6eRU1UJXd5t89bHd4rMnddQz32
2/joeVEnhw+I5zPi5Ji0mVGeVUvU1WC+lpjZZWx47104m7t7qMEc9typ0bt1
7pjjoPfO5gAzv8E7C7zlWjXnMnZs4zF6Neyv0rO2/UsW/7e1LL438c16S9j0
Xf9b/f9byfjPZnFWwpca+lV0W9RukxnVoO8mh+bwLL20nEW9lrPIiXOzRx0f
ket94u39K+T9I2rIubKtMer5YhrzqUysRtH33HiIDds6JH+7vLPH9z7/u0fU
2gEcisyVRWpgf6jf9oZs7GLnBffcJ6PwNY//ABMWRMw=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkMsuw1EQh6ciTdoQoecES0v3uxeQEGGjPADCRmgrEb2oS+m/LQ0WXfEa
RMKCpMKSLVsbDyER32S6+JLfmTlz+/WsJeOJJhHphWYoOpGHkMgjBOh+uCde
gz70qRfJk7sIi1TRWWd/c1BGF73lanDJew/i5BZhF10hf03uBkro75jlFiBJ
PgPL6CXYQaedae2RQpe99dYe2uuP+nV22+R9wHuOPz+8n2EcfQ77Idv5DN3i
7JYr6EYPwKtYzQy6A6roErShh/Q+MQ/Uiw/mvcMnfMEWsWlmz0KG+SdQQAdw
hO4i3wkjMArH3nJak/bmmXqnO1bQg85215k6u+DNq1xU5A79wsx6YwfdpdXZ
rurBb8w8VC/nYVtvp2aD+hXtgW53drveqLfmia2GzXP1Xj1UL7Xm0NuNemuE
XBSy3m59oj6FniD2Juahehl421U9uEWPOftbh2F0wtkuOlNna89IwyP1atLZ
X+05hf4Hjp1WCg==
            "]], 
           PolygonBox[{{5169, 5168, 5171, 191, 5165}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.866943412365056, 0.48870293635284595`, 0.21068666057304167`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk09LW1EQxa91ayl6n6BghRjUkJial09SEhOTJkbzXGtaKFW0dpMIKujC
7+LKdT9I/deuuxXFM8xPcHE4986bmXvm3Pty2aC2+y6EsC2MCxVhTUiF2SSE
C/GEeF6cF5pjIexr3xb/nA6hJS4rXhWmFD8TT4qLwpXWJfEv5W1qfSTe0f6z
agbiMjmp+ER8LpwKB8r7Ij4UP0WP38KXwTWVhKKwCirEVoRl1gXWFvsbPf8h
uhbr3xO+MYvNlKdmXftMPBKOmc1ybNZPaDbtR8z1HN0Ly9lVvKPYltAN7scp
mofB5xwROyc+Im4x89LOMQ1nnG/xx+h39D5xNu0Z95aRd/ym95B1P7jGHrkl
9NscKeuZxH01PVd4toSH9zp3UXwXvafN1SH3hHPuyPkdXXeBOT7wHuxdDNGy
Rd8K97KB/t6bvkPup2G+06tA/kdhgbc44C3d6NwaPVfRv8AMpsferOXnguu0
eJPz1tkv8p4K9LYedbuL4P9DA24Tq1PbI7bBO3nNbRGzb18Tv9O9xPdrfG/R
o4s3GTU24xwzFPFriX2OdRcv+3jVRkuevGV6vfYu41/KmR2+VfmWghV8/J64
dz8S97ZJ3f/oHv+L7kGN+Aj9ferrzNlFh806z2x5vleo/xN9ruvoNVW05JjF
vGiMeb3d5QvUXm2H
            "]], 
           PolygonBox[CompressedData["
1:eJwtkDsvRFEURvcVlbecM4VHcwvNNJL5JTLJDEYhoR9vEhLdNBJT+C8qJWpa
Kkw86kHlEevLp1i565y7H2fvcm2j3h6IiBkYhLEc0eF7AuP4R4po4nV4xw+4
WyoilmELv+LuEm7gFn5hldh1+MIniDnHT+GH8xvM41V4xdvZtWqct/Fr7ubw
Eh7xi2SfhQf8E1bCb9Lb9shpkr8Iu/hodu/O/yy95N7KUe5Lcm/1eMZHiOni
ZzCN70CjcE3VfiJmofCd/u1n99IONrNn1ux3cA+T2btTzansmqqtHVSzd6hd
agf95Jk1ewO+k5G34LDimqo9RNwwHFX8Tzs+xv8Ag6472w==
            "]], 
           PolygonBox[{{5131, 5130, 5144, 181, 5136}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{5072, 26, 5060}, {5095, 46, 5096}, {5117, 31, 5136}, {
            41, 31, 81}, {46, 41, 81}, {5093, 41, 5094}, {5108, 81, 5109}, {
            5088, 27, 5051}, {5136, 31, 5131}, {41, 36, 31}, {5089, 32, 
            5061}, {5106, 81, 5107}, {5107, 81, 5108}, {5131, 31, 5082}, {31, 
            36, 32}, {5109, 81, 5091}, {32, 26, 31}, {32, 27, 26}}], 
           
           PolygonBox[{{5082, 31, 26, 5072}, {5051, 27, 32, 5089}, {5061, 32, 
            36, 5092}, {5091, 81, 31, 5117}, {5092, 36, 41, 5093}, {5094, 41, 
            46, 5095}, {5096, 46, 81, 5106}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5060, 5072, 5082, 5131, 5136, 5117, 5091, 5109, 5108, 
            5107, 5106, 5096, 5095, 5094, 5093, 5092, 5061, 5089, 5051, 
            5088}]}, "10.8`"], Annotation[#, 10.8, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5229, 5231, 5090, 5235, 5237, 5236, 5238, 5232, 5239, 
            5233, 5240, 5500, 5230, 5234, 5116, 5498, 5499, 5502, 5501, 5118, 
            5115, 5133, 5134, 5135, 5138, 5137, 5145, 5132, 5146, 5162, 5163, 
            5166, 5165, 5169, 5144, 5130, 5081, 5071, 5059}]}, 
          "8.100000000000001`"], 
         Annotation[#, 8.100000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5252, 5253, 5254, 5241, 5255, 5256, 5258, 5257, 5259, 
            5507, 5515, 5514, 5508, 5262, 5511, 5512, 5510, 5513, 5505, 5556, 
            5509, 5555, 5506, 5503, 5504, 5495, 5228, 5496, 5497, 5488, 5170, 
            5167, 5173, 5174, 5191, 5172, 5164, 5190, 5192, 5193, 5171, 5168, 
            5143, 5129, 5080, 5070, 5058}]}, "5.4`"], 
         Annotation[#, 5.4, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5360, 5359, 5358, 5316, 5318, 5320, 5279, 5321, 5322, 
            5325, 5308, 5326, 5328, 5329, 5327, 5323, 5330, 5324, 5288, 5289, 
            5290, 5291, 5292, 5293, 5294, 5296, 5297, 5295, 5446}], 
           LineBox[CompressedData["
1:eJwNxrsuAwAYgNHfJtZi9zBStFQ6dEFVH0DjOngUoco7uFVJLGIxoUXi1qpL
3VeTM5x830CxlJ3tiogcyb6IYYZIM8IoKcbI0EOFLTZZZ40yG5xwwTmn1Lmk
wRXX3NDkgUfuueWOFm2eeOaVN15454NPvvjmh1867LLHIdscsMM+NY5Ypcoy
cyyyxAIl5lnpjcgzxTiTpJmgyDQFZkiRYZC/RES/dtPwZxzzDzWKPp4=
            "]]}, "2.7`"], Annotation[#, 2.7, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0ltTDHAYB+B/TtEeOmxbhNgyXZBv4aoZzRQil26csj6JKXZTTeNLIOVK
qcZg1UyFsr6EPa+IZy+e+b2X7++dN3Xn8Wi6KYTwgqedIUyRYZJpnjFDllle
8orXLPCGRZZ4yzY7fOUb39lljx/kKfCLEkUqlKlRJZoMIUIrcdqIkSBJB+30
kaKfbi4wwEUuMchlsmR4zjRPGp3kLHN85AM5PvGFz2ywSYE8ZYpUKFGlxqGu
ELbkUXmYYxyhmeMETnOKHro5SSddpDjHeXo5yxmStBGllQRxOojRwgnaaSLC
P3vsc8BP/vKH39RZY5V3rDDPe9ZZJs0jJnjAQ+5zj7vcdrsRxrnJLW4wxijX
uM5VhhjmCvWEPrK58RfmHMv8Bw+IWb0=
            "]], 
           LineBox[{5285, 5283, 5286, 5284, 5287}], 
           LineBox[CompressedData["
1:eJwNzkkuw3EABeBfzfZ/DVXFQrAxtIYKbY0XcAALB+A2Ei2ijqExR1zCPNZ0
ALNv8eUl721e9/Lq4koshLBEV0sIKTppopkGGqnlIgqhTtYTo4Z33RuPPPPK
C1WeeOCeA045o8Q2O5TZYpMi62ywxjEnHHHIPntU2OWWO2645opLzvkj+Pcj
f/nimw8+Sdo6SNBOK21ExBljnBFGSZNhiGEW6GGOeWaYpcA0OfJMMkWWCQYY
pJd++vgHfqQ2CA==
            "]]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5260, 5243, 5244, 5246, 5248, 5247, 5245, 5249, 5251, 
            5519, 5522, 5521, 5517, 5516, 5520, 5250, 5518, 5585, 5545, 5547, 
            5543, 5584, 5548, 5546, 5544, 5542, 5541, 5540, 5549, 5554, 5551, 
            5553, 5552, 5539, 5550, 5474, 5473, 5464, 5472, 5469, 5471, 5434, 
            5475, 5478, 5470, 5477, 5468, 5476, 5463, 5187, 5183, 5186, 5185, 
            5184, 5181, 5182, 5179, 5180, 5178, 5176, 5177, 5175, 5161, 5112, 
            5140, 5126, 5077, 5067, 5055}]}, 
          RowBox[{"-", "2.7`"}]], Annotation[#, -2.7, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5224, 5220, 5221, 5222, 5223, 5225, 5226, 5227, 5155, 
            5460, 5462, 5461, 5459, 5457, 5458, 5219, 5456, 5466, 5465, 5467, 
            5148, 5123, 5121, 5120, 5119, 5150, 5159, 5149, 5154, 5157, 5158, 
            5156, 5147, 5152, 5153, 5151, 5160, 5111, 5139, 5125, 5076, 5066, 
            5054}]}, 
          RowBox[{"-", "5.4`"}]], Annotation[#, -5.4, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5086, 5085, 5084, 5083, 5074, 5073, 5064, 5063, 5062, 
            5102, 5104, 5103, 5097, 5100, 5101, 5098, 5099, 5124, 5122, 5110, 
            5087, 5052, 5105, 5075, 5065, 5053}]}, 
          RowBox[{"-", "8.100000000000001`"}]], 
         Annotation[#, -8.100000000000001, "Tooltip"]& ], {}, {}, {}, {}}}], {
      GrayLevel[1], 
      DiskBox[{0, 0}, 300]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0., 1000.}, {0., 1000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.21143660934499303`, 0.33956366064987104`, 
              0.9353523741585402}}, {{0.4185421717618889, 0.5369419254640975, 
              0.9478901149757251}}, {{0.6900496757322319, 0.7577913183445796, 
              0.9697413608622854}}, {{0.909955292210085, 0.9310376662026542, 
              0.9912735421693186}}, {{0.9873699391680177, 0.9890451595152867, 
              0.8589763237430129}}, {{0.9930710468079903, 0.987587994683949, 
              0.4872043894712005}}, {{0.9402028077430585, 0.8006310894739675, 
              0.27074397937080635`}}, {{0.8669434123650559, 
              0.4887029363528457, 0.21068666057304164`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.5}, {
                    Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {
                  7.5, -87.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -62.5}, {
                    Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {
                  7.5, -62.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -37.50000000000001}, {
                    Rational[
                    15, 2], -37.50000000000001}}, {{-7.5, \
-37.50000000000001}, {7.5, -37.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.500000000000014`}, {
                    Rational[
                    15, 2], -12.500000000000014`}}, {{-7.5, \
-12.500000000000014`}, {7.5, -12.500000000000014`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.49999999999999}, {
                    Rational[15, 2], 12.49999999999999}}, {{-7.5, 
                  12.49999999999999}, {7.5, 12.49999999999999}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.499999999999986`}, {
                    Rational[15, 2], 37.499999999999986`}}, {{-7.5, 
                  37.499999999999986`}, {7.5, 37.499999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 62.499999999999986`}, {
                    Rational[15, 2], 62.499999999999986`}}, {{-7.5, 
                  62.499999999999986`}, {7.5, 62.499999999999986`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.49999999999999}, {
                    Rational[15, 2], 87.49999999999999}}, {{-7.5, 
                  87.49999999999999}, {7.5, 87.49999999999999}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{
                    7.5, -12.500000000000014`}, 
                    Offset[{4., 0}, {7.5, -12.500000000000014`}]}, {{7.5, 
                    37.49999999999999}, 
                    Offset[{4., 0}, {7.5, 37.49999999999999}]}, {{7.5, 
                    87.49999999999999}, 
                    Offset[{4., 0}, {7.5, 87.49999999999999}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-5.4\"", -5.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.500000000000014`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"5.4\"", 5.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"10.8\"", 10.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "9.898062091208399`"}], ",", 
                   "11.57262566808633`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "13.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.8`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "8.100000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.4`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.7`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.7`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"8.100000000000001`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"10.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.69375581627378*^9, 3.6937566210068073`*^9, 
  3.6937570284411116`*^9, 3.6937573593330374`*^9, 3.693757520449253*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VUdiOo9zOat2plAKdlAljt8gvBHV9TvZ5qSgYIan5W7CixAOeRFP4rn3r7C6
EV5Se6rCDxJz3VA6o0DyK2wflxA0N4XBm9ObX+F1NAWxc907uwjvZ9+YU5KC
d00fKs4Q3k/fvE7iTZMOZOYQnoJXg1v4sRQcuEHxphJeZcSWYanjYzwhCQtR
7VWpePSubuprwjPP1/okuzoVy7jzZ3QQnuigUBOPUiqGzXcI1BNeOHfHnmES
L2s+uKCU8GzYQn0eKY/5M93vT/6Xfj9+vTV+PTd+vTh+PTre/+i+TOeNvJzM
mk982WYg64AU0XVerq1iGvHlJVPU1pmSOrk6N985gPhykM6UvlhSJzEhjdtt
iC/LVT3POE7qhN436LzevaxVnaRv5MsaibsQ3usiCeYu0jfk+y4bNBPeyDwx
vS7SN0qXW4QsJ3Uiyj4xp4v0jXmc3AV7ptEYfY3OsxH74MRH+ppJrsSxAsLT
Fb11TZr0NWErT3NNUnd1H7PkNUhfs9ZtnNJLeFfylHdsJn2N01H5dCqpO3oe
6DyHxIaZhiQPUbICS7oJ7yyPaXYEycOI5TLHasKbeeAFXzHJQ2Ta+pxdO4mf
ygfvbCd5+HGG7NTYaIw6o/N+vm+Q2eyOjIkncg4R3s2BrfZMre5gz46S2UB4
gUsUdbzvuSP4FKX+I7k+W5XN8l3d7mi1S7DII9dH9wHGOsuuu2frVlcsHend
7UR4QreU+9yzXHFz8OuKa+T+qYV9eLsmxxUdtxRb5Qiv2mbS57m5rtAr2ueb
Q+4f3afovNCUMr0tJNZZqJS/gPCOhjlS20gc35Grvo7w5ipsyxUkvvTzvWt3
kt/WqhUX7Uhc33smIYPkl+6jDL30dZ2i8TiiPeDwwcdEf+EDLF9VuR2xaMNm
/TqiP3YHNrWh6Y54l8b9vpDor1j7TWIhhyNUpFt3Jf4P/ffur/7b+of+O+1X
/y39Q//9v/K/n7/nyGTxgpyNdXQx4V0Pld8uM8ELpEyYjMUyoJjI9KjxuycU
81qiRwjPlVlT2nHYE5yRT5iKOcn+cPBH8MhHTwbvr08fDGOo+RnhKQSmvJqz
2geT39fuvUZ4EqK5basVfCAy28+zbDcNHdMWX9os74MNpSOrdkynYa2Y7rEg
aZ9/9efzvjD47Dln/qkMLKEcFU466wuZhppV6uKk7r51OplW+mKn21dThz3E
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
tioB+Wmx8So2ttBPb9ncrZaAh2GTY+asdIRhycHAaSsTuPiHs8ZYSmZ/MMWi
uk16DZcpyJ9gvmzXoCX6XH/VXyilYNT+g9rbBW1RTL9ru+8cBXs2zz5+c4Ij
bFddeUM5zc0/PHRg20mpc6a4H1NnJ7qSgmKle5v5L1ri+77LdqeUKUgf4ybQ
c2UzHp8rs1unQMFaEhc0XHOAb3Wj3Ts5Cpe9lxix99H/0N5z7u/Xf7m/nHzQ
vGUZC1uNKJhpd/jy1sVmKCpJPrfdkILG/T2L29dbwVuWuQYGFETdttm/yt8W
L/cW3HuvR0GqX/9YQ31HLj7o8JywSrK+FrTItMLBDLnm7oaC9RRMv5yWGEi3
wuxNntamZE2Re1Iy+4wt+71iL1n/cEr+6OnnyMUH1RDw2XDQPAGGzS2dvTvM
kPFdryXZMgHLHSiPB6ussPuoQYC7dQJcN2Te4P9qC73pgTz6mxPgZy76JHWn
Ixc/UmWXjlPS0wSU7buVuPCmGWg5i0J+NSdAlnl9KWOUNe4oyadGvkrAYsVd
T7qIvRuwtNjT25aAl/p5FQWXHLnqGzjrJzjrMzjrPzjfGzn5VRIDO4TGBLCg
f/PG8VGWFng+aYNg3UsmbuyhTAlbawFbGyGB7E1MHB/vGdslb4E9jff5Xa8z
8HNKTJvjTAtuftXBmr1zglm4eNPjtNQdGyzl+XbErI2J041R5fVnbGDjMPds
ijkTisEJNUk5NqCVGV87f5OBFfnRTSqpNtjBwa8qiBknqx3GwnwZoVJNDQdQ
Ph7QHuZxfPjV4LlkrgOk7y11CLJmQqK1cdpMQQdQp52KFKhhoKhO+Nb4z/Zc
PJ3xNINS10gWDLufvlj62AkPWoxeOXUxUT7hJk37jhOOH1083sGOCaUlJYo2
V5yQ2d6laHuPgaPr9z33P8nN5xH4/5Sn/Bt5f/F5lEb4PGePD1TzR7MQfJ5y
n1/YFbc1b50W6WGiY9aRt9N4XNGzJjhHwoEJ1jPPUXJfXDD34s/UufUMdp+g
RrsLF5/Hof7Eo8IYFk5+5r3+Qscd5TnayeXvmdj0lUe/R9Ud8s8vKjQ5MqFa
FVE7sMid/Xm6HzDgaO1lMn6m+998nvkjfJ7x/Q5vDONY+JbnceZ8jCfO/bxm
7veRiV9ZTQUVfp7wDx1Vtd2ZieVvXmbfdfSEhqOk4rlGBrvv85GJJxef4qyE
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
XXHaZ0dHTMaFKIT/GFAbtIawU3nTrbGBHPxMZb+wIu47naZ7apma0XK+TFdH
oHD//v6H+9foH+5f8n1Cvq/I9yH5viXv91d+9Lo7P3I9NiR5WhELhtWzEt4Q
+VOXfmGsmI1dGLQ5ZTrhvyv1jYfYRXXNKRc7rP5X/bXXUA52fekXrcLiK+RH
Xbqfy+Us+bx82loeyhoyQj1z2Vji/aV+CnHentQJnJQkUThpdFzvw1UeXtZ4
L9y7noMOndNrM77zFPKjQxmUyJUEjk/qzV09LpULmp3mt4wKtpzHn3Seiwuu
1xhfCPtQei40n/6CC/599ve5+zn4gAH5xr+5CvmRSq6h3zsNNoh0se4+kT9p
Z23hVStHYeNE0f7xtdGYkfklpbItCheyT61jfovGki7C7xMHjcsmDi7r9Z/v
V/SH/RT4J9n0Ia46bNhdlcxvI3B0S9WitcoaUfI6cd+h0Sjc6Z6WpcSRv9M5
ckQ0vp0UVjsQ96Raj8snp4+OVuCfuupkjyaykbIyeYvOYg7uDfoxbcKIKLT8
mKT3dSEHt90Ldkf242D6hc6zl+dyUHqUpnaznSOvj+8w4SjwTzRfxxDb2Wx0
hV0wouTzZK3HR2He2/Y3DwMIv+tsybAk/ENIpdT6uBLfY6yumYVKNLJ0JjW0
OUQp8EVkvofM15D5FjJfQl77EhCpYCYXfR2ix7LGsNGa3nLxpDMPn0f2zEsm
/PKa1+N8J3M+yj7HLC7YqphfkfmZ5ntqb1KfR4OAgT+GRbLgZP1j2bEPXNhr
ZEQsmsNCJpF3Xm7kQXlnY33od6YC3iLzP378/nnR4mjs+jz7YV4ZEzsHWDzJ
iuDixO+5c74kMbHv3Nnvj3x4KBlikT5xA1MBD5L5pWLJfOGGqdHyPsblekyc
bLrteUCZiyGNT38ktzEQezrO/GM5F5r+DOtXpQwsJeHVf5dvWvsPfBM5/pPv
K/J9SL5vyff5X/HfsDv+D901PmlLNa9rDrRV9X0Cn3yYY6dCxK2a2f1P3ybi
Y2vTPPtF4/nyugrFngcV6mgH/kI+Ao8UjVqmx1WI/wJV6vvTaVzMvnDNOekU
H7VPg9jbnnKx6+HP9Zn6fNBi9QYED+JB6f6Gi66zeHLdxFI7Hm51XdgjuBhJ
iv/1kRdmv1gbjQl96gLtCXzwrnqjq1ZqNOwon3qyBvHxc8o90aou3Pb5stmy
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
4kf43TcmjYdQ4JUxL85HxY+utnT/10pIqbN9MytERfTXcxldM8o4mTYwvleW
ioPVdhJvxDTQc8nRnaxOxei7Y1e4vmmDQ5f6x8yACn9lXRsGn9MwevWn2MeB
CqnWK5T5n0Sf51DF7ZJMReHBQfOVtVR4fq3JOkvIhzt2rlUkvqNBt9IuJlEh
y3J4VeEKFTo5LJUsVGI9VeNu+w4aHP0sr1cxU/HqZ1CkoQgdwpIvjznuN0IK
V9VM8wca0rIt7b7HUSExk7Q3XJgGibflHGVhVDxcHBKyzKYhiuP6ZfEJGhra
XM4cIr4bIh4Ey5TSMPtA7NxzLjpy2BeMT3rT4LajZIafiY6tNxUPVHlSUd1W
tus1sW+VJly3akWFVdqB3TRi//8HGXQ4pzc09/ygwd5XWkBDmvbvd8b5S2wK
K2eQk6s74NlEQ11+warTh7NospSs8XhNw9SxojFjWUWMOGe5bPtMQ5LsK9WV
Om0c+fWNWYHwL8tXYwcLFPejtnGhOImwz2msNPLGR2UczuWurOihIW+66bHp
R0mcmAkJHO/8P3+8o874c5i4f/eeDb2VZVS0RLEwZGkaQY1P1raBsGNiX7rY
8WRLKASpF0/vpsHhuk3P18cXoCZ2u4+NRkVTW3VziJUBQosmJYNfU2E+Heq4
jphnHsWx5mfq03DQvO661HMzRLu6RDePU3FmStxsI7cJTpWfYqQK0XBW696T
qg8X0Jxord4eScMF28LE/4wt4JYh+DXHlYYe0Vo1Wc1LKNGd7h+spiEu57DE
ZK8l9rdy3poneLtRefGJgVACMt6+mNt4gIbF59lRp5vi8W2yp5BMyPfvy6l1
tcWjh4l+rLudCibPC8GHHiaiajHtzm0BGsr+Gvq+MEwA5jbpfU2lIoKmoTND
+A1Fv4ZHiJ+GB6e+p+68kIC3Cr27UjhokB+d+kV6n4BtQ2r8Q0w0BKoO8i2P
JeBS3tKv3G4quqd5VCd8E/H9D9ut4Bkqyms0KHzqiShU0/g7TvipUdeJEGlG
wi+/Uk1/JFgjfJ1/0N92Gtg/fHxzptMSBjseerO9ooGa6R31g2yJ72tTmG8T
/Nw5pW0mIn8Ju8aU1cMJvmn6042hv83wlrvkbhMhH71vNPGl4QLu8z32/tRL
g7bfx48MusYoKpXRfNtNQ+IbC3lV5/MII29M/UL4j3m7lWr2PPHdr6OrMmkF
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
      "], {{{}, {}, {
         EdgeForm[], 
         RGBColor[
         0.21135423633121575`, 0.3394770813896404, 0.9353476831372656], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1kD1uwlAQhF+gTppnGkAylowlfgS+Co5kF0kRcQC4IAeg5wCJlIi/mgQk
msxqP4rRzJvdt3/Zcl2tWiGEqdAWhsJAyIVGeBPehYVQCxVejddJQkjFL4n7
H+Tvo7/v4lbi/rP4rHcpfRHPxCPqGObBvVf6WP9b9HpBf7fSXcmN+Bo97y96
zHJ+pU/Utz4Vczbs1Av+33qm9HxiftujZreGfczfUadkvjl6IoyZ17xv5RXi
n+g3HBE/RM89Rn+bLogPuXOBHuPnzFdRe8FNSryM/IK9MnbrofvEM+KPWa3W
Z/T4F/d/9BxwmxTkeP8o5Cs/
            "]], 
           
           PolygonBox[{{5088, 28, 33, 5089}, {5089, 33, 38, 5091}, {5108, 48, 
            83, 5111}, {5115, 91, 81, 5090}, {5133, 96, 91, 5094}, {5109, 92, 
            96, 5122}, {5075, 31, 26, 5064}, {5096, 43, 48, 5097}, {5113, 87, 
            92, 5112}, {5110, 83, 87, 5113}, {5090, 81, 31, 5121}, {5092, 38, 
            43, 5095}}]}]}, {
         EdgeForm[], 
         RGBColor[0.4184727212585687, 0.5368817709288053, 0.9478856896510661], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlMtOU1EUhvfBhJmjvasjqugAB1StJr6EokBbaJtwq+AAEzsWKZhYEAot
BPsqOPBpvMVLnHp34r+yvhMd/Fn7rL0u/7rsM95qzz4aCSFsCWeEU+Gl8EKo
ZyGUJG8IWQqhL/k2ylbne7rbRt4VqkIlc59G5j4NvtdGQ1gRloVN+UxJ90Vx
ZiRnhTvCZdlfEebxrQW3Lwa/m8v8zmyMk3HZE56Ff7kb8K1jW4VbhTwmLbdx
eSC0hIviM7QckkuSq8K69D/Fr67zr+gxLe+k8LQQwqHkLdl/iJ7/bHI7s/8u
2YS71VDLvIac/xy1Ws3Tmfcg51cHs//ZzmNzTTleye9m8u8a94vWZ2GBOVXp
3Y/o56/R5zlkpg1s6tRkXCaQlzhX6Jv1qkm8Br3uCivUl8/Z+mY87gtjxLF4
b6KfX0f3a+FbhWsZDhP0toi/+X6OrvsUfU5V5lan1gazWiJviRhlcrSwa2Jr
/EaS332LHs/i2v4uYbdIrVV8BsIJfbO9t537E517iVwL5MrrX+T7ccHjbxS8
TyvU0B513s+Fj9Frfx9dt4v+EHmAbpXYPWFH2Od7h/sd5rJP7i66d/Tf5pDb
9ZjjHnZdznnMFnbH5D/C54jvQ6Tdn9Ib69G55LoLyfd3ht19yFuzN3VMHNvF
Pn7W4+vJe2U929D5tvyeJH8fNWKd4HMK7C3YXk8ml2OS5eR35yU7yXf4t2q/
ir4Mtyn+OZsF59eR3C74bMaTc7Wet/lvrVGDSduVdc72Bpr0YEhta+jMzua+
TIwOuUrJpcVoI/PY0/Cy+u3/Yr0uJp9Nn171mNWAfAPy53MaMM8+dgfs0i7o
ofsLmRSjag==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkStPQ0EQRr/bkDqouHtxBQoCU17hZ/BoQhA1CCowJNTT0pIgMJAg+Csg
CHjQ4CHhDZZXwHAmnzi5Z2f3zszO1lrtla2SpCoMQKeQNsrSJnTxkSQdED+C
YbxHbF+O7eKPubSYSUvQZf+P9SF7e/CEi9ganyb8sH6ASXwc7vEa++2yc0bu
KutT/Axm8A/OrOJz8Ia/QF3O8YxPcOZY/qeO3xC7hku4gj6xBr21qDGLTyXf
LWr2qTeY3Os6lJJrRK2o8YoXxE7kO2XJOSP3OVzAaPJsoocxvAJDyT1EL7+w
nLmHHvG73HePed/iX7lnE3f8xt9zzzL+2eH8duHe403ibeaTZxM9TeOfuXuP
GcesO7CQ+U3ibf4BOqs+6Q==
            "]], 
           PolygonBox[{{5143, 181, 5141, 5134, 5135}}]}]}, {
         EdgeForm[], 
         RGBColor[0.6899917252386744, 0.7577460469785724, 0.9697355848986657], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlktvVHUYxs9oMjHjkjPuvBC33hJ3upNb2wiJfARZ4KIoVI3tzDAX5mKh
oaUtF0ug7G2xncJcSi2lpZRPYkCFL+DK58n7m2QWb/7nvP/3+ryXcw5/+8Pp
799IkuStTJK8qfNamiT39bygs/x2kvSz4omWRNdFi6JSPknO6izqfEdy89J7
T+d34p3Jxt0FUcEyltfdCdn861CSrEpnTLwfdfbFeyDaEO3mw9++zj/1vi3q
iVb03swlybrOP0Q1Pa/pnJCNc/ipiKr4ugt/WfRI+lOiQiZ89bDbFXVEW5nw
VRSVoG14N6Q/R86259zGs3G3hU5FcZwX72PldzMJHG6InpKLcyog71hOSHZT
94+TiGtTNJkJ22ex7xjbxDiIrwtGPfIoclcg5qvS64g+Uhw92f5QZ4Xcy9Yh
Lt/dzkZuzqslOiZqCNOnuvs6G7HdJV/n7ZjNHxHNyNYdnbdE34hOcncGed9V
lfOUzrLrKFtboidJxN4lnx75OE/3iDGcwt84NV1Fxr34QRrxv58GbxXdcXQt
/7ve190v1HZN9BCfbe7W4XeoxRHRV6IXsv1S9CwJXDvUaxMMH0EP4ZXJ8bDi
qdN/ZWOh99eyMaJzIRu1qWUivvPMQwc7tndScv9I/osUzIZmZoK8+tTNWO6J
dkUHvPfA99M0znfTqJ97bDuJmWiKao4Fm0XibTAze8jarnu4j/4+eLh2a2Bn
jHfx/QS9TXT68M37RHHs6Pw8Dd4u/D4+XMsdfNiOa3ATW7vwnpHbDu9PmRvH
W2T/FPKBxS7ye8jY1wQ5F3JRg1Ym+vYl+Fm+kgtsPAfP8WEbTfBxfzyRj4uS
q+scpV5fpiFnO9Z7QS47zNc9/P7N/QG+qqJiLvZpKRd2zS8QR5WYi/T/Cr17
lDo6nqPE2+SsDT0fHcxzNvrSuNpnCb8Nal+H773qfTpPXcyfVJ6n3Cv58NcY
2Bnqoxo2beOisBhRjP9qt5f1PKrn/w7FTnL/ew7W2U9t7DUHueZiFzm2n/Ox
U06lsX/usFN+lY1pUT0T8XpXXc7FnFTA6jIyjuOAWTb2LXabMX4N/1USMV7J
hF5TVM3Evixj07Z9P8O9c6jRP1XsNeirKr11BdkGdhvEbF1/M41HY+BHNJuN
70tPdEm5rxoXzhWwcp+4R/wtMc+731i2JLdhbPLUg36bxZd3+zay1ilRZ9tq
01ee5+OZ+C4bu0uZwLpO/MZylJxbYPEcXAcz4NM7bBo71nkFzp6Jy+DSAKcC
+dvuGHcddrTjMabuX9e3Cp4tzgp2KvSy83WsF4m9nQ+9+/nQLeJvEhlj/oDv
yQZ5lrlrkl8LPwX2fptaGMe5NGZyPo2+7oCxazgL5vvk7d0yRh7OZ4Tvwuk0
MD4+1NPT4D1JPFN8M0qDHMj3Nr3cHNojnp3bzJb7q0u9HbNz/SwNnCs6f2G+
PGeLxGydDXqtx/Mq7+vkZ9vT+fgP3MvHLvCe9vfT/1i/ZWNe/X8wyg6yzzPM
sHu4j/0ePX8NusEOqFNb538hH/HX+E88hl3/O7rHimnk2SZv76gT+D+G/1Hi
cp4LYOT/13vQBPNyC7kF+EvkZDqH3AR3y+RpeevNsy/L5DlDTy8hs4y9Rd6X
iOM6dm4N4TMHFjPMhO34W+R6+f/K/1mnyKvBjvDOqNEj7nfHcpNv6Qg6ll/g
f346Dd4INnvUZQPMjnB3ld7oQrPI/sR3wd+Hq2nskNk09oHn3f3doy5davKY
f0rrjRHP/zJYy7U=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkskuhFEQRm+L/AsWJH1/bEyxJaYY4gHQbQqPwMJGzCGG7ibmxLjwErrN
CxIxBImw5hnE9AJWzpeyOMl3q+reGm6V94/0DWc556ogG8ZD57oD57pgCr0G
Z+hLWJfPO9eLfiC2Gb2CLRNYzCq6AdsTvk+IoUthH70HBegZYgaIjUecq+G8
Bxn0Ieyi36LOvcIzvMB9aLmTueREVxBz4ezNMvQGnHM3TcwY/iLOhZAH+XCM
bTGHOiGNnoB4YD1OolPeaolBEl0Fo/iGIIH/MbTcCe7fhVaTaruGm6jlUC7V
rNrXvfWimlTbNqQj1uMOepY3BgObgWZRrpkEljOlWkPrRTNdRn/xZjt322Ce
2A74oPcf6ET3edPf0IOe8xbbCrPeelAvyjmv3rG9E3sLTd7u6K5s8m3CQcRq
3kL/Rm02qiGh3nhjI8dmmEHXYav9n7lmX+Ltr5P4G9HFcOXszyq92eRTzwvc
b/G2K+pJvZ2E9lfKcYpeCm32+sOj0HZOu6cd067Ve+tFOaq97ax2Vzs6jf4D
9PNkUg==
            "]], 
           PolygonBox[{{5175, 191, 5166, 5169, 5170}}]}]}, {
         EdgeForm[], 
         RGBColor[0.90993537570997, 0.9310217853260814, 0.991271642515758], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
joel4x2O4/6+D3Ds+HT6Nd4qeDSvHs+zDca7FplUah0+IF3LKj2ceI7jOitY
W8sZ01Jo+dyzkrXpt1eeO8vaOj2dOShkXiyXOvTX5cvpew20xrPW5tPXCtbQ
HMrGcWfbE3zz4HUwF77mgTeHb69l74VVzMVy5nwZurOU1OvH342T0Md2Sbw5
8NsHv0HwGpmKfs5EV93HCt9hSz7lSkszkY5QfnEm7nJd/yz3lo5p204d9NsE
51oXJadzknj70Iry5srXqfy/lJ7tOJG+z0rCxg7nLGi8Kui5v5EVh+yE06EV
Yc9s11w2mPL7uIccSpuTRfd+0T8piXl+gLoHoOXvM23vhNM5iX7NfzVwOO/K
zvddo3DOS0LXrkLP/a7jKOzpGaqbJJxOSfA1nPv4tuyhjq9aDm2RhdtfLris
OGi43ut6KGPJjdljswx+JbprRf+XyLMlPLaCpnkYlI53K57XP0DfvD7IvbHv
kY8C3/357Zrx/D7C+4XPbfYPFibhi96XBN3m9OP+TuZ8Z71zud8LmB+XmcZL
3AH5bmiw4BjR3tUodNt6XYtts/21bh7Az7G/47uSudx7zEQH69j3ZtOuFvu7
EajBh9iAP+b8MtrkdN99Hce5eAr6Xa3+jhdfLZLQNd/fea+dQT/uz+v9Tez1
Buy1+xgrmiMFI9KxdmZhC9zXaNbaR9j0jbTdSP4j7Lm/x3B3Z10sysRc30ss
dirx2AuwOd5bBoPntXia+B6lulOTmIum2AHPw5HMVRXz5nlye++/pudx/arR
oT2oF+P6GP42sQ/OQA5JEnhNktiPPgLXd6y+z7AcahqMdRp2ZBYwk3n8gL3X
bX0PWMfd4VzuERZlYq/oJzinOM62zdkvrL938w7iBt4m+N3CoMJ4z3c87xra
U2Y6vaDVtzDe9X0O5Mrug95dgjbq70hBdXHg9imM93lDxN+xxaHHBuNtbxRx
kFbFsfdbt4amY/6db1scOnck+MeC04664yhzm7bQaVkc62UIa8Z3y74v9huy
7uKlh+BaQc/C4O2WwljX9zDeG5HJDeC4zc2FwU8r+q0tjDiLYyy9kIFlUQvN
nrTvBb1b6Nflvqvym3DfUR3PXAyi7mZo3ANPubcl9/G+5HpszzDa3YXcB5F/
gHaD+O5K++vgq5a5sK28qDjesBh+jv9gGu2gO5R+7qfsbnRjD/6F3wlchc9w
CvbvEsHF2MoulG0mFuX3mZZfM+bocHSkJfPblu/cHLusCpm3xg+yP2SZ/J6+
bHe/EN0vG0XMy3bb/o3fBF6Jj+PvTeCYD98J+v1o28Lg6VPqLoHfK+D9KsZ1
OWO6CB3021brrc/FPm/7nLyXPcl2+zr8q6vTMZ5qxnIMY2vD+NpSbh6N7/59
Dvd53mfwy+jb/f4cP89zdBzfLqtGjl6LjtX4rt/xmnM5S3ZG3ocj2+bINLfm
qqgfzhs477M3oC89SK/l228I/N7P7y5Nz/ruftswRsvlXni0/p6OL2nfsyvr
4HrWRQ/WRFvm4sjC8GePxkYdQ3o09dXgOLUtawNvQ+AvV9cG+dwgefZIxztZ
z7fvf9vQ1nTPKg7+zJv9ZcvN8vP82G7YnnRhDv+YjrFtZd7PK454m2lsU/77
RrEvj0nHfmYbvg19/1awU/B1o3jX63c0xv+Odt/y7TsP33343uQ4xuM59jye
x1yeDc9nAR0p70T52azF3G8FPPc+A/jcYBrnMt9n0S5XZjzvEcciP8veMVDL
03HmzYzdtvwe5rc9c3ck8m5P+TG08Zx1RebHgue5PAobkpvjNpS1o/wmdMS6
8h3y+Ya9xv17Hnxm8Zv+PvhmF7NObBtOQueuxg547nqib7bjnr9tzJfnognz
4XRXo0Nz4znz+9g/YQdM/3vamqdjGE977Kntqu2I+bbN74297Yueb6dP2wCP
oy/1vRlzrt0ttHFZN2TRizVzC/bbe4T3HtuLrukYv8duXm0zrPsXIZct2LZv
0d2tjMFlXyDbbZRvIf8F+roTWXxD+y/5Hok/aj13jMXxFcdSd1Kfa+u3Ipbh
TnTf+XOwRc3QOduQw9HDZujnd8je83MueM3Q1ypsmOff78W8t5/FejybuvPB
9R2i34D0S0dMx29jM5yD7P/Z9/N7PN/jr6oIP9tvZ/3Gq553WPapnhQsFswT
zEnH++Z5pI4vzaV8Pn6Y33TZL/O7LPvTs3m/VY2dtg4vhm4NcegnkeV74unN
TLyN6kyM3jEX+4a+J7CNmeSYmeVdFP0tgN9L2EesE6OI+diHruZuYSLtTGMi
PJlv+4+TiGcdfJ9Ne8/zOGya+xzMudLny0nEu1zv31iZnvvwnnQROui7YNtd
3wffgF1zvWPvFcyL67qn43doXcGz3jr+67h+b/bS66i3zTF+K2jdS3/1zFUd
ft8obHgP2rhv24NB2ISxyMHy2FEU6UTKqpHVRMbqc3R3aJmPJsTIK7jfmYx8
OmF/bYsd734ZHZrEXBl3PDKbzFi7QrcGHbAudGP923Y7tuDfKtjWfab52ZqJ
t7K+G/a375T9WzT/Js3v3T7JxO/S1gMus069hV69D47r3qXsPcpnc/e8iLtq
099C+Vf06djEa8QqfOdhWu9A812+64viXfwC3vi9Sx9b4NOx388Yx0a+N8Lr
ZvA+YxyONRt/Ijy57ivkYH7WEI9aBg+OrX9K+xy9gdwnLEInvCaGMde2YV5b
o5gXz4/P9VP4TcEo9Gkk68xr3LZnF3vGYOqMk7OJTl03Hzvhte73TX4PuQa7
MZe60fA0irX/LnOzlTFsYexbkNsG5sq4D6NbY1lr9h3sQ3RBx6+A57oGfJuX
WvJz4MF4/m2dfRDPqd9U+X2V99AurM0e6Kr1vwOxdr+BfSoT9zK2q/4Nwgrm
ohNvq/1+oJI3fgnvserRjSaUV0JnBbRm8c7C7y2WZuKexnc0vtNxPMP3OvW8
+3+M9+MzeVdeXhm+bEUlb9N4p1VaGba+rDJs/VD8Xfe7JBNxuBHEwBzTWsf7
db9bf57fFbwGL4s4Y8/hnfvBt+xqM6YiYnz+HcZTyGQlqfeeCt7fWg7P8bbf
7+5d51jkKsY5H56e5428+ViMfJ6i3Ot5GrHUp/mtwzr4fJ43rWspW0t5bkzr
wKnjNwN+6+++PW9L6WMlPKxhPj2va+F3NbKeBh+WRT2yWQWNXPuljGkR9L1W
GzOWcvCWgrsMGrn8fObF5z37Nbb18+Hbsred8m8ObJ/ull4OTMfvrb3Oe2NT
F6P31nfH8m4Fz+dv32X5DO783dS7/Hbq/kj5Fewbd1M2F1udW9s1rKkBpL4n
8xtxv0t3nOga1pHX15X4aB6T15f3Nu9L3l+8F3pfu51xDGS9Xc0avBY8l/Wj
nxraue4a1qlxvOeZB/syz8L7IMY4EDkMoJ8rqP8KW2+Zzmfe/Ab8be5hTGse
srftHsfvtuw71IPrNi+zVn3f9z53uDuTiE0tYv3upHxHEm/VbRf9fv9F9Mnx
y1Xwvhp++8BzDfPbD/5vbzCfLrPPVwtef6Af9QOgU0u7gQ3KllD+B2SSoz0A
GudwVrLPbh/vA+Jvn7LveK+aylsv703+rUF+Ou44H+Q9gmPB+3jrnPsNmVPf
4flO2PfQfh+4k3cjufcju3krZXo/Ks1LR9l+yp+grp77QNN0H7MqwjbNrIi1
Z9kvws7m7iJGcNbw2ekM3uf7nb772Udf/vZvJnyH6fiSY1BuZ952wt/BWGc6
/N6cX7WTO17zZh49T45/Wca539dN4bdnjsc6Tnty8aG7L/ddx55xJmde+0VT
+S2g2zWpDNvdtDLG7Tb74Hc7PHuP9P7uvdp3sLuos79iH+V17M1s7mR2UG8a
O0h3Azsp24eMdsFfPn37t1d1yPzgb7f4zd5M5sJ7hOVkP8B7sH3N7dCcyW/7
jO97Qd9/FSMbj9X3Yy73/dgB7rDKwCthPov4LgJ/GevOtrUx+9+HSehAKbiz
4M+8ZijLnZmKoV9Pve/whrMXe01XV8b+01JpBvruJ8er23dhTdkGrmCvM+8r
+K3abO7GprKPTuM3cP42b9MpW4k8c3Ktp/5R5Op95VHm0DSfgEfbkwnEt/xm
exh3Vr7j8t2Y3+T4jqoRbwz81mAa/ZoP/y7O9KwjY7hHMr++O/K9gO8HjDsO
/LHQHskYxjb4Hkl768Am7lwW8CZ1CXbiQc5aC1nb1q/b8MtsJ35i7RewNvej
o36nfiMxyQeT8LMeSMK2z8Nu38ZvAPsISvCL7B+tZs+y3fU7Jr8V8psh77N+
q2r8OuyB19kC/DT7a68m8Y7/lSTktJzfE9qH9r2XfWr757fxXir3XxKD6M/7
pPeZ/awpryW/UfLbIr8fWorv6PF8n8QYdiXhkzyHX/IKa9lnGvsl9tdeBXJl
9oVnsu7u5/3EPUn4vObtHXDdxvR83nkRWlM4g0zkbGSZWp59kGdOTrXI9l34
eQednImOeu/y2dZn4HewPe7/KvYev4P+f9dAfxk=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlneM1UUUhWffeyywCLzdnXmALM3Ehl2xAFZEhUQF0SgxMSZERYogqEGN
iREBcSkCq4KJBEV6WcouxViQEkE6CkRFI1iwUAwEpSyC38nhj5P93v3dmblz
586dbddncK9BmRDCuyiH7o8hbODvpcUhvJBCyKJXsiEMQzl4IaoqCaESLYHr
oYZZ++xn7HJ+1/BtJaqBF6FR8HBUDffEp0VRCEdY4yG4KHnuoSgDL8H2OAE9
iqrhO7F9QWBTUEf49eS5Xm2EXfEViKc0hKmoHtwE227m2oGawpvKQ9iIPker
0BpsLzG2hv2NhovRp/iuRg3hxcl7U8zz4Q5oPGtXoRvhmcR0H7H1QrPgldhW
4LscLdV+o2OvRTPg57D1KHbOFsB3oE9y3lNX+D98+mYdQ31+n+T3Y3AfdBru
ho6Sq8PoXniacsLc3dAH8DbGjG0cwji0Hf44OfeKaVlyTIqtnBhq4e2MmcfY
mWgbvAJbbYnPTGf3FLYKzqct6gvXYZuRD2EOOgGfR44rm4YwBuXh0oJ5LCqD
jzCmObGXo6PwXPQAa/VEc+CF6OGMbfr2r86fuYegXXBd9N6VkzPwE6hVkWNS
bO1YYw5nPbcshJ34r1IO6xMD+98C70jOxXj0teJVDTBXW/LdDL4ZTYdno/Ph
EvRl1j6N4fKC9zKSNQpwg+TakE8j+Gx0rT6DAr/nRdfCI2i+OLq2dWY6u074
TM15zVvg49h6Z33Gp1RL6G98D6DO8IfRZ6samw7v0ZmWOufKfX9+p2Ln5Gm+
H0PdmWs3/t+pVvj+bN5nqrPVnJpbd7p7dIyKtTf6CN6cnDvV0Fb4huRaX45u
h/coBnz3oh/hMmx7WW+Pzjh5Ta0tn+/hkeoRxDcbDYdfQ7PgauIdkmzTN9lG
wM3RhazVHlXAQ1Evvj2IXoRvTT6rDqhtsk3fdKeeh99IvstacxTcMnmuq1Br
OJ8cq3pCaXJPU2/TGsN0t4n5ILEdQOPg1dhebuQesTa5JlWbyukxuFXy3CPQ
NfDW6Lukmt+i3qb6R3lUek7iXfSe3aiQXIvacwvtLfpu9EAL4PbYuvLtLvnA
V6J74FPU+CVwm+RcdEQXaC/JvU5jLoPXMMdY5pqI1sKjo3N/GE2Cj+OzIO87
9w98KvluL0Sn4Vhw7VeiZvBGxrzPXF3Quug5NfcktBr+HZ2Ez6A/4L1of8Yx
/ABfwZx357yHi5U/5lzDWutRa/habG/m3GOvhy9P3rvGXKS7nRybYlbszQse
Ow21gIsKjnU8CvBPrLkv4xj2wcuQHrh+aGm0j3z1ZuTgidgOFbkG3tJdjO5d
TdDh6B6iXlKLfwn+X2GbnHFONsH9URvGtkb9onOsXGvOCXA/xpdRawU0UO9N
wW/VdFQfHpT8TXd6MLw+OrdaYwP8c/RdPYZ+gWNy79EdTMlzaC71xIbwr9G+
OpPfomNSbHpzn4Rr1FMzfmPHaH9oUcZvwg74puS3Vj2rM3x1cq3rjK5LruFd
595Uva1vJ9dmHaqC30nm02gKfCg6l/of4SDcuOBcqqc1gTtFv23qgeqFk5PH
qqe/p7cp+uwU82L1MpTNuoeegP+Mrj3Z/oIHJL91yrlyPzD6LdMZDYiuGdWO
3rSzyT1NvU018y38TfTbrZzshFvi/1neNVsB35bcG/WGd4EbFPwWyUe+uiO6
K3qjN8Prkv9XUU9Rb/kf4cNYkA==
            "]], 
           PolygonBox[{{5116, 241, 5170, 5144, 5145}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9873697397500713, 0.989045077050841, 0.8589796286144636], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
t2w/2Nf+Kqxo09ey1h/o2nRD+9D3XSMjP/X8lmHqrcK6ZNzo5TjxmmMQehrQ
xqa6Rj/237CdD6vyDIrzHM5PVgYelxhZi7YvT5na6RJGvgnF3BeZUsy14s/m
YX/jLyHzY0FzSeixMuK+bMk49ir+Wpk02mlTHZQZ2X9uSRv8oSXHAvoT+hXy
st9B/jLzwnMz21pP9dLTMPZOm2T8fC364PnOAfrY3rDLSWET0wIOrMm1a0W7
XM9Cn/KX2gFtY6IydjDtV9fHyHFhZa7dqadxnt9xRsx+5rLK3NMsM29H62qo
bXR328Zu5amXx6tSb9TlHrbhnW07u4g/SP9oz4vHeG452nO9wfYD5B8jDmdv
Kz1fxL+r9Y/tgT/AMOez3NF8qTLbcU/bcZmyt1Mf9AtT1WUfbewX9YIdUx7a
0SL9u9j2hyrXrtZ9O+nurg7A310XPe1qecnHnPeJQq5bHrffe6gq+ynqZ1J5
9ve32+f/I2BWwD8F/DcHDA+4LeDWyuxHbgy4Sfc2/aQNE5d7bNyRe0I/d924
4/a48dyhG2Fe8NEh+vtWOrdJ+2Zlu6My73B+UJX3Lu6X3gOVeQ43N2BOQN/o
I7YOeDn81ysXNLgn/Gwbee5Tjpukf7Pj3h2G/2kc4csqUm5kftKyPBdwjW6J
7rOmzdb/nHm5v/x0ZeZ9xHTC9MvcsTst4E/Ye3Wmg/dowP9FG7snoGOU5d5w
76zJuK8i/HXA51V5BsF5AucKb8RacULU85SA9UMHGwd0q03ZHlL3lynL4+rk
aWVA99jwq+G+Vpl3mYlbEvCFbZK41yvzvvOLnn+i86/F+Vyaj0sXHXPG+5Dl
edD6ukb9zBR/hv5XpflKVZ4Pk/8d6+t+6cF/UcBblXkOjrychS80jXjOC8lP
3vfEf7cyz8vfNd8iy4l/ccCnAV8G3Bm8/x3wRlWeE1YH1FSlzplXPF+VfF5r
Q+NV6bysHAuUY1Eb/m/K+x3LQXnmWt758uJsskL3Cv0fV+ZZL7ptiLpsDKip
zfOeb62jonvqpH9uXXwij//IE/uhHA1VmW+e/daX1vHyylyT7BowuDbrGzpL
1c0S9UNdc/eF/J+Is0Tb+E55XjeMbjbWprCt2QHPVmT7fk1c0j6uyvGUtv2c
ZX1S+h9rV1/rkr5cnsvkuVRdfCsesn1vfVAXrLdm1WTZlpvvB/Mi5/fmW2p5
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
qMl1KWvS/0X4/epWeu+Z94Fi0nk43P9K44OAiurss6rM8778OHt+yX7+A/Ef
F943Dvi4Oukhx3PVKfvzuqXwHMvzVowH7wW8XZtx0J8v/oviQYf7tOTlHJx7
gNwH5P41Z9K9bb+MPfT31wVcG3BjRd694xyDdclBxcw3uZj7pZe6h3uV/ivN
Q94bpHO14Ycq8u0f7/4eEfdh4x42PB1bCZgRsH0x820T7i3sjUnzevGu03+T
Z8W3VeT7im1Mu8n0WY6DM4y7zTGGNxDQ3dL465Sdu+icPXKeeav4xE+PMeDq
gOvqk98s6f/gHUXO8m6VJrTvL6aN3BvuNpFn84Ct63Md1951PvNr9oY4Y+ZM
kXn7kJqcRzNXHWwc88wBhpmLsieEHX+irXym+1HAMcHjjwHHBnxck3bMHsgX
4n8ulPKxRnm2JtcKa0X4zdp8sz1MWdhvol3QBrjD9oLnXy8HvKK9vWjb+Ug8
ZBzim6Vdlbu/az94wfMz8clH2ZhP969pLecQyz5A/+97c57HX6cNYFvk2865
/SvOl5CJPVP2Ttf1TJKzSfycTa5X3RpmDGIsYg72jG1qTeO72n5K7W9h1OWr
TZGvc76zvdj7rA/zTZaA+2tTh+SHx3rO2Zi7TYu0qcwzA9aJ8JbhblGb/c1K
+xzOb5B7Hds57ZT2+qT0Z9dm3HO2Z+poN/UzOmjuFTAqoJ97mzsADaE7wtxn
j/wbePbB/QnuOnAXYpz52DPc2ra2le3tVu1/a9sCYd7ZnMhctiK/63KS4WOZ
U+nnnIF3vecZ7iAueSoMb17Md0K9ivlu6MKKfA/EW6Bzzd+rTdxx8jjJON4S
ke+SiqTDu+LLpHOpvKFzkTiXin+ROJfpP9fwudK90PY9wzZ+gfShwZ7Pr/aH
7Nczz2a8v8I+rMTnEsMXGL7Qsv/B8p9n+eDJfYfL7XN4G8x7Zr6nwDcnmBvy
jnBQMd9/DvUdK+8Cq12zs56nTU1xbOT9IXmhwRvn31ryneAvLXm2OcHz1r85
l2Gs500o74Z5dzjNORK477vmZu1dehfKmf7uxXzzsksx333u5BtR3s3wNom3
M7v4LpR8g3zbSdx4z8Kh/2tLyvtTS543j5YHbxzLPP9m34L9D/YEyDfWMkxy
Pge9J22n9CvomLdZ5doj74cPsz6fCXjaMeMmx4L+jOPh7lTM8eN2bf3xgH9V
ZNrl+hnHHtZ9oiLn+czBWXs8bZ7HTP+X4afl+7g8b5T+E+IRP1u6xD2if7Z5
pyv7UxXZ5xFmTHtWuk/oPiv+U+KU0qDPu1buxPz+NkvbhM+lxpE2Q7rPyPsJ
aaLDo7Xfp+TxmDZOm7tC/fIdnUMr8ts9tFPaK9/z4ds7pW/6HGB9QO8o28PR
8oDGBPNMNf5Q8a70PJexmX177klxhnC4NCcr34nSmiK/0jrqSMM3Oq+k7R4v
/6Nsk39oYzPHKueRyjJF+Q5Vrn84L54lzHBOXJrTPKQsJ0nrBPP9wfAR0n/F
8XOB4yvj55r2+8y1iOccg/MMzq/2Zf0fMEr4NOJGcr5Zk3icb3HPjTjuunEv
8cOa1BW4i2syPKkQtAq5d7FKuM0BXQpJf3zApNrk96F5xtUmTWgjC+cmnN9w
HsedWM6mfnGPfH334nHZm3/MvW32uH91r5q0x52/P+XeOfMD9og5S+rmnvuL
NXnvdo46eFc9kIf7qI9Ld7Zzi1c9rwD/OdOI/9h50EfOid423MtxmPGYdXel
c/cO1bl+rtCPWx1QV51rq9rqxO9kHnDBKzOOegeHdSxpxPPOaw3fejEW8maV
9W9HcckDH9bryMCa7kTXdW+p85IO8NMODrUsh1lP2AY2cLhx71iHm1n/W+gS
Hu/ck3OQd7URcIc61xqhrt+VxmDng8w3OJN7vSrvlYzTLrij+bz1Qv1wP411
5nqWudHzeM5mOaOt019j2rPWI3PRFu+1cXbPOVVBP/GcMa9quLN5FxpH2pKq
nJN9WpVnOZxHco6JnzNNziw28KySc5TTCnn+ObqQNsdakvRfzEeez7Whj9Qz
OqT9TYs8BxbyPSXvGDk35Tx0Xd5V8q6ikLK3KC92vYF8f1A29hHnFDPvxGLa
7VPabo3lJ+8K29FjtgnaBnPA5/XPEZ427lnb1HPOE+fVtJ7BzDP+RdOGGfei
eTdUTnTxkun7mD7PPCNrW23qf+oF2xujDWKLvyrzCoF1O30O++IF7x08bjzl
eiva7ieeXVdrG7+fUWIffgORffBazzM7ayerWfct7rl/Kf3SuWet9vaD+qaO
OFteVpX3Tea6xzVHl3js6Gv3vTgz564LZ+a88/+kKs/QP3evmTsIi6ryjTE4
H4lLGHzm9nyH7R/6meMThjZ2Cr2dfP/J28+P29Ag/UNxPtHPmob7MS8oO3sp
A7ybwd7/a6ZzX+MV91neNJ7zgbsN32Xcm7Znzlw5V+VcgHKxl8556ufq4RPL
u0galI37P+gGPi/JizLy7poyVNlH1ru+Yp31hevQp/V/4HrwY9eQ7zkOfuJe
yMfuXTzv2uiJYq71Hinmfsdc12rPi8eY+pp7IawHHy/mWDu9mHzgx54Ley+P
6f9IF/7UxXbWx3+ta8pOX/6b48IRsa46OODw+lwrrufabx3XlHxzjvXdYsd2
3Cedo1Y5zlQafkp90A4mOS4vCt6v1+b3076yjrFH1qZdqnPs+Ng1I3p+wjUi
a8VVHKu6uBZeV7lYn7K+J71gnayq3KuIv65r3zUc5zo6TlUod7Xxndvgry79
VaUJLdodbY77AqvIYy3LjQ5X2Nbm2t6+btP+2Pddoa4ZZ5nDdXI8/WNl6942
eOCsrjyMqWvIC9kYy9gvYR+iizqp1a10rF6k7dMGnrfer61PWtQhtF+13dBW
7rJfpk/ZOfqp7evyXuQbtr1XpPey+G8Yx13Vl22ztM0dIt82rLnrMo77Ls/U
Zjtbav/ztmef5H1NmvOlN9j7r/+2HSN/vfVTpf3Rx6xjWeuqW9Prrf9u9p3c
i6yz3kibY31gc3dWtZ4rdnHsZsy9237gTfupr+wPl9hnUQ7eYp4c8I+mfFfK
+1LeqvKGlDeyvLnlXueadbnHjEu4a7jrB2wUsHHA1KiP8QFTAjasy3OKTcPt
HnBgxHWry7dOFXU51xoTcZMDxgacHPxOCTg+YAFjKftX4V4WaTtH3GUNSbN0
d3UzefaUP3x6uI+DXOzrdHNvZ33P5PAzjyRtQ/OtLR77PUcGr0Pqs8/Y1HTw
RkZ4H+WcETAz4MqAcZZ3VH3KsbW2spWyQOMg+x76oAPUzTjDUw0/6P7wA7V5
lsXe4BkBKxgLGZ9rcw95kXgXRdq5ARcGvG9cica70rlf913zLrSfelc8aJH3
bcPousC+IW0m3E4BNQJ1QVy979SqjCtYR4fVZ/12N73QJm/HNnENxjXWZR2/
Upt2/nsfp40cpJ4K8puvLTQqQ0F69dZpn9q0x27Wc3frH/vEVmp4J92QY8/B
1i96P8x6gd8pAUcHbGt9HWy9HCgecZS5g+3yPPVPPWCHh1n2n2vzDd8vtUnr
aNPBPT3gHG3rEHkcLX1wVljP6OvsiPtzwI51KRu0dhTnR22iWt12kG+F/inq
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
Gc6oa+1/Tpc+afvWtX4zY6zp43RLMnxj33We9KHL3GyMbXV4fd6tQr4xykj4
4oY852Gvg/M+1iucGbKuZb3JunN71yxbFXJ+ta1zHb653sN1AWugLQu5TsLd
otC6ZoIua6gtXUdsIU5vw29FPR3PXLiYdJlLMffi3gf3vLgbyH0U7qVwt3CA
cfSn3Dfc2vR+hrmHCB7fZdxZXHD61uUdH+4BcY+M/pxvNdBv08dz941yb216
D/P2ldfW0ifcR/nRyXnsyzfkuWgP10ukoTfWgLsIfQut68Wt1AFj4VTHR8bD
Kc4vOCflDhdruCniMEfYVprbqfv15HeK9nVyIXHJs8RxljGWM3Xu/Gxs+cnX
1bysJalz6oX1PWt41oxLpINcm4kHDmtK/JtpF30szyvKBw57MWvKYwvrGfzB
rp25b7SV5dhenuCuK+4m4r9s3/KCdUy9/l4H9Xlev7Xjwp72+8MdA4Zp57SB
yY49vR3PtnSMZQwhrpfx2Mog7WiYtkH/P9F5Lv8U2FGbwAa538AahTs6nG9z
t4gzbu5QcXcSe91TWXaz/xjTph0ybo5Q5qHK3U15kbureijZ05bqebj5yNPT
OsVWd9VOkb+X+ci/tzyHybfEc7D45OujftBTX2mQtqNthnY4TDrkRT/D1df2
4pOP8nPPinXMQOeG6Hdb2xR0dlLv8GTeM1gZwGM9Sl30sL5pc72lRTrzE9Zp
5GWfgT0M1mK3FfKeDPdlaPe72A/g38vwION2EYinjndVftJHKAtlG+u6gbGQ
+/MNDXmHfrg44LPW+8kxkr2TNbR7xkHmQ4yTnK/u2JTnmpyVcmbK+Vxf94PZ
F2bfhz0n9p7mey+Quz0Tgl+xIfkfHWkvBbwYcG8h741wf+T9YuZ9r5iA/z/s
cTXmWMl40OT/XuoCjinkf1v458pcebLvdXfAXQH3FTIPY9UDjRmG378C/mxf
c5pj2jH2O3/Qj4z8r4X/bPE/jVp5dmrIe3rz/Y7MS+Ijw/3yfEg/LvdfHgnc
RxuzHMxpmc9y5wZgHL/DeufuH3VP+M5C4k7yLHhyQ/5Dp3dApfd6uN+zqWMe
+/znN2T57jI/c/6/eRf6YtP/Kvwl4CLznW0a+4CXm+c808G7W/nuEvBjn295
V3FRY8bf2kZuynaHerhbvdxqGjjM628xjnkB9YsN1HYOGwp67xQzz13W2QnW
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
ffyL9juv6NK2FjTmvgrjEuNUfefcY6rrnHTPkc9x2kbJRg7RTsClzT0gzlGm
I9fRja3jJXIfr0yT28h4qPhHiX+YdBkz+jhuvqGc0DhbOscpC3o4QnkOtkwv
i79Q/+v2n29Z1iftj7Bx5grsET3TmPOnWvurjvZxZc6hZov3kOtraDxp/HNt
+tYl6naBeq4y/zPiPtrYuof3pPXDPIP3OLy/QVZs4TXlftkw84pFbeJesH98
WXe+5XvbcoPLPIQ65U3km9JcqGwvS5M09gnfUF7SKpxLPau+6AOgS3/7mX0u
6zzWbjvaDmgPvK14sZjt7INiAv4P+R9vMd+2/BLu4mLu/XxSzLZEO/ki3MH+
94H/Pywp5h7WsnA7d049Nofb1Dl12dg553PUVbtwNyrm/0F78q2+Yn4X7ZZw
byjmPwP+Ee41xfy207V8I9F5IPPBW1rKyka2D/nCbXDPkL3DDp1zbl0e7qJI
+w//cQz345b8/+BHLfnvRv499224q/kt2r7h7lDM72NuF+7OxfzW31bF/B4i
30Xcje8iFvN7ef3oB1rym6Fzwt26mN8T3CLcbYv5Tb8Bxfx/Nn0X+wALAu9W
/vsY7u0Be4f/tnD/F/Bd+D8Md3FL/j/w03C/Cqgrj7Er3PkBN/L/ynB/bMnv
JX5BHP6Ivzvcu/gnYvj/L9zPW/J/hJ+Fe1sx+8NbkbmY+1jzOKMs5p3rF4r5
Zoe3e7zzO7U53+OdoZ83PLzf4D/jf2/KN4Sk8d6HMG+IwCfv0eKeIPDmkPc/
7PHwZoh3RfvLZ6wufPGfKo8T5AudU6R7un7eKU2SP7x4UwLenQG3BtwScKw8
4c07FN6QEDfV/1HyX0r2TKc053sf3kUdEu7Bzfm2iT3VA43f17SDxCft5pb8
3/FNLWl/2OGdLZl+kHSeL+Y3xr5pye8F893gh4r5zmiitG5T/qOVnTLc1UYO
3kYC+Hl3NVn+7Pvu15znMJPNc5s0ZjbnO6arLDvl5r3njq4hKBf1d6K65v0Y
bxp4f7OymHtuq9qGaGusYdijYa+G9wB3GeZdxOqdM1zZOb8JA59ZTTmXZm7P
fLpUH9QBe0B3SGsN80LjaddLvMngHRjvwWYq+4nKz5sw0qYL/D/+OnleI1/e
/pzXlGsLbIV3R9gWbzl4T8HamPesvMe7Qvco/eRh7fOB9nVVU6ut/115eKN3
BON8U75j+73/DHdquIc3uX/XlG/hyM8eSultYovh7ZV1puUsvXm7XvdE/dOU
FTpnYu+WDb3inqvc6KGkkxnmuV468NlEPYE307JcZdo1ynGS4ROlCy/2X8Y0
5jst9PIX5YA3a8XPTedN1p9M4wyA9RP7NiVZ0Sv0/tiUe3bQOUv8Mt/mME86
WTlO0z1RumcZV+LxR+Xj7Q9vgZ41fKoyn6uMZ5jnj+Y7QRzC54gHPu+cSm+Y
PrZMlG3dxtQZOmafkby8WV7XOOzmEG3iSG3pEOOPMm6NxsxzqvzPUUescfHj
0lausu6oC+ZtzN9474Ot7RThgY25Z3y4toYMR0kfgNdA8Y7URg9RhqO0iWnK
eJB2erh4hPGfav9KP3ufd4n57v4U+yP6Ld59zQi4QndEwKjmfKvGe8TSO0ne
KPEujfdGvC8iHj1fra55q9ZT/5X2VZdK9xLTR8hvqHTutX+82/7uPsO83yul
32XcffaBd8sT3rs253vo6fIZYRmmi0f5DhF/V/nOVD7wbnC8Ztz+R0v+335W
S+aZqo6ub8n/MF/XkjJcpRyHtuS3UQ8L9+CW/H7qIfhDv11iPDq0mPiXmWdm
S34feka40wO2DP/VLUlrqvKOUr4ZynipuptuOa9WD/eW6Lbkt6CvlA55J4pz
l3h3O47cZZ571T1lZJz6fbxy7To+YERjvq8e7pqANQL7QWNd1+7nWms/19Ps
X7LPzRkJ68qJ0tlUd5TuaP2cJUwV7yTXYazHSuclU6XHfiVr2ePEAXdtw9xZ
/9Y3I7wd2b+NXKQfLw7rb/bQ2R+e0JLf8t+vJXEpC+Uea15oDNJOeBd3jGPc
LdrjLY53o9TxTOEq6+o2dY1ebzV8tGmltrWObXv1xsQhHT7sAbLfuo8yjW+j
C/RV5dx+f8u4r+non/0LznGZxzPOs6fZQ1qUjb1F9tZP9Hx0qraKzfLNOL4J
yfcoJ2p/zKFGNuf7f+YkU4w7wLi9m3OeUtILbZN5CHMW5i6kcaaAf6Q0R0hz
f2kdY/5bDY8ynffre8pjhO11uPn2ke9w/SX8vdvItYX8gcnmgx7nGyWaw83L
PIn+8Qzr52Lb2BDpMofiTf0u+ulvePOJffDmGpp7GjfPeOZ1zC/pNzaX3sXS
G6IsQ7WxQdIhjrO0QfIbalmgT3mQj/6bOTJzLegMtBxD28i4e3PrdyAGacPY
3iWW7/8BfKmxSA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlmdsV1UYh0//3S2lg3P+hQpIWS5UUHEgsoOKIyqSiFFWVQhTEjEGjIYY
FTHCB0CGUEZRgQ91FMLoEgiUUUYRKDJE9hQQaBkC9fn59sOTPPfcc8895z3v
GblDxrw2OuKcK4Y42BKcm9DAufHpzu3H8+GDZOdqU53biL8DCQnOxcDDeB4k
JljZu/hqKElxrhS+w+fDR8nWxjz8fbiLutkwEk+LOrcm07kVkIoPoSyZd0kw
FG8AuXSsMpa6+GjISbA21NZe79x6BvAl7ME3U3Yh1cawCW8FXfi+JzyAPwjd
8W7QFs+APbS9Hxrh/9LGMDwPbuGessP4SHD4fcHa2slzusYC7dU2NMVj4UPe
TYCTfN842Lu20ARPCTaWCkhVPKmTG+NcSxiGNwzWtvqUibeu739XyMUHUCeR
ugkwEI8Ga1sxysZHBIttYxgV7Bt92wla4ncH847QAn8IesRZTO7Bs4LFQmMO
+EFYRy6UwaFgc6q5XQ1F+ELoHO/c58zvXDwGxsZaDOLwt731NR7ewn+BAcxV
HnyNn4E46tbxfBq/CGk8Z8ElPIacmKrcyKI/+Epvcz0JyvDJMAHvCvn4BpiC
fwNr8bP04SR9PwKn8H0wLoP+wVX8J+r0j1ifCvH4YHOXBOd5roU+eC+owW9D
aazlyB38b2911ecL+FGooa2+UIDP0XwSqx1QghfDLrwKyvAr3tbWZagINmea
u2LeL8dPeYvNTTiB76BsUhoxgO3B1qjW6jj4A6+Cr9Kszk78EZjK3E6GR/Fy
+IJ31xOdm40vhYEp1if1bVWwf2sNr8A38s98/j0PKvE1wfquMZUGm3PN/UQo
wOu8rRXlQITnQcHGpjW5QetL/yT2HZjPG/j99fmpHNdaveFt7Q2Am3gztR9n
a6y51k6wsWsM25TP5MQq2iqC5vgxyqqJRR2cD5azyl3lwHH8T9o8xFgOwj48
CzJhbyO+gxzaWEZbVbCb+o14TsbXk4NZ+DnKatItZsvwfnz7OvSGZ+EKZWMy
LMeUa5eDrRWV6d3eYHM1FqqDfaNvb/Hv2/CS1iPrqQu8gB/w1tdq2O9tDWkt
OXgDHw6t8NYwQrmsfIyxPWIQftxb7ignj2ktaj3HWg4n4n9Rdop3R+GItz6o
L03wnHqa1Mfo/1hFLRZlkIGv87bW1MZBb3u49nLlYAp+UntIus3JCfwIVKTb
nnIYvwmFGZYT1xUP6BZve8pzeDptlGfaGdEQPxNsLavN0/ht+JhvJ8IdPEKd
6Zm2Z8ThS4KtPZ0pw/BL+me6zeEFvFnUcqcQmuJvMobkGIvhYPx3KIrYHrHY
W84qd9tBndZq1Fw5qFxMilpbyiHlkuZYc71V4EeDuWKgWCjnlHtbobIeeTn8
BrXB9iqNsSbYGDVWxexWsBxQLigH+nrbI7VXpkA2PtJbbrSBUfg/wdaGYnAR
91GrqxyP4geCza1irti3C3ZWao220VnoLVe0hrSWhgc7u3Qmj1GuUzY+Ynuy
9ubOlC3h2wJ4RmdPMM+Hp4P1SX3TGTgUf4yy6XG2Z3XEZ1PWkbbaw0z8Re0X
8ZYjypXNlM3i3TTYhF/1tla0Z2vvTgp21irnk/Eng/17Njyl84w6nSL2jzl4
l2Bno/qcE+yOo7uOciKP94uC7XW60yzAewZray30wrsH8xLogfcJtpbV597q
e7B3K3UHwWOJcX6m5axyNwEKMq0sHm8fbO/WHtgBf5U+vFK/52jvmQ4NaDsV
ZigW3mKlMr2b5+1s1Bjn4lu87eWK2VZ8PvSK2B6vvb4aKiJ2p9LdahcURmwN
7Mavedub+8N1/V/7YaLdIe7Fl+v+RN1R8Cu+EJ6P2D8W4Oe8fasz/yzegjFW
ZtmYk6N25uvsz4bL+PfwcsTaWKT89fZuMc/bdHeK2l6tNtTWt/ShNtH6NA0f
HOwuqTvqe/iPih3f9oMl+E5YGrExVuHbvbWtsh34Mm9nufrwA74KPsE/hRLF
ylvu6c6hu8fMYGfrNZiFF3m76ygmP+OPB5t75fgTwe4wust8BuX4jGDfagwa
i/6hf2lNrcGLvdVVH0rx/wD706rW
            "]], 
           PolygonBox[{{5203, 291, 5221, 5200, 5201}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9930706684380289, 0.9875871853888607, 0.48716320623593756`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
1eQb12KHWvSrs/q/pGj5Hg==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElIl0EYh0dJIbX+kDOXOgV1qYMXIay01faTYZaae8spi6ANgrIFCtqh
zK2Vtku3FstSQSvNSNwqTW2x3Urq0qHo+fV2eOD55ptvvpl3mYlFpRkbop1z
mTAKDgXnnsY61w5H8TfQHXGuF4bwLO9cU4xzlcydjNfDfhZohC58kDktzN0I
rXg/NODNMID3QV3ExvSuO9jcTQnOdeDlrDGVtabASbwaUvA0qMH3QHmUc6dh
L17AN8Pxzo3AA7wExvKujf3l459gKGL/fIt/hMGIjb3HD0JnrJ35MH6TNcui
7Uz/zubtXxWwAt8NlXgVlOFtic49hnpogBzGkuKcu06Mlgfbg/bSz/OaYGfU
WbfAc3wZzODddFiAZwT7tgcy8dfBYqeYKrZZyg/vWiEbPw9bRzu3Cy7gxcH+
NQBr8VXsJ4G9joFCvIaxUuZuhmp8NmMd7O8JpOHDjP3kX7/gK57t7VvFtBhf
EmyvKZCOL/T2bRzvM/Ejes/5k+ESfgVeMTeX57t4YbC9DcI6fDFMi7EYLMIn
sMZ4GAeJUMvYar7Ng3v4u2C1qBx+wOcwp9PZGXSWedDlbGyutxpSLSXBKbwo
2L+1p/VaWzWIt0NOsJgqti2wMtgetJcecvsM8vD4KItpgWrD29rJUOGtJlQb
qtF93nKoXOofefgI/IlYT33BrwY7WwlcU+8Eq40d8BC/7a32U+GGt55UbyrG
l/FHweaqB5rwW8zZztxtcMIb8p1Q520NraU5tfjnYP9WzpX7O97mqgfuay70
EcteSPeWc+U+FZbi34PVis70TfH0VguKUT5eESz3ymEdPtPbWi9gPn6MsZec
pwMOKDbE+Hei1YBq4WKwWlJPqbeUI+VKPZCLV3qLve6IKuXXW+50R+mumuTt
rtIZdBblsOd/z6p31dPqbe1Be5nlbW+qIdXS8WB70x2hu+KHt7tGPdTM87lg
vacaVi2fCdZb6smz+F+jydS/
            "]], 
           PolygonBox[{{5162, 206, 5191, 5117, 5118}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9401877893856116, 0.8005715466912615, 0.27073189524787844`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlttOXVUUhue2glovWesBNBofQakcdjncaqzRGlEvGt0bWticFLj1mGji
oVLOh70LGwsEm5Q2pY2Fq0JTNOWmJu07qM/g/2d8pL34M+aac8xxHmOul84N
nqk8k1J6LJwQvspSmimk9KXo9YaUbgm3hWVhSVgV3s5TWhEdFs+9xpT2tJ4W
3tS9dqEo3NH3rrAj3BRGJfsP0RvC1YaQ/UB3j4RDoZKC75owIrnNkjGKDb8L
2+iuY8ucMMu6JswLVeGuZK2Jdut+rzBQiD3TEeF+Y/BeQkYVajlbwkOhL8Xe
JDps45/YaV0L6NsU35HoWgqdVexbJRb1p+ywDY7RHnExpoibZR8gvyOLXHRm
sWdd+40Rg7+x8b08YnhGdFCyPxeGCmGPbX+IH1vcse/9wjC5sU2294R0lMT/
rOj7wrj2v8vinuU4F2v45HvO4QR53ETPEfVxC9+2ydcW8Xs9RQw/zIP3rOg/
TVFLb+UhzzyTyNghNgfEa4H43CNGVXJV52yaOJ6i9hz3VqGtEDV0WvhM6GDf
e28ILZx5/xDZjnMROV2c+W5nIfQcYMd9cmV+n5fgaUavbXEtO07ugw72W6lH
33c9OG9fkLsOZLSh/xRry3FvOPa291NsaoP/2NZ2vneIo/Ng3vPwV6lZ17X3
XDcXoEOsu5FV5t4FfOulfgaQdZ79YXrK+/v0xl3oGus6vVAsPJkFjskKfbLE
HLCccfSU0d2Jni50VrDX6z6+HcPpQsysXu4e13o/vpWRUULuEGfH32Xi2ofs
OeaDa9L6RtEziE5/t6lPHiknRdEXhRGtX8iiF24w3z7Ko/96RM/qrCaec1nI
miH3PfB8nEcMbPcY+kbx7QN6xz30X1P0y79NUV8T9M4Q8nz/E+aD58QYez5b
F29Z2GBO9KaorUXhsrDE3iY83p8VZoTnZXe/aGMWdzfhnciiVp8TXU2ho87Z
BvpKUJ/9JpuaT6b0cx78VWEZfvMMAK+tr1ty50VbRf+i/zwPxrLo44roUBb1
5Hepwv5gFvNhirpveWoGvEounJM6NtgWz/Ea9nfRD67bKephnvepj7itc++K
8G4eee+RzIYs8nIyC19G6N8Kfg6wHmB/hjg/xufjmF3Jw+dfiJXjtJKify7h
201mpu16hCzLKdMP9qHGG7IAzyJ8c+hdZqZPIvcd3nfH9Yc83r9fRb/Po0cv
5uGn/a3nEb855NR4B93/nbxl7Vnkz3l8JQu7d5kDt3k3XBPOrekeM+w6c2y3
4cnePrPTM/QavpvnIrb5HSvSm6ez8OcOs/iQe543V3mnrGOFHDrGXVn40pLF
/4dn+ji2z1ErrpF51t/yv+T/JvfvA3RUqaMaskvUy7GfzusKPXeZXlnjzibr
DfK9DN/LWch6LYuasIwf88jhIjw/kS/nbR0ZdWTMwrPN++z4fZPFjPiaWu2n
XseYx/ZpiTfX7/go567v/wGC3GeA
            "]], 
           PolygonBox[CompressedData["
1:eJwtkjtPVUEUhfeBy0WQ7sxU0GgEFRoKEkBewWhL4GJEE6GgsCIQCC87CCgh
PEwsAAkkvC63gorGEloUG0ngPwA/Qf1WNsWXu2bPmn1mr7mPBkdyw0VmVg8Z
6Ahm1/xuQAN6FtYTszVYQE9BM/oFTKNnYCJxz2d0J1yZ93iJnoPJxD3yflGP
xGvz6L5o9rvE7A+8R49Qa0r8G2Pof6nZX6hEV8Eg7NA7D2/xt7L+jt6E18Hv
rLur9iq4R1594x36KzSXm/3MmhXQXbDN3gaM438SvJe+UY3OwEd0AR6jv+m+
nL2A5ehIa6ZFdDfs02sPetClwbNqgQr0G2pH7B3DALqM2hi9h+AB+hO04m1T
ZujnsMfeLjwLXtOeMprUW8CWeebt6HKYNu/5MHimyvYSPqDrqNUGz1TZqqd6
q0cNegnPedZnXEUHaqneFO916hkpq0b8d6xXomepMzqbiz7bCfRGn1mzKxNl
kw0+qzItDt5TvX/BBfRHv6syUlYH0Xv9gHx0j7yncJZ6TXt608Po/5HK+zvr
7qPB30JvfIP/afC3VKbK9jb1WZRZCev/8C9mWQ==
            "]], 
           PolygonBox[{{5158, 156, 5177, 5162, 5163}}]}]}, {
         EdgeForm[], 
         RGBColor[0.866923047996156, 0.4886104665098904, 0.2106696680444552], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk01uE0EQhdt/xDGOIzFtkUhsYBGC2BHbmDjYEyVhiYAjICEkR2IShA1c
iEuw5WeL2MIRAAlxAHhP9Vlh8fRqqqqrX1XXXH9aPXlRTyk9FxrC5ZzSa3FH
vExhnwtv9D2s6VvcFUay18S/ipQOFH8lu50jd108F58Kz4SW8EBoCrcUeye+
SY7j/h5x11A4485TfEv8j/tx76N+aLHt2iqVNoUC27wlbPNt+7Oca+JP4r1a
xO7UQtMJvR9jz4T7wlQY428Qy+i/Jr6RQ39TfBv/jnjheQgDocJe0Nf8P1+V
LuY0Jz6gV/f8Q1oPPQvmeoa/lWNePxVfyr6rPhY5NFnD3yJg27p28Xv2rlfy
HktqLrh/jK6XOWZU5dBj35611WLunRRv4Pl7F3aov8vOLOijkaO3Szn0Wefb
HPXG1LwiXOXNTtBlfRPmsM97lNgflOh9/S3eEPeEtncO7mH32IlvyuuKvxTh
2+BOxzrkHrB/vvM9c/tTRL8dcmfswzH5zj2kxpA9nLI3R8RLcvxd5+wRPKXf
ktq2m/Q/odcyXexlHe3u0XvsvfYbrTS2OO+53lu9F3WG5PrMNvEBOQX99dA0
I+7/2X0+7EeNAf59eJU35tyIeyZos65N9qtiJ6y7Sx9fi3iH70Vo8A5s0e/q
PeucafN+PvuxiD7XmX2TM6v8Nt8FPfmOfznVVds=
            "]], 
           PolygonBox[CompressedData["
1:eJwtkblOgkEURi8qoiKNM4TCCht7F7SQwpBYauQRTGwkAZdEeSJfwk5cOo12
bjyBqPgEni+fxcl/cmfmbn/9oNfuTkTEIkyJHHHItwOT+G2KmMdLcI8/wgNc
wwBmuXPC2QWU8R9iLbwJv/gH1PAFeMZL3GkUItahj89lv21AEb9LrqWebvBj
YsXwm/2qcyr3Jnzj09m9qoeZ7JjOjmCIP0ElPMMbPkqutQVf+Cu8/M+k2cbJ
tTWDZtmj5k64B/XSg1V6WYFuNvINOMd3q869DZ+8PyO2VvCbU+0q+0w5lVs9
qtdLuMKXs13/YEm7yd6VcijXe/IuNZNm+wNXcDOF
            "]], 
           PolygonBox[{{5107, 166, 5140, 5081, 5082}}]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           
           PolygonBox[{{5104, 66, 5105}, {5083, 17, 5073}, {5082, 16, 5107}, {
            22, 17, 21}, {16, 21, 17}, {11, 6, 16}, {5103, 66, 5106}, {5086, 
            66, 5103}, {5073, 17, 5084}, {5051, 66, 5086}, {5106, 66, 5104}, {
            6, 66, 16}, {1, 66, 6}, {5060, 1, 5062}, {5071, 16, 5082}, {16, 
            17, 11}, {5063, 6, 5061}, {5074, 22, 5085}}], 
           
           PolygonBox[{{5061, 6, 11, 5072}, {5105, 66, 1, 5060}, {5059, 21, 
            16, 5071}, {5084, 17, 22, 5074}, {5107, 16, 66, 5051}, {5062, 1, 
            6, 5063}, {5072, 11, 17, 5083}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5085, 5074, 5084, 5073, 5083, 5072, 5061, 5063, 5062, 
            5060, 5105, 5104, 5106, 5103, 5086, 5051, 5107, 5082, 5071, 
            5059}]}, "10.8`"], Annotation[#, 10.8, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5241, 5237, 5238, 5230, 5231, 5234, 5235, 5239, 5240, 
            5127, 5132, 5456, 5457, 5232, 5455, 5233, 5100, 5454, 5236, 5102, 
            5101, 5125, 5130, 5131, 5129, 5128, 5126, 5123, 5124, 5154, 5159, 
            5161, 5160, 5158, 5163, 5119, 5148, 5140, 5081, 5070, 5058}]}, 
          "8.100000000000001`"], 
         Annotation[#, 8.100000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5255, 5249, 5250, 5253, 5248, 5251, 5252, 5254, 5206, 
            5521, 5513, 5516, 5522, 5514, 5518, 5515, 5517, 5520, 5543, 5519, 
            5542, 5541, 5540, 5211, 5459, 5458, 5461, 5470, 5460, 5469, 5467, 
            5468, 5465, 5463, 5466, 5464, 5462, 5218, 5207, 5157, 5156, 5181, 
            5189, 5180, 5188, 5172, 5183, 5187, 5186, 5185, 5184, 5182, 5177, 
            5162, 5118, 5147, 5139, 5080, 5069, 5057}]}, "5.4`"], 
         Annotation[#, 5.4, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5269, 5268, 5272, 5270, 5271, 5273, 5274, 5275, 5276, 
            5277, 5278, 5258, 5305, 5302, 5306, 5308, 5304, 5267, 5309, 5307, 
            5311, 5310, 5303, 5312, 5333, 5334, 5335}], 
           LineBox[CompressedData["
1:eJwVz0kuAwAYBeDfFQwbOydwCorqQkWClE6GrvQ+Tc0bHMEUG2PtJBpinuch
1hKfxZf38navrVBOTzVERIZUS0SSDnropJcEXXQzT5VFFphjlmlm2OGnOWJX
5thmnz0OOOWEI46pU+OKG6655IIzzrnjhUeeeeKBe25545tPvvjgnVdWWGaN
TVbZoMI6S5QoMEmeCYqMk2WM9v/Nr2HyDJFjlCwjZBiknz4GSPDbFNEqG6nr
h2zxB63rQkE=
            "]]}, "2.7`"], Annotation[#, 2.7, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{5292, 5287, 5288, 5289, 5293}], 
           LineBox[CompressedData["
1:eJwN0clOE1AUgOFb2gpOhY7OCjGg4PAYro3xCQiCtND6HixlMmxZg0ILuOoD
KFBqJSTsWTEIIjhU67f48t+c3Nzc5PQMll4UIyGEOSqZEJYo855lJvjAAovM
84UGdbaosckG6xxzwjeOOOSAfeLZEPY0qjEitNEyC5ohS4o0XSRJ0Ek/j7jP
AL08po8nPOApD5nkLdNMMcsM76iyzmc22KTGFnUu5UK4zFUSdLJrfkW7SJIi
TY4M18gSIRCjjShxLtDORbrpoeHNm9rBLW5zh7vc4zo3aLn3iz/85DdN/vGX
c35wxldO2eE7J6yywjJzfKTCGkuUGafAKGO8oUiJPK/taIhhRhhnjAJ5RnnF
c17yjGba/zXJtvMnqvwH+U5W1g==
            "]], 
           LineBox[CompressedData["
1:eJwNw0cyA1AAANBvo4UdURNiHEBLiBJRTuAAFg4QR1IyLDgFEv0AetQhbKOX
8d7MSywszuWqQgjzvjaF8GbFU88899ITryx547UXbrvjlkX33PfAIw8teOyu
Sy674qprrrvhpnlvvfPeBx99suyzL3747pef/vjtn7/WNIdQbZ21Rqy30QZb
jNpmq512GDdmv30OOmDSIYdNmXXSaaecdca0I4456oTjtpux2y57TNjrP/2D
OrE=
            "]]}, "0"], Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5260, 5261, 5262, 5263, 5265, 5264, 5266, 5256, 5257, 
            5489, 5505, 5508, 5506, 5509, 5510, 5511, 5512, 5570, 5571, 5569, 
            5572, 5568, 5507, 5550, 5551, 5547, 5552, 5553, 5549, 5548, 5491, 
            5492, 5496, 5490, 5494, 5495, 5493, 5198, 5176, 5173, 5193, 5179, 
            5197, 5178, 5195, 5196, 5192, 5202, 5199, 5194, 5175, 5170, 5144, 
            5136, 5077, 5066, 5054}]}, 
          RowBox[{"-", "2.7`"}]], Annotation[#, -2.7, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5242, 5243, 5093, 5244, 5099, 5245, 5114, 5246, 5247, 
            5168, 5497, 5498, 5499, 5500, 5501, 5165, 5503, 5153, 5502, 5504, 
            5174, 5150, 5142, 5151, 5152, 5155, 5164, 5149, 5167, 5171, 5166, 
            5169, 5143, 5135, 5076, 5065, 5053}]}, 
          RowBox[{"-", "5.4`"}]], Annotation[#, -5.4, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5052, 5064, 5075, 5134, 5141, 5121, 5090, 5115, 5094, 
            5133, 5122, 5109, 5120, 5112, 5113, 5110, 5111, 5108, 5098, 5097, 
            5096, 5095, 5092, 5091, 5089, 5088, 5087}]}, 
          RowBox[{"-", "8.100000000000001`"}]], 
         Annotation[#, -8.100000000000001, "Tooltip"]& ], {}, {}, {}, {}}}], {
      GrayLevel[1], 
      DiskBox[{0, 0}, 300]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0., 1000.}, {0., 1000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.21135423633121575`, 0.3394770813896404, 
              0.9353476831372656}}, {{0.4184727212585687, 0.5368817709288053, 
              0.9478856896510661}}, {{0.6899917252386744, 0.7577460469785724, 
              0.9697355848986656}}, {{0.90993537570997, 0.9310217853260815, 
              0.9912716425157581}}, {{0.9873697397500713, 0.989045077050841, 
              0.8589796286144636}}, {{0.9930706684380289, 0.9875871853888607, 
              0.48716320623593745`}}, {{0.9401877893856116, 
              0.8005715466912616, 0.27073189524787844`}}, {{0.866923047996156,
               0.48861046650989026`, 0.21066966804445517`}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.5}, {
                    Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {
                  7.5, -87.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -62.5}, {
                    Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {
                  7.5, -62.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -37.5}, {
                    Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {
                  7.5, -37.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.500000000000004`}, {
                    Rational[
                    15, 2], -12.500000000000004`}}, {{-7.5, \
-12.500000000000004`}, {7.5, -12.500000000000004`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.499999999999995`}, {
                    Rational[15, 2], 12.499999999999995`}}, {{-7.5, 
                  12.499999999999995`}, {7.5, 12.499999999999995`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.49999999999999}, {
                    Rational[15, 2], 37.49999999999999}}, {{-7.5, 
                  37.49999999999999}, {7.5, 37.49999999999999}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 62.49999999999999}, {
                    Rational[15, 2], 62.49999999999999}}, {{-7.5, 
                  62.49999999999999}, {7.5, 62.49999999999999}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.49999999999997}, {
                    Rational[15, 2], 87.49999999999997}}, {{-7.5, 
                  87.49999999999997}, {7.5, 87.49999999999997}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.49999999999997`}, {
                7.499999999999999, 112.49999999999997`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -62.5}, 
                    Offset[{4., 0}, {7.499999999999999, -62.5}]}, {{
                    7.499999999999999, -12.500000000000004`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -12.500000000000004`}]}, {{
                    7.499999999999999, 37.49999999999999}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    37.49999999999999}]}, {{7.499999999999999, 
                    87.49999999999997}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    87.49999999999997}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-5.4\"", -5.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, -62.5}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -12.500000000000004`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"5.4\"", 5.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    37.49999999999999}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"10.8\"", 10.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    87.49999999999997}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "9.896881144073111`"}], ",", 
                   "11.571613790198185`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "13.5`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.8`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "8.100000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.4`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.7`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.7`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"8.100000000000001`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"10.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.69375581627378*^9, 3.6937566210068073`*^9, 
  3.6937570284411116`*^9, 3.6937573593330374`*^9, 3.693757526029572*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
VUdiOo9zOat2plAKdlAljt8gvBHV9TvZ5qSgYIan5W7CixAOeRFP4rn3r7C6
EV5Se6rCDxJz3VA6o0DyK2wflxA0N4XBm9ObX+F1NAWxc907uwjvZ9+YU5KC
d00fKs4Q3k/fvE7iTZMOZOYQnoJXg1v4sRQcuEHxphJeZcSWYanjYzwhCQtR
7VWpePSubuprwjPP1/okuzoVy7jzZ3QQnuigUBOPUiqGzXcI1BNeOHfHnmES
L2s+uKCU8GzYQn0eKY/5M93vT/6Xfj9+vTV+PTd+vTh+PTre/+i+TOeNvJzM
mk982WYg64AU0XVerq1iGvHlJVPU1pmSOrk6N985gPhykM6UvlhSJzEhjdtt
iC/LVT3POE7qhN436LzevaxVnaRv5MsaibsQ3usiCeYu0jfk+y4bNBPeyDwx
vS7SN0qXW4QsJ3Uiyj4xp4v0jXmc3AV7ptEYfY3OsxH74MRH+ppJrsSxAsLT
Fb11TZr0NWErT3NNUnd1H7PkNUhfs9ZtnNJLeFfylHdsJn2N01H5dCqpO3oe
6DyHxIaZhiQPUbICS7oJ7yyPaXYEycOI5TLHasKbeeAFXzHJQ2Ta+pxdO4mf
ygfvbCd5+HGG7NTYaIw6o/N+vm+Q2eyOjIkncg4R3s2BrfZMre5gz46S2UB4
gUsUdbzvuSP4FKX+I7k+W5XN8l3d7mi1S7DII9dH9wHGOsuuu2frVlcsHend
7UR4QreU+9yzXHFz8OuKa+T+qYV9eLsmxxUdtxRb5Qiv2mbS57m5rtAr2ueb
Q+4f3afovNCUMr0tJNZZqJS/gPCOhjlS20gc35Grvo7w5ipsyxUkvvTzvWt3
kt/WqhUX7Uhc33smIYPkl+6jDL30dZ2i8TiiPeDwwcdEf+EDLF9VuR2xaMNm
/TqiP3YHNrWh6Y54l8b9vpDor1j7TWIhhyNUpFt3Jf4P/ffur/7b+of+O+1X
/y39Q//9v/K/n7/nyGTxgpyNdXQx4V0Pld8uM8ELpEyYjMUyoJjI9KjxuycU
81qiRwjPlVlT2nHYE5yRT5iKOcn+cPBH8MhHTwbvr08fDGOo+RnhKQSmvJqz
2geT39fuvUZ4EqK5basVfCAy28+zbDcNHdMWX9os74MNpSOrdkynYa2Y7rEg
aZ9/9efzvjD47Dln/qkMLKEcFU466wuZhppV6uKk7r51OplW+mKn21dThz3E
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
tioB+Wmx8So2ttBPb9ncrZaAh2GTY+asdIRhycHAaSsTuPiHs8ZYSmZ/MMWi
uk16DZcpyJ9gvmzXoCX6XH/VXyilYNT+g9rbBW1RTL9ru+8cBXs2zz5+c4Ij
bFddeUM5zc0/PHRg20mpc6a4H1NnJ7qSgmKle5v5L1ri+77LdqeUKUgf4ybQ
c2UzHp8rs1unQMFaEhc0XHOAb3Wj3Ts5Cpe9lxix99H/0N5z7u/Xf7m/nHzQ
vGUZC1uNKJhpd/jy1sVmKCpJPrfdkILG/T2L29dbwVuWuQYGFETdttm/yt8W
L/cW3HuvR0GqX/9YQ31HLj7o8JywSrK+FrTItMLBDLnm7oaC9RRMv5yWGEi3
wuxNntamZE2Re1Iy+4wt+71iL1n/cEr+6OnnyMUH1RDw2XDQPAGGzS2dvTvM
kPFdryXZMgHLHSiPB6ussPuoQYC7dQJcN2Te4P9qC73pgTz6mxPgZy76JHWn
Ixc/UmWXjlPS0wSU7buVuPCmGWg5i0J+NSdAlnl9KWOUNe4oyadGvkrAYsVd
T7qIvRuwtNjT25aAl/p5FQWXHLnqGzjrJzjrMzjrPzjfGzn5VRIDO4TGBLCg
f/PG8VGWFng+aYNg3UsmbuyhTAlbawFbGyGB7E1MHB/vGdslb4E9jff5Xa8z
8HNKTJvjTAtuftXBmr1zglm4eNPjtNQdGyzl+XbErI2J041R5fVnbGDjMPds
ijkTisEJNUk5NqCVGV87f5OBFfnRTSqpNtjBwa8qiBknqx3GwnwZoVJNDQdQ
Ph7QHuZxfPjV4LlkrgOk7y11CLJmQqK1cdpMQQdQp52KFKhhoKhO+Nb4z/Zc
PJ3xNINS10gWDLufvlj62AkPWoxeOXUxUT7hJk37jhOOH1083sGOCaUlJYo2
V5yQ2d6laHuPgaPr9z33P8nN5xH4/5Sn/Bt5f/F5lEb4PGePD1TzR7MQfJ5y
n1/YFbc1b50W6WGiY9aRt9N4XNGzJjhHwoEJ1jPPUXJfXDD34s/UufUMdp+g
RrsLF5/Hof7Eo8IYFk5+5r3+Qscd5TnayeXvmdj0lUe/R9Ud8s8vKjQ5MqFa
FVE7sMid/Xm6HzDgaO1lMn6m+998nvkjfJ7x/Q5vDONY+JbnceZ8jCfO/bxm
7veRiV9ZTQUVfp7wDx1Vtd2ZieVvXmbfdfSEhqOk4rlGBrvv85GJJxef4qyE
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
z3cpcf79qkpihjFQeXXeJe5ZeXt+/P9oz75/sGcyn6v2v+Rz/TWf5+5f83nY
7EUVyRuw/sDndZr7xJjc72T/8I++8HzSR/hhjxjf3DruDUMArnctPXAqW4zu
8fOndwQibdipcv5O+fk8LzSrp1hEbYDf041Bu4eKMe931JNj5b74Ni5dbe0g
MVLfjIgdOyYAjOb6glEqYrSUnTJJCA/Eh+UeLo+VxX/P5znTM5+nW59Fqzbg
xdzfUXp8ERy+zT3ceMgXvFaHjEq2SNY3o9/hj51D9pdwGCLoj9V45G0XCJOk
3q+m0ERy83kWrf7eMcVsg4wvnNcoxLrGX4wZscT3uU7QsybingsO3PaZVf6Y
TVyMb94K4UVjUk31AiG+nxfMrZWf9/OXvPJ/kGfyB3mXSO9FvKN+iXo6dEM3
bzEd64XQu3T851kPX9l8txtEHMU7DUHaAX9ItrZwnFYK0bJ6Vz9600YZP6Xa
QSj3XsQ+sxPNmxq84d6Uc+xhpQCNW715lka+MOqv0Wx9i8gP64aqdUX6o/u6
LSkVQGxemll4bqPsXjAqln8vgpG7OHT+dW90+BpeD7AUoGj98N53+/jK5r2V
zxOgobYtff0Sf3z2fVqvP1OAkRPrZrSKNuJR+Lbo+CmCf5ufs6OHn9PrD/wc
cr3wRtr5FHsvCa7OdbngPy0YwYvWbGgi1sswbP1it1D8ZmoaJq+XoCGnjr/F
Ihx8858/53hLULB/6You1wg5PkK81um09CZJ9/yczdMsg6ES6fbK9qsEm9sZ
OgkRoUjpV6//k1g7XUtwj1oWjskPAihHmyWAzzY9Pb8IOT6Ca9WejPfEmrL3
xpqWNcEoGTV73X6+FJK3Pq8fx4fC5M4BXR+BtHuu6ey1a8NxsbX9w3ihFM19
0344RkbI8REmV0RnzRwSC3uFX/pnI4LBM2x69ptYLxxQtVd7Xyie314xpmJo
LH55DhhkGRQOy30H1qYNiwXxuRV0UYQcH4HM5yPz8ch8OjL/gLwm/3vk30Pe
L7I+Ckl8hPY7AQaBxO9ppxct/ZJBwe+12WYXif0z7/K/3biJgjurypcOJ/Qx
3E1hxVc2Bd7F7102EvqPiuVWN4dQ5PgIjJ2qP+YR+3VqzvcrPgVUOBGG6U7o
Z3PLnD1bc6gyHmo0YQ8+x+jc4u3EvV3WnJ/hKcH8oNNr60RU5JH4CGWDdlxX
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
7dMlM5tRRLzh2ZKbqMWRxZG7B3Hk/DXZ35L9Jdnfkf0L2b5LSfZPPh8+pPND
Pl+vSPnD5ugWLR1CXvb1kh8Zp4j1JIFpqgsXO6Y4t6vVsTCq1yfThqmE37Qa
1yLQkvcH5PyBSBsEnwh9PV497Tj3CbEPKRUF7OVcjF35eq7ke7Ss7jF+Ekf2
fsdmDXl/tYqUPxwVjKwrJOSF7q/y8/nFhk79gyney7gQpxdxu5RjoMiwFLvp
cDDoTH5ayrAYtPf4U9Uef0q2R7I9ke2BrE+yPizSmqWmeyhYp/lg360bwP7B
x33dPSPw2Gh2tK2OO26t02UMOR8BvYk/Yp6uccXX/JT4Mg0KokaW8IKTnaHx
q//OGBoFiRpK/TozbeCcTl82g0lF64E6gyuqi2HycmFmdhMVj2dcj7jNsMR3
auicJIYxgg+sVlznSUXc8utp1Q2R6MWiTvm1aC6c6v2PZa+hwcX+d9vq40uw
ZGyfWxrDHXCwd1i4hgsVQT4LFoxuooBnnD/1h8gCnbqf3IYVUbDQJ7/M+qEh
hGbLv5xbSoV1PGvatqxFaLrSdkm/Nw0flN67uuy3hOLQqlL2ewqaks6olSkZ
QYFXcuRatMjcfq3rmuqLFCiPXjOt9zcqHNU97GrNZuHy7FGlgUdoaD54WLkB
JtDO/+6idpyG6Gphf+1VJvDOO9/rSR8awvZ0BYx3moXzb/WFywQ0/PxWdWrl
tdnY9Y2Wa2EViXsCLSdfbVP8aDt4KMcjEjvYE/K3bzNFTuYSs6bTFOy5WDbJ
9rYh3huPznq9lordoxUyzCKNMdK89c3MSxQosK88ebo1zvzV9z1mv4nvVIBf
1+t9UvM7j26zA8uJdc9/GvsXZGzbvQhxmyZVlllTYT76uD+nOgLpTqv3bu9w
QdrWKw9WTaKg8mF0LXe9M5p7PzI3iqJg+In5c6q32vwtJzsxJHtx97/Ly6lt
jZht7nPAq6P73z3UukhPcM8QC7qyHTWKuv8+1T/JdI65qZM5XZH4/18sfXZM
76AxalxX+t3kUOGQMJdTsmoWZp3tdH/TlwbLInebRd9coBLb1+E08V1zLfaN
EXgSdrRj67hNxHd5pT15I9xkg/E5ms2exHe1qD9yf61ghKzHo1b1+kB8J9/p
NafcEEcXHJrVQuxb0eIbm11SKbjSfiyZ8Qs4fW2Lz/ATFBg7PNL42NsIW/0S
j2lEzMJt86jAzRo0JMaoGN9ZbYLU+pX9G4/RULYwSbNAazHWiD+VvIihoq/r
z9zGDmA03a3Ai5AbYKJ2vJL499dtD63SJOTWHmgct+iyC9welA9I/RoBg4Hl
Hv2HOiNk70eTBgsKvq00PlDgaQKTGsrWuAIaNpq98+OsM4GF0FHhFLG+Wnur
pIRviS9+NzsKm7v7MbKOzt5L/M7vaSUpVstBSdZg+C42xaHtpzinHSOh3qfa
cHiKKTq3+ed2eUZinXTFpqJrwKLSZS8XE+eWcy5s1EliHbgmI15/NwW93Bqj
kmIt8NhnzpOKrxTsvtm/8WyxJX40Jh21UqHhmea9+hkWVhA/dZg8O44GR/s1
OkwfKrgZ5zdUv1oJF+n7yfWPKahjbUnoUFwB7blvxfFj7SFy4E1q1KCiSHtw
uflRGkrWR2Rb37ECzYdql8JYja74s/OSN9KQP2GKyWViH3YZSh5SRzgjU7XR
XIv4rlf9N2/SKAfMx06cXNuPigf9nI84pq7AgAvnT9OMaPhsdjzA4bIT3mdP
2+CeQ4Pf7AgPi2/OSMm9qqLFpKDj0KCjHVwbzNyyMjLwKQXthtejbr+xxdiR
TzpTn1Gx/6KfUtujZbj75qiFojMNnQd2Gor0nFEpoIyyaaRh0MItI3d3LCf8
9MYfVwh5x5R2ePHZNljx5k7EwmVUzIq/3/qo3R67dN0OHlCnwsQ5/slXdXtM
+JiV43GRivuvOl4bmC1D0+H+nMCTVDy5/5Q2TXkZ7N52zHNKo0H7o9swRaYV
bs7q7149LxKUb21rXcuscfgCL/yBbQSam2eMOWbjjt/ResZ6WyJQHOA983ih
K1zMKloYDyIgeZFsU6CzHLntEYW3CP+6+1DiRR8tOyic0qCP9aBgVnLLJ78W
C7hElJhGEPu55fdxw8oUIzyOHnLvd98VCPa7vEqtmoJ7NQdu9ddchkn9fNOe
FVJx6oeTbwvfCs4Bocd+Z9HQHlrud2meNQy6Lkvzx0XiS7+ji6/OmIfxv2pG
G46LQsHzmOKX96wRNpx26Z1FJOa8Hxs+odEWGR4P1y94QYHaUt9dUroNbG48
/lpL7GP2z8o5b1k2WGJrHDaPWPtlFd3xfEfcF025HQ6PXEA1aq9LJOyh//rh
RrsIe7jEtbQ+5r8Ml8c1+8XeoCLxs8m12aZOKOL5FTr+oCIrf/hcnaMrkKxM
9SxTpeLq4A83Tt0n/NaVmsP7CLn0hLcfpxHn7brZ+cP3CbkWy9InYVQgPILK
p92w24hVE1UbbgeEE/datXGa1npM+XQ5fd87Jyx3vfDk13zCLj7WqMwwdkb6
aGpzwkrinvn2tXnFSBcs3WSwYjyFCj218gGhS9xQp6YpmkunYAN9SsvoCctR
MO/51k3E+VVfqKccSex30KYo/vcW4nwPO6+X47Qc27LM7vsdoOAyVI8OJL7v
/PnNld+I7xNoSWZqjnFFWR+dpVNKIxDHCt4acsQZhzI1VpV0RkD75P4aPtUW
cUZq/k6zKJgeQUmevNUCgWW96W+CKaB7crJ2rTaC7dpOSdR+CvYm3rKiarvg
e+sBlas04p665nho80wXvFh+4+Zr4t7tH39l1VDCT7k2//oeHL0axy+dddRm
OGJXo5ay+FQUTqns/fSiOAK9pzH2HtHwAK1ikLi1NQITn0f46z9ci5qyAy9q
NxJyMir7fpziiflb0/UPVLtB6i/q15hCwRN/82SVb2zc6fV7zmIdR9hsX328
rpSKI3tSTh8We2Gqb5p0tzQCHZUzEloy1mBO5MXSAmIf2AWM+ghC/wVX/09R
Xx4O5Ru2LSqFohASUiqiLGmznhShiGTf97HPZjC2sY19K2shKaVUUkIlpSyh
UqJSEiVlS9mKFt/z+77je9+/nuN67pn7ue5rOa/znIMZitzh11R8Mp1wyTOy
RX3vtEa9HQ2SX0oNj95ygN/lXiuFDTTU/8kSXj5th+9jn+b++3/nGKpfdH60
EyIUC3nGDGkovW3zZ6umAy6uFYuM1qdCbvuWSV55K6z+ZrMZBC6H3+LT3NNi
gVh/f+8HxByae9wjVmFuAalnhRPbCFwcSzsfuX7RFukMvRMTJGIu/VTvWRls
gyT2Ht3ec0Hw4eS5Ei1tAYHh9V/S9Qm84xG/cPGZNaaElXr/23/ZzyPZu4j9
rZTqalwJ/tMsqxRuuMsahwplbrIyCbswtUX1pjWKTZLM9ANpcDtcbtrAZ4GQ
0F+jXb9oYF075zlhZ4XXzt9IbyPo+OZBc3uzYEPU9Z+NB4j5UqcSLVRIPEdo
4unt/DF/mPZ6rukzcUX3zbx5nbMkfF/R3vPktQeymS77xyzdkLlvx6l7zt64
FGM5JStmDyVSpuO1ET/ICYxSwuLM8LUjNOvofjIuMOaa995XR51bxXTrXwrS
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
XblD6M+eyoywTS44/9uN/vBVEKInn01y/HWFb3ZFdpsRA8WafXKHthBzenPO
i0N5ERia+qVk9fg45NXsE5fNhiD4bszaCoo51syHy80cjkLW6R3spLvOCN1y
Q/miawh2tlrbRcbZYz/7wJJ3zmEo2lK3922NFcjJlNRODiZurNHftCPQBi+e
V6iR4pmot9wu3CVnh3Om43kUnjAofj/wOYuYc75vVhxNOsHEy9efuzMUzFFq
fODVZ7sQ3I1/6DQtbolnbgFBI8GhKBDlP/x1ow16vSZdm/2Y+BKp0btTyAqW
Y3kibx+F4v2DwNZkMUeUume/82wJhvl4XPgjl+NoVQlBdGcIViSq7f4ycRwf
tweJ5fOxsHVDncTZO+bA886Ucd8ojO//alhZYQFJRd2jE3tY0E+cL80vMcdS
Vdt4Tdco7NzY8rd0zhSfVqpmzHBEwpKc2Fzj4oat39eOiu0OhZ3Z5XWmnA6Q
1nyx3TktDIfK509t6HXAqQD7GL8OQi9bk2+uNSZ8UQrVFl1pjqEC1mWfmhDM
Osc03JQ+DlHunqP3f4Tgqw3PntsPjyNBfSO3FDUE2q7PlxIBxlUrCd0R4pzf
stLH9olbQcjvisvFKCZmT5HGkjxskJfI+U05g4mv32zMufJscON3i9vxDWHw
1uz900myw13xzaIhowwkit4MPu1Cws3gOYpBeQTOJXk+D9M2xeZ2+9rFSMK2
Ojnp3XmUmP8TNkaXwuD2cfaLqTXBX17/exT3LwzXLSmv5pIc0ZK2ckdOQSQE
MuruPflnhgHlpoHMXZFYe21UsU/KDP9IOVXnP0Xix736ktKQY7B88aaSOz0K
ZU8Wdhv+MoecRG+1GmFTitIVcwi7X/uB7U3CXstvHxM2b44zR07GLiuyxxMS
78zOK9H4ptbaQxNwQIpxTuHOB9EQXZhb6f/ZCov7hqaX1rOwWkPIMi3ABvqr
uVkf1kZjoWCNRLSIHa4MyWkv94pG06Htl4s/2GPZF+5nBXXRsBCUznQzs0WE
R91gt3o0RDg1M+WsLaGQEzj3wYMFm6/B18I4rcGTbNf+3+/kbFIrjQnptcKC
VFnkyzoW7sfOvng844arSaYFlwciUO66qvW/vz99VdqRffuoBcSs+kePHGbB
sfyg0FEuSwLHPqsORLJwXWYJo7bZEq9PlK3mfsFC4gWekz1G1nhhQMvOGmDh
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
lI+EUv4mct7xMPwfGl0MQw==
      "], {{{
         EdgeForm[], 
         RGBColor[0.178927, 0.305394, 0.933501], 
         GraphicsGroupBox[{
           
           PolygonBox[{{5352, 261, 5346}, {5343, 256, 5345}, {291, 256, 
            251}, {5368, 286, 5367}, {5337, 251, 5338}, {5346, 261, 5357}, {
            5375, 291, 5371}, {5367, 286, 5360}, {5336, 291, 5369}}], 
           
           PolygonBox[{{5345, 256, 261, 5352}, {5369, 291, 286, 5368}, {5338, 
            251, 256, 5343}, {5357, 261, 256, 5353}, {5360, 286, 291, 5375}, {
            5353, 256, 291, 5336}, {5371, 291, 251, 5337}}]}]}, {
         EdgeForm[], 
         RGBColor[0.2836032716723555, 0.4154153983865964, 0.939462158817074], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNkbtKQ1EQRecqWJh2LGIjgmDnx/gJfkD8Ej/B1kYEMSho4QMbb4qkuBZR
CxUFH/hKBJ8BXcNsMcVmzdl3n3Nmzp1eWJxvjJjZHBpFbdRCJeqhemH2Bo89
/TX4hGr4z/AOjVM/euZjf6xtwmwGDvC/0BT1qzIP6AbtenIfnnjmv+GP8i+w
b3n/O9pm3YXrOif8+N5jPUm+D8/RAO8UXqAC/8pznug/+h4rsseob5W5VKam
b13NFfPFG8T50UPLk5Xn/XX5kY06+jrynLGEH9r/CTfVf8xxqNk6cM//36Oh
Orwd5f/2VUP/J9gRS92/4ek14YHOj3uqoWxTmS3Y1ludwWW96QqcVR3eved7
XcNVzzOW4C9joGUH
            "]], 
           PolygonBox[CompressedData["
1:eJwtkLFOQkEQRecZY4HtUGBDSEz8Hz6BD4Av8TdoCIlSUFBBpyRAAQVqoQIJ
xoCCFqKQ4LmZLU7e2Z03O3e3VKmVqydmdgGn0HSzPt8RtPA5ZJnZGbzjtzCm
NoUO/prqB9bP+JOHa+8Fv4cV6y0M8GsYpvUVvodL/i3CEW97zNYMzTqkus4c
ajb8KC97W3zmkU3z3lTzqBVgh3+ltc7/w389ajmY4nWPLEuo4huPf9Wjs7oe
Nd3hTtl0pkWGvsed1K+9Hv6d+pXZ8mZrj1nKqKyfcJ7FG0/wRcqvvQ/8Mb2f
+h/wG4+31ps18H9cHEkK
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.4760599895050812, 0.5855259715951768, 0.9518963327204925], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk8kug1EUx+9XCxa6u12x0IU+i7VH8AC1syFhY+EFlKYSjYTEzAIxxBAE
NVRQMUZinmMMouJ3ck7C4p/fufee70z3ftGq6sp4yDlXgQpQwjs3DpthDn1i
b3pdy34rLA+ci6EoumBdBC9hcaB2IWrBN4XanPqLbxk6wu+HvV3Yjhawu2At
msFOwjqv39fDeac+ctbgNV4j7Ear2P0wZDkLUN5rbUHEuVeveX9gwmnMPTTM
OgP74AnKYx/AGpTGboLhQPsRPxfR2l+s9pDlKkGlgc7o3OveMXzzuv8OR9EO
52PwCX1gb8EHrzWfeY0dtVi3lvsObttMH+Gh9St9r9sdfHutoexfHRJf9r7s
7Bne2IxObTbyrfQctv4krqylt5j1Hba7TNq9dFjveet/32lfMs9Zzu7hGlxE
L9hZOOnVbwrOoWvsXq9r2Z+AAzIL7Awckp6xR2CP1/czCLNO9yWf+Eqce8st
dyqx4vhNw064hK7kzcjs7Q3nbN5Fdncp+zZhNUnMBeOV++tHuAxXrK8N+Q+s
ziHLOW/vc89qlLOszTVj/0Ha/oVfH4GPSw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtkkkvpkEURutDohfsrhULFoad/+In+AF6Z0PCQi8s2AkSYyzYdJM2tKHT
nzmmGIKIMRJTm9OmIE2cx63FyXuq6r1V996qvNKvJWUpIYRiSIMeC+Ev33OY
xLthJvic1hJZIRQkQnhnvM/4G7TinVCO10MdFEIRzMN1jJ/D7yGX+Gx4xYdh
k7Ud+I2fwRfWMuESb4Aka6PQiA/CNr6hOXzLPJdU/j/B/8R8pyEpN6/lBnrx
FeUQx1P4GrzgOcQ/4gfmeymHU/zKPJcl/tnDB2A1eM6/8B/ma5rT2i1k8H86
3OBD5rlqvV+x8fxnWDLP8TNXKMOPIIXYN8aH+Ag0Bq9ZtVdBU/CeV+NdMB68
5g681vwuWqDG/AydpRo38Tvz3mvuH94e+6s9KvA+81idqbPVI/VKdziB/4f8
hN9h4C2Mmd+dcqq0WCO+CD/xXfNaFLOMN5vfpc7U2U/mvc+DB/y7eax6uBHf
kN5SK7Sp1vg+Va/u+t08Vm/yDV+P9arHC9or5q/xLH5sfjfq8QX+AcY0h5w=

            "]], 
           
           PolygonBox[{{5278, 5277, 5286, 191, 5269}, {5252, 156, 5291, 5261, 
            5262}}]}]}, {
         EdgeForm[], 
         RGBColor[0.7194978139826687, 0.7807964277599609, 0.9726764760745905], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1lMtLlVEUxc+trtAkjPaZCBEFZeNGUZP+hqBpg6JZD6iooLDo/YAwJcoM
b1mpUWSDrlpapJEGJeSFUtCcSAUZ6EALwh5rsVaDze87r332WXvvb/WOfVv3
Lkop7YEthtVHSn3gdfAc7A6+L4GnYW34vgC2gu1Ja+tySs3gKcxf9h7uXVWV
Um0hpb8Yl7FnoZhSD1gNm8bcWrALNon5OvAWzvTTJzgAG8R3R+jcUvgpwN/T
LHaDJ7FWwp7zofsnYDdgTeY4bCP2/gKrwRHwI6wCe4fzs2AfuMy+eQdjZrw/
i9pLH6Ow7tD5J+BUUTFXfOe47+OY88NJeznmd4bPNfBdA/ZnjQfAo/DVi/US
uNy6bQNHs+Iey9K3JUlvfpc85t5dzsHZEC86L22e345xI7gbLINdSeOSNaKf
q15rAQ/AGvC9H6zPettj8Ejo7BXwA2yO+oHPs3R9AW4OxbMJ3GmfB0Njzm9h
Ta1QbHzrwywdO8FW5hvzd8ETobiOUxusVcH/syyNqFUTuN5asdb+57vkd/J9
h8GXWTnc4BhXFqT7IWt0xnXFPUsKumfY+fsUqttCVg+wF5pDuWdeH4F1joFv
euC38E2fQ/UzyvrNyvkrx8A6ZBydWPuG79fgUKgX2BNzofUf4O9QzfwJxcX4
WKdjro1KlmbsF/bJgDkEmw/dNQJecy6YZ56bT1qbDtX7V/B+6Nw98LZ7mT3N
up9ynXe4H9tDeeJ9N/1W6kcdy66vBvfEhHuHsRccP+9n37GGBnF+BnzrWBac
izdZfTjkGCru274Qe/xvqfH/ZSLk+3vIN/Wccd9RT+o443nqXute5PyxUP30
hmqacb03Z+3nSyiuSfAf2m3SWA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtks2LjmEUxs+rmSkbWZx7oyRKrK0UC3+DsrUgWwqhaMZHvhczQxEjHyPk
I2Mz7xgzI/PiHYUyyszCmI2GMorFoOTrd7mexdXze859P+c55zpn6aZt67fO
i4i1qAUdy4hLPK+io/DJNN9AR+D7aAIeRwNwN6rDQ6gTvoVewgtqEVPwvcKT
9x50Bd5N7HT4mz26S+wbvLotYhJ+SuwT72PoDtxH7H0rZ7z3wjW0gtzL0G/O
z6Ph6v974YecLyRXQaPwBmLXOetHm9M5lbuJGvAB5Qj3fBB+XVyLcozAH4nN
518t6AP8Od2bYrPwibQ3W9Aa+Dn6Eu6hDx5Bb8OeDcPT6Vx/eZ+Be6r6R+VP
WuKG+oXvpr2Wp/L2T7r3xWgObhT3ugg1i2cgL5SzC76Y7l0erNT8uPMLP2vc
H4QPpWcjD+TFQPFZGxqCx4n9DM9oQrnRuXBP6u0Vmgv33FQvfPO1uq/ZHq/8
70W75D2xJeT+QQ2P4J1VfafQDvhaNR/59wTuUA/hf+7TLlb+qD/Nfjk5ZsP/
fAFvT+fSjm2EJ9Nea2feqfbKH+3fmbTq1X6cTe+Ydk072wWvS89WPbTDq4pr
l4f9cDuabvWO3i6uWbWrpjH4QbGXulOHD6e9UE/7tTvpXVRPl+HHxbOUR8/g
C+ldkCc30zOQt/L8Dfw9vQv/ZwT/Ax7MpQ0=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.9065684644283141, 0.9283371016624611, 0.9909505035120365], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVUlIlVEYvWjPbGn+9xWkoIELI4zSKBuoRRMRzbvIRYvSjLQBGhZCBc2D
DS6iAjVfvWc0D9qgDaaJZkZFIUFaGWmgbX1B2Tl8J2hxOHf47jf/35+5rmTl
5gTnXDWQCOQnOTcDmAoUh50bDjm3CrwgcG4T7ueB5wOFWM8Cz9GaZxcgNwLv
CsHLsS/F+TLwT+j4AQyG7GwjUAJMxN0h8OzA9FL/YvB0vaWOE0Ad1ifBg6nO
7cN6dWDgeg24HXpbgLaQ6aLOIvDCwOwsBdd4k4uAywLzYS54PxDF+gh4J3AG
6x3gZsiNRSynEUs58Atvz4bNx/VAMVAFmQGc3wDfA0ZC/gG4BQhj/QwcBWoh
exQ603CWnmR6M4Hx2kec+V4J/g1OwNkfcAZ4KGSyfDsGGAc88Xb3wls8jOsS
eJHiylAuN8jXY8BBZ/n6kmr7LMhcxJtOvL1MHcBo6HzsLWb6eAZ835tP9d5s
0wfGVimfm4Fy3PWBq8EHmGvaC8wP+tOVajHyDe9izvZcP4dMK/eUZb3ZG4Hl
LCLZcvUAe6ERfB9ocFYrnlcAL6SH+qoDu68C98Cvz8Ao5jls+a4A1+sd37N/
a2XrJWLIgUyWt5wxV+ynmYHl8jA4xZsP07z5Sp9L1XeUPw7sDkz/FvlCedps
Vq/yW6jS3Tnw5MDesj5R+VKjPmMOS+Uj6xVR37Oea8F7A8vtHvAu2aX9gsB8
2QqOha3fouAY9k04P89+D8w3xhRVz9D2NvmzPbC6sr7XwfGQ9QP785S3vFZB
Z1HY8lwQNj/oz77A9jy/6i3Psf/6khxVH7Wol75CbgV0fpduzpNk9Rx7jz2a
qO8jQeth+XPX2/cyxZsu5pjfZ1z3lEuRjhniFOmO657f+Ttv8+81OA88CcgF
erFfAv4E/uDtrAPcL1v/Zhxj4cyjjXzZ6A5ZHJwRzD1jpK7b3mRvebMzIcn6
Ly5fWDP2cC/wLWS2+a4H/NSb7kZvd/3yoV+yfPPQW57q5CfPWMs+b7Y+essx
Y2cueU973dIzoJhylYcczaS45tKA5PoUX6JiTJbfrCFj5beZrTk2VrW84s1O
GbjBW67e6KxH+l4pL53efKXPbZpb7Zr5rZpNTZqLaZqTb73VoMubr+m6u6Wc
39F5XHn+N2czVCPmmfPmtfrhvbfzVtWvQz3wyFuP9yjv9DFbuUpWDzMvN73V
55pmKu0OKYaIvu18/XvzlEe+Y/3+AlqQFx8=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlGtoj2EYxp/W/OWbbc/9p6RQFIlyCKOIQtKE+EZtxA4yhxa+ICvmuFlb
EcrY2JzlsI3NeRsmyyGHTyOTpfBVSvyu7vfDVb/nvp/jdd/vO7KgdNnGjBBC
HspEHyyEKakQJqP3cEUMoZ74abQHfk5sHLmJ6CV8gNg6co1oL/wqWT8VvYXb
c0JoQ1nkslEZqmFuLdoBD2bOWOY+ZdzF+BHjNOMs9BCehH4PCGEE4wfwIeZc
YG4hmg3fITaQXAa6C9cTu0euHZ2Bi9B++AjKh3vN84uZ3wc3m6/9yxmt8EeU
yzgbdcPnUDe5HnQW7jK/yzDdWXuZ33UGaodfm7M8kJcHo3sjD/fBj83X6o2d
cDWxFnKtqAbelvhTiTZobTqEUcz9w/lVcC0anvJYE3yTPX6R60S74B7z2uh8
1aI8eu06yI9hfFJ3CO6BvGqI7r1iTfCx5D7NqAo+Ed1LxZSr4cyhKb9DAzyP
2HrdFc2HN0evrebrbffNvRyCnsC70Vfu8h1dhz+Z12Ip+mI+R3N1Rgc8Gk1I
eY+oV76Zz9X4GXwJ9bFXL7oIt5jXUj1zy/zNevsPVAdfM+d++WnumbxTjevN
99Te6vF+uI43DoI/ky+Cl6N/cCaxU/A089rJT/VWAW+uCN5z4+E8VAoXo4Xw
ZfO95IG8OBrda9V8O5yLSoJ/UzPhWdF7XR7L63fm35Z69I38IXaYXDn6meM9
U5n0+2p4TvSztaf23hI9pzVb4bnJeZvQdPiKeW3UUzfgNvN/gWrwAl4UvdZa
o7X5yX46sxheEn0vvXkBfDztvSvPSuCr5t6rZqrdquh3l2fyrjDt3srzavLn
zb89ffON8E7zWuubv23+T9G/ZQVaqbOT98vPsiSm3Bq0Fv0HkiC0Hg==
            "]], 
           
           PolygonBox[{{5081, 106, 5246, 5052, 5053}, {5220, 5219, 5236, 141, 
            5169}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9848821676571164, 0.9880164020627175, 0.9002051358249382], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNVV1MlmUYfsPxHXTK+zyd1upMZrQcttnWBi2wDdjAQ1G/j6WCgaGm66Cy
hH6QSsiANPrB8qeADWp6kC11mspnwWdA6yA+SzTLE7ZOatXsunZdrQ7uXc/P
/dz/9/3ck9vW2FGSJMkCaBmoNk2SncB64KN3JslWUDVok9dPgtpBW0CbjS2g
HO9ikqwH1kXts+b5CnQGdB502sj9cfBdA74FfAj6OqG3CjiDs2ZQwfzk/QXU
h/u9mSR5LiM9zdbdEYXtUfZttr03QpI0gHdPlO0XS+UL8WuvibX2cUOUz/cC
N4G+w91xyLhgG+hHAWeXQTOl4uW7WuvMWu+2qLh0AndExavNttGOf+NK3qXS
/+KY+198edaCN3XAJ4CT4BsFTZQqPpdBecdlEXQTdDjq/GDUnueM71Wvr4M+
jsKjwBrEphpUlZF/9PMsaGWiGngQ1A7aDtoBqkFungY2GMlD3rzt4fsq5/Hx
VDqpu2g7r9uORZ/Rtl99zvt+vBnA207gOueXvr4fJfvdqLP1ro0Zx2AadA55
KoMfXwLfDIrTwSC5Z6xnv+NyDNgDGsF6H/BH8K3B25+AU5aXdz5abMdolIxP
LOO0bW6N4v8gKv/kXedaIN6AHTnnkflkvV1xzbXDz174+wf0roX+5aByUFNG
e9ZuPd58Ad5BYL/t24J1Le7qMrJ7xH3H/jsUlcMh4B2gLtzfDuoZ6mIP8V0j
ZRubvF7rNe24GXR3KeiswTzsJa5fiJJTbxvaXOfbo3QMuFc/wn4B5weA3aBh
rF+Oyk8reDpAf9u+FUFxY8xusb9cn/T1WpC+q0HvKeeVqPsu1/DvQW9+CDqv
8duCY87Ys0Y+x9sTptUZnXE9CZoA3YW8ZGHXfanizvj3Ayuxz+F8FXC51zyj
vFOgk6AK7Dfi/H7gkaj6f8dzjjXPWAxHzcCmqP7nHKC/XYlkZh07xpB+/Vam
Xkys66Rtb8R+N47XpJJbtB2TvidfZUY+jYLeiDrri/L7hP2d9D3XW6Nq++2o
Pd+v9nw46z5ijbJ3hv1uxGcL1k8bX4uS+3oUD+8fyGhNrHS98ZxySlLNkr/K
FO+iZ8dA0Ow7FBQbxqg70QwuOKfzoDnQmPcXPaOJF7xm/jnP2Yez5ucMPxyE
R4B7gmpvLKgu2z33xv123nTFule4bhP4+KrnCedKFr704LgVuAH0EtYbgd8E
9dZUkK1znunjljtm2fPWN+c1dc2al2efBtXLOPD5IB8/C/J3yT5nPb84j2Zx
V8E+CJIx694bNbIXC+aZdrzHrO+xVHGoTjVH2Gsl7H3XHmtwWVTfsf+OBck/
CixPXdOp/K5wDfQF+TwIHLI+5vmSZ87PwBeDYt+Et8+mWvNsyXnl/znhfDFv
zCtnKuP3bVB9zQP/LFNdsb4Grfduz5lb7j36tNczZDFobhQ9a/nns1f5B/Jf
2+1cMqe3yzRT94H2J+LN+x+s9VxkXIY8k98D5oP66fugOj/lWi9a76ogOVOW
NeO/jv/rrkT/7krng3l5OFVMyz2321x7rMFdtrfTc7/Xdk77b6Js+tFjH3LO
VzP/91S8T9nXbvN96Hpj3R3wf81/+7z/X/7Dj6Sqq95U9Vpwrz1jmZT9D13G
klc=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFlsTVEUhrfS+3DfuGcfr20ML5VQBAkiqDlV2oYHc41VbdUYEhJRYqih
k9Aa2xqKNmlJPFBEIk2q0YqGIBrUFBIk4kGM3591H/6c7+xp7TXslZxTmFmQ
4JxbjfqgWOBcPzQPzY9LvAKtRJXeuYZE55rRcXg4Y6noTcy5HvSBscyIc+mo
B14WOjc9yj/KgS+id/AndBXOR8vhNagQnslZRdxjA0qDmznjG7Y+o2twLmMH
mNuDxsMD2JMWNRuytZ2xUuaOom1wFWPtzD1CdXAZaoFfoQvwydBYd7oMN2Dj
PbYW8r+Y/yx0H76L8uAizjzmzIZsFYV293y0Eb6EPsI9qB7OY81B1pagfHgo
WgovQ/0DsyFbHSgXXo/WRc2nJfCswGKxFaXDhxlrZu4GOgJvCM229mjvc3Lw
DLWg26icsZvMxcjHfXxz/O+Ed6O/3mKoWBajIfA+5k+xvgbthx1jI/hsQhPh
E6HFQj4eDe0MnVWMevGfEBpPRj+Ymx3Y3s1oGpyFNsbzK9/GoXy4AE1RbNl/
K2o5mg2vDK12npKTVfBPb7GUD3+81YjO0hlT4WLWZEfMhz2hnamzc9EEeC7a
Ao9Ev2J2R901DfVm/UtvPAO9hufE16smx8CnWdMatZqqhTtZk8raYagLPhda
LttQGf+N3mpXNdUE13vzpRGVwusDq1XVSGFgOVPu9Ab1FhcFlhvVywL4PHva
2duK6uAz2LsXtTudhasYa0o0nyvgam9vVWPl3mzIlt7Q2sDWaK1ysoP/697O
1pvT29vFmRkRi6li+ztmsVNNfIe7WTOduWnorXITWKy72H+J/3T2LI7aGy+A
LzDWmWg+yJfR3vZOQn3hJG+xUY9Rr3mnGorYHd7Dd7zV8lj0AK7gzO6o1bhq
/Y233GmP9i6M1/detASeEdhbUk5VC8koKbA3o7fTxp4U9mahF9563op4j1Ov
WxNabtUTTql3eOt1ioFioR6jXiOfa+ArofU65aga/hezuygH6g2VofUK+XAe
Phja27uKSuDRrMmJ9zv5ojvpbuqxH73FTLFTT6pgvsNbLcqHh3BGYG9P/qqW
VUOqJfWgbPgJa0ZFrIZVy7Ip2+oxh+Bn3mKtNY+99Xj1+kHsHRyX+AtjX9FF
b7lXjmvh0tB6ld603vbAuH35lAL/B5Rp7/I=
            "]], 
           
           PolygonBox[{{5103, 5102, 5204, 96, 5168}, {5185, 116, 5192, 5152, 
            5153}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9942365110757793, 0.9900808049062368, 0.6140579826083079], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
jw==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlUtslUUYhseWHvBXsXr+M+MGFTExWoRGgQIqeCtaQlEOliICJVAwEGkB
L/QiKSAtClGDVcGiQCTReCEuMIpR6oKQuHHjEuMCIWx04yXxQmt93rxn8SbP
+Wfmm2++25m8trPcURVC6Ebj0FAM4YcshO/RcfgNNAx/hQ7C1SmEw/AxVICr
8hDmcm4mulwMYR7frqkN4Xo0A36NMyfZewK9CnehPngP6oH/KXF3IYS9nN+M
rV6+7WNtP9oB748+exztg49E+/adfIB/4XwbZ9vRb/AY2om9PnQF64vxYTu+
vICWwDl3FFErWo4+kQ1sXUKfwh9G83n0MTwNez0F+zgK7+LbIdYG0U44w8Z9
3D0b1cAT0D3BMakWc+eEWsdkPjwTjV0bwn9oDnw1e+YF2yjAP3FHI3cNoL/h
s8S0lbXl6AbWB7hzKHMOlsCr0AzlpyaEfva/xO+3Mu/R3r3oncw+90fnTLn7
dSJ+wUejY3lGe+CXFePMZ3T2ADqVOYevw5e5oxffXkQj8N34dBe6gJ8X0bdo
uOgYK9bySb4No5Wcv5Jv9wbHaJzixfqbrA2iAfi6aNu70HNwC5qe+Y0romtG
tdOPuuGJ2JgfHMOr4BCde+VMubuJb0/xeRm6EZ6VHPtRNBt+PtqWak619zNn
Fhacg/PwEPoC376Uj3AXqmNvPWpl/4+89VzlzXp7mW9TM+/RXr1Bb1HNj4ef
QW2Ze+x9+P7kXknoAXgBug2uQ43JNaRa0hvHw2NF94rqfU3uGlQtyudL3LeB
b+srOVFu1qkHWG9Ca+FNybnfhv2NcFkxwVYXaoabcveyvmntyei3KgfKxdLc
e78mHru571jJuT2NjpRcs6rdflTN/neje0kz5AP4ce6czN23oIeSc6BcjKA1
rDckcwv726N7Xr2vmnwlegZpFqkmF0f3tHq7Fy2Fn44+qxw8AR8t2bdv0Hvw
Nr41srYAbYJv5T2reM9KlOB/K/2uGv8d/hN1wlvQYO4eUa9oZhyOnjnKhfac
g2+v2FuN7oCn5O5dfdPanbnXNLOmwR9x5jN8K2NvA/YW8YYe3tKNWjRrS669
U+hteFHuXmnQvCk5B8qFanQHa83YaM9cY6q1B5NrSzNnbvKb9fYO9Cy8NZo3
ok64Oflu5Ui52hy9Jpsd8JToWlIM2+C/So6NYqbYqSYVj3V6Y+6YK/bq8T3w
suRc6Y3l5DfoLZoJ1fBB9HmNY3IAfoQ99bWeoQ/DDbltK4azcmt1Jb51uWta
ta2Z/1jyjG+t9IR6Y3ruXGsm1MM3c8fJGt+puyflnhWauaP0Wl/0f5Fm6m44
5J71c9AfRfeoelU+Pgo3Jde2enhhcs6UO91xCF4fnWv1pHpzpGhb6nH9l1ZF
947+w/Rf9j+aNPVq
            "]], 
           
           PolygonBox[{{5092, 5091, 5158, 91, 5151}, {5125, 56, 5153, 5082, 
            5083}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.967283544082225, 0.9013018533794991, 0.32740317605407576`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
NcD/B0+x5lE=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlulvlUUUh6ctXbitt8u98041CLR+MDG2LIIKRmUTN8S0lKW4oQFKyiZE
KLRQqCioEDUhrW2RtoKiQgUFCmpFCiqaKJgiReM/YAS3oAEjgj6/nH74Jc87
58xyZs6ceYueWlq+JNU5txUNQIWRcw0x59aj1fBDwbn6POfWoelwi3fuywzn
xmB/FPtq2obmOzcEPQPXoMHwZ7nOrYSfRj30PYYWw/vR4wnnnkB74UrGGM1Y
t6IZ8Cw0Ei5BFZG1yTYCzYSP0mcefavRIbg8Mpv6qO8KtDFmMSiWv/ErJa5h
6Af4IutfxPoXoq1J567H5wS8Ld25DdhqGbMo32JaAX+P/b0c5zrRWa2HtvXE
0oBmwkvR0TyLcQG8AZ8m5t6CnoVXRbaXdagG/kh7xDrWoo/h06yhl/m/QUXY
r0OvwvXZzh2GO/BpLnDuNbQdvswal2Nfhi542wPtxW7UA+8INrb6vAEXMMYC
fBejP/F/RGMqFr5vhG9Hdcy1Eh2A99DnEH2nMkYL/D5tJ+POnUJXtBfBbNPQ
PjiL9Y9jb8crf+ABiilufa7q7PjuIxfOojEaO7LYalEXnELbcrgP/z7Wd5Dv
uQk74y54d7BcUZtsikGxtKF0+nu+58BPop+9jaGxelEq/usiO4tNqB4exBqn
O+tTiO+ayGKvQfvhqfRZw1l2ooVwOjoXtzMtw14VWW6eIZ65kfnIdw96GM5E
P+F/HmXBucx3D/Oloc+J4Uiws1qGuoPtofayAnXq7jDm2Jjdidnwt+j5HMtB
5eI2fBoLLEfr4GHoCGv5BJ3CXsl8s9B8VJW0nFZud6BB2FP53gFPZj152F/g
u5XvRvQc/Io333b0EtzuzdaE2ryNqbFvQaNQCZrNWJXoJrjDm69qhGpFjDlb
4UaUA+ej2pjl8L/e9lx7rxzYB7cRT1OBxdga7Mx0drrTa+F4ZGffgvLgv7zd
5Wr0I/wOfboKLIffhbMjm1t3KgsuDbZX3ehT3TfWXOEsJ5QbA5OWy9uJYRPj
DcHn6wyrEdl8Vwc7a52xznoK/s34tqCN3mqCaoNyaBp8PyqDi1lPBZwWLDeU
U8qt4eh4rp2hzvJBNCPP+jyg/IksVu2h9vKSt7uvGqZa9lhktVg5o9x52dvZ
taEXvcWgWLTGNG9tsu1EDd7WpLWpxk+EN3uzKUe2wHfSNhDbCDQJvjcY34zu
0/33FrtySLl0Q9JyQXtaDF+O7C6qJqg2/ILPvAzLmVLs572dndpk2xvZ2Sjn
e+F/uBfD+8e7VvUalcNlaDD8HT67cqymnYa/UG1y5nNF9yzY23McLYGv6b+P
qlmZ8H+R1TbV8EXYPwh2F/VG6a26lLC59IZchHfRdoD9OojehLtpS8E2AaUw
3uFgd1s1/kOddcLeHsVwQXXaW+1VzS+OrOar9ivHhsJf4aP3WGOegI8lrHao
rQfOYY6J8CSUDceTxopJsf3G+PMZqwr9Ct8WrFapBs+J7A3SW6Q7mBnZGWlv
tWeF8F34J9iLOLob3hls7xRzM3w1YbVD86m2eZTsrzmqPb97m1tvzh+q55HV
er0xemvOeavVWqPWOiXYv4Xe1HK4PdhbpxrwOjw5WK7pTuhuTNCbTCyFfI+H
3w52Frrzb8HjgtkUwyh4dLC3R33GwquC/avoH0X/KrGknZ32NAMeGezfRXey
BL4j2F7oDugunIzsX0A5dwb+H9GdOYI=
            "]], 
           
           PolygonBox[{{5172, 5171, 5092, 81, 5100}, {5095, 66, 5055, 5140, 
            5141}}]}]}, {
         EdgeForm[], 
         RGBColor[0.9040361616625245, 0.6571324476809501, 0.2416377598133348], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
3WD9XG+5fMj7sss8QB63er+Qwc0+d2Oz11v/Nlu/N3js+773gt7XkrjXOjmN
/c1UxHl+Ynmsnf0m/9bPfnSp+QzP8I3TzJdFllX2lraR5imxxa8Ee/Ihz8jG
INWPFowqjbh5uusnm78Tjfcbx2/EcTc7lrzeuZ76HNVsyxr9WxQjh1deDBrf
9VzwZ5LzElepvFkwrhB3BZylaWstXG0ExwrGpc7zk2dOo65nGjo9qxB8Ji7k
vD+wKvQanea+HPkdI3i8EPE854RuPodNdoz/Bjkotc9T2S2NuXuozPoeta3p
w448IbhMMNZ4L7ENYc4nPA9t3IGRx4bPJYWIL8D3g+vQAfa1sW1BiXWW/d6d
RP3XSeRSfrR8T7YNes/96P+TZQIcjJno342df4YH3A3X2x1sxbfGzzzYNvaE
/aYf+WrGDZa+P1oWsc4g7x1z97Jfw+/9Mwk5ezEJu1VlGzTHMjDb9pPf2K35
tgOzLB9T/U39PNu+l9x3jr9ne8z3haDt8GL0Z9xM95njfjP8zZrqZbfe7s32
mFn+nubvqcYz0zTU2+B5Xg+yhYxNE6RJnCXPEA2dxJu7BV3L4ox1r89ZDxwU
UwxXXZ1gSFnIQJNCxJ+fOkb6exLxNfe13GGSxxjoe/3vk9jjz5PQe/pPESwU
DNB+1ApeK49yYGn4r7nlcQ6f6P6M+311nLG5Q8BeECcTS29IAt96lccV42xy
lsoFzhWQM6g17azhDsHtXjMlOVK+uwl6sHZDT/Mi1VoLhbDFd3hcJ/OKu9oa
w52uf6k81gD971nWkLn6dbLutUmsbZ359gueyojJydc9VhZ2/SLzsZdp6Wn8
rAtc88wrZBN/xd5kvT98o3M968+SGjuiLO7q6/xNyd42cl/GfG+9/pX3GFzb
cvEeAxvCnS/5UHSZMc/Zn+JX/497AZUrkhiHrjc2PY2Nh1wvY+jfR9C3LOoK
9sH4nlVJ9PnQMjPFa53n77mGl73218uDL6+57nXHOgfsn/HFC90O7z4yndCL
PSvxWrO2b5yj6t8JkXtELl/3eHhAP/qwvibmXWOvlzmRla/tS3eVRq6DGLzo
OJF48y7LDLLTW/L61xLJSDHisOvqY/qyyDdivz4QrQNVTld5uM/R4AM/8sG5
a7jl/DH/7nWQHHe2XPexPYTvyNtg20byy7zjaaXy1SR0YZnKpf5+1fNC+2GC
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
/w/z/e09
            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{5063, 6, 5121, 5095, 5096}, {5101, 5100, 5111, 41, 
            5086}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8453338209509513, 0.3494611900018305, 0.19104502418084585`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
29rmb1eb8g1VXs5gber7IOkPV6btLAs4O4g3WDxwaD9pa4r9zEDTBvvO8xDx
+kt7oLzoN6A7VJz+5luuTahboy3nOHW3n7ocZ3lJPzNsNTPg7LrU12/luXY+
xrzsz3IOgvMQ19bkGYirAuYZknadfL/SN8ar0730CXyDunqF+a4WD3zaqpkR
nhowoybtOUa+2/q+nWngnCLd3SxHg/0Saw0na7eT9JE9pEU5OX/LnvO//Xxt
jsF2ks92+stJ+sRocXf2HVqkQ2Nz07b3ebOanPuwP4gPVgW0VKYbQ6c3BNwS
MCt4nlmb7zf6zjN1cEnrrIf3xPPtAXcHPNA6bfNohLeJRz0tznmYS5EfO0J/
N/W+oC7xwb1V3rfKc2vPRnFuaXZtxoF3l3nAW9A66aDr4znnVhp6iHBhxE+v
zbOMD8bzQ60T9x7lvd8QWvcZ3lmX8txj+gPyu1Fet1sueMMPP7i3dYb3tM7n
W6QDPucyONfPtxqcSTqvMvfHaFu6Rl/ZI2A7zmQFbBXwccBH9GPlWfZR2LA8
8cFtU5H62Np49MI5sc3ND/7I8my3Wtp2AW+UJr+WtmmtTIdvkf8oaWzCWTTp
DmMtqDRpEjdcXuR5tTTpkraZuMQTB0/ODQ2Q3ihxRvo+QHr9DQfIb0STsrxY
mjyGybef4WbicE6nePbtbm1yl7BAm7bRz9Hf+XV5Vu+Qmoxro/+/ZL/KPiR6
oD6g20ptRF7SwCn2iYwx6CMZY1Zbh+jj6Se+MY3+4WXpPmsf/ot9E/1ua/O1
Uo429gdttVFR5rOU+/7oIy9Alw3JcwdlJU/vsjz/3tF3nj+zv6bfph3kezL6
5Jtt/4i7wraNM1/01WfbX881HbzHrTuPtc6+nbPF7MstNGRvbp+63ENlr47w
CZ+/VieMa/62rf5LHfzheIV+erj9+DqN0c4Erc6NWddus46C95B53wo5Fgcs
bZ31mjpH3VtgvdtNvb+grL+a7zd5/el44RVxwF2ifRlrLbRMr2nnV7TnYnEX
SfM3++t/965rssyct+SsLuftKq1j29kf/20Z2liXsRlj/9Vc89/KOgX+drbT
xXHFcNvu1TyHw5j2Q9uK98pz/YZ1nNMdizPXmBRwkONzxun0ycwp6L/3NW0/
5xkHGY/uacPPqcu5x7HSPVY8aEyTJu/TnKMcL42pphXznFib+0Vb1OaeA/uJ
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
M8T/VLm+UsYvlGNRwGuFvN/t9YBXA14ppEzINrYx5f5aPvzfh71UznAUaX0n
fClN1lePcT32R2X8n/m/Vob/KQN64CwoZwgX6Q8/m+dT8Sk/bTr9Ff3WF/JC
3/QJHxWyzWScfHllrkt9ZXnBw27vaN/VbVtoY6BJ/047+W4hz88vKeQzeWiP
y/U9fI7390z/Udl/MM9idfmGfXXxzrx3mtBc4jv7ZYw92HcptR78rW8hYy99
rY88lyn728r0kXIskscSYalyvKUc2JOxfk/X7yqtt9SjUxvzW9X1GvMbt6db
5z7RE5HnsoDLA/4b8HjApT5fatoi7VUtvGZcX22BjE+YB/yNrVPUrZP9xm0d
63WJ7ceb+uEb+uDrPuOLLfmmsjT3sGZ6fpvv3f79fjbiHg2cJwt5fxj9P33f
DtZT6hM+xT87Higk7oM+P+b7/QGPKO/DAQ8V8pz5vcVvZj3nxnm3H7U5dfUK
eT5p3ofU1xPSe9i0R30v8iPPg9KGx15+X8FZfWyALfj2FpwH/PbwMZ8f9XtE
bMbe3uOmFe1XjHu5dd5nudD0h/xekHR0x/vlyveE9r7C98Xm41zABfF+nzq6
RxkeVA72I2dJC5oL5Mk3UuT/1vWKb4x7zns2uaf8Iu3whDzRDzI/Lw14LlCH
9yvDI9rtfvXIeIVxC3M15ivMEZkrzmhMOqc3Zlletjx8G8f3YHzHxjrwcmVb
4veUi33mG+elfivN95Z8i8k6yHWFPAN+cWPq+7TGXH8h7uaAMxuT18zGlPU+
5T+3Mderz4iwX7zfRF0pJP/vlYEzDFOU60H1Q1nnWoeoe6M8C8Ga7zXSubaQ
Mi5Vzn7KQtq2rg1/YTrlAudrebKe9LVr4fDfxvXkz9XTEn3gOvncrMzIWfye
cHnrFfS+1+ZXqavrleNGy8s7d+yR/r12xk7naC/sdmFj0ji/MWnMlTflvVpa
y80LDd5voJ1TT1fpy+D/xzzkv9K4vtIA/0J1jK6/UB+UY5514XLLjE77W5ab
pXejtG+Q52XKeqN416iDm/WPucpwrc/XmY+9MPbBjgo4NGCaz80Nj9T2l5if
/zXOLuR/oi5U9nOkeak4/zG8RDmKcfebp1inz7eOnSfNcwtZN8+V7nlN4s43
zwXyO1tayHOG+Wcaf2bALMNzpHGONNsWcm2+TtyzpDlDOnPMe64052mHq0w/
3Xj2X9mH5YzzOfI6uwk/aKwUUBNQXcj76bj3caI2v1B9QO808TeQx4a+zza9
aI8W4p4qvxninqGdCuLxbyfaeO6OPEy7YuOpAYcEHGGZz1KvPeWzgbRnSp8+
hfaRNuRw85Gff0o9Jh/+H8V/ufjPVS/lmaEvPK4PHGb5J1uWo5XpSGkWDOFR
FnBQwIHKW0wjnnOpV8jzUOkdLJ2p4k00Hn7T5ANO94D1lI/3CfKZKq9DxJ8q
PWjsLS73FPItIvcU7imPSabtLS3i9vB9mmkHCePlMVl5DpPPNNP3NG+Rxq4B
u0trD5/HireX4RjTDpL/ePPv3UT23U0r5plkvj2lt5PhzoW8s3CsuPDfxfzj
TB9r3G5N6O4mX+Z6JYW8O3FQwLBCfgewacCiGIcvDthBujsW8nkX30ebd2fL
M8b4CfKBB2cyOEvI2b6RhaTHevYY6YHPO+dASOeMH3sqnH9Bhk2UY2CEGwUM
lU9RB6RvHDDE59fKEn+w5SmWZaR5f/GMI3tYw4wbabkH+r6J9EaYd6g8NjEO
HrTr8OgvDuUaKT9oUR7+58M/Sfl3I355lH6DXH3lB/SxbJtIC17Mg9hTYi7E
+wBloq7TZlDfaWdoU86UTl9pgdPTtKHSLtLguXch9zM5+3Bbs8zT27TOAesW
VtS57k3eqX+9hPWN6yGfntKAFv0abSRtKm3VqeL0UI6NlIX2mXbuCvl2l24/
yzLIcnaTPmldxN1A+bqJN1C9d5VPT9M3UO6XQ4+dCvk/0S6GncRZRzqMnfgH
zsXGr2saeB2b6Kaz77S1Z1nOTsZD+0nbOv47uLYydZMn/8t8WX9H3pH6UT/L
QdpCZV1XPh2ENZWH8xz0gfSFaxtHGvvZxLU1vdbneWUZthGuKsu4daVLfvq7
1gFzyxJnJfFWMo5n+HJupWXA5fG+POB7vgcyvZi3xvwVAeW+0zfzf8kZ5qdv
qFTOlj63Nl+1ctaat5U44FLnaTfGiNNWPP6ZxD8fi/+gJuQ/eXXSLtIqlz5x
ZcpI39zcslUqG2m0bf9Xlu1brWkVxiHHzuYrKB9x/5SlfKMLK9rmog2u9j5r
7jf+syxlgV6p/Ep9/6MsecD/T0PyfcdZjICfbJPh83dZ7hWwfnFlZZaxVjpV
yteyCY/D5c/9x78I8CDuD59/NvxD3r+VJZ9/lOv3Js9/+P635f5H2j/oGz/r
J9/5vlyeP5Yl3d/F+aWJP/0ijT9M+0le/6h3aHOf8BXC5eb7Q9zfpf+T+rrC
9B+k951pvzQpK9/UcU8A/59+Pt6fs56yt8+Z848Cphh+KEw27r2Ad00r4pHv
g4D3Aw72+WDzLDXPMsMl5v/Q/O+K/07A22W59si5xdmeeVlq3jcD3hDvA/O/
04Tux9J+U5qs/81xTe9jcYrl+aCJbEtM43mR7+/I623L9IHP75r2ofiLzcO/
X/nPKv8sZB2RfUXWGGnbaNNo314XnzLRp76qrHxDwLlXzksuMe1N+bzbpNxv
moc2lf+qPS+8bNyr5h1hO/pS2Yp2lPDFsmyXaZ97+t5BvCWW4zVp8++2p/SL
JwKe9f1JeT5TlvlfEud5057yGRoLTXvWMi9WZ++oJ/q358z3hPjPSvOxgEel
hyyPG/dYk7gtPO/GmbUib/KwtsQ8gPnak8Y9Ip9H5PWaZ2c4l3OAdOExP+Dm
gDt857zPAcL+4t0iHue7Bot7u2VdqD0eFZc8x9Unz6Pr89zJg551IM8gaVwb
cE3ATWX5bzz++8u/8m4z7sayrPcXBVxYlvEDzX+774MMbzWNczQXe5bmVtOg
M0TZi3LfZNodxs8Xri/Lvu68gHMDLg7Y1/UZ1mlo32nnb5DGNdIn31XmnW94
s7zu8Jm277KybJtuMU9R99epjxuMv0XaxF1p3Dx53KH+hug3Ha1zt0vrJunN
NT93qJ9vmWg3aZP/sWy0m/9Rzxcq33/Mc7E0rpTOZZYB3Estx2XSvdg8NykD
+P8T51LTL5LfldJt7biE8Q119CLx0Puh+E7AYcrOv8vnlGU/SB/IHjV4swNm
qbd56on73fqb5wL5X2b+86RH3/Cj+jhL/DnCbPGQ5xz1cpFy8X62dInvZx7y
VwVMDzhe3FniX6TOrhB/tnn4xuIE84B7pvjHWPYTDI8SZ7o8quXR0vcjA44I
OK4s5yJ8u/pzReIcJx76nCatcy0fcvBdDt+kcAaI9KnSO9o8R2mDo5WL7xu4
t5HvTImfLN7xygf+sfI9wnzTLcuR0ieeeQ/95xTlA7+yLO+D7Cn946RVKd0j
5cNZ7z89o0hbs19Ztj1LbGPpk46Rx2HCFGU9ThrQuts1EcarnPFnPwo5af+4
r3mSZTtY3REe5POj8n3EMk0zjbacfoJ6yX71Gu473+087NaAL6Kf/zjg84BN
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
elaE+ccYaeJD+8lr9wi7B5wWdNarTxuP0+Z7+gw+c3rmF8wTWNNi3nSOZV/X
von/Avz7HwTu3WybOkSXy1yjYK2Cfov+i7EXY4/OjsPwufbqD5qdpcvZXcZC
u6tXcBrUJTplje71oNs66L/UJvOsozz91HdfbQAu64jMlwZalgHakHTmgawB
XqZsXZSVcdMs6Zzpcx9p9zT+w+DdIWT4oE3Oo6B/q3Q3lHd3n4mjraOdw+85
5815Z3y/jz7LmX6+qS/2IUcZHmkc/9Kmr6G8jMsoM/6O33fX1/F52pf3wrar
RfhuhGuix4A1SnMsfJVj81rP6nNmfw1x2slnY3kh76rK3Lc0+7QN5dlbXv2N
I22gMvezPAOk1cvn3rYBtAW0p5wrpm+kP3jfvps+/OgmOtjIfOTHx/GPf7/n
UN6VLVs747jDrH1pjtvaWy508K70OXM9uD51Nqg+dT7EcrSzHuN391oXFliH
9rRedHOMw/cytE97WVdpO8l7nXzXVIYN1E939dDd9z38Xpb/TLaN9zaWgbFm
B/NjR8qELd/Xlmv4vrplX9Ys04jvom2wyyMNeWfUfxsyvof+Ac1l0j0lwlMD
pjfLe/e5h58790+szO+2mFt8FGkfBnwe8CXrngH/C/jWuG8C5gd8HXCz9yZw
f8JaDRk3XxzWeT9Q1pGOdWeYj/TPfCd+c/E+Md+nPn8lT2RALu4Y5v4S7jF5
33KBR9t2YsAJxn1s/JfK/p00vjSta33id67P9C8s3wDv69gowjOUGxkvdx+f
ulRfmmOXttY35HpPvZ6gboc1pKwjGpL259Lf2LvghjaknO8pTw/vDeP+sOf9
l/FLEb4eaW8FvBFwRcBVAfO0D3zh3zPKMDPCbvW5x8K3FOyzvG0+8r/m85vO
2c9xjs05/Wvcl1kaaUsC/gj4M+D/AkpKk/YMbbSe/UiP+vR51mfqrYMN1oNO
ka1jSa7NvRy4iwIWN0sf47sO/KyzawLgTIv4IwKOZH8/8J4LWNgs7zjhv3nc
czKpMb+d3yfCGyLthYAbm2Ue8kK7bci0dcStVJ//S5jK97KV+W30PL+vfjjS
Hwo4tlm2jZdr08/sv+jH4De5MuXijqW/A0qjXN+73si642y/KZyhfNOUf6Jy
Iu9Nyvhisyw3cvIdRaO6QmdfaH9seYs+8o3lQ3ev6DsfWl8o+/OmY89Xm6WP
XG3aNQFd+DcSvt2QvG8Un7HNuIC9qpLGy8Zzn8zRlanv81wH4n9eNyk7dx8O
s23Adpu6xsNazzT1fIR5z1Wnh6qPo0yj/NjoNOsIdWVAQK+A/gHr1qdNutRn
vcPfaKseDB5/VqV86Iw1Qb79YOzNGPUZ28M1bB9fUyfohv6ym+ME7Icdm5Wm
T+PbhQj/Mo407vIBr1we9dqpnX0K9f3KwLs04D8Blxjy3so2gTy14vKObZZa
B9vZ5tOGNy/N719alGbdWKodV5EG+ZmzHGtf1UL8KmWlbiN7F7+t49vAcuUH
9x39Fv99R/ziOzhlylApXZ4LvjPXYcxOv91MeuRhD6zYDxDyfpv6ay4ec2Xm
D2eo2xJpvKW8b5v/FvP/KU4RtyCtP22H/k8e38mT/uBL3+mfGTszR2GswliE
cQjt5Dxt85n16XPfqSfYsK33xnB/DPY7QnuSjzb2OuvSlea53nbpeXGuN/4o
/Zy1uLnik+/igIsCLm+W7eep+vNblpnyvqmfopMR9heb1Wd9vcb6vFVD3r/9
dEPqrNj3LpUO9P5rv/9EhCc3y/pzijJep9xXW/55lmGh9b+FPoXvVBtWCfgF
c/air6PXjR1HMZ6aJ334tNFna/Ut6FRoi8vVaYU8ahzr0H8zPthA+zFGOlxe
R1j+ou5vD7ijWY430A3t21z1fIV5KpqUo5vfx/G9PtDTezco0yuuRbyp7qkf
tEWsYfbSD5vrt7R5tH2sb1/qGjP9K/3sZcZdZx8Cn7Mb8xuv2Y25ds269YEB
q9Tn+nz7+ow7NOCwZomzf7Nc475YXVGeQ5qlLpjr0l4eE3A0uqpPf+3l+OVY
07A3447jA1an/4twjfrcv6ae3aUen1evxbER9YlxN+NvxsX3xvsCdX2AsiM3
feiIquxHJ5lGPG0tfcQrAm3Z65Z7suU80PIg04D67IP7RzioWe4rsM9QWZ/7
DC3rsw1sbzv4gnRfVF7k/lgZkfUhy0/4oHwPkedq6gF9nKu96Ju+bsj/sn7X
kDY43DxTlZHnSytX2Bmci7TPFO0GzlOR/3fuA2/MunmXur5Xf72nWY6zLpX3
RG2N7u6zDOiCvR32QdgPudZxJmMy7hm6W7oPibvAvMTdafy9lh3/eCDgKP2i
qBv2jBgXjTIf+aF9rmMYxjL3SW+BuIz1GJfPcl+G/Ybi/tMo+Rwt3+2M20q/
uV2ZGIOxJsb44Cj982j1eIl6v9k889Xroer6FuPu1N6Mkxkj4ef4+MnyvkdZ
5qrjK+V1vPxOVAcnWPZbpAkdxhgz5Xux8tCu0P4y9nmvIf899VZD6uVOZf2w
If9T9Sn3k3uP2hZVmfca84/yv5abNWRbNlX69yozstPWtIvmZsMIf2jIf1Yu
i3CliAuXKolh5r++T32injEmPaAy/4HWtiTbK9aYDnKcy//D6BeK4/epjktJ
O8Ux3smOqQ9wjHuwOJOlu59xJ2lz8F8NQWKKWLKwTeZj7wDcNUtyPaR9SdoZ
OVj/fNO1tRfb5Poaz4vbZH9Dv8N84CP9gnyUBV30VmbSGDPy77ODlGmhMrzc
Jv97s1Nl3oc00raZNrpfs9y37G84wOfh3snE3UzEDzGtn+non7LS1kOrRX2m
l9tGDZce+IN8Pln9nKGujnQOstjyLZFuf+18ovRPMs8s690J1onp+td8faxY
n//13cb8P8RJjUkf2kuV4WjH2PRBfbwH6mTj4MX/iTesyP+Mcwcy39L21Nbs
A6Fb/iXEP2jQK3sH7CWxj/SSfseY+gK/3+Q7zifapO0/jfDnNjmX+ynCOY35
zepZ/H/AOSBzvK1tS2gj2uszq5ak3ev087aGKwfs5Xe4fI+Lz1DmV6wrbcU5
VD/Gb5HzRWVF1+CAS98ySftRn6hXDfKBb62ydFSe/fV9aK5mHGk7629jA0ZX
5vu4yrzHlvtsubue/yThr/xvr4204cfe92rqYUNpoOcG01srT6PlesF1TtY7
/x8bmgKA
            "]], 
           PolygonBox[CompressedData["
1:eJwtlmlsVkUUhudrsZWlLeX23sua0oKBAmWTRQGL7FA0IMawym4BQRB3RSKK
gMgaQUUT16gRf/gHEzGCGHBhCy5EES0gimyCCgiyuD1v3v54k+ebOffMzJlz
5nwlk+eMmJ0VQngb1ULbkxCO5IbwUL0QdsK5cQjXZ0KoQLXhdmkIHxWGsKwg
hCfgrdicqxvCRbQNzsOmH7ZVqDGcYFOKbTvUEG7E2EjmWrPW+SiEBvy+md8j
UAo3w6YK22moNLVP+b6EPoEjbAZn/E0R3Dj13CTsP2S+A2OLmHsSFcA/MPZq
Xghvomp4OFp2dQiL0QTm1/D9ac5zBj0H12KsS8ZnzoGLGGtW4DOk8BDGVhCw
5ag//AxjxwvtYy3ckrEH+PYF1AmuEzt2ikk9+DPWP5TrGCvWWlNr70Cr4Wtj
f/sy6gK3Th3r1agMbop2cJad6Bp4ED7W4msN6g/fyDed2Fs56g0vTu17D3oa
/pGYlxD75mgrvAflw7gPX8GH8PEOvtejI3APVIDvItQTfhwf3THuhUbBi9Cn
+N6CFsKT0XvMfYBWwX/wzb/4egn9CbdDuzP2WQ4vT20rHxPhtoytz9hGtl9H
3pvuZBs8MHbsj6IB8DFsNuB7Ff5+hsfh46n6ISxFl/ndK/HeG6GKxHvW3hcy
vwCegtbAa9FUeHfi3D9FTm2CW6JXWPsNVAafQsdZ7xg6CZ/WGHwG/Qr/pW8I
6BWNwRPwubK+19BavVA563dG81PHWLHWGY7CVan3UonGwr8n9n0B/QaPT302
+ZyU2ka2w9A0eHRq37qjx+DWifeumLZJfAe6i9fRWXgSMfwnyzWh2ijl99yM
c7gFfDCx7WvoAJyPz9r4jlAhXD81N9QYvD+xrWpOtdeEse15ztkWqc+gs1wm
RrX5XcYa81hrgfYHt2HsWXy9iC4q1olzXTEvUX2lfhvkU76/S2yrmCv2rVLX
iny0heuppgu85wK4Dvov32N5cIPUe1eNx6lzSLmkmtqY+M3S26U7awRXs8d3
2esG1BXupjvP4UyoIzxfNZ4dwudoHjymKIRi8pfrCQk8JnXuKUeVq8XYzMo4
5iXwSsWw0DWkWkpiv416M5vw/aXEsdMZ6qqeE79tqtnD8E+Jc+8yOg83T/02
6k3V27okda7ozdLb1V7vN3s/izonzmnltnL6ROIaUC2cRrvgE9RgafAbchje
knjuLPoYvpP9jubstdAMuApdBQc0Db499pzGNDceXSH//kZT4LvQAOZ6o1nw
TFSZ7THNzUb7sjw2B54a+1vl8GR4Yuy15PMO+G6tke09zY19J7qbrehR+B40
Jds298L3oenZHrsf7oNm4Gs66hu7p6i3LEUd9T7Hzl31nHK4bew59ah8OCIm
gVx6i/gW6T2K/Ta3Rz1jS1yGKuBl3MneQufAitQ9QL1Ab1AF91+pnpPlHqRe
1A29z9wm9azYOanc3Kh+qvqL3YtnoqaxJVbONYPPYXMpz2/0BbifYpzlM+vs
PWL70hpa67rYa6lmW8HD0Dpsn0fD4VvUv7I8NgK+Kfac9jwUHsIa+4nHQVSZ
WGL1xKHwIGya59pmsHoFOUYoQgP0Bbw3ci1pbGfkMc2ph32p/hW5tzVB1ZF7
onrjOjQAHpiYlfMd9B5G/i/SCp2BT0Zm5bhyvavqKcd3GCeucdW6xronrhnV
jt6ALuq/qDG2xagvnJP47vVm6O3YVbN/vQkHIqu4ph9r72OwOUysqtFo+OHY
uboZPQKPij2nGhgZu+eq9+o/2ZPw94lrX3equ70t9n+dJWgYv3+piY/WPBp5
THO6s1v13yX2WqqBB2PXtGpb//E2w/v4JqmJ/zeRVVjzvn0b+cw6u+6wT+Ke
q96rmNwAj43du3XGcaqV1P9NlPPK/f8BdnlqWw==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.817319, 0.134127, 0.164218], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNk7tSVEEQhqeWR9gaAjIzAt9Ai+vuwlnO7h72ALuKiKJo4QUQUAqVJyCB
AAJuT0JCTKwGamniG3DTAPy6+rck+Ovv6e6Z7v5n5tbMQnO+EEKYBh2gxGIQ
DINGZwiH8HgMIY9um28UngBN8Aecgt/gGTnX8BT8XLb5ZsAF9lP5LPcKPGF9
Dj+Et+BtsAP6wB7YBSPRfWn0uOVtgnusf8L34UT7q/B7cMQga/A+vgFwAFqs
v8JtuAd0Y9+BW5rD5mmDM5CDaWKXcNbpbLokirc1cz85r00veEC2+cYLrlFW
cHtC615it22+6H1Zf/3qw/q5C5c0SyJt6upnV9psq9+azrS7OtSMuWItaXyt
+zlX7Ez19qXvqeLmn6NeB7q9iB7bUc3Z6DmP4Gb0OqNwJn0butu66pTUj/VV
JrYBV6KvD3QfifLsjT0g9guehD+AY3pYNy1NC+yX8Kq9J+x3cIXcIZ3zSjmW
OyJ/RbqnBfdl0unfOlVeXVrl2lNVPJG2dWlVUS3j8o28hs7+UQyhi3/zvegw
+6Toe4akg+WN6S2YVpeqk6jOhWqVVecN87SZazH+f3+Po/+LsnIT6VdTP1X1
1Ke43eEn+mBb+FL03EH19Fl+iy/Y/6HWfPSzhqVRpvPG1GNNeqXSs6azUu15
a/+cc1bgb9LBtMn1Hu3PfNT92j0vgynsJfgviO2IWQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkTlOA0EQRUs93MCqhAQRQcARQCQGsS82O5hlAJlFstlsBOIGJJCQsJyE
hJjcCQkJR2ARAfiVfvCkN6Pq6V9/uvN6qZbMrAs64NDNipnZKNTxaXhg4BFK
+DBc4zcwgq/DF/4Jk/gKvOMfsIYfwRLfqsApPgX3Sd+cwQegB++DQbwC//gf
7OH90Js0E7OzrixPUHZliCy3UMR34Dsp0za+6soSmYfwC3gmywtc4Vvwk3Qm
x2uu3Vs8L+AHkGXa4diVKbLFu338xLVbDg28CdVMd1zic9Fn0h0b+JlrNmbO
oxt4S+psGX8tmHXyH1BrFdRpdPsLu65MkS3OLOJjrt3vYByfcHl0HF1vus5G
p1V83tVdZIpsbctdQ/s=
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[{5079, 5077, 5078, 5067, 5085, 5087, 5084}], 
           LineBox[{5438, 5435, 5436, 5437, 5439, 5440}], 
           LineBox[{5442, 5441, 5443}], 
           
           LineBox[{5484, 5485, 5483, 5487, 5486, 5462, 5463, 5464, 5465, 
            5466, 5468, 5467, 5445, 5446, 5448, 5444, 5449, 5450, 5451, 5452, 
            5454, 5456, 5455, 5458, 5457, 5459, 5711, 5461, 5460, 5471, 5712, 
            5473, 5474, 5476, 5475, 5470, 5453, 5477, 5472, 5479, 5478, 5469, 
            5480, 5481, 5482, 5489, 5488, 5491, 5490, 5493, 5492, 5495, 5494, 
            5498, 5497, 5500, 5499, 5501}]}, "0"], 
         Annotation[#, 0, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl1NlXTVEcB/DDsliSonu7adZARQkNlMzz8OTJPGR84sGreZ7n4a/wbi0s
FCKZPRiSDKUiCpmefO7y8Dnfvc4+Z599ztm/nVW9eeGmXkEQ9HboCAVBF938
oIfkxCBIDQdBRCaRQJgQcYxkNPEUU0gR+YyggDzGU0E5lfSJGI8y7Ub6akcI
EyIx2sc4RlPOGEoZyyhKKGYWM5nBbBZwifd85CKtfOANLbylmUZe8YLXNPGN
H3Txk++8pId3dPOL5/xmRJLvQB4F5DOc3RSylz3s4wKrOMoJqjnOMY5wiMPs
5yAnOc8ZznGW0xzgFBtYynrWsZY1rGQ1K1jOX/NcJpewnZ0sYhc7WMw2qthK
MkOIkESYRBIIMYjBxBFPLAOJYQB/PK+//CK/8olO2ungM1v0Z9GmPUymkUMq
uWSSTTpDyeCya1PkTVlLDTe4ynWuUcc9rtDAXeq5w21uMZ95zGVOdN1Yg9Pl
VKYxhclMZBJVTKCSCoooZGT0/5NPAbnRd4neo2ZKjVnCGHLJIZssMskgnbRo
jZHCQGKJoT/9orURrRdq1eMTHvOA+zziIQ08o56n1NFGxDyWsJEyOp1ropUW
amjmLe2h/3vAP9C3hzQ=
            "]]}, 
          RowBox[{"-", "1.2000000000000002`"}]], 
         Annotation[#, -1.2000000000000002`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0kdPFVEYgOFzCSRYKBGuSgvgQlcIKAv9G+6IOzewoEexbowrsbAVRbCL
qMCldzEhRhc2+j8gYCOY2AWfGxdP3pkvk5mcOafwWO2RmkgIIcbzjBBeMU1a
Zggbmq4J0RAuc4krnOciV2mimZydIeRywXWebtN8bdUCLWTGu/Zop9le3cfR
+JxZ5njNPAss8pZ3vKeLSfbvCuGNFmsJpRRxgIM0cpJTHOc0JzjDWW5wnTZa
aecmt7jNHUYZYZghxphgkikGecY4A/TTSR9d9BKjhyd085QWHvOIDu7zkHs8
4Bp3aaCGeqqpo5Jaqti0/r/08IcNEs1/a9AE5v3nSHwtZiN008s5YvRxiH4a
GWCQIbLJIjm+l2xnK2lsIZ1UkvjqOzs0hTXXX/jEZ1Y5bN9XNMpuct1nk8Uv
Z+wn63xgiR984zsfKfNcBeVEWTaL6Ji+4CVTGf/P7z/lqnCs
            "]]}, 
          RowBox[{"-", "2.4000000000000004`"}]], 
         Annotation[#, -2.4000000000000004`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0ssrJVAcB/AjrnsxpuR6bJCxMsXG24QxXjPerrcoSYQyG/JqqPHcW1nM
4z+x8k+wtWNDojzKRxafvuf3O6fTOadTPPMzsZwUQtgnGg8hmRgppHGYo0eE
bvWBjHHEHn/4x1/+c8Jkrv3klCxkgmHGGWGUdfMJOcYQ88xSkxfCtKyV1dRR
RT3faOYrlTTSxBcaaKWD77TRThed/GCIFvrpYZhuEowwyiAD9LJEHwssEiVG
KslE3tY66wG7/GaHbX6xxSr5bLD5dm/WiLJCFs/e4olbHnngnmPvfSfPueGK
a8r1y/hMKSV8Ip+z7BBeKDAupIhLdYWcY4w4p3oXRIzTSeUDGXwkM/7+H14B
yfg8aw==
            "]]}, 
          RowBox[{"-", "3.6000000000000005`"}]], 
         Annotation[#, -3.6000000000000005`, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0csqBFAcwOEzPILB1kQ2ClmwtpQoY2GjhtFYYMZl1gqRO7nNTDNCiFye
wYMoC8TWQopcv7L4+p3TOZvzP7HkeDwTCSFkuakI4ZZYNIR2Aq/2X5RZf2qP
dhCni056masMYVp3tcgOJXIU2KOGPFtcMFwVQoohkgxSS4IJphghyyTjpMnQ
xRjHnFLkhAOOOKRAiSuuOeeSfc7YJk83ObbYZIN11lhlhWWWWGSBeWaZ4dlb
nnjgnjveKXf2pmX6qxH90aCN+s0HaXMb5dd8BzRBP2200kAd1TTRzIu79fqo
LZqij4ro/z/+ASIJRXI=
            "]]}, 
          RowBox[{"-", "4.800000000000001`"}]], 
         Annotation[#, -4.800000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwl0D0rBAAYwPHHR8AxM9gsJgZS3jMgJ4uouwyOcgwGFj6AQecMBoM4zkB5
WWVhQHmJ1KUQislnuF8Zfv17hmd4nvp0dni2IiJSnFdHlKhLRPQxQC+DDNFC
B/100UMnrXTTzirFmoh9dtijwC7LnHHCKUccs8IhE7URGbbJmad0iyQzbLJG
kQM2KJBnnSs7l1xwS4knXnjgmUfuueOGV3655ocvPnjjm3eaqSTvthzzLLHI
AnNkmSZFhjYaSTPOGCP8+W+DfmqTTjJKVeL//2XUXT69
            "]]}, 
          RowBox[{"-", "6.000000000000001`"}]], 
         Annotation[#, -6.000000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5246, 5052, 5137, 5205, 5219, 5236, 5235, 5234, 5214, 
            5228, 5239, 5240, 5265, 5263, 5264, 5272, 5275, 5281, 5282, 5284, 
            5276, 5289, 5285, 5316, 5319, 5392, 5413, 5580, 5564, 5581, 5591, 
            5592, 5586, 5565, 5566, 5569, 5570, 5574, 5571, 5576, 5575, 5568, 
            5426, 5557, 5560, 5561, 5559, 5563, 5562, 5558, 5502, 5547, 5548, 
            5551, 5538, 5520, 5552, 5537, 5414, 5251, 5249, 5250, 5256, 5255, 
            5259, 5254, 5258, 5179, 5178, 5184, 5246}]}, 
          RowBox[{"-", "7.200000000000001`"}]], 
         Annotation[#, -7.200000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5247, 5248, 5253, 5238, 5257, 5252, 5262, 5160, 5278, 
            5269, 5271, 5270, 5273, 5279, 5243, 5274, 5283, 5280, 5287, 5288, 
            5314, 5292, 5317, 5295, 5323, 5318, 5328, 5324, 5333, 5334, 5329, 
            5365, 5366, 5364, 5374, 5373, 5377, 5341, 5335, 5349, 5342, 5350, 
            5351, 5355, 5356, 5340, 5290, 5294, 5300, 5303, 5304, 5308, 5309, 
            5307, 5244, 5247}]}, 
          RowBox[{"-", "8.400000000000002`"}]], 
         Annotation[#, -8.400000000000002, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5277, 5286, 5230, 5311, 5310, 5312, 5320, 5321, 5325, 
            5313, 5315, 5327, 5322, 5331, 5361, 5362, 5370, 5363, 5376, 5372, 
            5326, 5339, 5344, 5347, 5354, 5348, 5358, 5359, 5332, 5293, 5298, 
            5299, 5302, 5297, 5306, 5301, 5305, 5296, 5291, 5261, 5159, 
            5277}]}, 
          RowBox[{"-", "9.600000000000001`"}]], 
         Annotation[#, -9.600000000000001, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{5343, 5345, 5352, 5346, 5357, 5353, 5336, 5369, 5368, 
            5367, 5360, 5375, 5371, 5337, 5338, 5343}]}, 
          RowBox[{"-", "10.8`"}]], 
         Annotation[#, -10.8, "Tooltip"]& ], {}, {}}}], {
      GrayLevel[1], 
      DiskBox[{0, 0}, 300]}}, {
    DisplayFunction -> Identity, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0., 1000.}, {0., 1000.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.178927, 0.305394, 0.933501}}, {{
              0.2836032716723555, 0.4154153983865964, 0.939462158817074}}, {{
              0.47605998950508127`, 0.5855259715951768, 
              0.9518963327204925}}, {{0.7194978139826688, 0.780796427759961, 
              0.9726764760745906}}, {{0.9065684644283141, 0.9283371016624611, 
              0.9909505035120365}}, {{0.9848821676571164, 0.9880164020627175, 
              0.9002051358249383}}, {{0.9942365110757793, 0.9900808049062367, 
              0.6140579826083076}}, {{0.9672835440822249, 0.901301853379499, 
              0.32740317605407576`}}, {{0.9040361616625245, 
              0.6571324476809502, 0.2416377598133348}}, {{0.8453338209509513, 
              0.34946119000183024`, 0.1910450241808458}}, {{0.817319, 
              0.134127, 0.164218}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545458}, {
                    Rational[
                    15, 2], -92.04545454545458}}, {{-7.5, \
-92.04545454545458}, {7.5, -92.04545454545458}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.59090909090911}, {
                    Rational[
                    15, 2], -71.59090909090911}}, {{-7.5, \
-71.59090909090911}, {7.5, -71.59090909090911}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.13636363636364}, {
                    Rational[
                    15, 2], -51.13636363636364}}, {{-7.5, \
-51.13636363636364}, {7.5, -51.13636363636364}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.6818181818182}, {
                    Rational[
                    15, 2], -30.6818181818182}}, {{-7.5, -30.6818181818182}, {
                  7.5, -30.6818181818182}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -11.151660775234518`}, {
                    Rational[
                    15, 2], -11.151660775234518`}}, {{-7.5, \
-11.151660775234518`}, {7.5, -11.151660775234518`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.22727272727272}, {
                    Rational[15, 2], 10.22727272727272}}, {{-7.5, 
                  10.22727272727272}, {7.5, 10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.681818181818173`}, {
                    Rational[15, 2], 30.681818181818173`}}, {{-7.5, 
                  30.681818181818173`}, {7.5, 30.681818181818173`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.136363636363626`}, {
                    Rational[15, 2], 51.136363636363626`}}, {{-7.5, 
                  51.136363636363626`}, {7.5, 51.136363636363626`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.5909090909091}, {
                    Rational[15, 2], 71.5909090909091}}, {{-7.5, 
                  71.5909090909091}, {7.5, 71.5909090909091}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.04545454545453}, {
                    Rational[15, 2], 92.04545454545453}}, {{-7.5, 
                  92.04545454545453}, {7.5, 92.04545454545453}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -71.5909090909091}, 
                    Offset[{4., 0}, {7.5, -71.5909090909091}]}, {{
                    7.5, -30.681818181818176`}, 
                    Offset[{4., 0}, {7.5, -30.681818181818176`}]}, {{7.5, 
                    10.22727272727272}, 
                    Offset[{4., 0}, {7.5, 10.22727272727272}]}, {{7.5, 
                    51.13636363636363}, 
                    Offset[{4., 0}, {7.5, 51.13636363636363}]}, {{7.5, 
                    92.04545454545453}, 
                    Offset[{4., 0}, {7.5, 92.04545454545453}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-9.6\"", -9.600000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.5909090909091}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-7.2\"", -7.200000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -30.681818181818176`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-4.8\"", -4.800000000000001, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.22727272727272}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    "\"-2.4\"", -2.4000000000000004`, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 51.13636363636363}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 92.04545454545453}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"TemperatureMap\"", ",", "#1"}], "]"}], "&"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.936382434089074`"}], ",", 
                   "0.02271227003641799`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "10.8`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "9.600000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "8.400000000000002`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "7.200000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "6.000000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "4.800000000000001`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.6000000000000005`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.4000000000000004`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1.2000000000000002`"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.69375581627378*^9, 3.6937566210068073`*^9, 
  3.6937570284411116`*^9, 3.6937573593330374`*^9, 3.693757531645893*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pack", "=", "Developer`ToPackedArray"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"topol", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"Transpose", "@", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Transpose", "@", 
        RowBox[{"Import", "[", 
         RowBox[{
         "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\
\\FiniteElements\\\\elstrichapacomfurop2.txt\>\"", ",", "\"\<Table\>\""}], 
         "]"}]}], ",", "1"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodesAll", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<C:\\\\Users\\\\diogo\\\\Dropbox\\\\mathematica\\\\mathematica\\\\\
FiniteElements\\\\nodestrichapacomfurop2.txt\>\"", ",", "\"\<Table\>\""}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"nnodes", "=", 
   RowBox[{"pack", "@", 
    RowBox[{"N", "[", 
     RowBox[{"nnodesAll", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allcoords", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"nnodes", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"topol", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "topol", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"edges", " ", "are", " ", "straight"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVis1", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"nnodes", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "]"}], 
         "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeVis", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "#1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "&"}], ",", 
        "nnodes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Point", "[", "nnodes", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"meshVis1", ",", "nodeVis", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forcing", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{"young", "/", 
    RowBox[{"(", 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda", "=", 
   RowBox[{"young", " ", 
    RowBox[{"nu", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "nu"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eltype", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{
     RowBox[{"Assemble", "[", 
      RowBox[{
      "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", 
       "eltype"}], "]"}], ";"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"Assemble", "[", 
    RowBox[{
    "allcoords", ",", "topol", ",", "order", ",", "forcing", ",", "eltype"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"KE", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "2000", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"10", "^", "12"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"KE", ",", "FE"}], "}"}], "=", 
   RowBox[{"ContributeLineDirichlet", "[", 
    RowBox[{"KE", ",", "FE", ",", "nnodes", ",", "4054", ",", "4927", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", "12"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tol", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radius", "=", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radiusdir", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordy", "=", "0"}], ";", 
  RowBox[{"(*", "naoprecisa", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"newnodes", ",", "vecids"}], "}"}], "=", 
   RowBox[{"ComputeBoundaryTopol", "[", 
    RowBox[{
    "radiusdir", ",", "coordy", ",", "radius", ",", "nnodes", ",", "tol", ",",
      "order"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"Length", "[", "KE", "]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"order", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FE", "=", 
   RowBox[{"ContributeLineNewmanCurverd", "[", 
    RowBox[{"FE", ",", "f", ",", "order", ",", "newnodes", ",", "vecids"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"FE", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "FE", "]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"KE", ",", "FE", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", "=", "7000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deformed", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", "nnodes", "]"}], "+", 
     RowBox[{"scale", " ", "sol"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tabdeformed", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"deformed", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"deformed", "[", 
        RowBox[{"[", 
         RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "deformed", "]"}], ",", "2"}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshVisDef", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FaceForm", "[", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", 
         RowBox[{"Opacity", "[", "3", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"EdgeForm", "[", "Red", "]"}], ",", 
      RowBox[{"GraphicsComplex", "[", 
       RowBox[{"tabdeformed", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"topol", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
          "]"}], "]"}]}], "]"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694294086329054*^9, 3.6942941746720085`*^9}, {
  3.694294235065715*^9, 3.6942942358613157`*^9}, {3.694294290789013*^9, 
  3.6942942933942175`*^9}, {3.6942943505527177`*^9, 3.6942943884139843`*^9}, {
  3.69429443162606*^9, 3.6942944318288603`*^9}, {3.6942944701269274`*^9, 
  3.6942944703453283`*^9}},
 EmphasizeSyntaxErrors->True]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 248, 4, 31, "Input"],
Cell[809, 26, 555, 14, 92, "Input"],
Cell[1367, 42, 2330, 58, 192, "Input"],
Cell[3700, 102, 7660, 187, 552, "Input"],
Cell[11363, 291, 4255, 101, 432, "Input"],
Cell[15621, 394, 42893, 960, 1452, "Input"],
Cell[58517, 1356, 4684, 112, 312, "Input"],
Cell[63204, 1470, 12288, 312, 652, "Input"],
Cell[75495, 1784, 14933, 376, 772, "Input"],
Cell[90431, 2162, 4196, 112, 532, "Input"],
Cell[94630, 2276, 4847, 96, 372, "Input"],
Cell[99480, 2374, 4739, 107, 512, "Input"],
Cell[104222, 2483, 7609, 186, 652, "Input"],
Cell[111834, 2671, 7964, 194, 692, "Input"],
Cell[119801, 2867, 7087, 174, 772, "Input"],
Cell[126891, 3043, 2809, 77, 212, "Input"],
Cell[129703, 3122, 92, 1, 31, "Input"],
Cell[129798, 3125, 4030, 93, 432, "Input"],
Cell[133831, 3220, 9174, 220, 1112, "Input"],
Cell[143008, 3442, 122, 2, 31, "Input"],
Cell[143133, 3446, 6451, 170, 552, "Input"],
Cell[149587, 3618, 30150, 687, 2872, "Input"],
Cell[179740, 4307, 28721, 673, 2812, "Input"],
Cell[208464, 4982, 15162, 347, 1792, "Input"],
Cell[CellGroupData[{
Cell[223651, 5333, 3541, 110, 332, "Input"],
Cell[227195, 5445, 1789, 31, 31, "Output"],
Cell[228987, 5478, 1585, 23, 31, "Output"],
Cell[230575, 5503, 1872, 28, 447, "Output"],
Cell[CellGroupData[{
Cell[232472, 5535, 1612, 24, 23, "Print"],
Cell[234087, 5561, 1602, 24, 23, "Print"]
}, Open  ]],
Cell[235704, 5588, 4459, 85, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240200, 5678, 3631, 109, 312, "Input"],
Cell[243834, 5789, 1128, 22, 31, "Output"],
Cell[244965, 5813, 966, 16, 31, "Output"],
Cell[245934, 5831, 1222, 20, 447, "Output"],
Cell[CellGroupData[{
Cell[247181, 5855, 1029, 17, 23, "Print"],
Cell[248213, 5874, 1021, 17, 23, "Print"]
}, Open  ]],
Cell[249249, 5894, 2764, 57, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252050, 5956, 7966, 246, 592, "Input"],
Cell[260019, 6204, 878, 20, 31, "Output"],
Cell[260900, 6226, 672, 12, 31, "Output"],
Cell[261575, 6240, 846, 19, 31, "Output"],
Cell[262424, 6261, 965, 17, 243, "Output"],
Cell[CellGroupData[{
Cell[263414, 6282, 733, 13, 23, "Print"],
Cell[264150, 6297, 723, 13, 23, "Print"]
}, Open  ]],
Cell[264888, 6313, 3596, 75, 156, "Output"],
Cell[268487, 6390, 3598, 75, 156, "Output"],
Cell[272088, 6467, 1082, 19, 314, "Output"],
Cell[273173, 6488, 696, 13, 31, "Output"],
Cell[273872, 6503, 820, 15, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274729, 6523, 7914, 247, 552, "Input"],
Cell[282646, 6772, 728, 21, 31, "Output"],
Cell[283377, 6795, 407, 9, 31, "Output"],
Cell[283787, 6806, 505, 13, 31, "Output"],
Cell[284295, 6821, 632, 11, 243, "Output"],
Cell[CellGroupData[{
Cell[284952, 6836, 386, 7, 23, "Print"],
Cell[285341, 6845, 376, 7, 23, "Print"]
}, Open  ]],
Cell[285732, 6855, 2883, 64, 156, "Output"],
Cell[288618, 6921, 707, 12, 314, "Output"],
Cell[289328, 6935, 464, 9, 31, "Output"]
}, Open  ]],
Cell[289807, 6947, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[289924, 6952, 9854, 280, 752, "Input"],
Cell[299781, 7234, 84194, 1442, 586, "Output"],
Cell[CellGroupData[{
Cell[384000, 8680, 733, 12, 23, "Print"],
Cell[384736, 8694, 727, 12, 23, "Print"]
}, Open  ]],
Cell[385478, 8709, 511421, 8391, 568, "Output"],
Cell[CellGroupData[{
Cell[896924, 17104, 667, 9, 23, "Print"],
Cell[897594, 17115, 725, 12, 23, "Print"]
}, Open  ]],
Cell[898334, 17130, 610, 8, 31, "Output"],
Cell[898947, 17140, 38016, 628, 590, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937000, 17773, 271, 6, 31, "Input"],
Cell[937274, 17781, 258, 5, 31, "Output"]
}, Open  ]],
Cell[937547, 17789, 740, 18, 52, "Input"],
Cell[CellGroupData[{
Cell[938312, 17811, 28453, 779, 1792, "Input"],
Cell[966768, 18592, 192660, 3397, 361, "Output"],
Cell[1159431, 21991, 190812, 3357, 361, "Output"],
Cell[1350246, 25350, 175888, 3088, 361, "Output"],
Cell[1526137, 28440, 176352, 3101, 361, "Output"],
Cell[1702492, 31543, 194658, 3438, 361, "Output"]
}, Open  ]],
Cell[1897165, 34984, 9024, 266, 732, "Input"]
}
]
*)

(* End of internal cache information *)
