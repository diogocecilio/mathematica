(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    247113,       5153]
NotebookOptionsPosition[    243966,       5057]
NotebookOutlinePosition[    244311,       5072]
CellTagsIndexPosition[    244268,       5069]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"0.45", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.001", ",", 
       RowBox[{
        RowBox[{"0.454577", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.002", ",", 
       RowBox[{
        RowBox[{"0.459081", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.005", ",", 
       RowBox[{
        RowBox[{"0.472155", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01", " ", ",", 
       RowBox[{
        RowBox[{"0.492564", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02", ",", 
       RowBox[{
        RowBox[{"0.528701", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.03", ",", 
       RowBox[{
        RowBox[{"0.559411", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.04", ",", 
       RowBox[{
        RowBox[{"0.585539", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", 
       RowBox[{
        RowBox[{"0.607799", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.06", ",", 
       RowBox[{
        RowBox[{"0.626794", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.07", ",", 
       RowBox[{
        RowBox[{"0.643032", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.08", ",", 
       RowBox[{
        RowBox[{"0.656942", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09", ",", 
       RowBox[{
        RowBox[{"0.668887", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.10", " ", ",", 
       RowBox[{
        RowBox[{"0.679172", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.12", " ", ",", 
       RowBox[{
        RowBox[{"0.695760", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.14", " ", ",", 
       RowBox[{
        RowBox[{"0.708326", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.16", " ", ",", 
       RowBox[{
        RowBox[{"0.718025", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.20", " ", ",", 
       RowBox[{
        RowBox[{"0.731879", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.25", " ", ",", 
       RowBox[{
        RowBox[{"0.743463", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.3", " ", ",", 
       RowBox[{
        RowBox[{"0.752122", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5", " ", ",", 
       RowBox[{
        RowBox[{"0.779564", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.0", " ", ",", 
       RowBox[{
        RowBox[{"0.84424", "/", "0.45"}], " ", "210"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11.0", " ", ",", 
       RowBox[{
        RowBox[{"2.13664", "/", "0.45"}], " ", "210"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PLFUN", "[", 
   RowBox[{"epbar_", ",", "data_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sigy", ",", "H"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sigy", "=", 
      RowBox[{"Interpolation", "[", "data", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{"sigy", "'"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sigy", "[", "epbar", "]"}], ",", 
       RowBox[{"H", "[", "epbar", "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.694269326430642*^9, 3.694269428301469*^9}, {
   3.694269461846388*^9, 3.6942694847896996`*^9}, {3.6942695512054987`*^9, 
   3.6942695699165688`*^9}, {3.694269660548753*^9, 3.694269693267624*^9}, 
   3.694269833971672*^9, {3.6942701459225144`*^9, 3.69427018046449*^9}, {
   3.6942702532176514`*^9, 3.6942702869665813`*^9}, {3.6942704014071274`*^9, 
   3.694270582606491*^9}, {3.694270617741501*^9, 3.6942706354935164`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PLFUN", "[", 
  RowBox[{"0.1", ",", "data"}], "]"}]], "Input",
 CellChangeTimes->{{3.6942705081822343`*^9, 3.6942705100623417`*^9}, {
  3.694270597758358*^9, 3.6942706315092883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"316.94693333333333`", ",", "445.1144444444452`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6942705206359468`*^9, 3.6942705374479084`*^9}, {
   3.6942705774461966`*^9, 3.6942706018045893`*^9}, 3.694270640581807*^9, 
   3.6942706988641405`*^9, 3.694270985286523*^9, 3.6942711670169177`*^9, {
   3.694272072166689*^9, 3.6942720999722795`*^9}, 3.6942722915992403`*^9, {
   3.6942724741556816`*^9, 3.6942725230744796`*^9}, 3.694282935096031*^9, 
   3.6942829723761635`*^9, {3.694283255128336*^9, 3.694283309557449*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ApplyStrainComputeStress", "[", 
   RowBox[{
   "epst_", ",", "epsp_", ",", "young_", ",", "nu_", ",", "epbarn_", ",", 
    "flag_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "d", ",", "resnor", ",", "counter", ",", "ddgamma", ",", "epbar", ",", 
      "sigy", ",", "q", ",", 
      RowBox[{"H", "=", "0"}], ",", "G", ",", "K", ",", "trialstrain", ",", 
      "updatedstrain", ",", "trialstress", ",", "S", ",", "P", ",", "j2", ",",
       "phi", ",", "gamma", ",", "updatedstress", ",", "hardeningvariable", 
      ",", "Dep", ",", "qtr", ",", "Str", ",", "trSS", ",", "tol", ",", 
      "sigxx", ",", "sigyy", ",", "sigxy", ",", "Nvec", ",", "epsxx", ",", 
      "epsyy", ",", "epsxy", ",", "sigzz", ",", "lambda", ",", "mu", ",", 
      "J2", ",", "Mult"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Sigma", "[", "eps_", "]"}], ":=", 
      RowBox[{
       RowBox[{"lambda", " ", 
        RowBox[{"Tr", "[", "eps", "]"}], 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", 
       RowBox[{"2", " ", "mu", " ", "eps"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"G", "=", 
      RowBox[{
       RowBox[{"(", "young", ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"(", "young", ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lambda", "=", 
      RowBox[{"young", " ", 
       RowBox[{"nu", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "nu"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", "nu"}]}], ")"}]}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mu", "=", 
      RowBox[{"young", "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"1", "+", "nu"}], ")"}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"trialstrain", "=", 
      RowBox[{"(", 
       RowBox[{"epst", "-", "epsp"}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"epsxx", ",", "epsyy", ",", "epsxy"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trialstrain", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"trialstrain", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"trialstrain", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"flag", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plane", " ", "Stress"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"nao", " ", "funciona"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trialstress", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"epsxx", "+", 
                  RowBox[{"epsyy", " ", "nu"}]}], ")"}], " ", "young"}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["nu", "2"]}]]}], ",", 
             FractionBox[
              RowBox[{"epsxy", " ", "young"}], 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "nu"}]}]], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"epsxy", " ", "young"}], 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "nu"}]}]], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"epsyy", "+", 
                  RowBox[{"epsxx", " ", "nu"}]}], ")"}], " ", "young"}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["nu", "2"]}]]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"flag", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Plane", " ", "Strain"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trialstress", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"epsxx", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "nu"}], ")"}]}], "-", 
                 RowBox[{"epsyy", " ", "nu"}]}], ")"}], " ", "young"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "nu", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["nu", "2"]}]}]], ",", 
             FractionBox[
              RowBox[{"epsxy", " ", "young"}], 
              RowBox[{"1", "+", "nu"}]], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"epsxy", " ", "young"}], 
              RowBox[{"1", "+", "nu"}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"epsyy", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "nu"}], ")"}]}], "-", 
                 RowBox[{"epsxx", " ", "nu"}]}], ")"}], " ", "young"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", "nu", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["nu", "2"]}]}]], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"epsxx", "+", "epsyy"}], ")"}], " ", "nu", " ", 
                "young"}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", "nu", "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["nu", "2"]}]}]]}]}], "}"}]}], "}"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"flag", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"3", "D"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trialstress", "=", 
         RowBox[{"Sigma", "[", "trialstrain", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"hardeningvariable", "=", "epbarn"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"P", "=", 
      RowBox[{
       RowBox[{"1", "/", "3"}], " ", 
       RowBox[{"Tr", "[", "trialstress", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{"trialstress", "-", 
       RowBox[{
        RowBox[{"1", "/", "3"}], " ", 
        RowBox[{"Tr", "[", "trialstress", "]"}], 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"J2", "=", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       RowBox[{"Tr", "[", 
        RowBox[{"S", ".", "S"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"q", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"3", " ", "J2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Nvec", "=", 
      RowBox[{"S", "/", 
       RowBox[{"Norm", "[", "S", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sigy", ",", "H"}], "}"}], "=", " ", 
      RowBox[{"PLFUN", "[", 
       RowBox[{"epbarn", ",", "data"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phi", "=", 
      RowBox[{"q", "-", "sigy"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gamma", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"phi", "\[GreaterEqual]", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"counter", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"epbar", "=", "epbarn"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\< epbar  = \>\"", ",", "epbar"}], "]"}], ";"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"resnor", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tol", "=", 
         RowBox[{"10", "^", 
          RowBox[{"-", "5"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"resnor", "\[GreaterEqual]", " ", "tol"}], " ", "&&", " ", 
           RowBox[{"counter", "<", "30"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sigy", ",", "H"}], "}"}], "=", 
            RowBox[{"PLFUN", "[", 
             RowBox[{"epbar", ",", "data"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"sigy", ",", "H"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"210", ",", "0"}], "}"}]}], ";"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"d", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", "G"}], "-", "H"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ddgamma", "=", 
            RowBox[{
             RowBox[{"-", "phi"}], "/", "d"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"gamma", "=", 
            RowBox[{"gamma", "-", 
             RowBox[{"(", 
              RowBox[{"phi", "/", "d"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"epbar", "=", 
            RowBox[{"epbar", "+", "ddgamma"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phi", "=", 
            RowBox[{"q", "-", 
             RowBox[{"3", " ", "gamma", " ", "G"}], " ", "-", " ", "sigy"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"resnor", "=", 
            RowBox[{"Abs", "[", 
             RowBox[{"phi", "/", "sigy"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"counter", "++"}], ";"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Mult", "=", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"gamma", " ", "3", " ", "G"}], " ", ")"}], "/", "q"}], 
            ")"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<milt = \>\"", ",", "Mult"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"S", "=", 
         RowBox[{"Mult", " ", "S"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"updatedstrain", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"2", "G"}], ")"}]}], " ", "S"}], "+", " ", 
           RowBox[{
            RowBox[{"1", "/", "3"}], " ", 
            RowBox[{"Tr", "[", "trialstrain", "]"}], 
            RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"updatedstress", "=", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"P", " ", 
            RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", "  ", "S"}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"hardeningvariable", "+=", "gamma"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"updatedstrain", "=", "trialstrain"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"updatedstress", "=", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"P", " ", 
            RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", "  ", "S"}], 
          ")"}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "updatedstrain", ",", "updatedstress", ",", "hardeningvariable", ",", 
       "Dep", ",", "Nvec"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.694269032611837*^9, 3.6942692809470406`*^9}, {
  3.69427066650629*^9, 3.694270666666299*^9}, {3.6942713757498565`*^9, 
  3.6942713784280095`*^9}, {3.694271431245031*^9, 3.6942714363143206`*^9}, {
  3.6942715739771943`*^9, 3.694271579036484*^9}, {3.6942717707394485`*^9, 
  3.6942717723635416`*^9}, {3.694271875977468*^9, 3.694271929409524*^9}, {
  3.6942719867298026`*^9, 3.6942719884809027`*^9}, {3.6942720617550936`*^9, 
  3.694272062288124*^9}, {3.694282900335043*^9, 3.6942829075474553`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "210"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"loadsize", "=", "50"}]}], "Input",
 CellChangeTimes->{
  3.694270983179403*^9, {3.694271156953342*^9, 3.694271165945856*^9}, 
   3.694271618694752*^9, {3.694271789285509*^9, 3.6942718104937224`*^9}, 
   3.694271956428069*^9, 3.6942720056438847`*^9, {3.694272079731122*^9, 
   3.694272098699207*^9}, {3.694272134491254*^9, 3.6942722055303173`*^9}, {
   3.694272265618754*^9, 3.694272290425173*^9}, {3.6942724710165024`*^9, 
   3.694272471448527*^9}, {3.6942725029523287`*^9, 3.694272547216861*^9}, 
   3.6942732180112276`*^9, {3.6942829677058964`*^9, 3.694282971233098*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{
  3.6942711670599203`*^9, {3.694271390111678*^9, 3.694271400192254*^9}, 
   3.694271440078536*^9, {3.694271591779213*^9, 3.694271619249784*^9}, {
   3.6942717831851606`*^9, 3.6942718111077576`*^9}, {3.6942720653042965`*^9, 
   3.6942721000012813`*^9}, {3.6942721356823225`*^9, 3.694272206082349*^9}, {
   3.694272267077838*^9, 3.6942722916282415`*^9}, {3.694272472539589*^9, 
   3.6942725476528854`*^9}, 3.694273218972283*^9, {3.6942829274635944`*^9, 
   3.694282935129033*^9}, 3.694282972413165*^9, {3.694283255166338*^9, 
   3.694283309597451*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"epst", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
       "15"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"epst", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"epsp", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"hard", "=", "0."}], ";", "\[IndentingNewLine]", 
   RowBox[{"epsvec", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"sigvec", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"hardvec", "=", 
    RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", "steps"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
        "}"}], "=", 
       RowBox[{"ApplyStrainComputeStress", "[", 
        RowBox[{
        "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"diff", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"epsp", "=", 
       RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"deps", "*=", 
          RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";", "\[IndentingNewLine]", 
   RowBox[{"solpsx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"solsigx", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"plot1", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}]}], 
     "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6942706836452703`*^9, 3.6942706881335273`*^9}, {
   3.694270726861742*^9, 3.6942707710132675`*^9}, 3.6942708326297917`*^9, {
   3.694270894213314*^9, 3.694270898436556*^9}, {3.694270959789065*^9, 
   3.6942709602290897`*^9}, {3.6942711278436775`*^9, 3.694271154939227*^9}, {
   3.6942829229883385`*^9, 3.6942829249144487`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.694270713569982*^9, 3.694270725277652*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "2"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694270796916749*^9, 3.694270855661109*^9}, 
   3.6942709019497566`*^9, {3.6942709631152554`*^9, 3.694270963396271*^9}, {
   3.694271139340335*^9, 3.6942711518030477`*^9}, {3.694283139032696*^9, 
   3.6942831426669035`*^9}, 3.69428319400984*^9, {3.6942832501530514`*^9, 
   3.6942832507530856`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942707988618603`*^9, 3.6942708114145784`*^9}, {
   3.694270845466526*^9, 3.6942708567801733`*^9}, 3.6942709328975267`*^9, {
   3.6942709734358454`*^9, 3.694270986471591*^9}, 3.694271168233987*^9, 
   3.6942714462608895`*^9, {3.6942720831893196`*^9, 3.6942721004573073`*^9}, {
   3.6942721378954487`*^9, 3.694272209437541*^9}, {3.6942722722781353`*^9, 
   3.6942722927443056`*^9}, 3.6942724753327494`*^9, {3.694272505334465*^9, 
   3.6942725242655478`*^9}, {3.694273210776814*^9, 3.69427322153743*^9}, {
   3.694282930129747*^9, 3.6942829352280383`*^9}, {3.694282972505171*^9, 
   3.694282988439082*^9}, 3.6942831482082205`*^9, 3.6942831952149086`*^9, {
   3.694283255273344*^9, 3.6942833097024574`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942707988618603`*^9, 3.6942708114145784`*^9}, {
   3.694270845466526*^9, 3.6942708567801733`*^9}, 3.6942709328975267`*^9, {
   3.6942709734358454`*^9, 3.694270986471591*^9}, 3.694271168233987*^9, 
   3.6942714462608895`*^9, {3.6942720831893196`*^9, 3.6942721004573073`*^9}, {
   3.6942721378954487`*^9, 3.694272209437541*^9}, {3.6942722722781353`*^9, 
   3.6942722927443056`*^9}, 3.6942724753327494`*^9, {3.694272505334465*^9, 
   3.6942725242655478`*^9}, {3.694273210776814*^9, 3.69427322153743*^9}, {
   3.694282930129747*^9, 3.6942829352280383`*^9}, {3.694282972505171*^9, 
   3.694282988439082*^9}, 3.6942831482082205`*^9, 3.6942831952149086`*^9, {
   3.694283255273344*^9, 3.694283309763461*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942707988618603`*^9, 3.6942708114145784`*^9}, {
   3.694270845466526*^9, 3.6942708567801733`*^9}, 3.6942709328975267`*^9, {
   3.6942709734358454`*^9, 3.694270986471591*^9}, 3.694271168233987*^9, 
   3.6942714462608895`*^9, {3.6942720831893196`*^9, 3.6942721004573073`*^9}, {
   3.6942721378954487`*^9, 3.694272209437541*^9}, {3.6942722722781353`*^9, 
   3.6942722927443056`*^9}, 3.6942724753327494`*^9, {3.694272505334465*^9, 
   3.6942725242655478`*^9}, {3.694273210776814*^9, 3.69427322153743*^9}, {
   3.694282930129747*^9, 3.6942829352280383`*^9}, {3.694282972505171*^9, 
   3.694282988439082*^9}, 3.6942831482082205`*^9, 3.6942831952149086`*^9, {
   3.694283255273344*^9, 3.694283309824464*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942707988618603`*^9, 3.6942708114145784`*^9}, {
   3.694270845466526*^9, 3.6942708567801733`*^9}, 3.6942709328975267`*^9, {
   3.6942709734358454`*^9, 3.694270986471591*^9}, 3.694271168233987*^9, 
   3.6942714462608895`*^9, {3.6942720831893196`*^9, 3.6942721004573073`*^9}, {
   3.6942721378954487`*^9, 3.694272209437541*^9}, {3.6942722722781353`*^9, 
   3.6942722927443056`*^9}, 3.6942724753327494`*^9, {3.694272505334465*^9, 
   3.6942725242655478`*^9}, {3.694273210776814*^9, 3.69427322153743*^9}, {
   3.694282930129747*^9, 3.6942829352280383`*^9}, {3.694282972505171*^9, 
   3.694282988439082*^9}, 3.6942831482082205`*^9, 3.6942831952149086`*^9, {
   3.694283255273344*^9, 3.694283309887468*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942707988618603`*^9, 3.6942708114145784`*^9}, {
   3.694270845466526*^9, 3.6942708567801733`*^9}, 3.6942709328975267`*^9, {
   3.6942709734358454`*^9, 3.694270986471591*^9}, 3.694271168233987*^9, 
   3.6942714462608895`*^9, {3.6942720831893196`*^9, 3.6942721004573073`*^9}, {
   3.6942721378954487`*^9, 3.694272209437541*^9}, {3.6942722722781353`*^9, 
   3.6942722927443056`*^9}, 3.6942724753327494`*^9, {3.694272505334465*^9, 
   3.6942725242655478`*^9}, {3.694273210776814*^9, 3.69427322153743*^9}, {
   3.694282930129747*^9, 3.6942829352280383`*^9}, {3.694282972505171*^9, 
   3.694282988439082*^9}, 3.6942831482082205`*^9, 3.6942831952149086`*^9, {
   3.694283255273344*^9, 3.6942833099204693`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "3"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot3", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot4", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694270820748112*^9, 3.6942708238132877`*^9}, 
   3.6942708860468473`*^9, {3.6942709464863043`*^9, 3.694270965972419*^9}, {
   3.6942711437315855`*^9, 3.6942711478508215`*^9}, {3.6942829472197247`*^9, 
   3.6942829507699275`*^9}, {3.694283065545492*^9, 3.6942831315052648`*^9}, 
   3.694283183226223*^9, {3.6942832471048765`*^9, 3.694283247608906*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942708255053844`*^9, 3.69427086180346*^9}, 
   3.6942709349486437`*^9, {3.6942709755319653`*^9, 3.6942709874366465`*^9}, 
   3.6942711692280445`*^9, 3.6942714486080236`*^9, {3.6942720836773477`*^9, 
   3.694272100830329*^9}, {3.6942721393485317`*^9, 3.694272210985629*^9}, {
   3.694272277028407*^9, 3.6942722937833652`*^9}, 3.69427247639681*^9, {
   3.694272506421527*^9, 3.6942725253406096`*^9}, 3.694273223750556*^9, {
   3.69428293560106*^9, 3.6942829734972277`*^9}, 3.694283015273617*^9, 
   3.694283115616356*^9, 3.694283159147846*^9, 3.6942831979640665`*^9, {
   3.6942832564384108`*^9, 3.6942833108755245`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942708255053844`*^9, 3.69427086180346*^9}, 
   3.6942709349486437`*^9, {3.6942709755319653`*^9, 3.6942709874366465`*^9}, 
   3.6942711692280445`*^9, 3.6942714486080236`*^9, {3.6942720836773477`*^9, 
   3.694272100830329*^9}, {3.6942721393485317`*^9, 3.694272210985629*^9}, {
   3.694272277028407*^9, 3.6942722937833652`*^9}, 3.69427247639681*^9, {
   3.694272506421527*^9, 3.6942725253406096`*^9}, 3.694273223750556*^9, {
   3.69428293560106*^9, 3.6942829734972277`*^9}, 3.694283015273617*^9, 
   3.694283115616356*^9, 3.694283159147846*^9, 3.6942831979640665`*^9, {
   3.6942832564384108`*^9, 3.6942833109365277`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942708255053844`*^9, 3.69427086180346*^9}, 
   3.6942709349486437`*^9, {3.6942709755319653`*^9, 3.6942709874366465`*^9}, 
   3.6942711692280445`*^9, 3.6942714486080236`*^9, {3.6942720836773477`*^9, 
   3.694272100830329*^9}, {3.6942721393485317`*^9, 3.694272210985629*^9}, {
   3.694272277028407*^9, 3.6942722937833652`*^9}, 3.69427247639681*^9, {
   3.694272506421527*^9, 3.6942725253406096`*^9}, 3.694273223750556*^9, {
   3.69428293560106*^9, 3.6942829734972277`*^9}, 3.694283015273617*^9, 
   3.694283115616356*^9, 3.694283159147846*^9, 3.6942831979640665`*^9, {
   3.6942832564384108`*^9, 3.6942833109995317`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942708255053844`*^9, 3.69427086180346*^9}, 
   3.6942709349486437`*^9, {3.6942709755319653`*^9, 3.6942709874366465`*^9}, 
   3.6942711692280445`*^9, 3.6942714486080236`*^9, {3.6942720836773477`*^9, 
   3.694272100830329*^9}, {3.6942721393485317`*^9, 3.694272210985629*^9}, {
   3.694272277028407*^9, 3.6942722937833652`*^9}, 3.69427247639681*^9, {
   3.694272506421527*^9, 3.6942725253406096`*^9}, 3.694273223750556*^9, {
   3.69428293560106*^9, 3.6942829734972277`*^9}, 3.694283015273617*^9, 
   3.694283115616356*^9, 3.694283159147846*^9, 3.6942831979640665`*^9, {
   3.6942832564384108`*^9, 3.694283311061535*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942708255053844`*^9, 3.69427086180346*^9}, 
   3.6942709349486437`*^9, {3.6942709755319653`*^9, 3.6942709874366465`*^9}, 
   3.6942711692280445`*^9, 3.6942714486080236`*^9, {3.6942720836773477`*^9, 
   3.694272100830329*^9}, {3.6942721393485317`*^9, 3.694272210985629*^9}, {
   3.694272277028407*^9, 3.6942722937833652`*^9}, 3.69427247639681*^9, {
   3.694272506421527*^9, 3.6942725253406096`*^9}, 3.694273223750556*^9, {
   3.69428293560106*^9, 3.6942829734972277`*^9}, 3.694283015273617*^9, 
   3.694283115616356*^9, 3.694283159147846*^9, 3.6942831979640665`*^9, {
   3.6942832564384108`*^9, 3.694283311094537*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.694270863595563*^9, 3.694270873043103*^9}, {
  3.694273229187867*^9, 3.6942732304109373`*^9}, {3.694283165320199*^9, 
  3.6942831739516926`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxd23c8VvH7P3CrJWVTZBRlZ2bGfZOZvbdssrL3uK2KSoqMSpJC9q4UycrK
zMiOjMiObN/Pz6fe1+fx658ePU7nnPe4rtfTOfftrOUNLRsCPDy8aUI8vP/3
9///x/NSSuz4HQoMwwzPNgmeEPa//z7399+y2Isdc/3dnVwYrqE6X0o8tb/H
Bf4e18F2htUJDV4UwbBaboqR4Rn+/f8Sf/+/GbYhJkrKVhyLoeNqND6Os/h7
vszf862x54YKx82GZTHMr+Ien8TZYjsOrqfw93rXscEc/Tf1cUqYC0zXvpHj
HLHcB9dXxnAeXN8FO+C9z6nBooZJUKG+S4x1xdYd3E8Dc+rgfm5Yess4O1Yr
TUzysQAukmp3rPvB/bUwdAf398Q2Hc1897xUG/O0Yaz5BNYLy3wwHh0Mw8F4
vLE+BRXHGQ7rYaqtoijCPX2wbQfj08fQvf/RWk/hiz2v12aarG+AOUv0rEwp
xxcbeDBeQ8xH02azp3p+2O6d7wXUr40wwYPPzJiO+WM5D8ZvjPlBfj8tpdIf
G5q+hv9wywTjGb0a88EtANt/MB8zDPHQcLA1ayCW9+oxnZMq1zAfYszNjvcE
YmsP5meOMVN1nbUJD8Le8D2pXd9mjulijtSU4w3+O18LTFUNP+Pt/mDsZ+VT
geF/LDCsRDdeUYaEYD0O5m+JeUz1IcueHIdlYjr3SprZCrM/1Dvaa4HDthys
hxWmdDTGurUQh/VZ4WrbV7TGSNXmHLqyh8OyHKyPNeZoxNqI8NVQbHv9pT+V
bjaYSfOuwYz4UGzAwXrZYpZIeRQeDYdi2ZIxzIGPbTGCpCa9h86HYbsP1s8O
Mzv5g+6QYxg2xElJSbzWDsOwnhCQURCG5TpYT3vM3QKFyu2VMGwfRtt9Y84e
I6Vqw8F0KRwbfrC+1zEDn9qE+LzDsbyUpk/KqRwwIbj0Y9rl4djBg/V2wFgm
mXwsWAvH3pqyrfOUdMRwntmTcxOKwAoerL8jJrr1IUWdewR29J3rvICtEyb1
LeHLr4Vw3P/SDXa7FTg/aMLu9clYuH7K9gmPRxxw/9jZFUrTT2FofCd1CzQO
G8D4Y7+S0brOh6L50fD5k5GGhqL5K7oH8zBRhKL1KU4tJKpKxaH1q3v84cE8
Ow6trxsVR8s1wxC0/jWxb+cv6QSj/dHfnGTQwgah/ftKJ6imiReI9lfrMi5Y
o9of7X+76Zd8dZwfqg/VELpRNawvqp+W53akang+qL6UakoxqtVeqP5sPzdk
XQjzRPX5QSZ7AnPNA9WvluyuMRm7O6rvT2mN5Id2XFH9H29JjKouvYH64xU/
5iwu3Bn1z90s2qvnLRxRf+mpVDPWXb2O+k9rNePpkqQd6s/wBz/N2kRtUP+a
J+TZ4Ytbof5mpb7OGYe1QP2foGyimJ9ohvJhpIb/Yla5EcoPbbUH2rbDeihf
Zr+0J9of14b8aTkU/BinhvJJUWo1M+aPPMqvXyv59y3XpVC+5cq49ojQ8KH8
wxtxobow+hvzLx9FrS+0bdZzVv/LT5Vlhr0TuxLVvH/zlbG1NEwLK1fd9Td/
/5QImRL7qFR7/c1nAfIQGvtOzWq+v/mtHZN5a9RCt9r7b76PHSu+tfbLoNr3
b/4PdeKTFrmbVP9XhSWJ8/LljjSr16pd/3v8I+fgp1TKNxbo+P5WUp+zuRk6
/w/uS5KDuSG6/uJhAiM7cx10/67TzsKN1WpofLXne99+qpZF47e3Cvb2Dr2E
5lddeqQskWbj47/5f3UaDkkPFkB+eGVHShpgrqD1C3125r0ZRhWtr0KT4dPi
VG20/mpXzg+WpRqg/dGuXDr9LtUU7V8evRn3iLoF2t+i/tqW0XYrtP8ljzgc
v6vbovoo17pPPNFuj+rnLena6x/qjqi+PrQaKU21O6P6G5M1/73K5orq04KF
su63nRuq3wn8hri1THdU39Zjvlbr0x6o/qequAT/sHmh/rBPGSHYsPNG/fMz
4EHXRqYP6i9HI9kXm9O+qP9+if5x22LzR/3pTJstvW0XgPp3cc2EfCczEPW3
+1fS7zvTQaj/14prCnfZwI8PjeLYfUHwYzT7WVJrB/ihjk14/+JyKMqfi0JX
e956hqJ8ihDmEp0tBD+YK/pn3i+BH6yDkUnHBMNQ/s22n2Eq8wY/Luody/1W
AX7kpKtR9e2BHyturzflZcJR/ko0kqQvRIAfTIVjQYUNkN8BFsFhUUciUL7X
Vzu+iVKIQPnv8jzJov4m+DDg/FHYpB786CK4p+5BGImOa09OiD+Th/Of23Nr
SU6DH0RJWfEJYXD/QKqJURF6GF9gz/2kb0Xgx2V6eUYTeZjfrddPiXj7wY+C
q8pWbrbgR3dxBCvVEvghfW2e7Y4H+IE3xoajzgQ/gvC9CqnswI+tczVjlGzg
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
ChS3OCyAH1ekUjqiCyyr/w8onShb
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-161.96505929113064`, 715.5733637055414}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.694270873662139*^9, 3.694270937255776*^9, {3.6942709779621043`*^9, 
   3.6942709883036957`*^9}, 3.694271170077093*^9, {3.694271451185171*^9, 
   3.694271454121339*^9}, {3.6942720839753647`*^9, 3.694272101160348*^9}, {
   3.6942721414216504`*^9, 3.6942722135457754`*^9}, {3.6942722797835646`*^9, 
   3.6942722946594152`*^9}, {3.694272477358865*^9, 3.6942725262996645`*^9}, {
   3.69427322574767*^9, 3.6942732309329667`*^9}, {3.694282935933079*^9, 
   3.6942829743512764`*^9}, {3.6942831622330227`*^9, 3.694283200700223*^9}, {
   3.6942832574894705`*^9, 3.694283311930585*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxd23k8lGvcP/AhSpKQZVKYELKOXZZmrNn3fZ0Z+1hmBilRJkrqCAlJ1kpo
1a5CI7KkrOmohLSQJFlKkp7zeJrv9Xv9zj/n1etu7vtavtfn3TXXPVspNOdg
TgwGM7YKg/nf/////8VpF2eP/iNE2MpqyUh6LUf8vz9L//2zDlG1+/NAX48S
ASuQF14sa/z3usbf6xbEnpRmrdequoTt9IVrPjm2f/++wd+/70RsyTy6M0Sf
SJAcV/nFh3H9+3mTv593J0oP1oz6vzEjbCsIkJy840XsXrnfLoLiyv18iQe2
D6R5MK0ISpYnjDuiAojKK/e3+Xt/MvFV/B9FRxl7AjaJrOGWQyE2rzzPkbBl
5XlBxM2Uk6GygU6ELa6LTc1RwcSYlec7EyRWnh9CbOepvFd2y4UgpXzSTcsq
jIhbaY8rAbfSnnDinmv310msdiekn58bXjamEjtX2udBmGkeij+9lUrc5t7p
d9rDk2DesNZR5FU4MWmlvV6Ehmu6NYX7w4l9S2+viVR7ExIXtjdQhMOJiivt
9yEcm+0/pHQ2jHjw3DxHzqIvQTat3um2QhhxYKU//oSy9FLSQFUoUc16rSu/
bQChxsjyGadMKLFppX8kgsInDrvYUyFE2l5+l8ed//15T1G+2+qQv/0lEwTw
CWPdtGBiqw02KfUHmaAxg9kk8DyIGLvSfwpBOFzntoVmEFFKSrrCGBdIYLXb
nL11PJDYsTIegYQXZrJS1e8oxD0zSp1/LIMIHytE/A5rU4gyK+MTRCiyFGxv
SCUTux5r/6hnBBMyHsvMjXSSiIkr4xVCSNo9N5cpRiLKnybgkgpDCHyHht7P
1vkT+1bGL5SAVXdRX2vlR0yOtLLSbwoluLIedcr3+xCVVsYzjJAuizloGehN
/JfgErPwOYxQMMPbfnDek5i6Mr7hBMfPi6d/Hfcgqm30O3NHmErAny81GVF1
J75eGW8qoUY6Rc/mlSvxyMeQ5jijCEKBmWynTo4LUXNl/CMI6ZEv5KiezsTh
e/QvGiGRhBHrk2/CVJ3gOiauvyuAYgmfJ0rt+DhuQIT744qf5V85pwHPx1RT
tKJ/b4L2YRLDwjL4hVjs9hMlzLmzylRY7P6VNXEsnbivx2L3P9va5TzV1JjF
Hp/p34HThToWLPb4EUu+hR+ys2Gxx/cW673CQVtHFnv8BZQ8raMFXVjs+dmy
6tvrN5NuLPb84V4fjbJr82Sx5xd3U/pP3TkfFnv+lf95kK2c7M9i10e+uqKg
/RUSi10/hcXfX3JvprDY9VW4tulsfXogi11/JC5B6tJIEItdn77KU3e5F4NZ
7Po1/KLdNjgTwmLXd2RysrBRVyiLXf9+Peb49JNhLPb6OHVDbcukaTiLvX5q
pcRzZt6Fs9jrK9Mvw4scT2Wx1x+P/qkhq99UFnt99scXU5T3RbDY63dC4NFl
iakIFnt9+zoXSox5RbLY6//0vEinZEMki50Pt43KHPU2R7HY+aEjJ1OXxYhi
sfMlVirjPr0xisXOHx0zwz/i66JZ7HyyaOjEPbaPZrHzq8r86d6SjGgWO98m
3CIiu5ujWez8E6QXeib/iGax85F/eZVphyyNxc7PsLWVgd22NJba33wVSHqY
U0mjsXr/5u8Uw+VsyHEaa/fffDZ9pV+Fu0Bj4f/mNzX6RfLHezRW/N98z7Cl
hra00Vh7/+a/Lncx+WkvjfV/KkwbzJ9+f55zgMai/9/1h0bMn9mMAXRdX1il
7R41Gj6vV0X6w/E7Eu6vZ5irY50VAc/X6m6NytlKhfZpBv06/+pmGLQfv6A6
KG0RCv1TzaBsjBgIhv4r4/Ktb1KDYHwUb7Uf/LVEgfHbbvm71jSLDOMrN4if
/mcrCcbfeqTNvirUD+ZnFw++Xi/DG+bPDH9Kqb3GA+Z3p+fyaa9+V5h/Q2Yw
z8RPJ6gPuuPpL3OG9lA/YWWhT0TSLKG+SNPalTpdJlB/NUwenmt4fahPorF1
6tvDKlC/GG7+VyereaG+R3aa5oup48AP5p9DgtZpmuBHWcC4B8/cTvCje3ib
wzu8OfgxkOUR82jMGvyYLm1+4ujgCH5M7/HzZSm6gB9zDt+/qK12Bz+W5LOS
S996gh9cGAXBDfU+4AfPAOvsgQJ/8CNO/Kru48sk8KOwLajmHxsy+OF6eW+2
VzoZ/FgOxrd0JyI/XG+XZNnok8EP4cIDJJM+5EfDFTG+MScS+KHwVX4mNikA
/Ehnfmn9beAPfri270z5MuELfoQlF0k1Z/lAPhPnxC6WqHlDfhNTv/152+kJ
+a6Q61CjyfCA/E8P4HvauskdfCC9jf0d1eEKfjimBnkUpCNfMHjxO50/beHz
2RwVjlXVZnD/souU7f9uNIDnM8UtVu97qYz86J39/iVuNbSfVdCoezAUB37g
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
C2mtKEZ+XPU7mMkqRz4s/KaVNp2LYf0P95hf5g==
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd23k8VPH3P3BJsktKZQ8tlmTfwowle7Lvy9gZkhRJkq2SkCRJKYUsKZKt
iJE1W7YiESlSKEkR4vv5+eScz+PXPz083pl77znn/Xp278zsdD5q4kZNRUX1
eT0V1f/7+///c0I2LWHk0maCIKUhNuTdbuJ/fxb497McUbxjoq+7U5TAuema
V5qQ2r91qX/rWsTOiDqZd+LyBGG/+QLbRIN///7Av39vTGyIv6jqrkQk8I7v
W2SiMvv3++r/ft+CKDBQOOIwqEkQSnHknSy1Jnasvp42QWT19eyIocJ95y3D
dAmiOlfUWo44EsVWX1+fsH319Z2I/YErIkaChoQdIU5S5onOxLrV4xkRuFeP
50rkcr7qIeRiTOA1W6itO+JG9F89vgmBb/X47sSXdNlP04tNCfxiV81ldD2J
/KvnY0YQWD0fL+LJgmeMPLQWhOjM2aFlNTKxffX8LAmbCJbMMgfJxF0W7fY3
LK0IHf4UE28dMjFk9XytCZ/bTP/e1ScTu5c+FGzNtSEkq/Iy9xmSiSKr529L
sFjmjWA2IRPDM36tS1ywI7zWMrdTNycT+1avx4HQaky5GWhFJu7XozdjMXAk
TFo5EvNsycTa1esjEcavSeoNOpCJR4NYTOvbSQSyutxTVmfyv+t1Ioik+MSp
uZGJjfrbQyLnnAjtHd0N/p5k4vHV63cmUO/2dsvwJhP5+ASy1PhdCL6dkl7d
vmRiy2o9XAiVTHu6qP3JxJMzou0rOq6EBDa9dMkAMlFwtT7/+XlHardjEJn4
ql527vkxN4KDA4dP3Gky8fRqvdwJiTuqvJ6Fkol7bhD4Q1LdCQNRCa1j4f+p
x2r9PAitb2OTNp8jE8/66Ooq1XoQqE2KalSiyUTR1Xp6Erj3UJl5XiITewmm
/vMTnoRHiQH6ifFkYuRqfb0IRu1sORVX/lMfdvubpVvIhCT2Hq9PSWTiu9V6
kwkctyoSmFLIxAtj7nUnVLwJpLuN3DI3yUTp1fp7E+js55htb5OJQ0/9pqTc
fQhJdHqu4XdxPenWmZsvpb3g9xMkHnexNXjA68fWfaK3sXKH48dabVe799UV
zu/8pH7Q1xAXOP+osLMFUqzOcH0RW56MBd8lwfXPG7UdOO/hAPWZDZLJ44i1
hfpNp9/cnl1oBfWdbKK+IP/aHOr/adrrV+MfE+jP8PZOFyteI+hfYbhfZuc5
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
hD7s529vzV7xofwfkrlowQ==
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x-\[Sigma]y\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x-\[Epsilon]y\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-298.23525947329426`, 210.06236264974382`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.694270873662139*^9, 3.694270937255776*^9, {3.6942709779621043`*^9, 
   3.6942709883036957`*^9}, 3.694271170077093*^9, {3.694271451185171*^9, 
   3.694271454121339*^9}, {3.6942720839753647`*^9, 3.694272101160348*^9}, {
   3.6942721414216504`*^9, 3.6942722135457754`*^9}, {3.6942722797835646`*^9, 
   3.6942722946594152`*^9}, {3.694272477358865*^9, 3.6942725262996645`*^9}, {
   3.69427322574767*^9, 3.6942732309329667`*^9}, {3.694282935933079*^9, 
   3.6942829743512764`*^9}, {3.6942831622330227`*^9, 3.694283200700223*^9}, {
   3.6942832574894705`*^9, 3.6942833119385853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "210"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"loadsize", "=", "50"}]}], "Input",
 CellChangeTimes->{3.6942832700231876`*^9}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{{3.6942832575254726`*^9, 3.6942833119585867`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "2"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6942832434236665`*^9, 3.694283244207711*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.6942833120345907`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283312096594*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.6942833121575975`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283312220601*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283312253603*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "3"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot3", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot4", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694283238647393*^9, 3.6942832403354893`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942833132586603`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942833133206644`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942833133826675`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.694283313443671*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942833134796734`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot4"}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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

       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd23k4VW3UP3BRiDIrRCQVyRBFEueQzPM8zzOZp0pCypwhUeaxh0KkRzLk
mMoQEUlIikRJiJTE+/56s9Zz/fqny7Xd++x77bW+n/Y5p322nroO5GRkZB8p
yMj+39///x+/41mJ72OZCEesyR/OVQsR/+9n3r8/yxCFez8P9fcJEva1y20X
V1H8e1zs73ENYl9467ERYUkCZ7CNmEGy7t/fl/77+4bEJ9eiZR1PEgn8LLzj
DGSmf9fL/11vQeQdrXhv+UaBwGa4oDhVbU3s/XM+JcKeP+ezJYYIDF01ClUh
cOX3cbWetSce+XN+NQL3n/M7EocDNg5r79ck8M5VLuXxORNb/7yeNoHvz+u5
EvfYXnfis9Mh1FhUrlJ0uRJ9/ry+LkHs+fedhW5uxA7qfx7lPtAjiIUTpBR2
uBN5/lyPPuGZ4L9rE6XuxMB7tbRclIaEt1PGxpc1zhJ7/lyfEaFU/bA679xZ
4gHDHotbRsaEkO/8Q6RrHsTgP9drQrh5UX/NUsST2L/27h5riSnh9IXSmrXn
nsTDf67fjGCrcJNS44QXMaxgeUvyqjmhnHs+OCPKizj0Zz+WhMOZFo0zQ15E
EdXt+nTqVoSgq+PdkgLexJY/+7MmSNwNKr5yzpvoGUSn19ZjTaB+dUCrv8P7
735tCAmDH5t4OHyIT9XYgi+v2BCcAx6Tebj6EH3/7N+WIHG5hLau1ofIzc1b
JMdjR7jZUfyeitaX2PWnHnYE4V31V/TNfImBi4I9G8r2hNTjE0u5d32J+//U
x57gucQl+uWXL/F52/GVBm8HgjG3u6SUuh/xwp96ORK+hHfTXMn0Ix66ReAJ
Tnck9HyWu9M760fs/1M/J8LNgx2snDL+xEvuKionW5wIHzdsNZzi/YmCf+rp
TDBRoNe5/8af+Iqg5/PjszMhhtTN81sogHj5T31dCKxy2fVKIQFEEWaLjGoW
V8LN5FC+5J4A4sifersSSsP8jEf3BhIjpxxb/WTcCHPD54wPegYSxf/U342w
4prI59UYSHz7yOuLmKM7wXb9Yf0j+iA4bv15Q5GcF9dbDin1qR7D85u3JZhd
V/SH1ze9/+rDiLEfXJ9xDrcXn5svXL9hnNOq+0Uf2J/+uXsR/yZ4w/51HVfo
1vO8oD65t0PE4p09oX6ZoXRKe+PPQn1vmmab3at0g/qnHBP2Ig66wP1JpHsc
0bfqBPcvblrjli23I9zfqOY3Zd9O28P9j8g82xzhbAv9ERrwe5A13hr652cu
xysNOwvorwX9k2RepSbQfzPUpgLJywbQn+/qz+k+kNWF/q15J7ZSSq8B/V2h
4qOykHcG+l/dzk7SzfkUzIeXY+vDj+yCMD+h3V9/Sk4vNW7O1+wRnpFVAVHS
5vytmedJ+GwjkDbn07VIk0qs8Axpc347gzqMfA4qkzbne14wwb2uWJW0Of/5
y4/ekQtqkDbzwWuL40PlMi3SZn5MvW4PeLJbh7SZL9U1XM0fjXVJm/mT+LxC
hjpdj7SZT8+1w2YOjeiTNvOr1+NamyKnIWkz3xbMXvXZWxiRNvMvWtWMLjzb
mLSZj8vu7Bey35qQNvMzZpmBrZbHjCTyN1/zd8l9GLAxJ734m7+J5CXv5/It
SP5/8/nuZyUG6klLkuhmfofTSSYyWZMC/ua7XiPz+p4qa1LQ3/xPUxS3+EfP
hvR/KsxLM1a664st2ZC8/u9443Ra40R9ii0cn/TW+qHxCNc3pT1mf1xnAeev
UxuTH99qCq9fvfHbjVzTEK6voorrBl+aLly/8fPzwfEkDdifmmRtT5+uIuw/
VPab3JFOGajPKOfkM5c3QlA/MvOx+RiZqsbN+noV8OT5JgqBH51hjEcqC2TA
jznjjtMpBEXw48d89IJWmQb4EaZQ9PxKvC74cSXxym07BUPwI2bU4aLcLxPw
I4FfUZ/7vgX4oXry+o2QB9bgh7o1RdiXBFvwQ/Oqr7u5mz34oVM6YdSl6Ah+
6L3QO32S1xn63/BHi3DJbxeYD+O9xzjYXrvB/JgqFG6LfHAW5svClWVhOcET
5k9EWd7j/r9eMJ9HzVYnXArQj73NNeVM39GPYLaCKCNF9EPkgvTxzFT0o6n+
bdn4FPpxsD5hkU8S/Zg/o0bhEol+lB9kGi99hX4sHp6Mmj/kB/mlxt30WzwI
/VDvLZYNbEc/wmky1GrZ/CEfQ9LT+H47ox/d6tkdhEfoB9lc+cnw7QGQv0Wq
HYGtJuiHqsiXUMo76EewM4eh8irme3uz9kq0KuZ/LU2ifVc6+jGxYyhrx2f0
o/sGf4GGNPrRGe4llKqB69s9ax6OWeH5n5iTyR/yQT9aVZSfeUagH80SiYY1
qegHaf/QOFkJ+vGYgcdNpQ79qP/ttJzUjX74vbTaeNCIfnjd+8qsOIl+uEdf
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
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-171.7408581025338, 363.37253408666265`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6942832598466053`*^9, 3.6942833143397226`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
x5TGCfesHuQD4+37uIa+UOr/AbEahNY=
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd2nc41fH7P3AhIxTKSFYqIZUVJTnHyN5773kWSZERIckslZBklJUipCic
hpEkSkglKaNIVCRR38+vT+77c/36p6vr1Xmf1+t5v8/zcZ2x0SPAwpuRgYFh
jImB4f/9/f//Cd518dRwEi9B1o3x1lTtduJ//y3x79/7iDu6Jvqfd28jbGzT
YFfU1/m3rvBv3ZjYHfNQ6dUOFYJwhLuCdbrFv/+/99//tyG2pJ5U91ElEqTW
SQxxMzj8e7zmv8c7EyVeVw67vNEmCNrM6IzWuhG7/l5Pl7Dh7/U8iEel++Nt
o/UJIgXdIg+pXkTZv9c3JIj9vb4PceDwHxmzTSYEiakb3/M3+xEf/n0+M8Lm
v89HIm7wOOO72dOcEP2FyNuiSSIG/X1+C0Ity4G63/tJxEdsxXV5NZYEJYai
OBV9ElH8736sCNlk0ZoAIxIxpKKeQ4TFhqA880q32JRE7Py7P1vC+NwbwqAF
ibjFptM5y9aOUDC8KWedDYkY8Xe/9gQ9oWtOBvYk4vPFdxV8pQ6EVqYjx6Kc
SESZv/t3JLCtPLGqxpVEPFY4uyJ9wYkwGdv7Y8yDROz/ex4Xguuoj/4GHxJx
pwG71WojV4JuusofY38S8cHf87kRoj/rro+mkIgBoastmzvdCLPO58/fCFg+
rzshXn9L2HAQidhqKBgR+8OdwMM/Q+c9TCIe/Ht+D0KY9AJZ8wiJKCYmcUVD
3JNw8SMh/EAEifj4bx6eBJe796YuRf3n/F+3df7R8yKks0a1PIkhETf9zceL
ICQfwvjrOIn4tHnXj4YD3oTnuaUFW0+SiOF/8/IhpNfyFVsmk4hbswjiEdk+
BIXB+jVRaf/J429+voS08MzXpekkYhRFX1/1gS/hyPdrXD3nSMRtf/P0I3Rc
XyhYyiQR+wiWQfMTfgQX7qM5kjkkYuzffP0JS0dVFkwu/Seftc4XateRCDFu
kncPF5CIr/7mTSLcETIYvniFRDwx6vMweB+ZcHRtAeVhCYmo+Dd/MiGjcrvj
p6sk4tu6wM8KPhTCC9vJa2sqcL1bPuJ+3nM/ePwTDs4++XkfuP6jkQsT94W9
4fmbm7YxWGl4wv7uZd1ZN+LtDvsPG8uwmFznCucLulAbvtrFEc5PMu29LFds
C/l4MM09sZi2hPwcbvH9CN5jBvle7iURd6zUh/zPqpelB53XgPmwGT9/RLVU
gvnlHdSre/mWD+YbKOkysKJVgr48fzutSr159d305fvjbp3gM5UULfry/dNu
/jLq24IBffn++vy9I8NWyZwO9x/xGnXXhBV9+f5cSk7RXltgR1++fxlfUjfM
2DnRl+/vWN6tR8ZY3ejL93/87vNeNu/d6cuvjwQXVrPmRk/68usnMS5kr1K2
N3359ZVcNiZZeMiXvvz6S+2y5eU196cvvz4lF0RnxypI9OXXr9/c2Yts1ST6
8us7g6U4TbaWRF9+/e/+MzhiWkeiL/fDlUDdvKC7JPpyf8TT3zaebSLRl/sl
36pYo/Y+ib7cPw/TL0r1NZPoy/1UNXTv4I82En25v+Qur90k0EGiL/cbi1a6
svJTEn25/35I7Ltu9YxEX+7HltK1iUEvSPTl/lTax9ee1k+i7/zXryxaGrTy
VyT6s3/9+0P8/OG2QRL90L9+blfjf//+HYku96+/VRcbqn9/INEP/+t35uaU
ccFxEj30X/+PL8YdU5gg0f+rwvTeXPbCo4ZTJHrgf9ebBs3G3nrO4PqATMj3
73z+8PheZlb2eFVfuH7PYIaIgKs3PH/3bUmFklhP2F9neq3OnhJ32H/my+Ta
s1mucL70lPK3tcOOcP5kjQ62l9vsIJ+E2Qn5X8FWkF9sKYejSKMZ5LtYb8MW
tdoA8v8mkeHwIE8T5tPDd9V+jY8yzI/hfPG8q4wozNdM2vlQpJYI+OEV1n/b
RlYZ/FB7IbtqLFYT/NChfr5VMKMPfpQw9ilUVJiBH+Umt9hTfKzAj8rs80Mk
ETvwo3Y05JZejyP4Ua9glyqZ5Ap+uBFyFBjz3cEPD29O0QMRnuCHV1IE+5Ct
N/jhe2Pyu4miL/jh1+c01LDaH/ygLHU8lv2EfiiImdUGfEc/jNbYdsb/QD88
N/u5XFxAPwR6cyyql9AP7Xvfy9oYyNAvlwwDfN8wkaF/+gc4EmZYyNBPeT2P
OFeuIkN/Xc0tmRXgIkO/lecWa8pwk6H/jFRbvu1dS4Z+3NfHxG7MT4b+lH7l
GuO8ngz9Sr/60pUqTIb+Lb8emB8hRoZ+ztDfrJskQYb+lhn+Zpa1hQz9zjk4
2FgkRYb+Hyn4cKp6Gxl8cM5gbm3aQQY/BEXV3R/L4/ra+SeHnGz84fFrnjkn
fg7zhetzlH/OPXoJ/WCNj6xe8xD9YHLjassbRz/+7Ln4Wp7LDc43t9Vh+Lin
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
Y+5Aa1wy+vEjKFF9PBV96FfdTDQ8TaP/H+EGWyE=
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x-\[Sigma]y\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x-\[Epsilon]y\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-332.7947547499356, 210.08667862589573`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6942832598466053`*^9, 3.6942833143577237`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"young", "=", "210000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nu", "=", "0.499"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigy", "=", "210"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"loadsize", "=", "50"}]}], "Input",
 CellChangeTimes->{
  3.6942832700231876`*^9, {3.694283306007246*^9, 3.6942833065752783`*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{{3.6942832575254726`*^9, 3.694283314378725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "2"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6942832434236665`*^9, 3.694283244207711*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283284469014*^9}, 
   3.69428331447173*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283284469014*^9}, 
   3.694283314521733*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283284469014*^9}, 
   3.6942833145867367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283284469014*^9}, 
   3.69428331465174*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.694283257601477*^9, 3.694283284469014*^9}, 
   3.6942833146867423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deps", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"epst", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0000353745", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "2", " ", 
      "15"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epst", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsp", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hard", "=", "0."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardvec", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "steps"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hard0", "=", "hard"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eps", ",", "stress", ",", "hard", ",", "Dep", ",", "Nvec"}], 
       "}"}], "=", 
      RowBox[{"ApplyStrainComputeStress", "[", 
       RowBox[{
       "epst", ",", "epsp", ",", "young", ",", "nu", ",", "hard0", ",", "3"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"hard", "+=", "hard0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"diff", "=", 
      RowBox[{"Simplify", "[", 
       RowBox[{"De", "-", "Dep"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"epsp", "=", 
      RowBox[{"epst", "-", "eps"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"epsvec", ",", "epst"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sigvec", ",", "stress"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hardvec", ",", "hard"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "loadsize"}], "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"deps", "*=", 
         RowBox[{"-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"epst", "+=", "deps"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"epsvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigx", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"sigvec", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot3", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"solpsx", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"solsigx", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "solpsx", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Epsilon]x\>\"", ",", "\"\<\[Sigma]x\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solpsy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"epsvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "epsvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsigy", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"sigvec", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "sigvec", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot4", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solpsy", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"solsigy", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "solpsy", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Epsilon]x-\[Epsilon]y\>\"", ",", 
        "\"\<\[Sigma]x-\[Sigma]y\>\""}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694283238647393*^9, 3.6942832403354893`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0.`\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942833156147957`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.694283315675799*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942832857300863`*^9}, 
   3.6942833157388024`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942832857300863`*^9}, 
   3.694283315800806*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \\\"::\\\", \\\"indet\\\
\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.6942832587945457`*^9, 3.6942832857300863`*^9}, 
   3.6942833158348083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot2", ",", "plot4"}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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

       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011111111111111112`], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd23c81dH/B3AUWQ2JkB1SREJK6d6kkLK3IiOVkRESZRWRhtKklD2jVEaR
PcpOMjNKKYmGlfn7/Xz73vN6/O4/93Ef537OeJ9z3s+Hx/sSsXHRP8JAR0c3
sIiO7v/e///LQ/F+xMfwlRTDsQK5xCPx1P98Fv33+SlVpvF7W3OTFGXOJfrN
KZ7Cf+2b/7WXUZuCyhU6ZZQoqZul/ZZRqv99f/u/79dRK6+E7bRXplLSjIPD
f042/nte9d/zzVTRrscfLT+oUeYiR1vN3rZQGxf6U6ekLPTXRvVb3xZiEqBJ
0W+yFStL76BKL/SvRZlZ6P8DtcNrfoPuWm1K0rJmV+ngHmr5wni6lJSF8Xqp
a2wij4rZ6lFmxWO798l+pLovjK9P0V8Y/xP1NXNy/sNnBpTk8rbz89H9VOGF
+RhSZhbm85l6KusFmwCTMUXPdoXUM+YBav3C/EwoSQvz+0oVN64/dNfElDJN
r9F0zPMb9czCfM0oglfDuHjTB6nNM31ZXKnmlJS6rXxxvd+pGxbmb0EZ6QoT
kuL+QQ2MH6O/PnWQ4ifgIfZMa5jatrAeS8rV2xOSKoEjVNl9LIbL9ltRFCUu
ctta/KSWLazvMOU1/5E768Z/Ul28lxlU1B+msGWz8w1F/Pq3XmvKSF9A9GOp
39QqLZ4z5yasKdppJfyelb+pJxfWb0M5v7zh/jbrP1QhIdHEXcK2lOPLUwXn
pv9QaxbiYUt5kqrzoPTWKPXUb6n6eQ07iuiHUqELcmPUtQvxsaOoZDA81Kod
ozZUKE4Uuh2htK5aLrzi6DjVdyFe9pROzq8P3tFPUNfdpQifibKnXM+8LHT3
3gS1eSF+Rymf++ZjDilNUv2dNDWVy45SfDJ3Coq+naRKLcTzGEV9xb77X5z+
UlspBu6T349RXrKK8qcvmaKeW4jvcUpJVGWUS9wUVZbzUHTOKgdKZZkSr4LK
NLVzId4OlKdBnrcnW6epF77Yl3uoOFJYO/y5Ct1nqPIL8Xek/Ck1jgxcOkvt
yXf9sdneiVKsOrVib8osrZ3TwmmA53/b//v8sZPdhd/dZmj9F4br3nj1fpo2
/sqEUodr26dp8ztaoLDL7uEUbf4F75JWKzFO0dbH8YNnmMXhL2399ozh5V31
k7T4vBSYjcqSn6TFb8UWF7egOxO0+B7R7lM3mh2nxf+FvYGgpM04bX+W+1eM
TlWO0fbP7rZSTZ3UGG1/87NSYx9GjNL2f2n1Gu+TY39o58O297L2XvM/tPOT
Nzkvxlv0m3a+lnK4T39f+5t2/mzW9ze9Cv1FO5+5u4xTrv34STu/7ObVfnb6
P2nnu7zfI+3EiRHa+XfhMjNZtXWYdj/49qosfkH/g3Z/Kr1EnljVfKfdL9dk
RkvGm4O0+8ff9o013fIb7X5WMdfn6kp+pd1ft23ZduO/vtDuN7/DLY57Lz/T
7n91lM+rXcH9tPxwssbScUD7Ey1/CMyo8lzm+UjLL6+l11Vs/thLyz8DL7j7
H5v00PLTTv4elZnBLlr+ijybfFvdr4OW3751u/y6ztFGy39U6lat7oQWWn68
GUuXuH5rMy1/DjG8nvOoaaTK/suvByviTuQV1lLf/su/Mlr0t28MVFE9/+Xn
q+1bHrlylFE3/cvfdQErLt71KqB6/cvvBfPfCvTeZFO9/+X/Z66jnzl3xFH/
o8LP7RcsOk69qLIudv1Pe1HA1iAZNs+E4v+21+gZ1lqNHy7+7/M7Hk8oUIzj
aP2/0TeX//0hmza+W93W2vKIAtr82BPCs2tEymjzt+2bmlOYrqKtL1/QQSvm
XS1t/Usyh2oWtRI/Hu8Xc8/bTfyw+G7B4/yY+MF4MfKViADxI1Oyxu59GPHD
rIqBLXy8i7Z/DPbKTyi2xA8jhnypqQHiR3rTOz9DQeIHXezPpkxD4oehK7s4
SzjxI40i6W1bQvyYX6ZWUzjxhXY+DbqtBHlkiB+pj3zd3O2IH3NnbpfXRhE/
9Pc/Xb2uifiRsqbBIXAJ8WN2cLCwU4X4ofeCiWOLB/GjWY1js4YR8cNP+oGF
50/ix/pVG4Pjwokf76ZfZDZIED/8Pmm0zZQQPzbUvKffcIj40ZJtJ2UySfwI
iPpteD6S+CEdFOD3RIb40Xp8WUr3a+JHkN69JrYjxI+N2zZMb6UjfrQJ54nZ
RxM/zjHv1Y7cQvyQ+dl8qriJ+NHeah37A/woG9KszQc/pJt+qPuBH0u9rpap
gh/yWbM7l7QRP175bH1RA354tlIUI8APmTLOx4bgx/nO4JB14Ef7n4mDU+CH
DLuDfB34cU6si+Uh+NG6Q7vXHfyQNirO2QN+BDlvvswDfrQGJ9h+Bz+kY7iV
X4EfATmhK66BHy31U19swY8NA06FW8AP//nuSJYq4kfLaj2HLvBjw6Yyahb4
4aehuDoI/Gg+nPzDEPyQPM1bvg78OHstPGoK/GhOnXWtAz8kS13UH4IfZzv6
BE6CHwmfk7+Ggx+63JduyoEf03tdVVvBj+RThiNnwA+9lK33RMGP2TZ+zWrw
I4WFftwZ/NBX/hzH+Zv4MefwWicf/EiNfjRjCX4Y1F5LXaxD/Jif8TROAz/S
Npov0gU/UgvOHP4OfswL7Hmx5Tvxw9h/6aog8CO9t8W5DvxgUI2p4kkkfpjG
24vYgR+PFsv6ZoEfS2qHU8fAj3rR7XMi4EfqjvcycyuIH1YOR/KfeRI/ms8Z
8Ti/Jn68kf87uk+Z+KGyKW2xWj/xQ9ZT2KXZi/jRPqL0/tNKa5ofFl5mo16G
xI8ORTbOZeBH4ONv6b1XiR83uOzizMCP7/rNw6VTxI9dEarbpcGPmi9tZW/e
Ez88glc4+IMfQmIaKxTAj+pS/5yv/MQPd+vcg/fBDwG6EQZ98KMyRiKVCfzI
F8xK/gB+LB1+M6UEftgWfjlwHfzIu8QQO3SR+MF+UHB0L/hhI6WsHgt+5E4Z
RU1vJH6wvXH7YQR+HL57mfoY/Mg5lhrJCn6wbq34Ygd+WC3p21YEfjx/P3OJ
F/xYbMD+cxv4kaUcxXsU/DAXldx9A/xgZM1xKgE/Hv/afWsY/DBvbypaA34w
llh90wA/nqT8WOkFfhyM8N0RD34s8WaxbwQ/sq1uX521I34cUhfP3wB+MMs+
/WgCfjzl3sUeDH5YztUrZoMfLF8OWvWAH1VmXBVV4If5BSOVS+BHYMTuHF3w
I018ToYL/LBSD05uBz92j7cJxYAfSzf/vW0DfljvczyhCH7k2HxQY3YnfrD6
6qzpBD8OR5b8egR+PE+Xrw4AP1jLE2MMwA+rrtWeEuDH09Ewrb/gB/PSGZFa
8MNS/MRkDPjxVKW33g38YDbWT1QDPw6dKPddDX48CdmiPwh+MD1IkSwEPyxy
+eavgh9PGi612IAfTF/n0hXBDws6tyBmMeJHFs8n007wY7GckWwm+GGuWcUY
CH5YlbnnJYMfrKPGRw6AH8/Ftq/8A34cNhIqugN+sIUsctoJfuTkDPD0gx/W
AzUVYeAHO89jd1nwI1fjhlAL+GFz2rvWB/xYmnbwtDD4kddBlagEP2zZxJsd
wQ9+75V0a02JH+7tHWYnwI9q5fin+eCH4D3HpYwriR8es/JHdcGPGsuZ4mjw
Q7i4nG8A/PihyvfN7hXxY0Z0YPTZF+KHzp0xyjXwY1x4CVOnB/FD4KX51chq
4kc/f43Sna3ED1sW9nCHeeKHFf+roGBv4scP15UrGGWIH5r1L3vL9YkfTdY7
WBS7iB+nu/jiloAf19LPCPwQJn58+fr9uDH4sUPCIqeomfhRLXck8Ab44d54
b50m+CHg8q5uNov4UbmU3SMb/HDN2M13FPzg0/ItXgN+lH/Ltm+0IX4oqXmG
lIIflzivtfODH30fM6RPgR9bsqv9m8CP8MD+t1LgR68unUQI+KEozH+6F/wI
G1GqVQY/el4ZCN0EPxSuuLiPNBI/wg6FV2iCH93SyTwJ4If8TKnj3EniR/kR
Fytp8MPlwGyoGfjBpxieHQJ+VPDzdj0FP1wXJzP2gR/8Qwqyy8CPyuZS0+3g
h9tL3aBj4Ad/fHf6TfCj6qJTSyn44e4+NTcCfgiah0oKgB/Vu7j194EfJ9cn
+J4CPwQ5NicmgB+vJ4vqm8CPZTwHOVrAjwQHm5C74EeFZe7MIfDjTnObuyj4
Ud9S+fUL+BFoFWiZDn6ouTO/cwE/wsJ90lTBj+74oQAu8EO+wNLkK/gR+q5x
40vw48OQ6uIr4Ic84/OOw+DHBYF1T+TBjy7FuxeYGogfctpslu3gR4j9WYUM
8KPTb4TVH/yQu23dpwd+BGc154qBHx1Ve65MgB+yvbl2b8CP85Prt98HP9pX
3ONwBT82rl/2VRX8OLcr4BUX+NFm9vvGV/Bjo7ud40vwI+ji+11XwI/He65t
KgU/LLw8PxwFP5iSzS4uZSB+PGlVUXoKfhxkFu03BT+WbGO6Ngd+PDk+qJIA
fhyKqh/UBD+Ya7Jvj4AfT6dvqd0EPyylfX8pgx8sh6xiesGPZ5d3a4WAH6/O
6Pw0AT9Wda/eFw9+OFB644fBj+KHKbPbwA9uBjeTYPDD2Xbbk0bwo7Scno2/
lvght//G63rw429QidgB8ONS9HzoevCjfKKnmA38aGmcdC+vIn4YUa/rTm0h
fgyxfPq8m9eG5kdDYk+lqA/xY2qJlH67OvGjXS3q3jo94gfvfamj9p3Ej+LV
rHTbrhA/FDQ9aoPBj/CQTzwjf4kfvWX6R0zBjyi6vrbD4IfaAx5/LvBjWEVX
/A34cafrQo0f+KHqW+QmD34M8U6s/jpG/LiVJ/PqHvjxUEo+OwX8GJvSZlwE
fux742B6CPx4cDckPRf8GD0WN8cBfmhufaXnBH7ELOlIqAQ//rwfmxAGPzSS
OLR8wY97nhtjWsCP32qav2TBD/VVR9Qugh/RnwJu94Mf3mbankLgx9pdXTH7
wY96SYfq0+DH6RWTv5LAD7HJ4DXvwI+GHs499OCHT1XsCRnwQzxL9o4F+NFw
q7AkFPzw8dP6/hz8kLBvX/UJ/Gg8cHTnCvDDV3HsqAr4ISFw7poD+NG0mOPl
bfDjzFBMfzn48aou6WUf+HHdMWpjEvjBd8kl1gH8cBbn4JIFPzw1/EP/gB+L
/uRP54IfXCIlJ86AH2bK8nt0wI9M/cQ1ouAHg+Pq36Pgh8m5sOoq8CMjejom
Cvygf+bs6Qx+mNT2aFHBj4x+PVFO8INutmzyM/hhxLWlIQ/8SNuYkhgOfszv
4TtjCX4YWl7SlwM/Ur3mJBdLEz/mrrjOvwc/DJI/tqSCHylFhhlnwI/Z1sog
HfBD/+dWM1HwI5k5XXYM/JgRFmCqBj/0t13tigI/tOMZ7DvBj7/NX1YGgh8J
i2uKJMAPHcUsp1rwY+pIJK87+JF461Tlaivih26VxclC8GN6giJsC34kSYrV
MRcQP/TMmH0ywY+ZsCEJQ/Aj+UVj81/wQ//7s4AH4MeU0maLi+CH7t2pZy3g
R9JU6TIRf+LHjEX4MSfwQ7/QoDQX/EgV5OdftI34Meff76kNfqSWmj2QLyJ+
5IuV7Rj8TPzgXMOQX7mc+JHAK6Sx9yTx42Oou8h8JfHjiu70tIsi8WNT9E/1
fjnih8dYmF+GL/FjN0Njrcdh4ofC2Ej/fR3ih7qncXhsB/FjeERBzOMy8UPr
eZjlWvAj9vdk2iXwY0L22MTYW+JHUs73WFnwQ8dorUa/KvHj7x/z4TvgR8L1
6zcOgB8H5N4oM4Afkw30fTngR9yJbRccwY+kkDzuCPBj2ujd8UEB4oeO+M8C
NfAjYZRtxQPwY6psne3fYuKHTuTuHAPwI97GiiUT/JiS8z3IDH5o09/OsgE/
4huzGQrBj8kH9UarwQ9tl8EUN/AjdifTTA34McN0bR0n+JE0LKhHBT/03mf4
OIMfM4XKCVHgR1JidV0V+KF/2Xhi9CDxY9ajX1gU/Eg56L5PB/wwUKPzOAN+
zElduZ8KfqRy8le9Bz8Mp1N/LgI/5j8q8cmBH2lvKnZbgh9G2QbO4eAHfVTf
rTzwIyPQpfgz+OHk9nVHNvgRsE0i0wv8YFlxWGg7+BHraB8xD35s0dpGXw5+
PMxocwsFPx5X79OwAD8Y+woEZcAPs78yY3StxI9MjtiaZvBj8QbOuCTww0w1
2Ps0+JFpPqG9H/xYdPK4uBD4YRLeOf0L/MiIP/C2HPygLyhKuQ1+mLyT83cA
PzKG4o1UwA96Rm7pFeCHkUAowyfwI01xqu05+DF/wCkrFPwwsu8OtgA/0vx0
D8qAH3O3SjfThxE/DLIUWN6BH6lVST1J4MdskZzTH/Aj5ScX713wQ19kqmIn
+DGn1+3eD36kBpUKXQQ/DJ4m1cqCH/OfLp5uAT/SVrlI+IIfhnsMmoXBDzov
pYBK8CM9ac1GJ/DDuHW+nYOX+EHH3B+SC36YukUcfQF+PHprWsI4RPxYrCCy
Rg/8ML/5zeMe+JE1/qR+APxgMvWRlAc/LPJVg/zAD1tF7rxI8GPpZJLjBvj7
I4rqGXgM/Fh7kpnpojvxI4pLkHE3+OF5o3XZpDzxY+L7W2tLTeIHA2fcu7Vn
iR83ufVlBk8RP0aaW69IaBM/Euz29X5uJ35o9UiezrtE/PibsSisQoj4oTvo
3iIDfiSt+yhyB/w4my2ZSwd+rNM7fOg5+NE4cnuRA/jhe6XhfwkmfohvXKLb
HEr8aKjZOX4B/Djt4HVvB/hxbbFJrDf4MdDsPvoW/NgRf0V9I/gR4Z4WdQH8
+Lyr8kcf+LGd4yN1B/hxtXc28hb48TmLd+CnLfFD2V9RWQv8uKqtdzkR/Pgk
4Nw7z0T8UP4RKm8OflwuSAh5Bn783tPrtAT8iN544pYC+LGXa6bIGvz4PRP2
7Qr4cb9/NWcB+KFRm7jjG/jx56m8PTf4cT+65Opu8EPznE6+K/gx6vDh433w
44G+I3sN+LFP+a/i5Pw4Lf+NiVywEgc/HrBwhemDH1q/4rL9wY/xtk1dGeBH
bPErxg7wY8t2r8JC8CNk/QepIPBjQKkyai/4saHEl4XtJPGD483sqQbwQ8Bo
/5dIrH+ceFVgj/WPkE2R28APtgdxx9nBD+vcVdQe8COnIYQ7G+sfXyeHzmP9
g86xzAT8eMbz4e4G8INFTsd1Fvyw0izZ2wh+PLOWF4jH+odP4h9PrH9cX/1G
A/zITgt7uAb8WFI27TUMfhzsdD5QgvWPPz1rb2D9g11/yh7rH2LljdvAj8c7
tiSzgx+MRilne7D+4cxnmA1+HGbjNWJ1IX6w75ilfwx+5Dj1ZRqBH9b3Kyym
wQ/2+lTmWPAjd+7y873gh42su80Q+LH0sPHy6+BHfoRygRL4YVsiePwD+LHs
NwP3OfDjhehAqST4YWdQ41IPfggxW237Cn54HF8XKQ9+1LwZGfIDP0Sk8/a+
AT+8Lgc85EoiftQNa0wdBj9EdTkMM8CPXzZPLUbAj2hxteUh4IemjezDZeCH
YVSvy3s34seOUL3IqxXEDw/Zd67XNhM/vjNvZy23In40nZz7HuZH/NjPxJOg
dYX4Merhe6p4P/FDQvHeu83gR32WjzMj+LH9pvQiJ/Dj2ttonZZJ4sfAcrZ7
O8GP+xIqo80txA+NCo+oUPDjt20GVQX8iGbo//JrDfFjb+yay0ngxwjFQN4C
/LjbfbF9OfgRu7OPYgN+TCydvV4Afuz/wPOFG/x4mKGwzQ38GPfVvVQDfmhp
OfWIgx8P+EI3B4Afo9/igzvAj335RW0K4EdMaKfUVfDjj8mE3zfwQ3Md59vd
4EfMuIx4DPjx10Z8x4wh8SN+39Mj68EP7c27rhqDH1O8DXnnwI8E+kMfH4Mf
Ot8G2brBj6lGb0U28CMxj8lqK/ih9/BG6BHwY+aCaPZ18CPZ5XFnEfihZ7KT
8Qf4MbOzVoYP/EiWMDdVBz8Mln0N9AA/6MY902PBj/QPi1rqwY91+0pyq8EP
D9/YtZfBjzU9gRF64MczPrlZLvAjUzXreAf4wXx4piUG/LDwPpHhBn48jugN
UgM/GFP1zVaDH+Yl5bKD4EdW+xamQvBj8e+Urqvghxnrmqc24Eem6OUwRfBj
0fZ5K2YF4oepgduWTvAjw/ETeyb4QX/e6FMA+GF6ryrfAPx49GxbhAT4wVCX
bv8X/DD5LKBSC36kz17lfAB+0HEzDLqBH8YyHsVq4Ef63i+3VoMfdFamzoPg
h9GpN7sLwQ8jodMKwuAHve6hvgrwIz1g1xVH8MP4ifh2jlriB8NHlq854EfG
yuEbB8EPk91vdzGsJ34s8sgZTgY/HiVERR8AP0xb/DT+gB+LmWzH7oAfWVvU
43aCH2ZHpXT6wQ+WTUKTnGbED6trA3pW4Mfz31npaeAHm6E34zj4Yf2carUL
/MjlZsm/BH4s9W5a2QZ+VGbLt+8tJn64epZf+gB+7I/MqM5bRvz4VeM3sAH8
MOqZWt9fTvw4FcjWoyxH/Dh+Q2lG0pP4cemK92SPP/Fj9km+Y0Y88WOrOb2j
gxbxo3qdVf2FNuKHa5zKUfNw4selZcsCuMGPj1pna/3Bj61hQzzfmogfez89
2pwKfvwM/Nx2CPyIEhbwXwl+qBUZileBH8OHLtX4gh93ZsrcNoEfqtHTqz9b
Ez/G7/H27Ac/tJwUNyeDHw+36wXTgx+jrM5tFuDHvo5QqRzw40Fqgt8K8GPU
u7jJAfzQ1OgSqwA/YlZPnhICP/584aw5DX5o5MgKvgM/7gdrucmAH78Nj5aH
gh9i10vCf4Efdad1nguCH97WH7q1wI+1mo7Mp8GP+k1/5ZLADx+eCxbN4Ic4
HVcwHfjROBCXuRH88GnY1GYOfojnvqIPBT8aY/ZLPQc/zoR0GH4EP9adOOa3
HPx4azSevAP8OKNyvuk4+LFefOX0LfCjhf2hWDn4cfrPkEIz+HHcTTfmNvjR
nybBchD8yNlYe1IY/Khfvqu7H/yQMA/WSAU/fNwnBM+AHw0Xj49pgx9r4ztr
RMAP75cH4kbBj7rmIu8q8GPtkJxOFPjhvThB3Bn8qOPnnqGAHyKKoW9Xgh9e
B6ZSPoMfNUec/PPADxG/bqNw8MPrlq60JfjxJrOUQQ78EKpSaF90jfjh0ZOU
9R78eD3BE5IKfgitCD94BvzwkJzdrAN+VFNdWETBDwGzvp5R8OOkm0FOFfhx
jTOcVxH8UFFzqewAP754GJwMAD8iE5WEJcCPne/X1NWAH1+Z6HzcwI8bSv0S
q8EPyrHq5gLw49udjAAb8OPG64iNzCHED+qUR8cj8GNwg9kFA/DjpoWKwl/w
I4hnd6kK+NF6mo0/DPyQ6Wz2fAd+nNtxr0GIk/jRft9uvSP4sWle+lwO+BF8
eKyLvo74kXvO1zkK/LDeyy4iB7/fPbA4v8Qe/EiKtqC74Er8SNv5woYKfvC4
7Yr4I0v82L1Kc/huGPGD//NclUQg8SNvRtCON4/4cZnRN3rtPuKH+2y0fX8r
8YPP22c+5yLxw/q0dG25IPEjNyeaRwb8WDbKeuQ2+PGYp9A0APywyB2dUwA/
GI2lE79lEj8yR221YsAPs8joX/rgB8Pm5ttLwI+MRtadBeBHupKI+1bwg26J
SsV18MPovSnPDwPiR1qih6M6+DHvEfEqFvwwVMvgmBknfqRyVtsZgx9zHz/l
PgY/DLLnWdnAj9TANZZHwI9ZXaUnReCHvrDBYj7wI2XkhIkH+OFntcdoAPyQ
VG/2WwV+NMtYp+wCP/y4R5pOgB/r585MR4Mf7z6zir8GP/zr7miPTxA/pJ5L
eK8FP1ruPYvVBT8CzqvWnAU/pJwaR9PAj/cGloJt4Efg9iF1RvBj41oft83g
Rysrc7QV+HH+983yS+CHbMfaYfz/j2NCKts/gB/Vu9XiYsEPlZl1bPb4+90T
nSc3gB9XHll2DYMfwZVP1J6CHzNda9eEgB96Yzd/mYIfiUuZq6XAjylxn5g5
8ENn55BHE/iRYGyplQB+/D3RKHIK/NC+oDqpCX7EP3hWzw9+TOZKJI6AHwca
7/iWgh9xX1n1b4IfE3RnJY+BH/t5R+aUwY9YOeuWpeDHuGZzei/4oWWzJ+gp
+PHQJ9c0BPwYu75e1gz82JcezSgNfjwoW9o1B36MdfpnN4EfN75+4tAEP3by
Vr8aBj8GNTMcb4AfN30ieJTBD2q6R0UP+PG909Q9GPy4xa4iJAV+7FIRqW0E
P747M572Aj9ux3wT5wc/VBvq3paAH0PzT/yPgh93Nt2SXvqJ+BFSOpp9BPzo
WlvI/gT8kAsOtp8BP0K/HChWBz+61bn5IsEP+dTuk93gx0XW5Lr14EdRa7f2
IPjhEOXCEAh+2FgqGfOAH23RMtqDLsSPg8nz9fFlxA/J1PjEFzLEj66rF2vE
7tsU/w8aW4ia
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-2635.791327942683, 116562.4671554915}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6942832598466053`*^9, 3.694283316656855*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
PjhrNQ5PhO8g/h9sXgmU
       "]]}}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxd23k8VV33APATQkXJEJlDMidTptxDktnNPHfNXJ4yJZV0k0rxRFKpFBFR
HiQVHtU1hiRKEjJFKQ0qSSV+vV6vtT6//ulzPtu955y911rfu/c+Z433Tls/
FoIg3rASxH/+////IjUvpgwl8lIIEfFX159Ik/89lpo/VidV2sa6nrYrUgi5
fzoWVW2ab1ebb99MtsfVafSobKQQ2SM9jg9M5/9eb/7vrciGE8cM/HVJCuFc
6e/ovG3+80bzn7cjpXpLhjxfGlOIvoPbF1k5km1z37d1/vucyVj5riNODDMK
4WfmXGjoRirNfb/F/Pd7kN1RswpUaWsKEZWQryhCI+vmzkedP58XKeJ9KkDG
ZxuF0Hkvc/C0Nxk+d37b+fP7kE2cVyuyyuwoxG+by50r/EjJueuxn78ef3J3
ceUyMXZHCsG8KaZ0PIBsnbs+p/nrCyTXOrZ6nHNyphCHBM8fZKOTMXPX60Ih
hF/znDGik0+nB4sFClwpRKah0sMtdFJh7vrd/nyeqrvIjE4ezPm2KPWnO4Vw
UyrSsqSTXXP34/nn+vuOBtvQyfXmS+yXW26nELf9HmTa0snaufujUYgT1SFP
HejkzujldvWtf46Jz7vZXejz9+v1p3++jmq708kHFkIxh77/OZZ5cJ++nU5G
zN2/N4XgCZm+4E0nJSSkcg0lfSgE5+ClFj86+XCuP/4cK6y9Oh1IJ3d/UWyd
NfWlEKkbBZRC6KT0XP/8OfYUfOu6k04+rtf8fjfMj0Jcq5U6Fk4n9831lz+F
SNOrub2LTq47R5GMOf/nWCP2wavoP/0x138BFKLouBpPDJ08EGJmplv751iY
xqp/gE4qzvVnIIVI/60TEEcnn1PswqfG/hyT3p0nD9PJQ3P9G0Qh1P7u+jfh
T//weVy4zU+nEEn7yZFEOtkz199/jgPVli9PppNHX/vXRW4KphDD1wy1Uumk
+lz/B/9nfLo9TtPJ/orQD2r+IRRC6dWL+HTUbn5DxNUtCD4feMBjvXggfP8R
q0y2QX84/xWRwRc5fnB9dW+liv194fqH7vjGy/vA/RFH8lzee8H9i9uPqhTT
oH+ije05hz2h/8oGnpcGuUP/TsS4eXxygf5XXd3PscsJxifklnfpT3sYv/xt
r90ZtjC+wx+CONipMP4kf4+PoAXEB9NyqFzKBOJH+/BbbhVDiC/avsH6cG2I
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

       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma]x-\[Sigma]y\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]x-\[Epsilon]y\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-0.00007074899999999994, 
   0.003466701000000002}, {-279.1850364440083, 210.08081860485981`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6942832598466053`*^9, 3.6942833166708555`*^9}}]
}, Open  ]]
},
WindowSize->{1653, 954},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3253, 97, 92, "Input"],
Cell[3814, 119, 1064, 24, 112, "Input"],
Cell[CellGroupData[{
Cell[4903, 147, 207, 4, 31, "Input"],
Cell[5113, 153, 554, 8, 31, "Output"]
}, Open  ]],
Cell[5682, 164, 13663, 344, 1494, "Input"],
Cell[CellGroupData[{
Cell[19370, 512, 894, 17, 112, "Input"],
Cell[20267, 531, 600, 9, 31, "Output"]
}, Open  ]],
Cell[20882, 543, 5436, 143, 532, "Input"],
Cell[26321, 688, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[26438, 693, 7514, 216, 612, "Input"],
Cell[33955, 911, 1163, 19, 40, "Message"],
Cell[35121, 932, 1199, 20, 21, "Message"],
Cell[36323, 954, 1199, 20, 21, "Message"],
Cell[37525, 976, 1199, 20, 21, "Message"],
Cell[38727, 998, 1249, 21, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40013, 1024, 7336, 209, 612, "Input"],
Cell[47352, 1235, 1079, 18, 40, "Message"],
Cell[48434, 1255, 1117, 19, 21, "Message"],
Cell[49554, 1276, 1117, 19, 21, "Message"],
Cell[50674, 1297, 1115, 19, 21, "Message"],
Cell[51792, 1318, 1163, 20, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52992, 1343, 347, 7, 52, "Input"],
Cell[53342, 1352, 25387, 427, 236, "Output"],
Cell[78732, 1781, 26186, 440, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104955, 2226, 398, 10, 112, "Input"],
Cell[105356, 2238, 99, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105492, 2244, 7261, 212, 612, "Input"],
Cell[112756, 2458, 504, 10, 40, "Message"],
Cell[113263, 2470, 540, 11, 21, "Message"],
Cell[113806, 2483, 542, 11, 21, "Message"],
Cell[114351, 2496, 540, 11, 21, "Message"],
Cell[114894, 2509, 588, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115519, 2526, 7030, 205, 612, "Input"],
Cell[122552, 2733, 506, 10, 40, "Message"],
Cell[123061, 2745, 544, 11, 21, "Message"],
Cell[123608, 2758, 544, 11, 21, "Message"],
Cell[124155, 2771, 542, 11, 21, "Message"],
Cell[124700, 2784, 592, 12, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125329, 2801, 179, 4, 52, "Input"],
Cell[125511, 2807, 25492, 430, 236, "Output"],
Cell[151006, 3239, 25843, 435, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176886, 3679, 452, 11, 112, "Input"],
Cell[177341, 3692, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177475, 3698, 7261, 212, 612, "Input"],
Cell[184739, 3912, 527, 11, 40, "Message"],
Cell[185269, 3925, 566, 12, 21, "Message"],
Cell[185838, 3939, 568, 12, 21, "Message"],
Cell[186409, 3953, 565, 12, 21, "Message"],
Cell[186977, 3967, 616, 13, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187630, 3985, 7030, 205, 612, "Input"],
Cell[194663, 4192, 506, 10, 40, "Message"],
Cell[195172, 4204, 542, 11, 21, "Message"],
Cell[195717, 4217, 572, 12, 21, "Message"],
Cell[196292, 4231, 570, 12, 21, "Message"],
Cell[196865, 4245, 620, 13, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197522, 4263, 179, 4, 52, "Input"],
Cell[197704, 4269, 22953, 389, 230, "Output"],
Cell[220660, 4660, 23290, 394, 236, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
